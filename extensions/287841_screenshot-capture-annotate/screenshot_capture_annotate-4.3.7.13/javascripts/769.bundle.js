(self.webpackChunkAwesomeScreenshot=self.webpackChunkAwesomeScreenshot||[]).push([[769],{2961:(t,e,n)=>{"use strict";n.d(e,{Z:()=>r});const r={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z"}}]},name:"check-circle",theme:"filled"}},6500:(t,e,n)=>{"use strict";n.d(e,{T6:()=>p,VD:()=>d,WE:()=>l,Yt:()=>v,lC:()=>i,py:()=>s,rW:()=>o,s:()=>f,ve:()=>c,vq:()=>u});var r=n(279);function o(t,e,n){return{r:255*(0,r.sh)(t,255),g:255*(0,r.sh)(e,255),b:255*(0,r.sh)(n,255)}}function i(t,e,n){t=(0,r.sh)(t,255),e=(0,r.sh)(e,255),n=(0,r.sh)(n,255);var o=Math.max(t,e,n),i=Math.min(t,e,n),a=0,c=0,s=(o+i)/2;if(o===i)c=0,a=0;else{var l=o-i;switch(c=s>.5?l/(2-o-i):l/(o+i),o){case t:a=(e-n)/l+(e<n?6:0);break;case e:a=(n-t)/l+2;break;case n:a=(t-e)/l+4}a/=6}return{h:a,s:c,l:s}}function a(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*n*(e-t):n<.5?e:n<2/3?t+(e-t)*(2/3-n)*6:t}function c(t,e,n){var o,i,c;if(t=(0,r.sh)(t,360),e=(0,r.sh)(e,100),n=(0,r.sh)(n,100),0===e)i=n,c=n,o=n;else{var s=n<.5?n*(1+e):n+e-n*e,l=2*n-s;o=a(l,s,t+1/3),i=a(l,s,t),c=a(l,s,t-1/3)}return{r:255*o,g:255*i,b:255*c}}function s(t,e,n){t=(0,r.sh)(t,255),e=(0,r.sh)(e,255),n=(0,r.sh)(n,255);var o=Math.max(t,e,n),i=Math.min(t,e,n),a=0,c=o,s=o-i,l=0===o?0:s/o;if(o===i)a=0;else{switch(o){case t:a=(e-n)/s+(e<n?6:0);break;case e:a=(n-t)/s+2;break;case n:a=(t-e)/s+4}a/=6}return{h:a,s:l,v:c}}function l(t,e,n){t=6*(0,r.sh)(t,360),e=(0,r.sh)(e,100),n=(0,r.sh)(n,100);var o=Math.floor(t),i=t-o,a=n*(1-e),c=n*(1-i*e),s=n*(1-(1-i)*e),l=o%6;return{r:255*[n,c,a,a,s,n][l],g:255*[s,n,n,c,a,a][l],b:255*[a,a,s,n,n,c][l]}}function u(t,e,n,o){var i=[(0,r.FZ)(Math.round(t).toString(16)),(0,r.FZ)(Math.round(e).toString(16)),(0,r.FZ)(Math.round(n).toString(16))];return o&&i[0].startsWith(i[0].charAt(1))&&i[1].startsWith(i[1].charAt(1))&&i[2].startsWith(i[2].charAt(1))?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0):i.join("")}function f(t,e,n,o,i){var a=[(0,r.FZ)(Math.round(t).toString(16)),(0,r.FZ)(Math.round(e).toString(16)),(0,r.FZ)(Math.round(n).toString(16)),(0,r.FZ)(h(o))];return i&&a[0].startsWith(a[0].charAt(1))&&a[1].startsWith(a[1].charAt(1))&&a[2].startsWith(a[2].charAt(1))&&a[3].startsWith(a[3].charAt(1))?a[0].charAt(0)+a[1].charAt(0)+a[2].charAt(0)+a[3].charAt(0):a.join("")}function h(t){return Math.round(255*parseFloat(t)).toString(16)}function p(t){return d(t)/255}function d(t){return parseInt(t,16)}function v(t){return{r:t>>16,g:(65280&t)>>8,b:255&t}}},279:(t,e,n)=>{"use strict";function r(t,e){(function(t){return"string"==typeof t&&-1!==t.indexOf(".")&&1===parseFloat(t)})(t)&&(t="100%");var n=function(t){return"string"==typeof t&&-1!==t.indexOf("%")}(t);return t=360===e?t:Math.min(e,Math.max(0,parseFloat(t))),n&&(t=parseInt(String(t*e),10)/100),Math.abs(t-e)<1e-6?1:t=360===e?(t<0?t%e+e:t%e)/parseFloat(String(e)):t%e/parseFloat(String(e))}function o(t){return Math.min(1,Math.max(0,t))}function i(t){return t=parseFloat(t),(isNaN(t)||t<0||t>1)&&(t=1),t}function a(t){return t<=1?"".concat(100*Number(t),"%"):t}function c(t){return 1===t.length?"0"+t:String(t)}n.d(e,{FZ:()=>c,JX:()=>a,V2:()=>o,Yq:()=>i,sh:()=>r})},8866:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a,n:()=>i});var r=n(7294),o=r.createContext(!1),i=function(t){var e=t.children,n=t.disabled,i=r.useContext(o);return r.createElement(o.Provider,{value:n||i},e)};const a=o},7647:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a,q:()=>i});var r=n(7294),o=r.createContext(void 0),i=function(t){var e=t.children,n=t.size;return r.createElement(o.Consumer,null,(function(t){return r.createElement(o.Provider,{value:n||t},e)}))};const a=o},7769:(t,e,n)=>{"use strict";n.d(e,{ZP:()=>W,w6:()=>L});var r=n(7462),o=n(4775),i=n(6077),a=n(6982),c=n(7294),s=n(5671),l=n(3144),u=n(9340),f=n(8557),h=Number.isNaN||function(t){return"number"==typeof t&&t!=t};function p(t,e){if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(r=t[n],o=e[n],!(r===o||h(r)&&h(o)))return!1;var r,o;return!0}var d=n(3008),v=n(7178),m=function(t){(0,u.Z)(n,t);var e=(0,f.Z)(n);function n(t){var o;return(0,s.Z)(this,n),(o=e.call(this,t)).getMemoizedContextValue=function(t,e){void 0===e&&(e=p);var n=null;function r(){for(var r=[],o=0;o<arguments.length;o++)r[o]=arguments[o];if(n&&n.lastThis===this&&e(r,n.lastArgs))return n.lastResult;var i=t.apply(this,r);return n={lastResult:i,lastArgs:r,lastThis:this},i}return r.clear=function(){n=null},r}((function(t){return(0,r.Z)((0,r.Z)({},t),{exist:!0})})),(0,d.f)(t.locale&&t.locale.Modal),o}return(0,l.Z)(n,[{key:"componentDidMount",value:function(){(0,d.f)(this.props.locale&&this.props.locale.Modal)}},{key:"componentDidUpdate",value:function(t){var e=this.props.locale;t.locale!==e&&(0,d.f)(e&&e.Modal)}},{key:"componentWillUnmount",value:function(){(0,d.f)()}},{key:"render",value:function(){var t=this.props,e=t.locale,n=t.children,r=this.getMemoizedContextValue(e);return c.createElement(v.Z.Provider,{value:r},n)}}]),n}(c.Component);m.defaultProps={locale:{}};var g=n(7667),y=n(6805),C=n(9228),Z=n(8648),b=n(3124),x=n(2138),k=n(6500),M=n(8701),w=n(1350),E=n(279),P=function(){function t(e,n){var r;if(void 0===e&&(e=""),void 0===n&&(n={}),e instanceof t)return e;"number"==typeof e&&(e=(0,k.Yt)(e)),this.originalInput=e;var o=(0,w.uA)(e);this.originalInput=e,this.r=o.r,this.g=o.g,this.b=o.b,this.a=o.a,this.roundA=Math.round(100*this.a)/100,this.format=null!==(r=n.format)&&void 0!==r?r:o.format,this.gradientType=n.gradientType,this.r<1&&(this.r=Math.round(this.r)),this.g<1&&(this.g=Math.round(this.g)),this.b<1&&(this.b=Math.round(this.b)),this.isValid=o.ok}return t.prototype.isDark=function(){return this.getBrightness()<128},t.prototype.isLight=function(){return!this.isDark()},t.prototype.getBrightness=function(){var t=this.toRgb();return(299*t.r+587*t.g+114*t.b)/1e3},t.prototype.getLuminance=function(){var t=this.toRgb(),e=t.r/255,n=t.g/255,r=t.b/255;return.2126*(e<=.03928?e/12.92:Math.pow((e+.055)/1.055,2.4))+.7152*(n<=.03928?n/12.92:Math.pow((n+.055)/1.055,2.4))+.0722*(r<=.03928?r/12.92:Math.pow((r+.055)/1.055,2.4))},t.prototype.getAlpha=function(){return this.a},t.prototype.setAlpha=function(t){return this.a=(0,E.Yq)(t),this.roundA=Math.round(100*this.a)/100,this},t.prototype.isMonochrome=function(){return 0===this.toHsl().s},t.prototype.toHsv=function(){var t=(0,k.py)(this.r,this.g,this.b);return{h:360*t.h,s:t.s,v:t.v,a:this.a}},t.prototype.toHsvString=function(){var t=(0,k.py)(this.r,this.g,this.b),e=Math.round(360*t.h),n=Math.round(100*t.s),r=Math.round(100*t.v);return 1===this.a?"hsv(".concat(e,", ").concat(n,"%, ").concat(r,"%)"):"hsva(".concat(e,", ").concat(n,"%, ").concat(r,"%, ").concat(this.roundA,")")},t.prototype.toHsl=function(){var t=(0,k.lC)(this.r,this.g,this.b);return{h:360*t.h,s:t.s,l:t.l,a:this.a}},t.prototype.toHslString=function(){var t=(0,k.lC)(this.r,this.g,this.b),e=Math.round(360*t.h),n=Math.round(100*t.s),r=Math.round(100*t.l);return 1===this.a?"hsl(".concat(e,", ").concat(n,"%, ").concat(r,"%)"):"hsla(".concat(e,", ").concat(n,"%, ").concat(r,"%, ").concat(this.roundA,")")},t.prototype.toHex=function(t){return void 0===t&&(t=!1),(0,k.vq)(this.r,this.g,this.b,t)},t.prototype.toHexString=function(t){return void 0===t&&(t=!1),"#"+this.toHex(t)},t.prototype.toHex8=function(t){return void 0===t&&(t=!1),(0,k.s)(this.r,this.g,this.b,this.a,t)},t.prototype.toHex8String=function(t){return void 0===t&&(t=!1),"#"+this.toHex8(t)},t.prototype.toHexShortString=function(t){return void 0===t&&(t=!1),1===this.a?this.toHexString(t):this.toHex8String(t)},t.prototype.toRgb=function(){return{r:Math.round(this.r),g:Math.round(this.g),b:Math.round(this.b),a:this.a}},t.prototype.toRgbString=function(){var t=Math.round(this.r),e=Math.round(this.g),n=Math.round(this.b);return 1===this.a?"rgb(".concat(t,", ").concat(e,", ").concat(n,")"):"rgba(".concat(t,", ").concat(e,", ").concat(n,", ").concat(this.roundA,")")},t.prototype.toPercentageRgb=function(){var t=function(t){return"".concat(Math.round(100*(0,E.sh)(t,255)),"%")};return{r:t(this.r),g:t(this.g),b:t(this.b),a:this.a}},t.prototype.toPercentageRgbString=function(){var t=function(t){return Math.round(100*(0,E.sh)(t,255))};return 1===this.a?"rgb(".concat(t(this.r),"%, ").concat(t(this.g),"%, ").concat(t(this.b),"%)"):"rgba(".concat(t(this.r),"%, ").concat(t(this.g),"%, ").concat(t(this.b),"%, ").concat(this.roundA,")")},t.prototype.toName=function(){if(0===this.a)return"transparent";if(this.a<1)return!1;for(var t="#"+(0,k.vq)(this.r,this.g,this.b,!1),e=0,n=Object.entries(M.R);e<n.length;e++){var r=n[e],o=r[0];if(t===r[1])return o}return!1},t.prototype.toString=function(t){var e=Boolean(t);t=null!=t?t:this.format;var n=!1,r=this.a<1&&this.a>=0;return e||!r||!t.startsWith("hex")&&"name"!==t?("rgb"===t&&(n=this.toRgbString()),"prgb"===t&&(n=this.toPercentageRgbString()),"hex"!==t&&"hex6"!==t||(n=this.toHexString()),"hex3"===t&&(n=this.toHexString(!0)),"hex4"===t&&(n=this.toHex8String(!0)),"hex8"===t&&(n=this.toHex8String()),"name"===t&&(n=this.toName()),"hsl"===t&&(n=this.toHslString()),"hsv"===t&&(n=this.toHsvString()),n||this.toHexString()):"name"===t&&0===this.a?this.toName():this.toRgbString()},t.prototype.toNumber=function(){return(Math.round(this.r)<<16)+(Math.round(this.g)<<8)+Math.round(this.b)},t.prototype.clone=function(){return new t(this.toString())},t.prototype.lighten=function(e){void 0===e&&(e=10);var n=this.toHsl();return n.l+=e/100,n.l=(0,E.V2)(n.l),new t(n)},t.prototype.brighten=function(e){void 0===e&&(e=10);var n=this.toRgb();return n.r=Math.max(0,Math.min(255,n.r-Math.round(-e/100*255))),n.g=Math.max(0,Math.min(255,n.g-Math.round(-e/100*255))),n.b=Math.max(0,Math.min(255,n.b-Math.round(-e/100*255))),new t(n)},t.prototype.darken=function(e){void 0===e&&(e=10);var n=this.toHsl();return n.l-=e/100,n.l=(0,E.V2)(n.l),new t(n)},t.prototype.tint=function(t){return void 0===t&&(t=10),this.mix("white",t)},t.prototype.shade=function(t){return void 0===t&&(t=10),this.mix("black",t)},t.prototype.desaturate=function(e){void 0===e&&(e=10);var n=this.toHsl();return n.s-=e/100,n.s=(0,E.V2)(n.s),new t(n)},t.prototype.saturate=function(e){void 0===e&&(e=10);var n=this.toHsl();return n.s+=e/100,n.s=(0,E.V2)(n.s),new t(n)},t.prototype.greyscale=function(){return this.desaturate(100)},t.prototype.spin=function(e){var n=this.toHsl(),r=(n.h+e)%360;return n.h=r<0?360+r:r,new t(n)},t.prototype.mix=function(e,n){void 0===n&&(n=50);var r=this.toRgb(),o=new t(e).toRgb(),i=n/100;return new t({r:(o.r-r.r)*i+r.r,g:(o.g-r.g)*i+r.g,b:(o.b-r.b)*i+r.b,a:(o.a-r.a)*i+r.a})},t.prototype.analogous=function(e,n){void 0===e&&(e=6),void 0===n&&(n=30);var r=this.toHsl(),o=360/n,i=[this];for(r.h=(r.h-(o*e>>1)+720)%360;--e;)r.h=(r.h+o)%360,i.push(new t(r));return i},t.prototype.complement=function(){var e=this.toHsl();return e.h=(e.h+180)%360,new t(e)},t.prototype.monochromatic=function(e){void 0===e&&(e=6);for(var n=this.toHsv(),r=n.h,o=n.s,i=n.v,a=[],c=1/e;e--;)a.push(new t({h:r,s:o,v:i})),i=(i+c)%1;return a},t.prototype.splitcomplement=function(){var e=this.toHsl(),n=e.h;return[this,new t({h:(n+72)%360,s:e.s,l:e.l}),new t({h:(n+216)%360,s:e.s,l:e.l})]},t.prototype.onBackground=function(e){var n=this.toRgb(),r=new t(e).toRgb(),o=n.a+r.a*(1-n.a);return new t({r:(n.r*n.a+r.r*r.a*(1-n.a))/o,g:(n.g*n.a+r.g*r.a*(1-n.a))/o,b:(n.b*n.a+r.b*r.a*(1-n.a))/o,a:o})},t.prototype.triad=function(){return this.polyad(3)},t.prototype.tetrad=function(){return this.polyad(4)},t.prototype.polyad=function(e){for(var n=this.toHsl(),r=n.h,o=[this],i=360/e,a=1;a<e;a++)o.push(new t({h:(r+a*i)%360,s:n.s,l:n.l}));return o},t.prototype.equals=function(e){return this.toRgbString()===new t(e).toRgbString()},t}();var N=n(8924),S=n(4958),R="-ant-".concat(Date.now(),"-").concat(Math.random());function A(t,e){var n=function(t,e){var n={},r=function(t,e){var n=t.clone();return(n=(null==e?void 0:e(n))||n).toRgbString()},o=function(t,e){var o=new P(t),i=(0,x.R_)(o.toRgbString());n["".concat(e,"-color")]=r(o),n["".concat(e,"-color-disabled")]=i[1],n["".concat(e,"-color-hover")]=i[4],n["".concat(e,"-color-active")]=i[7],n["".concat(e,"-color-outline")]=o.clone().setAlpha(.2).toRgbString(),n["".concat(e,"-color-deprecated-bg")]=i[1],n["".concat(e,"-color-deprecated-border")]=i[3]};if(e.primaryColor){o(e.primaryColor,"primary");var i=new P(e.primaryColor),a=(0,x.R_)(i.toRgbString());a.forEach((function(t,e){n["primary-".concat(e+1)]=t})),n["primary-color-deprecated-l-35"]=r(i,(function(t){return t.lighten(35)})),n["primary-color-deprecated-l-20"]=r(i,(function(t){return t.lighten(20)})),n["primary-color-deprecated-t-20"]=r(i,(function(t){return t.tint(20)})),n["primary-color-deprecated-t-50"]=r(i,(function(t){return t.tint(50)})),n["primary-color-deprecated-f-12"]=r(i,(function(t){return t.setAlpha(.12*t.getAlpha())}));var c=new P(a[0]);n["primary-color-active-deprecated-f-30"]=r(c,(function(t){return t.setAlpha(.3*t.getAlpha())})),n["primary-color-active-deprecated-d-02"]=r(c,(function(t){return t.darken(2)}))}e.successColor&&o(e.successColor,"success"),e.warningColor&&o(e.warningColor,"warning"),e.errorColor&&o(e.errorColor,"error"),e.infoColor&&o(e.infoColor,"info");var s=Object.keys(n).map((function(e){return"--".concat(t,"-").concat(e,": ").concat(n[e],";")}));return"\n  :root {\n    ".concat(s.join("\n"),"\n  }\n  ").trim()}(t,e);(0,N.Z)()&&(0,S.hq)(n,"".concat(R,"-dynamic-theme"))}var H,T,z=n(8866),I=n(7647),_=["getTargetContainer","getPopupContainer","renderEmpty","pageHeader","input","pagination","form"];function O(){return H||"ant"}function F(){return T||"anticon"}var L=function(){return{getPrefixCls:function(t,e){return e||(t?"".concat(O(),"-").concat(t):O())},getIconPrefixCls:F,getRootPrefixCls:function(t,e){return t||(H||(e&&e.includes("-")?e.replace(/^(.*)-[^-]*$/,"$1"):O()))}}},j=function(t){var e,n,s=t.children,l=t.csp,u=t.autoInsertSpaceInButton,f=t.form,h=t.locale,p=t.componentSize,d=t.direction,v=t.space,g=t.virtual,C=t.dropdownMatchSelectWidth,Z=t.legacyLocale,x=t.parentContext,k=t.iconPrefixCls,M=t.componentDisabled,w=c.useCallback((function(e,n){var r=t.prefixCls;if(n)return n;var o=r||x.getPrefixCls("");return e?"".concat(o,"-").concat(e):o}),[x.getPrefixCls,t.prefixCls]),E=(0,r.Z)((0,r.Z)({},x),{csp:l,autoInsertSpaceInButton:u,locale:h||Z,direction:d,space:v,virtual:g,dropdownMatchSelectWidth:C,getPrefixCls:w});_.forEach((function(e){var n=t[e];n&&(E[e]=n)}));var P=(0,a.Z)((function(){return E}),E,(function(t,e){var n=Object.keys(t),r=Object.keys(e);return n.length!==r.length||n.some((function(n){return t[n]!==e[n]}))})),N=c.useMemo((function(){return{prefixCls:k,csp:l}}),[k,l]),S=s,R={};return h&&(R=(null===(e=h.Form)||void 0===e?void 0:e.defaultValidateMessages)||(null===(n=y.Z.Form)||void 0===n?void 0:n.defaultValidateMessages)||{}),f&&f.validateMessages&&(R=(0,r.Z)((0,r.Z)({},R),f.validateMessages)),Object.keys(R).length>0&&(S=c.createElement(i.RV,{validateMessages:R},s)),h&&(S=c.createElement(m,{locale:h,_ANT_MARK__:"internalMark"},S)),(k||l)&&(S=c.createElement(o.Z.Provider,{value:N},S)),p&&(S=c.createElement(I.q,{size:p},S)),void 0!==M&&(S=c.createElement(z.n,{disabled:M},S)),c.createElement(b.E_.Provider,{value:P},S)},V=function(t){return c.useEffect((function(){t.direction&&(C.ZP.config({rtl:"rtl"===t.direction}),Z.Z.config({rtl:"rtl"===t.direction}))}),[t.direction]),c.createElement(g.Z,null,(function(e,n,o){return c.createElement(b.C,null,(function(e){return c.createElement(j,(0,r.Z)({parentContext:e,legacyLocale:o},t))}))}))};V.ConfigContext=b.E_,V.SizeContext=I.Z,V.config=function(t){var e=t.prefixCls,n=t.iconPrefixCls,r=t.theme;void 0!==e&&(H=e),void 0!==n&&(T=n),r&&A(O(),r)};const W=V},7667:(t,e,n)=>{"use strict";n.d(e,{E:()=>h,Z:()=>f});var r=n(7462),o=n(5671),i=n(3144),a=n(9340),c=n(8557),s=n(7294),l=n(7178),u=n(4350),f=function(t){(0,a.Z)(n,t);var e=(0,c.Z)(n);function n(){return(0,o.Z)(this,n),e.apply(this,arguments)}return(0,i.Z)(n,[{key:"getLocale",value:function(){var t=this.props,e=t.componentName,n=t.defaultLocale||u.Z[null!=e?e:"global"],o=this.context,i=e&&o?o[e]:{};return(0,r.Z)((0,r.Z)({},n instanceof Function?n():n),i||{})}},{key:"getLocaleCode",value:function(){var t=this.context,e=t&&t.locale;return t&&t.exist&&!e?u.Z.locale:e}},{key:"render",value:function(){return this.props.children(this.getLocale(),this.getLocaleCode(),this.context)}}]),n}(s.Component);function h(t,e){var n=s.useContext(l.Z);return[s.useMemo((function(){var o=e||u.Z[t||"global"],i=t&&n?n[t]:{};return(0,r.Z)((0,r.Z)({},"function"==typeof o?o():o),i||{})}),[t,e,n])]}f.defaultProps={componentName:"global"},f.contextType=l.Z},9228:(t,e,n)=>{"use strict";n.d(e,{Df:()=>F,ZP:()=>L,S$:()=>H,z$:()=>I});var r=n(7462),o=n(4942),i=n(9735),a=n(7195),c=n(7918),s=n(1413),l=n(7294);const u={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm32 664c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272zm-32-344a48.01 48.01 0 010-96 48.01 48.01 0 010 96z"}}]},name:"info-circle",theme:"filled"};var f=n(7713),h=function(t,e){return l.createElement(f.Z,(0,s.Z)((0,s.Z)({},t),{},{ref:e,icon:u}))};h.displayName="InfoCircleFilled";const p=l.forwardRef(h);var d,v=n(9267),m=n(6228),g=n.n(m),y=n(8287),C=n(7769),Z=n(9439),b=n(1550),x=n(3124);var k,M,w,E=3,P=1,N="",S="move-up",R=!1,A=!1;function H(){return P++}function T(t,e){var n=t.prefixCls,r=t.getPopupContainer,o=(0,C.w6)(),i=o.getPrefixCls,a=o.getRootPrefixCls,c=o.getIconPrefixCls,s=i("message",n||N),l=a(t.rootPrefixCls,s),u=c();if(d)e({prefixCls:s,rootPrefixCls:l,iconPrefixCls:u,instance:d});else{var f={prefixCls:s,transitionName:R?S:"".concat(l,"-").concat(S),style:{top:k},getContainer:M||r,maxCount:w};y.Z.newInstance(f,(function(t){d?e({prefixCls:s,rootPrefixCls:l,iconPrefixCls:u,instance:d}):(d=t,e({prefixCls:s,rootPrefixCls:l,iconPrefixCls:u,instance:t}))}))}}var z={info:p,success:i.Z,error:a.Z,warning:c.Z,loading:v.Z},I=Object.keys(z);function _(t,e,n){var r,i=void 0!==t.duration?t.duration:E,a=z[t.type],c=g()("".concat(e,"-custom-content"),(r={},(0,o.Z)(r,"".concat(e,"-").concat(t.type),t.type),(0,o.Z)(r,"".concat(e,"-rtl"),!0===A),r));return{key:t.key,duration:i,style:t.style||{},className:t.className,content:l.createElement(C.ZP,{iconPrefixCls:n},l.createElement("div",{className:c},t.icon||a&&l.createElement(a,null),l.createElement("span",null,t.content))),onClose:t.onClose,onClick:t.onClick}}var O={open:function(t){var e=t.key||H(),n=new Promise((function(n){var o=function(){return"function"==typeof t.onClose&&t.onClose(),n(!0)};T(t,(function(n){var i=n.prefixCls,a=n.iconPrefixCls;n.instance.notice(_((0,r.Z)((0,r.Z)({},t),{key:e,onClose:o}),i,a))}))})),o=function(){d&&d.removeNotice(e)};return o.then=function(t,e){return n.then(t,e)},o.promise=n,o},config:function(t){void 0!==t.top&&(k=t.top,d=null),void 0!==t.duration&&(E=t.duration),void 0!==t.prefixCls&&(N=t.prefixCls),void 0!==t.getContainer&&(M=t.getContainer,d=null),void 0!==t.transitionName&&(S=t.transitionName,d=null,R=!0),void 0!==t.maxCount&&(w=t.maxCount,d=null),void 0!==t.rtl&&(A=t.rtl)},destroy:function(t){if(d)if(t){(0,d.removeNotice)(t)}else{var e=d.destroy;e(),d=null}}};function F(t,e){t[e]=function(n,o,i){return function(t){return"[object Object]"===Object.prototype.toString.call(t)&&!!t.content}(n)?t.open((0,r.Z)((0,r.Z)({},n),{type:e})):("function"==typeof o&&(i=o,o=void 0),t.open({content:n,duration:o,type:e,onClose:i}))}}I.forEach((function(t){return F(O,t)})),O.warn=O.warning,O.useMessage=function(t,e){return function(){var n,o,i=null,a={add:function(t,e){null==i||i.component.add(t,e)}},c=(0,b.Z)(a),s=(0,Z.Z)(c,2),u=s[0],f=s[1];var h=l.useRef({});return h.current.open=function(a){var c=a.prefixCls,s=n("message",c),l=n(),f=a.key||H(),h=new Promise((function(n){var c=function(){return"function"==typeof a.onClose&&a.onClose(),n(!0)};t((0,r.Z)((0,r.Z)({},a),{prefixCls:s,rootPrefixCls:l,getPopupContainer:o}),(function(t){var n=t.prefixCls,o=t.instance;i=o,u(e((0,r.Z)((0,r.Z)({},a),{key:f,onClose:c}),n))}))})),p=function(){i&&i.removeNotice(f)};return p.then=function(t,e){return h.then(t,e)},p.promise=h,p},I.forEach((function(t){return F(h.current,t)})),[h.current,l.createElement(x.C,{key:"holder"},(function(t){return n=t.getPrefixCls,o=t.getPopupContainer,f}))]}}(T,_);const L=O},8648:(t,e,n)=>{"use strict";n.d(e,{Z:()=>T});var r=n(7462),o=n(4942),i=n(170),a=n(1892),c=n(208),s=n(1867),l=n(5602),u=n(6228),f=n.n(u),h=n(8287),p=n(7294),d=n(7769),v=n(9439),m=n(1550),g=n(3124);var y,C,Z,b={},x=4.5,k=24,M=24,w="",E="topRight",P=!1;function N(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:k,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:M;switch(t){case"top":e={left:"50%",transform:"translateX(-50%)",right:"auto",top:n,bottom:"auto"};break;case"topLeft":e={left:0,top:n,bottom:"auto"};break;case"topRight":e={right:0,top:n,bottom:"auto"};break;case"bottom":e={left:"50%",transform:"translateX(-50%)",right:"auto",top:"auto",bottom:r};break;case"bottomLeft":e={left:0,top:"auto",bottom:r};break;default:e={right:0,top:"auto",bottom:r}}return e}function S(t,e){var n=t.placement,r=void 0===n?E:n,i=t.top,a=t.bottom,c=t.getContainer,s=void 0===c?y:c,l=t.prefixCls,u=(0,d.w6)(),p=u.getPrefixCls,v=u.getIconPrefixCls,m=p("notification",l||w),g=v(),C="".concat(m,"-").concat(r),x=b[C];if(x)Promise.resolve(x).then((function(t){e({prefixCls:"".concat(m,"-notice"),iconPrefixCls:g,instance:t})}));else{var k=f()("".concat(m,"-").concat(r),(0,o.Z)({},"".concat(m,"-rtl"),!0===P));b[C]=new Promise((function(t){h.Z.newInstance({prefixCls:m,className:k,style:N(r,i,a),getContainer:s,maxCount:Z},(function(n){t(n),e({prefixCls:"".concat(m,"-notice"),iconPrefixCls:g,instance:n})}))}))}}var R={success:i.Z,info:l.Z,error:a.Z,warning:s.Z};function A(t,e,n){var r=t.duration,i=t.icon,a=t.type,s=t.description,l=t.message,u=t.btn,h=t.onClose,v=t.onClick,m=t.key,g=t.style,y=t.className,Z=t.closeIcon,b=void 0===Z?C:Z,k=void 0===r?x:r,M=null;i?M=p.createElement("span",{className:"".concat(e,"-icon")},t.icon):a&&(M=p.createElement(R[a]||null,{className:"".concat(e,"-icon ").concat(e,"-icon-").concat(a)}));var w=p.createElement("span",{className:"".concat(e,"-close-x")},b||p.createElement(c.Z,{className:"".concat(e,"-close-icon")})),E=!s&&M?p.createElement("span",{className:"".concat(e,"-message-single-line-auto-margin")}):null;return{content:p.createElement(d.ZP,{iconPrefixCls:n},p.createElement("div",{className:M?"".concat(e,"-with-icon"):"",role:"alert"},M,p.createElement("div",{className:"".concat(e,"-message")},E,l),p.createElement("div",{className:"".concat(e,"-description")},s),u?p.createElement("span",{className:"".concat(e,"-btn")},u):null)),duration:k,closable:!0,closeIcon:w,onClose:h,onClick:v,key:m,style:g||{},className:f()(y,(0,o.Z)({},"".concat(e,"-").concat(a),!!a))}}var H={open:function(t){S(t,(function(e){var n=e.prefixCls,r=e.iconPrefixCls;e.instance.notice(A(t,n,r))}))},close:function(t){Object.keys(b).forEach((function(e){return Promise.resolve(b[e]).then((function(e){e.removeNotice(t)}))}))},config:function(t){var e=t.duration,n=t.placement,r=t.bottom,o=t.top,i=t.getContainer,a=t.closeIcon,c=t.prefixCls;void 0!==c&&(w=c),void 0!==e&&(x=e),void 0!==n?E=n:t.rtl&&(E="topLeft"),void 0!==r&&(M=r),void 0!==o&&(k=o),void 0!==i&&(y=i),void 0!==a&&(C=a),void 0!==t.rtl&&(P=t.rtl),void 0!==t.maxCount&&(Z=t.maxCount)},destroy:function(){Object.keys(b).forEach((function(t){Promise.resolve(b[t]).then((function(t){t.destroy()})),delete b[t]}))}};["success","info","warning","error"].forEach((function(t){H[t]=function(e){return H.open((0,r.Z)((0,r.Z)({},e),{type:t}))}})),H.warn=H.warning,H.useNotification=function(t,e){return function(){var n,o=null,i={add:function(t,e){null==o||o.component.add(t,e)}},a=(0,m.Z)(i),c=(0,v.Z)(a,2),s=c[0],l=c[1];var u=p.useRef({});return u.current.open=function(i){var a=i.prefixCls,c=n("notification",a);t((0,r.Z)((0,r.Z)({},i),{prefixCls:c}),(function(t){var n=t.prefixCls,r=t.instance;o=r,s(e(i,n))}))},["success","info","warning","error"].forEach((function(t){u.current[t]=function(e){return u.current.open((0,r.Z)((0,r.Z)({},e),{type:t}))}})),[u.current,p.createElement(g.C,{key:"holder"},(function(t){return n=t.getPrefixCls,l}))]}}(S,A);const T=H},9735:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(1413),o=n(7294),i=n(2961),a=n(7713),c=function(t,e){return o.createElement(a.Z,(0,r.Z)((0,r.Z)({},t),{},{ref:e,icon:i.Z}))};c.displayName="CheckCircleFilled";const s=o.forwardRef(c)},170:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(1413),o=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z"}},{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"}}]},name:"check-circle",theme:"outlined"};var a=n(7713),c=function(t,e){return o.createElement(a.Z,(0,r.Z)((0,r.Z)({},t),{},{ref:e,icon:i}))};c.displayName="CheckCircleOutlined";const s=o.forwardRef(c)},1892:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(1413),o=n(7294);const i={icon:{tag:"svg",attrs:{"fill-rule":"evenodd",viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm0 76c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm128.01 198.83c.03 0 .05.01.09.06l45.02 45.01a.2.2 0 01.05.09.12.12 0 010 .07c0 .02-.01.04-.05.08L557.25 512l127.87 127.86a.27.27 0 01.05.06v.02a.12.12 0 010 .07c0 .03-.01.05-.05.09l-45.02 45.02a.2.2 0 01-.09.05.12.12 0 01-.07 0c-.02 0-.04-.01-.08-.05L512 557.25 384.14 685.12c-.04.04-.06.05-.08.05a.12.12 0 01-.07 0c-.03 0-.05-.01-.09-.05l-45.02-45.02a.2.2 0 01-.05-.09.12.12 0 010-.07c0-.02.01-.04.06-.08L466.75 512 338.88 384.14a.27.27 0 01-.05-.06l-.01-.02a.12.12 0 010-.07c0-.03.01-.05.05-.09l45.02-45.02a.2.2 0 01.09-.05.12.12 0 01.07 0c.02 0 .04.01.08.06L512 466.75l127.86-127.86c.04-.05.06-.06.08-.06a.12.12 0 01.07 0z"}}]},name:"close-circle",theme:"outlined"};var a=n(7713),c=function(t,e){return o.createElement(a.Z,(0,r.Z)((0,r.Z)({},t),{},{ref:e,icon:i}))};c.displayName="CloseCircleOutlined";const s=o.forwardRef(c)},7918:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(1413),o=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z"}}]},name:"exclamation-circle",theme:"filled"};var a=n(7713),c=function(t,e){return o.createElement(a.Z,(0,r.Z)((0,r.Z)({},t),{},{ref:e,icon:i}))};c.displayName="ExclamationCircleFilled";const s=o.forwardRef(c)},1867:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(1413),o=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"}},{tag:"path",attrs:{d:"M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z"}}]},name:"exclamation-circle",theme:"outlined"};var a=n(7713),c=function(t,e){return o.createElement(a.Z,(0,r.Z)((0,r.Z)({},t),{},{ref:e,icon:i}))};c.displayName="ExclamationCircleOutlined";const s=o.forwardRef(c)},5602:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(1413),o=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"}},{tag:"path",attrs:{d:"M464 336a48 48 0 1096 0 48 48 0 10-96 0zm72 112h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V456c0-4.4-3.6-8-8-8z"}}]},name:"info-circle",theme:"outlined"};var a=n(7713),c=function(t,e){return o.createElement(a.Z,(0,r.Z)((0,r.Z)({},t),{},{ref:e,icon:i}))};c.displayName="InfoCircleOutlined";const s=o.forwardRef(c)},3587:(t,e,n)=>{"use strict";n.d(e,{V4:()=>o.Z,ZP:()=>i});var r=n(4542),o=n(4173);n(507);const i=r.Z},1784:(t,e,n)=>{"use strict";n.d(e,{Z:()=>p});var r=n(7462),o=n(4942),i=n(5671),a=n(3144),c=n(9340),s=n(8557),l=n(7294),u=n(3935),f=n(5495),h=n.n(f),p=function(t){(0,c.Z)(n,t);var e=(0,s.Z)(n);function n(){var t;(0,i.Z)(this,n);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return(t=e.call.apply(e,[this].concat(o))).closeTimer=null,t.close=function(e){e&&e.stopPropagation(),t.clearCloseTimer();var n=t.props,r=n.onClose,o=n.noticeKey;r&&r(o)},t.startCloseTimer=function(){t.props.duration&&(t.closeTimer=window.setTimeout((function(){t.close()}),1e3*t.props.duration))},t.clearCloseTimer=function(){t.closeTimer&&(clearTimeout(t.closeTimer),t.closeTimer=null)},t}return(0,a.Z)(n,[{key:"componentDidMount",value:function(){this.startCloseTimer()}},{key:"componentDidUpdate",value:function(t){(this.props.duration!==t.duration||this.props.updateMark!==t.updateMark||this.props.visible!==t.visible&&this.props.visible)&&this.restartCloseTimer()}},{key:"componentWillUnmount",value:function(){this.clearCloseTimer()}},{key:"restartCloseTimer",value:function(){this.clearCloseTimer(),this.startCloseTimer()}},{key:"render",value:function(){var t=this,e=this.props,n=e.prefixCls,i=e.className,a=e.closable,c=e.closeIcon,s=e.style,f=e.onClick,p=e.children,d=e.holder,v="".concat(n,"-notice"),m=Object.keys(this.props).reduce((function(e,n){return"data-"!==n.substr(0,5)&&"aria-"!==n.substr(0,5)&&"role"!==n||(e[n]=t.props[n]),e}),{}),g=l.createElement("div",(0,r.Z)({className:h()(v,i,(0,o.Z)({},"".concat(v,"-closable"),a)),style:s,onMouseEnter:this.clearCloseTimer,onMouseLeave:this.startCloseTimer,onClick:f},m),l.createElement("div",{className:"".concat(v,"-content")},p),a?l.createElement("a",{tabIndex:0,onClick:this.close,className:"".concat(v,"-close")},c||l.createElement("span",{className:"".concat(v,"-close-x")})):null);return d?u.createPortal(g,d):g}}]),n}(l.Component);p.defaultProps={onClose:function(){},duration:1.5}},8287:(t,e,n)=>{"use strict";n.d(e,{Z:()=>x});var r=n(4925),o=n(7462),i=n(1413),a=n(5671),c=n(3144),s=n(9340),l=n(8557),u=n(7294),f=n(8135),h=n(5495),p=n.n(h),d=n(3587),v=n(1784),m=n(1550),g=["getContainer"],y=0,C=Date.now();function Z(){var t=y;return y+=1,"rcNotification_".concat(C,"_").concat(t)}var b=function(t){(0,s.Z)(n,t);var e=(0,l.Z)(n);function n(){var t;(0,a.Z)(this,n);for(var r=arguments.length,o=new Array(r),c=0;c<r;c++)o[c]=arguments[c];return(t=e.call.apply(e,[this].concat(o))).state={notices:[]},t.hookRefs=new Map,t.add=function(e,n){var r,o=null!==(r=e.key)&&void 0!==r?r:Z(),a=(0,i.Z)((0,i.Z)({},e),{},{key:o}),c=t.props.maxCount;t.setState((function(t){var e=t.notices,r=e.map((function(t){return t.notice.key})).indexOf(o),i=e.concat();return-1!==r?i.splice(r,1,{notice:a,holderCallback:n}):(c&&e.length>=c&&(a.key=i[0].notice.key,a.updateMark=Z(),a.userPassKey=o,i.shift()),i.push({notice:a,holderCallback:n})),{notices:i}}))},t.remove=function(e){t.setState((function(t){return{notices:t.notices.filter((function(t){var n=t.notice,r=n.key,o=n.userPassKey;return(null!=o?o:r)!==e}))}}))},t.noticePropsMap={},t}return(0,c.Z)(n,[{key:"getTransitionName",value:function(){var t=this.props,e=t.prefixCls,n=t.animation,r=this.props.transitionName;return!r&&n&&(r="".concat(e,"-").concat(n)),r}},{key:"render",value:function(){var t=this,e=this.state.notices,n=this.props,r=n.prefixCls,a=n.className,c=n.closeIcon,s=n.style,l=[];return e.forEach((function(n,o){var a=n.notice,s=n.holderCallback,u=o===e.length-1?a.updateMark:void 0,f=a.key,h=a.userPassKey,p=(0,i.Z)((0,i.Z)((0,i.Z)({prefixCls:r,closeIcon:c},a),a.props),{},{key:f,noticeKey:h||f,updateMark:u,onClose:function(e){var n;t.remove(e),null===(n=a.onClose)||void 0===n||n.call(a)},onClick:a.onClick,children:a.content});l.push(f),t.noticePropsMap[f]={props:p,holderCallback:s}})),u.createElement("div",{className:p()(r,a),style:s},u.createElement(d.V4,{keys:l,motionName:this.getTransitionName(),onVisibleChanged:function(e,n){var r=n.key;e||delete t.noticePropsMap[r]}},(function(e){var n=e.key,a=e.className,c=e.style,s=e.visible,l=t.noticePropsMap[n],f=l.props,h=l.holderCallback;return h?u.createElement("div",{key:n,className:p()(a,"".concat(r,"-hook-holder")),style:(0,i.Z)({},c),ref:function(e){void 0!==n&&(e?(t.hookRefs.set(n,e),h(e,f)):t.hookRefs.delete(n))}}):u.createElement(v.Z,(0,o.Z)({},f,{className:p()(a,null==f?void 0:f.className),style:(0,i.Z)((0,i.Z)({},c),null==f?void 0:f.style),visible:s}))})))}}]),n}(u.Component);b.newInstance=void 0,b.defaultProps={prefixCls:"rc-notification",animation:"fade",style:{top:65,left:"50%"}},b.newInstance=function(t,e){var n=t||{},i=n.getContainer,a=(0,r.Z)(n,g),c=document.createElement("div");i?i().appendChild(c):document.body.appendChild(c);var s=!1;(0,f.s)(u.createElement(b,(0,o.Z)({},a,{ref:function(t){s||(s=!0,e({notice:function(e){t.add(e)},removeNotice:function(e){t.remove(e)},component:t,destroy:function(){(0,f.v)(c),c.parentNode&&c.parentNode.removeChild(c)},useNotification:function(){return(0,m.Z)(t)}}))}})),c)};const x=b},1550:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(3433),o=n(7462),i=n(9439),a=n(7294),c=n(1784);function s(t){var e=a.useRef({}),n=a.useState([]),s=(0,i.Z)(n,2),l=s[0],u=s[1];return[function(n){var i=!0;t.add(n,(function(t,n){var s=n.key;if(t&&(!e.current[s]||i)){var l=a.createElement(c.Z,(0,o.Z)({},n,{holder:t}));e.current[s]=l,u((function(t){var e=t.findIndex((function(t){return t.key===n.key}));if(-1===e)return[].concat((0,r.Z)(t),[l]);var o=(0,r.Z)(t);return o[e]=l,o}))}i=!1}))},a.createElement(a.Fragment,null,l)]}},5495:(t,e)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function o(){for(var t=[],e=0;e<arguments.length;e++){var n=arguments[e];if(n){var i=typeof n;if("string"===i||"number"===i)t.push(n);else if(Array.isArray(n)){if(n.length){var a=o.apply(null,n);a&&t.push(a)}}else if("object"===i){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){t.push(n.toString());continue}for(var c in n)r.call(n,c)&&n[c]&&t.push(c)}}}return t.join(" ")}t.exports?(o.default=o,t.exports=o):void 0===(n=function(){return o}.apply(e,[]))||(t.exports=n)}()},8135:(t,e,n)=>{"use strict";var r;n.d(e,{s:()=>m,v:()=>Z});var o,i=n(4165),a=n(5861),c=n(1002),s=n(1413),l=n(3935),u=(0,s.Z)({},r||(r=n.t(l,2))),f=u.version,h=u.render,p=u.unmountComponentAtNode;try{Number((f||"").split(".")[0])>=18&&(o=u.createRoot)}catch(t){}function d(t){var e=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;e&&"object"===(0,c.Z)(e)&&(e.usingClientEntryPoint=t)}var v="__rc_react_root__";function m(t,e){o?function(t,e){d(!0);var n=e[v]||o(e);d(!1),n.render(t),e[v]=n}(t,e):function(t,e){h(t,e)}(t,e)}function g(t){return y.apply(this,arguments)}function y(){return(y=(0,a.Z)((0,i.Z)().mark((function t(e){return(0,i.Z)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",Promise.resolve().then((function(){var t;null===(t=e[v])||void 0===t||t.unmount(),delete e[v]})));case 1:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function C(t){p(t)}function Z(t){return b.apply(this,arguments)}function b(){return(b=(0,a.Z)((0,i.Z)().mark((function t(e){return(0,i.Z)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(void 0===o){t.next=2;break}return t.abrupt("return",g(e));case 2:C(e);case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVFDLFVBQVVHLE1BQUssV0FDdEQsSUFBSTZMLEVBQ29DLFFBQXZDQSxFQUFrQmQsRUFBVUQsVUFBdUMsSUFBcEJlLEdBQThCQSxFQUFnQkMsaUJBQ3ZGZixFQUFVRCxFQUNuQixLQUNGLEtBQUssRUFDTCxJQUFLLE1BQ0gsT0FBT1csRUFBU00sT0FFdEIsR0FBR1IsRUFDTCxNQUNzQjNhLE1BQU1iLEtBQU1TLFVBQ3BDLENBQ0EsU0FBU3diLEVBQWNqQixHQUNyQlAsRUFBdUJPLEVBQ3pCLENBUU8sU0FBU2UsRUFBUUcsR0FDdEIsT0FBT0MsRUFBU3RiLE1BQU1iLEtBQU1TLFVBQzlCLENBQ0EsU0FBUzBiLElBa0JQLE9BakJBQSxHQUFXLFFBQWdDLFNBQXNCWixNQUFLLFNBQVNhLEVBQVNwQixHQUN0RixPQUFPLFNBQXNCUyxNQUFLLFNBQW1CWSxHQUNuRCxjQUFrQkEsRUFBVVYsS0FBT1UsRUFBVVQsTUFDM0MsS0FBSyxFQUNILFFBQXFCNWMsSUFBZnFiLEVBQTJCLENBQy9CZ0MsRUFBVVQsS0FBTyxFQUNqQixLQUNGLENBQ0EsT0FBT1MsRUFBVVIsT0FBTyxTQUFVVCxFQUFjSixJQUNsRCxLQUFLLEVBQ0hpQixFQUFjakIsR0FDaEIsS0FBSyxFQUNMLElBQUssTUFDSCxPQUFPcUIsRUFBVUwsT0FFdkIsR0FBR0ksRUFDTCxNQUNnQnZiLE1BQU1iLEtBQU1TLFVBQzlCLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy1zdmcvZXMvYXNuL0NoZWNrQ2lyY2xlRmlsbGVkLmpzIiwid2VicGFjazovL0F3ZXNvbWVTY3JlZW5zaG90Ly4vbm9kZV9tb2R1bGVzL0BjdHJsL3Rpbnljb2xvci9kaXN0L21vZHVsZS9jb252ZXJzaW9uLmpzIiwid2VicGFjazovL0F3ZXNvbWVTY3JlZW5zaG90Ly4vbm9kZV9tb2R1bGVzL0BjdHJsL3Rpbnljb2xvci9kaXN0L21vZHVsZS91dGlsLmpzIiwid2VicGFjazovL0F3ZXNvbWVTY3JlZW5zaG90Ly4vbm9kZV9tb2R1bGVzL2FudGQvZXMvY29uZmlnLXByb3ZpZGVyL0Rpc2FibGVkQ29udGV4dC5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL2NvbmZpZy1wcm92aWRlci9TaXplQ29udGV4dC5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9tZW1vaXplLW9uZS9kaXN0L21lbW9pemUtb25lLmVzbS5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL2xvY2FsZS1wcm92aWRlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9AY3RybC90aW55Y29sb3IvZGlzdC9tb2R1bGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vQXdlc29tZVNjcmVlbnNob3QvLi9ub2RlX21vZHVsZXMvYW50ZC9lcy9jb25maWctcHJvdmlkZXIvY3NzVmFyaWFibGVzLmpzIiwid2VicGFjazovL0F3ZXNvbWVTY3JlZW5zaG90Ly4vbm9kZV9tb2R1bGVzL2FudGQvZXMvY29uZmlnLXByb3ZpZGVyL2luZGV4LmpzIiwid2VicGFjazovL0F3ZXNvbWVTY3JlZW5zaG90Ly4vbm9kZV9tb2R1bGVzL2FudGQvZXMvbG9jYWxlLXByb3ZpZGVyL0xvY2FsZVJlY2VpdmVyLmpzIiwid2VicGFjazovL0F3ZXNvbWVTY3JlZW5zaG90Ly4vbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zLXN2Zy9lcy9hc24vSW5mb0NpcmNsZUZpbGxlZC5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9hbnRkL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy9lcy9pY29ucy9JbmZvQ2lyY2xlRmlsbGVkLmpzIiwid2VicGFjazovL0F3ZXNvbWVTY3JlZW5zaG90Ly4vbm9kZV9tb2R1bGVzL2FudGQvZXMvbWVzc2FnZS9pbmRleC5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL21lc3NhZ2UvaG9va3MvdXNlTWVzc2FnZS5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL25vdGlmaWNhdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL25vdGlmaWNhdGlvbi9ob29rcy91c2VOb3RpZmljYXRpb24uanMiLCJ3ZWJwYWNrOi8vQXdlc29tZVNjcmVlbnNob3QvLi9ub2RlX21vZHVsZXMvYW50ZC9ub2RlX21vZHVsZXMvQGFudC1kZXNpZ24vaWNvbnMvZXMvaWNvbnMvQ2hlY2tDaXJjbGVGaWxsZWQuanMiLCJ3ZWJwYWNrOi8vQXdlc29tZVNjcmVlbnNob3QvLi9ub2RlX21vZHVsZXMvQGFudC1kZXNpZ24vaWNvbnMtc3ZnL2VzL2Fzbi9DaGVja0NpcmNsZU91dGxpbmVkLmpzIiwid2VicGFjazovL0F3ZXNvbWVTY3JlZW5zaG90Ly4vbm9kZV9tb2R1bGVzL2FudGQvbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zL2VzL2ljb25zL0NoZWNrQ2lyY2xlT3V0bGluZWQuanMiLCJ3ZWJwYWNrOi8vQXdlc29tZVNjcmVlbnNob3QvLi9ub2RlX21vZHVsZXMvQGFudC1kZXNpZ24vaWNvbnMtc3ZnL2VzL2Fzbi9DbG9zZUNpcmNsZU91dGxpbmVkLmpzIiwid2VicGFjazovL0F3ZXNvbWVTY3JlZW5zaG90Ly4vbm9kZV9tb2R1bGVzL2FudGQvbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zL2VzL2ljb25zL0Nsb3NlQ2lyY2xlT3V0bGluZWQuanMiLCJ3ZWJwYWNrOi8vQXdlc29tZVNjcmVlbnNob3QvLi9ub2RlX21vZHVsZXMvQGFudC1kZXNpZ24vaWNvbnMtc3ZnL2VzL2Fzbi9FeGNsYW1hdGlvbkNpcmNsZUZpbGxlZC5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9hbnRkL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy9lcy9pY29ucy9FeGNsYW1hdGlvbkNpcmNsZUZpbGxlZC5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy1zdmcvZXMvYXNuL0V4Y2xhbWF0aW9uQ2lyY2xlT3V0bGluZWQuanMiLCJ3ZWJwYWNrOi8vQXdlc29tZVNjcmVlbnNob3QvLi9ub2RlX21vZHVsZXMvYW50ZC9ub2RlX21vZHVsZXMvQGFudC1kZXNpZ24vaWNvbnMvZXMvaWNvbnMvRXhjbGFtYXRpb25DaXJjbGVPdXRsaW5lZC5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy1zdmcvZXMvYXNuL0luZm9DaXJjbGVPdXRsaW5lZC5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9hbnRkL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy9lcy9pY29ucy9JbmZvQ2lyY2xlT3V0bGluZWQuanMiLCJ3ZWJwYWNrOi8vQXdlc29tZVNjcmVlbnNob3QvLi9ub2RlX21vZHVsZXMvcmMtbW90aW9uL2VzL2luZGV4LmpzIiwid2VicGFjazovL0F3ZXNvbWVTY3JlZW5zaG90Ly4vbm9kZV9tb2R1bGVzL3JjLW5vdGlmaWNhdGlvbi9lcy9Ob3RpY2UuanMiLCJ3ZWJwYWNrOi8vQXdlc29tZVNjcmVlbnNob3QvLi9ub2RlX21vZHVsZXMvcmMtbm90aWZpY2F0aW9uL2VzL05vdGlmaWNhdGlvbi5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9yYy1ub3RpZmljYXRpb24vZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vQXdlc29tZVNjcmVlbnNob3QvLi9ub2RlX21vZHVsZXMvcmMtbm90aWZpY2F0aW9uL2VzL3VzZU5vdGlmaWNhdGlvbi5qcyIsIndlYnBhY2s6Ly9Bd2Vzb21lU2NyZWVuc2hvdC8uL25vZGVfbW9kdWxlcy9yYy1ub3RpZmljYXRpb24vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vQXdlc29tZVNjcmVlbnNob3QvLi9ub2RlX21vZHVsZXMvcmMtdXRpbC9lcy9SZWFjdC9yZW5kZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBpY29uIGZpbGUgaXMgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkuXG52YXIgQ2hlY2tDaXJjbGVGaWxsZWQgPSB7IFwiaWNvblwiOiB7IFwidGFnXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInZpZXdCb3hcIjogXCI2NCA2NCA4OTYgODk2XCIsIFwiZm9jdXNhYmxlXCI6IFwiZmFsc2VcIiB9LCBcImNoaWxkcmVuXCI6IFt7IFwidGFnXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTUxMiA2NEMyNjQuNiA2NCA2NCAyNjQuNiA2NCA1MTJzMjAwLjYgNDQ4IDQ0OCA0NDggNDQ4LTIwMC42IDQ0OC00NDhTNzU5LjQgNjQgNTEyIDY0em0xOTMuNSAzMDEuN2wtMjEwLjYgMjkyYTMxLjggMzEuOCAwIDAxLTUxLjcgMEwzMTguNSA0ODQuOWMtMy44LTUuMyAwLTEyLjcgNi41LTEyLjdoNDYuOWMxMC4yIDAgMTkuOSA0LjkgMjUuOSAxMy4zbDcxLjIgOTguOCAxNTcuMi0yMThjNi04LjMgMTUuNi0xMy4zIDI1LjktMTMuM0g2OTljNi41IDAgMTAuMyA3LjQgNi41IDEyLjd6XCIgfSB9XSB9LCBcIm5hbWVcIjogXCJjaGVjay1jaXJjbGVcIiwgXCJ0aGVtZVwiOiBcImZpbGxlZFwiIH07XG5leHBvcnQgZGVmYXVsdCBDaGVja0NpcmNsZUZpbGxlZDtcbiIsImltcG9ydCB7IGJvdW5kMDEsIHBhZDIgfSBmcm9tICcuL3V0aWwuanMnO1xuLy8gYHJnYlRvSHNsYCwgYHJnYlRvSHN2YCwgYGhzbFRvUmdiYCwgYGhzdlRvUmdiYCBtb2RpZmllZCBmcm9tOlxuLy8gPGh0dHA6Ly9tamlqYWNrc29uLmNvbS8yMDA4LzAyL3JnYi10by1oc2wtYW5kLXJnYi10by1oc3YtY29sb3ItbW9kZWwtY29udmVyc2lvbi1hbGdvcml0aG1zLWluLWphdmFzY3JpcHQ+XG4vKipcbiAqIEhhbmRsZSBib3VuZHMgLyBwZXJjZW50YWdlIGNoZWNraW5nIHRvIGNvbmZvcm0gdG8gQ1NTIGNvbG9yIHNwZWNcbiAqIDxodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLWNvbG9yLz5cbiAqICpBc3N1bWVzOiogciwgZywgYiBpbiBbMCwgMjU1XSBvciBbMCwgMV1cbiAqICpSZXR1cm5zOiogeyByLCBnLCBiIH0gaW4gWzAsIDI1NV1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJnYlRvUmdiKHIsIGcsIGIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICByOiBib3VuZDAxKHIsIDI1NSkgKiAyNTUsXG4gICAgICAgIGc6IGJvdW5kMDEoZywgMjU1KSAqIDI1NSxcbiAgICAgICAgYjogYm91bmQwMShiLCAyNTUpICogMjU1LFxuICAgIH07XG59XG4vKipcbiAqIENvbnZlcnRzIGFuIFJHQiBjb2xvciB2YWx1ZSB0byBIU0wuXG4gKiAqQXNzdW1lczoqIHIsIGcsIGFuZCBiIGFyZSBjb250YWluZWQgaW4gWzAsIDI1NV0gb3IgWzAsIDFdXG4gKiAqUmV0dXJuczoqIHsgaCwgcywgbCB9IGluIFswLDFdXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZ2JUb0hzbChyLCBnLCBiKSB7XG4gICAgciA9IGJvdW5kMDEociwgMjU1KTtcbiAgICBnID0gYm91bmQwMShnLCAyNTUpO1xuICAgIGIgPSBib3VuZDAxKGIsIDI1NSk7XG4gICAgdmFyIG1heCA9IE1hdGgubWF4KHIsIGcsIGIpO1xuICAgIHZhciBtaW4gPSBNYXRoLm1pbihyLCBnLCBiKTtcbiAgICB2YXIgaCA9IDA7XG4gICAgdmFyIHMgPSAwO1xuICAgIHZhciBsID0gKG1heCArIG1pbikgLyAyO1xuICAgIGlmIChtYXggPT09IG1pbikge1xuICAgICAgICBzID0gMDtcbiAgICAgICAgaCA9IDA7IC8vIGFjaHJvbWF0aWNcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHZhciBkID0gbWF4IC0gbWluO1xuICAgICAgICBzID0gbCA+IDAuNSA/IGQgLyAoMiAtIG1heCAtIG1pbikgOiBkIC8gKG1heCArIG1pbik7XG4gICAgICAgIHN3aXRjaCAobWF4KSB7XG4gICAgICAgICAgICBjYXNlIHI6XG4gICAgICAgICAgICAgICAgaCA9IChnIC0gYikgLyBkICsgKGcgPCBiID8gNiA6IDApO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBnOlxuICAgICAgICAgICAgICAgIGggPSAoYiAtIHIpIC8gZCArIDI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIGI6XG4gICAgICAgICAgICAgICAgaCA9IChyIC0gZykgLyBkICsgNDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgaCAvPSA2O1xuICAgIH1cbiAgICByZXR1cm4geyBoOiBoLCBzOiBzLCBsOiBsIH07XG59XG5mdW5jdGlvbiBodWUycmdiKHAsIHEsIHQpIHtcbiAgICBpZiAodCA8IDApIHtcbiAgICAgICAgdCArPSAxO1xuICAgIH1cbiAgICBpZiAodCA+IDEpIHtcbiAgICAgICAgdCAtPSAxO1xuICAgIH1cbiAgICBpZiAodCA8IDEgLyA2KSB7XG4gICAgICAgIHJldHVybiBwICsgKHEgLSBwKSAqICg2ICogdCk7XG4gICAgfVxuICAgIGlmICh0IDwgMSAvIDIpIHtcbiAgICAgICAgcmV0dXJuIHE7XG4gICAgfVxuICAgIGlmICh0IDwgMiAvIDMpIHtcbiAgICAgICAgcmV0dXJuIHAgKyAocSAtIHApICogKDIgLyAzIC0gdCkgKiA2O1xuICAgIH1cbiAgICByZXR1cm4gcDtcbn1cbi8qKlxuICogQ29udmVydHMgYW4gSFNMIGNvbG9yIHZhbHVlIHRvIFJHQi5cbiAqXG4gKiAqQXNzdW1lczoqIGggaXMgY29udGFpbmVkIGluIFswLCAxXSBvciBbMCwgMzYwXSBhbmQgcyBhbmQgbCBhcmUgY29udGFpbmVkIFswLCAxXSBvciBbMCwgMTAwXVxuICogKlJldHVybnM6KiB7IHIsIGcsIGIgfSBpbiB0aGUgc2V0IFswLCAyNTVdXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoc2xUb1JnYihoLCBzLCBsKSB7XG4gICAgdmFyIHI7XG4gICAgdmFyIGc7XG4gICAgdmFyIGI7XG4gICAgaCA9IGJvdW5kMDEoaCwgMzYwKTtcbiAgICBzID0gYm91bmQwMShzLCAxMDApO1xuICAgIGwgPSBib3VuZDAxKGwsIDEwMCk7XG4gICAgaWYgKHMgPT09IDApIHtcbiAgICAgICAgLy8gYWNocm9tYXRpY1xuICAgICAgICBnID0gbDtcbiAgICAgICAgYiA9IGw7XG4gICAgICAgIHIgPSBsO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdmFyIHEgPSBsIDwgMC41ID8gbCAqICgxICsgcykgOiBsICsgcyAtIGwgKiBzO1xuICAgICAgICB2YXIgcCA9IDIgKiBsIC0gcTtcbiAgICAgICAgciA9IGh1ZTJyZ2IocCwgcSwgaCArIDEgLyAzKTtcbiAgICAgICAgZyA9IGh1ZTJyZ2IocCwgcSwgaCk7XG4gICAgICAgIGIgPSBodWUycmdiKHAsIHEsIGggLSAxIC8gMyk7XG4gICAgfVxuICAgIHJldHVybiB7IHI6IHIgKiAyNTUsIGc6IGcgKiAyNTUsIGI6IGIgKiAyNTUgfTtcbn1cbi8qKlxuICogQ29udmVydHMgYW4gUkdCIGNvbG9yIHZhbHVlIHRvIEhTVlxuICpcbiAqICpBc3N1bWVzOiogciwgZywgYW5kIGIgYXJlIGNvbnRhaW5lZCBpbiB0aGUgc2V0IFswLCAyNTVdIG9yIFswLCAxXVxuICogKlJldHVybnM6KiB7IGgsIHMsIHYgfSBpbiBbMCwxXVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmdiVG9Ic3YociwgZywgYikge1xuICAgIHIgPSBib3VuZDAxKHIsIDI1NSk7XG4gICAgZyA9IGJvdW5kMDEoZywgMjU1KTtcbiAgICBiID0gYm91bmQwMShiLCAyNTUpO1xuICAgIHZhciBtYXggPSBNYXRoLm1heChyLCBnLCBiKTtcbiAgICB2YXIgbWluID0gTWF0aC5taW4ociwgZywgYik7XG4gICAgdmFyIGggPSAwO1xuICAgIHZhciB2ID0gbWF4O1xuICAgIHZhciBkID0gbWF4IC0gbWluO1xuICAgIHZhciBzID0gbWF4ID09PSAwID8gMCA6IGQgLyBtYXg7XG4gICAgaWYgKG1heCA9PT0gbWluKSB7XG4gICAgICAgIGggPSAwOyAvLyBhY2hyb21hdGljXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBzd2l0Y2ggKG1heCkge1xuICAgICAgICAgICAgY2FzZSByOlxuICAgICAgICAgICAgICAgIGggPSAoZyAtIGIpIC8gZCArIChnIDwgYiA/IDYgOiAwKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgZzpcbiAgICAgICAgICAgICAgICBoID0gKGIgLSByKSAvIGQgKyAyO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBiOlxuICAgICAgICAgICAgICAgIGggPSAociAtIGcpIC8gZCArIDQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGggLz0gNjtcbiAgICB9XG4gICAgcmV0dXJuIHsgaDogaCwgczogcywgdjogdiB9O1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhbiBIU1YgY29sb3IgdmFsdWUgdG8gUkdCLlxuICpcbiAqICpBc3N1bWVzOiogaCBpcyBjb250YWluZWQgaW4gWzAsIDFdIG9yIFswLCAzNjBdIGFuZCBzIGFuZCB2IGFyZSBjb250YWluZWQgaW4gWzAsIDFdIG9yIFswLCAxMDBdXG4gKiAqUmV0dXJuczoqIHsgciwgZywgYiB9IGluIHRoZSBzZXQgWzAsIDI1NV1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhzdlRvUmdiKGgsIHMsIHYpIHtcbiAgICBoID0gYm91bmQwMShoLCAzNjApICogNjtcbiAgICBzID0gYm91bmQwMShzLCAxMDApO1xuICAgIHYgPSBib3VuZDAxKHYsIDEwMCk7XG4gICAgdmFyIGkgPSBNYXRoLmZsb29yKGgpO1xuICAgIHZhciBmID0gaCAtIGk7XG4gICAgdmFyIHAgPSB2ICogKDEgLSBzKTtcbiAgICB2YXIgcSA9IHYgKiAoMSAtIGYgKiBzKTtcbiAgICB2YXIgdCA9IHYgKiAoMSAtICgxIC0gZikgKiBzKTtcbiAgICB2YXIgbW9kID0gaSAlIDY7XG4gICAgdmFyIHIgPSBbdiwgcSwgcCwgcCwgdCwgdl1bbW9kXTtcbiAgICB2YXIgZyA9IFt0LCB2LCB2LCBxLCBwLCBwXVttb2RdO1xuICAgIHZhciBiID0gW3AsIHAsIHQsIHYsIHYsIHFdW21vZF07XG4gICAgcmV0dXJuIHsgcjogciAqIDI1NSwgZzogZyAqIDI1NSwgYjogYiAqIDI1NSB9O1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhbiBSR0IgY29sb3IgdG8gaGV4XG4gKlxuICogQXNzdW1lcyByLCBnLCBhbmQgYiBhcmUgY29udGFpbmVkIGluIHRoZSBzZXQgWzAsIDI1NV1cbiAqIFJldHVybnMgYSAzIG9yIDYgY2hhcmFjdGVyIGhleFxuICovXG5leHBvcnQgZnVuY3Rpb24gcmdiVG9IZXgociwgZywgYiwgYWxsb3czQ2hhcikge1xuICAgIHZhciBoZXggPSBbXG4gICAgICAgIHBhZDIoTWF0aC5yb3VuZChyKS50b1N0cmluZygxNikpLFxuICAgICAgICBwYWQyKE1hdGgucm91bmQoZykudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgcGFkMihNYXRoLnJvdW5kKGIpLnRvU3RyaW5nKDE2KSksXG4gICAgXTtcbiAgICAvLyBSZXR1cm4gYSAzIGNoYXJhY3RlciBoZXggaWYgcG9zc2libGVcbiAgICBpZiAoYWxsb3czQ2hhciAmJlxuICAgICAgICBoZXhbMF0uc3RhcnRzV2l0aChoZXhbMF0uY2hhckF0KDEpKSAmJlxuICAgICAgICBoZXhbMV0uc3RhcnRzV2l0aChoZXhbMV0uY2hhckF0KDEpKSAmJlxuICAgICAgICBoZXhbMl0uc3RhcnRzV2l0aChoZXhbMl0uY2hhckF0KDEpKSkge1xuICAgICAgICByZXR1cm4gaGV4WzBdLmNoYXJBdCgwKSArIGhleFsxXS5jaGFyQXQoMCkgKyBoZXhbMl0uY2hhckF0KDApO1xuICAgIH1cbiAgICByZXR1cm4gaGV4LmpvaW4oJycpO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhbiBSR0JBIGNvbG9yIHBsdXMgYWxwaGEgdHJhbnNwYXJlbmN5IHRvIGhleFxuICpcbiAqIEFzc3VtZXMgciwgZywgYiBhcmUgY29udGFpbmVkIGluIHRoZSBzZXQgWzAsIDI1NV0gYW5kXG4gKiBhIGluIFswLCAxXS4gUmV0dXJucyBhIDQgb3IgOCBjaGFyYWN0ZXIgcmdiYSBoZXhcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1wYXJhbXNcbmV4cG9ydCBmdW5jdGlvbiByZ2JhVG9IZXgociwgZywgYiwgYSwgYWxsb3c0Q2hhcikge1xuICAgIHZhciBoZXggPSBbXG4gICAgICAgIHBhZDIoTWF0aC5yb3VuZChyKS50b1N0cmluZygxNikpLFxuICAgICAgICBwYWQyKE1hdGgucm91bmQoZykudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgcGFkMihNYXRoLnJvdW5kKGIpLnRvU3RyaW5nKDE2KSksXG4gICAgICAgIHBhZDIoY29udmVydERlY2ltYWxUb0hleChhKSksXG4gICAgXTtcbiAgICAvLyBSZXR1cm4gYSA0IGNoYXJhY3RlciBoZXggaWYgcG9zc2libGVcbiAgICBpZiAoYWxsb3c0Q2hhciAmJlxuICAgICAgICBoZXhbMF0uc3RhcnRzV2l0aChoZXhbMF0uY2hhckF0KDEpKSAmJlxuICAgICAgICBoZXhbMV0uc3RhcnRzV2l0aChoZXhbMV0uY2hhckF0KDEpKSAmJlxuICAgICAgICBoZXhbMl0uc3RhcnRzV2l0aChoZXhbMl0uY2hhckF0KDEpKSAmJlxuICAgICAgICBoZXhbM10uc3RhcnRzV2l0aChoZXhbM10uY2hhckF0KDEpKSkge1xuICAgICAgICByZXR1cm4gaGV4WzBdLmNoYXJBdCgwKSArIGhleFsxXS5jaGFyQXQoMCkgKyBoZXhbMl0uY2hhckF0KDApICsgaGV4WzNdLmNoYXJBdCgwKTtcbiAgICB9XG4gICAgcmV0dXJuIGhleC5qb2luKCcnKTtcbn1cbi8qKlxuICogQ29udmVydHMgYW4gUkdCQSBjb2xvciB0byBhbiBBUkdCIEhleDggc3RyaW5nXG4gKiBSYXJlbHkgdXNlZCwgYnV0IHJlcXVpcmVkIGZvciBcInRvRmlsdGVyKClcIlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmdiYVRvQXJnYkhleChyLCBnLCBiLCBhKSB7XG4gICAgdmFyIGhleCA9IFtcbiAgICAgICAgcGFkMihjb252ZXJ0RGVjaW1hbFRvSGV4KGEpKSxcbiAgICAgICAgcGFkMihNYXRoLnJvdW5kKHIpLnRvU3RyaW5nKDE2KSksXG4gICAgICAgIHBhZDIoTWF0aC5yb3VuZChnKS50b1N0cmluZygxNikpLFxuICAgICAgICBwYWQyKE1hdGgucm91bmQoYikudG9TdHJpbmcoMTYpKSxcbiAgICBdO1xuICAgIHJldHVybiBoZXguam9pbignJyk7XG59XG4vKiogQ29udmVydHMgYSBkZWNpbWFsIHRvIGEgaGV4IHZhbHVlICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydERlY2ltYWxUb0hleChkKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQocGFyc2VGbG9hdChkKSAqIDI1NSkudG9TdHJpbmcoMTYpO1xufVxuLyoqIENvbnZlcnRzIGEgaGV4IHZhbHVlIHRvIGEgZGVjaW1hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRIZXhUb0RlY2ltYWwoaCkge1xuICAgIHJldHVybiBwYXJzZUludEZyb21IZXgoaCkgLyAyNTU7XG59XG4vKiogUGFyc2UgYSBiYXNlLTE2IGhleCB2YWx1ZSBpbnRvIGEgYmFzZS0xMCBpbnRlZ2VyICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJbnRGcm9tSGV4KHZhbCkge1xuICAgIHJldHVybiBwYXJzZUludCh2YWwsIDE2KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBudW1iZXJJbnB1dFRvT2JqZWN0KGNvbG9yKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcjogY29sb3IgPj4gMTYsXG4gICAgICAgIGc6IChjb2xvciAmIDB4ZmYwMCkgPj4gOCxcbiAgICAgICAgYjogY29sb3IgJiAweGZmLFxuICAgIH07XG59XG4iLCIvKipcbiAqIFRha2UgaW5wdXQgZnJvbSBbMCwgbl0gYW5kIHJldHVybiBpdCBhcyBbMCwgMV1cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJvdW5kMDEobiwgbWF4KSB7XG4gICAgaWYgKGlzT25lUG9pbnRaZXJvKG4pKSB7XG4gICAgICAgIG4gPSAnMTAwJSc7XG4gICAgfVxuICAgIHZhciBpc1BlcmNlbnQgPSBpc1BlcmNlbnRhZ2Uobik7XG4gICAgbiA9IG1heCA9PT0gMzYwID8gbiA6IE1hdGgubWluKG1heCwgTWF0aC5tYXgoMCwgcGFyc2VGbG9hdChuKSkpO1xuICAgIC8vIEF1dG9tYXRpY2FsbHkgY29udmVydCBwZXJjZW50YWdlIGludG8gbnVtYmVyXG4gICAgaWYgKGlzUGVyY2VudCkge1xuICAgICAgICBuID0gcGFyc2VJbnQoU3RyaW5nKG4gKiBtYXgpLCAxMCkgLyAxMDA7XG4gICAgfVxuICAgIC8vIEhhbmRsZSBmbG9hdGluZyBwb2ludCByb3VuZGluZyBlcnJvcnNcbiAgICBpZiAoTWF0aC5hYnMobiAtIG1heCkgPCAwLjAwMDAwMSkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgLy8gQ29udmVydCBpbnRvIFswLCAxXSByYW5nZSBpZiBpdCBpc24ndCBhbHJlYWR5XG4gICAgaWYgKG1heCA9PT0gMzYwKSB7XG4gICAgICAgIC8vIElmIG4gaXMgYSBodWUgZ2l2ZW4gaW4gZGVncmVlcyxcbiAgICAgICAgLy8gd3JhcCBhcm91bmQgb3V0LW9mLXJhbmdlIHZhbHVlcyBpbnRvIFswLCAzNjBdIHJhbmdlXG4gICAgICAgIC8vIHRoZW4gY29udmVydCBpbnRvIFswLCAxXS5cbiAgICAgICAgbiA9IChuIDwgMCA/IChuICUgbWF4KSArIG1heCA6IG4gJSBtYXgpIC8gcGFyc2VGbG9hdChTdHJpbmcobWF4KSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBJZiBuIG5vdCBhIGh1ZSBnaXZlbiBpbiBkZWdyZWVzXG4gICAgICAgIC8vIENvbnZlcnQgaW50byBbMCwgMV0gcmFuZ2UgaWYgaXQgaXNuJ3QgYWxyZWFkeS5cbiAgICAgICAgbiA9IChuICUgbWF4KSAvIHBhcnNlRmxvYXQoU3RyaW5nKG1heCkpO1xuICAgIH1cbiAgICByZXR1cm4gbjtcbn1cbi8qKlxuICogRm9yY2UgYSBudW1iZXIgYmV0d2VlbiAwIGFuZCAxXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGFtcDAxKHZhbCkge1xuICAgIHJldHVybiBNYXRoLm1pbigxLCBNYXRoLm1heCgwLCB2YWwpKTtcbn1cbi8qKlxuICogTmVlZCB0byBoYW5kbGUgMS4wIGFzIDEwMCUsIHNpbmNlIG9uY2UgaXQgaXMgYSBudW1iZXIsIHRoZXJlIGlzIG5vIGRpZmZlcmVuY2UgYmV0d2VlbiBpdCBhbmQgMVxuICogPGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNzQyMjA3Mi9qYXZhc2NyaXB0LWhvdy10by1kZXRlY3QtbnVtYmVyLWFzLWEtZGVjaW1hbC1pbmNsdWRpbmctMS0wPlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNPbmVQb2ludFplcm8obikge1xuICAgIHJldHVybiB0eXBlb2YgbiA9PT0gJ3N0cmluZycgJiYgbi5pbmRleE9mKCcuJykgIT09IC0xICYmIHBhcnNlRmxvYXQobikgPT09IDE7XG59XG4vKipcbiAqIENoZWNrIHRvIHNlZSBpZiBzdHJpbmcgcGFzc2VkIGluIGlzIGEgcGVyY2VudGFnZVxuICogQGhpZGRlblxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNQZXJjZW50YWdlKG4pIHtcbiAgICByZXR1cm4gdHlwZW9mIG4gPT09ICdzdHJpbmcnICYmIG4uaW5kZXhPZignJScpICE9PSAtMTtcbn1cbi8qKlxuICogUmV0dXJuIGEgdmFsaWQgYWxwaGEgdmFsdWUgWzAsMV0gd2l0aCBhbGwgaW52YWxpZCB2YWx1ZXMgYmVpbmcgc2V0IHRvIDFcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJvdW5kQWxwaGEoYSkge1xuICAgIGEgPSBwYXJzZUZsb2F0KGEpO1xuICAgIGlmIChpc05hTihhKSB8fCBhIDwgMCB8fCBhID4gMSkge1xuICAgICAgICBhID0gMTtcbiAgICB9XG4gICAgcmV0dXJuIGE7XG59XG4vKipcbiAqIFJlcGxhY2UgYSBkZWNpbWFsIHdpdGggaXQncyBwZXJjZW50YWdlIHZhbHVlXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0VG9QZXJjZW50YWdlKG4pIHtcbiAgICBpZiAobiA8PSAxKSB7XG4gICAgICAgIHJldHVybiBcIlwiLmNvbmNhdChOdW1iZXIobikgKiAxMDAsIFwiJVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG47XG59XG4vKipcbiAqIEZvcmNlIGEgaGV4IHZhbHVlIHRvIGhhdmUgMiBjaGFyYWN0ZXJzXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYWQyKGMpIHtcbiAgICByZXR1cm4gYy5sZW5ndGggPT09IDEgPyAnMCcgKyBjIDogU3RyaW5nKGMpO1xufVxuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xudmFyIERpc2FibGVkQ29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KGZhbHNlKTtcbmV4cG9ydCB2YXIgRGlzYWJsZWRDb250ZXh0UHJvdmlkZXIgPSBmdW5jdGlvbiBEaXNhYmxlZENvbnRleHRQcm92aWRlcihfcmVmKSB7XG4gIHZhciBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sXG4gICAgICBkaXNhYmxlZCA9IF9yZWYuZGlzYWJsZWQ7XG4gIHZhciBvcmlnaW5EaXNhYmxlZCA9IFJlYWN0LnVzZUNvbnRleHQoRGlzYWJsZWRDb250ZXh0KTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KERpc2FibGVkQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBkaXNhYmxlZCB8fCBvcmlnaW5EaXNhYmxlZFxuICB9LCBjaGlsZHJlbik7XG59O1xuZXhwb3J0IGRlZmF1bHQgRGlzYWJsZWRDb250ZXh0OyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbnZhciBTaXplQ29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KHVuZGVmaW5lZCk7XG5leHBvcnQgdmFyIFNpemVDb250ZXh0UHJvdmlkZXIgPSBmdW5jdGlvbiBTaXplQ29udGV4dFByb3ZpZGVyKF9yZWYpIHtcbiAgdmFyIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbixcbiAgICAgIHNpemUgPSBfcmVmLnNpemU7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTaXplQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKG9yaWdpblNpemUpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU2l6ZUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiBzaXplIHx8IG9yaWdpblNpemVcbiAgICB9LCBjaGlsZHJlbik7XG4gIH0pO1xufTtcbmV4cG9ydCBkZWZhdWx0IFNpemVDb250ZXh0OyIsInZhciBzYWZlSXNOYU4gPSBOdW1iZXIuaXNOYU4gfHxcbiAgICBmdW5jdGlvbiBwb255ZmlsbCh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiB2YWx1ZSAhPT0gdmFsdWU7XG4gICAgfTtcbmZ1bmN0aW9uIGlzRXF1YWwoZmlyc3QsIHNlY29uZCkge1xuICAgIGlmIChmaXJzdCA9PT0gc2Vjb25kKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoc2FmZUlzTmFOKGZpcnN0KSAmJiBzYWZlSXNOYU4oc2Vjb25kKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gYXJlSW5wdXRzRXF1YWwobmV3SW5wdXRzLCBsYXN0SW5wdXRzKSB7XG4gICAgaWYgKG5ld0lucHV0cy5sZW5ndGggIT09IGxhc3RJbnB1dHMubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZXdJbnB1dHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKCFpc0VxdWFsKG5ld0lucHV0c1tpXSwgbGFzdElucHV0c1tpXSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gbWVtb2l6ZU9uZShyZXN1bHRGbiwgaXNFcXVhbCkge1xuICAgIGlmIChpc0VxdWFsID09PSB2b2lkIDApIHsgaXNFcXVhbCA9IGFyZUlucHV0c0VxdWFsOyB9XG4gICAgdmFyIGNhY2hlID0gbnVsbDtcbiAgICBmdW5jdGlvbiBtZW1vaXplZCgpIHtcbiAgICAgICAgdmFyIG5ld0FyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIG5ld0FyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2FjaGUgJiYgY2FjaGUubGFzdFRoaXMgPT09IHRoaXMgJiYgaXNFcXVhbChuZXdBcmdzLCBjYWNoZS5sYXN0QXJncykpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWNoZS5sYXN0UmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIHZhciBsYXN0UmVzdWx0ID0gcmVzdWx0Rm4uYXBwbHkodGhpcywgbmV3QXJncyk7XG4gICAgICAgIGNhY2hlID0ge1xuICAgICAgICAgICAgbGFzdFJlc3VsdDogbGFzdFJlc3VsdCxcbiAgICAgICAgICAgIGxhc3RBcmdzOiBuZXdBcmdzLFxuICAgICAgICAgICAgbGFzdFRoaXM6IHRoaXMsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBsYXN0UmVzdWx0O1xuICAgIH1cbiAgICBtZW1vaXplZC5jbGVhciA9IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgICBjYWNoZSA9IG51bGw7XG4gICAgfTtcbiAgICByZXR1cm4gbWVtb2l6ZWQ7XG59XG5cbmV4cG9ydCB7IG1lbW9pemVPbmUgYXMgZGVmYXVsdCB9O1xuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzXCI7XG5pbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlclwiO1xuaW1wb3J0IG1lbW9pemVPbmUgZnJvbSAnbWVtb2l6ZS1vbmUnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAnLi4vX3V0aWwvd2FybmluZyc7XG5pbXBvcnQgeyBjaGFuZ2VDb25maXJtTG9jYWxlIH0gZnJvbSAnLi4vbW9kYWwvbG9jYWxlJztcbmltcG9ydCBMb2NhbGVDb250ZXh0IGZyb20gJy4vY29udGV4dCc7XG5leHBvcnQgdmFyIEFOVF9NQVJLID0gJ2ludGVybmFsTWFyayc7XG5cbnZhciBMb2NhbGVQcm92aWRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoTG9jYWxlUHJvdmlkZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTG9jYWxlUHJvdmlkZXIpO1xuXG4gIGZ1bmN0aW9uIExvY2FsZVByb3ZpZGVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvY2FsZVByb3ZpZGVyKTtcblxuICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICAgIF90aGlzLmdldE1lbW9pemVkQ29udGV4dFZhbHVlID0gbWVtb2l6ZU9uZShmdW5jdGlvbiAobG9jYWxlVmFsdWUpIHtcbiAgICAgIHJldHVybiBfZXh0ZW5kcyhfZXh0ZW5kcyh7fSwgbG9jYWxlVmFsdWUpLCB7XG4gICAgICAgIGV4aXN0OiB0cnVlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBjaGFuZ2VDb25maXJtTG9jYWxlKHByb3BzLmxvY2FsZSAmJiBwcm9wcy5sb2NhbGUuTW9kYWwpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvcHMuX0FOVF9NQVJLX18gPT09IEFOVF9NQVJLLCAnTG9jYWxlUHJvdmlkZXInLCAnYExvY2FsZVByb3ZpZGVyYCBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIGBsb2NhbGVgIHdpdGggYENvbmZpZ1Byb3ZpZGVyYCBpbnN0ZWFkOiBodHRwOi8vdS5hbnQuZGVzaWduL2xvY2FsZScpIDogdm9pZCAwO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMb2NhbGVQcm92aWRlciwgW3tcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkTW91bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBjaGFuZ2VDb25maXJtTG9jYWxlKHRoaXMucHJvcHMubG9jYWxlICYmIHRoaXMucHJvcHMubG9jYWxlLk1vZGFsKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkVXBkYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICAgIHZhciBsb2NhbGUgPSB0aGlzLnByb3BzLmxvY2FsZTtcblxuICAgICAgaWYgKHByZXZQcm9wcy5sb2NhbGUgIT09IGxvY2FsZSkge1xuICAgICAgICBjaGFuZ2VDb25maXJtTG9jYWxlKGxvY2FsZSAmJiBsb2NhbGUuTW9kYWwpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsVW5tb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGNoYW5nZUNvbmZpcm1Mb2NhbGUoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgbG9jYWxlID0gX3RoaXMkcHJvcHMubG9jYWxlLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW47XG4gICAgICB2YXIgY29udGV4dFZhbHVlID0gdGhpcy5nZXRNZW1vaXplZENvbnRleHRWYWx1ZShsb2NhbGUpO1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExvY2FsZUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IGNvbnRleHRWYWx1ZVxuICAgICAgfSwgY2hpbGRyZW4pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMb2NhbGVQcm92aWRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgTG9jYWxlUHJvdmlkZXIgYXMgZGVmYXVsdCB9O1xuTG9jYWxlUHJvdmlkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2NhbGU6IHt9XG59OyIsImltcG9ydCB7IG51bWJlcklucHV0VG9PYmplY3QsIHJnYmFUb0hleCwgcmdiVG9IZXgsIHJnYlRvSHNsLCByZ2JUb0hzdiB9IGZyb20gJy4vY29udmVyc2lvbi5qcyc7XG5pbXBvcnQgeyBuYW1lcyB9IGZyb20gJy4vY3NzLWNvbG9yLW5hbWVzLmpzJztcbmltcG9ydCB7IGlucHV0VG9SR0IgfSBmcm9tICcuL2Zvcm1hdC1pbnB1dCc7XG5pbXBvcnQgeyBib3VuZDAxLCBib3VuZEFscGhhLCBjbGFtcDAxIH0gZnJvbSAnLi91dGlsLmpzJztcbnZhciBUaW55Q29sb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVGlueUNvbG9yKGNvbG9yLCBvcHRzKSB7XG4gICAgICAgIGlmIChjb2xvciA9PT0gdm9pZCAwKSB7IGNvbG9yID0gJyc7IH1cbiAgICAgICAgaWYgKG9wdHMgPT09IHZvaWQgMCkgeyBvcHRzID0ge307IH1cbiAgICAgICAgdmFyIF9hO1xuICAgICAgICAvLyBJZiBpbnB1dCBpcyBhbHJlYWR5IGEgdGlueWNvbG9yLCByZXR1cm4gaXRzZWxmXG4gICAgICAgIGlmIChjb2xvciBpbnN0YW5jZW9mIFRpbnlDb2xvcikge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnN0cnVjdG9yLXJldHVyblxuICAgICAgICAgICAgcmV0dXJuIGNvbG9yO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgY29sb3IgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBjb2xvciA9IG51bWJlcklucHV0VG9PYmplY3QoY29sb3IpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub3JpZ2luYWxJbnB1dCA9IGNvbG9yO1xuICAgICAgICB2YXIgcmdiID0gaW5wdXRUb1JHQihjb2xvcik7XG4gICAgICAgIHRoaXMub3JpZ2luYWxJbnB1dCA9IGNvbG9yO1xuICAgICAgICB0aGlzLnIgPSByZ2IucjtcbiAgICAgICAgdGhpcy5nID0gcmdiLmc7XG4gICAgICAgIHRoaXMuYiA9IHJnYi5iO1xuICAgICAgICB0aGlzLmEgPSByZ2IuYTtcbiAgICAgICAgdGhpcy5yb3VuZEEgPSBNYXRoLnJvdW5kKDEwMCAqIHRoaXMuYSkgLyAxMDA7XG4gICAgICAgIHRoaXMuZm9ybWF0ID0gKF9hID0gb3B0cy5mb3JtYXQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHJnYi5mb3JtYXQ7XG4gICAgICAgIHRoaXMuZ3JhZGllbnRUeXBlID0gb3B0cy5ncmFkaWVudFR5cGU7XG4gICAgICAgIC8vIERvbid0IGxldCB0aGUgcmFuZ2Ugb2YgWzAsMjU1XSBjb21lIGJhY2sgaW4gWzAsMV0uXG4gICAgICAgIC8vIFBvdGVudGlhbGx5IGxvc2UgYSBsaXR0bGUgYml0IG9mIHByZWNpc2lvbiBoZXJlLCBidXQgd2lsbCBmaXggaXNzdWVzIHdoZXJlXG4gICAgICAgIC8vIC41IGdldHMgaW50ZXJwcmV0ZWQgYXMgaGFsZiBvZiB0aGUgdG90YWwsIGluc3RlYWQgb2YgaGFsZiBvZiAxXG4gICAgICAgIC8vIElmIGl0IHdhcyBzdXBwb3NlZCB0byBiZSAxMjgsIHRoaXMgd2FzIGFscmVhZHkgdGFrZW4gY2FyZSBvZiBieSBgaW5wdXRUb1JnYmBcbiAgICAgICAgaWYgKHRoaXMuciA8IDEpIHtcbiAgICAgICAgICAgIHRoaXMuciA9IE1hdGgucm91bmQodGhpcy5yKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5nIDwgMSkge1xuICAgICAgICAgICAgdGhpcy5nID0gTWF0aC5yb3VuZCh0aGlzLmcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmIgPCAxKSB7XG4gICAgICAgICAgICB0aGlzLmIgPSBNYXRoLnJvdW5kKHRoaXMuYik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pc1ZhbGlkID0gcmdiLm9rO1xuICAgIH1cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLmlzRGFyayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QnJpZ2h0bmVzcygpIDwgMTI4O1xuICAgIH07XG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS5pc0xpZ2h0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gIXRoaXMuaXNEYXJrKCk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBwZXJjZWl2ZWQgYnJpZ2h0bmVzcyBvZiB0aGUgY29sb3IsIGZyb20gMC0yNTUuXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS5nZXRCcmlnaHRuZXNzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9BRVJUI2NvbG9yLWNvbnRyYXN0XG4gICAgICAgIHZhciByZ2IgPSB0aGlzLnRvUmdiKCk7XG4gICAgICAgIHJldHVybiAocmdiLnIgKiAyOTkgKyByZ2IuZyAqIDU4NyArIHJnYi5iICogMTE0KSAvIDEwMDA7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBwZXJjZWl2ZWQgbHVtaW5hbmNlIG9mIGEgY29sb3IsIGZyb20gMC0xLlxuICAgICAqL1xuICAgIFRpbnlDb2xvci5wcm90b3R5cGUuZ2V0THVtaW5hbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDA4L1JFQy1XQ0FHMjAtMjAwODEyMTEvI3JlbGF0aXZlbHVtaW5hbmNlZGVmXG4gICAgICAgIHZhciByZ2IgPSB0aGlzLnRvUmdiKCk7XG4gICAgICAgIHZhciBSO1xuICAgICAgICB2YXIgRztcbiAgICAgICAgdmFyIEI7XG4gICAgICAgIHZhciBSc1JHQiA9IHJnYi5yIC8gMjU1O1xuICAgICAgICB2YXIgR3NSR0IgPSByZ2IuZyAvIDI1NTtcbiAgICAgICAgdmFyIEJzUkdCID0gcmdiLmIgLyAyNTU7XG4gICAgICAgIGlmIChSc1JHQiA8PSAwLjAzOTI4KSB7XG4gICAgICAgICAgICBSID0gUnNSR0IgLyAxMi45MjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZXhwb25lbnRpYXRpb24tb3BlcmF0b3JcbiAgICAgICAgICAgIFIgPSBNYXRoLnBvdygoUnNSR0IgKyAwLjA1NSkgLyAxLjA1NSwgMi40KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoR3NSR0IgPD0gMC4wMzkyOCkge1xuICAgICAgICAgICAgRyA9IEdzUkdCIC8gMTIuOTI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWV4cG9uZW50aWF0aW9uLW9wZXJhdG9yXG4gICAgICAgICAgICBHID0gTWF0aC5wb3coKEdzUkdCICsgMC4wNTUpIC8gMS4wNTUsIDIuNCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJzUkdCIDw9IDAuMDM5MjgpIHtcbiAgICAgICAgICAgIEIgPSBCc1JHQiAvIDEyLjkyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1leHBvbmVudGlhdGlvbi1vcGVyYXRvclxuICAgICAgICAgICAgQiA9IE1hdGgucG93KChCc1JHQiArIDAuMDU1KSAvIDEuMDU1LCAyLjQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwLjIxMjYgKiBSICsgMC43MTUyICogRyArIDAuMDcyMiAqIEI7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBhbHBoYSB2YWx1ZSBvZiBhIGNvbG9yLCBmcm9tIDAtMS5cbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLmdldEFscGhhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgYWxwaGEgdmFsdWUgb24gdGhlIGN1cnJlbnQgY29sb3IuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYWxwaGEgLSBUaGUgbmV3IGFscGhhIHZhbHVlLiBUaGUgYWNjZXB0ZWQgcmFuZ2UgaXMgMC0xLlxuICAgICAqL1xuICAgIFRpbnlDb2xvci5wcm90b3R5cGUuc2V0QWxwaGEgPSBmdW5jdGlvbiAoYWxwaGEpIHtcbiAgICAgICAgdGhpcy5hID0gYm91bmRBbHBoYShhbHBoYSk7XG4gICAgICAgIHRoaXMucm91bmRBID0gTWF0aC5yb3VuZCgxMDAgKiB0aGlzLmEpIC8gMTAwO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgd2hldGhlciB0aGUgY29sb3IgaXMgbW9ub2Nocm9tZS5cbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLmlzTW9ub2Nocm9tZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHMgPSB0aGlzLnRvSHNsKCkucztcbiAgICAgICAgcmV0dXJuIHMgPT09IDA7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBvYmplY3QgYXMgYSBIU1ZBIG9iamVjdC5cbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLnRvSHN2ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaHN2ID0gcmdiVG9Ic3YodGhpcy5yLCB0aGlzLmcsIHRoaXMuYik7XG4gICAgICAgIHJldHVybiB7IGg6IGhzdi5oICogMzYwLCBzOiBoc3YucywgdjogaHN2LnYsIGE6IHRoaXMuYSB9O1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgaHN2YSB2YWx1ZXMgaW50ZXJwb2xhdGVkIGludG8gYSBzdHJpbmcgd2l0aCB0aGUgZm9sbG93aW5nIGZvcm1hdDpcbiAgICAgKiBcImhzdmEoeHh4LCB4eHgsIHh4eCwgeHgpXCIuXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50b0hzdlN0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGhzdiA9IHJnYlRvSHN2KHRoaXMuciwgdGhpcy5nLCB0aGlzLmIpO1xuICAgICAgICB2YXIgaCA9IE1hdGgucm91bmQoaHN2LmggKiAzNjApO1xuICAgICAgICB2YXIgcyA9IE1hdGgucm91bmQoaHN2LnMgKiAxMDApO1xuICAgICAgICB2YXIgdiA9IE1hdGgucm91bmQoaHN2LnYgKiAxMDApO1xuICAgICAgICByZXR1cm4gdGhpcy5hID09PSAxID8gXCJoc3YoXCIuY29uY2F0KGgsIFwiLCBcIikuY29uY2F0KHMsIFwiJSwgXCIpLmNvbmNhdCh2LCBcIiUpXCIpIDogXCJoc3ZhKFwiLmNvbmNhdChoLCBcIiwgXCIpLmNvbmNhdChzLCBcIiUsIFwiKS5jb25jYXQodiwgXCIlLCBcIikuY29uY2F0KHRoaXMucm91bmRBLCBcIilcIik7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBvYmplY3QgYXMgYSBIU0xBIG9iamVjdC5cbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLnRvSHNsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaHNsID0gcmdiVG9Ic2wodGhpcy5yLCB0aGlzLmcsIHRoaXMuYik7XG4gICAgICAgIHJldHVybiB7IGg6IGhzbC5oICogMzYwLCBzOiBoc2wucywgbDogaHNsLmwsIGE6IHRoaXMuYSB9O1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgaHNsYSB2YWx1ZXMgaW50ZXJwb2xhdGVkIGludG8gYSBzdHJpbmcgd2l0aCB0aGUgZm9sbG93aW5nIGZvcm1hdDpcbiAgICAgKiBcImhzbGEoeHh4LCB4eHgsIHh4eCwgeHgpXCIuXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50b0hzbFN0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGhzbCA9IHJnYlRvSHNsKHRoaXMuciwgdGhpcy5nLCB0aGlzLmIpO1xuICAgICAgICB2YXIgaCA9IE1hdGgucm91bmQoaHNsLmggKiAzNjApO1xuICAgICAgICB2YXIgcyA9IE1hdGgucm91bmQoaHNsLnMgKiAxMDApO1xuICAgICAgICB2YXIgbCA9IE1hdGgucm91bmQoaHNsLmwgKiAxMDApO1xuICAgICAgICByZXR1cm4gdGhpcy5hID09PSAxID8gXCJoc2woXCIuY29uY2F0KGgsIFwiLCBcIikuY29uY2F0KHMsIFwiJSwgXCIpLmNvbmNhdChsLCBcIiUpXCIpIDogXCJoc2xhKFwiLmNvbmNhdChoLCBcIiwgXCIpLmNvbmNhdChzLCBcIiUsIFwiKS5jb25jYXQobCwgXCIlLCBcIikuY29uY2F0KHRoaXMucm91bmRBLCBcIilcIik7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBoZXggdmFsdWUgb2YgdGhlIGNvbG9yLlxuICAgICAqIEBwYXJhbSBhbGxvdzNDaGFyIHdpbGwgc2hvcnRlbiBoZXggdmFsdWUgdG8gMyBjaGFyIGlmIHBvc3NpYmxlXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50b0hleCA9IGZ1bmN0aW9uIChhbGxvdzNDaGFyKSB7XG4gICAgICAgIGlmIChhbGxvdzNDaGFyID09PSB2b2lkIDApIHsgYWxsb3czQ2hhciA9IGZhbHNlOyB9XG4gICAgICAgIHJldHVybiByZ2JUb0hleCh0aGlzLnIsIHRoaXMuZywgdGhpcy5iLCBhbGxvdzNDaGFyKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGhleCB2YWx1ZSBvZiB0aGUgY29sb3IgLXdpdGggYSAjIHByZWZpeGVkLlxuICAgICAqIEBwYXJhbSBhbGxvdzNDaGFyIHdpbGwgc2hvcnRlbiBoZXggdmFsdWUgdG8gMyBjaGFyIGlmIHBvc3NpYmxlXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50b0hleFN0cmluZyA9IGZ1bmN0aW9uIChhbGxvdzNDaGFyKSB7XG4gICAgICAgIGlmIChhbGxvdzNDaGFyID09PSB2b2lkIDApIHsgYWxsb3czQ2hhciA9IGZhbHNlOyB9XG4gICAgICAgIHJldHVybiAnIycgKyB0aGlzLnRvSGV4KGFsbG93M0NoYXIpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgaGV4IDggdmFsdWUgb2YgdGhlIGNvbG9yLlxuICAgICAqIEBwYXJhbSBhbGxvdzRDaGFyIHdpbGwgc2hvcnRlbiBoZXggdmFsdWUgdG8gNCBjaGFyIGlmIHBvc3NpYmxlXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50b0hleDggPSBmdW5jdGlvbiAoYWxsb3c0Q2hhcikge1xuICAgICAgICBpZiAoYWxsb3c0Q2hhciA9PT0gdm9pZCAwKSB7IGFsbG93NENoYXIgPSBmYWxzZTsgfVxuICAgICAgICByZXR1cm4gcmdiYVRvSGV4KHRoaXMuciwgdGhpcy5nLCB0aGlzLmIsIHRoaXMuYSwgYWxsb3c0Q2hhcik7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBoZXggOCB2YWx1ZSBvZiB0aGUgY29sb3IgLXdpdGggYSAjIHByZWZpeGVkLlxuICAgICAqIEBwYXJhbSBhbGxvdzRDaGFyIHdpbGwgc2hvcnRlbiBoZXggdmFsdWUgdG8gNCBjaGFyIGlmIHBvc3NpYmxlXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50b0hleDhTdHJpbmcgPSBmdW5jdGlvbiAoYWxsb3c0Q2hhcikge1xuICAgICAgICBpZiAoYWxsb3c0Q2hhciA9PT0gdm9pZCAwKSB7IGFsbG93NENoYXIgPSBmYWxzZTsgfVxuICAgICAgICByZXR1cm4gJyMnICsgdGhpcy50b0hleDgoYWxsb3c0Q2hhcik7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBzaG9ydGVyIGhleCB2YWx1ZSBvZiB0aGUgY29sb3IgZGVwZW5kcyBvbiBpdHMgYWxwaGEgLXdpdGggYSAjIHByZWZpeGVkLlxuICAgICAqIEBwYXJhbSBhbGxvd1Nob3J0Q2hhciB3aWxsIHNob3J0ZW4gaGV4IHZhbHVlIHRvIDMgb3IgNCBjaGFyIGlmIHBvc3NpYmxlXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50b0hleFNob3J0U3RyaW5nID0gZnVuY3Rpb24gKGFsbG93U2hvcnRDaGFyKSB7XG4gICAgICAgIGlmIChhbGxvd1Nob3J0Q2hhciA9PT0gdm9pZCAwKSB7IGFsbG93U2hvcnRDaGFyID0gZmFsc2U7IH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYSA9PT0gMSA/IHRoaXMudG9IZXhTdHJpbmcoYWxsb3dTaG9ydENoYXIpIDogdGhpcy50b0hleDhTdHJpbmcoYWxsb3dTaG9ydENoYXIpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgb2JqZWN0IGFzIGEgUkdCQSBvYmplY3QuXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50b1JnYiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHI6IE1hdGgucm91bmQodGhpcy5yKSxcbiAgICAgICAgICAgIGc6IE1hdGgucm91bmQodGhpcy5nKSxcbiAgICAgICAgICAgIGI6IE1hdGgucm91bmQodGhpcy5iKSxcbiAgICAgICAgICAgIGE6IHRoaXMuYSxcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIFJHQkEgdmFsdWVzIGludGVycG9sYXRlZCBpbnRvIGEgc3RyaW5nIHdpdGggdGhlIGZvbGxvd2luZyBmb3JtYXQ6XG4gICAgICogXCJSR0JBKHh4eCwgeHh4LCB4eHgsIHh4KVwiLlxuICAgICAqL1xuICAgIFRpbnlDb2xvci5wcm90b3R5cGUudG9SZ2JTdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByID0gTWF0aC5yb3VuZCh0aGlzLnIpO1xuICAgICAgICB2YXIgZyA9IE1hdGgucm91bmQodGhpcy5nKTtcbiAgICAgICAgdmFyIGIgPSBNYXRoLnJvdW5kKHRoaXMuYik7XG4gICAgICAgIHJldHVybiB0aGlzLmEgPT09IDEgPyBcInJnYihcIi5jb25jYXQociwgXCIsIFwiKS5jb25jYXQoZywgXCIsIFwiKS5jb25jYXQoYiwgXCIpXCIpIDogXCJyZ2JhKFwiLmNvbmNhdChyLCBcIiwgXCIpLmNvbmNhdChnLCBcIiwgXCIpLmNvbmNhdChiLCBcIiwgXCIpLmNvbmNhdCh0aGlzLnJvdW5kQSwgXCIpXCIpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgb2JqZWN0IGFzIGEgUkdCQSBvYmplY3QuXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50b1BlcmNlbnRhZ2VSZ2IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBmbXQgPSBmdW5jdGlvbiAoeCkgeyByZXR1cm4gXCJcIi5jb25jYXQoTWF0aC5yb3VuZChib3VuZDAxKHgsIDI1NSkgKiAxMDApLCBcIiVcIik7IH07XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByOiBmbXQodGhpcy5yKSxcbiAgICAgICAgICAgIGc6IGZtdCh0aGlzLmcpLFxuICAgICAgICAgICAgYjogZm10KHRoaXMuYiksXG4gICAgICAgICAgICBhOiB0aGlzLmEsXG4gICAgICAgIH07XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBSR0JBIHJlbGF0aXZlIHZhbHVlcyBpbnRlcnBvbGF0ZWQgaW50byBhIHN0cmluZ1xuICAgICAqL1xuICAgIFRpbnlDb2xvci5wcm90b3R5cGUudG9QZXJjZW50YWdlUmdiU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcm5kID0gZnVuY3Rpb24gKHgpIHsgcmV0dXJuIE1hdGgucm91bmQoYm91bmQwMSh4LCAyNTUpICogMTAwKTsgfTtcbiAgICAgICAgcmV0dXJuIHRoaXMuYSA9PT0gMVxuICAgICAgICAgICAgPyBcInJnYihcIi5jb25jYXQocm5kKHRoaXMuciksIFwiJSwgXCIpLmNvbmNhdChybmQodGhpcy5nKSwgXCIlLCBcIikuY29uY2F0KHJuZCh0aGlzLmIpLCBcIiUpXCIpXG4gICAgICAgICAgICA6IFwicmdiYShcIi5jb25jYXQocm5kKHRoaXMuciksIFwiJSwgXCIpLmNvbmNhdChybmQodGhpcy5nKSwgXCIlLCBcIikuY29uY2F0KHJuZCh0aGlzLmIpLCBcIiUsIFwiKS5jb25jYXQodGhpcy5yb3VuZEEsIFwiKVwiKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRoZSAncmVhbCcgbmFtZSBvZiB0aGUgY29sb3IgLWlmIHRoZXJlIGlzIG9uZS5cbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLnRvTmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuYSA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuICd0cmFuc3BhcmVudCc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuYSA8IDEpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaGV4ID0gJyMnICsgcmdiVG9IZXgodGhpcy5yLCB0aGlzLmcsIHRoaXMuYiwgZmFsc2UpO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gT2JqZWN0LmVudHJpZXMobmFtZXMpOyBfaSA8IF9hLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgdmFyIF9iID0gX2FbX2ldLCBrZXkgPSBfYlswXSwgdmFsdWUgPSBfYlsxXTtcbiAgICAgICAgICAgIGlmIChoZXggPT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGtleTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcbiAgICBUaW55Q29sb3IucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKGZvcm1hdCkge1xuICAgICAgICB2YXIgZm9ybWF0U2V0ID0gQm9vbGVhbihmb3JtYXQpO1xuICAgICAgICBmb3JtYXQgPSBmb3JtYXQgIT09IG51bGwgJiYgZm9ybWF0ICE9PSB2b2lkIDAgPyBmb3JtYXQgOiB0aGlzLmZvcm1hdDtcbiAgICAgICAgdmFyIGZvcm1hdHRlZFN0cmluZyA9IGZhbHNlO1xuICAgICAgICB2YXIgaGFzQWxwaGEgPSB0aGlzLmEgPCAxICYmIHRoaXMuYSA+PSAwO1xuICAgICAgICB2YXIgbmVlZHNBbHBoYUZvcm1hdCA9ICFmb3JtYXRTZXQgJiYgaGFzQWxwaGEgJiYgKGZvcm1hdC5zdGFydHNXaXRoKCdoZXgnKSB8fCBmb3JtYXQgPT09ICduYW1lJyk7XG4gICAgICAgIGlmIChuZWVkc0FscGhhRm9ybWF0KSB7XG4gICAgICAgICAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIFwidHJhbnNwYXJlbnRcIiwgYWxsIG90aGVyIG5vbi1hbHBoYSBmb3JtYXRzXG4gICAgICAgICAgICAvLyB3aWxsIHJldHVybiByZ2JhIHdoZW4gdGhlcmUgaXMgdHJhbnNwYXJlbmN5LlxuICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gJ25hbWUnICYmIHRoaXMuYSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRvTmFtZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudG9SZ2JTdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZm9ybWF0ID09PSAncmdiJykge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b1JnYlN0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmb3JtYXQgPT09ICdwcmdiJykge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b1BlcmNlbnRhZ2VSZ2JTdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZm9ybWF0ID09PSAnaGV4JyB8fCBmb3JtYXQgPT09ICdoZXg2Jykge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b0hleFN0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmb3JtYXQgPT09ICdoZXgzJykge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b0hleFN0cmluZyh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZm9ybWF0ID09PSAnaGV4NCcpIHtcbiAgICAgICAgICAgIGZvcm1hdHRlZFN0cmluZyA9IHRoaXMudG9IZXg4U3RyaW5nKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmb3JtYXQgPT09ICdoZXg4Jykge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b0hleDhTdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZm9ybWF0ID09PSAnbmFtZScpIHtcbiAgICAgICAgICAgIGZvcm1hdHRlZFN0cmluZyA9IHRoaXMudG9OYW1lKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZvcm1hdCA9PT0gJ2hzbCcpIHtcbiAgICAgICAgICAgIGZvcm1hdHRlZFN0cmluZyA9IHRoaXMudG9Ic2xTdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZm9ybWF0ID09PSAnaHN2Jykge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b0hzdlN0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb3JtYXR0ZWRTdHJpbmcgfHwgdGhpcy50b0hleFN0cmluZygpO1xuICAgIH07XG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50b051bWJlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIChNYXRoLnJvdW5kKHRoaXMucikgPDwgMTYpICsgKE1hdGgucm91bmQodGhpcy5nKSA8PCA4KSArIE1hdGgucm91bmQodGhpcy5iKTtcbiAgICB9O1xuICAgIFRpbnlDb2xvci5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBuZXcgVGlueUNvbG9yKHRoaXMudG9TdHJpbmcoKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBMaWdodGVuIHRoZSBjb2xvciBhIGdpdmVuIGFtb3VudC4gUHJvdmlkaW5nIDEwMCB3aWxsIGFsd2F5cyByZXR1cm4gd2hpdGUuXG4gICAgICogQHBhcmFtIGFtb3VudCAtIHZhbGlkIGJldHdlZW4gMS0xMDBcbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLmxpZ2h0ZW4gPSBmdW5jdGlvbiAoYW1vdW50KSB7XG4gICAgICAgIGlmIChhbW91bnQgPT09IHZvaWQgMCkgeyBhbW91bnQgPSAxMDsgfVxuICAgICAgICB2YXIgaHNsID0gdGhpcy50b0hzbCgpO1xuICAgICAgICBoc2wubCArPSBhbW91bnQgLyAxMDA7XG4gICAgICAgIGhzbC5sID0gY2xhbXAwMShoc2wubCk7XG4gICAgICAgIHJldHVybiBuZXcgVGlueUNvbG9yKGhzbCk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBCcmlnaHRlbiB0aGUgY29sb3IgYSBnaXZlbiBhbW91bnQsIGZyb20gMCB0byAxMDAuXG4gICAgICogQHBhcmFtIGFtb3VudCAtIHZhbGlkIGJldHdlZW4gMS0xMDBcbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLmJyaWdodGVuID0gZnVuY3Rpb24gKGFtb3VudCkge1xuICAgICAgICBpZiAoYW1vdW50ID09PSB2b2lkIDApIHsgYW1vdW50ID0gMTA7IH1cbiAgICAgICAgdmFyIHJnYiA9IHRoaXMudG9SZ2IoKTtcbiAgICAgICAgcmdiLnIgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIHJnYi5yIC0gTWF0aC5yb3VuZCgyNTUgKiAtKGFtb3VudCAvIDEwMCkpKSk7XG4gICAgICAgIHJnYi5nID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCByZ2IuZyAtIE1hdGgucm91bmQoMjU1ICogLShhbW91bnQgLyAxMDApKSkpO1xuICAgICAgICByZ2IuYiA9IE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgcmdiLmIgLSBNYXRoLnJvdW5kKDI1NSAqIC0oYW1vdW50IC8gMTAwKSkpKTtcbiAgICAgICAgcmV0dXJuIG5ldyBUaW55Q29sb3IocmdiKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIERhcmtlbiB0aGUgY29sb3IgYSBnaXZlbiBhbW91bnQsIGZyb20gMCB0byAxMDAuXG4gICAgICogUHJvdmlkaW5nIDEwMCB3aWxsIGFsd2F5cyByZXR1cm4gYmxhY2suXG4gICAgICogQHBhcmFtIGFtb3VudCAtIHZhbGlkIGJldHdlZW4gMS0xMDBcbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLmRhcmtlbiA9IGZ1bmN0aW9uIChhbW91bnQpIHtcbiAgICAgICAgaWYgKGFtb3VudCA9PT0gdm9pZCAwKSB7IGFtb3VudCA9IDEwOyB9XG4gICAgICAgIHZhciBoc2wgPSB0aGlzLnRvSHNsKCk7XG4gICAgICAgIGhzbC5sIC09IGFtb3VudCAvIDEwMDtcbiAgICAgICAgaHNsLmwgPSBjbGFtcDAxKGhzbC5sKTtcbiAgICAgICAgcmV0dXJuIG5ldyBUaW55Q29sb3IoaHNsKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIE1peCB0aGUgY29sb3Igd2l0aCBwdXJlIHdoaXRlLCBmcm9tIDAgdG8gMTAwLlxuICAgICAqIFByb3ZpZGluZyAwIHdpbGwgZG8gbm90aGluZywgcHJvdmlkaW5nIDEwMCB3aWxsIGFsd2F5cyByZXR1cm4gd2hpdGUuXG4gICAgICogQHBhcmFtIGFtb3VudCAtIHZhbGlkIGJldHdlZW4gMS0xMDBcbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLnRpbnQgPSBmdW5jdGlvbiAoYW1vdW50KSB7XG4gICAgICAgIGlmIChhbW91bnQgPT09IHZvaWQgMCkgeyBhbW91bnQgPSAxMDsgfVxuICAgICAgICByZXR1cm4gdGhpcy5taXgoJ3doaXRlJywgYW1vdW50KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIE1peCB0aGUgY29sb3Igd2l0aCBwdXJlIGJsYWNrLCBmcm9tIDAgdG8gMTAwLlxuICAgICAqIFByb3ZpZGluZyAwIHdpbGwgZG8gbm90aGluZywgcHJvdmlkaW5nIDEwMCB3aWxsIGFsd2F5cyByZXR1cm4gYmxhY2suXG4gICAgICogQHBhcmFtIGFtb3VudCAtIHZhbGlkIGJldHdlZW4gMS0xMDBcbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLnNoYWRlID0gZnVuY3Rpb24gKGFtb3VudCkge1xuICAgICAgICBpZiAoYW1vdW50ID09PSB2b2lkIDApIHsgYW1vdW50ID0gMTA7IH1cbiAgICAgICAgcmV0dXJuIHRoaXMubWl4KCdibGFjaycsIGFtb3VudCk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBEZXNhdHVyYXRlIHRoZSBjb2xvciBhIGdpdmVuIGFtb3VudCwgZnJvbSAwIHRvIDEwMC5cbiAgICAgKiBQcm92aWRpbmcgMTAwIHdpbGwgaXMgdGhlIHNhbWUgYXMgY2FsbGluZyBncmV5c2NhbGVcbiAgICAgKiBAcGFyYW0gYW1vdW50IC0gdmFsaWQgYmV0d2VlbiAxLTEwMFxuICAgICAqL1xuICAgIFRpbnlDb2xvci5wcm90b3R5cGUuZGVzYXR1cmF0ZSA9IGZ1bmN0aW9uIChhbW91bnQpIHtcbiAgICAgICAgaWYgKGFtb3VudCA9PT0gdm9pZCAwKSB7IGFtb3VudCA9IDEwOyB9XG4gICAgICAgIHZhciBoc2wgPSB0aGlzLnRvSHNsKCk7XG4gICAgICAgIGhzbC5zIC09IGFtb3VudCAvIDEwMDtcbiAgICAgICAgaHNsLnMgPSBjbGFtcDAxKGhzbC5zKTtcbiAgICAgICAgcmV0dXJuIG5ldyBUaW55Q29sb3IoaHNsKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFNhdHVyYXRlIHRoZSBjb2xvciBhIGdpdmVuIGFtb3VudCwgZnJvbSAwIHRvIDEwMC5cbiAgICAgKiBAcGFyYW0gYW1vdW50IC0gdmFsaWQgYmV0d2VlbiAxLTEwMFxuICAgICAqL1xuICAgIFRpbnlDb2xvci5wcm90b3R5cGUuc2F0dXJhdGUgPSBmdW5jdGlvbiAoYW1vdW50KSB7XG4gICAgICAgIGlmIChhbW91bnQgPT09IHZvaWQgMCkgeyBhbW91bnQgPSAxMDsgfVxuICAgICAgICB2YXIgaHNsID0gdGhpcy50b0hzbCgpO1xuICAgICAgICBoc2wucyArPSBhbW91bnQgLyAxMDA7XG4gICAgICAgIGhzbC5zID0gY2xhbXAwMShoc2wucyk7XG4gICAgICAgIHJldHVybiBuZXcgVGlueUNvbG9yKGhzbCk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDb21wbGV0ZWx5IGRlc2F0dXJhdGVzIGEgY29sb3IgaW50byBncmV5c2NhbGUuXG4gICAgICogU2FtZSBhcyBjYWxsaW5nIGBkZXNhdHVyYXRlKDEwMClgXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS5ncmV5c2NhbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRlc2F0dXJhdGUoMTAwKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFNwaW4gdGFrZXMgYSBwb3NpdGl2ZSBvciBuZWdhdGl2ZSBhbW91bnQgd2l0aGluIFstMzYwLCAzNjBdIGluZGljYXRpbmcgdGhlIGNoYW5nZSBvZiBodWUuXG4gICAgICogVmFsdWVzIG91dHNpZGUgb2YgdGhpcyByYW5nZSB3aWxsIGJlIHdyYXBwZWQgaW50byB0aGlzIHJhbmdlLlxuICAgICAqL1xuICAgIFRpbnlDb2xvci5wcm90b3R5cGUuc3BpbiA9IGZ1bmN0aW9uIChhbW91bnQpIHtcbiAgICAgICAgdmFyIGhzbCA9IHRoaXMudG9Ic2woKTtcbiAgICAgICAgdmFyIGh1ZSA9IChoc2wuaCArIGFtb3VudCkgJSAzNjA7XG4gICAgICAgIGhzbC5oID0gaHVlIDwgMCA/IDM2MCArIGh1ZSA6IGh1ZTtcbiAgICAgICAgcmV0dXJuIG5ldyBUaW55Q29sb3IoaHNsKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIE1peCB0aGUgY3VycmVudCBjb2xvciBhIGdpdmVuIGFtb3VudCB3aXRoIGFub3RoZXIgY29sb3IsIGZyb20gMCB0byAxMDAuXG4gICAgICogMCBtZWFucyBubyBtaXhpbmcgKHJldHVybiBjdXJyZW50IGNvbG9yKS5cbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLm1peCA9IGZ1bmN0aW9uIChjb2xvciwgYW1vdW50KSB7XG4gICAgICAgIGlmIChhbW91bnQgPT09IHZvaWQgMCkgeyBhbW91bnQgPSA1MDsgfVxuICAgICAgICB2YXIgcmdiMSA9IHRoaXMudG9SZ2IoKTtcbiAgICAgICAgdmFyIHJnYjIgPSBuZXcgVGlueUNvbG9yKGNvbG9yKS50b1JnYigpO1xuICAgICAgICB2YXIgcCA9IGFtb3VudCAvIDEwMDtcbiAgICAgICAgdmFyIHJnYmEgPSB7XG4gICAgICAgICAgICByOiAocmdiMi5yIC0gcmdiMS5yKSAqIHAgKyByZ2IxLnIsXG4gICAgICAgICAgICBnOiAocmdiMi5nIC0gcmdiMS5nKSAqIHAgKyByZ2IxLmcsXG4gICAgICAgICAgICBiOiAocmdiMi5iIC0gcmdiMS5iKSAqIHAgKyByZ2IxLmIsXG4gICAgICAgICAgICBhOiAocmdiMi5hIC0gcmdiMS5hKSAqIHAgKyByZ2IxLmEsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBuZXcgVGlueUNvbG9yKHJnYmEpO1xuICAgIH07XG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS5hbmFsb2dvdXMgPSBmdW5jdGlvbiAocmVzdWx0cywgc2xpY2VzKSB7XG4gICAgICAgIGlmIChyZXN1bHRzID09PSB2b2lkIDApIHsgcmVzdWx0cyA9IDY7IH1cbiAgICAgICAgaWYgKHNsaWNlcyA9PT0gdm9pZCAwKSB7IHNsaWNlcyA9IDMwOyB9XG4gICAgICAgIHZhciBoc2wgPSB0aGlzLnRvSHNsKCk7XG4gICAgICAgIHZhciBwYXJ0ID0gMzYwIC8gc2xpY2VzO1xuICAgICAgICB2YXIgcmV0ID0gW3RoaXNdO1xuICAgICAgICBmb3IgKGhzbC5oID0gKGhzbC5oIC0gKChwYXJ0ICogcmVzdWx0cykgPj4gMSkgKyA3MjApICUgMzYwOyAtLXJlc3VsdHM7KSB7XG4gICAgICAgICAgICBoc2wuaCA9IChoc2wuaCArIHBhcnQpICUgMzYwO1xuICAgICAgICAgICAgcmV0LnB1c2gobmV3IFRpbnlDb2xvcihoc2wpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH07XG4gICAgLyoqXG4gICAgICogdGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vaW5mdXNpb24valF1ZXJ5LXhjb2xvci9ibG9iL21hc3Rlci9qcXVlcnkueGNvbG9yLmpzXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS5jb21wbGVtZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaHNsID0gdGhpcy50b0hzbCgpO1xuICAgICAgICBoc2wuaCA9IChoc2wuaCArIDE4MCkgJSAzNjA7XG4gICAgICAgIHJldHVybiBuZXcgVGlueUNvbG9yKGhzbCk7XG4gICAgfTtcbiAgICBUaW55Q29sb3IucHJvdG90eXBlLm1vbm9jaHJvbWF0aWMgPSBmdW5jdGlvbiAocmVzdWx0cykge1xuICAgICAgICBpZiAocmVzdWx0cyA9PT0gdm9pZCAwKSB7IHJlc3VsdHMgPSA2OyB9XG4gICAgICAgIHZhciBoc3YgPSB0aGlzLnRvSHN2KCk7XG4gICAgICAgIHZhciBoID0gaHN2Lmg7XG4gICAgICAgIHZhciBzID0gaHN2LnM7XG4gICAgICAgIHZhciB2ID0gaHN2LnY7XG4gICAgICAgIHZhciByZXMgPSBbXTtcbiAgICAgICAgdmFyIG1vZGlmaWNhdGlvbiA9IDEgLyByZXN1bHRzO1xuICAgICAgICB3aGlsZSAocmVzdWx0cy0tKSB7XG4gICAgICAgICAgICByZXMucHVzaChuZXcgVGlueUNvbG9yKHsgaDogaCwgczogcywgdjogdiB9KSk7XG4gICAgICAgICAgICB2ID0gKHYgKyBtb2RpZmljYXRpb24pICUgMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH07XG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS5zcGxpdGNvbXBsZW1lbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBoc2wgPSB0aGlzLnRvSHNsKCk7XG4gICAgICAgIHZhciBoID0gaHNsLmg7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICB0aGlzLFxuICAgICAgICAgICAgbmV3IFRpbnlDb2xvcih7IGg6IChoICsgNzIpICUgMzYwLCBzOiBoc2wucywgbDogaHNsLmwgfSksXG4gICAgICAgICAgICBuZXcgVGlueUNvbG9yKHsgaDogKGggKyAyMTYpICUgMzYwLCBzOiBoc2wucywgbDogaHNsLmwgfSksXG4gICAgICAgIF07XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDb21wdXRlIGhvdyB0aGUgY29sb3Igd291bGQgYXBwZWFyIG9uIGEgYmFja2dyb3VuZFxuICAgICAqL1xuICAgIFRpbnlDb2xvci5wcm90b3R5cGUub25CYWNrZ3JvdW5kID0gZnVuY3Rpb24gKGJhY2tncm91bmQpIHtcbiAgICAgICAgdmFyIGZnID0gdGhpcy50b1JnYigpO1xuICAgICAgICB2YXIgYmcgPSBuZXcgVGlueUNvbG9yKGJhY2tncm91bmQpLnRvUmdiKCk7XG4gICAgICAgIHZhciBhbHBoYSA9IGZnLmEgKyBiZy5hICogKDEgLSBmZy5hKTtcbiAgICAgICAgcmV0dXJuIG5ldyBUaW55Q29sb3Ioe1xuICAgICAgICAgICAgcjogKGZnLnIgKiBmZy5hICsgYmcuciAqIGJnLmEgKiAoMSAtIGZnLmEpKSAvIGFscGhhLFxuICAgICAgICAgICAgZzogKGZnLmcgKiBmZy5hICsgYmcuZyAqIGJnLmEgKiAoMSAtIGZnLmEpKSAvIGFscGhhLFxuICAgICAgICAgICAgYjogKGZnLmIgKiBmZy5hICsgYmcuYiAqIGJnLmEgKiAoMSAtIGZnLmEpKSAvIGFscGhhLFxuICAgICAgICAgICAgYTogYWxwaGEsXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQWxpYXMgZm9yIGBwb2x5YWQoMylgXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50cmlhZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9seWFkKDMpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQWxpYXMgZm9yIGBwb2x5YWQoNClgXG4gICAgICovXG4gICAgVGlueUNvbG9yLnByb3RvdHlwZS50ZXRyYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvbHlhZCg0KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEdldCBwb2x5YWQgY29sb3JzLCBsaWtlIChmb3IgMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgZXRjLi4uKVxuICAgICAqIG1vbmFkLCBkeWFkLCB0cmlhZCwgdGV0cmFkLCBwZW50YWQsIGhleGFkLCBoZXB0YWQsIG9jdGFkLCBldGMuLi5cbiAgICAgKi9cbiAgICBUaW55Q29sb3IucHJvdG90eXBlLnBvbHlhZCA9IGZ1bmN0aW9uIChuKSB7XG4gICAgICAgIHZhciBoc2wgPSB0aGlzLnRvSHNsKCk7XG4gICAgICAgIHZhciBoID0gaHNsLmg7XG4gICAgICAgIHZhciByZXN1bHQgPSBbdGhpc107XG4gICAgICAgIHZhciBpbmNyZW1lbnQgPSAzNjAgLyBuO1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2gobmV3IFRpbnlDb2xvcih7IGg6IChoICsgaSAqIGluY3JlbWVudCkgJSAzNjAsIHM6IGhzbC5zLCBsOiBoc2wubCB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIGNvbXBhcmUgY29sb3IgdnMgY3VycmVudCBjb2xvclxuICAgICAqL1xuICAgIFRpbnlDb2xvci5wcm90b3R5cGUuZXF1YWxzID0gZnVuY3Rpb24gKGNvbG9yKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvUmdiU3RyaW5nKCkgPT09IG5ldyBUaW55Q29sb3IoY29sb3IpLnRvUmdiU3RyaW5nKCk7XG4gICAgfTtcbiAgICByZXR1cm4gVGlueUNvbG9yO1xufSgpKTtcbmV4cG9ydCB7IFRpbnlDb2xvciB9O1xuLy8ga2VwdCBmb3IgYmFja3dhcmRzIGNvbXBhdGFiaWxpdHkgd2l0aCB2MVxuZXhwb3J0IGZ1bmN0aW9uIHRpbnljb2xvcihjb2xvciwgb3B0cykge1xuICAgIGlmIChjb2xvciA9PT0gdm9pZCAwKSB7IGNvbG9yID0gJyc7IH1cbiAgICBpZiAob3B0cyA9PT0gdm9pZCAwKSB7IG9wdHMgPSB7fTsgfVxuICAgIHJldHVybiBuZXcgVGlueUNvbG9yKGNvbG9yLCBvcHRzKTtcbn1cbiIsIi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnQsIHByZWZlci1kZXN0cnVjdHVyaW5nICovXG5pbXBvcnQgeyBnZW5lcmF0ZSB9IGZyb20gJ0BhbnQtZGVzaWduL2NvbG9ycyc7XG5pbXBvcnQgeyBUaW55Q29sb3IgfSBmcm9tICdAY3RybC90aW55Y29sb3InO1xuaW1wb3J0IGNhblVzZURvbSBmcm9tIFwicmMtdXRpbC9lcy9Eb20vY2FuVXNlRG9tXCI7XG5pbXBvcnQgeyB1cGRhdGVDU1MgfSBmcm9tIFwicmMtdXRpbC9lcy9Eb20vZHluYW1pY0NTU1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAnLi4vX3V0aWwvd2FybmluZyc7XG52YXIgZHluYW1pY1N0eWxlTWFyayA9IFwiLWFudC1cIi5jb25jYXQoRGF0ZS5ub3coKSwgXCItXCIpLmNvbmNhdChNYXRoLnJhbmRvbSgpKTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRTdHlsZShnbG9iYWxQcmVmaXhDbHMsIHRoZW1lKSB7XG4gIHZhciB2YXJpYWJsZXMgPSB7fTtcblxuICB2YXIgZm9ybWF0Q29sb3IgPSBmdW5jdGlvbiBmb3JtYXRDb2xvcihjb2xvciwgdXBkYXRlcikge1xuICAgIHZhciBjbG9uZSA9IGNvbG9yLmNsb25lKCk7XG4gICAgY2xvbmUgPSAodXBkYXRlciA9PT0gbnVsbCB8fCB1cGRhdGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiB1cGRhdGVyKGNsb25lKSkgfHwgY2xvbmU7XG4gICAgcmV0dXJuIGNsb25lLnRvUmdiU3RyaW5nKCk7XG4gIH07XG5cbiAgdmFyIGZpbGxDb2xvciA9IGZ1bmN0aW9uIGZpbGxDb2xvcihjb2xvclZhbCwgdHlwZSkge1xuICAgIHZhciBiYXNlQ29sb3IgPSBuZXcgVGlueUNvbG9yKGNvbG9yVmFsKTtcbiAgICB2YXIgY29sb3JQYWxldHRlcyA9IGdlbmVyYXRlKGJhc2VDb2xvci50b1JnYlN0cmluZygpKTtcbiAgICB2YXJpYWJsZXNbXCJcIi5jb25jYXQodHlwZSwgXCItY29sb3JcIildID0gZm9ybWF0Q29sb3IoYmFzZUNvbG9yKTtcbiAgICB2YXJpYWJsZXNbXCJcIi5jb25jYXQodHlwZSwgXCItY29sb3ItZGlzYWJsZWRcIildID0gY29sb3JQYWxldHRlc1sxXTtcbiAgICB2YXJpYWJsZXNbXCJcIi5jb25jYXQodHlwZSwgXCItY29sb3ItaG92ZXJcIildID0gY29sb3JQYWxldHRlc1s0XTtcbiAgICB2YXJpYWJsZXNbXCJcIi5jb25jYXQodHlwZSwgXCItY29sb3ItYWN0aXZlXCIpXSA9IGNvbG9yUGFsZXR0ZXNbN107XG4gICAgdmFyaWFibGVzW1wiXCIuY29uY2F0KHR5cGUsIFwiLWNvbG9yLW91dGxpbmVcIildID0gYmFzZUNvbG9yLmNsb25lKCkuc2V0QWxwaGEoMC4yKS50b1JnYlN0cmluZygpO1xuICAgIHZhcmlhYmxlc1tcIlwiLmNvbmNhdCh0eXBlLCBcIi1jb2xvci1kZXByZWNhdGVkLWJnXCIpXSA9IGNvbG9yUGFsZXR0ZXNbMV07XG4gICAgdmFyaWFibGVzW1wiXCIuY29uY2F0KHR5cGUsIFwiLWNvbG9yLWRlcHJlY2F0ZWQtYm9yZGVyXCIpXSA9IGNvbG9yUGFsZXR0ZXNbM107XG4gIH07IC8vID09PT09PT09PT09PT09PT0gUHJpbWFyeSBDb2xvciA9PT09PT09PT09PT09PT09XG5cblxuICBpZiAodGhlbWUucHJpbWFyeUNvbG9yKSB7XG4gICAgZmlsbENvbG9yKHRoZW1lLnByaW1hcnlDb2xvciwgJ3ByaW1hcnknKTtcbiAgICB2YXIgcHJpbWFyeUNvbG9yID0gbmV3IFRpbnlDb2xvcih0aGVtZS5wcmltYXJ5Q29sb3IpO1xuICAgIHZhciBwcmltYXJ5Q29sb3JzID0gZ2VuZXJhdGUocHJpbWFyeUNvbG9yLnRvUmdiU3RyaW5nKCkpOyAvLyBMZWdhY3kgLSBXZSBzaG91bGQgdXNlIHNlbWFudGljIG5hbWluZyBzdGFuZGFyZFxuXG4gICAgcHJpbWFyeUNvbG9ycy5mb3JFYWNoKGZ1bmN0aW9uIChjb2xvciwgaW5kZXgpIHtcbiAgICAgIHZhcmlhYmxlc1tcInByaW1hcnktXCIuY29uY2F0KGluZGV4ICsgMSldID0gY29sb3I7XG4gICAgfSk7IC8vIERlcHJlY2F0ZWRcblxuICAgIHZhcmlhYmxlc1sncHJpbWFyeS1jb2xvci1kZXByZWNhdGVkLWwtMzUnXSA9IGZvcm1hdENvbG9yKHByaW1hcnlDb2xvciwgZnVuY3Rpb24gKGMpIHtcbiAgICAgIHJldHVybiBjLmxpZ2h0ZW4oMzUpO1xuICAgIH0pO1xuICAgIHZhcmlhYmxlc1sncHJpbWFyeS1jb2xvci1kZXByZWNhdGVkLWwtMjAnXSA9IGZvcm1hdENvbG9yKHByaW1hcnlDb2xvciwgZnVuY3Rpb24gKGMpIHtcbiAgICAgIHJldHVybiBjLmxpZ2h0ZW4oMjApO1xuICAgIH0pO1xuICAgIHZhcmlhYmxlc1sncHJpbWFyeS1jb2xvci1kZXByZWNhdGVkLXQtMjAnXSA9IGZvcm1hdENvbG9yKHByaW1hcnlDb2xvciwgZnVuY3Rpb24gKGMpIHtcbiAgICAgIHJldHVybiBjLnRpbnQoMjApO1xuICAgIH0pO1xuICAgIHZhcmlhYmxlc1sncHJpbWFyeS1jb2xvci1kZXByZWNhdGVkLXQtNTAnXSA9IGZvcm1hdENvbG9yKHByaW1hcnlDb2xvciwgZnVuY3Rpb24gKGMpIHtcbiAgICAgIHJldHVybiBjLnRpbnQoNTApO1xuICAgIH0pO1xuICAgIHZhcmlhYmxlc1sncHJpbWFyeS1jb2xvci1kZXByZWNhdGVkLWYtMTInXSA9IGZvcm1hdENvbG9yKHByaW1hcnlDb2xvciwgZnVuY3Rpb24gKGMpIHtcbiAgICAgIHJldHVybiBjLnNldEFscGhhKGMuZ2V0QWxwaGEoKSAqIDAuMTIpO1xuICAgIH0pO1xuICAgIHZhciBwcmltYXJ5QWN0aXZlQ29sb3IgPSBuZXcgVGlueUNvbG9yKHByaW1hcnlDb2xvcnNbMF0pO1xuICAgIHZhcmlhYmxlc1sncHJpbWFyeS1jb2xvci1hY3RpdmUtZGVwcmVjYXRlZC1mLTMwJ10gPSBmb3JtYXRDb2xvcihwcmltYXJ5QWN0aXZlQ29sb3IsIGZ1bmN0aW9uIChjKSB7XG4gICAgICByZXR1cm4gYy5zZXRBbHBoYShjLmdldEFscGhhKCkgKiAwLjMpO1xuICAgIH0pO1xuICAgIHZhcmlhYmxlc1sncHJpbWFyeS1jb2xvci1hY3RpdmUtZGVwcmVjYXRlZC1kLTAyJ10gPSBmb3JtYXRDb2xvcihwcmltYXJ5QWN0aXZlQ29sb3IsIGZ1bmN0aW9uIChjKSB7XG4gICAgICByZXR1cm4gYy5kYXJrZW4oMik7XG4gICAgfSk7XG4gIH0gLy8gPT09PT09PT09PT09PT09PSBTdWNjZXNzIENvbG9yID09PT09PT09PT09PT09PT1cblxuXG4gIGlmICh0aGVtZS5zdWNjZXNzQ29sb3IpIHtcbiAgICBmaWxsQ29sb3IodGhlbWUuc3VjY2Vzc0NvbG9yLCAnc3VjY2VzcycpO1xuICB9IC8vID09PT09PT09PT09PT09PT0gV2FybmluZyBDb2xvciA9PT09PT09PT09PT09PT09XG5cblxuICBpZiAodGhlbWUud2FybmluZ0NvbG9yKSB7XG4gICAgZmlsbENvbG9yKHRoZW1lLndhcm5pbmdDb2xvciwgJ3dhcm5pbmcnKTtcbiAgfSAvLyA9PT09PT09PT09PT09PT09PSBFcnJvciBDb2xvciA9PT09PT09PT09PT09PT09PVxuXG5cbiAgaWYgKHRoZW1lLmVycm9yQ29sb3IpIHtcbiAgICBmaWxsQ29sb3IodGhlbWUuZXJyb3JDb2xvciwgJ2Vycm9yJyk7XG4gIH0gLy8gPT09PT09PT09PT09PT09PT0gSW5mbyBDb2xvciA9PT09PT09PT09PT09PT09PT1cblxuXG4gIGlmICh0aGVtZS5pbmZvQ29sb3IpIHtcbiAgICBmaWxsQ29sb3IodGhlbWUuaW5mb0NvbG9yLCAnaW5mbycpO1xuICB9IC8vIENvbnZlcnQgdG8gY3NzIHZhcmlhYmxlc1xuXG5cbiAgdmFyIGNzc0xpc3QgPSBPYmplY3Qua2V5cyh2YXJpYWJsZXMpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIFwiLS1cIi5jb25jYXQoZ2xvYmFsUHJlZml4Q2xzLCBcIi1cIikuY29uY2F0KGtleSwgXCI6IFwiKS5jb25jYXQodmFyaWFibGVzW2tleV0sIFwiO1wiKTtcbiAgfSk7XG4gIHJldHVybiBcIlxcbiAgOnJvb3Qge1xcbiAgICBcIi5jb25jYXQoY3NzTGlzdC5qb2luKCdcXG4nKSwgXCJcXG4gIH1cXG4gIFwiKS50cmltKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJUaGVtZShnbG9iYWxQcmVmaXhDbHMsIHRoZW1lKSB7XG4gIHZhciBzdHlsZSA9IGdldFN0eWxlKGdsb2JhbFByZWZpeENscywgdGhlbWUpO1xuXG4gIGlmIChjYW5Vc2VEb20oKSkge1xuICAgIHVwZGF0ZUNTUyhzdHlsZSwgXCJcIi5jb25jYXQoZHluYW1pY1N0eWxlTWFyaywgXCItZHluYW1pYy10aGVtZVwiKSk7XG4gIH0gZWxzZSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0NvbmZpZ1Byb3ZpZGVyJywgJ1NTUiBkbyBub3Qgc3VwcG9ydCBkeW5hbWljIHRoZW1lIHdpdGggY3NzIHZhcmlhYmxlcy4nKSA6IHZvaWQgMDtcbiAgfVxufSIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IEljb25Db250ZXh0IGZyb20gXCJAYW50LWRlc2lnbi9pY29ucy9lcy9jb21wb25lbnRzL0NvbnRleHRcIjtcbmltcG9ydCB7IEZvcm1Qcm92aWRlciBhcyBSY0Zvcm1Qcm92aWRlciB9IGZyb20gJ3JjLWZpZWxkLWZvcm0nO1xuaW1wb3J0IHVzZU1lbW8gZnJvbSBcInJjLXV0aWwvZXMvaG9va3MvdXNlTWVtb1wiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IExvY2FsZVByb3ZpZGVyLCB7IEFOVF9NQVJLIH0gZnJvbSAnLi4vbG9jYWxlLXByb3ZpZGVyJztcbmltcG9ydCBMb2NhbGVSZWNlaXZlciBmcm9tICcuLi9sb2NhbGUtcHJvdmlkZXIvTG9jYWxlUmVjZWl2ZXInO1xuaW1wb3J0IGRlZmF1bHRMb2NhbGUgZnJvbSAnLi4vbG9jYWxlL2RlZmF1bHQnO1xuaW1wb3J0IG1lc3NhZ2UgZnJvbSAnLi4vbWVzc2FnZSc7XG5pbXBvcnQgbm90aWZpY2F0aW9uIGZyb20gJy4uL25vdGlmaWNhdGlvbic7XG5pbXBvcnQgeyBDb25maWdDb25zdW1lciwgQ29uZmlnQ29udGV4dCB9IGZyb20gJy4vY29udGV4dCc7XG5pbXBvcnQgeyByZWdpc3RlclRoZW1lIH0gZnJvbSAnLi9jc3NWYXJpYWJsZXMnO1xuaW1wb3J0IHsgRGlzYWJsZWRDb250ZXh0UHJvdmlkZXIgfSBmcm9tICcuL0Rpc2FibGVkQ29udGV4dCc7XG5pbXBvcnQgU2l6ZUNvbnRleHQsIHsgU2l6ZUNvbnRleHRQcm92aWRlciB9IGZyb20gJy4vU2l6ZUNvbnRleHQnO1xuZXhwb3J0IHsgQ29uZmlnQ29udGV4dCwgQ29uZmlnQ29uc3VtZXIgfTtcbmV4cG9ydCB2YXIgY29uZmlnQ29uc3VtZXJQcm9wcyA9IFsnZ2V0VGFyZ2V0Q29udGFpbmVyJywgJ2dldFBvcHVwQ29udGFpbmVyJywgJ3Jvb3RQcmVmaXhDbHMnLCAnZ2V0UHJlZml4Q2xzJywgJ3JlbmRlckVtcHR5JywgJ2NzcCcsICdhdXRvSW5zZXJ0U3BhY2VJbkJ1dHRvbicsICdsb2NhbGUnLCAncGFnZUhlYWRlciddOyAvLyBUaGVzZSBwcm9wcyBpcyB1c2VkIGJ5IGB1c2VDb250ZXh0YCBkaXJlY3RseSBpbiBzdWIgY29tcG9uZW50XG5cbnZhciBQQVNTRURfUFJPUFMgPSBbJ2dldFRhcmdldENvbnRhaW5lcicsICdnZXRQb3B1cENvbnRhaW5lcicsICdyZW5kZXJFbXB0eScsICdwYWdlSGVhZGVyJywgJ2lucHV0JywgJ3BhZ2luYXRpb24nLCAnZm9ybSddO1xuZXhwb3J0IHZhciBkZWZhdWx0UHJlZml4Q2xzID0gJ2FudCc7XG5leHBvcnQgdmFyIGRlZmF1bHRJY29uUHJlZml4Q2xzID0gJ2FudGljb24nO1xudmFyIGdsb2JhbFByZWZpeENscztcbnZhciBnbG9iYWxJY29uUHJlZml4Q2xzO1xuXG5mdW5jdGlvbiBnZXRHbG9iYWxQcmVmaXhDbHMoKSB7XG4gIHJldHVybiBnbG9iYWxQcmVmaXhDbHMgfHwgZGVmYXVsdFByZWZpeENscztcbn1cblxuZnVuY3Rpb24gZ2V0R2xvYmFsSWNvblByZWZpeENscygpIHtcbiAgcmV0dXJuIGdsb2JhbEljb25QcmVmaXhDbHMgfHwgZGVmYXVsdEljb25QcmVmaXhDbHM7XG59XG5cbnZhciBzZXRHbG9iYWxDb25maWcgPSBmdW5jdGlvbiBzZXRHbG9iYWxDb25maWcoX3JlZikge1xuICB2YXIgcHJlZml4Q2xzID0gX3JlZi5wcmVmaXhDbHMsXG4gICAgICBpY29uUHJlZml4Q2xzID0gX3JlZi5pY29uUHJlZml4Q2xzLFxuICAgICAgdGhlbWUgPSBfcmVmLnRoZW1lO1xuXG4gIGlmIChwcmVmaXhDbHMgIT09IHVuZGVmaW5lZCkge1xuICAgIGdsb2JhbFByZWZpeENscyA9IHByZWZpeENscztcbiAgfVxuXG4gIGlmIChpY29uUHJlZml4Q2xzICE9PSB1bmRlZmluZWQpIHtcbiAgICBnbG9iYWxJY29uUHJlZml4Q2xzID0gaWNvblByZWZpeENscztcbiAgfVxuXG4gIGlmICh0aGVtZSkge1xuICAgIHJlZ2lzdGVyVGhlbWUoZ2V0R2xvYmFsUHJlZml4Q2xzKCksIHRoZW1lKTtcbiAgfVxufTtcblxuZXhwb3J0IHZhciBnbG9iYWxDb25maWcgPSBmdW5jdGlvbiBnbG9iYWxDb25maWcoKSB7XG4gIHJldHVybiB7XG4gICAgZ2V0UHJlZml4Q2xzOiBmdW5jdGlvbiBnZXRQcmVmaXhDbHMoc3VmZml4Q2xzLCBjdXN0b21pemVQcmVmaXhDbHMpIHtcbiAgICAgIGlmIChjdXN0b21pemVQcmVmaXhDbHMpIHJldHVybiBjdXN0b21pemVQcmVmaXhDbHM7XG4gICAgICByZXR1cm4gc3VmZml4Q2xzID8gXCJcIi5jb25jYXQoZ2V0R2xvYmFsUHJlZml4Q2xzKCksIFwiLVwiKS5jb25jYXQoc3VmZml4Q2xzKSA6IGdldEdsb2JhbFByZWZpeENscygpO1xuICAgIH0sXG4gICAgZ2V0SWNvblByZWZpeENsczogZ2V0R2xvYmFsSWNvblByZWZpeENscyxcbiAgICBnZXRSb290UHJlZml4Q2xzOiBmdW5jdGlvbiBnZXRSb290UHJlZml4Q2xzKHJvb3RQcmVmaXhDbHMsIGN1c3RvbWl6ZVByZWZpeENscykge1xuICAgICAgLy8gQ3VzdG9taXplIHJvb3RQcmVmaXhDbHMgaXMgZmlyc3QgcHJpb3JpdHlcbiAgICAgIGlmIChyb290UHJlZml4Q2xzKSB7XG4gICAgICAgIHJldHVybiByb290UHJlZml4Q2xzO1xuICAgICAgfSAvLyBJZiBHbG9iYWwgcHJlZml4Q2xzIHByb3ZpZGVkLCB1c2UgdGhpc1xuXG5cbiAgICAgIGlmIChnbG9iYWxQcmVmaXhDbHMpIHtcbiAgICAgICAgcmV0dXJuIGdsb2JhbFByZWZpeENscztcbiAgICAgIH0gLy8gW0xlZ2FjeV0gSWYgY3VzdG9taXplIHByZWZpeENscyBwcm92aWRlZCwgd2UgY3V0IGl0IHRvIGdldCB0aGUgcHJlZml4Q2xzXG5cblxuICAgICAgaWYgKGN1c3RvbWl6ZVByZWZpeENscyAmJiBjdXN0b21pemVQcmVmaXhDbHMuaW5jbHVkZXMoJy0nKSkge1xuICAgICAgICByZXR1cm4gY3VzdG9taXplUHJlZml4Q2xzLnJlcGxhY2UoL14oLiopLVteLV0qJC8sICckMScpO1xuICAgICAgfSAvLyBGYWxsYmFjayB0byBkZWZhdWx0IHByZWZpeENsc1xuXG5cbiAgICAgIHJldHVybiBnZXRHbG9iYWxQcmVmaXhDbHMoKTtcbiAgICB9XG4gIH07XG59O1xuXG52YXIgUHJvdmlkZXJDaGlsZHJlbiA9IGZ1bmN0aW9uIFByb3ZpZGVyQ2hpbGRyZW4ocHJvcHMpIHtcbiAgdmFyIF9hLCBfYjtcblxuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNzcCA9IHByb3BzLmNzcCxcbiAgICAgIGF1dG9JbnNlcnRTcGFjZUluQnV0dG9uID0gcHJvcHMuYXV0b0luc2VydFNwYWNlSW5CdXR0b24sXG4gICAgICBmb3JtID0gcHJvcHMuZm9ybSxcbiAgICAgIGxvY2FsZSA9IHByb3BzLmxvY2FsZSxcbiAgICAgIGNvbXBvbmVudFNpemUgPSBwcm9wcy5jb21wb25lbnRTaXplLFxuICAgICAgZGlyZWN0aW9uID0gcHJvcHMuZGlyZWN0aW9uLFxuICAgICAgc3BhY2UgPSBwcm9wcy5zcGFjZSxcbiAgICAgIHZpcnR1YWwgPSBwcm9wcy52aXJ0dWFsLFxuICAgICAgZHJvcGRvd25NYXRjaFNlbGVjdFdpZHRoID0gcHJvcHMuZHJvcGRvd25NYXRjaFNlbGVjdFdpZHRoLFxuICAgICAgbGVnYWN5TG9jYWxlID0gcHJvcHMubGVnYWN5TG9jYWxlLFxuICAgICAgcGFyZW50Q29udGV4dCA9IHByb3BzLnBhcmVudENvbnRleHQsXG4gICAgICBpY29uUHJlZml4Q2xzID0gcHJvcHMuaWNvblByZWZpeENscyxcbiAgICAgIGNvbXBvbmVudERpc2FibGVkID0gcHJvcHMuY29tcG9uZW50RGlzYWJsZWQ7XG4gIHZhciBnZXRQcmVmaXhDbHMgPSBSZWFjdC51c2VDYWxsYmFjayhmdW5jdGlvbiAoc3VmZml4Q2xzLCBjdXN0b21pemVQcmVmaXhDbHMpIHtcbiAgICB2YXIgcHJlZml4Q2xzID0gcHJvcHMucHJlZml4Q2xzO1xuICAgIGlmIChjdXN0b21pemVQcmVmaXhDbHMpIHJldHVybiBjdXN0b21pemVQcmVmaXhDbHM7XG4gICAgdmFyIG1lcmdlZFByZWZpeENscyA9IHByZWZpeENscyB8fCBwYXJlbnRDb250ZXh0LmdldFByZWZpeENscygnJyk7XG4gICAgcmV0dXJuIHN1ZmZpeENscyA/IFwiXCIuY29uY2F0KG1lcmdlZFByZWZpeENscywgXCItXCIpLmNvbmNhdChzdWZmaXhDbHMpIDogbWVyZ2VkUHJlZml4Q2xzO1xuICB9LCBbcGFyZW50Q29udGV4dC5nZXRQcmVmaXhDbHMsIHByb3BzLnByZWZpeENsc10pO1xuXG4gIHZhciBjb25maWcgPSBfZXh0ZW5kcyhfZXh0ZW5kcyh7fSwgcGFyZW50Q29udGV4dCksIHtcbiAgICBjc3A6IGNzcCxcbiAgICBhdXRvSW5zZXJ0U3BhY2VJbkJ1dHRvbjogYXV0b0luc2VydFNwYWNlSW5CdXR0b24sXG4gICAgbG9jYWxlOiBsb2NhbGUgfHwgbGVnYWN5TG9jYWxlLFxuICAgIGRpcmVjdGlvbjogZGlyZWN0aW9uLFxuICAgIHNwYWNlOiBzcGFjZSxcbiAgICB2aXJ0dWFsOiB2aXJ0dWFsLFxuICAgIGRyb3Bkb3duTWF0Y2hTZWxlY3RXaWR0aDogZHJvcGRvd25NYXRjaFNlbGVjdFdpZHRoLFxuICAgIGdldFByZWZpeENsczogZ2V0UHJlZml4Q2xzXG4gIH0pOyAvLyBQYXNzIHRoZSBwcm9wcyB1c2VkIGJ5IGB1c2VDb250ZXh0YCBkaXJlY3RseSB3aXRoIGNoaWxkIGNvbXBvbmVudC5cbiAgLy8gVGhlc2UgcHJvcHMgc2hvdWxkIG1lcmdlZCBpbnRvIGBjb25maWdgLlxuXG5cbiAgUEFTU0VEX1BST1BTLmZvckVhY2goZnVuY3Rpb24gKHByb3BOYW1lKSB7XG4gICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcblxuICAgIGlmIChwcm9wVmFsdWUpIHtcbiAgICAgIGNvbmZpZ1twcm9wTmFtZV0gPSBwcm9wVmFsdWU7XG4gICAgfVxuICB9KTsgLy8gaHR0cHM6Ly9naXRodWIuY29tL2FudC1kZXNpZ24vYW50LWRlc2lnbi9pc3N1ZXMvMjc2MTdcblxuICB2YXIgbWVtb2VkQ29uZmlnID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGNvbmZpZztcbiAgfSwgY29uZmlnLCBmdW5jdGlvbiAocHJldkNvbmZpZywgY3VycmVudENvbmZpZykge1xuICAgIHZhciBwcmV2S2V5cyA9IE9iamVjdC5rZXlzKHByZXZDb25maWcpO1xuICAgIHZhciBjdXJyZW50S2V5cyA9IE9iamVjdC5rZXlzKGN1cnJlbnRDb25maWcpO1xuICAgIHJldHVybiBwcmV2S2V5cy5sZW5ndGggIT09IGN1cnJlbnRLZXlzLmxlbmd0aCB8fCBwcmV2S2V5cy5zb21lKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiBwcmV2Q29uZmlnW2tleV0gIT09IGN1cnJlbnRDb25maWdba2V5XTtcbiAgICB9KTtcbiAgfSk7XG4gIHZhciBtZW1vSWNvbkNvbnRleHRWYWx1ZSA9IFJlYWN0LnVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICBwcmVmaXhDbHM6IGljb25QcmVmaXhDbHMsXG4gICAgICBjc3A6IGNzcFxuICAgIH07XG4gIH0sIFtpY29uUHJlZml4Q2xzLCBjc3BdKTtcbiAgdmFyIGNoaWxkTm9kZSA9IGNoaWxkcmVuOyAvLyBBZGRpdGlvbmFsIEZvcm0gcHJvdmlkZXJcblxuICB2YXIgdmFsaWRhdGVNZXNzYWdlcyA9IHt9O1xuXG4gIGlmIChsb2NhbGUpIHtcbiAgICB2YWxpZGF0ZU1lc3NhZ2VzID0gKChfYSA9IGxvY2FsZS5Gb3JtKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZGVmYXVsdFZhbGlkYXRlTWVzc2FnZXMpIHx8ICgoX2IgPSBkZWZhdWx0TG9jYWxlLkZvcm0pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5kZWZhdWx0VmFsaWRhdGVNZXNzYWdlcykgfHwge307XG4gIH1cblxuICBpZiAoZm9ybSAmJiBmb3JtLnZhbGlkYXRlTWVzc2FnZXMpIHtcbiAgICB2YWxpZGF0ZU1lc3NhZ2VzID0gX2V4dGVuZHMoX2V4dGVuZHMoe30sIHZhbGlkYXRlTWVzc2FnZXMpLCBmb3JtLnZhbGlkYXRlTWVzc2FnZXMpO1xuICB9XG5cbiAgaWYgKE9iamVjdC5rZXlzKHZhbGlkYXRlTWVzc2FnZXMpLmxlbmd0aCA+IDApIHtcbiAgICBjaGlsZE5vZGUgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSY0Zvcm1Qcm92aWRlciwge1xuICAgICAgdmFsaWRhdGVNZXNzYWdlczogdmFsaWRhdGVNZXNzYWdlc1xuICAgIH0sIGNoaWxkcmVuKTtcbiAgfVxuXG4gIGlmIChsb2NhbGUpIHtcbiAgICBjaGlsZE5vZGUgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMb2NhbGVQcm92aWRlciwge1xuICAgICAgbG9jYWxlOiBsb2NhbGUsXG4gICAgICBfQU5UX01BUktfXzogQU5UX01BUktcbiAgICB9LCBjaGlsZE5vZGUpO1xuICB9XG5cbiAgaWYgKGljb25QcmVmaXhDbHMgfHwgY3NwKSB7XG4gICAgY2hpbGROb2RlID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoSWNvbkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiBtZW1vSWNvbkNvbnRleHRWYWx1ZVxuICAgIH0sIGNoaWxkTm9kZSk7XG4gIH1cblxuICBpZiAoY29tcG9uZW50U2l6ZSkge1xuICAgIGNoaWxkTm9kZSA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFNpemVDb250ZXh0UHJvdmlkZXIsIHtcbiAgICAgIHNpemU6IGNvbXBvbmVudFNpemVcbiAgICB9LCBjaGlsZE5vZGUpO1xuICB9XG5cbiAgaWYgKGNvbXBvbmVudERpc2FibGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICBjaGlsZE5vZGUgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChEaXNhYmxlZENvbnRleHRQcm92aWRlciwge1xuICAgICAgZGlzYWJsZWQ6IGNvbXBvbmVudERpc2FibGVkXG4gICAgfSwgY2hpbGROb2RlKTtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb25maWdDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IG1lbW9lZENvbmZpZ1xuICB9LCBjaGlsZE5vZGUpO1xufTtcblxudmFyIENvbmZpZ1Byb3ZpZGVyID0gZnVuY3Rpb24gQ29uZmlnUHJvdmlkZXIocHJvcHMpIHtcbiAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAocHJvcHMuZGlyZWN0aW9uKSB7XG4gICAgICBtZXNzYWdlLmNvbmZpZyh7XG4gICAgICAgIHJ0bDogcHJvcHMuZGlyZWN0aW9uID09PSAncnRsJ1xuICAgICAgfSk7XG4gICAgICBub3RpZmljYXRpb24uY29uZmlnKHtcbiAgICAgICAgcnRsOiBwcm9wcy5kaXJlY3Rpb24gPT09ICdydGwnXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtwcm9wcy5kaXJlY3Rpb25dKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExvY2FsZVJlY2VpdmVyLCBudWxsLCBmdW5jdGlvbiAoXywgX18sIGxlZ2FjeUxvY2FsZSkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb25maWdDb25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChQcm92aWRlckNoaWxkcmVuLCBfZXh0ZW5kcyh7XG4gICAgICAgIHBhcmVudENvbnRleHQ6IGNvbnRleHQsXG4gICAgICAgIGxlZ2FjeUxvY2FsZTogbGVnYWN5TG9jYWxlXG4gICAgICB9LCBwcm9wcykpO1xuICAgIH0pO1xuICB9KTtcbn07XG4vKiogQHByaXZhdGUgaW50ZXJuYWwgVXNhZ2UuIGRvIG5vdCB1c2UgaW4geW91ciBwcm9kdWN0aW9uICovXG5cblxuQ29uZmlnUHJvdmlkZXIuQ29uZmlnQ29udGV4dCA9IENvbmZpZ0NvbnRleHQ7XG5Db25maWdQcm92aWRlci5TaXplQ29udGV4dCA9IFNpemVDb250ZXh0O1xuQ29uZmlnUHJvdmlkZXIuY29uZmlnID0gc2V0R2xvYmFsQ29uZmlnO1xuZXhwb3J0IGRlZmF1bHQgQ29uZmlnUHJvdmlkZXI7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzXCI7XG5pbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlclwiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IExvY2FsZUNvbnRleHQgZnJvbSAnLi9jb250ZXh0JztcbmltcG9ydCBkZWZhdWx0TG9jYWxlRGF0YSBmcm9tICcuL2RlZmF1bHQnO1xuXG52YXIgTG9jYWxlUmVjZWl2ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKExvY2FsZVJlY2VpdmVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKExvY2FsZVJlY2VpdmVyKTtcblxuICBmdW5jdGlvbiBMb2NhbGVSZWNlaXZlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG9jYWxlUmVjZWl2ZXIpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKExvY2FsZVJlY2VpdmVyLCBbe1xuICAgIGtleTogXCJnZXRMb2NhbGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TG9jYWxlKCkge1xuICAgICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBjb21wb25lbnROYW1lID0gX3RoaXMkcHJvcHMuY29tcG9uZW50TmFtZSxcbiAgICAgICAgICBkZWZhdWx0TG9jYWxlID0gX3RoaXMkcHJvcHMuZGVmYXVsdExvY2FsZTtcbiAgICAgIHZhciBsb2NhbGUgPSBkZWZhdWx0TG9jYWxlIHx8IGRlZmF1bHRMb2NhbGVEYXRhW2NvbXBvbmVudE5hbWUgIT09IG51bGwgJiYgY29tcG9uZW50TmFtZSAhPT0gdm9pZCAwID8gY29tcG9uZW50TmFtZSA6ICdnbG9iYWwnXTtcbiAgICAgIHZhciBhbnRMb2NhbGUgPSB0aGlzLmNvbnRleHQ7XG4gICAgICB2YXIgbG9jYWxlRnJvbUNvbnRleHQgPSBjb21wb25lbnROYW1lICYmIGFudExvY2FsZSA/IGFudExvY2FsZVtjb21wb25lbnROYW1lXSA6IHt9O1xuICAgICAgcmV0dXJuIF9leHRlbmRzKF9leHRlbmRzKHt9LCBsb2NhbGUgaW5zdGFuY2VvZiBGdW5jdGlvbiA/IGxvY2FsZSgpIDogbG9jYWxlKSwgbG9jYWxlRnJvbUNvbnRleHQgfHwge30pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRMb2NhbGVDb2RlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldExvY2FsZUNvZGUoKSB7XG4gICAgICB2YXIgYW50TG9jYWxlID0gdGhpcy5jb250ZXh0O1xuICAgICAgdmFyIGxvY2FsZUNvZGUgPSBhbnRMb2NhbGUgJiYgYW50TG9jYWxlLmxvY2FsZTsgLy8gSGFkIHVzZSBMb2NhbGVQcm92aWRlIGJ1dCBkaWRuJ3Qgc2V0IGxvY2FsZVxuXG4gICAgICBpZiAoYW50TG9jYWxlICYmIGFudExvY2FsZS5leGlzdCAmJiAhbG9jYWxlQ29kZSkge1xuICAgICAgICByZXR1cm4gZGVmYXVsdExvY2FsZURhdGEubG9jYWxlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbG9jYWxlQ29kZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuKHRoaXMuZ2V0TG9jYWxlKCksIHRoaXMuZ2V0TG9jYWxlQ29kZSgpLCB0aGlzLmNvbnRleHQpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMb2NhbGVSZWNlaXZlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgTG9jYWxlUmVjZWl2ZXIgYXMgZGVmYXVsdCB9O1xuTG9jYWxlUmVjZWl2ZXIuZGVmYXVsdFByb3BzID0ge1xuICBjb21wb25lbnROYW1lOiAnZ2xvYmFsJ1xufTtcbkxvY2FsZVJlY2VpdmVyLmNvbnRleHRUeXBlID0gTG9jYWxlQ29udGV4dDtcbmV4cG9ydCBmdW5jdGlvbiB1c2VMb2NhbGVSZWNlaXZlcihjb21wb25lbnROYW1lLCBkZWZhdWx0TG9jYWxlKSB7XG4gIHZhciBhbnRMb2NhbGUgPSBSZWFjdC51c2VDb250ZXh0KExvY2FsZUNvbnRleHQpO1xuICB2YXIgY29tcG9uZW50TG9jYWxlID0gUmVhY3QudXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGxvY2FsZSA9IGRlZmF1bHRMb2NhbGUgfHwgZGVmYXVsdExvY2FsZURhdGFbY29tcG9uZW50TmFtZSB8fCAnZ2xvYmFsJ107XG4gICAgdmFyIGxvY2FsZUZyb21Db250ZXh0ID0gY29tcG9uZW50TmFtZSAmJiBhbnRMb2NhbGUgPyBhbnRMb2NhbGVbY29tcG9uZW50TmFtZV0gOiB7fTtcbiAgICByZXR1cm4gX2V4dGVuZHMoX2V4dGVuZHMoe30sIHR5cGVvZiBsb2NhbGUgPT09ICdmdW5jdGlvbicgPyBsb2NhbGUoKSA6IGxvY2FsZSksIGxvY2FsZUZyb21Db250ZXh0IHx8IHt9KTtcbiAgfSwgW2NvbXBvbmVudE5hbWUsIGRlZmF1bHRMb2NhbGUsIGFudExvY2FsZV0pO1xuICByZXR1cm4gW2NvbXBvbmVudExvY2FsZV07XG59IiwiLy8gVGhpcyBpY29uIGZpbGUgaXMgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkuXG52YXIgSW5mb0NpcmNsZUZpbGxlZCA9IHsgXCJpY29uXCI6IHsgXCJ0YWdcIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwidmlld0JveFwiOiBcIjY0IDY0IDg5NiA4OTZcIiwgXCJmb2N1c2FibGVcIjogXCJmYWxzZVwiIH0sIFwiY2hpbGRyZW5cIjogW3sgXCJ0YWdcIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNNTEyIDY0QzI2NC42IDY0IDY0IDI2NC42IDY0IDUxMnMyMDAuNiA0NDggNDQ4IDQ0OCA0NDgtMjAwLjYgNDQ4LTQ0OFM3NTkuNCA2NCA1MTIgNjR6bTMyIDY2NGMwIDQuNC0zLjYgOC04IDhoLTQ4Yy00LjQgMC04LTMuNi04LThWNDU2YzAtNC40IDMuNi04IDgtOGg0OGM0LjQgMCA4IDMuNiA4IDh2Mjcyem0tMzItMzQ0YTQ4LjAxIDQ4LjAxIDAgMDEwLTk2IDQ4LjAxIDQ4LjAxIDAgMDEwIDk2elwiIH0gfV0gfSwgXCJuYW1lXCI6IFwiaW5mby1jaXJjbGVcIiwgXCJ0aGVtZVwiOiBcImZpbGxlZFwiIH07XG5leHBvcnQgZGVmYXVsdCBJbmZvQ2lyY2xlRmlsbGVkO1xuIiwiaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDJcIjtcbi8vIEdFTkVSQVRFIEJZIC4vc2NyaXB0cy9nZW5lcmF0ZS50c1xuLy8gRE9OIE5PVCBFRElUIElUIE1BTlVBTExZXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSW5mb0NpcmNsZUZpbGxlZFN2ZyBmcm9tIFwiQGFudC1kZXNpZ24vaWNvbnMtc3ZnL2VzL2Fzbi9JbmZvQ2lyY2xlRmlsbGVkXCI7XG5pbXBvcnQgQW50ZEljb24gZnJvbSAnLi4vY29tcG9uZW50cy9BbnRkSWNvbic7XG52YXIgSW5mb0NpcmNsZUZpbGxlZCA9IGZ1bmN0aW9uIEluZm9DaXJjbGVGaWxsZWQocHJvcHMsIHJlZikge1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQW50ZEljb24sIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcHJvcHMpLCB7fSwge1xuICAgIHJlZjogcmVmLFxuICAgIGljb246IEluZm9DaXJjbGVGaWxsZWRTdmdcbiAgfSkpO1xufTtcbkluZm9DaXJjbGVGaWxsZWQuZGlzcGxheU5hbWUgPSAnSW5mb0NpcmNsZUZpbGxlZCc7XG5leHBvcnQgZGVmYXVsdCAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihJbmZvQ2lyY2xlRmlsbGVkKTsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgQ2hlY2tDaXJjbGVGaWxsZWQgZnJvbSBcIkBhbnQtZGVzaWduL2ljb25zL2VzL2ljb25zL0NoZWNrQ2lyY2xlRmlsbGVkXCI7XG5pbXBvcnQgQ2xvc2VDaXJjbGVGaWxsZWQgZnJvbSBcIkBhbnQtZGVzaWduL2ljb25zL2VzL2ljb25zL0Nsb3NlQ2lyY2xlRmlsbGVkXCI7XG5pbXBvcnQgRXhjbGFtYXRpb25DaXJjbGVGaWxsZWQgZnJvbSBcIkBhbnQtZGVzaWduL2ljb25zL2VzL2ljb25zL0V4Y2xhbWF0aW9uQ2lyY2xlRmlsbGVkXCI7XG5pbXBvcnQgSW5mb0NpcmNsZUZpbGxlZCBmcm9tIFwiQGFudC1kZXNpZ24vaWNvbnMvZXMvaWNvbnMvSW5mb0NpcmNsZUZpbGxlZFwiO1xuaW1wb3J0IExvYWRpbmdPdXRsaW5lZCBmcm9tIFwiQGFudC1kZXNpZ24vaWNvbnMvZXMvaWNvbnMvTG9hZGluZ091dGxpbmVkXCI7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSQ05vdGlmaWNhdGlvbiBmcm9tICdyYy1ub3RpZmljYXRpb24nO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IENvbmZpZ1Byb3ZpZGVyLCB7IGdsb2JhbENvbmZpZyB9IGZyb20gJy4uL2NvbmZpZy1wcm92aWRlcic7XG5pbXBvcnQgY3JlYXRlVXNlTWVzc2FnZSBmcm9tICcuL2hvb2tzL3VzZU1lc3NhZ2UnO1xudmFyIG1lc3NhZ2VJbnN0YW5jZTtcbnZhciBkZWZhdWx0RHVyYXRpb24gPSAzO1xudmFyIGRlZmF1bHRUb3A7XG52YXIga2V5ID0gMTtcbnZhciBsb2NhbFByZWZpeENscyA9ICcnO1xudmFyIHRyYW5zaXRpb25OYW1lID0gJ21vdmUtdXAnO1xudmFyIGhhc1RyYW5zaXRpb25OYW1lID0gZmFsc2U7XG52YXIgZ2V0Q29udGFpbmVyO1xudmFyIG1heENvdW50O1xudmFyIHJ0bCA9IGZhbHNlO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEtleVRoZW5JbmNyZWFzZUtleSgpIHtcbiAgcmV0dXJuIGtleSsrO1xufVxuXG5mdW5jdGlvbiBzZXRNZXNzYWdlQ29uZmlnKG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMudG9wICE9PSB1bmRlZmluZWQpIHtcbiAgICBkZWZhdWx0VG9wID0gb3B0aW9ucy50b3A7XG4gICAgbWVzc2FnZUluc3RhbmNlID0gbnVsbDsgLy8gZGVsZXRlIG1lc3NhZ2VJbnN0YW5jZSBmb3IgbmV3IGRlZmF1bHRUb3BcbiAgfVxuXG4gIGlmIChvcHRpb25zLmR1cmF0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICBkZWZhdWx0RHVyYXRpb24gPSBvcHRpb25zLmR1cmF0aW9uO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMucHJlZml4Q2xzICE9PSB1bmRlZmluZWQpIHtcbiAgICBsb2NhbFByZWZpeENscyA9IG9wdGlvbnMucHJlZml4Q2xzO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuZ2V0Q29udGFpbmVyICE9PSB1bmRlZmluZWQpIHtcbiAgICBnZXRDb250YWluZXIgPSBvcHRpb25zLmdldENvbnRhaW5lcjtcbiAgICBtZXNzYWdlSW5zdGFuY2UgPSBudWxsOyAvLyBkZWxldGUgbWVzc2FnZUluc3RhbmNlIGZvciBuZXcgZ2V0Q29udGFpbmVyXG4gIH1cblxuICBpZiAob3B0aW9ucy50cmFuc2l0aW9uTmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdHJhbnNpdGlvbk5hbWUgPSBvcHRpb25zLnRyYW5zaXRpb25OYW1lO1xuICAgIG1lc3NhZ2VJbnN0YW5jZSA9IG51bGw7IC8vIGRlbGV0ZSBtZXNzYWdlSW5zdGFuY2UgZm9yIG5ldyB0cmFuc2l0aW9uTmFtZVxuXG4gICAgaGFzVHJhbnNpdGlvbk5hbWUgPSB0cnVlO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMubWF4Q291bnQgIT09IHVuZGVmaW5lZCkge1xuICAgIG1heENvdW50ID0gb3B0aW9ucy5tYXhDb3VudDtcbiAgICBtZXNzYWdlSW5zdGFuY2UgPSBudWxsO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMucnRsICE9PSB1bmRlZmluZWQpIHtcbiAgICBydGwgPSBvcHRpb25zLnJ0bDtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRSQ05vdGlmaWNhdGlvbkluc3RhbmNlKGFyZ3MsIGNhbGxiYWNrKSB7XG4gIHZhciBjdXN0b21pemVQcmVmaXhDbHMgPSBhcmdzLnByZWZpeENscyxcbiAgICAgIGdldENvbnRleHRQb3B1cENvbnRhaW5lciA9IGFyZ3MuZ2V0UG9wdXBDb250YWluZXI7XG5cbiAgdmFyIF9nbG9iYWxDb25maWcgPSBnbG9iYWxDb25maWcoKSxcbiAgICAgIGdldFByZWZpeENscyA9IF9nbG9iYWxDb25maWcuZ2V0UHJlZml4Q2xzLFxuICAgICAgZ2V0Um9vdFByZWZpeENscyA9IF9nbG9iYWxDb25maWcuZ2V0Um9vdFByZWZpeENscyxcbiAgICAgIGdldEljb25QcmVmaXhDbHMgPSBfZ2xvYmFsQ29uZmlnLmdldEljb25QcmVmaXhDbHM7XG5cbiAgdmFyIHByZWZpeENscyA9IGdldFByZWZpeENscygnbWVzc2FnZScsIGN1c3RvbWl6ZVByZWZpeENscyB8fCBsb2NhbFByZWZpeENscyk7XG4gIHZhciByb290UHJlZml4Q2xzID0gZ2V0Um9vdFByZWZpeENscyhhcmdzLnJvb3RQcmVmaXhDbHMsIHByZWZpeENscyk7XG4gIHZhciBpY29uUHJlZml4Q2xzID0gZ2V0SWNvblByZWZpeENscygpO1xuXG4gIGlmIChtZXNzYWdlSW5zdGFuY2UpIHtcbiAgICBjYWxsYmFjayh7XG4gICAgICBwcmVmaXhDbHM6IHByZWZpeENscyxcbiAgICAgIHJvb3RQcmVmaXhDbHM6IHJvb3RQcmVmaXhDbHMsXG4gICAgICBpY29uUHJlZml4Q2xzOiBpY29uUHJlZml4Q2xzLFxuICAgICAgaW5zdGFuY2U6IG1lc3NhZ2VJbnN0YW5jZVxuICAgIH0pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBpbnN0YW5jZUNvbmZpZyA9IHtcbiAgICBwcmVmaXhDbHM6IHByZWZpeENscyxcbiAgICB0cmFuc2l0aW9uTmFtZTogaGFzVHJhbnNpdGlvbk5hbWUgPyB0cmFuc2l0aW9uTmFtZSA6IFwiXCIuY29uY2F0KHJvb3RQcmVmaXhDbHMsIFwiLVwiKS5jb25jYXQodHJhbnNpdGlvbk5hbWUpLFxuICAgIHN0eWxlOiB7XG4gICAgICB0b3A6IGRlZmF1bHRUb3BcbiAgICB9LFxuICAgIGdldENvbnRhaW5lcjogZ2V0Q29udGFpbmVyIHx8IGdldENvbnRleHRQb3B1cENvbnRhaW5lcixcbiAgICBtYXhDb3VudDogbWF4Q291bnRcbiAgfTtcbiAgUkNOb3RpZmljYXRpb24ubmV3SW5zdGFuY2UoaW5zdGFuY2VDb25maWcsIGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgIGlmIChtZXNzYWdlSW5zdGFuY2UpIHtcbiAgICAgIGNhbGxiYWNrKHtcbiAgICAgICAgcHJlZml4Q2xzOiBwcmVmaXhDbHMsXG4gICAgICAgIHJvb3RQcmVmaXhDbHM6IHJvb3RQcmVmaXhDbHMsXG4gICAgICAgIGljb25QcmVmaXhDbHM6IGljb25QcmVmaXhDbHMsXG4gICAgICAgIGluc3RhbmNlOiBtZXNzYWdlSW5zdGFuY2VcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIG1lc3NhZ2VJbnN0YW5jZSA9IGluc3RhbmNlO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdCcpIHtcbiAgICAgIG1lc3NhZ2VJbnN0YW5jZS5jb25maWcgPSBpbnN0YW5jZUNvbmZpZztcbiAgICB9XG5cbiAgICBjYWxsYmFjayh7XG4gICAgICBwcmVmaXhDbHM6IHByZWZpeENscyxcbiAgICAgIHJvb3RQcmVmaXhDbHM6IHJvb3RQcmVmaXhDbHMsXG4gICAgICBpY29uUHJlZml4Q2xzOiBpY29uUHJlZml4Q2xzLFxuICAgICAgaW5zdGFuY2U6IGluc3RhbmNlXG4gICAgfSk7XG4gIH0pO1xufVxuXG52YXIgdHlwZVRvSWNvbiA9IHtcbiAgaW5mbzogSW5mb0NpcmNsZUZpbGxlZCxcbiAgc3VjY2VzczogQ2hlY2tDaXJjbGVGaWxsZWQsXG4gIGVycm9yOiBDbG9zZUNpcmNsZUZpbGxlZCxcbiAgd2FybmluZzogRXhjbGFtYXRpb25DaXJjbGVGaWxsZWQsXG4gIGxvYWRpbmc6IExvYWRpbmdPdXRsaW5lZFxufTtcbmV4cG9ydCB2YXIgdHlwZUxpc3QgPSBPYmplY3Qua2V5cyh0eXBlVG9JY29uKTtcblxuZnVuY3Rpb24gZ2V0UkNOb3RpY2VQcm9wcyhhcmdzLCBwcmVmaXhDbHMsIGljb25QcmVmaXhDbHMpIHtcbiAgdmFyIF9jbGFzc05hbWVzO1xuXG4gIHZhciBkdXJhdGlvbiA9IGFyZ3MuZHVyYXRpb24gIT09IHVuZGVmaW5lZCA/IGFyZ3MuZHVyYXRpb24gOiBkZWZhdWx0RHVyYXRpb247XG4gIHZhciBJY29uQ29tcG9uZW50ID0gdHlwZVRvSWNvblthcmdzLnR5cGVdO1xuICB2YXIgbWVzc2FnZUNsYXNzID0gY2xhc3NOYW1lcyhcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLWN1c3RvbS1jb250ZW50XCIpLCAoX2NsYXNzTmFtZXMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc05hbWVzLCBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLVwiKS5jb25jYXQoYXJncy50eXBlKSwgYXJncy50eXBlKSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc05hbWVzLCBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLXJ0bFwiKSwgcnRsID09PSB0cnVlKSwgX2NsYXNzTmFtZXMpKTtcbiAgcmV0dXJuIHtcbiAgICBrZXk6IGFyZ3Mua2V5LFxuICAgIGR1cmF0aW9uOiBkdXJhdGlvbixcbiAgICBzdHlsZTogYXJncy5zdHlsZSB8fCB7fSxcbiAgICBjbGFzc05hbWU6IGFyZ3MuY2xhc3NOYW1lLFxuICAgIGNvbnRlbnQ6IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbmZpZ1Byb3ZpZGVyLCB7XG4gICAgICBpY29uUHJlZml4Q2xzOiBpY29uUHJlZml4Q2xzXG4gICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBtZXNzYWdlQ2xhc3NcbiAgICB9LCBhcmdzLmljb24gfHwgSWNvbkNvbXBvbmVudCAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChJY29uQ29tcG9uZW50LCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIGFyZ3MuY29udGVudCkpKSxcbiAgICBvbkNsb3NlOiBhcmdzLm9uQ2xvc2UsXG4gICAgb25DbGljazogYXJncy5vbkNsaWNrXG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vdGljZShhcmdzKSB7XG4gIHZhciB0YXJnZXQgPSBhcmdzLmtleSB8fCBnZXRLZXlUaGVuSW5jcmVhc2VLZXkoKTtcbiAgdmFyIGNsb3NlUHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgdmFyIGNhbGxiYWNrID0gZnVuY3Rpb24gY2FsbGJhY2soKSB7XG4gICAgICBpZiAodHlwZW9mIGFyZ3Mub25DbG9zZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBhcmdzLm9uQ2xvc2UoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc29sdmUodHJ1ZSk7XG4gICAgfTtcblxuICAgIGdldFJDTm90aWZpY2F0aW9uSW5zdGFuY2UoYXJncywgZnVuY3Rpb24gKF9yZWYpIHtcbiAgICAgIHZhciBwcmVmaXhDbHMgPSBfcmVmLnByZWZpeENscyxcbiAgICAgICAgICBpY29uUHJlZml4Q2xzID0gX3JlZi5pY29uUHJlZml4Q2xzLFxuICAgICAgICAgIGluc3RhbmNlID0gX3JlZi5pbnN0YW5jZTtcbiAgICAgIGluc3RhbmNlLm5vdGljZShnZXRSQ05vdGljZVByb3BzKF9leHRlbmRzKF9leHRlbmRzKHt9LCBhcmdzKSwge1xuICAgICAgICBrZXk6IHRhcmdldCxcbiAgICAgICAgb25DbG9zZTogY2FsbGJhY2tcbiAgICAgIH0pLCBwcmVmaXhDbHMsIGljb25QcmVmaXhDbHMpKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgdmFyIHJlc3VsdCA9IGZ1bmN0aW9uIHJlc3VsdCgpIHtcbiAgICBpZiAobWVzc2FnZUluc3RhbmNlKSB7XG4gICAgICBtZXNzYWdlSW5zdGFuY2UucmVtb3ZlTm90aWNlKHRhcmdldCk7XG4gICAgfVxuICB9O1xuXG4gIHJlc3VsdC50aGVuID0gZnVuY3Rpb24gKGZpbGxlZCwgcmVqZWN0ZWQpIHtcbiAgICByZXR1cm4gY2xvc2VQcm9taXNlLnRoZW4oZmlsbGVkLCByZWplY3RlZCk7XG4gIH07XG5cbiAgcmVzdWx0LnByb21pc2UgPSBjbG9zZVByb21pc2U7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIGlzQXJnc1Byb3BzKGNvbnRlbnQpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChjb250ZW50KSA9PT0gJ1tvYmplY3QgT2JqZWN0XScgJiYgISFjb250ZW50LmNvbnRlbnQ7XG59XG5cbnZhciBhcGkgPSB7XG4gIG9wZW46IG5vdGljZSxcbiAgY29uZmlnOiBzZXRNZXNzYWdlQ29uZmlnLFxuICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KG1lc3NhZ2VLZXkpIHtcbiAgICBpZiAobWVzc2FnZUluc3RhbmNlKSB7XG4gICAgICBpZiAobWVzc2FnZUtleSkge1xuICAgICAgICB2YXIgX21lc3NhZ2VJbnN0YW5jZSA9IG1lc3NhZ2VJbnN0YW5jZSxcbiAgICAgICAgICAgIHJlbW92ZU5vdGljZSA9IF9tZXNzYWdlSW5zdGFuY2UucmVtb3ZlTm90aWNlO1xuICAgICAgICByZW1vdmVOb3RpY2UobWVzc2FnZUtleSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX21lc3NhZ2VJbnN0YW5jZTIgPSBtZXNzYWdlSW5zdGFuY2UsXG4gICAgICAgICAgICBkZXN0cm95ID0gX21lc3NhZ2VJbnN0YW5jZTIuZGVzdHJveTtcbiAgICAgICAgZGVzdHJveSgpO1xuICAgICAgICBtZXNzYWdlSW5zdGFuY2UgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgfVxufTtcbmV4cG9ydCBmdW5jdGlvbiBhdHRhY2hUeXBlQXBpKG9yaWdpbmFsQXBpLCB0eXBlKSB7XG4gIG9yaWdpbmFsQXBpW3R5cGVdID0gZnVuY3Rpb24gKGNvbnRlbnQsIGR1cmF0aW9uLCBvbkNsb3NlKSB7XG4gICAgaWYgKGlzQXJnc1Byb3BzKGNvbnRlbnQpKSB7XG4gICAgICByZXR1cm4gb3JpZ2luYWxBcGkub3BlbihfZXh0ZW5kcyhfZXh0ZW5kcyh7fSwgY29udGVudCksIHtcbiAgICAgICAgdHlwZTogdHlwZVxuICAgICAgfSkpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZHVyYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIG9uQ2xvc2UgPSBkdXJhdGlvbjtcbiAgICAgIGR1cmF0aW9uID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIHJldHVybiBvcmlnaW5hbEFwaS5vcGVuKHtcbiAgICAgIGNvbnRlbnQ6IGNvbnRlbnQsXG4gICAgICBkdXJhdGlvbjogZHVyYXRpb24sXG4gICAgICB0eXBlOiB0eXBlLFxuICAgICAgb25DbG9zZTogb25DbG9zZVxuICAgIH0pO1xuICB9O1xufVxudHlwZUxpc3QuZm9yRWFjaChmdW5jdGlvbiAodHlwZSkge1xuICByZXR1cm4gYXR0YWNoVHlwZUFwaShhcGksIHR5cGUpO1xufSk7XG5hcGkud2FybiA9IGFwaS53YXJuaW5nO1xuYXBpLnVzZU1lc3NhZ2UgPSBjcmVhdGVVc2VNZXNzYWdlKGdldFJDTm90aWZpY2F0aW9uSW5zdGFuY2UsIGdldFJDTm90aWNlUHJvcHMpO1xuLyoqIEBwcml2YXRlIHRlc3QgT25seSBmdW5jdGlvbi4gTm90IHdvcmsgb24gcHJvZHVjdGlvbiAqL1xuXG5leHBvcnQgdmFyIGdldEluc3RhbmNlID0gZnVuY3Rpb24gZ2V0SW5zdGFuY2UoKSB7XG4gIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3QnID8gbWVzc2FnZUluc3RhbmNlIDogbnVsbDtcbn07XG5leHBvcnQgZGVmYXVsdCBhcGk7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXlcIjtcbmltcG9ydCB1c2VSQ05vdGlmaWNhdGlvbiBmcm9tIFwicmMtbm90aWZpY2F0aW9uL2VzL3VzZU5vdGlmaWNhdGlvblwiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgYXR0YWNoVHlwZUFwaSwgZ2V0S2V5VGhlbkluY3JlYXNlS2V5LCB0eXBlTGlzdCB9IGZyb20gJy4uJztcbmltcG9ydCB7IENvbmZpZ0NvbnN1bWVyIH0gZnJvbSAnLi4vLi4vY29uZmlnLXByb3ZpZGVyJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVVzZU1lc3NhZ2UoZ2V0UmNOb3RpZmljYXRpb25JbnN0YW5jZSwgZ2V0UkNOb3RpY2VQcm9wcykge1xuICB2YXIgdXNlTWVzc2FnZSA9IGZ1bmN0aW9uIHVzZU1lc3NhZ2UoKSB7XG4gICAgLy8gV2UgY2FuIG9ubHkgZ2V0IGNvbnRlbnQgYnkgcmVuZGVyXG4gICAgdmFyIGdldFByZWZpeENscztcbiAgICB2YXIgZ2V0UG9wdXBDb250YWluZXI7IC8vIFdlIGNyZWF0ZSBhIHByb3h5IHRvIGhhbmRsZSBkZWxheSBjcmVhdGVkIGluc3RhbmNlXG5cbiAgICB2YXIgaW5uZXJJbnN0YW5jZSA9IG51bGw7XG4gICAgdmFyIHByb3h5ID0ge1xuICAgICAgYWRkOiBmdW5jdGlvbiBhZGQobm90aWNlUHJvcHMsIGhvbGRlckNhbGxiYWNrKSB7XG4gICAgICAgIGlubmVySW5zdGFuY2UgPT09IG51bGwgfHwgaW5uZXJJbnN0YW5jZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5uZXJJbnN0YW5jZS5jb21wb25lbnQuYWRkKG5vdGljZVByb3BzLCBob2xkZXJDYWxsYmFjayk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHZhciBfdXNlUkNOb3RpZmljYXRpb24gPSB1c2VSQ05vdGlmaWNhdGlvbihwcm94eSksXG4gICAgICAgIF91c2VSQ05vdGlmaWNhdGlvbjIgPSBfc2xpY2VkVG9BcnJheShfdXNlUkNOb3RpZmljYXRpb24sIDIpLFxuICAgICAgICBob29rTm90aWZ5ID0gX3VzZVJDTm90aWZpY2F0aW9uMlswXSxcbiAgICAgICAgaG9sZGVyID0gX3VzZVJDTm90aWZpY2F0aW9uMlsxXTtcblxuICAgIGZ1bmN0aW9uIG5vdGlmeShhcmdzKSB7XG4gICAgICB2YXIgY3VzdG9taXplUHJlZml4Q2xzID0gYXJncy5wcmVmaXhDbHM7XG4gICAgICB2YXIgbWVyZ2VkUHJlZml4Q2xzID0gZ2V0UHJlZml4Q2xzKCdtZXNzYWdlJywgY3VzdG9taXplUHJlZml4Q2xzKTtcbiAgICAgIHZhciByb290UHJlZml4Q2xzID0gZ2V0UHJlZml4Q2xzKCk7XG4gICAgICB2YXIgdGFyZ2V0ID0gYXJncy5rZXkgfHwgZ2V0S2V5VGhlbkluY3JlYXNlS2V5KCk7XG4gICAgICB2YXIgY2xvc2VQcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgICAgdmFyIGNhbGxiYWNrID0gZnVuY3Rpb24gY2FsbGJhY2soKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBhcmdzLm9uQ2xvc2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGFyZ3Mub25DbG9zZSgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiByZXNvbHZlKHRydWUpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGdldFJjTm90aWZpY2F0aW9uSW5zdGFuY2UoX2V4dGVuZHMoX2V4dGVuZHMoe30sIGFyZ3MpLCB7XG4gICAgICAgICAgcHJlZml4Q2xzOiBtZXJnZWRQcmVmaXhDbHMsXG4gICAgICAgICAgcm9vdFByZWZpeENsczogcm9vdFByZWZpeENscyxcbiAgICAgICAgICBnZXRQb3B1cENvbnRhaW5lcjogZ2V0UG9wdXBDb250YWluZXJcbiAgICAgICAgfSksIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICAgICAgdmFyIHByZWZpeENscyA9IF9yZWYucHJlZml4Q2xzLFxuICAgICAgICAgICAgICBpbnN0YW5jZSA9IF9yZWYuaW5zdGFuY2U7XG4gICAgICAgICAgaW5uZXJJbnN0YW5jZSA9IGluc3RhbmNlO1xuICAgICAgICAgIGhvb2tOb3RpZnkoZ2V0UkNOb3RpY2VQcm9wcyhfZXh0ZW5kcyhfZXh0ZW5kcyh7fSwgYXJncyksIHtcbiAgICAgICAgICAgIGtleTogdGFyZ2V0LFxuICAgICAgICAgICAgb25DbG9zZTogY2FsbGJhY2tcbiAgICAgICAgICB9KSwgcHJlZml4Q2xzKSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG5cbiAgICAgIHZhciByZXN1bHQgPSBmdW5jdGlvbiByZXN1bHQoKSB7XG4gICAgICAgIGlmIChpbm5lckluc3RhbmNlKSB7XG4gICAgICAgICAgaW5uZXJJbnN0YW5jZS5yZW1vdmVOb3RpY2UodGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmVzdWx0LnRoZW4gPSBmdW5jdGlvbiAoZmlsbGVkLCByZWplY3RlZCkge1xuICAgICAgICByZXR1cm4gY2xvc2VQcm9taXNlLnRoZW4oZmlsbGVkLCByZWplY3RlZCk7XG4gICAgICB9O1xuXG4gICAgICByZXN1bHQucHJvbWlzZSA9IGNsb3NlUHJvbWlzZTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSAvLyBGaWxsIGZ1bmN0aW9uc1xuXG5cbiAgICB2YXIgaG9va0FwaVJlZiA9IFJlYWN0LnVzZVJlZih7fSk7XG4gICAgaG9va0FwaVJlZi5jdXJyZW50Lm9wZW4gPSBub3RpZnk7XG4gICAgdHlwZUxpc3QuZm9yRWFjaChmdW5jdGlvbiAodHlwZSkge1xuICAgICAgcmV0dXJuIGF0dGFjaFR5cGVBcGkoaG9va0FwaVJlZi5jdXJyZW50LCB0eXBlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2hvb2tBcGlSZWYuY3VycmVudCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29uZmlnQ29uc3VtZXIsIHtcbiAgICAgIGtleTogXCJob2xkZXJcIlxuICAgIH0sIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICBnZXRQcmVmaXhDbHMgPSBjb250ZXh0LmdldFByZWZpeENscztcbiAgICAgIGdldFBvcHVwQ29udGFpbmVyID0gY29udGV4dC5nZXRQb3B1cENvbnRhaW5lcjtcbiAgICAgIHJldHVybiBob2xkZXI7XG4gICAgfSldO1xuICB9O1xuXG4gIHJldHVybiB1c2VNZXNzYWdlO1xufSIsImltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWVcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHlcIjtcblxudmFyIF9fYXdhaXRlciA9IHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICByZXNvbHZlKHZhbHVlKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7XG4gICAgICByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTtcbiAgICB9XG5cbiAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gIH0pO1xufTtcblxuaW1wb3J0IENoZWNrQ2lyY2xlT3V0bGluZWQgZnJvbSBcIkBhbnQtZGVzaWduL2ljb25zL2VzL2ljb25zL0NoZWNrQ2lyY2xlT3V0bGluZWRcIjtcbmltcG9ydCBDbG9zZUNpcmNsZU91dGxpbmVkIGZyb20gXCJAYW50LWRlc2lnbi9pY29ucy9lcy9pY29ucy9DbG9zZUNpcmNsZU91dGxpbmVkXCI7XG5pbXBvcnQgQ2xvc2VPdXRsaW5lZCBmcm9tIFwiQGFudC1kZXNpZ24vaWNvbnMvZXMvaWNvbnMvQ2xvc2VPdXRsaW5lZFwiO1xuaW1wb3J0IEV4Y2xhbWF0aW9uQ2lyY2xlT3V0bGluZWQgZnJvbSBcIkBhbnQtZGVzaWduL2ljb25zL2VzL2ljb25zL0V4Y2xhbWF0aW9uQ2lyY2xlT3V0bGluZWRcIjtcbmltcG9ydCBJbmZvQ2lyY2xlT3V0bGluZWQgZnJvbSBcIkBhbnQtZGVzaWduL2ljb25zL2VzL2ljb25zL0luZm9DaXJjbGVPdXRsaW5lZFwiO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgTm90aWZpY2F0aW9uIGZyb20gJ3JjLW5vdGlmaWNhdGlvbic7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29uZmlnUHJvdmlkZXIsIHsgZ2xvYmFsQ29uZmlnIH0gZnJvbSAnLi4vY29uZmlnLXByb3ZpZGVyJztcbmltcG9ydCBjcmVhdGVVc2VOb3RpZmljYXRpb24gZnJvbSAnLi9ob29rcy91c2VOb3RpZmljYXRpb24nO1xudmFyIG5vdGlmaWNhdGlvbkluc3RhbmNlID0ge307XG52YXIgZGVmYXVsdER1cmF0aW9uID0gNC41O1xudmFyIGRlZmF1bHRUb3AgPSAyNDtcbnZhciBkZWZhdWx0Qm90dG9tID0gMjQ7XG52YXIgZGVmYXVsdFByZWZpeENscyA9ICcnO1xudmFyIGRlZmF1bHRQbGFjZW1lbnQgPSAndG9wUmlnaHQnO1xudmFyIGRlZmF1bHRHZXRDb250YWluZXI7XG52YXIgZGVmYXVsdENsb3NlSWNvbjtcbnZhciBydGwgPSBmYWxzZTtcbnZhciBtYXhDb3VudDtcblxuZnVuY3Rpb24gc2V0Tm90aWZpY2F0aW9uQ29uZmlnKG9wdGlvbnMpIHtcbiAgdmFyIGR1cmF0aW9uID0gb3B0aW9ucy5kdXJhdGlvbixcbiAgICAgIHBsYWNlbWVudCA9IG9wdGlvbnMucGxhY2VtZW50LFxuICAgICAgYm90dG9tID0gb3B0aW9ucy5ib3R0b20sXG4gICAgICB0b3AgPSBvcHRpb25zLnRvcCxcbiAgICAgIGdldENvbnRhaW5lciA9IG9wdGlvbnMuZ2V0Q29udGFpbmVyLFxuICAgICAgY2xvc2VJY29uID0gb3B0aW9ucy5jbG9zZUljb24sXG4gICAgICBwcmVmaXhDbHMgPSBvcHRpb25zLnByZWZpeENscztcblxuICBpZiAocHJlZml4Q2xzICE9PSB1bmRlZmluZWQpIHtcbiAgICBkZWZhdWx0UHJlZml4Q2xzID0gcHJlZml4Q2xzO1xuICB9XG5cbiAgaWYgKGR1cmF0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICBkZWZhdWx0RHVyYXRpb24gPSBkdXJhdGlvbjtcbiAgfVxuXG4gIGlmIChwbGFjZW1lbnQgIT09IHVuZGVmaW5lZCkge1xuICAgIGRlZmF1bHRQbGFjZW1lbnQgPSBwbGFjZW1lbnQ7XG4gIH0gZWxzZSBpZiAob3B0aW9ucy5ydGwpIHtcbiAgICBkZWZhdWx0UGxhY2VtZW50ID0gJ3RvcExlZnQnO1xuICB9XG5cbiAgaWYgKGJvdHRvbSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgZGVmYXVsdEJvdHRvbSA9IGJvdHRvbTtcbiAgfVxuXG4gIGlmICh0b3AgIT09IHVuZGVmaW5lZCkge1xuICAgIGRlZmF1bHRUb3AgPSB0b3A7XG4gIH1cblxuICBpZiAoZ2V0Q29udGFpbmVyICE9PSB1bmRlZmluZWQpIHtcbiAgICBkZWZhdWx0R2V0Q29udGFpbmVyID0gZ2V0Q29udGFpbmVyO1xuICB9XG5cbiAgaWYgKGNsb3NlSWNvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgZGVmYXVsdENsb3NlSWNvbiA9IGNsb3NlSWNvbjtcbiAgfVxuXG4gIGlmIChvcHRpb25zLnJ0bCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcnRsID0gb3B0aW9ucy5ydGw7XG4gIH1cblxuICBpZiAob3B0aW9ucy5tYXhDb3VudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgbWF4Q291bnQgPSBvcHRpb25zLm1heENvdW50O1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldFBsYWNlbWVudFN0eWxlKHBsYWNlbWVudCkge1xuICB2YXIgdG9wID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBkZWZhdWx0VG9wO1xuICB2YXIgYm90dG9tID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBkZWZhdWx0Qm90dG9tO1xuICB2YXIgc3R5bGU7XG5cbiAgc3dpdGNoIChwbGFjZW1lbnQpIHtcbiAgICBjYXNlICd0b3AnOlxuICAgICAgc3R5bGUgPSB7XG4gICAgICAgIGxlZnQ6ICc1MCUnLFxuICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC01MCUpJyxcbiAgICAgICAgcmlnaHQ6ICdhdXRvJyxcbiAgICAgICAgdG9wOiB0b3AsXG4gICAgICAgIGJvdHRvbTogJ2F1dG8nXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICd0b3BMZWZ0JzpcbiAgICAgIHN0eWxlID0ge1xuICAgICAgICBsZWZ0OiAwLFxuICAgICAgICB0b3A6IHRvcCxcbiAgICAgICAgYm90dG9tOiAnYXV0bydcbiAgICAgIH07XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3RvcFJpZ2h0JzpcbiAgICAgIHN0eWxlID0ge1xuICAgICAgICByaWdodDogMCxcbiAgICAgICAgdG9wOiB0b3AsXG4gICAgICAgIGJvdHRvbTogJ2F1dG8nXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdib3R0b20nOlxuICAgICAgc3R5bGUgPSB7XG4gICAgICAgIGxlZnQ6ICc1MCUnLFxuICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC01MCUpJyxcbiAgICAgICAgcmlnaHQ6ICdhdXRvJyxcbiAgICAgICAgdG9wOiAnYXV0bycsXG4gICAgICAgIGJvdHRvbTogYm90dG9tXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdib3R0b21MZWZ0JzpcbiAgICAgIHN0eWxlID0ge1xuICAgICAgICBsZWZ0OiAwLFxuICAgICAgICB0b3A6ICdhdXRvJyxcbiAgICAgICAgYm90dG9tOiBib3R0b21cbiAgICAgIH07XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICBzdHlsZSA9IHtcbiAgICAgICAgcmlnaHQ6IDAsXG4gICAgICAgIHRvcDogJ2F1dG8nLFxuICAgICAgICBib3R0b206IGJvdHRvbVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBnZXROb3RpZmljYXRpb25JbnN0YW5jZShhcmdzLCBjYWxsYmFjaykge1xuICB2YXIgX2FyZ3MkcGxhY2VtZW50ID0gYXJncy5wbGFjZW1lbnQsXG4gICAgICBwbGFjZW1lbnQgPSBfYXJncyRwbGFjZW1lbnQgPT09IHZvaWQgMCA/IGRlZmF1bHRQbGFjZW1lbnQgOiBfYXJncyRwbGFjZW1lbnQsXG4gICAgICB0b3AgPSBhcmdzLnRvcCxcbiAgICAgIGJvdHRvbSA9IGFyZ3MuYm90dG9tLFxuICAgICAgX2FyZ3MkZ2V0Q29udGFpbmVyID0gYXJncy5nZXRDb250YWluZXIsXG4gICAgICBnZXRDb250YWluZXIgPSBfYXJncyRnZXRDb250YWluZXIgPT09IHZvaWQgMCA/IGRlZmF1bHRHZXRDb250YWluZXIgOiBfYXJncyRnZXRDb250YWluZXIsXG4gICAgICBjdXN0b21pemVQcmVmaXhDbHMgPSBhcmdzLnByZWZpeENscztcblxuICB2YXIgX2dsb2JhbENvbmZpZyA9IGdsb2JhbENvbmZpZygpLFxuICAgICAgZ2V0UHJlZml4Q2xzID0gX2dsb2JhbENvbmZpZy5nZXRQcmVmaXhDbHMsXG4gICAgICBnZXRJY29uUHJlZml4Q2xzID0gX2dsb2JhbENvbmZpZy5nZXRJY29uUHJlZml4Q2xzO1xuXG4gIHZhciBwcmVmaXhDbHMgPSBnZXRQcmVmaXhDbHMoJ25vdGlmaWNhdGlvbicsIGN1c3RvbWl6ZVByZWZpeENscyB8fCBkZWZhdWx0UHJlZml4Q2xzKTtcbiAgdmFyIGljb25QcmVmaXhDbHMgPSBnZXRJY29uUHJlZml4Q2xzKCk7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItXCIpLmNvbmNhdChwbGFjZW1lbnQpO1xuICB2YXIgY2FjaGVJbnN0YW5jZSA9IG5vdGlmaWNhdGlvbkluc3RhbmNlW2NhY2hlS2V5XTtcblxuICBpZiAoY2FjaGVJbnN0YW5jZSkge1xuICAgIFByb21pc2UucmVzb2x2ZShjYWNoZUluc3RhbmNlKS50aGVuKGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgICAgY2FsbGJhY2soe1xuICAgICAgICBwcmVmaXhDbHM6IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItbm90aWNlXCIpLFxuICAgICAgICBpY29uUHJlZml4Q2xzOiBpY29uUHJlZml4Q2xzLFxuICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2VcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBub3RpZmljYXRpb25DbGFzcyA9IGNsYXNzTmFtZXMoXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1cIikuY29uY2F0KHBsYWNlbWVudCksIF9kZWZpbmVQcm9wZXJ0eSh7fSwgXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1ydGxcIiksIHJ0bCA9PT0gdHJ1ZSkpO1xuICBub3RpZmljYXRpb25JbnN0YW5jZVtjYWNoZUtleV0gPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgIE5vdGlmaWNhdGlvbi5uZXdJbnN0YW5jZSh7XG4gICAgICBwcmVmaXhDbHM6IHByZWZpeENscyxcbiAgICAgIGNsYXNzTmFtZTogbm90aWZpY2F0aW9uQ2xhc3MsXG4gICAgICBzdHlsZTogZ2V0UGxhY2VtZW50U3R5bGUocGxhY2VtZW50LCB0b3AsIGJvdHRvbSksXG4gICAgICBnZXRDb250YWluZXI6IGdldENvbnRhaW5lcixcbiAgICAgIG1heENvdW50OiBtYXhDb3VudFxuICAgIH0sIGZ1bmN0aW9uIChub3RpZmljYXRpb24pIHtcbiAgICAgIHJlc29sdmUobm90aWZpY2F0aW9uKTtcbiAgICAgIGNhbGxiYWNrKHtcbiAgICAgICAgcHJlZml4Q2xzOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLW5vdGljZVwiKSxcbiAgICAgICAgaWNvblByZWZpeENsczogaWNvblByZWZpeENscyxcbiAgICAgICAgaW5zdGFuY2U6IG5vdGlmaWNhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG52YXIgdHlwZVRvSWNvbiA9IHtcbiAgc3VjY2VzczogQ2hlY2tDaXJjbGVPdXRsaW5lZCxcbiAgaW5mbzogSW5mb0NpcmNsZU91dGxpbmVkLFxuICBlcnJvcjogQ2xvc2VDaXJjbGVPdXRsaW5lZCxcbiAgd2FybmluZzogRXhjbGFtYXRpb25DaXJjbGVPdXRsaW5lZFxufTtcblxuZnVuY3Rpb24gZ2V0UkNOb3RpY2VQcm9wcyhhcmdzLCBwcmVmaXhDbHMsIGljb25QcmVmaXhDbHMpIHtcbiAgdmFyIGR1cmF0aW9uQXJnID0gYXJncy5kdXJhdGlvbixcbiAgICAgIGljb24gPSBhcmdzLmljb24sXG4gICAgICB0eXBlID0gYXJncy50eXBlLFxuICAgICAgZGVzY3JpcHRpb24gPSBhcmdzLmRlc2NyaXB0aW9uLFxuICAgICAgbWVzc2FnZSA9IGFyZ3MubWVzc2FnZSxcbiAgICAgIGJ0biA9IGFyZ3MuYnRuLFxuICAgICAgb25DbG9zZSA9IGFyZ3Mub25DbG9zZSxcbiAgICAgIG9uQ2xpY2sgPSBhcmdzLm9uQ2xpY2ssXG4gICAgICBrZXkgPSBhcmdzLmtleSxcbiAgICAgIHN0eWxlID0gYXJncy5zdHlsZSxcbiAgICAgIGNsYXNzTmFtZSA9IGFyZ3MuY2xhc3NOYW1lLFxuICAgICAgX2FyZ3MkY2xvc2VJY29uID0gYXJncy5jbG9zZUljb24sXG4gICAgICBjbG9zZUljb24gPSBfYXJncyRjbG9zZUljb24gPT09IHZvaWQgMCA/IGRlZmF1bHRDbG9zZUljb24gOiBfYXJncyRjbG9zZUljb247XG4gIHZhciBkdXJhdGlvbiA9IGR1cmF0aW9uQXJnID09PSB1bmRlZmluZWQgPyBkZWZhdWx0RHVyYXRpb24gOiBkdXJhdGlvbkFyZztcbiAgdmFyIGljb25Ob2RlID0gbnVsbDtcblxuICBpZiAoaWNvbikge1xuICAgIGljb25Ob2RlID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1pY29uXCIpXG4gICAgfSwgYXJncy5pY29uKTtcbiAgfSBlbHNlIGlmICh0eXBlKSB7XG4gICAgaWNvbk5vZGUgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCh0eXBlVG9JY29uW3R5cGVdIHx8IG51bGwsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1pY29uIFwiKS5jb25jYXQocHJlZml4Q2xzLCBcIi1pY29uLVwiKS5jb25jYXQodHlwZSlcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBjbG9zZUljb25Ub1JlbmRlciA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLWNsb3NlLXhcIilcbiAgfSwgY2xvc2VJY29uIHx8IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENsb3NlT3V0bGluZWQsIHtcbiAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItY2xvc2UtaWNvblwiKVxuICB9KSk7XG4gIHZhciBhdXRvTWFyZ2luVGFnID0gIWRlc2NyaXB0aW9uICYmIGljb25Ob2RlID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItbWVzc2FnZS1zaW5nbGUtbGluZS1hdXRvLW1hcmdpblwiKVxuICB9KSA6IG51bGw7XG4gIHJldHVybiB7XG4gICAgY29udGVudDogLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29uZmlnUHJvdmlkZXIsIHtcbiAgICAgIGljb25QcmVmaXhDbHM6IGljb25QcmVmaXhDbHNcbiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IGljb25Ob2RlID8gXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi13aXRoLWljb25cIikgOiAnJyxcbiAgICAgIHJvbGU6IFwiYWxlcnRcIlxuICAgIH0sIGljb25Ob2RlLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItbWVzc2FnZVwiKVxuICAgIH0sIGF1dG9NYXJnaW5UYWcsIG1lc3NhZ2UpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItZGVzY3JpcHRpb25cIilcbiAgICB9LCBkZXNjcmlwdGlvbiksIGJ0biA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItYnRuXCIpXG4gICAgfSwgYnRuKSA6IG51bGwpKSxcbiAgICBkdXJhdGlvbjogZHVyYXRpb24sXG4gICAgY2xvc2FibGU6IHRydWUsXG4gICAgY2xvc2VJY29uOiBjbG9zZUljb25Ub1JlbmRlcixcbiAgICBvbkNsb3NlOiBvbkNsb3NlLFxuICAgIG9uQ2xpY2s6IG9uQ2xpY2ssXG4gICAga2V5OiBrZXksXG4gICAgc3R5bGU6IHN0eWxlIHx8IHt9LFxuICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcyhjbGFzc05hbWUsIF9kZWZpbmVQcm9wZXJ0eSh7fSwgXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1cIikuY29uY2F0KHR5cGUpLCAhIXR5cGUpKVxuICB9O1xufVxuXG5mdW5jdGlvbiBub3RpY2UoYXJncykge1xuICBnZXROb3RpZmljYXRpb25JbnN0YW5jZShhcmdzLCBmdW5jdGlvbiAoX3JlZikge1xuICAgIHZhciBwcmVmaXhDbHMgPSBfcmVmLnByZWZpeENscyxcbiAgICAgICAgaWNvblByZWZpeENscyA9IF9yZWYuaWNvblByZWZpeENscyxcbiAgICAgICAgaW5zdGFuY2UgPSBfcmVmLmluc3RhbmNlO1xuICAgIGluc3RhbmNlLm5vdGljZShnZXRSQ05vdGljZVByb3BzKGFyZ3MsIHByZWZpeENscywgaWNvblByZWZpeENscykpO1xuICB9KTtcbn1cblxudmFyIGFwaSA9IHtcbiAgb3Blbjogbm90aWNlLFxuICBjbG9zZTogZnVuY3Rpb24gY2xvc2Uoa2V5KSB7XG4gICAgT2JqZWN0LmtleXMobm90aWZpY2F0aW9uSW5zdGFuY2UpLmZvckVhY2goZnVuY3Rpb24gKGNhY2hlS2V5KSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5vdGlmaWNhdGlvbkluc3RhbmNlW2NhY2hlS2V5XSkudGhlbihmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICAgICAgaW5zdGFuY2UucmVtb3ZlTm90aWNlKGtleSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSxcbiAgY29uZmlnOiBzZXROb3RpZmljYXRpb25Db25maWcsXG4gIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgT2JqZWN0LmtleXMobm90aWZpY2F0aW9uSW5zdGFuY2UpLmZvckVhY2goZnVuY3Rpb24gKGNhY2hlS2V5KSB7XG4gICAgICBQcm9taXNlLnJlc29sdmUobm90aWZpY2F0aW9uSW5zdGFuY2VbY2FjaGVLZXldKS50aGVuKGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgICAgICBpbnN0YW5jZS5kZXN0cm95KCk7XG4gICAgICB9KTtcbiAgICAgIGRlbGV0ZSBub3RpZmljYXRpb25JbnN0YW5jZVtjYWNoZUtleV07IC8vIGxndG1banMvbWlzc2luZy1hd2FpdF1cbiAgICB9KTtcbiAgfVxufTtcblsnc3VjY2VzcycsICdpbmZvJywgJ3dhcm5pbmcnLCAnZXJyb3InXS5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gIGFwaVt0eXBlXSA9IGZ1bmN0aW9uIChhcmdzKSB7XG4gICAgcmV0dXJuIGFwaS5vcGVuKF9leHRlbmRzKF9leHRlbmRzKHt9LCBhcmdzKSwge1xuICAgICAgdHlwZTogdHlwZVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuYXBpLndhcm4gPSBhcGkud2FybmluZztcbmFwaS51c2VOb3RpZmljYXRpb24gPSBjcmVhdGVVc2VOb3RpZmljYXRpb24oZ2V0Tm90aWZpY2F0aW9uSW5zdGFuY2UsIGdldFJDTm90aWNlUHJvcHMpO1xuLyoqIEBwcml2YXRlIHRlc3QgT25seSBmdW5jdGlvbi4gTm90IHdvcmsgb24gcHJvZHVjdGlvbiAqL1xuXG5leHBvcnQgdmFyIGdldEluc3RhbmNlID0gZnVuY3Rpb24gZ2V0SW5zdGFuY2UoY2FjaGVLZXkpIHtcbiAgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHtcbiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHtcbiAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHtcbiAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdCcgPyBub3RpZmljYXRpb25JbnN0YW5jZVtjYWNoZUtleV0gOiBudWxsKTtcblxuICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwgX2NhbGxlZSk7XG4gIH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBhcGk7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXlcIjtcbmltcG9ydCB1c2VSQ05vdGlmaWNhdGlvbiBmcm9tIFwicmMtbm90aWZpY2F0aW9uL2VzL3VzZU5vdGlmaWNhdGlvblwiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ29uZmlnQ29uc3VtZXIgfSBmcm9tICcuLi8uLi9jb25maWctcHJvdmlkZXInO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlVXNlTm90aWZpY2F0aW9uKGdldE5vdGlmaWNhdGlvbkluc3RhbmNlLCBnZXRSQ05vdGljZVByb3BzKSB7XG4gIHZhciB1c2VOb3RpZmljYXRpb24gPSBmdW5jdGlvbiB1c2VOb3RpZmljYXRpb24oKSB7XG4gICAgLy8gV2UgY2FuIG9ubHkgZ2V0IGNvbnRlbnQgYnkgcmVuZGVyXG4gICAgdmFyIGdldFByZWZpeENsczsgLy8gV2UgY3JlYXRlIGEgcHJveHkgdG8gaGFuZGxlIGRlbGF5IGNyZWF0ZWQgaW5zdGFuY2VcblxuICAgIHZhciBpbm5lckluc3RhbmNlID0gbnVsbDtcbiAgICB2YXIgcHJveHkgPSB7XG4gICAgICBhZGQ6IGZ1bmN0aW9uIGFkZChub3RpY2VQcm9wcywgaG9sZGVyQ2FsbGJhY2spIHtcbiAgICAgICAgaW5uZXJJbnN0YW5jZSA9PT0gbnVsbCB8fCBpbm5lckluc3RhbmNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbm5lckluc3RhbmNlLmNvbXBvbmVudC5hZGQobm90aWNlUHJvcHMsIGhvbGRlckNhbGxiYWNrKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIF91c2VSQ05vdGlmaWNhdGlvbiA9IHVzZVJDTm90aWZpY2F0aW9uKHByb3h5KSxcbiAgICAgICAgX3VzZVJDTm90aWZpY2F0aW9uMiA9IF9zbGljZWRUb0FycmF5KF91c2VSQ05vdGlmaWNhdGlvbiwgMiksXG4gICAgICAgIGhvb2tOb3RpZnkgPSBfdXNlUkNOb3RpZmljYXRpb24yWzBdLFxuICAgICAgICBob2xkZXIgPSBfdXNlUkNOb3RpZmljYXRpb24yWzFdO1xuXG4gICAgZnVuY3Rpb24gbm90aWZ5KGFyZ3MpIHtcbiAgICAgIHZhciBjdXN0b21pemVQcmVmaXhDbHMgPSBhcmdzLnByZWZpeENscztcbiAgICAgIHZhciBtZXJnZWRQcmVmaXhDbHMgPSBnZXRQcmVmaXhDbHMoJ25vdGlmaWNhdGlvbicsIGN1c3RvbWl6ZVByZWZpeENscyk7XG4gICAgICBnZXROb3RpZmljYXRpb25JbnN0YW5jZShfZXh0ZW5kcyhfZXh0ZW5kcyh7fSwgYXJncyksIHtcbiAgICAgICAgcHJlZml4Q2xzOiBtZXJnZWRQcmVmaXhDbHNcbiAgICAgIH0pLCBmdW5jdGlvbiAoX3JlZikge1xuICAgICAgICB2YXIgcHJlZml4Q2xzID0gX3JlZi5wcmVmaXhDbHMsXG4gICAgICAgICAgICBpbnN0YW5jZSA9IF9yZWYuaW5zdGFuY2U7XG4gICAgICAgIGlubmVySW5zdGFuY2UgPSBpbnN0YW5jZTtcbiAgICAgICAgaG9va05vdGlmeShnZXRSQ05vdGljZVByb3BzKGFyZ3MsIHByZWZpeENscykpO1xuICAgICAgfSk7XG4gICAgfSAvLyBGaWxsIGZ1bmN0aW9uc1xuXG5cbiAgICB2YXIgaG9va0FwaVJlZiA9IFJlYWN0LnVzZVJlZih7fSk7XG4gICAgaG9va0FwaVJlZi5jdXJyZW50Lm9wZW4gPSBub3RpZnk7XG4gICAgWydzdWNjZXNzJywgJ2luZm8nLCAnd2FybmluZycsICdlcnJvciddLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgIGhvb2tBcGlSZWYuY3VycmVudFt0eXBlXSA9IGZ1bmN0aW9uIChhcmdzKSB7XG4gICAgICAgIHJldHVybiBob29rQXBpUmVmLmN1cnJlbnQub3BlbihfZXh0ZW5kcyhfZXh0ZW5kcyh7fSwgYXJncyksIHtcbiAgICAgICAgICB0eXBlOiB0eXBlXG4gICAgICAgIH0pKTtcbiAgICAgIH07XG4gICAgfSk7XG4gICAgcmV0dXJuIFtob29rQXBpUmVmLmN1cnJlbnQsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbmZpZ0NvbnN1bWVyLCB7XG4gICAgICBrZXk6IFwiaG9sZGVyXCJcbiAgICB9LCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgZ2V0UHJlZml4Q2xzID0gY29udGV4dC5nZXRQcmVmaXhDbHM7XG4gICAgICByZXR1cm4gaG9sZGVyO1xuICAgIH0pXTtcbiAgfTtcblxuICByZXR1cm4gdXNlTm90aWZpY2F0aW9uO1xufSIsImltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyXCI7XG4vLyBHRU5FUkFURSBCWSAuL3NjcmlwdHMvZ2VuZXJhdGUudHNcbi8vIERPTiBOT1QgRURJVCBJVCBNQU5VQUxMWVxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IENoZWNrQ2lyY2xlRmlsbGVkU3ZnIGZyb20gXCJAYW50LWRlc2lnbi9pY29ucy1zdmcvZXMvYXNuL0NoZWNrQ2lyY2xlRmlsbGVkXCI7XG5pbXBvcnQgQW50ZEljb24gZnJvbSAnLi4vY29tcG9uZW50cy9BbnRkSWNvbic7XG52YXIgQ2hlY2tDaXJjbGVGaWxsZWQgPSBmdW5jdGlvbiBDaGVja0NpcmNsZUZpbGxlZChwcm9wcywgcmVmKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBbnRkSWNvbiwgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBwcm9wcyksIHt9LCB7XG4gICAgcmVmOiByZWYsXG4gICAgaWNvbjogQ2hlY2tDaXJjbGVGaWxsZWRTdmdcbiAgfSkpO1xufTtcbkNoZWNrQ2lyY2xlRmlsbGVkLmRpc3BsYXlOYW1lID0gJ0NoZWNrQ2lyY2xlRmlsbGVkJztcbmV4cG9ydCBkZWZhdWx0IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKENoZWNrQ2lyY2xlRmlsbGVkKTsiLCIvLyBUaGlzIGljb24gZmlsZSBpcyBnZW5lcmF0ZWQgYXV0b21hdGljYWxseS5cbnZhciBDaGVja0NpcmNsZU91dGxpbmVkID0geyBcImljb25cIjogeyBcInRhZ1wiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ2aWV3Qm94XCI6IFwiNjQgNjQgODk2IDg5NlwiLCBcImZvY3VzYWJsZVwiOiBcImZhbHNlXCIgfSwgXCJjaGlsZHJlblwiOiBbeyBcInRhZ1wiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk02OTkgMzUzaC00Ni45Yy0xMC4yIDAtMTkuOSA0LjktMjUuOSAxMy4zTDQ2OSA1ODQuM2wtNzEuMi05OC44Yy02LTguMy0xNS42LTEzLjMtMjUuOS0xMy4zSDMyNWMtNi41IDAtMTAuMyA3LjQtNi41IDEyLjdsMTI0LjYgMTcyLjhhMzEuOCAzMS44IDAgMDA1MS43IDBsMjEwLjYtMjkyYzMuOS01LjMuMS0xMi43LTYuNC0xMi43elwiIH0gfSwgeyBcInRhZ1wiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk01MTIgNjRDMjY0LjYgNjQgNjQgMjY0LjYgNjQgNTEyczIwMC42IDQ0OCA0NDggNDQ4IDQ0OC0yMDAuNiA0NDgtNDQ4Uzc1OS40IDY0IDUxMiA2NHptMCA4MjBjLTIwNS40IDAtMzcyLTE2Ni42LTM3Mi0zNzJzMTY2LjYtMzcyIDM3Mi0zNzIgMzcyIDE2Ni42IDM3MiAzNzItMTY2LjYgMzcyLTM3MiAzNzJ6XCIgfSB9XSB9LCBcIm5hbWVcIjogXCJjaGVjay1jaXJjbGVcIiwgXCJ0aGVtZVwiOiBcIm91dGxpbmVkXCIgfTtcbmV4cG9ydCBkZWZhdWx0IENoZWNrQ2lyY2xlT3V0bGluZWQ7XG4iLCJpbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMlwiO1xuLy8gR0VORVJBVEUgQlkgLi9zY3JpcHRzL2dlbmVyYXRlLnRzXG4vLyBET04gTk9UIEVESVQgSVQgTUFOVUFMTFlcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDaGVja0NpcmNsZU91dGxpbmVkU3ZnIGZyb20gXCJAYW50LWRlc2lnbi9pY29ucy1zdmcvZXMvYXNuL0NoZWNrQ2lyY2xlT3V0bGluZWRcIjtcbmltcG9ydCBBbnRkSWNvbiBmcm9tICcuLi9jb21wb25lbnRzL0FudGRJY29uJztcbnZhciBDaGVja0NpcmNsZU91dGxpbmVkID0gZnVuY3Rpb24gQ2hlY2tDaXJjbGVPdXRsaW5lZChwcm9wcywgcmVmKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBbnRkSWNvbiwgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBwcm9wcyksIHt9LCB7XG4gICAgcmVmOiByZWYsXG4gICAgaWNvbjogQ2hlY2tDaXJjbGVPdXRsaW5lZFN2Z1xuICB9KSk7XG59O1xuQ2hlY2tDaXJjbGVPdXRsaW5lZC5kaXNwbGF5TmFtZSA9ICdDaGVja0NpcmNsZU91dGxpbmVkJztcbmV4cG9ydCBkZWZhdWx0IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKENoZWNrQ2lyY2xlT3V0bGluZWQpOyIsIi8vIFRoaXMgaWNvbiBmaWxlIGlzIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5LlxudmFyIENsb3NlQ2lyY2xlT3V0bGluZWQgPSB7IFwiaWNvblwiOiB7IFwidGFnXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcImZpbGwtcnVsZVwiOiBcImV2ZW5vZGRcIiwgXCJ2aWV3Qm94XCI6IFwiNjQgNjQgODk2IDg5NlwiLCBcImZvY3VzYWJsZVwiOiBcImZhbHNlXCIgfSwgXCJjaGlsZHJlblwiOiBbeyBcInRhZ1wiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk01MTIgNjRjMjQ3LjQgMCA0NDggMjAwLjYgNDQ4IDQ0OFM3NTkuNCA5NjAgNTEyIDk2MCA2NCA3NTkuNCA2NCA1MTIgMjY0LjYgNjQgNTEyIDY0em0wIDc2Yy0yMDUuNCAwLTM3MiAxNjYuNi0zNzIgMzcyczE2Ni42IDM3MiAzNzIgMzcyIDM3Mi0xNjYuNiAzNzItMzcyLTE2Ni42LTM3Mi0zNzItMzcyem0xMjguMDEgMTk4LjgzYy4wMyAwIC4wNS4wMS4wOS4wNmw0NS4wMiA0NS4wMWEuMi4yIDAgMDEuMDUuMDkuMTIuMTIgMCAwMTAgLjA3YzAgLjAyLS4wMS4wNC0uMDUuMDhMNTU3LjI1IDUxMmwxMjcuODcgMTI3Ljg2YS4yNy4yNyAwIDAxLjA1LjA2di4wMmEuMTIuMTIgMCAwMTAgLjA3YzAgLjAzLS4wMS4wNS0uMDUuMDlsLTQ1LjAyIDQ1LjAyYS4yLjIgMCAwMS0uMDkuMDUuMTIuMTIgMCAwMS0uMDcgMGMtLjAyIDAtLjA0LS4wMS0uMDgtLjA1TDUxMiA1NTcuMjUgMzg0LjE0IDY4NS4xMmMtLjA0LjA0LS4wNi4wNS0uMDguMDVhLjEyLjEyIDAgMDEtLjA3IDBjLS4wMyAwLS4wNS0uMDEtLjA5LS4wNWwtNDUuMDItNDUuMDJhLjIuMiAwIDAxLS4wNS0uMDkuMTIuMTIgMCAwMTAtLjA3YzAtLjAyLjAxLS4wNC4wNi0uMDhMNDY2Ljc1IDUxMiAzMzguODggMzg0LjE0YS4yNy4yNyAwIDAxLS4wNS0uMDZsLS4wMS0uMDJhLjEyLjEyIDAgMDEwLS4wN2MwLS4wMy4wMS0uMDUuMDUtLjA5bDQ1LjAyLTQ1LjAyYS4yLjIgMCAwMS4wOS0uMDUuMTIuMTIgMCAwMS4wNyAwYy4wMiAwIC4wNC4wMS4wOC4wNkw1MTIgNDY2Ljc1bDEyNy44Ni0xMjcuODZjLjA0LS4wNS4wNi0uMDYuMDgtLjA2YS4xMi4xMiAwIDAxLjA3IDB6XCIgfSB9XSB9LCBcIm5hbWVcIjogXCJjbG9zZS1jaXJjbGVcIiwgXCJ0aGVtZVwiOiBcIm91dGxpbmVkXCIgfTtcbmV4cG9ydCBkZWZhdWx0IENsb3NlQ2lyY2xlT3V0bGluZWQ7XG4iLCJpbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMlwiO1xuLy8gR0VORVJBVEUgQlkgLi9zY3JpcHRzL2dlbmVyYXRlLnRzXG4vLyBET04gTk9UIEVESVQgSVQgTUFOVUFMTFlcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDbG9zZUNpcmNsZU91dGxpbmVkU3ZnIGZyb20gXCJAYW50LWRlc2lnbi9pY29ucy1zdmcvZXMvYXNuL0Nsb3NlQ2lyY2xlT3V0bGluZWRcIjtcbmltcG9ydCBBbnRkSWNvbiBmcm9tICcuLi9jb21wb25lbnRzL0FudGRJY29uJztcbnZhciBDbG9zZUNpcmNsZU91dGxpbmVkID0gZnVuY3Rpb24gQ2xvc2VDaXJjbGVPdXRsaW5lZChwcm9wcywgcmVmKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBbnRkSWNvbiwgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBwcm9wcyksIHt9LCB7XG4gICAgcmVmOiByZWYsXG4gICAgaWNvbjogQ2xvc2VDaXJjbGVPdXRsaW5lZFN2Z1xuICB9KSk7XG59O1xuQ2xvc2VDaXJjbGVPdXRsaW5lZC5kaXNwbGF5TmFtZSA9ICdDbG9zZUNpcmNsZU91dGxpbmVkJztcbmV4cG9ydCBkZWZhdWx0IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKENsb3NlQ2lyY2xlT3V0bGluZWQpOyIsIi8vIFRoaXMgaWNvbiBmaWxlIGlzIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5LlxudmFyIEV4Y2xhbWF0aW9uQ2lyY2xlRmlsbGVkID0geyBcImljb25cIjogeyBcInRhZ1wiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ2aWV3Qm94XCI6IFwiNjQgNjQgODk2IDg5NlwiLCBcImZvY3VzYWJsZVwiOiBcImZhbHNlXCIgfSwgXCJjaGlsZHJlblwiOiBbeyBcInRhZ1wiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk01MTIgNjRDMjY0LjYgNjQgNjQgMjY0LjYgNjQgNTEyczIwMC42IDQ0OCA0NDggNDQ4IDQ0OC0yMDAuNiA0NDgtNDQ4Uzc1OS40IDY0IDUxMiA2NHptLTMyIDIzMmMwLTQuNCAzLjYtOCA4LThoNDhjNC40IDAgOCAzLjYgOCA4djI3MmMwIDQuNC0zLjYgOC04IDhoLTQ4Yy00LjQgMC04LTMuNi04LThWMjk2em0zMiA0NDBhNDguMDEgNDguMDEgMCAwMTAtOTYgNDguMDEgNDguMDEgMCAwMTAgOTZ6XCIgfSB9XSB9LCBcIm5hbWVcIjogXCJleGNsYW1hdGlvbi1jaXJjbGVcIiwgXCJ0aGVtZVwiOiBcImZpbGxlZFwiIH07XG5leHBvcnQgZGVmYXVsdCBFeGNsYW1hdGlvbkNpcmNsZUZpbGxlZDtcbiIsImltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyXCI7XG4vLyBHRU5FUkFURSBCWSAuL3NjcmlwdHMvZ2VuZXJhdGUudHNcbi8vIERPTiBOT1QgRURJVCBJVCBNQU5VQUxMWVxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEV4Y2xhbWF0aW9uQ2lyY2xlRmlsbGVkU3ZnIGZyb20gXCJAYW50LWRlc2lnbi9pY29ucy1zdmcvZXMvYXNuL0V4Y2xhbWF0aW9uQ2lyY2xlRmlsbGVkXCI7XG5pbXBvcnQgQW50ZEljb24gZnJvbSAnLi4vY29tcG9uZW50cy9BbnRkSWNvbic7XG52YXIgRXhjbGFtYXRpb25DaXJjbGVGaWxsZWQgPSBmdW5jdGlvbiBFeGNsYW1hdGlvbkNpcmNsZUZpbGxlZChwcm9wcywgcmVmKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBbnRkSWNvbiwgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBwcm9wcyksIHt9LCB7XG4gICAgcmVmOiByZWYsXG4gICAgaWNvbjogRXhjbGFtYXRpb25DaXJjbGVGaWxsZWRTdmdcbiAgfSkpO1xufTtcbkV4Y2xhbWF0aW9uQ2lyY2xlRmlsbGVkLmRpc3BsYXlOYW1lID0gJ0V4Y2xhbWF0aW9uQ2lyY2xlRmlsbGVkJztcbmV4cG9ydCBkZWZhdWx0IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKEV4Y2xhbWF0aW9uQ2lyY2xlRmlsbGVkKTsiLCIvLyBUaGlzIGljb24gZmlsZSBpcyBnZW5lcmF0ZWQgYXV0b21hdGljYWxseS5cbnZhciBFeGNsYW1hdGlvbkNpcmNsZU91dGxpbmVkID0geyBcImljb25cIjogeyBcInRhZ1wiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ2aWV3Qm94XCI6IFwiNjQgNjQgODk2IDg5NlwiLCBcImZvY3VzYWJsZVwiOiBcImZhbHNlXCIgfSwgXCJjaGlsZHJlblwiOiBbeyBcInRhZ1wiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk01MTIgNjRDMjY0LjYgNjQgNjQgMjY0LjYgNjQgNTEyczIwMC42IDQ0OCA0NDggNDQ4IDQ0OC0yMDAuNiA0NDgtNDQ4Uzc1OS40IDY0IDUxMiA2NHptMCA4MjBjLTIwNS40IDAtMzcyLTE2Ni42LTM3Mi0zNzJzMTY2LjYtMzcyIDM3Mi0zNzIgMzcyIDE2Ni42IDM3MiAzNzItMTY2LjYgMzcyLTM3MiAzNzJ6XCIgfSB9LCB7IFwidGFnXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTQ2NCA2ODhhNDggNDggMCAxMDk2IDAgNDggNDggMCAxMC05NiAwem0yNC0xMTJoNDhjNC40IDAgOC0zLjYgOC04VjI5NmMwLTQuNC0zLjYtOC04LThoLTQ4Yy00LjQgMC04IDMuNi04IDh2MjcyYzAgNC40IDMuNiA4IDggOHpcIiB9IH1dIH0sIFwibmFtZVwiOiBcImV4Y2xhbWF0aW9uLWNpcmNsZVwiLCBcInRoZW1lXCI6IFwib3V0bGluZWRcIiB9O1xuZXhwb3J0IGRlZmF1bHQgRXhjbGFtYXRpb25DaXJjbGVPdXRsaW5lZDtcbiIsImltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyXCI7XG4vLyBHRU5FUkFURSBCWSAuL3NjcmlwdHMvZ2VuZXJhdGUudHNcbi8vIERPTiBOT1QgRURJVCBJVCBNQU5VQUxMWVxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEV4Y2xhbWF0aW9uQ2lyY2xlT3V0bGluZWRTdmcgZnJvbSBcIkBhbnQtZGVzaWduL2ljb25zLXN2Zy9lcy9hc24vRXhjbGFtYXRpb25DaXJjbGVPdXRsaW5lZFwiO1xuaW1wb3J0IEFudGRJY29uIGZyb20gJy4uL2NvbXBvbmVudHMvQW50ZEljb24nO1xudmFyIEV4Y2xhbWF0aW9uQ2lyY2xlT3V0bGluZWQgPSBmdW5jdGlvbiBFeGNsYW1hdGlvbkNpcmNsZU91dGxpbmVkKHByb3BzLCByZWYpIHtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEFudGRJY29uLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHByb3BzKSwge30sIHtcbiAgICByZWY6IHJlZixcbiAgICBpY29uOiBFeGNsYW1hdGlvbkNpcmNsZU91dGxpbmVkU3ZnXG4gIH0pKTtcbn07XG5FeGNsYW1hdGlvbkNpcmNsZU91dGxpbmVkLmRpc3BsYXlOYW1lID0gJ0V4Y2xhbWF0aW9uQ2lyY2xlT3V0bGluZWQnO1xuZXhwb3J0IGRlZmF1bHQgLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoRXhjbGFtYXRpb25DaXJjbGVPdXRsaW5lZCk7IiwiLy8gVGhpcyBpY29uIGZpbGUgaXMgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkuXG52YXIgSW5mb0NpcmNsZU91dGxpbmVkID0geyBcImljb25cIjogeyBcInRhZ1wiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ2aWV3Qm94XCI6IFwiNjQgNjQgODk2IDg5NlwiLCBcImZvY3VzYWJsZVwiOiBcImZhbHNlXCIgfSwgXCJjaGlsZHJlblwiOiBbeyBcInRhZ1wiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk01MTIgNjRDMjY0LjYgNjQgNjQgMjY0LjYgNjQgNTEyczIwMC42IDQ0OCA0NDggNDQ4IDQ0OC0yMDAuNiA0NDgtNDQ4Uzc1OS40IDY0IDUxMiA2NHptMCA4MjBjLTIwNS40IDAtMzcyLTE2Ni42LTM3Mi0zNzJzMTY2LjYtMzcyIDM3Mi0zNzIgMzcyIDE2Ni42IDM3MiAzNzItMTY2LjYgMzcyLTM3MiAzNzJ6XCIgfSB9LCB7IFwidGFnXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTQ2NCAzMzZhNDggNDggMCAxMDk2IDAgNDggNDggMCAxMC05NiAwem03MiAxMTJoLTQ4Yy00LjQgMC04IDMuNi04IDh2MjcyYzAgNC40IDMuNiA4IDggOGg0OGM0LjQgMCA4LTMuNiA4LThWNDU2YzAtNC40LTMuNi04LTgtOHpcIiB9IH1dIH0sIFwibmFtZVwiOiBcImluZm8tY2lyY2xlXCIsIFwidGhlbWVcIjogXCJvdXRsaW5lZFwiIH07XG5leHBvcnQgZGVmYXVsdCBJbmZvQ2lyY2xlT3V0bGluZWQ7XG4iLCJpbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMlwiO1xuLy8gR0VORVJBVEUgQlkgLi9zY3JpcHRzL2dlbmVyYXRlLnRzXG4vLyBET04gTk9UIEVESVQgSVQgTUFOVUFMTFlcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBJbmZvQ2lyY2xlT3V0bGluZWRTdmcgZnJvbSBcIkBhbnQtZGVzaWduL2ljb25zLXN2Zy9lcy9hc24vSW5mb0NpcmNsZU91dGxpbmVkXCI7XG5pbXBvcnQgQW50ZEljb24gZnJvbSAnLi4vY29tcG9uZW50cy9BbnRkSWNvbic7XG52YXIgSW5mb0NpcmNsZU91dGxpbmVkID0gZnVuY3Rpb24gSW5mb0NpcmNsZU91dGxpbmVkKHByb3BzLCByZWYpIHtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEFudGRJY29uLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHByb3BzKSwge30sIHtcbiAgICByZWY6IHJlZixcbiAgICBpY29uOiBJbmZvQ2lyY2xlT3V0bGluZWRTdmdcbiAgfSkpO1xufTtcbkluZm9DaXJjbGVPdXRsaW5lZC5kaXNwbGF5TmFtZSA9ICdJbmZvQ2lyY2xlT3V0bGluZWQnO1xuZXhwb3J0IGRlZmF1bHQgLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoSW5mb0NpcmNsZU91dGxpbmVkKTsiLCJpbXBvcnQgQ1NTTW90aW9uIGZyb20gXCIuL0NTU01vdGlvblwiO1xuaW1wb3J0IENTU01vdGlvbkxpc3QgZnJvbSBcIi4vQ1NTTW90aW9uTGlzdFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQcm92aWRlciB9IGZyb20gXCIuL2NvbnRleHRcIjtcbmV4cG9ydCB7IENTU01vdGlvbkxpc3QgfTtcbmV4cG9ydCBkZWZhdWx0IENTU01vdGlvbjsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzXCI7XG5pbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlclwiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbnZhciBOb3RpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKE5vdGljZSwgX0NvbXBvbmVudCk7XG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTm90aWNlKTtcbiAgZnVuY3Rpb24gTm90aWNlKCkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTm90aWNlKTtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuICAgIF90aGlzID0gX3N1cGVyLmNhbGwuYXBwbHkoX3N1cGVyLCBbdGhpc10uY29uY2F0KGFyZ3MpKTtcbiAgICBfdGhpcy5jbG9zZVRpbWVyID0gbnVsbDtcbiAgICBfdGhpcy5jbG9zZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBpZiAoZSkge1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgfVxuICAgICAgX3RoaXMuY2xlYXJDbG9zZVRpbWVyKCk7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgb25DbG9zZSA9IF90aGlzJHByb3BzLm9uQ2xvc2UsXG4gICAgICAgIG5vdGljZUtleSA9IF90aGlzJHByb3BzLm5vdGljZUtleTtcbiAgICAgIGlmIChvbkNsb3NlKSB7XG4gICAgICAgIG9uQ2xvc2Uobm90aWNlS2V5KTtcbiAgICAgIH1cbiAgICB9O1xuICAgIF90aGlzLnN0YXJ0Q2xvc2VUaW1lciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChfdGhpcy5wcm9wcy5kdXJhdGlvbikge1xuICAgICAgICBfdGhpcy5jbG9zZVRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzLmNsb3NlKCk7XG4gICAgICAgIH0sIF90aGlzLnByb3BzLmR1cmF0aW9uICogMTAwMCk7XG4gICAgICB9XG4gICAgfTtcbiAgICBfdGhpcy5jbGVhckNsb3NlVGltZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoX3RoaXMuY2xvc2VUaW1lcikge1xuICAgICAgICBjbGVhclRpbWVvdXQoX3RoaXMuY2xvc2VUaW1lcik7XG4gICAgICAgIF90aGlzLmNsb3NlVGltZXIgPSBudWxsO1xuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9jcmVhdGVDbGFzcyhOb3RpY2UsIFt7XG4gICAga2V5OiBcImNvbXBvbmVudERpZE1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgdGhpcy5zdGFydENsb3NlVGltZXIoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkVXBkYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLmR1cmF0aW9uICE9PSBwcmV2UHJvcHMuZHVyYXRpb24gfHwgdGhpcy5wcm9wcy51cGRhdGVNYXJrICE9PSBwcmV2UHJvcHMudXBkYXRlTWFyayB8fFxuICAgICAgLy8gVmlzaWJsZSBhZ2FpbiBuZWVkIHJlc2V0IHRpbWVyXG4gICAgICB0aGlzLnByb3BzLnZpc2libGUgIT09IHByZXZQcm9wcy52aXNpYmxlICYmIHRoaXMucHJvcHMudmlzaWJsZSkge1xuICAgICAgICB0aGlzLnJlc3RhcnRDbG9zZVRpbWVyKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNvbXBvbmVudFdpbGxVbm1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgdGhpcy5jbGVhckNsb3NlVGltZXIoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVzdGFydENsb3NlVGltZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVzdGFydENsb3NlVGltZXIoKSB7XG4gICAgICB0aGlzLmNsZWFyQ2xvc2VUaW1lcigpO1xuICAgICAgdGhpcy5zdGFydENsb3NlVGltZXIoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuICAgICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIHByZWZpeENscyA9IF90aGlzJHByb3BzMi5wcmVmaXhDbHMsXG4gICAgICAgIGNsYXNzTmFtZSA9IF90aGlzJHByb3BzMi5jbGFzc05hbWUsXG4gICAgICAgIGNsb3NhYmxlID0gX3RoaXMkcHJvcHMyLmNsb3NhYmxlLFxuICAgICAgICBjbG9zZUljb24gPSBfdGhpcyRwcm9wczIuY2xvc2VJY29uLFxuICAgICAgICBzdHlsZSA9IF90aGlzJHByb3BzMi5zdHlsZSxcbiAgICAgICAgb25DbGljayA9IF90aGlzJHByb3BzMi5vbkNsaWNrLFxuICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzMi5jaGlsZHJlbixcbiAgICAgICAgaG9sZGVyID0gX3RoaXMkcHJvcHMyLmhvbGRlcjtcbiAgICAgIHZhciBjb21wb25lbnRDbGFzcyA9IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItbm90aWNlXCIpO1xuICAgICAgdmFyIGRhdGFPckFyaWFBdHRyaWJ1dGVQcm9wcyA9IE9iamVjdC5rZXlzKHRoaXMucHJvcHMpLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBrZXkpIHtcbiAgICAgICAgaWYgKGtleS5zdWJzdHIoMCwgNSkgPT09ICdkYXRhLScgfHwga2V5LnN1YnN0cigwLCA1KSA9PT0gJ2FyaWEtJyB8fCBrZXkgPT09ICdyb2xlJykge1xuICAgICAgICAgIGFjY1trZXldID0gX3RoaXMyLnByb3BzW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgIH0sIHt9KTtcbiAgICAgIHZhciBub2RlID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgX2V4dGVuZHMoe1xuICAgICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMoY29tcG9uZW50Q2xhc3MsIGNsYXNzTmFtZSwgX2RlZmluZVByb3BlcnR5KHt9LCBcIlwiLmNvbmNhdChjb21wb25lbnRDbGFzcywgXCItY2xvc2FibGVcIiksIGNsb3NhYmxlKSksXG4gICAgICAgIHN0eWxlOiBzdHlsZSxcbiAgICAgICAgb25Nb3VzZUVudGVyOiB0aGlzLmNsZWFyQ2xvc2VUaW1lcixcbiAgICAgICAgb25Nb3VzZUxlYXZlOiB0aGlzLnN0YXJ0Q2xvc2VUaW1lcixcbiAgICAgICAgb25DbGljazogb25DbGlja1xuICAgICAgfSwgZGF0YU9yQXJpYUF0dHJpYnV0ZVByb3BzKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KGNvbXBvbmVudENsYXNzLCBcIi1jb250ZW50XCIpXG4gICAgICB9LCBjaGlsZHJlbiksIGNsb3NhYmxlID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtcbiAgICAgICAgdGFiSW5kZXg6IDAsXG4gICAgICAgIG9uQ2xpY2s6IHRoaXMuY2xvc2UsXG4gICAgICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQoY29tcG9uZW50Q2xhc3MsIFwiLWNsb3NlXCIpXG4gICAgICB9LCBjbG9zZUljb24gfHwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChjb21wb25lbnRDbGFzcywgXCItY2xvc2UteFwiKVxuICAgICAgfSkpIDogbnVsbCk7XG4gICAgICBpZiAoaG9sZGVyKSB7XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3RET00uY3JlYXRlUG9ydGFsKG5vZGUsIGhvbGRlcik7XG4gICAgICB9XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH1dKTtcbiAgcmV0dXJuIE5vdGljZTtcbn0oQ29tcG9uZW50KTtcbk5vdGljZS5kZWZhdWx0UHJvcHMgPSB7XG4gIG9uQ2xvc2U6IGZ1bmN0aW9uIG9uQ2xvc2UoKSB7fSxcbiAgZHVyYXRpb246IDEuNVxufTtcbmV4cG9ydCB7IE5vdGljZSBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDJcIjtcbmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNcIjtcbmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyXCI7XG52YXIgX2V4Y2x1ZGVkID0gW1wiZ2V0Q29udGFpbmVyXCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyLCB1bm1vdW50IH0gZnJvbSBcInJjLXV0aWwvZXMvUmVhY3QvcmVuZGVyXCI7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IENTU01vdGlvbkxpc3QgfSBmcm9tICdyYy1tb3Rpb24nO1xuaW1wb3J0IE5vdGljZSBmcm9tICcuL05vdGljZSc7XG5pbXBvcnQgX3VzZU5vdGlmaWNhdGlvbiBmcm9tICcuL3VzZU5vdGlmaWNhdGlvbic7XG52YXIgc2VlZCA9IDA7XG52YXIgbm93ID0gRGF0ZS5ub3coKTtcbmZ1bmN0aW9uIGdldFV1aWQoKSB7XG4gIHZhciBpZCA9IHNlZWQ7XG4gIHNlZWQgKz0gMTtcbiAgcmV0dXJuIFwicmNOb3RpZmljYXRpb25fXCIuY29uY2F0KG5vdywgXCJfXCIpLmNvbmNhdChpZCk7XG59XG52YXIgTm90aWZpY2F0aW9uID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhOb3RpZmljYXRpb24sIF9Db21wb25lbnQpO1xuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKE5vdGlmaWNhdGlvbik7XG4gIGZ1bmN0aW9uIE5vdGlmaWNhdGlvbigpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5vdGlmaWNhdGlvbik7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cbiAgICBfdGhpcyA9IF9zdXBlci5jYWxsLmFwcGx5KF9zdXBlciwgW3RoaXNdLmNvbmNhdChhcmdzKSk7XG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBub3RpY2VzOiBbXVxuICAgIH07XG4gICAgX3RoaXMuaG9va1JlZnMgPSBuZXcgTWFwKCk7XG4gICAgX3RoaXMuYWRkID0gZnVuY3Rpb24gKG9yaWdpbk5vdGljZSwgaG9sZGVyQ2FsbGJhY2spIHtcbiAgICAgIHZhciBfb3JpZ2luTm90aWNlJGtleTtcbiAgICAgIHZhciBrZXkgPSAoX29yaWdpbk5vdGljZSRrZXkgPSBvcmlnaW5Ob3RpY2Uua2V5KSAhPT0gbnVsbCAmJiBfb3JpZ2luTm90aWNlJGtleSAhPT0gdm9pZCAwID8gX29yaWdpbk5vdGljZSRrZXkgOiBnZXRVdWlkKCk7XG4gICAgICB2YXIgbm90aWNlID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBvcmlnaW5Ob3RpY2UpLCB7fSwge1xuICAgICAgICBrZXk6IGtleVxuICAgICAgfSk7XG4gICAgICB2YXIgbWF4Q291bnQgPSBfdGhpcy5wcm9wcy5tYXhDb3VudDtcbiAgICAgIF90aGlzLnNldFN0YXRlKGZ1bmN0aW9uIChwcmV2aW91c1N0YXRlKSB7XG4gICAgICAgIHZhciBub3RpY2VzID0gcHJldmlvdXNTdGF0ZS5ub3RpY2VzO1xuICAgICAgICB2YXIgbm90aWNlSW5kZXggPSBub3RpY2VzLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgICAgIHJldHVybiB2Lm5vdGljZS5rZXk7XG4gICAgICAgIH0pLmluZGV4T2Yoa2V5KTtcbiAgICAgICAgdmFyIHVwZGF0ZWROb3RpY2VzID0gbm90aWNlcy5jb25jYXQoKTtcbiAgICAgICAgaWYgKG5vdGljZUluZGV4ICE9PSAtMSkge1xuICAgICAgICAgIHVwZGF0ZWROb3RpY2VzLnNwbGljZShub3RpY2VJbmRleCwgMSwge1xuICAgICAgICAgICAgbm90aWNlOiBub3RpY2UsXG4gICAgICAgICAgICBob2xkZXJDYWxsYmFjazogaG9sZGVyQ2FsbGJhY2tcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAobWF4Q291bnQgJiYgbm90aWNlcy5sZW5ndGggPj0gbWF4Q291bnQpIHtcbiAgICAgICAgICAgIC8vIFhYWCwgdXNlIGtleSBvZiBmaXJzdCBpdGVtIHRvIHVwZGF0ZSBuZXcgYWRkZWQgKGxldCBSZWFjdCB0byBtb3ZlIGV4c2l0aW5nXG4gICAgICAgICAgICAvLyBpbnN0ZWFkIG9mIHJlbW92ZSBhbmQgbW91bnQpLiBTYW1lIGtleSB3YXMgdXNlZCBiZWZvcmUgZm9yIGJvdGggYSkgZXh0ZXJuYWxcbiAgICAgICAgICAgIC8vIG1hbnVhbCBjb250cm9sIGFuZCBiKSBpbnRlcm5hbCByZWFjdCAna2V5JyBwcm9wICwgd2hpY2ggaXMgbm90IHRoYXQgZ29vZC5cbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgICAgICAgLy8gem9tYmllSjogTm90IGtub3cgd2h5IHVzZSBgdXBkYXRlS2V5YC4gVGhpcyBtYWtlcyBOb3RpY2UgaW5maW5pdGUgbG9vcCBpbiBqZXN0LlxuICAgICAgICAgICAgLy8gQ2hhbmdlIHRvIGB1cGRhdGVNYXJrYCBmb3IgY29tcGFyZSBpbnN0ZWFkLlxuICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0LWNvbXBvbmVudC9ub3RpZmljYXRpb24vY29tbWl0LzMyMjk5ZTZiZTM5NmY5NDA0MGJmYTgyNTE3ZWVhOTQwZGI5NDdlY2VcbiAgICAgICAgICAgIG5vdGljZS5rZXkgPSB1cGRhdGVkTm90aWNlc1swXS5ub3RpY2Uua2V5O1xuICAgICAgICAgICAgbm90aWNlLnVwZGF0ZU1hcmsgPSBnZXRVdWlkKCk7XG4gICAgICAgICAgICAvLyB6b21iaWVKOiBUaGF0J3Mgd2h5LiBVc2VyIG1heSBjbG9zZSBieSBrZXkgZGlyZWN0bHkuXG4gICAgICAgICAgICAvLyBXZSBuZWVkIHJlY29yZCB0aGlzIGJ1dCBub3QgcmUtcmVuZGVyIHRvIGF2b2lkIHVwcGVyIGlzc3VlXG4gICAgICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vcmVhY3QtY29tcG9uZW50L25vdGlmaWNhdGlvbi9pc3N1ZXMvMTI5XG4gICAgICAgICAgICBub3RpY2UudXNlclBhc3NLZXkgPSBrZXk7XG4gICAgICAgICAgICB1cGRhdGVkTm90aWNlcy5zaGlmdCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB1cGRhdGVkTm90aWNlcy5wdXNoKHtcbiAgICAgICAgICAgIG5vdGljZTogbm90aWNlLFxuICAgICAgICAgICAgaG9sZGVyQ2FsbGJhY2s6IGhvbGRlckNhbGxiYWNrXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBub3RpY2VzOiB1cGRhdGVkTm90aWNlc1xuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfTtcbiAgICBfdGhpcy5yZW1vdmUgPSBmdW5jdGlvbiAocmVtb3ZlS2V5KSB7XG4gICAgICBfdGhpcy5zZXRTdGF0ZShmdW5jdGlvbiAoX3JlZikge1xuICAgICAgICB2YXIgbm90aWNlcyA9IF9yZWYubm90aWNlcztcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBub3RpY2VzOiBub3RpY2VzLmZpbHRlcihmdW5jdGlvbiAoX3JlZjIpIHtcbiAgICAgICAgICAgIHZhciBfcmVmMiRub3RpY2UgPSBfcmVmMi5ub3RpY2UsXG4gICAgICAgICAgICAgIGtleSA9IF9yZWYyJG5vdGljZS5rZXksXG4gICAgICAgICAgICAgIHVzZXJQYXNzS2V5ID0gX3JlZjIkbm90aWNlLnVzZXJQYXNzS2V5O1xuICAgICAgICAgICAgdmFyIG1lcmdlZEtleSA9IHVzZXJQYXNzS2V5ICE9PSBudWxsICYmIHVzZXJQYXNzS2V5ICE9PSB2b2lkIDAgPyB1c2VyUGFzc0tleSA6IGtleTtcbiAgICAgICAgICAgIHJldHVybiBtZXJnZWRLZXkgIT09IHJlbW92ZUtleTtcbiAgICAgICAgICB9KVxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfTtcbiAgICBfdGhpcy5ub3RpY2VQcm9wc01hcCA9IHt9O1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfY3JlYXRlQ2xhc3MoTm90aWZpY2F0aW9uLCBbe1xuICAgIGtleTogXCJnZXRUcmFuc2l0aW9uTmFtZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRUcmFuc2l0aW9uTmFtZSgpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIHByZWZpeENscyA9IF90aGlzJHByb3BzLnByZWZpeENscyxcbiAgICAgICAgYW5pbWF0aW9uID0gX3RoaXMkcHJvcHMuYW5pbWF0aW9uO1xuICAgICAgdmFyIHRyYW5zaXRpb25OYW1lID0gdGhpcy5wcm9wcy50cmFuc2l0aW9uTmFtZTtcbiAgICAgIGlmICghdHJhbnNpdGlvbk5hbWUgJiYgYW5pbWF0aW9uKSB7XG4gICAgICAgIHRyYW5zaXRpb25OYW1lID0gXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1cIikuY29uY2F0KGFuaW1hdGlvbik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJhbnNpdGlvbk5hbWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcbiAgICAgIHZhciBub3RpY2VzID0gdGhpcy5zdGF0ZS5ub3RpY2VzO1xuICAgICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIHByZWZpeENscyA9IF90aGlzJHByb3BzMi5wcmVmaXhDbHMsXG4gICAgICAgIGNsYXNzTmFtZSA9IF90aGlzJHByb3BzMi5jbGFzc05hbWUsXG4gICAgICAgIGNsb3NlSWNvbiA9IF90aGlzJHByb3BzMi5jbG9zZUljb24sXG4gICAgICAgIHN0eWxlID0gX3RoaXMkcHJvcHMyLnN0eWxlO1xuICAgICAgdmFyIG5vdGljZUtleXMgPSBbXTtcbiAgICAgIG5vdGljZXMuZm9yRWFjaChmdW5jdGlvbiAoX3JlZjMsIGluZGV4KSB7XG4gICAgICAgIHZhciBub3RpY2UgPSBfcmVmMy5ub3RpY2UsXG4gICAgICAgICAgaG9sZGVyQ2FsbGJhY2sgPSBfcmVmMy5ob2xkZXJDYWxsYmFjaztcbiAgICAgICAgdmFyIHVwZGF0ZU1hcmsgPSBpbmRleCA9PT0gbm90aWNlcy5sZW5ndGggLSAxID8gbm90aWNlLnVwZGF0ZU1hcmsgOiB1bmRlZmluZWQ7XG4gICAgICAgIHZhciBrZXkgPSBub3RpY2Uua2V5LFxuICAgICAgICAgIHVzZXJQYXNzS2V5ID0gbm90aWNlLnVzZXJQYXNzS2V5O1xuICAgICAgICB2YXIgbm90aWNlUHJvcHMgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7XG4gICAgICAgICAgcHJlZml4Q2xzOiBwcmVmaXhDbHMsXG4gICAgICAgICAgY2xvc2VJY29uOiBjbG9zZUljb25cbiAgICAgICAgfSwgbm90aWNlKSwgbm90aWNlLnByb3BzKSwge30sIHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBub3RpY2VLZXk6IHVzZXJQYXNzS2V5IHx8IGtleSxcbiAgICAgICAgICB1cGRhdGVNYXJrOiB1cGRhdGVNYXJrLFxuICAgICAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uIG9uQ2xvc2Uobm90aWNlS2V5KSB7XG4gICAgICAgICAgICB2YXIgX25vdGljZSRvbkNsb3NlO1xuICAgICAgICAgICAgX3RoaXMyLnJlbW92ZShub3RpY2VLZXkpO1xuICAgICAgICAgICAgKF9ub3RpY2Ukb25DbG9zZSA9IG5vdGljZS5vbkNsb3NlKSA9PT0gbnVsbCB8fCBfbm90aWNlJG9uQ2xvc2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub3RpY2Ukb25DbG9zZS5jYWxsKG5vdGljZSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbkNsaWNrOiBub3RpY2Uub25DbGljayxcbiAgICAgICAgICBjaGlsZHJlbjogbm90aWNlLmNvbnRlbnRcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIEdpdmUgdG8gbW90aW9uXG4gICAgICAgIG5vdGljZUtleXMucHVzaChrZXkpO1xuICAgICAgICBfdGhpczIubm90aWNlUHJvcHNNYXBba2V5XSA9IHtcbiAgICAgICAgICBwcm9wczogbm90aWNlUHJvcHMsXG4gICAgICAgICAgaG9sZGVyQ2FsbGJhY2s6IGhvbGRlckNhbGxiYWNrXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcyhwcmVmaXhDbHMsIGNsYXNzTmFtZSksXG4gICAgICAgIHN0eWxlOiBzdHlsZVxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ1NTTW90aW9uTGlzdCwge1xuICAgICAgICBrZXlzOiBub3RpY2VLZXlzLFxuICAgICAgICBtb3Rpb25OYW1lOiB0aGlzLmdldFRyYW5zaXRpb25OYW1lKCksXG4gICAgICAgIG9uVmlzaWJsZUNoYW5nZWQ6IGZ1bmN0aW9uIG9uVmlzaWJsZUNoYW5nZWQoY2hhbmdlZFZpc2libGUsIF9yZWY0KSB7XG4gICAgICAgICAgdmFyIGtleSA9IF9yZWY0LmtleTtcbiAgICAgICAgICBpZiAoIWNoYW5nZWRWaXNpYmxlKSB7XG4gICAgICAgICAgICBkZWxldGUgX3RoaXMyLm5vdGljZVByb3BzTWFwW2tleV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBmdW5jdGlvbiAoX3JlZjUpIHtcbiAgICAgICAgdmFyIGtleSA9IF9yZWY1LmtleSxcbiAgICAgICAgICBtb3Rpb25DbGFzc05hbWUgPSBfcmVmNS5jbGFzc05hbWUsXG4gICAgICAgICAgbW90aW9uU3R5bGUgPSBfcmVmNS5zdHlsZSxcbiAgICAgICAgICB2aXNpYmxlID0gX3JlZjUudmlzaWJsZTtcbiAgICAgICAgdmFyIF90aGlzMiRub3RpY2VQcm9wc01hcCA9IF90aGlzMi5ub3RpY2VQcm9wc01hcFtrZXldLFxuICAgICAgICAgIG5vdGljZVByb3BzID0gX3RoaXMyJG5vdGljZVByb3BzTWFwLnByb3BzLFxuICAgICAgICAgIGhvbGRlckNhbGxiYWNrID0gX3RoaXMyJG5vdGljZVByb3BzTWFwLmhvbGRlckNhbGxiYWNrO1xuICAgICAgICBpZiAoaG9sZGVyQ2FsbGJhY2spIHtcbiAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMobW90aW9uQ2xhc3NOYW1lLCBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLWhvb2staG9sZGVyXCIpKSxcbiAgICAgICAgICAgIHN0eWxlOiBfb2JqZWN0U3ByZWFkKHt9LCBtb3Rpb25TdHlsZSksXG4gICAgICAgICAgICByZWY6IGZ1bmN0aW9uIHJlZihkaXYpIHtcbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBrZXkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGlmIChkaXYpIHtcbiAgICAgICAgICAgICAgICBfdGhpczIuaG9va1JlZnMuc2V0KGtleSwgZGl2KTtcbiAgICAgICAgICAgICAgICBob2xkZXJDYWxsYmFjayhkaXYsIG5vdGljZVByb3BzKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpczIuaG9va1JlZnMuZGVsZXRlKGtleSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTm90aWNlLCBfZXh0ZW5kcyh7fSwgbm90aWNlUHJvcHMsIHtcbiAgICAgICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMobW90aW9uQ2xhc3NOYW1lLCBub3RpY2VQcm9wcyA9PT0gbnVsbCB8fCBub3RpY2VQcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogbm90aWNlUHJvcHMuY2xhc3NOYW1lKSxcbiAgICAgICAgICBzdHlsZTogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtb3Rpb25TdHlsZSksIG5vdGljZVByb3BzID09PSBudWxsIHx8IG5vdGljZVByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBub3RpY2VQcm9wcy5zdHlsZSksXG4gICAgICAgICAgdmlzaWJsZTogdmlzaWJsZVxuICAgICAgICB9KSk7XG4gICAgICB9KSk7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBOb3RpZmljYXRpb247XG59KENvbXBvbmVudCk7XG5Ob3RpZmljYXRpb24ubmV3SW5zdGFuY2UgPSB2b2lkIDA7XG5Ob3RpZmljYXRpb24uZGVmYXVsdFByb3BzID0ge1xuICBwcmVmaXhDbHM6ICdyYy1ub3RpZmljYXRpb24nLFxuICBhbmltYXRpb246ICdmYWRlJyxcbiAgc3R5bGU6IHtcbiAgICB0b3A6IDY1LFxuICAgIGxlZnQ6ICc1MCUnXG4gIH1cbn07XG5Ob3RpZmljYXRpb24ubmV3SW5zdGFuY2UgPSBmdW5jdGlvbiBuZXdOb3RpZmljYXRpb25JbnN0YW5jZShwcm9wZXJ0aWVzLCBjYWxsYmFjaykge1xuICB2YXIgX3JlZjYgPSBwcm9wZXJ0aWVzIHx8IHt9LFxuICAgIGdldENvbnRhaW5lciA9IF9yZWY2LmdldENvbnRhaW5lcixcbiAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmNiwgX2V4Y2x1ZGVkKTtcbiAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBpZiAoZ2V0Q29udGFpbmVyKSB7XG4gICAgdmFyIHJvb3QgPSBnZXRDb250YWluZXIoKTtcbiAgICByb290LmFwcGVuZENoaWxkKGRpdik7XG4gIH0gZWxzZSB7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXYpO1xuICB9XG4gIHZhciBjYWxsZWQgPSBmYWxzZTtcbiAgZnVuY3Rpb24gcmVmKG5vdGlmaWNhdGlvbikge1xuICAgIGlmIChjYWxsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY2FsbGVkID0gdHJ1ZTtcbiAgICBjYWxsYmFjayh7XG4gICAgICBub3RpY2U6IGZ1bmN0aW9uIG5vdGljZShub3RpY2VQcm9wcykge1xuICAgICAgICBub3RpZmljYXRpb24uYWRkKG5vdGljZVByb3BzKTtcbiAgICAgIH0sXG4gICAgICByZW1vdmVOb3RpY2U6IGZ1bmN0aW9uIHJlbW92ZU5vdGljZShrZXkpIHtcbiAgICAgICAgbm90aWZpY2F0aW9uLnJlbW92ZShrZXkpO1xuICAgICAgfSxcbiAgICAgIGNvbXBvbmVudDogbm90aWZpY2F0aW9uLFxuICAgICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAgICAgdW5tb3VudChkaXYpO1xuICAgICAgICBpZiAoZGl2LnBhcmVudE5vZGUpIHtcbiAgICAgICAgICBkaXYucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChkaXYpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gSG9va3NcbiAgICAgIHVzZU5vdGlmaWNhdGlvbjogZnVuY3Rpb24gdXNlTm90aWZpY2F0aW9uKCkge1xuICAgICAgICByZXR1cm4gX3VzZU5vdGlmaWNhdGlvbihub3RpZmljYXRpb24pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIC8vIE9ubHkgdXNlZCBmb3IgdGVzdCBjYXNlIHVzYWdlXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3QnICYmIHByb3BlcnRpZXMuVEVTVF9SRU5ERVIpIHtcbiAgICBwcm9wZXJ0aWVzLlRFU1RfUkVOREVSKCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChOb3RpZmljYXRpb24sIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgcmVmOiByZWZcbiAgICB9KSkpO1xuICAgIHJldHVybjtcbiAgfVxuICByZW5kZXIoIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE5vdGlmaWNhdGlvbiwgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgcmVmOiByZWZcbiAgfSkpLCBkaXYpO1xufTtcbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbjsiLCJpbXBvcnQgTm90aWZpY2F0aW9uIGZyb20gJy4vTm90aWZpY2F0aW9uJztcbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbjsiLCJpbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheVwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXlcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBOb3RpY2UgZnJvbSAnLi9Ob3RpY2UnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlTm90aWZpY2F0aW9uKG5vdGlmaWNhdGlvbkluc3RhbmNlKSB7XG4gIHZhciBjcmVhdGVkUmVmID0gUmVhY3QudXNlUmVmKHt9KTtcbiAgdmFyIF9SZWFjdCR1c2VTdGF0ZSA9IFJlYWN0LnVzZVN0YXRlKFtdKSxcbiAgICBfUmVhY3QkdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX1JlYWN0JHVzZVN0YXRlLCAyKSxcbiAgICBlbGVtZW50cyA9IF9SZWFjdCR1c2VTdGF0ZTJbMF0sXG4gICAgc2V0RWxlbWVudHMgPSBfUmVhY3QkdXNlU3RhdGUyWzFdO1xuICBmdW5jdGlvbiBub3RpZnkobm90aWNlUHJvcHMpIHtcbiAgICB2YXIgZmlyc3RNb3VudCA9IHRydWU7XG4gICAgbm90aWZpY2F0aW9uSW5zdGFuY2UuYWRkKG5vdGljZVByb3BzLCBmdW5jdGlvbiAoZGl2LCBwcm9wcykge1xuICAgICAgdmFyIGtleSA9IHByb3BzLmtleTtcbiAgICAgIGlmIChkaXYgJiYgKCFjcmVhdGVkUmVmLmN1cnJlbnRba2V5XSB8fCBmaXJzdE1vdW50KSkge1xuICAgICAgICB2YXIgbm90aWNlRWxlID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTm90aWNlLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgICBob2xkZXI6IGRpdlxuICAgICAgICB9KSk7XG4gICAgICAgIGNyZWF0ZWRSZWYuY3VycmVudFtrZXldID0gbm90aWNlRWxlO1xuICAgICAgICBzZXRFbGVtZW50cyhmdW5jdGlvbiAob3JpZ2luRWxlbWVudHMpIHtcbiAgICAgICAgICB2YXIgaW5kZXggPSBvcmlnaW5FbGVtZW50cy5maW5kSW5kZXgoZnVuY3Rpb24gKGVsZSkge1xuICAgICAgICAgICAgcmV0dXJuIGVsZS5rZXkgPT09IHByb3BzLmtleTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShvcmlnaW5FbGVtZW50cyksIFtub3RpY2VFbGVdKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIGNsb25lTGlzdCA9IF90b0NvbnN1bWFibGVBcnJheShvcmlnaW5FbGVtZW50cyk7XG4gICAgICAgICAgY2xvbmVMaXN0W2luZGV4XSA9IG5vdGljZUVsZTtcbiAgICAgICAgICByZXR1cm4gY2xvbmVMaXN0O1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGZpcnN0TW91bnQgPSBmYWxzZTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gW25vdGlmeSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIGVsZW1lbnRzKV07XG59IiwiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMoKSB7XG5cdFx0dmFyIGNsYXNzZXMgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgYXJnID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0aWYgKCFhcmcpIGNvbnRpbnVlO1xuXG5cdFx0XHR2YXIgYXJnVHlwZSA9IHR5cGVvZiBhcmc7XG5cblx0XHRcdGlmIChhcmdUeXBlID09PSAnc3RyaW5nJyB8fCBhcmdUeXBlID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnKTtcblx0XHRcdH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcmcpKSB7XG5cdFx0XHRcdGlmIChhcmcubGVuZ3RoKSB7XG5cdFx0XHRcdFx0dmFyIGlubmVyID0gY2xhc3NOYW1lcy5hcHBseShudWxsLCBhcmcpO1xuXHRcdFx0XHRcdGlmIChpbm5lcikge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGlubmVyKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAoYXJnVHlwZSA9PT0gJ29iamVjdCcpIHtcblx0XHRcdFx0aWYgKGFyZy50b1N0cmluZyAhPT0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyAmJiAhYXJnLnRvU3RyaW5nLnRvU3RyaW5nKCkuaW5jbHVkZXMoJ1tuYXRpdmUgY29kZV0nKSkge1xuXHRcdFx0XHRcdGNsYXNzZXMucHVzaChhcmcudG9TdHJpbmcoKSk7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0aWYgKGhhc093bi5jYWxsKGFyZywga2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIiwiaW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3JlZ2VuZXJhdG9yUnVudGltZVwiO1xuaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yXCI7XG5pbXBvcnQgX3R5cGVvZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mXCI7XG5pbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMlwiO1xuaW1wb3J0ICogYXMgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbi8vIExldCBjb21waWxlciBub3QgdG8gc2VhcmNoIG1vZHVsZSB1c2FnZVxudmFyIGZ1bGxDbG9uZSA9IF9vYmplY3RTcHJlYWQoe30sIFJlYWN0RE9NKTtcbnZhciB2ZXJzaW9uID0gZnVsbENsb25lLnZlcnNpb24sXG4gIHJlYWN0UmVuZGVyID0gZnVsbENsb25lLnJlbmRlcixcbiAgdW5tb3VudENvbXBvbmVudEF0Tm9kZSA9IGZ1bGxDbG9uZS51bm1vdW50Q29tcG9uZW50QXROb2RlO1xudmFyIGNyZWF0ZVJvb3Q7XG50cnkge1xuICB2YXIgbWFpblZlcnNpb24gPSBOdW1iZXIoKHZlcnNpb24gfHwgJycpLnNwbGl0KCcuJylbMF0pO1xuICBpZiAobWFpblZlcnNpb24gPj0gMTgpIHtcbiAgICBjcmVhdGVSb290ID0gZnVsbENsb25lLmNyZWF0ZVJvb3Q7XG4gIH1cbn0gY2F0Y2ggKGUpIHtcbiAgLy8gRG8gbm90aGluZztcbn1cbmZ1bmN0aW9uIHRvZ2dsZVdhcm5pbmcoc2tpcCkge1xuICB2YXIgX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQgPSBmdWxsQ2xvbmUuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7XG4gIGlmIChfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCAmJiBfdHlwZW9mKF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEKSA9PT0gJ29iamVjdCcpIHtcbiAgICBfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRC51c2luZ0NsaWVudEVudHJ5UG9pbnQgPSBza2lwO1xuICB9XG59XG52YXIgTUFSSyA9ICdfX3JjX3JlYWN0X3Jvb3RfXyc7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09IFJlbmRlciA9PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5mdW5jdGlvbiBtb2Rlcm5SZW5kZXIobm9kZSwgY29udGFpbmVyKSB7XG4gIHRvZ2dsZVdhcm5pbmcodHJ1ZSk7XG4gIHZhciByb290ID0gY29udGFpbmVyW01BUktdIHx8IGNyZWF0ZVJvb3QoY29udGFpbmVyKTtcbiAgdG9nZ2xlV2FybmluZyhmYWxzZSk7XG4gIHJvb3QucmVuZGVyKG5vZGUpO1xuICBjb250YWluZXJbTUFSS10gPSByb290O1xufVxuZnVuY3Rpb24gbGVnYWN5UmVuZGVyKG5vZGUsIGNvbnRhaW5lcikge1xuICByZWFjdFJlbmRlcihub2RlLCBjb250YWluZXIpO1xufVxuXG4vKiogQHByaXZhdGUgVGVzdCB1c2FnZS4gTm90IHdvcmsgaW4gcHJvZCAqL1xuZXhwb3J0IGZ1bmN0aW9uIF9yKG5vZGUsIGNvbnRhaW5lcikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHJldHVybiBsZWdhY3lSZW5kZXIobm9kZSwgY29udGFpbmVyKTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihub2RlLCBjb250YWluZXIpIHtcbiAgaWYgKGNyZWF0ZVJvb3QpIHtcbiAgICBtb2Rlcm5SZW5kZXIobm9kZSwgY29udGFpbmVyKTtcbiAgICByZXR1cm47XG4gIH1cbiAgbGVnYWN5UmVuZGVyKG5vZGUsIGNvbnRhaW5lcik7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT0gVW5tb3VudCA9PT09PT09PT09PT09PT09PT09PT09PT09PVxuZnVuY3Rpb24gbW9kZXJuVW5tb3VudChfeCkge1xuICByZXR1cm4gX21vZGVyblVubW91bnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cbmZ1bmN0aW9uIF9tb2Rlcm5Vbm1vdW50KCkge1xuICBfbW9kZXJuVW5tb3VudCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjb250YWluZXIpIHtcbiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHtcbiAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9jb250YWluZXIkTUFSSztcbiAgICAgICAgICAgIChfY29udGFpbmVyJE1BUksgPSBjb250YWluZXJbTUFSS10pID09PSBudWxsIHx8IF9jb250YWluZXIkTUFSSyA9PT0gdm9pZCAwIHx8IF9jb250YWluZXIkTUFSSy51bm1vdW50KCk7XG4gICAgICAgICAgICBkZWxldGUgY29udGFpbmVyW01BUktdO1xuICAgICAgICAgIH0pKTtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTtcbiAgICAgIH1cbiAgICB9LCBfY2FsbGVlKTtcbiAgfSkpO1xuICByZXR1cm4gX21vZGVyblVubW91bnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cbmZ1bmN0aW9uIGxlZ2FjeVVubW91bnQoY29udGFpbmVyKSB7XG4gIHVubW91bnRDb21wb25lbnRBdE5vZGUoY29udGFpbmVyKTtcbn1cblxuLyoqIEBwcml2YXRlIFRlc3QgdXNhZ2UuIE5vdCB3b3JrIGluIHByb2QgKi9cbmV4cG9ydCBmdW5jdGlvbiBfdShjb250YWluZXIpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICByZXR1cm4gbGVnYWN5VW5tb3VudChjb250YWluZXIpO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gdW5tb3VudChfeDIpIHtcbiAgcmV0dXJuIF91bm1vdW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5mdW5jdGlvbiBfdW5tb3VudCgpIHtcbiAgX3VubW91bnQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGNvbnRhaW5lcikge1xuICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7XG4gICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICBpZiAoIShjcmVhdGVSb290ICE9PSB1bmRlZmluZWQpKSB7XG4gICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoXCJyZXR1cm5cIiwgbW9kZXJuVW5tb3VudChjb250YWluZXIpKTtcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgIGxlZ2FjeVVubW91bnQoY29udGFpbmVyKTtcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7XG4gICAgICB9XG4gICAgfSwgX2NhbGxlZTIpO1xuICB9KSk7XG4gIHJldHVybiBfdW5tb3VudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSJdLCJuYW1lcyI6WyJyZ2JUb1JnYiIsInIiLCJnIiwiYiIsInJnYlRvSHNsIiwibWF4IiwiTWF0aCIsIm1pbiIsImgiLCJzIiwibCIsImQiLCJodWUycmdiIiwicCIsInEiLCJ0IiwiaHNsVG9SZ2IiLCJyZ2JUb0hzdiIsInYiLCJoc3ZUb1JnYiIsImkiLCJmbG9vciIsImYiLCJtb2QiLCJyZ2JUb0hleCIsImFsbG93M0NoYXIiLCJoZXgiLCJyb3VuZCIsInRvU3RyaW5nIiwic3RhcnRzV2l0aCIsImNoYXJBdCIsImpvaW4iLCJyZ2JhVG9IZXgiLCJhIiwiYWxsb3c0Q2hhciIsImNvbnZlcnREZWNpbWFsVG9IZXgiLCJwYXJzZUZsb2F0IiwiY29udmVydEhleFRvRGVjaW1hbCIsInBhcnNlSW50RnJvbUhleCIsInZhbCIsInBhcnNlSW50IiwibnVtYmVySW5wdXRUb09iamVjdCIsImNvbG9yIiwiYm91bmQwMSIsIm4iLCJpbmRleE9mIiwiaXNPbmVQb2ludFplcm8iLCJpc1BlcmNlbnQiLCJpc1BlcmNlbnRhZ2UiLCJTdHJpbmciLCJhYnMiLCJjbGFtcDAxIiwiYm91bmRBbHBoYSIsImlzTmFOIiwiY29udmVydFRvUGVyY2VudGFnZSIsImNvbmNhdCIsIk51bWJlciIsInBhZDIiLCJjIiwibGVuZ3RoIiwiRGlzYWJsZWRDb250ZXh0IiwiRGlzYWJsZWRDb250ZXh0UHJvdmlkZXIiLCJfcmVmIiwiY2hpbGRyZW4iLCJkaXNhYmxlZCIsIm9yaWdpbkRpc2FibGVkIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsIlNpemVDb250ZXh0IiwidW5kZWZpbmVkIiwiU2l6ZUNvbnRleHRQcm92aWRlciIsInNpemUiLCJDb25zdW1lciIsIm9yaWdpblNpemUiLCJzYWZlSXNOYU4iLCJhcmVJbnB1dHNFcXVhbCIsIm5ld0lucHV0cyIsImxhc3RJbnB1dHMiLCJmaXJzdCIsInNlY29uZCIsIkxvY2FsZVByb3ZpZGVyIiwiX1JlYWN0JENvbXBvbmVudCIsIl9zdXBlciIsInByb3BzIiwiX3RoaXMiLCJ0aGlzIiwiY2FsbCIsImdldE1lbW9pemVkQ29udGV4dFZhbHVlIiwicmVzdWx0Rm4iLCJpc0VxdWFsIiwiY2FjaGUiLCJtZW1vaXplZCIsIm5ld0FyZ3MiLCJfaSIsImFyZ3VtZW50cyIsImxhc3RUaGlzIiwibGFzdEFyZ3MiLCJsYXN0UmVzdWx0IiwiYXBwbHkiLCJjbGVhciIsIm1lbW9pemVPbmUiLCJsb2NhbGVWYWx1ZSIsImV4aXN0IiwibG9jYWxlIiwiTW9kYWwiLCJrZXkiLCJwcmV2UHJvcHMiLCJfdGhpcyRwcm9wcyIsImNvbnRleHRWYWx1ZSIsImRlZmF1bHRQcm9wcyIsIlRpbnlDb2xvciIsIm9wdHMiLCJfYSIsIm9yaWdpbmFsSW5wdXQiLCJyZ2IiLCJyb3VuZEEiLCJmb3JtYXQiLCJncmFkaWVudFR5cGUiLCJpc1ZhbGlkIiwib2siLCJwcm90b3R5cGUiLCJpc0RhcmsiLCJnZXRCcmlnaHRuZXNzIiwiaXNMaWdodCIsInRvUmdiIiwiZ2V0THVtaW5hbmNlIiwiUnNSR0IiLCJHc1JHQiIsIkJzUkdCIiwicG93IiwiZ2V0QWxwaGEiLCJzZXRBbHBoYSIsImFscGhhIiwiaXNNb25vY2hyb21lIiwidG9Ic2wiLCJ0b0hzdiIsImhzdiIsInRvSHN2U3RyaW5nIiwiaHNsIiwidG9Ic2xTdHJpbmciLCJ0b0hleCIsInRvSGV4U3RyaW5nIiwidG9IZXg4IiwidG9IZXg4U3RyaW5nIiwidG9IZXhTaG9ydFN0cmluZyIsImFsbG93U2hvcnRDaGFyIiwidG9SZ2JTdHJpbmciLCJ0b1BlcmNlbnRhZ2VSZ2IiLCJmbXQiLCJ4IiwidG9QZXJjZW50YWdlUmdiU3RyaW5nIiwicm5kIiwidG9OYW1lIiwiT2JqZWN0IiwiZW50cmllcyIsIl9iIiwiZm9ybWF0U2V0IiwiQm9vbGVhbiIsImZvcm1hdHRlZFN0cmluZyIsImhhc0FscGhhIiwidG9OdW1iZXIiLCJjbG9uZSIsImxpZ2h0ZW4iLCJhbW91bnQiLCJicmlnaHRlbiIsImRhcmtlbiIsInRpbnQiLCJtaXgiLCJzaGFkZSIsImRlc2F0dXJhdGUiLCJzYXR1cmF0ZSIsImdyZXlzY2FsZSIsInNwaW4iLCJodWUiLCJyZ2IxIiwicmdiMiIsImFuYWxvZ291cyIsInJlc3VsdHMiLCJzbGljZXMiLCJwYXJ0IiwicmV0IiwicHVzaCIsImNvbXBsZW1lbnQiLCJtb25vY2hyb21hdGljIiwicmVzIiwibW9kaWZpY2F0aW9uIiwic3BsaXRjb21wbGVtZW50Iiwib25CYWNrZ3JvdW5kIiwiYmFja2dyb3VuZCIsImZnIiwiYmciLCJ0cmlhZCIsInBvbHlhZCIsInRldHJhZCIsInJlc3VsdCIsImluY3JlbWVudCIsImVxdWFscyIsImR5bmFtaWNTdHlsZU1hcmsiLCJEYXRlIiwibm93IiwicmFuZG9tIiwicmVnaXN0ZXJUaGVtZSIsImdsb2JhbFByZWZpeENscyIsInRoZW1lIiwic3R5bGUiLCJ2YXJpYWJsZXMiLCJmb3JtYXRDb2xvciIsInVwZGF0ZXIiLCJmaWxsQ29sb3IiLCJjb2xvclZhbCIsInR5cGUiLCJiYXNlQ29sb3IiLCJjb2xvclBhbGV0dGVzIiwicHJpbWFyeUNvbG9yIiwicHJpbWFyeUNvbG9ycyIsImZvckVhY2giLCJpbmRleCIsInByaW1hcnlBY3RpdmVDb2xvciIsInN1Y2Nlc3NDb2xvciIsIndhcm5pbmdDb2xvciIsImVycm9yQ29sb3IiLCJpbmZvQ29sb3IiLCJjc3NMaXN0Iiwia2V5cyIsIm1hcCIsInRyaW0iLCJnZXRTdHlsZSIsImNhblVzZURvbSIsImdsb2JhbEljb25QcmVmaXhDbHMiLCJQQVNTRURfUFJPUFMiLCJnZXRHbG9iYWxQcmVmaXhDbHMiLCJnZXRHbG9iYWxJY29uUHJlZml4Q2xzIiwiZ2xvYmFsQ29uZmlnIiwiZ2V0UHJlZml4Q2xzIiwic3VmZml4Q2xzIiwiY3VzdG9taXplUHJlZml4Q2xzIiwiZ2V0SWNvblByZWZpeENscyIsImdldFJvb3RQcmVmaXhDbHMiLCJyb290UHJlZml4Q2xzIiwiaW5jbHVkZXMiLCJyZXBsYWNlIiwiUHJvdmlkZXJDaGlsZHJlbiIsImNzcCIsImF1dG9JbnNlcnRTcGFjZUluQnV0dG9uIiwiZm9ybSIsImNvbXBvbmVudFNpemUiLCJkaXJlY3Rpb24iLCJzcGFjZSIsInZpcnR1YWwiLCJkcm9wZG93bk1hdGNoU2VsZWN0V2lkdGgiLCJsZWdhY3lMb2NhbGUiLCJwYXJlbnRDb250ZXh0IiwiaWNvblByZWZpeENscyIsImNvbXBvbmVudERpc2FibGVkIiwicHJlZml4Q2xzIiwibWVyZ2VkUHJlZml4Q2xzIiwiY29uZmlnIiwicHJvcE5hbWUiLCJwcm9wVmFsdWUiLCJtZW1vZWRDb25maWciLCJ1c2VNZW1vIiwicHJldkNvbmZpZyIsImN1cnJlbnRDb25maWciLCJwcmV2S2V5cyIsImN1cnJlbnRLZXlzIiwic29tZSIsIm1lbW9JY29uQ29udGV4dFZhbHVlIiwiY2hpbGROb2RlIiwidmFsaWRhdGVNZXNzYWdlcyIsIkZvcm0iLCJkZWZhdWx0VmFsaWRhdGVNZXNzYWdlcyIsIl9BTlRfTUFSS19fIiwiQ29uZmlnUHJvdmlkZXIiLCJtZXNzYWdlIiwicnRsIiwibm90aWZpY2F0aW9uIiwiTG9jYWxlUmVjZWl2ZXIiLCJfIiwiX18iLCJDIiwiY29udGV4dCIsIkNvbmZpZ0NvbnRleHQiLCJjb21wb25lbnROYW1lIiwiZGVmYXVsdExvY2FsZSIsImFudExvY2FsZSIsImxvY2FsZUZyb21Db250ZXh0IiwiRnVuY3Rpb24iLCJsb2NhbGVDb2RlIiwiZ2V0TG9jYWxlIiwiZ2V0TG9jYWxlQ29kZSIsInVzZUxvY2FsZVJlY2VpdmVyIiwiY29udGV4dFR5cGUiLCJyZWYiLCJBbnRkSWNvbiIsImljb24iLCJkaXNwbGF5TmFtZSIsIm1lc3NhZ2VJbnN0YW5jZSIsImRlZmF1bHRUb3AiLCJnZXRDb250YWluZXIiLCJtYXhDb3VudCIsImRlZmF1bHREdXJhdGlvbiIsImxvY2FsUHJlZml4Q2xzIiwidHJhbnNpdGlvbk5hbWUiLCJoYXNUcmFuc2l0aW9uTmFtZSIsImdldEtleVRoZW5JbmNyZWFzZUtleSIsImdldFJDTm90aWZpY2F0aW9uSW5zdGFuY2UiLCJhcmdzIiwiY2FsbGJhY2siLCJnZXRDb250ZXh0UG9wdXBDb250YWluZXIiLCJnZXRQb3B1cENvbnRhaW5lciIsIl9nbG9iYWxDb25maWciLCJpbnN0YW5jZSIsImluc3RhbmNlQ29uZmlnIiwidG9wIiwidHlwZVRvSWNvbiIsImluZm8iLCJzdWNjZXNzIiwiQ2hlY2tDaXJjbGVGaWxsZWQiLCJlcnJvciIsIkNsb3NlQ2lyY2xlRmlsbGVkIiwid2FybmluZyIsIkV4Y2xhbWF0aW9uQ2lyY2xlRmlsbGVkIiwibG9hZGluZyIsIkxvYWRpbmdPdXRsaW5lZCIsInR5cGVMaXN0IiwiZ2V0UkNOb3RpY2VQcm9wcyIsIl9jbGFzc05hbWVzIiwiZHVyYXRpb24iLCJJY29uQ29tcG9uZW50IiwibWVzc2FnZUNsYXNzIiwiY2xhc3NOYW1lIiwiY29udGVudCIsIm9uQ2xvc2UiLCJvbkNsaWNrIiwiYXBpIiwib3BlbiIsInRhcmdldCIsImNsb3NlUHJvbWlzZSIsIlByb21pc2UiLCJyZXNvbHZlIiwibm90aWNlIiwicmVtb3ZlTm90aWNlIiwidGhlbiIsImZpbGxlZCIsInJlamVjdGVkIiwicHJvbWlzZSIsIm9wdGlvbnMiLCJkZXN0cm95IiwibWVzc2FnZUtleSIsImF0dGFjaFR5cGVBcGkiLCJvcmlnaW5hbEFwaSIsImlzQXJnc1Byb3BzIiwid2FybiIsInVzZU1lc3NhZ2UiLCJnZXRSY05vdGlmaWNhdGlvbkluc3RhbmNlIiwiaW5uZXJJbnN0YW5jZSIsInByb3h5IiwiYWRkIiwibm90aWNlUHJvcHMiLCJob2xkZXJDYWxsYmFjayIsImNvbXBvbmVudCIsIl91c2VSQ05vdGlmaWNhdGlvbiIsIl91c2VSQ05vdGlmaWNhdGlvbjIiLCJob29rTm90aWZ5IiwiaG9sZGVyIiwiaG9va0FwaVJlZiIsImN1cnJlbnQiLCJjcmVhdGVVc2VNZXNzYWdlIiwiZGVmYXVsdEdldENvbnRhaW5lciIsImRlZmF1bHRDbG9zZUljb24iLCJub3RpZmljYXRpb25JbnN0YW5jZSIsImRlZmF1bHRCb3R0b20iLCJkZWZhdWx0UHJlZml4Q2xzIiwiZGVmYXVsdFBsYWNlbWVudCIsImdldFBsYWNlbWVudFN0eWxlIiwicGxhY2VtZW50IiwiYm90dG9tIiwibGVmdCIsInRyYW5zZm9ybSIsInJpZ2h0IiwiZ2V0Tm90aWZpY2F0aW9uSW5zdGFuY2UiLCJfYXJncyRwbGFjZW1lbnQiLCJfYXJncyRnZXRDb250YWluZXIiLCJjYWNoZUtleSIsImNhY2hlSW5zdGFuY2UiLCJub3RpZmljYXRpb25DbGFzcyIsIkNoZWNrQ2lyY2xlT3V0bGluZWQiLCJJbmZvQ2lyY2xlT3V0bGluZWQiLCJDbG9zZUNpcmNsZU91dGxpbmVkIiwiRXhjbGFtYXRpb25DaXJjbGVPdXRsaW5lZCIsImR1cmF0aW9uQXJnIiwiZGVzY3JpcHRpb24iLCJidG4iLCJfYXJncyRjbG9zZUljb24iLCJjbG9zZUljb24iLCJpY29uTm9kZSIsImNsb3NlSWNvblRvUmVuZGVyIiwiQ2xvc2VPdXRsaW5lZCIsImF1dG9NYXJnaW5UYWciLCJyb2xlIiwiY2xvc2FibGUiLCJjbG9zZSIsInVzZU5vdGlmaWNhdGlvbiIsImNyZWF0ZVVzZU5vdGlmaWNhdGlvbiIsIk5vdGljZSIsIl9Db21wb25lbnQiLCJfbGVuIiwiQXJyYXkiLCJfa2V5IiwiY2xvc2VUaW1lciIsImUiLCJzdG9wUHJvcGFnYXRpb24iLCJjbGVhckNsb3NlVGltZXIiLCJub3RpY2VLZXkiLCJzdGFydENsb3NlVGltZXIiLCJ3aW5kb3ciLCJzZXRUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwidXBkYXRlTWFyayIsInZpc2libGUiLCJyZXN0YXJ0Q2xvc2VUaW1lciIsIl90aGlzMiIsIl90aGlzJHByb3BzMiIsImNvbXBvbmVudENsYXNzIiwiZGF0YU9yQXJpYUF0dHJpYnV0ZVByb3BzIiwicmVkdWNlIiwiYWNjIiwic3Vic3RyIiwibm9kZSIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VMZWF2ZSIsInRhYkluZGV4IiwiQ29tcG9uZW50IiwiX2V4Y2x1ZGVkIiwic2VlZCIsImdldFV1aWQiLCJpZCIsIk5vdGlmaWNhdGlvbiIsInN0YXRlIiwibm90aWNlcyIsImhvb2tSZWZzIiwiTWFwIiwib3JpZ2luTm90aWNlIiwiX29yaWdpbk5vdGljZSRrZXkiLCJzZXRTdGF0ZSIsInByZXZpb3VzU3RhdGUiLCJub3RpY2VJbmRleCIsInVwZGF0ZWROb3RpY2VzIiwic3BsaWNlIiwidXNlclBhc3NLZXkiLCJzaGlmdCIsInJlbW92ZSIsInJlbW92ZUtleSIsImZpbHRlciIsIl9yZWYyIiwiX3JlZjIkbm90aWNlIiwibm90aWNlUHJvcHNNYXAiLCJhbmltYXRpb24iLCJub3RpY2VLZXlzIiwiX3JlZjMiLCJfbm90aWNlJG9uQ2xvc2UiLCJtb3Rpb25OYW1lIiwiZ2V0VHJhbnNpdGlvbk5hbWUiLCJvblZpc2libGVDaGFuZ2VkIiwiY2hhbmdlZFZpc2libGUiLCJfcmVmNCIsIl9yZWY1IiwibW90aW9uQ2xhc3NOYW1lIiwibW90aW9uU3R5bGUiLCJfdGhpczIkbm90aWNlUHJvcHNNYXAiLCJkaXYiLCJzZXQiLCJkZWxldGUiLCJuZXdJbnN0YW5jZSIsInByb3BlcnRpZXMiLCJfcmVmNiIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImFwcGVuZENoaWxkIiwiYm9keSIsImNhbGxlZCIsInJlbmRlciIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImNyZWF0ZWRSZWYiLCJfUmVhY3QkdXNlU3RhdGUiLCJfUmVhY3QkdXNlU3RhdGUyIiwiZWxlbWVudHMiLCJzZXRFbGVtZW50cyIsImZpcnN0TW91bnQiLCJub3RpY2VFbGUiLCJvcmlnaW5FbGVtZW50cyIsImZpbmRJbmRleCIsImVsZSIsImNsb25lTGlzdCIsImhhc093biIsImhhc093blByb3BlcnR5IiwiY2xhc3NOYW1lcyIsImNsYXNzZXMiLCJhcmciLCJhcmdUeXBlIiwiaXNBcnJheSIsImlubmVyIiwibW9kdWxlIiwiZXhwb3J0cyIsImRlZmF1bHQiLCJjcmVhdGVSb290IiwiZnVsbENsb25lIiwidmVyc2lvbiIsInJlYWN0UmVuZGVyIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInNwbGl0IiwidG9nZ2xlV2FybmluZyIsInNraXAiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsInVzaW5nQ2xpZW50RW50cnlQb2ludCIsIk1BUksiLCJjb250YWluZXIiLCJyb290IiwibW9kZXJuUmVuZGVyIiwibGVnYWN5UmVuZGVyIiwibW9kZXJuVW5tb3VudCIsIl94IiwiX21vZGVyblVubW91bnQiLCJtYXJrIiwiX2NhbGxlZSIsIndyYXAiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwiYWJydXB0IiwiX2NvbnRhaW5lciRNQVJLIiwidW5tb3VudCIsInN0b3AiLCJsZWdhY3lVbm1vdW50IiwiX3gyIiwiX3VubW91bnQiLCJfY2FsbGVlMiIsIl9jb250ZXh0MiJdLCJzb3VyY2VSb290IjoiIn0=