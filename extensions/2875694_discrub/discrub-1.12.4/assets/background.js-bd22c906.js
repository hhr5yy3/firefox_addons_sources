self.addEventListener("install",()=>{self.skipWaiting()});self.addEventListener("activate",t=>{t.waitUntil(self.clients.claim())});const c=new Map;self.onmessage=t=>{if(t.data==="ping")return;const e=t.data,r=e.url||self.registration.scope+Math.random()+"/"+(typeof e=="string"?e:e.filename),n=t.ports[0],s=new Array(3);s[1]=e,s[2]=n,t.data.readableStream?s[0]=t.data.readableStream:t.data.transferringReadable?n.onmessage=d=>{n.onmessage=null,s[0]=d.data.readableStream}:s[0]=l(n),c.set(r,s),n.postMessage({download:r})};function l(t){return new ReadableStream({start(e){t.onmessage=({data:r})=>{if(r==="end")return e.close();if(r==="abort"){e.error("Aborted the download");return}e.enqueue(r)}},cancel(e){console.log("user aborted",e),t.postMessage({abort:!0})}})}self.onfetch=t=>{const e=t.request.url;if(e.endsWith("/ping"))return t.respondWith(new Response("pong"));const r=c.get(e);if(!r)return null;const[n,s,d]=r;c.delete(e);const a=new Headers({"Content-Type":"application/octet-stream; charset=utf-8","Content-Security-Policy":"default-src 'none'","X-Content-Security-Policy":"default-src 'none'","X-WebKit-CSP":"default-src 'none'","X-XSS-Protection":"1; mode=block"});let o=new Headers(s.headers||{});o.has("Content-Length")&&a.set("Content-Length",o.get("Content-Length")),o.has("Content-Disposition")&&a.set("Content-Disposition",o.get("Content-Disposition")),s.size&&(console.warn("Depricated"),a.set("Content-Length",s.size));let i=typeof s=="string"?s:s.filename;i&&(console.warn("Depricated"),i=encodeURIComponent(i).replace(/['()]/g,escape).replace(/\*/g,"%2A"),a.set("Content-Disposition","attachment; filename*=UTF-8''"+i)),t.respondWith(new Response(n,{headers:a})),d.postMessage({debug:"Download started"})};browser.runtime.onMessage.addListener((t,e,r)=>(browser&&browser.tabs&&browser.tabs.query({active:!0,currentWindow:!0},function(n){n&&browser.tabs.sendMessage(n[0].id,t).then(s=>{r(s)})}),!0));browser.action.onClicked.addListener(t=>{browser&&browser.tabs&&browser.tabs.query({active:!0,currentWindow:!0},function(e){e&&browser.tabs.sendMessage(e[0].id,{message:"INJECT_DIALOG"})})});browser.tabs.onUpdated.addListener(function(t,e,r){browser&&browser.tabs&&browser.tabs.query({active:!0,currentWindow:!0},function(n){n&&browser.tabs.sendMessage(n[0].id,{message:"INJECT_BUTTON"})})});
