import{g as z}from"./_commonjsHelpers-CqkleIqs.js";var j={exports:{}},U;function re(){if(U)return j.exports;U=1;const e=s=>typeof crypto<"u"&&typeof crypto.getRandomValues=="function"?()=>{const c=crypto.getRandomValues(new Uint8Array(1))[0];return(c>=s?c%s:c).toString(s)}:()=>Math.floor(Math.random()*s).toString(s),r=(s=7,c=!1)=>Array.from({length:s},e(c?16:36)).join("");return j.exports=r,j.exports.default=r,j.exports}var se=re();const $=z(se);var xe=()=>`uid::${$(7)}`,Z=(e,r=["endpointName","fingerprint"])=>typeof e=="object"&&e!==null&&r.every(s=>s in e),pe=e=>{if(!Z(e))throw new TypeError("Invalid connection args");return JSON.stringify(e)},he=e=>{try{const r=JSON.parse(e);return Z(r)?r:null}catch{return null}},be=()=>{let e=[];return{add:(...r)=>{e=[...e,...r]},remove:r=>{e=typeof r=="string"?e.filter(s=>s.message.transactionId!==r):e.filter(s=>!r.includes(s))},entries:()=>e}},ye=class{static toBackground(e,r){return e.postMessage(r)}static toExtensionContext(e,r){return e.postMessage(r)}},R={exports:{}},ne=R.exports,q;function te(){return q||(q=1,function(e,r){(function(s,c){c(e)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:ne,function(s){if(typeof globalThis!="object"||typeof chrome!="object"||!chrome||!chrome.runtime||!chrome.runtime.id)throw new Error("This script should only be loaded in a browser extension.");if(typeof globalThis.browser>"u"||Object.getPrototypeOf(globalThis.browser)!==Object.prototype){const c="The message port closed before a response was received.",x="Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)",h=i=>{const a={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(a).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class m extends WeakMap{constructor(t,g=void 0){super(g),this.createItem=t}get(t){return this.has(t)||this.set(t,this.createItem(t)),super.get(t)}}const p=n=>n&&typeof n=="object"&&typeof n.then=="function",b=(n,t)=>(...g)=>{i.runtime.lastError?n.reject(new Error(i.runtime.lastError.message)):t.singleCallbackArg||g.length<=1&&t.singleCallbackArg!==!1?n.resolve(g[0]):n.resolve(g)},v=n=>n==1?"argument":"arguments",C=(n,t)=>function(l,...d){if(d.length<t.minArgs)throw new Error(`Expected at least ${t.minArgs} ${v(t.minArgs)} for ${n}(), got ${d.length}`);if(d.length>t.maxArgs)throw new Error(`Expected at most ${t.maxArgs} ${v(t.maxArgs)} for ${n}(), got ${d.length}`);return new Promise((w,_)=>{if(t.fallbackToNoCallback)try{l[n](...d,b({resolve:w,reject:_},t))}catch(o){console.warn(`${n} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,o),l[n](...d),t.fallbackToNoCallback=!1,t.noCallback=!0,w()}else t.noCallback?(l[n](...d),w()):l[n](...d,b({resolve:w,reject:_},t))})},f=(n,t,g)=>new Proxy(t,{apply(l,d,w){return g.call(d,n,...w)}});let A=Function.call.bind(Object.prototype.hasOwnProperty);const k=(n,t={},g={})=>{let l=Object.create(null),d={has(_,o){return o in n||o in l},get(_,o,E){if(o in l)return l[o];if(!(o in n))return;let u=n[o];if(typeof u=="function")if(typeof t[o]=="function")u=f(n,n[o],t[o]);else if(A(g,o)){let P=C(o,g[o]);u=f(n,n[o],P)}else u=u.bind(n);else if(typeof u=="object"&&u!==null&&(A(t,o)||A(g,o)))u=k(u,t[o],g[o]);else if(A(g,"*"))u=k(u,t[o],g["*"]);else return Object.defineProperty(l,o,{configurable:!0,enumerable:!0,get(){return n[o]},set(P){n[o]=P}}),u;return l[o]=u,u},set(_,o,E,u){return o in l?l[o]=E:n[o]=E,!0},defineProperty(_,o,E){return Reflect.defineProperty(l,o,E)},deleteProperty(_,o){return Reflect.deleteProperty(l,o)}},w=Object.create(n);return new Proxy(w,d)},y=n=>({addListener(t,g,...l){t.addListener(n.get(g),...l)},hasListener(t,g){return t.hasListener(n.get(g))},removeListener(t,g){t.removeListener(n.get(g))}}),N=new m(n=>typeof n!="function"?n:function(g){const l=k(g,{},{getContent:{minArgs:0,maxArgs:0}});n(l)});let M=!1;const I=new m(n=>typeof n!="function"?n:function(g,l,d){let w=!1,_,o=new Promise(O=>{_=function(S){M||(console.warn(x,new Error().stack),M=!0),w=!0,O(S)}}),E;try{E=n(g,l,_)}catch(O){E=Promise.reject(O)}const u=E!==!0&&p(E);if(E!==!0&&!u&&!w)return!1;const P=O=>{O.then(S=>{d(S)},S=>{let B;S&&(S instanceof Error||typeof S.message=="string")?B=S.message:B="An unexpected error occurred",d({__mozWebExtensionPolyfillReject__:!0,message:B})}).catch(S=>{console.error("Failed to send onMessage rejected reply",S)})};return P(u?E:o),!0}),X=({reject:n,resolve:t},g)=>{i.runtime.lastError?i.runtime.lastError.message===c?t():n(new Error(i.runtime.lastError.message)):g&&g.__mozWebExtensionPolyfillReject__?n(new Error(g.message)):t(g)},W=(n,t,g,...l)=>{if(l.length<t.minArgs)throw new Error(`Expected at least ${t.minArgs} ${v(t.minArgs)} for ${n}(), got ${l.length}`);if(l.length>t.maxArgs)throw new Error(`Expected at most ${t.maxArgs} ${v(t.maxArgs)} for ${n}(), got ${l.length}`);return new Promise((d,w)=>{const _=X.bind(null,{resolve:d,reject:w});l.push(_),g.sendMessage(...l)})},ee={devtools:{network:{onRequestFinished:y(N)}},runtime:{onMessage:y(I),onMessageExternal:y(I),sendMessage:W.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:W.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},F={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return a.privacy={network:{"*":F},services:{"*":F},websites:{"*":F}},k(i,ee,a)};s.exports=h(chrome)}else s.exports=globalThis.browser})}(R)),R.exports}var ae=te();const we=z(ae);var oe=Object.defineProperty,ie=Object.defineProperties,ge=Object.getOwnPropertyDescriptors,J=Object.getOwnPropertySymbols,me=Object.prototype.hasOwnProperty,le=Object.prototype.propertyIsEnumerable,V=(e,r,s)=>r in e?oe(e,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[r]=s,G=(e,r)=>{for(var s in r||(r={}))me.call(r,s)&&V(e,s,r[s]);if(J)for(var s of J(r))le.call(r,s)&&V(e,s,r[s]);return e},H=(e,r)=>ie(e,ge(r)),ce=/^((?:background$)|devtools|popup|options|content-script|window)(?:@(\d+)(?:\.(\d+))?)?$/,K=e=>{const[,r,s,c]=e.match(ce)||[];return{context:r,tabId:+s,frameId:c?+c:void 0}},ve=({context:e,tabId:r,frameId:s})=>["background","popup","options"].includes(e)?e:`${e}@${r}${s?`.${s}`:""}`;const Ae=[{property:"name",enumerable:!1},{property:"message",enumerable:!1},{property:"stack",enumerable:!1},{property:"code",enumerable:!0}],L=Symbol(".toJSON was called"),ue=e=>{e[L]=!0;const r=e.toJSON();return delete e[L],r},Y=({from:e,seen:r,to_:s,forceEnumerable:c,maxDepth:x,depth:h})=>{const i=s||(Array.isArray(e)?[]:{});if(r.push(e),h>=x)return i;if(typeof e.toJSON=="function"&&e[L]!==!0)return ue(e);for(const[a,m]of Object.entries(e)){if(typeof Buffer=="function"&&Buffer.isBuffer(m)){i[a]="[object Buffer]";continue}if(m!==null&&typeof m=="object"&&typeof m.pipe=="function"){i[a]="[object Stream]";continue}if(typeof m!="function"){if(!m||typeof m!="object"){i[a]=m;continue}if(!r.includes(e[a])){h++,i[a]=Y({from:e[a],seen:[...r],forceEnumerable:c,maxDepth:x,depth:h});continue}i[a]="[Circular]"}}for(const{property:a,enumerable:m}of Ae)typeof e[a]=="string"&&Object.defineProperty(i,a,{value:e[a],enumerable:c?!0:m,configurable:!0,writable:!0});return i};function de(e,r={}){const{maxDepth:s=Number.POSITIVE_INFINITY}=r;return typeof e=="object"&&e!==null?Y({from:e,seen:[],forceEnumerable:!0,maxDepth:s,depth:0}):typeof e=="function"?`[Function: ${e.name||"anonymous"}]`:e}let Q=()=>({events:{},emit(e,...r){(this.events[e]||[]).forEach(s=>s(...r))},on(e,r){return(this.events[e]=this.events[e]||[]).push(r),()=>this.events[e]=(this.events[e]||[]).filter(s=>s!==r)}});var _e=(e,r,s)=>{const c=$(),x=new Map,h=new Map,i=a=>{if(a.destination.context===e&&!a.destination.frameId&&!a.destination.tabId){s==null||s(a);const{transactionId:m,messageID:p,messageType:b}=a,v=()=>{const f=x.get(m);if(f){const{err:A,data:k}=a;if(A){const y=A,N=self[y.name],M=new(typeof N=="function"?N:Error)(y.message);for(const I in y)M[I]=y[I];f.reject(M)}else f.resolve(k);x.delete(m)}},C=async()=>{let f,A,k=!1;try{const y=h.get(p);if(typeof y=="function")f=await y({sender:a.origin,id:p,data:a.data,timestamp:a.timestamp});else throw k=!0,new Error(`[webext-bridge] No handler registered in '${e}' to accept messages with id '${p}'`)}catch(y){A=y}finally{if(A&&(a.err=de(A)),i(H(G({},a),{messageType:"reply",data:f,origin:{context:e,tabId:null},destination:a.origin,hops:[]})),A&&!k)throw f}};switch(b){case"reply":return v();case"message":return C()}}return a.hops.push(`${e}::${c}`),r(a)};return{handleMessage:i,endTransaction:a=>{const m=x.get(a);m==null||m.reject("Transaction was ended before it could complete"),x.delete(a)},sendMessage:(a,m,p="background")=>{const b=typeof p=="string"?K(p):p,v="Bridge#sendMessage ->";if(!b.context)throw new TypeError(`${v} Destination must be any one of known destinations`);return new Promise((C,f)=>{const A={messageID:a,data:m,destination:b,messageType:"message",transactionId:$(),origin:{context:e,tabId:null},hops:[],timestamp:Date.now()};x.set(A.transactionId,{resolve:C,reject:f});try{i(A)}catch(k){x.delete(A.transactionId),f(k)}})},onMessage:(a,m)=>(h.set(a,m),()=>h.delete(a))}},T=class{constructor(e,r){this.endpointRuntime=e,this.streamInfo=r,this.emitter=Q(),this.isClosed=!1,this.handleStreamClose=()=>{this.isClosed||(this.isClosed=!0,this.emitter.emit("closed",!0),this.emitter.events={})},T.initDone||(e.onMessage("__crx_bridge_stream_transfer__",s=>{const{streamId:c,streamTransfer:x,action:h}=s.data,i=T.openStreams.get(c);i&&!i.isClosed&&(h==="transfer"&&i.emitter.emit("message",x),h==="close"&&(T.openStreams.delete(c),i.handleStreamClose()))}),T.initDone=!0),T.openStreams.set(this.streamInfo.streamId,this)}get info(){return this.streamInfo}send(e){if(this.isClosed)throw new Error("Attempting to send a message over closed stream. Use stream.onClose(<callback>) to keep an eye on stream status");this.endpointRuntime.sendMessage("__crx_bridge_stream_transfer__",{streamId:this.streamInfo.streamId,streamTransfer:e,action:"transfer"},this.streamInfo.endpoint)}close(e){e&&this.send(e),this.handleStreamClose(),this.endpointRuntime.sendMessage("__crx_bridge_stream_transfer__",{streamId:this.streamInfo.streamId,streamTransfer:null,action:"close"},this.streamInfo.endpoint)}onMessage(e){return this.getDisposable("message",e)}onClose(e){return this.getDisposable("closed",e)}getDisposable(e,r){const s=this.emitter.on(e,r);return Object.assign(s,{dispose:s,close:s})}},D=T;D.initDone=!1;D.openStreams=new Map;var Ee=e=>{const r=new Map,s=new Map,c=Q();e.onMessage("__crx_bridge_stream_open__",i=>new Promise(a=>{const{sender:m,data:p}=i,{channel:b}=p;let v=!1,C=()=>{};const f=()=>{const A=s.get(b);typeof A=="function"?(A(new D(e,H(G({},p),{endpoint:m}))),v&&C(),a(!0)):v||(v=!0,C=c.on("did-change-stream-callbacks",f))};f()}));async function x(i,a){if(r.has(i))throw new Error("webext-bridge: A Stream is already open at this channel");const m=typeof a=="string"?K(a):a,p={streamId:$(),channel:i,endpoint:m},b=new D(e,p);return b.onClose(()=>r.delete(i)),await e.sendMessage("__crx_bridge_stream_open__",p,m),r.set(i,b),b}function h(i,a){if(s.has(i))throw new Error("webext-bridge: This channel has already been claimed. Stream allows only one-on-one communication");s.set(i,a),c.emit("did-change-stream-callbacks")}return{openStream:x,onOpenStreamChannel:h}};export{ye as P,G as _,be as a,we as b,xe as c,_e as d,pe as e,Ee as f,he as g,ve as h,H as i,K as p};
