const POW_2_32=4294967296,POW_2_53=9007199254740992;function objectIs(x,y){return"function"==typeof Object.is?Object.is(x,y):x===y?0!==x||1/x==1/y:x!=x&&y!=y}class TaggedValue{constructor(value,tag){this.value=value,this.tag=tag}}function encode(value){let data=new ArrayBuffer(256),dataView=new DataView(data),byteView=new Uint8Array(data),lastLength,offset=0;function prepareWrite(length){let newByteLength=data.byteLength,requiredLength=offset+length;for(;newByteLength<requiredLength;)newByteLength<<=1;if(newByteLength!==data.byteLength){let oldDataView=dataView;data=new ArrayBuffer(newByteLength),dataView=new DataView(data),byteView=new Uint8Array(data);let uint32count=offset+3>>2;for(let i=0;i<uint32count;++i)dataView.setUint32(i<<2,oldDataView.getUint32(i<<2))}return lastLength=length,dataView}function commitWrite(...args){offset+=lastLength}function writeFloat64(val){commitWrite(prepareWrite(8).setFloat64(offset,val))}function writeUint8(val){commitWrite(prepareWrite(1).setUint8(offset,val))}function writeUint8Array(val){prepareWrite(val.length),byteView.set(val,offset),commitWrite()}function writeUint16(val){commitWrite(prepareWrite(2).setUint16(offset,val))}function writeUint32(val){commitWrite(prepareWrite(4).setUint32(offset,val))}function writeUint64(val){let low=val%POW_2_32,high=(val-low)/POW_2_32,view=prepareWrite(8);view.setUint32(offset,high),view.setUint32(offset+4,low),commitWrite()}function writeVarUint(val,mod=0){val<=255?val<24?writeUint8(val|mod):(writeUint8(24|mod),writeUint8(val)):val<=65535?(writeUint8(25|mod),writeUint16(val)):val<=4294967295?(writeUint8(26|mod),writeUint32(val)):(writeUint8(27|mod),writeUint64(val))}function writeTypeAndLength(type,length){length<24?writeUint8(type<<5|length):length<256?(writeUint8(type<<5|24),writeUint8(length)):length<65536?(writeUint8(type<<5|25),writeUint16(length)):length<4294967296?(writeUint8(type<<5|26),writeUint32(length)):(writeUint8(type<<5|27),writeUint64(length))}function encodeItem(val){let i;if(!1===val)return writeUint8(244);if(!0===val)return writeUint8(245);if(null===val)return writeUint8(246);if(void 0===val)return writeUint8(247);if(objectIs(val,-0))return writeUint8Array([249,128,0]);switch(typeof val){case"number":if(Math.floor(val)===val){if(0<=val&&val<=POW_2_53)return writeTypeAndLength(0,val);if(-POW_2_53<=val&&val<0)return writeTypeAndLength(1,-(val+1))}return writeUint8(251),writeFloat64(val);case"string":let utf8data=[];for(i=0;i<val.length;++i){let charCode=val.charCodeAt(i);charCode<128?utf8data.push(charCode):charCode<2048?(utf8data.push(192|charCode>>6),utf8data.push(128|63&charCode)):charCode<55296||charCode>=57344?(utf8data.push(224|charCode>>12),utf8data.push(128|charCode>>6&63),utf8data.push(128|63&charCode)):(charCode=(1023&charCode)<<10,charCode|=1023&val.charCodeAt(++i),charCode+=65536,utf8data.push(240|charCode>>18),utf8data.push(128|charCode>>12&63),utf8data.push(128|charCode>>6&63),utf8data.push(128|63&charCode))}return writeTypeAndLength(3,utf8data.length),writeUint8Array(utf8data);default:let length,converted;if(Array.isArray(val))for(length=val.length,writeTypeAndLength(4,length),i=0;i<length;i+=1)encodeItem(val[i]);else if(val instanceof Uint8Array)writeTypeAndLength(2,val.length),writeUint8Array(val);else if(ArrayBuffer.isView(val))converted=new Uint8Array(val.buffer),writeTypeAndLength(2,converted.length),writeUint8Array(converted);else if(val instanceof ArrayBuffer||"function"==typeof SharedArrayBuffer&&val instanceof SharedArrayBuffer)converted=new Uint8Array(val),writeTypeAndLength(2,converted.length),writeUint8Array(converted);else if(val instanceof TaggedValue)writeVarUint(val.tag,192),encodeItem(val.value);else{let keys=Object.keys(val);for(length=keys.length,writeTypeAndLength(5,length),i=0;i<length;i+=1){let key=keys[i];encodeItem(key),encodeItem(val[key])}}}}if(encodeItem(value),"slice"in data)return data.slice(0,offset);let ret=new ArrayBuffer(offset),retView=new DataView(ret);for(let i=0;i<offset;++i)retView.setUint8(i,dataView.getUint8(i));return ret}const CBOR={encode:encode};