function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,a=Array(e.length);t<e.length;t++)a[t]=e[t];return a}return Array.from(e)}class SerpListItem extends React.Component{render(){var e=this.props;const t=e.serpItem,a=e.dispatch,s=e.settings,r=t.host,n=t.id,l=t.shieldActions[0],c=t.shieldActions[1],i=(s.shields[n]?s.shields[n]:s.shields.all)===SHIELDS_LEVEL_HIGH;return React.createElement("div",{className:"serp_item"},React.createElement("div",{className:"serp_title"},r),React.createElement("div",{className:"serp_action_buttons_container"},React.createElement("div",{className:"serp_button "+(i?"selected":""),onClick:()=>{a(l.action(l.arguments,n)),GA.apply(void 0,_toConsumableArray(l.params))}},translate("on")),React.createElement("div",{className:"button_divider"}),React.createElement("div",{className:"serp_button "+(i?"":"selected"),onClick:()=>{a(c.action(c.arguments,n)),GA.apply(void 0,_toConsumableArray(c.params))}},translate("off"))))}}