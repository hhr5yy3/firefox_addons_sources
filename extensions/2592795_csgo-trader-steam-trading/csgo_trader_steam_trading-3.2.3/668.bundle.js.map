{"version":3,"file":"668.bundle.js","mappings":"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","sources":["webpack://csgotrader.app-extension/./src/components/Popup/Calculator/CurrencySelect.js","webpack://csgotrader.app-extension/./src/components/Popup/Calculator/CurrencyConverter.js","webpack://csgotrader.app-extension/./src/components/Popup/Calculator/SimplePercentage.js","webpack://csgotrader.app-extension/./src/components/Popup/Calculator/ReversePercentage.js","webpack://csgotrader.app-extension/./src/components/Popup/Calculator/ReverseIncDecPercentage.js","webpack://csgotrader.app-extension/./src/components/Popup/Calculator/Calculator.js","webpack://csgotrader.app-extension/./src/components/Popup/LogoAndLinks/LogoAndLinks.js","webpack://csgotrader.app-extension/./src/pages/Popup/Popup.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { currencies } from 'utils/static/pricing';\n\nconst CurrencySelect = ({ id, selected, setSelected }) => {\n  const transformCurrencies = () => {\n    const transformedCurrencies = [];\n    for (const currency of Object.values(currencies)) {\n      transformedCurrencies.push({\n        key: currency.short,\n        text: currency.short,\n      });\n    }\n\n    return transformedCurrencies;\n  };\n\n  useEffect(() => {\n    chrome.storage.local.get(id, (result) => {\n      setSelected(result[id]);\n    });\n  }, []);\n\n  const applySelection = (e) => {\n    const targetValue = e.target.value;\n    setSelected(targetValue);\n  };\n\n  return (\n    <select\n      className=\"select-theme\"\n      id={id}\n      value={selected}\n      onChange={applySelection}\n    >\n      {transformCurrencies().map((option) => {\n        return (\n          <option key={id + option.key} value={option.key}>\n            {option.text}\n          </option>\n        );\n      })}\n    </select>\n  );\n};\n\nexport default CurrencySelect;\n","import React, { useState, useEffect } from 'react';\nimport CurrencySelect from 'components/Popup/Calculator/CurrencySelect';\nimport { prettyPrintPrice } from 'utils/pricing';\nimport { currencies } from 'utils/static/pricing';\n\nconst CurrencyConverter = () => {\n  const [currency1, setCurrency1] = useState('USD');\n  const [currency2, setCurrency2] = useState('EUR');\n  const [inputNumber, setInputNumber] = useState(100);\n  const [result, setResult] = useState('');\n\n  const convert = (input) => {\n    chrome.storage.local.get('exchangeRates', ({ exchangeRates }) => {\n      const convertedValue = (input / parseFloat(exchangeRates[currency1]))\n        * parseFloat(exchangeRates[currency2]);\n      setResult(convertedValue.toFixed(2));\n    });\n  };\n\n  useEffect(() => {\n    convert(inputNumber);\n  }, [currency1, currency2, inputNumber]);\n\n  useEffect(() => {\n    chrome.storage.local.get('calculatorConversionPlaceholder', ({ calculatorConversionPlaceholder }) => {\n      setInputNumber(parseFloat(calculatorConversionPlaceholder));\n    });\n  }, []);\n\n  const onInputChange = (change) => {\n    const newInputNumber = change.target.value;\n    setInputNumber(newInputNumber);\n    convert(newInputNumber);\n  };\n\n  return (\n    <>\n      <h5>Currency convert</h5>\n      <div>\n        <span>\n          {currencies[currency1].sign}\n          {' '}\n        </span>\n        <input type=\"number\" value={inputNumber} onChange={onInputChange} className=\"numberInput numberInput__wide\" />\n        <span>\n          {' = '}\n          {prettyPrintPrice(currency2, result)}\n        </span>\n      </div>\n      <CurrencySelect id=\"defaultConverterCurrency1\" selected={currency1} setSelected={setCurrency1} />\n      <span> - </span>\n      <CurrencySelect id=\"defaultConverterCurrency2\" selected={currency2} setSelected={setCurrency2} />\n    </>\n  );\n};\n\nexport default CurrencyConverter;\n","import React, { useState, useEffect } from 'react';\n\nconst SimplePercentage = () => {\n  const [percentage, setPercentage] = useState(3);\n  const [number, setNumber] = useState(90);\n  const [result, setResult] = useState('2.70');\n\n  const onPercentageChange = (event) => {\n    setPercentage(event.target.value);\n  };\n\n  const onNumberChange = (event) => {\n    setNumber(event.target.value);\n  };\n\n  useEffect(() => {\n    setResult((number * (percentage / 100)).toFixed(2));\n  }, [percentage, number]);\n\n  useEffect(() => {\n    chrome.storage.local.get(['calculatorPercentageOf', 'calculatorPercentagePercentage'],\n      ({ calculatorPercentageOf, calculatorPercentagePercentage }) => {\n        setNumber(parseFloat(calculatorPercentageOf).toFixed(2));\n        setPercentage(parseFloat(calculatorPercentagePercentage).toFixed(2));\n      });\n  }, []);\n\n  return (\n    <div className=\"calCategory\">\n      <span\n        className=\"calcSubtitle\"\n        title=\"Percentage - Find how much a specific percentage is of a number\"\n      >\n        Percentage\n      </span>\n      <input type=\"number\" value={percentage} onChange={onPercentageChange} className=\"numberInput numberInput__narrow\" />\n      <span> % of </span>\n      <input type=\"number\" value={number} onChange={onNumberChange} className=\"numberInput numberInput__narrow\" />\n      <span> = </span>\n      <span>{result}</span>\n    </div>\n  );\n};\n\nexport default SimplePercentage;\n","import React, { useState, useEffect } from 'react';\n\nconst ReversePercentage = () => {\n  const [percentage, setPercentage] = useState(30);\n  const [number, setNumber] = useState(2.70);\n  const [result, setResult] = useState('90');\n\n  const onPercentageChange = (event) => {\n    setPercentage(event.target.value);\n  };\n\n  const onNumberChange = (event) => {\n    setNumber(event.target.value);\n  };\n\n  useEffect(() => {\n    setResult((number / (percentage / 100)).toFixed(2));\n  }, [percentage, number]);\n\n  useEffect(() => {\n    chrome.storage.local.get(['calculatorReversePercentage', 'calculatorReverseValue'],\n      ({ calculatorReverseValue, calculatorReversePercentage }) => {\n        setNumber(parseFloat(calculatorReverseValue).toFixed(2));\n        setPercentage(parseFloat(calculatorReversePercentage).toFixed(2));\n      });\n  }, []);\n\n  return (\n    <div className=\"calCategory\">\n      <span\n        className=\"calcSubtitle\"\n        title=\"Reverse Percentage - Find how many percent is a number of another number\"\n      >\n        Reverse Percentage\n      </span>\n      <input type=\"number\" value={number} onChange={onNumberChange} className=\"numberInput numberInput__narrow\" />\n      <span> is </span>\n      <input type=\"number\" value={percentage} onChange={onPercentageChange} className=\"numberInput numberInput__narrow\" />\n      <span> % of </span>\n      <span>{result}</span>\n    </div>\n  );\n};\n\nexport default ReversePercentage;\n","import React, { useState, useEffect } from 'react';\n\nconst ReverseIncDecPercentage = () => {\n  const [percentage, setPercentage] = useState(27);\n  const [number, setNumber] = useState(1000);\n  const [result, setResult] = useState('787.40');\n  const [option, setOption] = useState('inc');\n\n  const onPercentageChange = (event) => {\n    setPercentage(event.target.value);\n  };\n\n  const onNumberChange = (event) => {\n    setNumber(event.target.value);\n  };\n\n  const onSelectChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  useEffect(() => {\n    const res = option === 'inc'\n      ? number / ((percentage / 100) + 1.0)\n      : number / (1.0 - (percentage / 100));\n\n    setResult(res.toFixed(2));\n  }, [percentage, number, option]);\n\n  useEffect(() => {\n    chrome.storage.local.get(['calculatorIncDecPercentage', 'calculatorIncDecResult'],\n      ({ calculatorIncDecPercentage, calculatorIncDecResult }) => {\n        setPercentage(parseFloat(calculatorIncDecPercentage).toFixed(2));\n        setNumber(parseFloat(calculatorIncDecResult).toFixed(2));\n      });\n  }, []);\n\n  return (\n    <div className=\"calCategory\">\n      <div>\n        <span\n          className=\"calcSubtitle\"\n          title=\"Find what the original number was before it was increased or decreased by a certain percentage\"\n        >\n          Increment/decrement by\n        </span>\n      </div>\n      <div>\n        <span>{result}</span>\n        <span> is the number </span>\n      </div>\n      <div>\n        <select defaultValue={option} onChange={onSelectChange} className=\"select-theme\">\n          <option value=\"inc\">increased</option>\n          <option value=\"dec\">decreased</option>\n        </select>\n        <span> by </span>\n      </div>\n      <input type=\"number\" value={percentage} onChange={onPercentageChange} className=\"numberInput numberInput__narrow\" />\n      <span>% when the result is </span>\n      <input type=\"number\" value={number} onChange={onNumberChange} className=\"numberInput numberInput__narrow\" />\n    </div>\n  );\n};\n\nexport default ReverseIncDecPercentage;\n","import React from 'react';\nimport CurrencyConverter from 'components/Popup/Calculator/CurrencyConverter';\nimport SimplePercentage from 'components/Popup/Calculator/SimplePercentage';\nimport ReversePercentage from 'components/Popup/Calculator/ReversePercentage';\nimport ReverseIncDecPercentage from 'components/Popup/Calculator/ReverseIncDecPercentage';\n\nconst Calculator = () => {\n  return (\n    <>\n      <CurrencyConverter />\n      <h5>Calculator</h5>\n      <SimplePercentage />\n      <ReversePercentage />\n      <ReverseIncDecPercentage />\n    </>\n  );\n};\n\nexport default Calculator;\n","import React, { useEffect, useState } from 'react';\n\nimport NewTabLink from 'components/NewTabLink/NewTabLink';\n\nconst LogoAndLinks = () => {\n  const [links, setLinks] = useState([]);\n\n  useEffect(() => {\n    chrome.storage.local.get(['popupLinks'],\n      ({ popupLinks }) => {\n        const navLinks = popupLinks.map((link) => {\n          if (link.active) {\n            return (\n              <div key={link.id}>\n                <NewTabLink to={link.url}>{link.name}</NewTabLink>\n              </div>\n            );\n          }\n          return null;\n        });\n        setLinks(navLinks);\n      });\n  }, []);\n\n  return (\n    <>\n      <NewTabLink to=\"https://cs2trader.app\" key=\"home\">\n        <img src=\"/images/cstlogo48.png\" alt=\"CS2 Trader Logo\" />\n        <h5>\n          <span className=\"orange\">CS2 Trader </span>\n          <span>\n            {chrome.runtime.getManifest().version}\n          </span>\n        </h5>\n      </NewTabLink>\n      {\n        links\n      }\n    </>\n  );\n};\n\nexport default LogoAndLinks;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalculator, faCog } from '@fortawesome/free-solid-svg-icons';\n\nimport NewTabLink from 'components/NewTabLink/NewTabLink';\nimport Calculator from 'components/Popup/Calculator/Calculator';\nimport CustomA11yButton from 'components/CustomA11yButton/CustomA11yButton';\nimport LogoAndLinks from 'components/Popup/LogoAndLinks/LogoAndLinks';\n\nconst Popup = () => {\n  // if there is any badge text it gets removed\n  chrome.runtime.sendMessage({ badgetext: '' }, () => { });\n  const [showCalc, doShowCalc] = useState(false);\n\n  return (\n    <div className=\"popup\">\n      {showCalc ? <Calculator /> : <LogoAndLinks />}\n      <div className=\"bottomRow\">\n        <CustomA11yButton\n          action={() => { doShowCalc(!showCalc); }}\n          className=\"action\"\n          title=\"Calculator\"\n        >\n          <FontAwesomeIcon icon={faCalculator} />\n        </CustomA11yButton>\n        <span className=\"action\">\n          <NewTabLink to=\"index.html\">\n            <FontAwesomeIcon icon={faCog} title=\"Open Options\" />\n          </NewTabLink>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n"],"names":["CurrencySelect","id","selected","setSelected","useEffect","chrome","storage","local","get","result","React","className","value","onChange","e","targetValue","target","transformCurrencies","transformedCurrencies","currency","Object","values","currencies","push","key","short","text","map","option","CurrencyConverter","currency1","setCurrency1","useState","currency2","setCurrency2","inputNumber","setInputNumber","setResult","convert","input","exchangeRates","convertedValue","parseFloat","toFixed","calculatorConversionPlaceholder","sign","type","change","newInputNumber","prettyPrintPrice","SimplePercentage","percentage","setPercentage","number","setNumber","calculatorPercentageOf","calculatorPercentagePercentage","title","event","ReversePercentage","calculatorReverseValue","calculatorReversePercentage","ReverseIncDecPercentage","setOption","calculatorIncDecPercentage","calculatorIncDecResult","defaultValue","Calculator","LogoAndLinks","links","setLinks","popupLinks","navLinks","link","active","NewTabLink","to","url","name","src","alt","runtime","getManifest","version","Popup","sendMessage","badgetext","showCalc","doShowCalc","CustomA11yButton","action","FontAwesomeIcon","icon","faCalculator","faCog"],"sourceRoot":""}