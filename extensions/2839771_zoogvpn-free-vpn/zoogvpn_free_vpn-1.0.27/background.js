(()=>{"use strict";var e;!function(e){e[e.React=0]="React",e[e.Content=1]="Content",e[e.Offscreen=2]="Offscreen",e[e.Background=3]="Background"}(e||(e={}));var t=function(e,t,r,o){return new(r||(r=Promise))((function(s,n){function i(e){try{a(o.next(e))}catch(e){n(e)}}function c(e){try{a(o.throw(e))}catch(e){n(e)}}function a(e){var t;e.done?s(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,c)}a((o=o.apply(e,t||[])).next())}))};const r=class{constructor(){}openDB(){return new Promise(((e,t)=>{this.openRequest&&this.db?e(!0):(this.openRequest=indexedDB.open("vpnExtension",1),this.openRequest.onupgradeneeded=()=>{this.db=this.openRequest.result,this.db.objectStoreNames.contains("exclusionLinks")||this.db.createObjectStore("exclusionLinks",{keyPath:"link"})},this.openRequest.onerror=()=>{console.error("Error",this.openRequest.error),t(!1)},this.openRequest.onsuccess=()=>{this.db=this.openRequest.result,this.db.onversionchange=()=>{this.db.close()},e(!0)})}))}getData(e){return new Promise(((r,o)=>t(this,void 0,void 0,(function*(){yield this.openDB();let t=this.db.transaction(e,"readonly").objectStore(e).getAll();t.onsuccess=()=>{r(t.result)},t.onerror=()=>{o([])}}))))}setData(e,r){return new Promise(((o,s)=>t(this,void 0,void 0,(function*(){yield this.openDB();let t=this.db.transaction(e,"readwrite").objectStore(e);if(t)if(Array.isArray(r)){r.forEach((e=>{t.add(e)}));let s=t.getAll();s.onsuccess=()=>{localStorage.setItem(e,JSON.stringify(s.result))},o(r)}else{let n=t.put(r);n.onsuccess=()=>{let s=t.getAll();s.onsuccess=()=>{localStorage.setItem(e,JSON.stringify(s.result))},o(r)},n.onerror=()=>{s(n)}}}))))}removeSite(e,r){return new Promise(((o,s)=>t(this,void 0,void 0,(function*(){yield this.openDB();let t=this.db.transaction(e,"readwrite").objectStore(e);if(t){let e=t.delete(r);e.onsuccess=()=>{o(e.result)},e.onerror=()=>{s(e)}}}))))}};var o=function(e,t,r,o){return new(r||(r=Promise))((function(s,n){function i(e){try{a(o.next(e))}catch(e){n(e)}}function c(e){try{a(o.throw(e))}catch(e){n(e)}}function a(e){var t;e.done?s(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,c)}a((o=o.apply(e,t||[])).next())}))};const s={},n=e=>({authCredentials:{username:s.username,password:s.password}}),i=(e,t)=>{browser.webRequest.onAuthRequired.hasListener(n)&&browser.webRequest.onAuthRequired.removeListener(n),browser.webRequest.onAuthRequired.addListener(n,{urls:["<all_urls>"]},["blocking"])};let c={proxyConfig:{},bypassList:[]};const a=e=>{const t=c.bypassList.map((e=>e.link));let r=e.documentUrl,o=e.url;return r&&(r=r.split("/")[2]),o=o.split("/")[2],t.includes(r||o)?{proxyConfig:{type:"direct"},bypassList:[]}:c.proxyConfig},u=e=>{const{bypassList:t,host:r,port:o,scheme:s,inverted:n,credentials:i,defaultExclusions:c,nonRoutableCidrNets:a}=e;return{inverted:n,bypassList:t,proxyConfig:{type:s,host:r,port:o},credentials:i,defaultExclusions:c}};browser.storage.local.get("vpnStatus").then((e=>{"connected"===e&&browser.storage.local.get(["lg","ps"]).then((e=>{if(e.lg){s.username=e.lg;try{s.password=function(e){let t=null===(r=e.match(/.{1,2}/g))||void 0===r?void 0:r.reduce(((e,t)=>e+String.fromCharCode(parseInt(t,16))),"");var r;return t=function(e,t){let r="",o=0;for(let t=0;t<e.length;t++){let s=e.charAt(t),n=s.charCodeAt(0)^"QK:w;_`2[u.F!*Gq".charCodeAt(o);s=String.fromCharCode(n),r+=s,15===o?o=0:o++}return r}(t),t=function(e){String.prototype.replaceAt=function(e,t){return this.substring(0,e)+t+this.substring(e+t.length)};const t=e.length/4;for(let r=1;r<t;r+=2)for(let o=0;o<2;o++){let s=o*t+r,n=t*(3-o)+r,i=e[s];e=(e=e.replaceAt(s,e[n])).replaceAt(n,i)}return e}(t),JSON.parse(t.replaceAll("","").replaceAll("",""))}(e.ps)}catch(t){s.password=e.ps}const t=browser.storage.local.get("serverConnected");(new r).getData("exclusionLinks").then((e=>{c=u({scheme:"http",host:t.domain,port:t.extPTX,ip:t.ipv4,bypassList:e}),browser.proxy.onRequest.addListener(a,{urls:["<all_urls>"]}),i(),browser.tabs.query({active:!0,currentWindow:!0},(function(e){const t=e[0];t&&browser.tabs.reload(t.id)}))}))}}))})),browser.runtime.onInstalled.addListener((e=>o(void 0,void 0,void 0,(function*(){"install"===e.reason?(yield browser.tabs.create({url:"https://zoogvpn.com/thank-you-for-downloading-extension/"}),yield browser.browserAction.setBadgeBackgroundColor({color:"#8DC700"})):e.reason})))),browser.runtime.onMessage.addListener(((t,o,n)=>{if(t.to===e.Background&&t.from===e.React)switch(t.type){case"connect_to_server":(new r).getData("exclusionLinks").then((e=>{s.username=t.data.username,s.password=t.data.password,s.ip=t.server.ipv4,l({scheme:"http",host:t.server.domain,port:t.server.extPTX,ip:t.server.ipv4,bypassList:e})}));break;case"disconnect_from_server":d(),browser.runtime.sendMessage({from:e.Background,to:e.React,type:"disconnect_from_server_success"});break;case"check_vpn_connection":return browser.storage.local.get("serverConnected").then((e=>{if(browser.proxy.onRequest.hasListener(a))return{scheme:"http",host:e.serverConnected.domain,port:e.serverConnected.extPTX}}))}}));const l=(t,r=!1)=>{c=u(t),browser.proxy.onRequest.hasListener(a)&&browser.proxy.onRequest.removeListener(a),browser.proxy.onRequest.addListener(a,{urls:["<all_urls>"]}),i(),fetch("https://r2-d2.zoogvpn.com/api/ip/extension/info",{credentials:"omit",method:"GET"}).then((e=>e.json())).then((s=>o(void 0,void 0,void 0,(function*(){let o="check_internet_error";t.ip===s.ipString&&(o="check_internet_success"),browser.browserAction.setIcon({path:"../../images/icons/19x19-green.png"});const n=yield browser.storage.local.get("serverConnected");if(yield browser.browserAction.setBadgeText({text:n.serverConnected.locationCode}),!r){const t={from:e.Background,to:e.React,type:o,data:s.ipString};yield browser.runtime.sendMessage(Object.assign({},t))}console.log("NOW IS OK :)")})))).catch((t=>o(void 0,void 0,void 0,(function*(){console.error("my error 1",t),d();const r={from:e.Background,to:e.React,type:"check_internet_error",data:500};return yield browser.runtime.sendMessage(Object.assign({},r)),500}))))},d=()=>{c={proxyConfig:{type:"direct"},bypassList:[]},browser.proxy.onRequest.removeListener(a),browser.browserAction.setIcon({path:"../../images/icons/19x19-grey.png"}),browser.browserAction.setBadgeText({text:""}),p()},p=()=>{browser.webRequest.onAuthRequired.removeListener(n)}})();