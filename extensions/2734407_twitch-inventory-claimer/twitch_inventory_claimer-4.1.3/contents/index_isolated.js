(()=>{"use strict";let e,n,t;function a(e){if(!Array.isArray(e))return!0;for(const n of e)if(n&&n.errors&&Array.isArray(n.errors)&&n.errors.length>0)return console.group(`%c TIC ERROR => ${n.extensions.operationName}`,"color: yellow; background: red;"),console.error(n.errors[0].message),console.error(n),console.groupEnd(),!0;return!1}async function i(t){if(!e||!n)return null;{const e={method:"POST",body:JSON.stringify([t]),headers:n};try{const n=await fetch("https://gql.twitch.tv/gql#origin=twilight",e);return await n.json()}catch(e){return null}}}async function o(e,n){let o={id:"",channel_id:""};if(!0===e){if(!n.data.community.channel.self.communityPoints.availableClaim)return;o.id=n.data.community.channel.self.communityPoints.availableClaim.id,o.channel_id=n.data.community.channel.id}else o=n;const r={operationName:"ClaimCommunityPoints",variables:{input:{channelID:o.channel_id,claimID:o.id}},extensions:{persistedQuery:{version:1,sha256Hash:"46aaeebe02c99afdf4fc97c7c0cba964124bf6b0af229395f1f6d1feed05b3d0"}}};if(!t.claimer.points)return;const s=await i(r);if(!a(s))try{const e=await i({query:"\n                            query CommunityPointsAvailableClaim($channelID: ID!) {\n                              community: user(id: $channelID) {\n                                id\n                                login\n                                profileImageURL(width: 70)\n                                __typename\n                              }\n                            }\n                        ",variables:{channelID:o.channel_id}}),n=e[0].data.community.login,t=e[0].data.community.profileImageURL,a=s[0].data.claimCommunityPoints.claim;if(!a)return;const r=(await chrome.storage.local.get("channelPoints")).channelPoints??{};let d=r[o.channel_id];d?(d.channelPointsClaimed+=a.pointsEarnedTotal,d.profileImageURL=t,d.timestamp=Date.now(),d.channelName=n):d={channelPointsClaimed:a.pointsEarnedTotal,profileImageURL:t,timestamp:Date.now(),channelName:n},d&&(r[o.channel_id]=d),await chrome.storage.local.set({channelPoints:r})}catch(e){console.error(e)}}async function r(){const e=await i({query:"query Inventory($fetchRewardCampaigns: Boolean = true) {\n                  currentUser {\n                    id\n                    inventory {\n                      dropCampaignsInProgress {\n                        ...campaignInProgress\n                        __typename\n                      }\n                      gameEventDrops {\n                        ...inventoryUserDropReward\n                        __typename\n                      }\n                      completedRewardCampaigns @include(if: $fetchRewardCampaigns) {\n                        ...rewardCampaign\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                }\n                \n                fragment campaignInProgress on DropCampaign {\n                  id\n                  detailsURL\n                  accountLinkURL\n                  startAt\n                  endAt\n                  imageURL\n                  name\n                  status\n                  self {\n                    isAccountConnected\n                    __typename\n                  }\n                  game {\n                    id\n                    slug\n                    name\n                    boxArtURL(width: 285, height: 380)\n                    __typename\n                  }\n                  allow {\n                    channels {\n                      id\n                      name\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  eventBasedDrops {\n                    id\n                    name\n                    startAt\n                    endAt\n                    benefitEdges {\n                      benefit {\n                        id\n                        imageAssetURL\n                        name\n                        __typename\n                      }\n                      entitlementLimit\n                      __typename\n                    }\n                    campaign {\n                      id\n                      detailsURL\n                      self {\n                        isAccountConnected\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  timeBasedDrops {\n                    id\n                    name\n                    startAt\n                    endAt\n                    preconditionDrops {\n                      id\n                      __typename\n                    }\n                    requiredMinutesWatched\n                    requiredSubs\n                    benefitEdges {\n                      benefit {\n                        id\n                        imageAssetURL\n                        name\n                        __typename\n                      }\n                      entitlementLimit\n                      claimCount\n                      __typename\n                    }\n                    self {\n                      hasPreconditionsMet\n                      currentMinutesWatched\n                      currentSubs\n                      isClaimed\n                      dropInstanceID\n                      __typename\n                    }\n                    campaign {\n                      id\n                      detailsURL\n                      accountLinkURL\n                      self {\n                        isAccountConnected\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                \n                fragment inventoryUserDropReward on UserDropReward {\n                  game {\n                    id\n                    name\n                    slug\n                    __typename\n                  }\n                  id\n                  imageURL\n                  isConnected\n                  lastAwardedAt\n                  name\n                  requiredAccountLink\n                  totalCount\n                  __typename\n                }\n                \n                fragment rewardCampaign on RewardCampaign {\n                  id\n                  name\n                  brand\n                  startsAt\n                  endsAt\n                  status\n                  summary\n                  instructions\n                  externalURL\n                  rewardValueURLParam\n                  aboutURL\n                  isSitewide\n                  game {\n                    id\n                    slug\n                    displayName\n                    __typename\n                  }\n                  unlockRequirements {\n                    subsGoal\n                    minuteWatchedGoal\n                    __typename\n                  }\n                  image {\n                    image1xURL\n                    __typename\n                  }\n                  rewards {\n                    id\n                    name\n                    bannerImage {\n                      image1xURL\n                      __typename\n                    }\n                    thumbnailImage {\n                      image1xURL\n                      __typename\n                    }\n                    earnableUntil\n                    redemptionInstructions\n                    redemptionURL\n                    __typename\n                  }\n                  __typename\n                }"});a(e)||async function(e){const n=e[0],o=[],r=[];if(n&&n.data?.currentUser?.inventory?.dropCampaignsInProgress&&n.data.currentUser.inventory.dropCampaignsInProgress.filter((e=>!function(e){return new Date>new Date(e.endAt)}(e))).forEach((e=>{const t={boxArtUrl:e.game.boxArtURL,gameName:e.game.name,campaignName:e.name,availableChannels:e.allow.channels?.map((e=>e.name))??["allIGuess"],drops:[]};e.timeBasedDrops.forEach((a=>{const i=[];a.benefitEdges.forEach((e=>{i.push({id:e.benefit.id,name:e.benefit.name,image:e.benefit.imageAssetURL,imageAssetURL:e.benefit.imageAssetURL})})),new Date(a.endAt)>new Date&&n&&t.drops.push({userId:n.data.currentUser.id??"",campaignId:e.id,claimed:a.self.isClaimed,id:a.id,readyToClaim:a.self.currentMinutesWatched>=a.requiredMinutesWatched,name:a.name,benefits:i,currMin:a.self.currentMinutesWatched,targetTime:a.requiredMinutesWatched,lastRefreshed:Date.now()})})),t.drops.length>0&&o.push(t)})),o.forEach((e=>{e.drops.forEach((e=>{e.readyToClaim&&!e.claimed&&(e.dropInstanceId=`${e.userId}#${e.campaignId}#${e.id}`,r.push(e))}))})),t.claimer.drops)for(const e of r)a(await i({operationName:"DropsPage_ClaimDropRewards",variables:{input:{dropInstanceID:e.dropInstanceId}},extensions:{persistedQuery:{sha256Hash:"a455deea71bdc9015b78eb49f4acfbce8baa7ccbedd28e549bb025bd0f751930",version:1}}}))||(chrome.storage.local.get("claimedCount").then((async e=>{e.claimedCount?(e.claimedCount+=1,await chrome.storage.local.set(e)):await chrome.storage.local.set({claimedCount:1})})).catch((e=>{console.log("[TIC] ",e)})),t.dropClaimedNotification&&chrome.runtime.sendMessage({action:"notify",data:{type:"basic",iconUrl:chrome.runtime.getURL("icons/icon-48x48.png"),title:"Twitch drop claimed",message:"TIC has successfully claimed a drop."}}));await chrome.storage.local.set({activeDrops:o})}(e)}!async function(){const e=await chrome.storage.local.get("ticSettings");t=e.ticSettings,chrome.storage.onChanged.addListener((function(e,n){if("local"===n)for(let n in e)if("ticSettings"===n){const a=e[n];a?.newValue&&(t=a.newValue)}})),y(3e4)}(),window.addEventListener("message",(async s=>{if(s.source===window&&"TIC_M2I_WP"===s.data.type){const e=s.data.payload;if("MESSAGE"===e.type)if(e.data.topic.match(/^community-points-user-v1/)){const n=JSON.parse(e.data.message);"claim-available"===n.type&&n.data?.claim&&await o(!1,{id:n.data.claim.id,channel_id:n.data.claim.channel_id})}else if(e.data.topic.match(/^onsite-notifications/))"user_drop_reward_reminder_notification"===JSON.parse(e.data.message).type&&r();else if(e.data.topic.match(/^video-playback-by-id\./)&&"stream-down"===JSON.parse(e.data.message).type){const n=await i({query:"\n                            query CommunityPointsAvailableClaim($channelID: ID!) {\n                              community: user(id: $channelID) {\n                                id\n                                login\n                                profileImageURL(width: 70)\n                                __typename\n                              }\n                            }\n                        ",variables:{channelID:e.data.topic.split(".")[1]}});a(n)||t.offlineNotifications&&chrome.runtime.sendMessage({action:"notify",data:{type:"basic",iconUrl:n[0].data.community.profileImageURL,title:"Stream offline",message:`Streamer "${n[0].data.community.login} went offline"`}})}}if(s.source===window&&"TIC_M2I_FP_INTEGRITY"===s.data.type&&function(t){const a=t.data.payload.requestMeta[1].headers,i=t.data.payload.data;""!==a["Client-Id"]&&""!==a["Client-Version"]&&""!==a["Client-Session-Id"]&&""!==a["X-Device-Id"]&&(n=a,e=i,n["Client-Integrity"]=e.token),delete n["x-kpsdk-v"],delete n["x-kpsdk-ct"],delete n["x-kpsdk-cd"],delete n["Client-Request-Id"]}(s),s.source===window&&"TIC_M2I_FP"===s.data.type){const e=s.data.payload;if(!a(e))for(const n of e)"ChannelPointsContext"===n.extensions.operationName&&await o(!0,n)}}));let s,d=null,c=null;const l=(new Date).getTime(),m={videoElement:null,playerActive:!1,playerFit:!1,pageUrl:location.href,integrityFailed:0},u=JSON.parse(JSON.stringify(m)),p=JSON.parse(JSON.stringify({playbackFailedTimes:0,fetchFailedTimes:0,beforeCheckTime:1/0}));function y(e){const n=(new Date).getTime()-p.beforeCheckTime;if(e)return function(){const e=document.querySelector('.persistent-player:not(.persistent-player__border--mini) .video-player__overlay, div[data-a-target="embed-video-container"] .video-player__overlay');if(!e)return f();e!==d&&(f(),d=e,c=new MutationObserver((n=>{n.forEach((n=>{const a=n.addedNodes&&n.addedNodes[0]&&e.querySelector('.persistent-player:not(.persistent-player__border--mini) .content-overlay-gate__content button, div[data-a-target="embed-video-container"] .content-overlay-gate__content button');a&&t.autoReloadPlayer&&(p.playbackFailedTimes=0,p.fetchFailedTimes=0,a.click())}))})),c.observe(e,{childList:!0}))}(),p.beforeCheckTime=(new Date).getTime(),clearTimeout(s),void(s=setTimeout(y,e));const a=document.querySelector('.persistent-player:not(.persistent-player__border--mini) .video-player__container video, div[data-a-target="embed-video-container"] .video-player__container video'),i=()=>{t.autoReloadPlayer&&l+3e5<(new Date).getTime()||y(1e4)};return clearTimeout(s),u.playerFit&&a&&t.autoReloadPlayer?p.fetchFailedTimes>=8?i():n>=12e4?document.hidden?i():y(1e4):!a.ended&&!a.paused&&![0,4].includes(a.readyState)||a.buffered.length>3||a.paused&&[2,3].includes(a.readyState)&&a.currentTime>10&&a.buffered.length>0?(p.playbackFailedTimes++,void(p.playbackFailedTimes>=6?i():y(4e3))):(p.playbackFailedTimes=0,void y(1e4)):(p.playbackFailedTimes=0,p.fetchFailedTimes=0,void y(1e4))}function f(){c&&(c.disconnect(),c=null),d=null}function g(){let e=200,n=null,a=null;const i="stream_previews",o="stream_previews_hidden",r=()=>{const e=document.querySelectorAll("a.side-nav-card, a.side-nav-card__link");for(const n of Array.from(e))n.removeEventListener("mouseenter",s),n.removeEventListener("mouseleave",d),n.addEventListener("mouseenter",s),n.addEventListener("mouseleave",d)},s=e=>{const n=e.target.closest("a.side-nav-card__link");n&&n.href&&(n.classList.contains("side-nav-card__link--offline"),a=n.href.split("/").pop(),a&&m())},d=()=>{c()},c=()=>{if(!n)return;const e=n.querySelector(".online-side-nav-channel-tooltip__body");if(!e)return;const t=e.querySelector(`.${i}`);t&&t.classList.add(o)},l=e=>{const n=a;if(n&&n===a){const t=`https://static-cdn.jtvnw.net/previews-ttv/live_user_${n}-440x248.jpg`;e.onerror=()=>{e.src=`https://static-cdn.jtvnw.net/previews-ttv/live_user_${n}-440x248.jpg`},e.onload=()=>{e.classList.remove(o)},e.src=t}},m=()=>{if(!n)return;let e=n.querySelector(".online-side-nav-channel-tooltip__body");if(!e||!t.navbarPreview)return;let a=e.querySelector(`.${i}`);a?l(a):(a=document.createElement("img"),a.classList.add(i),l(a),e.appendChild(a))},u=()=>{const t=document.querySelector("nav#side-nav");if(!t)return e--,void(e>0&&setTimeout(u,100));r(),new MutationObserver(r).observe(t,{childList:!0,subtree:!0}),new MutationObserver((e=>{for(const t of e)if(t.addedNodes&&t.addedNodes.length)for(const e of Array.from(t.addedNodes))if(e instanceof HTMLElement&&e.classList.contains("tw-dialog-layer"))return n=e,void m()})).observe(document.body,{childList:!0,subtree:!1})};u()}!function(){function e(){setTimeout(g,500)}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):e()}(),chrome.runtime.onMessage.addListener((e=>{"ticUpdated"===e.action&&window.location.reload()})),chrome.storage.onChanged.addListener(((e,n)=>{"local"===n&&e.triggerInventoryCheck&&e.triggerInventoryCheck.newValue&&"complete"===document.readyState&&chrome.runtime.sendMessage({action:"acquireInventoryLock"},(e=>{e&&e.lockAcquired&&(r(),chrome.runtime.sendMessage({action:"releaseInventoryLock"}))})),"local"===n&&e.ticUpdated&&e.ticUpdated.newValue&&"complete"===document.readyState&&location.reload()}))})();