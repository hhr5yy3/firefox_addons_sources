(()=>{"use strict";var e,t,n,r={2532:(e,t,n)=>{n(2648);var r=n(1577),o=(n(3958),n(7049)),i=(n(8533),n(892)),c=n(7294),s=n(3935),a=(n(1211),n(2214)),l=n(5893);function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function f(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?f(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):f(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t,n){var r;return r=function(e,t){if("object"!=u(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==u(r)?r:String(r))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const y=function(e){var t;return(0,l.jsx)(a.Z,d(d({},e),{},{footer:null,maskClosable:!1,wrapClassName:"sign-in",destroyOnClose:!0,centered:!0,children:(0,l.jsxs)("div",{className:"signin-alert-modal",children:[(0,l.jsx)("div",{className:"tip",children:(t=e.type,"aws"===t?"You need to sign in to an Awesome Screenshot account in order to upload images.":"drive"===t?"You need to sign in to an Awesome Screenshot account in order to connect with cloud services.":"des"===t?"You need to sign in to an Awesome Screenshot account in order to connect with other services.":"")}),(0,l.jsx)(r.Z,{type:"primary",size:"large",block:!0,onClick:function(){window.open("https://www.awesomescreenshot.com/signin")},children:"Sign In"})]})}))};n(1795);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,m(r.key),r)}}function m(e){var t=function(e,t){if("object"!=b(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=b(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==b(t)?t:String(t)}function v(e,t){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},v(e,t)}function g(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=w(e);if(t){var o=w(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return function(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return j(e)}(this,n)}}function j(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var O=i.Z.Title,S=i.Z.Paragraph,x=(i.Z.Text,function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(s,e);var t,n,i,c=g(s);function s(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(t=c.call(this,e)).confirmSignin=function(){t.setIsShownSignIn(!0)},t.confirmNo=function(){window.close()},t.state={isShownSignin:!1},t.setIsShownSignIn=t.setIsShownSignIn.bind(j(t)),t.confirmSignin=t.confirmSignin.bind(j(t)),t.confirmNo=t.confirmNo.bind(j(t)),t.handleModalCancel=t.handleModalCancel.bind(j(t)),t}return t=s,(n=[{key:"handleModalCancel",value:function(){this.setIsShownSignIn(!1)}},{key:"setIsShownSignIn",value:function(e){this.setState({isShownSignin:e})}},{key:"render",value:function(){return(0,l.jsxs)("div",{className:"main",children:[(0,l.jsxs)("div",{className:"privacy-container",children:[(0,l.jsx)("div",{className:"top",children:(0,l.jsx)("div",{className:"logo",children:(0,l.jsx)("a",{href:"https://www.awesomescreenshot.com"})})}),(0,l.jsx)(O,{className:"title",children:"We use cookies to enhance your experience by remembering your account status."}),(0,l.jsxs)("div",{className:"content",children:[(0,l.jsx)(S,{children:"With a signed-in account, you can access more features and services, including but not limited to:"}),(0,l.jsx)(S,{children:(0,l.jsxs)("ul",{children:[(0,l.jsxs)("li",{children:["Store and manage your screenshots and recordings on"," ",(0,l.jsx)("a",{href:"https://www.awesomescreenshot.com",children:"awesomescreenshot.com"})]}),(0,l.jsx)("li",{children:"Access your saved images and videos across devices, anytime"}),(0,l.jsx)("li",{children:"Share images or videos to Trello, Slack, Asana, Github etc. easily"})]})}),(0,l.jsx)(o.Z,{}),(0,l.jsx)(S,{children:"By continuing, you agree to our use of cookies."})]}),(0,l.jsxs)("div",{className:"box",children:[(0,l.jsx)(r.Z,{className:"action-btn",onClick:this.confirmNo,children:"Refuse cookies & Close tab"}),(0,l.jsx)(r.Z,{type:"primary",className:"action-btn",onClick:this.confirmSignin,children:"Accept & Sign in"})]})]}),(0,l.jsx)(y,{visible:this.state.isShownSignin,onCancel:this.handleModalCancel.bind(null,"Signin"),type:""})]})}}])&&h(t.prototype,n),i&&h(t,i),Object.defineProperty(t,"prototype",{writable:!1}),s}(c.Component));s.render((0,l.jsx)(x,{}),document.getElementById("privacy-page"))}},o={};function i(e){var t=o[e];if(void 0!==t)return t.exports;var n=o[e]={id:e,loaded:!1,exports:{}};return r[e].call(n.exports,n,n.exports,i),n.loaded=!0,n.exports}i.m=r,e=[],i.O=(t,n,r,o)=>{if(!n){var c=1/0;for(u=0;u<e.length;u++){for(var[n,r,o]=e[u],s=!0,a=0;a<n.length;a++)(!1&o||c>=o)&&Object.keys(i.O).every((e=>i.O[e](n[a])))?n.splice(a--,1):(s=!1,o<c&&(c=o));if(s){e.splice(u--,1);var l=r();void 0!==l&&(t=l)}}return t}o=o||0;for(var u=e.length;u>0&&e[u-1][2]>o;u--)e[u]=e[u-1];e[u]=[n,r,o]},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},n=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(e,r){if(1&r&&(e=this(e)),8&r)return e;if("object"==typeof e&&e){if(4&r&&e.__esModule)return e;if(16&r&&"function"==typeof e.then)return e}var o=Object.create(null);i.r(o);var c={};t=t||[null,n({}),n([]),n(n)];for(var s=2&r&&e;"object"==typeof s&&!~t.indexOf(s);s=n(s))Object.getOwnPropertyNames(s).forEach((t=>c[t]=()=>e[t]));return c.default=()=>e,i.d(o,c),o},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={296:0};i.O.j=t=>0===e[t];var t=(t,n)=>{var r,o,[c,s,a]=n,l=0;if(c.some((t=>0!==e[t]))){for(r in s)i.o(s,r)&&(i.m[r]=s[r]);if(a)var u=a(i)}for(t&&t(n);l<c.length;l++)o=c[l],i.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return i.O(u)},n=self.webpackChunkAwesomeScreenshot=self.webpackChunkAwesomeScreenshot||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),i.O(void 0,[700,769,69,932],(()=>i(2082)));var c=i.O(void 0,[700,769,69,932],(()=>i(2532)));c=i.O(c)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,