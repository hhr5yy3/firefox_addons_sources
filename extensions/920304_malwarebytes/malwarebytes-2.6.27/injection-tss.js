(()=>{"use strict";((e,t,o)=>{console.debug(`${o} TSS: hosted page injected`),console.debug(`${o} MBTSS: Nonce: `,e);let n=!1,r=!1,i={},c={},s={},u={};function a({object:t,f:o,subtype:i,detectFunc:c,proxy:s=d,isBrowserlocker:u=!0}){let a=t[o];t[o]=function(){if(n&&!r&&u)throw new Error("Breaking Browser Locker Behavior detected");let t=[].slice.call(arguments);if(!r&&c(t)&&(n=!0),n&&!r&&function(t,o){window.top.postMessage(JSON.parse(JSON.stringify({type:"scam",subtype:t,parameters:o,nonce:e})),"*")}(i,t),n&&!r&&u)throw new Error("Breaking Browser Locker Behavior detected");return s(a,this,t)}}function d(e,t,o){return e.apply(t,o)}function l(e,o,n){return t(e,o,n)}function w(e){return console.debug("TSS: Counted history being replaced"),f()}function f(e){return console.debug("TSS: Caught history"),l(i,1e3,500)}a({object:window,f:"print",subtype:"printLoop",detectFunc:function(e){return console.debug("TSS: caught print"),l(c,1e4,3)}}),a({object:window.history,f:"pushState",subtype:"historyLoop",detectFunc:function(e){return console.debug("TSS: Counted history being pushed"),f()}}),window.setTimeout((function(){a({object:window.history,f:"replaceState",subtype:"historyLoop",detectFunc:w})}),2e3),a({object:URL,f:"createObjectURL",subtype:"createURLLoop",detectFunc:function(e){return console.debug("TSS: Caught create URL"),l(s,1e3,500)}}),window.chrome&&window.chrome.webstore&&a({object:chrome.webstore,f:"install",subtype:"extensionInstall",detectFunc:function(e){return console.debug("TSS: Caught webstore install"),!0},isBrowserlocker:!1}),window.Notification&&a({object:window.Notification,f:"requestPermission",subtype:"notificationLoop",detectFunc:function(e){return console.debug("TSS: Caught notification permission request"),l(u,5e3,2)},isBrowserlocker:!1}),window.addEventListener("message",(function(t){t.source===window&&t.data.nonce===e&&"exclude"===t.data.type&&(r=!0)}),!1)})(new URLSearchParams(document.currentScript.src.split("?")[1]).get("nonce"),((e,t,o)=>{console.debug(`TSS: Checking if repeated ${o} times for interval ${t} against data: `,e);const n=Date.now();if(e.lastTime)if(n-e.lastTime<t){if(e.lastCount++,e.lastCount>=o)return!0}else e.lastTime=n,e.lastCount=1;else{if(1===o)return e.lastTime=n,e.lastCount=1,!0;e.lastTime=n,e.lastCount=1}return!1}),"injection-tss")})();