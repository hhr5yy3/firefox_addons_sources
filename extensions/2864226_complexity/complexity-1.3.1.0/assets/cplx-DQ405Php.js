import{$ as c}from"./cplx-BbAh7E-i.js";import{l as u,s as w}from"./cplx-Cdcyb6EG.js";import{t as k}from"./cplx-CZMWhpfy.js";import{o}from"./cplx-DNOGgzzX.js";import"./cplx-CzQHx1MX.js";import"./cplx-wwbq-DDb.js";import"./cplx-B814hFp-.js";function f(){o("markmapRenderer:isInitialized",()=>{var a;return((a=e.getInstance())==null?void 0:a.isInitialized())??!1}),o("markmapRenderer:render",({data:{content:a,selector:t}})=>e.getInstance().handleRenderRequest({content:a,selector:t})),o("markmapRenderer:openAsInteractiveHtml",({data:{content:a}})=>e.openAsInteractiveHtml({content:a})),o("markmapRenderer:downloadAsInteractiveHtml",({data:{content:a,title:t}})=>e.downloadAsInteractiveHtml({content:a,title:t}))}class e{static instance=null;importPromise=null;constructor(){}currentMarkmapSvgNode=null;currentMarkmapInstance=null;static getInstance(){return e.instance||(e.instance=new e),e.instance}initialize(){f(),c(()=>this.importMarkmap())}async importMarkmap(){if(!this.importPromise){const t=`
        import * as markmapLib from "https://cdn.jsdelivr.net/npm/markmap-lib/+esm";
        import * as markmapView from "https://cdn.jsdelivr.net/npm/markmap-view/+esm";
        import * as markmapRender from "https://cdn.jsdelivr.net/npm/markmap-render/+esm";

        window.markmapLib = markmapLib;
        window.markmapView = markmapView;
        window.markmapRender = markmapRender;

        const transformer = new markmapLib.Transformer();
        window.markmapTransformer = transformer;
        const { scripts, styles } = transformer.getAssets();
        markmapView.loadCSS(styles);
        markmapView.loadJS(scripts, { getMarkmap: () => markmapView });
      `;this.importPromise=u({scriptContent:t,waitForExecution:!0}).catch(r=>{throw console.error("Failed to import Markmap:",r),r})}return this.importPromise}isInitialized(){var t;return(t=this.importPromise)==null?void 0:t.then(()=>!0).catch(()=>!1)}handleRenderRequest=k(async({content:t,selector:r})=>{var n,m;if(c(r).length===0)return console.warn("No elements found for rendering Markmap canvas"),{success:!1,error:"No elements found for rendering Markmap canvas"};try{await e.waitForInitialization();const s=window.markmapTransformer,{root:l}=s.transform(t);if(document.body.contains(this.currentMarkmapSvgNode))(n=this.currentMarkmapInstance)==null||n.setData(l),(m=this.currentMarkmapInstance)==null||m.fit();else{const p=c(r);this.currentMarkmapSvgNode=p[0];const{Markmap:d}=window.markmapView;this.currentMarkmapInstance=d.create(r,{duration:50,autoFit:!0},l)}return{success:!0}}catch(s){return{success:!1,error:s.str}}},500,{leading:!0,trailing:!0});static getInteractiveHtml({content:t}){const r=window.markmapRender.fillTemplate,{root:i,features:n}=window.markmapTransformer.transform(t),m=window.markmapTransformer.getUsedAssets(n);return r(i,m)}static openAsInteractiveHtml({content:t}){const r=e.getInteractiveHtml({content:t}),i=new Blob([r],{type:"text/html"}),n=URL.createObjectURL(i);window.open(n,"_blank")}static downloadAsInteractiveHtml({content:t,title:r}){const i=e.getInteractiveHtml({content:t}),n=new Blob([i],{type:"text/html"}),m=URL.createObjectURL(n),s=document.createElement("a");s.href=m,s.download=`${r}.html`,s.click()}static async waitForInitialization(){for(;!e.getInstance().isInitialized();)await w(100)}}e.getInstance().initialize();export{e as MarkmapRenderer};
