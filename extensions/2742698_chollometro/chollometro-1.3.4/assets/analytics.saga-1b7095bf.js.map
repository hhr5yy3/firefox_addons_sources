{"version":3,"file":"analytics.saga-1b7095bf.js","sources":["../../src/ui/features/app/redux/analytics/analytics.saga.ts"],"sourcesContent":["import { PayloadAction } from '@reduxjs/toolkit';\nimport { all, takeEvery } from 'redux-saga/effects';\nimport browser from '../../../../../background/browser/browser';\nimport { CLOSE_VIEW, OPEN_VIEW, View } from '../app/app.reducer';\n\nconst ns = 'analytics/';\n\nconst CLICK_DONE = `${ns}click_done`;\nconst OFFER_LINKED = `${ns}offer_linked`;\nconst VOUCHER_LINKED = `${ns}voucher_linked`;\nexport const M_ANALYTICS = 'background/analytics';\n\nexport function voucherLinked({ url }: { url: string }) {\n    return {\n        type: OFFER_LINKED,\n        payload: { id: 'voucher_linked', action: url },\n    };\n}\n\nexport function notificationLinked({ url }: { url: string }) {\n    return {\n        type: OFFER_LINKED,\n        payload: { id: 'notification_linked', action: url },\n    };\n}\n\nexport function offerLinked({ url }: { url: string }) {\n    return {\n        type: OFFER_LINKED,\n        payload: { id: 'offer_linked', action: url },\n    };\n}\n\nexport function clickDone(action: string) {\n    return {\n        type: CLICK_DONE,\n        payload: { id: 'click', action },\n    };\n}\n\nfunction sendScreenView(data: { view: View | null }) {\n    browser.runtime.sendMessage({\n        type: M_ANALYTICS,\n        payload: {\n            method: 'screenView',\n            data,\n        },\n    });\n}\n\nfunction sendEvent(data: { id: string; action: string }) {\n    browser.runtime.sendMessage({\n        type: M_ANALYTICS,\n        payload: {\n            method: 'event',\n            data: data,\n        },\n    });\n}\n\nexport function* analyticsSaga({ type, payload }: PayloadAction<unknown>) {\n    switch (type) {\n        case OFFER_LINKED:\n        case CLICK_DONE:\n        case VOUCHER_LINKED:\n            sendEvent(payload as any);\n            return;\n        case OPEN_VIEW:\n            sendScreenView({ view: payload as View | null });\n            return;\n        case SET_RENDER_STATUS:\n        case CLOSE_VIEW:\n            sendScreenView({ view: null });\n            return;\n    }\n}\n\nexport function* watchAnalyticsSaga() {\n    yield all([\n        takeEvery(OPEN_VIEW, analyticsSaga),\n        takeEvery(CLOSE_VIEW, analyticsSaga),\n        takeEvery(SET_RENDER_STATUS, analyticsSaga),\n        // ---- CUSTOM\n        takeEvery(CLICK_DONE, analyticsSaga),\n        takeEvery(OFFER_LINKED, analyticsSaga),\n        takeEvery(VOUCHER_LINKED, analyticsSaga),\n    ]);\n}\n"],"names":[],"mappings":";AAKA,MAAM,KAAK;AAGX,MAAM,eAAe,GAAG;AAEjB,MAAM,cAAc;AAEX,SAAA,cAAc,EAAE,OAAwB;AAC7C,SAAA;AAAA,IACH,MAAM;AAAA,IACN,SAAS,EAAE,IAAI,kBAAkB,QAAQ,IAAI;AAAA,EAAA;AAErD;AASgB,SAAA,YAAY,EAAE,OAAwB;AAC3C,SAAA;AAAA,IACH,MAAM;AAAA,IACN,SAAS,EAAE,IAAI,gBAAgB,QAAQ,IAAI;AAAA,EAAA;AAEnD;"}