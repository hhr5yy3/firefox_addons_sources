import"./chunk-1ebdbb1b.js";import{U as _,F as C,c as T}from"./chunk-4da8f9f7.js";import{l as m,a as y}from"./chunk-70aa1672.js";import{W as F,A as S,C as A,q as x}from"./chunk-e6f612bb.js";/* empty css              */async function B(l,s,a){a&&y.storage.sync.get({unblocked:{}}).then(o=>{o.unblocked[String(l)]=s,y.storage.sync.set(o)}),A().then(o=>new Promise((u,t)=>{const r=o.transaction([x],"readwrite");r.onabort=r.onerror=t,r.objectStore(x).delete(l),r.commit(),r.oncomplete=()=>u()})).catch(o=>{console.error(m,"could not remove user from queue:",o)})}function L(){F().then(l=>{const s=document.getElementById("block-queue");if(l.length===0){s.textContent="your block queue is empty";return}else if(l.length>=1e4){const a=document.getElementById("db-limit-reached");a.style.display="block"}s.innerText="",l.forEach(a=>{const{user:o,user_id:u}=a,t=document.createElement("div"),r=_(a.user.name,a.user.screen_name);t.appendChild(r);const c=document.createElement("button");c.onclick=()=>{t.removeChild(c),B(u,o.screen_name,!1).then(()=>{console.log(m,`removed ${C(o)} from queue`),s.removeChild(t)})},c.textContent="remove",t.appendChild(c);const i=document.createElement("button");i.onclick=()=>{t.removeChild(i),B(u,o.screen_name,!0).then(()=>{console.log(m,`removed and safelisted ${C(o)} from queue`),s.removeChild(t)})},i.textContent="never block",t.appendChild(i),s.appendChild(t)})})}L();document.addEventListener("DOMContentLoaded",()=>{const l=document.getElementById("import-button"),s=document.getElementById("import-arrow"),a=document.getElementById("importer");l.addEventListener("click",e=>{switch(s.innerText){case"\u25BE":a.style.display="block",s.innerText="\u25B4";break;case"\u25B4":a.style.display="",s.innerText="\u25BE";break}});const o="Click or Drag to Import File",u=document.getElementById("block-import"),t=document.getElementById("block-import-label"),r=t.firstElementChild;r.innerText=o;let c=null;function i(e){if(c&&clearTimeout(c),!(e!=null&&e.length))return;const d=new FileReader;let f=0,g=0,q=0;d.addEventListener("load",h=>{r.innerText="importing...";const w=h.target.result;y.storage.sync.get({unblocked:{}}).then(v=>v.unblocked).then(v=>new Promise(async p=>{var b,E;const I=JSON.parse(w);for(const n of I)try{if((n==null?void 0:n.user_id)===void 0||((b=n==null?void 0:n.user)==null?void 0:b.name)===void 0||((E=n==null?void 0:n.user)==null?void 0:E.screen_name)===void 0||(n==null?void 0:n.reason)===void 0)throw new Error("user object could not be processed:");if(v.hasOwnProperty(n.user_id)){q++;continue}await S(n),f++}catch(D){const k=D;console.error(m,k.message,n,k),g++;return}p()}).then(()=>{console.log(m,"successfully loaded",f,"users into queue. failures:",g),r.innerText=`loaded ${T(f)} users into queue (${T(g)} failures)`,L()}).catch(p=>{console.error(m,p),r.innerText=p.message}).finally(()=>{c=setTimeout(()=>{r.innerText="Click or Drag to Import File",c=null},1e4)}))});for(const h of e)d.readAsText(h)}u.addEventListener("input",e=>{const d=e.target;i(d.files)}),t.addEventListener("dragenter",e=>e.preventDefault()),t.addEventListener("dragover",e=>e.preventDefault()),t.addEventListener("drop",e=>{var d;e.preventDefault(),i((d=e==null?void 0:e.dataTransfer)==null?void 0:d.files)})});
