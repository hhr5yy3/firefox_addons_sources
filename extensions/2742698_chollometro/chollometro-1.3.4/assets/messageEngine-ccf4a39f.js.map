{"version":3,"file":"messageEngine-ccf4a39f.js","sources":["../../src/background/utils/messageEngine.ts"],"sourcesContent":["import { Action, PayloadAction } from '@reduxjs/toolkit';\nimport browser, { MessageSender } from '../browser/browser';\nimport { errorCapture } from './errorCapture';\nimport logger from './logger';\n\nexport function receiveMessages<T extends string, P extends object>(\n    type: T,\n    fn: (\n        sender: any,\n        payload: P,\n    ) => AsyncGenerator<Action | PayloadAction | void, Action | PayloadAction | void, undefined>,\n) {\n    receiveMessage(type, async (s, m) => {\n        for (\n            let it = fn(s, m), el = await it.next();\n            !el.done || el.value !== undefined;\n            el = await it.next()\n        ) {\n            if (el.value) sendMessage(s.tab.id, el.value);\n        }\n    });\n}\n\n// function* backgroundSaga(handlers: {\n//     [k: string]: <T>(message: PayloadAction<T>) => Generator<Action, Action, undefined>;\n// }) {\n//     const preparedHandlers = [];\n//     for (const key in handlers) {\n//         preparedHandlers.push(takeEvery(key, handlers[key]));\n//     }\n//     yield all(preparedHandlers);\n// }\n\ntype MessageHandler = {\n    [key: string]: any;\n};\nconst receiveMessageHandlers: MessageHandler = {};\n\n/**\n * Receive a FSA or any type message from content_script\n * @param {string} type\n * @param {function} fun\n */\nexport function receiveMessage(\n    type: string,\n    fn: (sender: MessageSender, payload: any) => Promise<void | PayloadAction | Action>,\n) {\n    receiveMessageHandlers[type] = fn;\n}\n\nexport function sendMessage<T extends object>(\n    tabId: number | undefined,\n    message: Action<string> | PayloadAction<T, string>,\n): void {\n    logger.debug(`Send [${tabId}${message ? `|${message.type}]` : ''}]`, {\n        payload: 'payload' in message ? message.payload : undefined,\n    });\n    if (tabId && tabId >= 0) {\n        browser.tabs.sendMessage(tabId, message);\n    } else {\n        browser.runtime.sendMessage(message);\n    }\n}\n\nbrowser.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    logger.debug(`Receive [${sender.tab?.id || 'NO_TAB'}${message ? `|${message.type}]` : ''}]`, {\n        payload: message && message.payload,\n    });\n\n    const senderOrigin = sender?.origin || (sender.url ? new URL(sender.url).origin : null);\n    // where does tis message come from ? tab, bg, or popup ?\n    // prevent jss scripting injection\n    // if (!sender.tab && senderOrigin !== location.origin) return;\n\n    sender.tab = sender?.tab || {\n        id: -1,\n        active: true,\n        attention: false,\n        audible: false,\n        autoDiscardable: false,\n        height: -1,\n        width: -1,\n        mutedInfo: {},\n        status: 'complete',\n        url: sender.origin,\n    };\n\n    if (message && typeof message.type === 'string') {\n        try {\n            const fn = receiveMessageHandlers[message.type];\n            if (!fn) return;\n\n            return fn(sender, message.payload, message)\n                .then((result: any) => {\n                    if (result && typeof result.type === 'string') {\n                        sendResponse(result);\n                        sendMessage(sender?.tab?.id, result);\n                    }\n                })\n                .catch((e: Error) => {\n                    errorCapture(e);\n                    logger.error(`receiveMessage<${message.type}> error: ${e.message}`);\n\n                    logger.error('Exception:', e);\n                });\n        } catch (e: any) {\n            errorCapture(e);\n            logger.error(`receiveMessage<${message.type}> error: ${e?.message}`);\n\n            logger.error('Exception:', e);\n        }\n    }\n});\n"],"names":[],"mappings":";AAKgB,SAAA,gBACZ,MACA,IAIF;AACiB,iBAAA,MAAM,OAAO,GAAG,MAAM;AAEzB,aAAA,KAAK,GAAG,GAAG,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,GACtC,CAAC,GAAG,QAAQ,GAAG,UAAU,QACzB,KAAK,MAAM,GAAG,QAChB;AACE,UAAI,GAAG;AAAO,oBAAY,EAAE,IAAI,IAAI,GAAG,KAAK;AAAA,IAChD;AAAA,EAAA,CACH;AACL;AAeA,MAAM,yBAAyC,CAAA;AAO/B,SAAA,eACZ,MACA,IACF;AACE,yBAAuB,IAAI,IAAI;AACnC;AAEgB,SAAA,YACZ,OACA,SACI;AACJ,SAAO,MAAM,SAAS,QAAQ,UAAU,IAAI,QAAQ,UAAU,OAAO;AAAA,IACjE,SAAS,aAAa,UAAU,QAAQ,UAAU;AAAA,EAAA,CACrD;AACG,MAAA,SAAS,SAAS,GAAG;AACb,YAAA,KAAK,YAAY,OAAO,OAAO;AAAA,EAAA,OACpC;AACK,YAAA,QAAQ,YAAY,OAAO;AAAA,EACvC;AACJ;AAEA,QAAQ,QAAQ,UAAU,YAAY,CAAC,SAAS,QAAQ,iBAAiB;AAC9D,SAAA,MAAM,YAAY,OAAO,KAAK,MAAM,WAAW,UAAU,IAAI,QAAQ,UAAU,OAAO;AAAA,IACzF,SAAS,WAAW,QAAQ;AAAA,EAAA,CAC/B;AAEoB,UAAQ,WAAW,OAAO,MAAM,IAAI,IAAI,OAAO,GAAG,EAAE,SAAS;AAK3E,SAAA,MAAM,QAAQ,OAAO;AAAA,IACxB,IAAI;AAAA,IACJ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,WAAW,CAAC;AAAA,IACZ,QAAQ;AAAA,IACR,KAAK,OAAO;AAAA,EAAA;AAGhB,MAAI,WAAW,OAAO,QAAQ,SAAS,UAAU;AACzC,QAAA;AACM,YAAA,KAAK,uBAAuB,QAAQ,IAAI;AAC9C,UAAI,CAAC;AAAI;AAEF,aAAA,GAAG,QAAQ,QAAQ,SAAS,OAAO,EACrC,KAAK,CAAC,WAAgB;AACnB,YAAI,UAAU,OAAO,OAAO,SAAS,UAAU;AAC3C,uBAAa,MAAM;AACP,sBAAA,QAAQ,KAAK,IAAI,MAAM;AAAA,QACvC;AAAA,MAAA,CACH,EACA,MAAM,CAAC,MAAa;AACjB,qBAAa,CAAC;AACd,eAAO,MAAM,kBAAkB,QAAQ,gBAAgB,EAAE,SAAS;AAE3D,eAAA,MAAM,cAAc,CAAC;AAAA,MAAA,CAC/B;AAAA,aACA;AACL,mBAAa,CAAC;AACd,aAAO,MAAM,kBAAkB,QAAQ,gBAAgB,GAAG,SAAS;AAE5D,aAAA,MAAM,cAAc,CAAC;AAAA,IAChC;AAAA,EACJ;AACJ,CAAC;"}