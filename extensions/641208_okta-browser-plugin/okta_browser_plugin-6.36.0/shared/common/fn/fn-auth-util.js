!function(){const n=Okta.Constants.AuthOptions.DEFAULT_MAX_CLOCK_SKEW;var e=Okta._okta;const r=e.isNumber,t=e.isUndefined,o=e.isNull,i=e.isString,s=e.isArray,a=e.keys,c=e.map,u=e.omit,d=e.each,l=e.clone,p=e.extend,h=e.partial,f=Okta.Q;e=Okta.fn.other.string;const k=e.genRandomString,g=e.base64UrlToString,T=e.hashCode,m=Okta.fn.url.removeTrailingSlash,_=Okta.fn.authUtil={};_.generateState=function(){return k(64)},_.generateNonce=function(){return k(64)},_.getDefaultOAuthParams=function(e){return{clientId:e.clientId,redirectUri:e.redirectUri,responseType:"id_token",responseMode:e.responseMode||"okta_post_message",state:_.generateState(64),nonce:_.generateNonce(64),scopes:e.scopes||["openid","email"],ignoreSignature:e.ignoreSignature}},_.getOAuthUrls=function(e){var t=m(e.url),n=_.getOAuthUris();return{issuer:e.issuer||t,authorizeUrl:t+n.authorizeUri,userinfoUrl:t+n.userinfoUri,tokenUrl:t+n.tokenUri,revokeUrl:t+n.revokeUri,logoutUrl:t+n.logoutUri}},_.getOAuthUris=function(){return{authorizeUri:"/oauth2/v1/authorize",userinfoUri:"/oauth2/v1/userinfo",tokenUri:"/oauth2/v1/token",revokeUri:"/oauth2/v1/revoke",logoutUri:"/oauth2/v1/logout"}},_.removeNils=function(e){return u(e,function(e){return t(e)||o(e)})},_.toQueryParams=function(t){t=t||{},t=_.removeNils(t);const e=c(a(t),function(e){return e+"="+encodeURIComponent(t[e])});return e.length?e.join("&"):""},_.decodeToken=function(e){e=e.split(".");let t;try{t={header:JSON.parse(g(e[0])),payload:JSON.parse(g(e[1])),signature:e[2]}}catch(e){throw new Error("Malformed token")}return t},_.convertOAuthParamsToQueryParams=function(e){if(!e.clientId)throw new Error("A clientId must be specified in the Auth constructor to get a token");if(i(e.responseType)&&-1!==e.responseType.indexOf(" "))throw new Error("Multiple OAuth responseTypes must be defined as an array");const t=_.removeNils({client_id:e.clientId,code_challenge:e.codeChallenge,code_challenge_method:e.codeChallengeMethod,display:e.display,idp:e.idp,idp_scope:e.idpScope,login_hint:e.loginHint,max_age:e.maxAge,nonce:e.nonce,prompt:e.prompt,redirect_uri:e.redirectUri,response_mode:e.responseMode,response_type:e.responseType,sessionToken:e.sessionToken,state:e.state});if(d(["idp_scope","response_type"],function(e){s(t[e])&&(t[e]=t[e].join(" "))}),-1!==e.responseType.indexOf("id_token")&&-1===e.scopes.indexOf("openid"))throw new Error("openid scope must be specified in the scopes argument when requesting an id_token");return t.scope=e.scopes.join(" "),t},_.validateOptions=function(e){if(!e.clientId)throw new Error("A clientId must be specified in the Auth constructor to get a token");if(!e.redirectUri)throw new Error("The redirectUri passed to /authorize must also be passed to /token");if(!e.authorizationCode)throw new Error("An authorization code (returned from /authorize) must be passed to /token");if(!e.codeVerifier)throw new Error('The "codeVerifier" (generated and saved by your app) must be passed to /token')},_.validateClaimsTime=function(e){if(e.iat>e.exp)return"The JWT expired before it was issued";var t=Math.floor(Date.now()/1e3);return t-n>e.exp?"The JWT expired and is no longer valid":e.iat>t+n?"The JWT was issued in the future":null},_.validateClaims=function(e,t){var n=t.clientId,r=t.issuer,t=t.nonce;return e&&r&&n?t&&e.nonce!==t?"OAuth flow response nonce doesn't match request nonce":e.iss!==r?"The issuer ["+e.iss+"] does not match ["+r+"]":e.aud!==n?"The audience ["+e.aud+"] does not match ["+n+"]":null:"The jwt, iss, and aud arguments are all required"},_.validateIdToken=function(r,o,i,s,a){return f().then(function(){if(!r||!r.idToken)return f.reject("Only idTokens may be verified");var e=_.decodeToken(r.idToken),t=_.validateClaimsTime(e.payload);if(t){const n=Okta.LastError(o,i);return n.set(t,"popover.errorPage.error.timeZoneOffset").then(h(f.reject,t))}e=_.validateClaims(e.payload,a);return e?f.reject(e):1==a.ignoreSignature?r:s.verifyAuthIdToken(r.idToken,a.jwksKey).then(function(e){return e&&e.valid?r:f.reject("The token signature is not valid")})})},_.validateAuthorizationCodeResponse=function(e,t){if(e.error||e.error_description){const n=new Error(e.error+": "+e.error_description);throw n.code=e.error,n}if(e.state!==t.state)throw new Error("OAuth flow response state doesn't match request state")},_.validateTokenDict=function(t,e){d(e,function(e){if(!t[e])throw new Error("Unable to parse OAuth flow response: "+e+" was not returned.")})},_.createTokenStorageDict=function(o,e){const i=e.storage,s=e.browser,a=e.idTokenValidation,c=e.expectedResponseTypes,u=e.cryptoManager;return f().then(function(){const e={};if(o.access_token&&(t=_.decodeToken(o.access_token),e.access_token={accessToken:o.access_token,expiresAt:Number(o.expires_in)+Math.floor(Date.now()/1e3),tokenType:o.token_type},o.refresh_token&&(e.refresh_token={refreshToken:o.refresh_token,clientId:t.payload.cid,issuer:t.payload.iss,tokenUrl:m(t.payload.iss)+_.getOAuthUris().tokenUri,idTokenValidation:{jwksKey:a.jwksKey,ignoreSignature:a.ignoreSignature,expectedClientId:a.expectedClientId,expectedIssuer:a.expectedIssuer}})),o.id_token){var t=_.decodeToken(o.id_token);const n={idToken:o.id_token,expiresAt:t.payload.exp,claims:t.payload},r={jwksKey:a.jwksKey,clientId:a.expectedClientId,issuer:a.expectedIssuer,nonce:a.expectedNonce};return void 0!==a.ignoreSignature&&(r.ignoreSignature=a.ignoreSignature),_.validateIdToken(n,i,s,u,r).then(function(){return e.id_token=n,_.validateTokenDict(e,c),e})}return _.validateTokenDict(e,c),e})};const v={};_.exchangeRefreshTokenForAccessToken=function(o,i,s,a){if(v[o])return v[o];const e=i.getAuthToken().then(function(r){if(r){var e=r[o];const n=e?e.refresh_token:null;var t=e?e.id_token:null,t=t?T(t.claims.sub):void 0,t=_.isTokenStorageValid(e,t);if(n&&!t)return a({id:"refreshAccessToken("+o+")",type:"refreshAccessToken",data:e}).then(function(e){function t(){const e=l(r);return delete e[o].refresh_token,i.setAuthToken(e).then(function(){throw new Error("Failed to refresh access token. Removing the saved refresh token from storage.")})}return e?_.createTokenStorageDict(e,{storage:i,browser:s,expectedResponseTypes:["access_token","id_token","refresh_token"],cryptoManager:new Okta.CryptoManager(Okta.window),idTokenValidation:n.idTokenValidation}).then(function(e){const t={};t[o]=e;var n=p(l(r),t);return i.setAuthToken(n).then(function(){return e})}).catch(t):t()})}});return e.then(function(){delete v[o]}).catch(function(){delete v[o]}),v[o]=e,e},_.isTokenStorageValid=function(e,t){if(!e||!e.access_token)return!1;if(t&&(!e.id_token||t!=T(e.id_token.claims.sub)))return!1;e=e.access_token;return!!r(e.expiresAt)&&e.expiresAt>Math.floor(Date.now()/1e3)}}();