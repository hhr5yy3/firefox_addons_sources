var c=(e=>(e[e.Unknown=0]="Unknown",e[e.XmlHttp=1]="XmlHttp",e[e.WebSocket=2]="WebSocket",e[e.MainFrame=3]="MainFrame",e[e.SubFrame=4]="SubFrame",e))(c||{}),C=(e=>(e[e.WebRequest=1]="WebRequest",e[e.PageLoad=2]="PageLoad",e[e.WebRequestAndPageLoad=3]="WebRequestAndPageLoad",e[e.SessionFgTab=4]="SessionFgTab",e))(C||{}),b=(e=>(e[e.Other=0]="Other",e[e.Http=1]="Http",e[e.Https=2]="Https",e[e.Ftp=3]="Ftp",e[e.File=4]="File",e))(b||{});let f=browser;function I(){return Date.now()-oe}function q(e){try{return new RegExp(`${e}`)}catch{return console.error(`buildRegex: Invalid regex string: <${e}>`),null}}function v(e){return e=="http:"?b.Http:e=="https:"?b.Https:e=="ftp:"?b.Ftp:e=="file:"?b.File:b.Other}function S(e){return e=="main_frame"?c.MainFrame:e=="sub_frame"?c.SubFrame:e=="xmlhttprequest"?c.XmlHttp:e=="websocket"?c.WebSocket:(console.error("onBeforeRequestCallback: Unknown request type: "+e),c.Unknown)}async function O(){try{const t=(await f.windows.getAll({populate:!0})).filter(n=>n.focused)[0];if(t?.tabs==null)throw new Error("No active window or tabs");const r=t.tabs.filter(n=>n.active)[0];if(r?.url!=null)return new URL(r.url);throw Error(`No URL available for tab ${r.id}`)}catch(e){throw new Error(`Error getting foreground tab URL: ${e}`)}}function D(e,t){let r=()=>{},n=()=>{};const o=new Promise((i,a)=>{r=i,n=a});o.catch(i=>{}),e.set(t,{promise:o,resolve:r,reject:n,createdTimestamp:Date.now()})}let l,y=[],w=[],R=[],U=[];function A(e){return e.formatVersion&&e.formatVersion>=2?e.config?e.config.configTimestamp?((l==null||l.configTimestamp==null||e.config.configTimestamp>l.configTimestamp)&&(f.storage.local.set({config:e.config}),l=e.config,x()),e.formatVersion):(console.error(`processMessageConfig: Received invalid message (configTimestamp is missing): ${e.text}`),0):(console.error(`processMessageConfig: Received invalid message (config is missing): ${e.text}`),0):1}function x(){if(y=[],w=[],R=[],U=[],!l)return;if(l.formatVersion!=2){console.error(`onConfigUpdated: Unsupported format version. Expected 2, got  <${l.formatVersion}>`);return}let e,t;if(l.denyAllowlists&&(l.denyAllowlists.denylist&&(e=l.denyAllowlists.denylist),l.denyAllowlists.allowlist&&(t=l.denyAllowlists.allowlist)),e)for(const r of e){const n=q(r);n&&y.push(n)}if(t)for(const r of t){const n=q(r);n&&w.push(n)}if(l.urlComponentDetails){if(l.urlComponentDetails.tabUrlSpecs)for(const r of l.urlComponentDetails.tabUrlSpecs)E(r,R);if(l.urlComponentDetails.requestUrlSpecs)for(const r of l.urlComponentDetails.requestUrlSpecs)E(r,U)}}function N(){f.storage.local.get("config").then(e=>{l=e.config,x()}).catch(e=>{console.error("readCachedConfig: Error reading cached configuration: "+e)})}function F(e){if(w.length==0&&y.length==0)return!1;const t=e.origin+e.pathname;if(w.length>0){let r=!1;for(const n of w)if(n.test(t)){r=!0;break}if(!r)return!0}return _(t)}function _(e){for(const t of y)if(t.test(e))return!0;return!1}function M(e,t,r){for(const n of r)if(n.urlRegexObject.test(e.toString())){let o=t.host;if(n.componentDetail.pathEnabled){const g=n.componentDetail.pathDepth;if(Number.isInteger(g)&&g>0){const h=t.pathname.split("/");for(let m=1;m<h.length&&m<=g;m++)o+="/"+h[m]}else o+=t.pathname}if(n.componentDetail.queryEnabled)if(n.queryParamRegexObjects.length==0)o+=t.search;else{o+="?";const g=new Set;for(const h of n.queryParamRegexObjects)for(const m of t.searchParams.keys())h.test(m)&&g.has(m)==!1&&(g.add(m),o+=m+"="+t.searchParams.get(m)+"&");o=o.replace(/[?&]$/,"")}const i="#UA_DELIMITER_C#",a="#UA_DELIMITER_P#",k="#UA_DELIMITER_S#";return o.replaceAll(",",i).replaceAll("|",a).replaceAll(";",k)}return t.host}function E(e,t){if(!t){console.error("addUrlComponentDetail: Empty target list");return}if(!e){console.error("addUrlComponentDetail: Empty object to add");return}if(!e.regexString){console.error("addUrlComponentDetail: Missing regexString in object: <"+JSON.stringify(e)+">");return}if(!e.componentDetail){console.error("addUrlComponentDetail: Missing componentDetail in object: <"+JSON.stringify(e)+">");return}const r=q(e.regexString);if(!r)return;const n=[];if(e.componentDetail.queryEnabled&&e.componentDetail.queryParams.length>0){const o=e.componentDetail.queryParams.split(",");for(let i of o){if(i=i.trim(),i.length==0)continue;const a=q(i);a&&n.push(a)}}t.push({urlRegexObject:r,componentDetail:e.componentDetail,queryParamRegexObjects:n})}async function j(){const e=[["Managed storage",f.storage.managed],["Local extension storage",f.storage.local]];for(const[t,r]of e)try{const n=await r.get("EnableBrowserDataCollection");if(n.EnableBrowserDataCollection!=null)return n.EnableBrowserDataCollection}catch(n){console.info(`${t} configuration not available: <${n}>`)}return console.error("No configuration value found in managed storage or local storage. Data collection is not enabled."),!1}const s=new Map,u=new Map;function $(e){return`${e.tabId}_${e.frameId}`}function P(e){const[t,r]=e.split("_").map(n=>parseInt(n));return{tabId:t,frameId:r}}const d=new Map;function z(e){if(p==null||e.tabId<0)return;let t;try{t=new URL(e.url)}catch(n){console.error("Error converting request URL to URL object: "+n);return}const r={requestId:e.requestId,millisecondsSinceUnixEpoch:e.timeStamp,tabId:e.tabId,frameId:e.frameId,requestUrl:t,requestUriScheme:v(t.protocol),requestType:S(e.type)};B(r)}function B(e){const t=s.get(e.requestId);if(t){t.requestUrl=e.requestUrl,e.requestUriScheme&&(t.requestUriScheme=e.requestUriScheme);return}const r={isCompleted:!1,startTimestampUnixEpochMs:e.millisecondsSinceUnixEpoch,tabId:e.tabId,frameId:e.frameId,requestUrl:e.requestUrl,requestUriScheme:e.requestUriScheme,requestType:e.requestType};W(e),H(e),s.set(e.requestId,r)}async function W(e){if(s.has(e.requestId)){console.error(`Tab URL for tabId ${e.tabId} already exists, but request ID ${e.requestId} is in webRequestLog`);return}if(e.requestType===c.MainFrame){const t=u.get(e.tabId);if(t!=null){if(t.createdTimestamp>=e.millisecondsSinceUnixEpoch){console.error("Internal inconsistency during tab URL preparation for tabId");return}u.delete(e.tabId)}D(u,e.tabId)}}function H(e){if(e.requestType===c.MainFrame||e.requestType===c.SubFrame){const t=$({tabId:e.tabId,frameId:e.frameId}),r=d.get(t);if(r!=null){if(r.createdTimestamp>=e.millisecondsSinceUnixEpoch){console.debug(`Frame performance timing for frame identifier ${t} already exists, but request ID ${e.requestId} is not in webRequestLog yet`);return}console.debug(`Found old frame performance timing for frame identifier ${t} and it is older than the start event for request ID ${e.requestId}. Deleting the old entry.`),r.reject("Did not receive frame performance timing update in time. Deleting the old entry."),d.delete(t)}D(d,t)}}function V(e){if(u.has(e.tabId)&&e.type==="main_frame"&&(u.get(e.tabId)?.reject(e.error),u.delete(e.tabId),console.debug(`Loading main frame failed for request ID ${e.requestId}: ${e.error} Deleted entry for tab host URL.`)),e.type==="main_frame"||e.type==="sub_frame"){const t=$({tabId:e.tabId,frameId:e.frameId});d.get(t)?.reject(e.error),d.delete(t)}console.warn(`onErrorCallback: Request error. Request ID: ${e.requestId}, URL: ${e.url}: ${e.error}`),s.delete(e.requestId)}function K(e){e.redirectUrl.toLowerCase().startsWith("data://")&&(console.info("onBeforeRedirectCallback: Redirected to data. Request ID: "+e.requestId),s.delete(e.requestId))}async function J(e){if(e.tabId<0)return;u.has(e.tabId)?e.type==="main_frame"&&u.get(e.tabId).resolve(e.url):await X(e);const t={requestId:e.requestId,millisecondsSinceUnixEpoch:e.timeStamp,tabId:e.tabId,frameId:e.frameId,httpStatusCode:e.statusCode,requestType:S(e.type)};Q(t)}async function X(e){if(e.type==="main_frame")console.warn(`No tab URL entry for tabId ${e.tabId}, request URL ${e.url}. Adding it now. Extension uptime: ${I()} ms.`),u.set(e.tabId,{promise:Promise.resolve(e.url),resolve:()=>{},reject:()=>{},createdTimestamp:Date.now()});else try{const t=await chrome.tabs.get(e.tabId);if(t.url==null){console.error(`Fallback strategy failed: Missing tab host URL for tabId: ${e.tabId}, URL: ${e.url}, extension uptime: ${I()}ms.`);return}u.set(e.tabId,{promise:Promise.resolve(t.url),resolve:()=>{},reject:()=>{},createdTimestamp:Date.now()}),console.warn(`Missing tab host URL for tabId: ${e.tabId}, URL: ${e.url}, extension uptime: ${I()}ms. Applying fallback strategy.`)}catch(t){console.error(`Failed applying fallback strategy for tab URL for tabId ${e.tabId}, request URL ${e.url}: ${t}`)}}async function Q(e){const t=s.get(e.requestId);if(t==null){console.warn(`Missing previous webrequest event for request ID ${e.requestId}, tabId ${e.tabId}, frameId ${e.frameId}. This is to be expected shortly after browser startup. Extension uptime: ${I()} ms.`);return}let r;const n=$({tabId:e.tabId,frameId:e.frameId});try{if(t?.requestUrl==null)throw new Error(`Missing request URL entry for requestId ${e.requestId} in tabId ${e.tabId}, request type: ${c[e.requestType]}`);try{const i=await u.get(t.tabId)?.promise;if(i==null)throw new Error(`Missing tab URL entry for request type: ${c[e.requestType]}`);r=new URL(i)}catch(i){throw new Error(`Failed getting tab URL for tabId ${t.tabId}, request URL ${t.requestUrl}: ${i}`)}if(F(r)){console.debug(`URL ${r} is excluded from data collection, deleting web request log entry for request ID ${e.requestId}`),s.delete(e.requestId);return}t.tabUrlStringOutput=M(r,r,R),t.requestUrlStringOutput=M(r,t.requestUrl,U),t.requestUrl=void 0,t.tabUriScheme=v(r.protocol);const o=e.millisecondsSinceUnixEpoch;if(t.durationMs=o-t.startTimestampUnixEpochMs,t.httpStatusCode=e.httpStatusCode,t.requestType===c.MainFrame||t.requestType===c.SubFrame){const i=d.get(n);if(i==null){console.warn(`No frame performance timing for tabId ${t.tabId} and frameId ${t.frameId}`);return}try{const a=await i.promise;t.pageLoadTotalMs=a.pageLoadTotalMs,t.pageLoadNetworkMs=a.pageLoadNetworkMs,t.pageLoadRenderMs=a.pageLoadRenderMs}catch(a){console.error(`Missing page performance entry from content script: ${a}`)}finally{d.delete(n)}}}catch(o){console.error(`Failed processing web request completed event: ${o}`),s.delete(e.requestId)}t.isCompleted=!0}function G(e,t,r){if(t.id!==f.runtime.id){console.error("handleMessageFromContentScript: Invalid sender ID: ",t.id);return}if(t.tab?.id==null||t.frameId==null){console.error("handleMessageFromContentScript: No tab or frame ID");return}const n=$({tabId:t.tab.id,frameId:t.frameId});try{let o=d.get(n);if(o==null&&(console.warn(`handleMessageFromContentScript: Could not find frame performance timing for frame identifier ${n}, adding it now. Extension uptime: <${I()}> ms.`),D(d,n),o=d.get(n)),e.status==="error"){const i=`No performance timing available for frame identifier ${n}`;throw o.reject(i),new Error(i)}o.resolve({pageLoadTotalMs:e.pageLoadTotalMs,pageLoadNetworkMs:e.pageLoadNetworkMs,pageLoadRenderMs:e.pageLoadRenderMs}),console.debug(`handleMessageFromContentScript: Resolved frame performance timing for url ${t.url}, tabId ${t.tab.id} and frameId ${t.frameId} `)}catch(o){console.error(`handleMessageFromContentScript: Error resolving frame performance timing for url ${t.url}, tabId ${t.tab.id} and frameId ${t.frameId}: ${o}`)}}function Y(e,t){let r=0;for(const[o,i]of s)i.tabId===e&&i.isCompleted===!1&&(console.info(`onTabClosed: Tab <${i.tabId}> was closed, deleting incomplete request ID <${o}> for this tab`),r++,s.delete(o));console.info(`onTabClosed: Tab closed. Deleted ${r} webRequestLog items. New size: ${s.size}`);const n=u.get(e);n!=null&&(n.reject("Tab closed"),u.delete(e),console.debug(`onTabClosed: Tab closed. Deleted tab URL entry for tabId ${e}`));for(const[o,i]of d){const a=P(o);a.tabId===e&&(i.reject("Tab closed"),d.delete(o),console.debug(`onTabClosed: Tab closed. Deleted frame performance timing entry for tabId ${e} and frameId ${a.frameId}`))}}function Z(e){if(e.name==="maintenance"){const t=s.size;for(const[n,o]of s){const i=Date.now()-o.startTimestampUnixEpochMs,a=L*6e4;i>a&&(console.debug(`Maintenance: deleting old webRequestLog item for request ID <${n}>. Completed: ${o.isCompleted}`),s.delete(n))}const r=s.size;console.info(`handleAlarm: Maintenance. Deleted ${t-r} old webRequestLog items. New size: ${r}`)}}let p;function T(){const e="nativeMessagingInit";p&&console.warn(`${e}: port already exists`),console.info(`${e}: Connecting to native messaging host...`),p=chrome.runtime.connectNative("com.vastlimits.uainsessionhelper"),p.onMessage.addListener(ee),p.onDisconnect.addListener(ne),console.info(`${e}: ...done`)}function ee(e){const t=e;if(t.action==="keep-alive")return;const r=A(t);if(r==0)return;const n=t.text.match(/send\s(\d+)/);if(n===null){console.error(`nativeMessagingOnMessage: Received invalid message: ${t.text}`);return}const o=n[1];if(t.action==="send-fg-url")re(r);else if(t.action==="send-webapp")if(isNaN(parseInt(o))){console.error(`nativeMessagingOnMessage: Received message with invalid start time: ${t.text}`);return}else te(r)}function te(e){let t;const r=s.size;let n=0;if(e==2){t="2";for(const[i,a]of s){if(!a.isCompleted){console.debug(`🏃 Skipping webrequest <${i}> because it hasn't completed yet.`);continue}if(!a.durationMs){console.error(`No duration available, skipping webrequest: ${JSON.stringify(a)}`);continue}t+=";2|",t+=C.WebRequestAndPageLoad+",",t+=(a.tabUrlStringOutput??"")+",",t+=(a.tabUriScheme??"")+",",t+=(a.requestUrlStringOutput??"")+",",t+=a.requestUriScheme+",",t+=(a.frameId>0?"1":"0")+",",t+=Math.round(a.durationMs)+",",t+=a.requestType+",",t+=(a.httpStatusCode??"")+",",a.requestType===c.MainFrame||a.requestType===c.SubFrame?(t+=(a.pageLoadTotalMs??"")+",",t+=(a.pageLoadNetworkMs??"")+",",t+=a.pageLoadRenderMs??"",n++):t+=",,",s.delete(i)}}else throw console.error(`doActionWebApp: Received message with invalid format version: ${e}`),new Error("Received message with invalid format version: "+e);p.postMessage(t);const o=r-s.size;console.info(`doActionWebApp: Sent ${o} webRequestLog items (of which ${n} are page loads). ${s.size} items remaining.`)}function re(e){if(e<2){console.error(`doActionFgUrl: Received message with invalid format version: ${e}`);return}O().then(t=>{if(F(t))return;let r="";t?(t.host?r=M(t,t,R):t.protocol=="about:"&&(r=t.pathname),console.info("getForegroundTabUrl: Foreground window/tab: "+r)):console.info("getForegroundTabUrl: Foreground window/tab: [not this browser or excluded]");let n="2";n+=";2|",n+=C.SessionFgTab+",",n+=r,p.postMessage(n)}).catch(t=>{console.error("getForegroundTabUrl: Error getting foreground tab URL: "+t)})}function ne(e){let t;e.error?t=e.error.message:t=chrome.runtime.lastError?.message??"Unknown",console.warn(`Native messaging disconnected. Reason: <${t}>`),setTimeout(T,6e4)}const L=5,oe=Date.now();(async()=>{if(console.debug("Starting background script..."),await(async()=>await j())()){console.info("Data collection enabled, starting initialization..."),N(),T();const t={types:["main_frame","sub_frame","xmlhttprequest","websocket"],urls:["<all_urls>"]};f.runtime.onMessage.addListener(G),f.webRequest.onBeforeRequest.addListener(z,t,[]),f.webRequest.onCompleted.addListener(J,t),f.webRequest.onErrorOccurred.addListener(V,t),f.webRequest.onBeforeRedirect.addListener(K,t),f.tabs.onRemoved.addListener(Y),f.alarms.create("maintenance",{delayInMinutes:L,periodInMinutes:L}),f.alarms.onAlarm.addListener(Z),console.info("Initialization finished")}else browser.action.setIcon({path:"icon32_inactive.png"}),console.warn("Data collection is disabled. Waiting for configuration change...")})();
