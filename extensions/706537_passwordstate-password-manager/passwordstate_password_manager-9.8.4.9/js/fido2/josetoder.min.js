function getParamSize(keySize){return(keySize/8|0)+(keySize%8==0?0:1)}function getParamBytesForAlg(alg){const paramBytes={ES256:getParamSize(256),ES384:getParamSize(384),ES512:getParamSize(521)}[alg];if(paramBytes)return paramBytes;throw new Error('Unknown algorithm "'+alg+'"')}function countPadding(buf,start,stop){let padding=0;for(;start+padding<stop&&0===buf[start+padding];)++padding;const needsSign=buf[start+padding]>=MAX_OCTET;return needsSign&&--padding,padding}function joseToDer(signature,alg){const paramBytes=getParamBytesForAlg(alg),signatureBytes=signature.length;if(signatureBytes!==2*paramBytes)throw new TypeError('"'+alg+'" signatures must be "'+2*paramBytes+'" bytes, saw "'+signatureBytes+'"');const rPadding=countPadding(signature,0,paramBytes),sPadding=countPadding(signature,paramBytes,signature.length),rLength=paramBytes-rPadding,sLength=paramBytes-sPadding,rsBytes=2+rLength+1+1+sLength,shortLength=rsBytes<MAX_OCTET,dst=new Uint8Array((shortLength?2:3)+rsBytes);let offset=0;return dst[offset++]=ENCODED_TAG_SEQ,shortLength?dst[offset++]=rsBytes:(dst[offset++]=1|MAX_OCTET,dst[offset++]=255&rsBytes),dst[offset++]=ENCODED_TAG_INT,dst[offset++]=rLength,rPadding<0?(dst[offset++]=0,dst.set(signature.subarray(0,paramBytes),offset),offset+=paramBytes):(dst.set(signature.subarray(rPadding,paramBytes),offset),offset+=paramBytes),dst[offset++]=ENCODED_TAG_INT,dst[offset++]=sLength,sPadding<0?(dst[offset++]=0,dst.set(signature.subarray(paramBytes),offset)):dst.set(signature.subarray(paramBytes+sPadding),offset),dst}const MAX_OCTET=128,CLASS_UNIVERSAL=0,PRIMITIVE_BIT=32,TAG_SEQ=16,TAG_INT=2,ENCODED_TAG_SEQ=48,ENCODED_TAG_INT=2,SignatureFormatter={joseToDer:joseToDer};