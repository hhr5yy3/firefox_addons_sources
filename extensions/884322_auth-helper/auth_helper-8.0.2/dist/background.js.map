{"version":3,"file":"background.js","mappings":"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,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,QAAY,UAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,YACxC,CAAI,WAAY,WAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,UAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,UAAY,WAAY,WACpC,UAAY,WAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,WAAY,UAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,YACxC,CAAI,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,SAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,QAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,YACxC,CAAI,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,SACpC,WAAY,SAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,SAAY,SACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,SAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,UAAY,WAAY,UAAY,WACpC,WAAY,UAAY,SAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,SAAY,SAAY,WACpC,W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CV,QAAU,SACV,QAAU,SACV,SAAU,MACV,SAAU,SACV,SAAU,SACV,SAAU,MACV,SAAU,EACV,SAAU,IACV,OAAS,SACT,QAAU,SACV,QAAU,EACV,QAAU,SACV,QAAU,SACV,QAAU,MACV,QAAU,MACV,QAAU,IACV,QAAU,EACV,QAAU,IACV,SAAU,SACV,SAAU,MACV,SAAU,MACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAW,SACX,SAAW,MACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,MACX,SAAW,SACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,EACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,MACX,SAAW,SACX,SAAW,MACX,SAAW,SACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,OAEf,CACI,EAAK,WACL,MAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,EACT,OAAS,QACT,OAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,QACT,OAAS,GACT,OAAS,WACT,OAAS,WACT,OAAS,KACT,OAAS,KACT,OAAS,WACT,MAAQ,WACR,MAAS,GACT,OAAS,WACT,OAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,EACT,OAAS,WACT,OAAS,KACT,OAAS,WACT,OAAS,QACT,OAAS,KACT,OAAS,WACT,OAAS,QACT,OAAS,QACT,QAAS,WACT,QAAU,QACV,QAAU,QACV,QAAU,WACV,QAAU,EACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,QACV,QAAU,WACV,QAAU,QACV,QAAU,GACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,EACV,QAAU,QACV,QAAU,QACV,QAAU,WACV,QAAU,WACV,QAAU,GACV,QAAU,WACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,KACV,QAAU,WACV,QAAU,QACV,QA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EAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,GAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAE/E,MAAO,CACH,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAC3E,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAC3E,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAE/E,MAAO,CACH,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAC3E,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,IAE/E,MAAO,CACH,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,GAAK,EAC3E,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAE/E,MAAO,CACH,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,IAE/E,OAAQ,CACJ,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,IAE/E,MAAO,CACH,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAC3E,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAG/E,SAAU,CACN,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,GAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAC3E,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,IAE/E,MAAO,CACH,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAC3E,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAC3E,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,IAE/E,OAAQ,CACJ,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EA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","sources":["webpack://authenticator-extension/./node_modules/crypto-js/aes.js","webpack://authenticator-extension/./node_modules/crypto-js/blowfish.js","webpack://authenticator-extension/./node_modules/crypto-js/cipher-core.js","webpack://authenticator-extension/./node_modules/crypto-js/core.js","webpack://authenticator-extension/./node_modules/crypto-js/enc-base64.js","webpack://authenticator-extension/./node_modules/crypto-js/enc-base64url.js","webpack://authenticator-extension/./node_modules/crypto-js/enc-utf16.js","webpack://authenticator-extension/./node_modules/crypto-js/evpkdf.js","webpack://authenticator-extension/./node_modules/crypto-js/format-hex.js","webpack://authenticator-extension/./node_modules/crypto-js/hmac.js","webpack://authenticator-extension/./node_modules/crypto-js/index.js","webpack://authenticator-extension/./node_modules/crypto-js/lib-typedarrays.js","webpack://authenticator-extension/./node_modules/crypto-js/md5.js","webpack://authenticator-extension/./node_modules/crypto-js/mode-cfb.js","webpack://authenticator-extension/./node_modules/crypto-js/mode-ctr-gladman.js","webpack://authenticator-extension/./node_modules/crypto-js/mode-ctr.js","webpack://authenticator-extension/./node_modules/crypto-js/mode-ecb.js","webpack://authenticator-extension/./node_modules/crypto-js/mode-ofb.js","webpack://authenticator-extension/./node_modules/crypto-js/pad-ansix923.js","webpack://authenticator-extension/./node_modules/crypto-js/pad-iso10126.js","webpack://authenticator-extension/./node_modules/crypto-js/pad-iso97971.js","webpack://authenticator-extension/./node_modules/crypto-js/pad-nopadding.js","webpack://authenticator-extension/./node_modules/crypto-js/pad-zeropadding.js","webpack://authenticator-extension/./node_modules/crypto-js/pbkdf2.js","webpack://authenticator-extension/./node_modules/crypto-js/rabbit-legacy.js","webpack://authenticator-extension/./node_modules/crypto-js/rabbit.js","webpack://authenticator-extension/./node_modules/crypto-js/rc4.js","webpack://authenticator-extension/./node_modules/crypto-js/ripemd160.js","webpack://authenticator-extension/./node_modules/crypto-js/sha1.js","webpack://authenticator-extension/./node_modules/crypto-js/sha224.js","webpack://authenticator-extension/./node_modules/crypto-js/sha256.js","webpack://authenticator-extension/./node_modules/crypto-js/sha3.js","webpack://authenticator-extension/./node_modules/crypto-js/sha384.js","webpack://authenticator-extension/./node_modules/crypto-js/sha512.js","webpack://authenticator-extension/./node_modules/crypto-js/tripledes.js","webpack://authenticator-extension/./node_modules/crypto-js/x64-core.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/index.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostASN1.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostCMS.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostCert.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostCipher.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostCoding.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostCrypto.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostDigest.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostEngine.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostKeys.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostRandom.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostSecurity.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/gostSign.js","webpack://authenticator-extension/./node_modules/node-gost-crypto/lib/index.js","webpack://authenticator-extension/webpack/bootstrap","webpack://authenticator-extension/webpack/runtime/global","webpack://authenticator-extension/./src/models/encryption.ts","webpack://authenticator-extension/./src/models/key-utilities.ts","webpack://authenticator-extension/./src/models/settings.ts","webpack://authenticator-extension/./src/models/otp.ts","webpack://authenticator-extension/./src/models/storage.ts","webpack://authenticator-extension/./src/models/backup.ts","webpack://authenticator-extension/./src/models/credentials.ts","webpack://authenticator-extension/./src/utils.ts","webpack://authenticator-extension/./src/models/migration.ts","webpack://authenticator-extension/./src/browser.ts","webpack://authenticator-extension/./src/background.ts"],"sourcesContent":[";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    const N = 16;\n\n\t    //Origin pbox and sbox, derived from PI\n\t    const ORIG_P = [\n\t        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,\n\t        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,\n\t        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,\n\t        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,\n\t        0x9216D5D9, 0x8979FB1B\n\t    ];\n\n\t    const ORIG_S = [\n\t        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,\n\t            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,\n\t            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,\n\t            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,\n\t            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,\n\t            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,\n\t            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,\n\t            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,\n\t            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,\n\t            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,\n\t            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,\n\t            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,\n\t            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,\n\t            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,\n\t            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,\n\t            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,\n\t            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,\n\t            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,\n\t            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,\n\t            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,\n\t            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,\n\t            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,\n\t            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,\n\t            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,\n\t            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,\n\t            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,\n\t            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,\n\t            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,\n\t            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,\n\t            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,\n\t            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,\n\t            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,\n\t            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,\n\t            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,\n\t            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,\n\t            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,\n\t            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,\n\t            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,\n\t            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,\n\t            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,\n\t            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,\n\t            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,\n\t            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,\n\t            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,\n\t            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,\n\t            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,\n\t            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,\n\t            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,\n\t            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,\n\t            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,\n\t            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,\n\t            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,\n\t            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,\n\t            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,\n\t            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,\n\t            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,\n\t            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,\n\t            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,\n\t            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,\n\t            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,\n\t            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,\n\t            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,\n\t            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,\n\t            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],\n\t        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,\n\t            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,\n\t            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,\n\t            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,\n\t            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,\n\t            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,\n\t            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,\n\t            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,\n\t            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,\n\t            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,\n\t            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,\n\t            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,\n\t            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,\n\t            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,\n\t            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,\n\t            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,\n\t            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,\n\t            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,\n\t            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,\n\t            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,\n\t            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,\n\t            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,\n\t            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,\n\t            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,\n\t            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,\n\t            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,\n\t            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,\n\t            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,\n\t            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,\n\t            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,\n\t            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,\n\t            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,\n\t            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,\n\t            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,\n\t            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,\n\t            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,\n\t            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,\n\t            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,\n\t            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,\n\t            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,\n\t            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,\n\t            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,\n\t            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,\n\t            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,\n\t            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,\n\t            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,\n\t            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,\n\t            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,\n\t            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,\n\t            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,\n\t            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,\n\t            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,\n\t            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,\n\t            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,\n\t            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,\n\t            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,\n\t            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,\n\t            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,\n\t            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,\n\t            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,\n\t            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,\n\t            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,\n\t            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,\n\t            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],\n\t        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,\n\t            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,\n\t            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,\n\t            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,\n\t            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,\n\t            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,\n\t            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,\n\t            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,\n\t            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,\n\t            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,\n\t            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,\n\t            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,\n\t            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,\n\t            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,\n\t            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,\n\t            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,\n\t            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,\n\t            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,\n\t            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,\n\t            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,\n\t            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,\n\t            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,\n\t            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,\n\t            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,\n\t            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,\n\t            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,\n\t            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,\n\t            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,\n\t            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,\n\t            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,\n\t            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,\n\t            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,\n\t            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,\n\t            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,\n\t            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,\n\t            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,\n\t            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,\n\t            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,\n\t            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,\n\t            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,\n\t            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,\n\t            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,\n\t            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,\n\t            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,\n\t            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,\n\t            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,\n\t            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,\n\t            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,\n\t            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,\n\t            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,\n\t            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,\n\t            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,\n\t            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,\n\t            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,\n\t            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,\n\t            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,\n\t            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,\n\t            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,\n\t            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,\n\t            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,\n\t            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,\n\t            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,\n\t            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,\n\t            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],\n\t        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,\n\t            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,\n\t            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,\n\t            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,\n\t            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,\n\t            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,\n\t            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,\n\t            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,\n\t            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,\n\t            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,\n\t            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,\n\t            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,\n\t            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,\n\t            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,\n\t            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,\n\t            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,\n\t            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,\n\t            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,\n\t            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,\n\t            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,\n\t            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,\n\t            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,\n\t            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,\n\t            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,\n\t            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,\n\t            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,\n\t            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,\n\t            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,\n\t            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,\n\t            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,\n\t            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,\n\t            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,\n\t            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,\n\t            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,\n\t            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,\n\t            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,\n\t            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,\n\t            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,\n\t            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,\n\t            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,\n\t            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,\n\t            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,\n\t            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,\n\t            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,\n\t            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,\n\t            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,\n\t            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,\n\t            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,\n\t            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,\n\t            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,\n\t            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,\n\t            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,\n\t            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,\n\t            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,\n\t            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,\n\t            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,\n\t            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,\n\t            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,\n\t            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,\n\t            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,\n\t            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,\n\t            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,\n\t            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,\n\t            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]\n\t    ];\n\n\t    var BLOWFISH_CTX = {\n\t        pbox: [],\n\t        sbox: []\n\t    }\n\n\t    function F(ctx, x){\n\t        let a = (x >> 24) & 0xFF;\n\t        let b = (x >> 16) & 0xFF;\n\t        let c = (x >> 8) & 0xFF;\n\t        let d = x & 0xFF;\n\n\t        let y = ctx.sbox[0][a] + ctx.sbox[1][b];\n\t        y = y ^ ctx.sbox[2][c];\n\t        y = y + ctx.sbox[3][d];\n\n\t        return y;\n\t    }\n\n\t    function BlowFish_Encrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = 0; i < N; ++i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[N];\n\t        Xl = Xl ^ ctx.pbox[N + 1];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    function BlowFish_Decrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = N + 1; i > 1; --i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[1];\n\t        Xl = Xl ^ ctx.pbox[0];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    /**\n\t     * Initialization ctx's pbox and sbox.\n\t     *\n\t     * @param {Object} ctx The object has pbox and sbox.\n\t     * @param {Array} key An array of 32-bit words.\n\t     * @param {int} keysize The length of the key.\n\t     *\n\t     * @example\n\t     *\n\t     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);\n\t     */\n\t    function BlowFishInit(ctx, key, keysize)\n\t    {\n\t        for(let Row = 0; Row < 4; Row++)\n\t        {\n\t            ctx.sbox[Row] = [];\n\t            for(let Col = 0; Col < 256; Col++)\n\t            {\n\t                ctx.sbox[Row][Col] = ORIG_S[Row][Col];\n\t            }\n\t        }\n\n\t        let keyIndex = 0;\n\t        for(let index = 0; index < N + 2; index++)\n\t        {\n\t            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];\n\t            keyIndex++;\n\t            if(keyIndex >= keysize)\n\t            {\n\t                keyIndex = 0;\n\t            }\n\t        }\n\n\t        let Data1 = 0;\n\t        let Data2 = 0;\n\t        let res = 0;\n\t        for(let i = 0; i < N + 2; i += 2)\n\t        {\n\t            res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t            Data1 = res.left;\n\t            Data2 = res.right;\n\t            ctx.pbox[i] = Data1;\n\t            ctx.pbox[i + 1] = Data2;\n\t        }\n\n\t        for(let i = 0; i < 4; i++)\n\t        {\n\t            for(let j = 0; j < 256; j += 2)\n\t            {\n\t                res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t                Data1 = res.left;\n\t                Data2 = res.right;\n\t                ctx.sbox[i][j] = Data1;\n\t                ctx.sbox[i][j + 1] = Data2;\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    /**\n\t     * Blowfish block cipher algorithm.\n\t     */\n\t    var Blowfish = C_algo.Blowfish = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            //Initialization pbox and sbox\n\t            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        blockSize: 64/32,\n\n\t        keySize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Blowfish = BlockCipher._createHelper(Blowfish);\n\t}());\n\n\n\treturn CryptoJS.Blowfish;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt, hasher) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            if (!hasher) {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\t            } else {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize, hasher: hasher }).compute(password, salt);\n\t            }\n\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64url encoding strategy.\n\t     */\n\t    var Base64url = C_enc.Base64url = {\n\t        /**\n\t         * Converts a word array to a Base64url string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {string} The Base64url string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64url string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64url string.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);\n\t         */\n\t        parse: function (base64Str, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                reverseMap = this._reverseMap = [];\n\t                for (var j = 0; j < map.length; j++) {\n\t                    reverseMap[map.charCodeAt(j)] = j;\n\t                }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t        var words = [];\n\t        var nBytes = 0;\n\t        for (var i = 0; i < base64StrLength; i++) {\n\t            if (i % 4) {\n\t                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t                var bitsCombined = bits1 | bits2;\n\t                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t                nBytes++;\n\t            }\n\t        }\n\t        return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64url;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./enc-base64url\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"), require(\"./blowfish\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./enc-base64url\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\", \"./blowfish\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        var keystream;\n\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        for (var i = data.sigBytes - 1; i >= 0; i--) {\n\t            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t                data.sigBytes = i + 1;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA256\n\t         * @property {number} iterations The number of iterations to perform. Default: 250000\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA256,\n\t            iterations: 250000\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    var tMsw;\n\t                    var tLsw;\n\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                var Wil;\n\t                var Wih;\n\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    Wil = gamma0l + Wi7l;\n\t                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + gamma1l;\n\t                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + Wi16l;\n\t                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n\t            }\n\n\t            // Extend the key according to the keying options defined in 3DES standard\n\t            var key1 = keyWords.slice(0, 2);\n\t            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t            this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t            this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));","module.exports = require('./lib');\n","/**\n * @file PKCS ASN.1 message syntax and converters\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this \n *    list of conditions and the following disclaimer.\n *    \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *    \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nconst gostCrypto = require('./gostCrypto');\n\n    /*\n     * Service functions\n     * \n     */\n\n    var root = global;\n    var CryptoOperationData = root.ArrayBuffer;\n    var Date = root.Date;\n\n    // Security parameters\n    var algorithms = gostCrypto.security.algorithms;\n\n    var names = gostCrypto.security.names;\n\n    var identifiers = gostCrypto.security.identifiers;\n\n    var attributes = gostCrypto.security.attributes;\n\n    var parameters = gostCrypto.security.parameters;\n\n    // BER coding\n    var BER = gostCrypto.coding.BER;\n\n    // PEM coding\n    var PEM = gostCrypto.coding.PEM;\n\n    // Chars coding\n    var Chars = gostCrypto.coding.Chars;\n\n    // Hex coding;\n    var Hex = gostCrypto.coding.Hex;\n\n    // Hex coding;\n    var Int16 = gostCrypto.coding.Int16;\n\n    // Expand javascript object\n    function expand() {\n        var r = {};\n        for (var i = 0, n = arguments.length; i < n; i++) {\n            var item = arguments[i];\n            if (typeof item === 'object')\n                for (var name in item)\n                    r[name] = item[name];\n        }\n        return r;\n    }\n\n    // Swap bytes in buffer\n    function swapBytes(src) {\n        if (src instanceof CryptoOperationData)\n            src = new Uint8Array(src);\n        var dst = new Uint8Array(src.length);\n        for (var i = 0, n = src.length; i < n; i++)\n            dst[n - i - 1] = src[i];\n        return dst.buffer;\n    }\n\n    function isBinary(value) {\n        return value instanceof CryptoOperationData || value.buffer instanceof CryptoOperationData;\n    }\n\n    // Left pad zero\n    function lpad(n, width) {\n        return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n    }\n\n    // Nearest power 2\n    function npw2(n) {\n        return n <= 2 ? n : n <= 4 ? 4 : n <= 8 ? 8 : n <= 16 ? 16 :\n                n <= 32 ? 32 : n <= 64 ? 64 : n <= 128 ? 128 : n <= 256 ? 256 :\n                n < 512 ? 512 : n < 1024 ? 1024 : undefined;\n    }\n\n    // String int encode/decode to buffer\n    var SInt = {\n        encode: function (value, endian) {\n            return '0x' + Hex.encode(value, endian);\n        },\n        decode: function (value, endian, len) {\n            if (typeof value === 'number')\n                value = value.toString(16);\n            var s = value.replace('0x', '');\n            len = len || npw2(s.length);\n            return Hex.decode(lpad(s, len), endian);\n        }\n    };\n\n    // Assert invalid message\n    function assert(value) {\n        if (value)\n            throw Error('Invalid format');\n    }\n\n    function defineProperty(object, name, descriptor, enumerable) {\n        if (typeof descriptor !== 'object')\n            descriptor = {value: descriptor};\n        if (enumerable !== undefined)\n            descriptor.enumerable = enumerable;\n        Object.defineProperty(object, name, descriptor);\n    }\n\n    function defineProperties(object, properties, enumerable) {\n        for (var name in properties)\n            defineProperty(object, name, properties[name], enumerable);\n    }\n\n    function getOwnPropertyDescriptor(object, name) {\n        return  Object.getOwnPropertyDescriptor(object, name);\n    }\n\n\n\n    /*\n     * Base ASN.1 types and definitions\n     * \n     */\n\n    // Encode object primitive\n    function encode(format, object, tagNumber, tagClass, tagConstructed, uniformTitle) {\n        assert(object === undefined);\n        var source = {\n            tagNumber: tagNumber,\n            tagClass: tagClass || 0x00,\n            tagConstructed: tagConstructed || false,\n            object: object\n        };\n        // Output format\n        format = format || 'DER';\n        if (format === 'DER' || format === 'CER')\n            source = BER.encode(source, format);\n        if (format === 'PEM')\n            source = PEM.encode(source, uniformTitle);\n        return source;\n    }\n\n    // Decode object primitive\n    function decode(source, tagNumber, tagClass, tagConstructed, uniformTitle) {\n        assert(source === undefined);\n\n        // Decode PEM\n        if (typeof source === 'string')\n            source = PEM.decode(source, uniformTitle, false);\n        // Decode binary data\n        if (source instanceof CryptoOperationData) {\n            try {\n                source = PEM.decode(Chars.encode(source), uniformTitle, true);\n            } catch (e) {\n                source = BER.decode(source);\n            }\n        }\n\n        tagClass = tagClass || 0;\n        tagConstructed = tagConstructed || false;\n        // Restore context implicit formats\n        if (source.tagNumber === undefined) {\n            source = encode(true, source.object, tagNumber, tagClass,\n                    source.object instanceof Array);\n            source = BER.decode(source);\n        }\n\n        // Check format\n        assert(source.tagClass !== tagClass ||\n                source.tagNumber !== tagNumber ||\n                source.tagConstructed !== tagConstructed);\n        // Clone value define from redefine original\n        if (tagClass === 0 && tagNumber === 0x05)\n            return null;\n        else\n            return source.object;\n    }\n\n    // Create class based on super\n    function extend(Super, Class, propertiesObject, propertiesClass) {\n        // If constructor not defined\n        if (typeof Class !== 'function') {\n            propertiesClass = propertiesObject;\n            propertiesObject = Class;\n            Class = function () {\n                Super.apply(this, arguments);\n            };\n        }\n        // Create prototype properties\n        Class.prototype = Object.create(Super.prototype, {\n            constructor: {\n                value: Class\n            },\n            superclass: {\n                value: Super.prototype\n            }\n        });\n        if (propertiesObject)\n            defineProperties(Class.prototype, propertiesObject);\n        // Inherites super class properties\n        if (Super !== Object)\n            for (var name in Super)\n                Class[name] = Super[name];\n        Class.super = Super;\n        if (propertiesClass)\n            defineProperties(Class, propertiesClass, true);\n        return Class;\n    }\n\n    // Base class \n    var ASN1Object = extend(Object, function (object) {\n        this.object = object;\n    }, {\n        // Call set method for a class property\n        _set: function (Class, propName, value) {\n            Class.property(propName).set.call(this, value);\n        },\n        // Call get method for a class property\n        _get: function (Class, propName) {\n            return Class.property(propName).get.call(this);\n        },\n        // Call method for a class\n        _call: function (Class, methodName, args) {\n            return Class.method(methodName).apply(this, args);\n        },\n        hasProperty: function (propName) {\n            return this.hasOwnProperty(propName) ||\n                    !!this.constructor.property(propName);\n        },\n        encode: function () {\n            return this.object;\n        }\n    }, {\n        decode: function (source) {\n            return new this(source);\n        },\n        // Find ingerited property\n        property: function (propName) {\n            var proto = this.prototype;\n            while (proto) {\n                var descriptor = getOwnPropertyDescriptor(proto, propName);\n                if (descriptor)\n                    return descriptor;\n                else\n                    proto = proto.superclass;\n            }\n        },\n        // Find method \n        method: function (methodName) {\n            var proto = this.prototype;\n            while (proto) {\n                if (proto[methodName])\n                    return proto[methodName];\n                else\n                    proto = proto.superclass;\n            }\n        }\n    });\n\n    // Primitive metaclass\n    var PRIMITIVE = function (tagNumber) {\n        return extend(ASN1Object, {\n            encode: function (format) {\n                return encode(format, this.object, tagNumber);\n            }\n        }, {\n            decode: function (source) {\n                return new this(decode(source, tagNumber));\n            }\n        });\n    };\n\n    var ANY = ASN1Object;\n\n    var BOOLEAN = PRIMITIVE(0x01);\n\n    var IA5String = PRIMITIVE(0x16);\n\n    var NumericString = PRIMITIVE(0x12);\n\n    var PrintableString = PRIMITIVE(0x13);\n\n    var TeletexString = PRIMITIVE(0x14);\n\n    var UTF8String = PRIMITIVE(0x0c);\n\n    var UTCTime = PRIMITIVE(0x17);\n\n    var GeneralizedTime = PRIMITIVE(0x18);\n\n    var UniversalString = PRIMITIVE(0x1C);\n\n    var BMPString = PRIMITIVE(0x1e);\n\n    var NULL = extend(PRIMITIVE(0x05), {\n        object: {\n            get: function () {\n                return null;\n            },\n            set: function (object) {\n                assert(object !== null);\n            }\n        }\n    });\n\n// Primitive class with value coding\n    var PRIMITIVE_CODE = function (tagNumber) {\n\n        // Base class primitive\n        var Class = extend(PRIMITIVE(tagNumber), function (object) {\n            if (this instanceof Class)\n                Class.super.apply(this, arguments);\n            else\n                return CODE(object);\n        });\n\n        // Create Class with encoded\n        function CODE(structure) {\n            // Structured class\n            return extend(PRIMITIVE(tagNumber), function (object) {\n                Class.super.call(this, object);\n            }, {\n                // Transformation to code values\n                encode: function (format) {\n                    return encode(format, structure[this.object], tagNumber);\n                }\n            }, {\n                decode: function (source) {\n                    var id = decode(source, tagNumber);\n                    for (var name in structure)\n                        if (id === structure[name])\n                            return new this(name);\n                    assert(true);\n                }\n            });\n        }\n        return Class;\n    };\n\n    var INTEGER = PRIMITIVE_CODE(0x02);\n\n    var ENUMERATED = PRIMITIVE_CODE(0x0a);\n\n    var OCTET_STRING = (function () {\n        // Base class primitive\n        var Class = extend(PRIMITIVE(0x04), function (object) {\n            if (this instanceof Class)\n                Class.super.apply(this, arguments);\n            else\n                return WRAPPING(object);\n        });\n        // Wrapping class\n        function WRAPPING(WrappedClass) {\n            if (WrappedClass) {\n                return extend(WrappedClass, {\n                    encode: function (format) {\n                        return encode(format, WrappedClass.method('encode').call(this, true), 0x04);\n                    }\n                }, {\n                    decode: function (source) {\n                        return WrappedClass.decode.call(this, decode(source, 0x04));\n                    }\n                });\n            } else\n                return Class;\n        }\n        return Class;\n    })();\n\n    var BIT_STRING = (function () {\n        // Base class primitive\n        var Class = extend(PRIMITIVE(0x03), function (object) {\n            if (this instanceof Class)\n                Class.super.apply(this, arguments);\n            else if (typeof object === 'object')\n                return MASK(object);\n            else\n                return WRAPPING(object);\n        });\n\n        // Wrapping class\n        function WRAPPING(WrappedClass) {\n            if (WrappedClass) {\n                return extend(WrappedClass, {\n                    encode: function (format) {\n                        return encode(format, WrappedClass.method('encode').call(this, true), 0x03);\n                    }\n                }, {\n                    decode: function (source) {\n                        return WrappedClass.decode.call(this, decode(source, 0x03));\n                    }\n                });\n            } else\n                return Class;\n        }\n\n        // Create new class for a mask\n        function MASK(structure) {\n            // Bit string masked class\n            return extend(ASN1Object, function (object, numbits) {\n                ASN1Object.call(this, object);\n                this.numbits = numbits || 0;\n            }, {\n                encode: function (format) {\n                    var object = this.object, data = [];\n                    if (object instanceof Array) {\n                        for (var i = 0, n = object.length; i < n; i++) {\n                            var j = structure[object[i]];\n                            if (j !== undefined)\n                                data[j] = '1';\n                        }\n                        for (var i = 0, n = Math.max(data.length, this.numbits); i < n; i++)\n                            if (!data[i])\n                                data[i] = '0';\n                        data = data.join('');\n                    } else\n                        data = '0';\n                    return encode(format, data, 0x03);\n                }\n            }, {\n                // Transformation to array of values\n                decode: function (source) {\n                    var data = decode(source, 0x03), object = [];\n                    for (var name in structure) {\n                        var i = structure[name];\n                        if (data.charAt(i) === '1')\n                            object.push(name);\n                    }\n                    return new this(object, data.length);\n                }\n            });\n        }\n\n        return Class;\n    })();\n\n    // Combine sequence object properties with owner object\n    var COMBINE = function (Class) {\n        Class.combine = function (owner, valueName) {\n            for (var name in Class.prototype) {\n                if (Class.prototype.hasOwnProperty(name) && !owner.hasProperty(name)) {\n                    defineProperty(owner, name, (function (name) {\n                        return {\n                            get: function () {\n                                // Get object property\n                                return this[valueName] && this[valueName][name];\n                            },\n                            set: function (object) {\n                                // Set object property\n                                if (!this[valueName])\n                                    this[valueName] = {};\n                                this[valueName][name] = object;\n                            },\n                            configurable: false,\n                            enumerable: true\n                        };\n                    })(name));\n                }\n            }\n        };\n        return Class;\n    };\n\n    var SEQUENCE = function (structure, uniformTitle) {\n\n        /**\n         * Create SEQUENCE ASN.1 metaclass\n         * \n         * @class GostASN1.Sequence\n         * @param {(Object|FormatedData)} object Initialization object\n         * @param {boolean} check Check structure after initialization\n         */\n        var Class = extend(ASN1Object, function (object, check) {\n            // Define hidden properties\n            defineProperty(this, 'items', {\n                writable: true,\n                value: {}\n            });\n            if (typeof object === 'string' || object instanceof CryptoOperationData)\n                this.decode(object);\n            else if (object !== undefined) {\n                this.object = object;\n                // Check structure\n                if (check)\n                    this.check();\n            }\n        }, {\n            object: {\n                get: function () {\n                    return this;\n                },\n                set: function (object) {\n                    if (object instanceof Class) {\n                        // Set the same sequence class\n                        this.items = object.items;\n                        for (var name in structure) {\n                            var ItemClass = this.getItemClass(name, this.items);\n                            if (ItemClass.combine)\n                                ItemClass.combine(this, name);\n                        }\n                    } else {\n                        // Set other object structure\n                        var data = {};\n                        for (var name in structure) {\n                            var item = object[name];\n                            var ItemClass = this.getItemClass(name, data);\n                            if (item !== undefined) {\n                                data[name] = new ItemClass(item);\n                            } else if (ItemClass.combine) {\n                                // Create combined object\n                                data[name] = new ItemClass(object);\n                            }\n                            if (ItemClass.combine)\n                                ItemClass.combine(this, name);\n                        }\n                        this.items = data;\n                    }\n                }\n            },\n            getItemClass: function (name, items) {\n                return structure[name];\n            },\n            /**\n             * Encode the object\n             * \n             * @memberOf GostASN1.Sequence\n             * @instance\n             * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\n             * @returns {FormatedData} \n             */\n            encode: function (format) {\n                var source = [], items = this.items;\n                // Encode objects in structure\n                for (var name in structure) {\n                    // console.log(name, 'encoding...', items[name]);\n                    if (items[name]) {\n                        var encoded = items[name].encode(true);// Source from object\n                        if (encoded !== undefined) // Can be optional\n                            source.push(encoded);\n\n                    }\n                }\n                return encode(format, source, 0x10, 0, true, uniformTitle);\n            },\n            /**\n             * Decode the source to self object\n             * \n             * @memberOf GostASN1.Sequence\n             * @instance\n             * @param {FormatedData} source Encoded data\n             */\n            decode: function (source) {\n                this.object = this.constructor.decode(source);\n            },\n            /**\n             * Check the object structure\n             * \n             * @memberOf GostASN1.Sequence\n             * @instance\n             */\n            check: function () {\n                this.constructor.decode(this.encode(true));\n            }\n        }, {\n            /**\n             * Encode data values with creating object\n             * \n             * @memberOf GostASN1.Sequence\n             * @static\n             * @param {Object} object Javascript object to encoding\n             * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\n             * @returns {FormatedData} \n             */\n            encode: function (object, format) {\n                return new this(object).encode(format);\n            },\n            /**\n             * Decode source and create object\n             * \n             * @memberOf GostASN1.Sequence\n             * @static\n             * @param {FormatedData} source Encoded data\n             * @returns {GostASN1.Sequence}\n             * \n             */\n            decode: function (source) {\n                // Decode structure\n                source = decode(source, 0x10, 0, true, uniformTitle);\n                var i = 0, result = new this(), data = result.items = {};\n                for (var name in structure) {\n                    // console.log(name, 'decoding...');\n                    // try to create and decode object\n                    var ItemClass = result.getItemClass(name, data);\n                    var item = ItemClass.decode(source[i]);\n                    // success? item can be optional\n                    if (item !== undefined) {\n                        data[name] = item;\n                        if (ItemClass.combine)\n                            ItemClass.combine(result, name);\n                        i++;\n                    }\n                }\n                return result;\n            }\n        });\n\n        // Append structure items\n        for (var name in structure) {\n            defineProperty(Class.prototype, name, (function (name) {\n                return {\n                    get: function () {\n                        // Get object property\n                        return this.items[name] && this.items[name].object;\n                    },\n                    set: function (object) {\n                        // Set object property\n                        if (object !== undefined) {\n                            var ItemClass = this.getItemClass(name, this.items);\n                            this.items[name] = new ItemClass(object);\n                        } else\n                            delete this.items[name];\n                    },\n                    configurable: false,\n                    enumerable: !structure[name].combine\n                };\n            })(name));\n            if (structure[name].combine)\n                structure[name].combine(Class.prototype, name);\n        }\n        return Class;\n    };\n\n    var ATTRIBUTE = function (structure, typeName, valueName, ownerDafaultType, uniformName) {\n\n        var BaseClass = SEQUENCE(structure, uniformName);\n\n        // Define attribute sequence\n        var DEFINE = function (typeSet, defaultType) {\n\n            typeName = typeName || 'type';\n            valueName = valueName || 'value';\n            defaultType = defaultType || ownerDafaultType || ANY;\n\n            var Class = extend(BaseClass, function (object) {\n                // Constructor - \"matrioshka\"\n                if (this instanceof Class) {\n                    // Call super\n                    BaseClass.apply(this, arguments);\n                } else\n                    return DEFINE.apply(this, arguments);\n            }, {\n                getItemClass: function (name, items) {\n                    var ItemClass = structure[name];\n                    if (valueName === name) {\n                        // Define type of value attribute based on type attribute\n                        var type, typeId = items && items[typeName];\n                        if (typeId) {\n                            var id = typeId.object;\n                            if (typeSet) {\n                                if (typeof typeSet === 'function')\n                                    type = typeSet(id);\n                                else\n                                    type = typeSet[id];\n                            }\n                        }\n                        type = type || defaultType || ANY;\n                        ItemClass = ItemClass === ANY ? type :\n                                ItemClass(type);\n                    }\n                    return ItemClass;\n                }\n            });\n\n            // Redefine type property\n            defineProperty(Class.prototype, typeName, {\n                get: function () {\n                    // Get value property of object\n                    return this.items[typeName] && this.items[typeName].object;\n                },\n                set: function () {\n                    // Can't set type definition property separatery\n                    assert(true);\n                },\n                configurable: false,\n                enumerable: true\n            });\n\n            return Class;\n        };\n\n        return DEFINE();\n    };\n\n\n    var OBJECT_IDENTIFIER = extend(ASN1Object, {\n        encode: function (format) {\n            var object = this.object;\n            object = /^(\\d+\\.)+\\d+$/.test(object) ? object : identifiers[object];\n            assert(!object);\n            return encode(format, object, 0x06);\n        }\n    }, {\n        decode: function (source) {\n            var object = decode(source, 0x06);\n            return new this(names[object] || object);\n        }\n    });\n\n    var IMPLICIT = function (Class) {\n        Class = Class || ANY;\n        // Add constracted tag\n        return extend(Class, {\n            encode: function (format) {\n                // Format encoding without CTX header\n                var source = Class.method('encode').call(this, format);\n                if (typeof source === 'string' || source instanceof CryptoOperationData)\n                    return source;\n                if (source.tagNumber !== 0x04 && source.tagClass === 0 &&\n                        !(source.object instanceof Array))\n                    // Encode primitive source\n                    return {object: BER.encode(source, 'DER', true)};\n                else\n                    return {object: source.object};\n            }\n        }, {\n            decode: function (source) {\n                if (typeof source === 'string' || source instanceof CryptoOperationData) {\n                    return Class.decode.call(this, source);\n                } else {\n                    source = {\n                        object: source.object,\n                        header: source.header,\n                        content: source.content\n                    };\n                    return Class.decode.call(this, source);\n                }\n            }\n        });\n    };\n\n    var EXPLICIT = function (Class) {\n        Class = Class || ANY;\n        // Add constracted tag\n        return extend(Class, {\n            encode: function (format) {\n                // Format encoding without CTX header\n                var source = Class.method('encode').call(this, format);\n                if (typeof source === 'string' || source instanceof CryptoOperationData)\n                    return source;\n                return {object: [source]};\n            }\n        }, {\n            decode: function (source) {\n                if (typeof source === 'string' || source instanceof CryptoOperationData) {\n                    return Class.decode.call(this, source);\n                } else\n                    return Class.decode.call(this, source.object[0]);\n            }\n        });\n    };\n\n    var CTX = function (number, ContentClass) {\n        function CTX() {\n            ContentClass.apply(this, arguments);\n        }\n        // Create CTX number class with wrapped content class\n        return extend(ContentClass, CTX, {\n            encode: function (format) {\n                var source = ContentClass.method('encode').call(this, format);\n                if (typeof source === 'string' || source instanceof CryptoOperationData)\n                    return source;\n                source.tagNumber = number;\n                source.tagClass = 0x02;\n                source.tagConstructed = source.object instanceof Array;\n                return source;\n            }\n        }, {\n            decode: function (source) {\n                // Format decoding without CTX\n                assert(source.tagNumber !== undefined &&\n                        (source.tagClass !== 0x02 || source.tagNumber !== number));\n                return ContentClass.decode.call(this, source);\n            }\n        });\n    };\n\n    var ARRAY_OF = function (tagNumber) {\n\n        return function (ItemClassDef, typeAndValue) {\n            // Difininition of item class\n            ItemClassDef = ItemClassDef || ANY;\n\n            // Metaclass definition \n            var DEFINE = function (typeSet, defaultType) {\n\n                // Define item class\n                var ItemClass = typeof ItemClassDef === 'function' &&\n                        typeSet !== undefined ?\n                        ItemClassDef(typeSet, defaultType) : ItemClassDef;\n\n                if (typeAndValue) {\n                    /**\n                     * Create class with type and value structure<br><br>\n                     * \n                     * SET OF attribute and SEQUENCE OF attribute metaclass\n                     * \n                     * @class GostASN1.Set\n                     * @param {Object} object object value\n                     */\n                    var Class = extend(ASN1Object, function (object) {\n                        // Constructor - \"matrioshka\"\n                        if (this instanceof Class) {\n                            // Define hidden items property\n                            defineProperty(this, 'items', {\n                                writable: true,\n                                value: {}\n                            });\n                            // Call super\n                            ASN1Object.call(this, object || {});\n                        } else\n                            return DEFINE.apply(this, arguments);\n                    }, {\n                        object: {\n                            get: function () {\n                                // refresh items from object properties\n                                this.read();\n                                return this;\n                            },\n                            set: function (object) {\n                                if (object instanceof Class) {\n                                    object.read();\n                                    this.items = object.items;\n                                } else {\n                                    // Set other object structure\n                                    var data = {};\n                                    for (var id in object) {\n                                        var item = object[id];\n                                        data[id] = this.createItem(item, id);\n                                    }\n                                    this.items = data;\n                                }\n                                // refresh object properties to items\n                                this.reset();\n                            }\n                        },\n                        createItem: function (value, type) {\n                            if (typeAndValue) {\n                                var object = {};\n                                object[typeAndValue.typeName] = type;\n                                object[typeAndValue.valueName] = value;\n                            } else\n                                object = value;\n                            return new ItemClass(object);\n                        },\n                        getItemValue: function (id) {\n                            var item = this.items[id];\n                            return typeAndValue ? item.object[typeAndValue.valueName] : item.object;\n                        },\n                        setItemValue: function (id, value) {\n                            var item = this.items[id];\n                            if (typeAndValue)\n                                item.object[typeAndValue.valueName] = value;\n                            else\n                                item.object = value;\n                        },\n                        isItemType: function (id) {\n                            return typeAndValue ? identifiers[id] : !isNaN(parseInt(id));\n                        },\n                        reset: function () {\n                            // remove unused properties\n                            var items = this.items;\n                            for (var id in this)\n                                if (this.hasOwnProperty(id) && !this.items[id] &&\n                                        this.isItemType(id))\n                                    delete this[id];\n                            // add new properties\n                            for (var id in items)\n                                this[id] = this.getItemValue(id);\n                        },\n                        read: function () {\n                            var items = this.items;\n                            for (var id in this) {\n                                if (this.isItemType(id)) {\n                                    if (!this.items[id]) {\n                                        items[id] = this.createItem(this[id], id);\n                                        this[id] = this.getItemValue(id);\n                                    } else if (this.getItemValue(id) !== this[id]) {\n                                        this.setItemValue(id, this[id]);\n                                    }\n                                }\n                            }\n                        },\n                        /**\n                         * Encode the object\n                         * \n                         * @memberOf GostASN1.Set\n                         * @instance\n                         * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\n                         * @returns {FormatedData} \n                         */\n                        encode: function (format) {\n                            // refresh items from object properties\n                            this.read();\n                            // repare source\n                            var object = this.items, source = [];\n                            for (var id in object) {\n                                // console.log(id, object[id], 'encoding...');\n                                var encoded = object[id].encode(true);\n                                if (encoded !== undefined)\n                                    source.push(encoded);\n                            }\n                            return encode(format, source, tagNumber, 0, true);\n                        },\n                        /**\n                         * Decode the source to self object\n                         * \n                         * @memberOf GostASN1.Set\n                         * @instance\n                         * @param {FormatedData} source Encoded data\n                         */\n                        decode: function (source) {\n                            this.object = this.constructor.decode(source);\n                        },\n                        /**\n                         * Check the object structure\n                         * \n                         * @memberOf GostASN1.Set\n                         * @instance\n                         */\n                        check: function () {\n                            this.constructor.decode(this.encode(true));\n                        }\n                    }, {\n                        /**\n                         * Encode data values with creating object\n                         * \n                         * @memberOf GostASN1.Set\n                         * @static\n                         * @param {Object} object Javascript object to encoding\n                         * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\n                         * @returns {FormatedData} \n                         */\n                        encode: function (object, format) {\n                            return new this(object).encode(format);\n                        },\n                        /**\n                         * Decode source and create object\n                         * \n                         * @memberOf GostASN1.Set\n                         * @static\n                         * @param {FormatedData} source Encoded data\n                         * @returns {GostASN1.Sequence}\n                         * \n                         */\n                        decode: function (source) {\n                            // Decode structure\n                            source = decode(source, tagNumber, 0, true);\n                            var result = new this(), data = result.items = {};\n                            for (var i = 0, n = source.length; i < n; i++) {\n                                var item = ItemClass.decode(source[i]);\n                                var id = typeAndValue ? item.object[typeAndValue.typeName] : i;\n                                data[id] = item;\n                            }\n                            result.reset();\n                            return result;\n                        }\n                    });\n\n                    return Class;\n                } else {\n                    // Create array class\n                    var ArrayClass = extend(ASN1Object, function (object) {\n                        // Constructor - \"matrioshka\"\n                        if (this instanceof ArrayClass) {\n                            // Define hidden items property\n                            defineProperties(this, {\n                                items: {\n                                    writable: true,\n                                    value: []\n                                },\n                                values: {\n                                    writable: true,\n                                    value: []\n                                }\n                            });\n                            // Call super\n                            ASN1Object.call(this, object || []);\n                        } else\n                            return DEFINE.apply(this, arguments);\n                    }, {\n                        object: {\n                            get: function () {\n                                // refresh items from object properties\n                                this.read();\n                                return this.values;\n                            },\n                            set: function (object) {\n                                if (object instanceof ArrayClass) {\n                                    object.read();\n                                    this.items = object.items;\n                                } else {\n                                    // Set other object structure\n                                    var data = [];\n                                    for (var i = 0, n = object.length; i < n; i++)\n                                        data[i] = new ItemClass(object[i]);\n                                    this.items = data;\n                                }\n                                // refresh object properties to items\n                                this.reset();\n                            }\n                        },\n                        encode: function (format) {\n                            // refresh items from object properties\n                            this.read();\n                            // repare source\n                            var data = this.items, source = [];\n                            for (var i = 0, n = data.length; i < n; i++) {\n                                var encoded = data[i].encode(true);\n                                if (encoded !== undefined)\n                                    source.push(encoded);\n                            }\n                            return encode(format, source, tagNumber, 0, true);\n                        },\n                        decode: function (source) {\n                            this.object = this.constructor.decode(source);\n                        },\n                        check: function () {\n                            this.constructor.decode(this.encode(true));\n                        },\n                        reset: function () {\n                            // remove unused properties\n                            for (var i = 0, n = this.items.length; i < n; i++)\n                                this.values.push(this.items[i].object);\n                        },\n                        read: function () {\n                            var items = this.items, values = this.values;\n                            for (var i = 0, n = values.length; i < n; i++) {\n                                if (!this.items[i]) {\n                                    items[i] = new ItemClass(values[i]);\n                                    values[i] = items[i].object;\n                                } else if (items[i].object !== values[i])\n                                    items[i].object = values[i];\n                            }\n                        }\n                    }, {\n                        encode: function (object, format) {\n                            return new this(object).encode(format);\n                        },\n                        decode: function (source) {\n                            source = decode(source, tagNumber, 0, true);\n                            var result = new this();\n                            result.items = [];\n                            for (var i = 0, n = source.length; i < n; i++)\n                                result.items.push(ItemClass.decode(source[i]));\n                            result.reset();\n                            return result;\n                        }\n                    });\n\n                    return ArrayClass;\n                }\n            };\n            return DEFINE(); // Create simple class w/o any parameters\n        };\n    };\n\n    var SEQUENCE_OF = ARRAY_OF(0x10);\n\n    var SET_OF = ARRAY_OF(0x11);\n\n    var ENCLOSURE = function (BaseClass, modifier) {\n        if (modifier) {\n            var Class = extend(ASN1Object, {\n                object: {\n                    get: function () {\n                        if (this.item)\n                            return modifier.decode(this.item.object);\n                        else\n                            return undefined;\n                    },\n                    set: function (object) {\n                        if (object !== undefined)\n                            this.item = new BaseClass(modifier.encode(object));\n                        else\n                            delete this.item;\n                    }\n                },\n                encode: function (format) {\n                    return this.item.encode(format);\n                }\n            }, {\n                decode: function (source) {\n                    var result = new this();\n                    result.item = BaseClass.decode(source);\n                    return result;\n                }\n            });\n            for (var name in BaseClass)\n                if (!Class[name])\n                    Class[name] = BaseClass[name];\n            return Class;\n        } else\n            return BaseClass;\n    };\n\n    var SET_OF_SINGLE = function (ItemClass) {\n\n        var Class = ENCLOSURE(SET_OF(ItemClass), {\n            encode: function (item) {\n                return [item];\n            },\n            decode: function (item) {\n                return item[0];\n            }\n        });\n        return Class;\n    };\n\n    var CHOICE = function (structure, define) {\n\n        return extend(ASN1Object, {\n            object: {\n                get: function () {\n                    return this.item && this.item.object;\n                },\n                set: function (object) {\n                    // Try to find appropriate type in structure\n                    if (object instanceof ASN1Object) {\n                        for (var name in structure)\n                            if (object instanceof structure[name]) {\n                                this.item = object;\n                                return;\n                            }\n                    }\n                    // Define class\n                    var name = typeof define === 'function' ? define(object) : define;\n                    assert(!name || !structure[name]);\n                    object = new structure[name](object);\n                    this.item = object;\n                }\n            },\n            encode: function (format) {\n                // Already in class\n                return this.item.encode(format);\n            }\n        }, {\n            decode: function (source) {\n                // Try to find class structure\n                for (var name in structure) {\n                    try {\n                        var item = structure[name].decode(source);\n                        if (item !== undefined)\n                            return new this(item);\n                    } catch (e) {\n                    }\n                }\n                assert(true);\n            }\n        });\n    };\n\n    var ENCAPSULATES = function (WrappedClass) {\n        WrappedClass = WrappedClass || ANY;\n        // BER Encode/Decode values\n        return extend(WrappedClass, {\n            encode: function () {\n                return BER.encode(WrappedClass.method('encode').call(this, true));\n            }\n        }, {\n            encode: function (object, format) {\n                return new this(object).encode(format);\n            },\n            decode: function (source) {\n                return WrappedClass.decode.call(this, BER.decode(source));\n            }\n        });\n    };\n\n    var DEFAULT = function (Class, optional) {\n        Class = Class || ANY;\n        return extend(Class, {\n            encode: function (format) {\n                if (this.object === optional)\n                    return undefined;\n                return Class.method('encode').call(this, format);\n            }\n        }, {\n            decode: function (source) {\n                if (source === undefined)\n                    return new this(optional);\n                else\n                    try {\n                        return Class.decode.call(this, source);\n                    } catch (e) {\n                        return undefined;\n                    }\n            }\n        });\n    };\n\n    var OPTIONAL = function (Class) {\n        Class = Class || ANY;\n        return extend(Class, {}, {\n            decode: function (source) {\n                if (source === undefined)\n                    return undefined;\n                else\n                    try {\n                        return Class.decode.call(this, source);\n                    } catch (e) {\n                        return undefined;\n                    }\n            }\n        });\n    };\n\n    var DEFAULT_NULL = function (Class, optional) {\n        Class = Class || ANY;\n        return extend(Class, {\n            encode: function (format) {\n                if (this.object === optional)\n                    return new NULL(null).encode(format);\n                return Class.method('encode').call(this, format);\n            }\n        }, {\n            decode: function (source) {\n                if (source === undefined)\n                    return undefined;\n                else if (source === null ||\n                        (source.tagNumber === 0x05 && source.tagClass === 0))\n                    return new this(optional);\n                else\n                    try {\n                        return Class.decode.call(this, source);\n                    } catch (e) {\n                        return undefined;\n                    }\n            }\n        });\n    };\n\n\n\n    /*\n     * Certificate Version, Name, Attributes, Validity\n     * \n     * http://tools.ietf.org/html/rfc5280\n     * \n     */\n\n    var DirectoryString = CHOICE({\n        teletexString: TeletexString,\n        printableString: PrintableString,\n        universalString: UniversalString,\n        utf8String: UTF8String,\n        bmpString: BMPString,\n        numericString: NumericString\n    }, function (value) {\n        // PrintableString - for characters and symbols with no spaces, overrise UTF8String\n        return /^[A-Za-z0-9\\.@\\+\\-\\:\\=\\\\\\/\\?\\!\\#\\$\\%\\^\\&\\*\\(\\)\\[\\]\\{\\}\\>\\<\\|\\~]*$/.test(value) ? 'printableString' : 'utf8String';\n    });\n\n    var Time = CHOICE({\n        utcTime: UTCTime,\n        generalTime: GeneralizedTime\n    }, function (value) {\n        return value.getYear() >= 2050 ? 'generalTime' : 'utcTime';\n    });\n\n    // Attribute\n    var AttributeType = OBJECT_IDENTIFIER;\n\n    var AttributeValue = ANY;\n\n    var AttributeTypeAndValue = ATTRIBUTE({\n        type: AttributeType,\n        value: AttributeValue\n    });\n\n    var typeAndValue = {\n        typeName: 'type',\n        valueName: 'value'\n    };\n\n    /**\n     * X.501 type Name\n     * The Name describes a hierarchical name composed of attributes, such\n     * as country name, and corresponding values, such as US.  The type of\n     * the component AttributeValue is determined by the AttributeType; in\n     * general it will be a DirectoryString.\n     \n     * The DirectoryString type is defined as a choice of PrintableString,\n     * TeletexString, BMPString, UTF8String, and UniversalString.  The\n     * UTF8String encoding [RFC 2279] is the preferred encoding, and all\n     * certificates issued after December 31, 2003 MUST use the UTF8String\n     * encoding of DirectoryString.\n     * \n     * Standard sets of attributes have been defined in the X.500 series of\n     * specifications [X.520].  Implementations of this specification MUST\n     * be prepared to receive the following standard attribute types in\n     * issuer and subject (section 4.1.2.6) names:\n     *  <ul>\n     *      <li>country,</li>\n     *      <li>organization,</li>\n     *      <li>organizational-unit,</li>\n     *      <li>distinguished name qualifier,</li>\n     *      <li>state or province name,</li>\n     *      <li>common name (e.g., \"Susan Housley\"), and</li>\n     *      <li>serial number.</li>\n     *  </ul>\n     * In addition, implementations of this specification SHOULD be prepared\n     * to receive the following standard attribute types in issuer and\n     * subject names:\n     *  <ul>\n     *      <li>locality,</li>\n     *      <li>title,</li>\n     *      <li>surname,</li>\n     *      <li>given name,</li>\n     *      <li>initials,</li>\n     *      <li>pseudonym, and</li>\n     *      <li>generation qualifier (e.g., \"Jr.\", \"3rd\", or \"IV\").</li>\n     *  </ul>\n     The syntax for type Name:\n     *  <pre>\n     *  Name ::= CHOICE {\n     *    rdnSequence RDNSequence }\n     *\n     *  RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n     *\n     *  RelativeDistinguishedName ::=\n     *    SET OF AttributeTypeAndValue\n     *\n     *  AttributeTypeAndValue ::= SEQUENCE {\n     *    type     AttributeType,\n     *    value    AttributeValue }\n     *\n     *  AttributeType ::= OBJECT IDENTIFIER\n     *\n     *  AttributeValue ::= ANY DEFINED BY AttributeType\n     *\n     *  DirectoryString ::= CHOICE {\n     *        teletexString           TeletexString (SIZE (1..MAX)),\n     *        printableString         PrintableString (SIZE (1..MAX)),\n     *        universalString         UniversalString (SIZE (1..MAX)),\n     *        utf8String              UTF8String (SIZE (1..MAX)),\n     *        bmpString               BMPString (SIZE (1..MAX)) }\n     *  </pre>\n     * @class GostASN1.Name\n     */\n    var RelativeDistinguishedName = SET_OF_SINGLE(AttributeTypeAndValue({\n        serialName: PrintableString,\n        countryName: PrintableString,\n        dnQualifier: PrintableString,\n        emailAddress: IA5String,\n        domainComponent: IA5String,\n        SNILS: NumericString,\n        OGRN: NumericString,\n        INN: NumericString\n    }, DirectoryString));\n\n    var RDNSequence = SEQUENCE_OF(RelativeDistinguishedName, typeAndValue)();\n\n    var Name = CHOICE({\n        // only one possibility for now\n        rdnSequence: RDNSequence}, 'rdnSequence');\n\n    /**\n     * Validity\n     * @class GostASN1.Validity\n     * @extends GostASN1.Sequence\n     */\n    var Validity = COMBINE(SEQUENCE({\n        notBefore: Time,\n        notAfter: Time}));\n\n    var Version = INTEGER;\n\n    var Attribute = ATTRIBUTE({\n        type: OBJECT_IDENTIFIER,\n        value: ANY\n    });\n\n    /**\n     * Type and Value Attributes <br>\n     * \n     * Suggested naming attributes: Definition of the following \n     * information object set may be augmented to meet local \n     * requirements.  Note that deleting members of the set may \n     * prevent interoperability with conforming implementations.\n     * presented in pairs: the AttributeType followed by the type \n     * definition for the corresponding AttributeValue\n     * \n     * @class GostASN1.Attributes\n     * @extends GostASN1.Set\n     */\n    var Attributes = SET_OF(Attribute, typeAndValue);\n\n    var AttributeSequence = SEQUENCE_OF(Attribute, typeAndValue);\n\n\n    /*\n     * Algorithm identifiers\n     * \n     * http://tools.ietf.org/html/rfc3279\n     * http://tools.ietf.org/html/rfc4357\n     * http://tools.ietf.org/html/rfc2898\n     * \n     */\n\n    var FieldElement = INTEGER;\n    var Curve = SEQUENCE({\n        a: FieldElement,\n        b: FieldElement,\n        seed: OPTIONAL(BIT_STRING)});\n\n    var ECPoint = OCTET_STRING(extend(ASN1Object, {\n        encode: function () {\n            var value = this.object;\n            var len = Math.max(npw2(value.x.length - 2), npw2(value.y.length - 2)) / 2,\n                    r = new Uint8Array(2 * len + 1);\n            r[0] = 0x04;\n            r.set(new Uint8Array(SInt.decode(value.x, false, len)), 1); // x\n            r.set(new Uint8Array(SInt.decode(value.y, false, len)), len + 1); // y\n            return r.buffer;\n        }\n    }, {\n        decode: function (value) {\n            var len = (value.byteLength - 1) / 2;\n            return new this({\n                x: SInt.encode(new Uint8Array(value, 1, len)),\n                y: SInt.encode(new Uint8Array(value, len + 1, len))\n            });\n        }\n    }));\n\n    var FieldID = SEQUENCE({\n        fieldType: OBJECT_IDENTIFIER,\n        parameters: INTEGER});\n\n    var ECParameters = SEQUENCE({\n        version: Version, // version is always 1         \n        fieldID: FieldID, // identifies the finite field over which the curve is defined \n        curve: Curve, // coefficients a and b of the elliptic curve         \n        base: ECPoint, // specifies the base point P on the elliptic curve         \n        order: INTEGER, // the order n of the base point         \n        cofactor: OPTIONAL(INTEGER)}); // The integer h = #E(Fq)/n  \n\n    var GostR3410Parameters = SEQUENCE({\n        publicKeyParamSet: OBJECT_IDENTIFIER,\n        digestParamSet: OBJECT_IDENTIFIER,\n        encryptionParamSet: OPTIONAL(OBJECT_IDENTIFIER)});\n\n    var GostR3411Parameters = DEFAULT_NULL(OBJECT_IDENTIFIER, 'id-GostR3411-94-CryptoProParamSet');\n\n    var ECDHParameters = CHOICE({\n        namedParameters: OBJECT_IDENTIFIER,\n        ecParameters: ECParameters,\n        implicitly: OPTIONAL(NULL)}, function (value) {\n        return typeof value === 'string' || value instanceof String ?\n                'namedParameters' : 'ecParameters';\n    });\n\n    var Algorithm = function (paramType, modifier) {\n        return ENCLOSURE(SEQUENCE({\n            algorithm: OBJECT_IDENTIFIER,\n            parameters: OPTIONAL(paramType)}), modifier);\n    };\n\n    var AlgorithmIdentifier = (function () {\n\n        var DefaultAlgorithm = Algorithm(ANY),\n                Class = extend(ASN1Object, function (object) {\n                    if (this instanceof Class)\n                        Class.super.apply(this, arguments);\n                    else\n                        return DEFINE(object);\n                }, {\n                    encode: function (format) {\n                        return new DefaultAlgorithm(this.object).encode(format);\n                    }\n                }, {\n                    decode: function (source) {\n                        return new this(DefaultAlgorithm.decode(source).object);\n                    }\n                });\n\n        var DEFINE = function (algorithmSet) {\n\n            return extend(ASN1Object, {\n                object: {\n                    get: function () {\n                        if (this.item)\n                            return this.item.object;\n                        else\n                            return undefined;\n                    },\n                    set: function (object) {\n                        if (object) {\n                            var ItemClass = algorithmSet[object.id];\n                            if (!ItemClass)\n                                throw new Error('Algorithm not supported');\n                            this.item = new ItemClass(object);\n                        } else\n                            delete this.item;\n                    }\n                },\n                encode: function (format) {\n                    return this.item.encode(format);\n                }\n            }, {\n                decode: function (source) {\n                    // Decode PEM\n                    if (typeof source === 'string')\n                        source = PEM.decode(source, undefined, false);\n                    // Decode binary data\n                    if (source instanceof CryptoOperationData)\n                        source = BER.decode(source);\n                    var ItemClass = algorithmSet[names[source.object[0].object]];\n                    if (ItemClass) {\n                        var result = new this();\n                        result.item = ItemClass.decode(source);\n                        return result;\n                    } else\n                        throw new Error('Algorithm not supported');\n                }\n            });\n        };\n\n        return Class;\n    })();\n\n    var ECDHKeyAlgorithm = Algorithm(ECDHParameters, {\n        encode: function (value) {\n            var params;\n            if (typeof value.namedCurve === 'string')\n                params = attributes['namedCurve'][value.namedCurve];\n            else\n                params = {\n                    version: 1,\n                    fieldID: {\n                        fieldType: 'id-prime-Field',\n                        parameters: value.curve.p\n                    },\n                    curve: {\n                        a: value.curve.a,\n                        b: value.curve.b\n                    },\n                    base: {\n                        x: value.curve.x,\n                        y: value.curve.y\n                    },\n                    order: value.curve.q,\n                    cofactor: 1\n                };\n            return {\n                algorithm: value.id,\n                parameters: params\n            };\n        },\n        decode: function (value) {\n            var params = value.parameters,\n                    result = algorithms[value.algorithm];\n            if (typeof params === 'string' || params instanceof String) {\n                result = expand(result, parameters[params]);\n            } else if (typeof params === 'object') {\n                result = expand(result, {\n                    curve: {\n                        p: params.fieldID.parameters,\n                        a: params.curve.a,\n                        b: params.curve.b,\n                        x: params.base.x,\n                        y: params.base.y,\n                        q: params.order\n                    }\n                });\n            } else\n                throw new DataError('Invalid key paramters');\n            return result;\n        }\n    });\n\n    var GostKeyAlgorithm = Algorithm(GostR3410Parameters, {\n        encode: function (value) {\n            var paramName = value.namedCurve ? 'namedCurve' : 'namedParam',\n                    sBox = (value.name.indexOf('-94') >= 0 || value.name.indexOf('-2001') >= 0 ||\n                            value.version === 1994 || value.version === 2001) ? value.sBox || 'D-A' :\n                    (value.name.indexOf('-512') >= 0 || value.length === 512) ? 'D-512' : 'D-256';\n            return {\n                algorithm: value.id,\n                parameters: {\n                    publicKeyParamSet: attributes[paramName][value[paramName]],\n                    digestParamSet: attributes['sBox'][sBox],\n                    encryptionParamSet: value.encParams && value.encParams.sBox ?\n                            attributes['sBox'][value.encParams.sBox] : undefined\n                }\n            };\n        },\n        decode: function (value) {\n            var params = value.parameters,\n                    algorithm = expand(algorithms[value.algorithm],\n                            parameters[params.publicKeyParamSet],\n                            parameters[params.digestParamSet]);\n            if (params.encryptionParamSet)\n                algorithm.encParams = parameters[params.encryptionParamSet];\n            return algorithm;\n        }\n    });\n\n    var AlgorithmWithNoParam = Algorithm(ANY, {\n        encode: function (value) {\n            return {algorithm: value.id};\n        },\n        decode: function (value) {\n            return algorithms[value.algorithm];\n        }\n    });\n\n    var AlgorithmWithNullParam = Algorithm(NULL, {\n        encode: function (value) {\n            return {\n                algorithm: value.id,\n                parameters: null\n            };\n        },\n        decode: function (value) {\n            return algorithms[value.algorithm];\n        }\n    });\n\n    var Gost341194DigestAlgorithm = Algorithm(GostR3411Parameters, {\n        encode: function (value) {\n            return {\n                algorithm: value.id,\n                parameters: attributes['sBox'][value.sBox || (value.hash && value.hash.sBox) || 'D-A']\n            };\n        },\n        decode: function (value) {\n            var algorithm = expand(algorithms[value.algorithm]),\n                    parameter = parameters[value.parameters];\n            if (algorithm.hash)\n                algorithm.hash = expand(algorithm.hash, parameter);\n            else\n                algorithm = expand(algorithm, parameter);\n            return algorithm;\n        }\n    });\n\n    var KeyAlgorithmIdentifier = AlgorithmIdentifier({\n        ecdsa: ECDHKeyAlgorithm,\n        noSignature: AlgorithmWithNullParam,\n        rsaEncryption: AlgorithmWithNullParam,\n        'id-sc-gostR3410-2001': ECDHKeyAlgorithm,\n        'id-GostR3410-2001': GostKeyAlgorithm,\n        'id-GostR3410-94': GostKeyAlgorithm,\n        'id-GostR3410-2001DH': GostKeyAlgorithm,\n        'id-GostR3410-94DH': GostKeyAlgorithm,\n        'id-tc26-gost3410-12-256': GostKeyAlgorithm,\n        'id-tc26-gost3410-12-512': GostKeyAlgorithm,\n        'id-tc26-agreement-gost-3410-12-256': GostKeyAlgorithm,\n        'id-tc26-agreement-gost-3410-12-512': GostKeyAlgorithm,\n        'id-sc-gost28147-gfb': AlgorithmWithNoParam,\n        'id-Gost28147-89': AlgorithmWithNoParam\n    });\n\n    var SignatureAlgorithmIdentifier = AlgorithmIdentifier({\n        noSignature: AlgorithmWithNullParam,\n        rsaEncryption: AlgorithmWithNullParam,\n        sha1withRSAEncryption: AlgorithmWithNullParam,\n        sha256withRSAEncryption: AlgorithmWithNullParam,\n        sha384withRSAEncryption: AlgorithmWithNullParam,\n        sha512withRSAEncryption: AlgorithmWithNullParam,\n        'ecdsa': AlgorithmWithNoParam,\n        'ecdsa-with-SHA1': AlgorithmWithNoParam,\n        'ecdsa-with-SHA256': AlgorithmWithNoParam,\n        'ecdsa-with-SHA384': AlgorithmWithNoParam,\n        'ecdsa-with-SHA512': AlgorithmWithNoParam,\n        'id-GostR3410-94': AlgorithmWithNullParam,\n        'id-GostR3410-2001': AlgorithmWithNullParam,\n        'id-GostR3411-94-with-GostR3410-2001': AlgorithmWithNoParam,\n        'id-GostR3411-94-with-GostR3410-94': AlgorithmWithNoParam,\n        'id-tc26-gost3410-12-256': AlgorithmWithNullParam,\n        'id-tc26-gost3410-12-512': AlgorithmWithNullParam,\n        'id-tc26-signwithdigest-gost3410-12-94': AlgorithmWithNoParam,\n        'id-tc26-signwithdigest-gost3410-12-256': AlgorithmWithNoParam,\n        'id-tc26-signwithdigest-gost3410-12-512': AlgorithmWithNoParam,\n        'id-sc-gostR3410-94': AlgorithmWithNullParam,\n        'id-sc-gostR3410-2001': AlgorithmWithNullParam,\n        'id-sc-gostR3411-94-with-gostR3410-94': AlgorithmWithNullParam,\n        'id-sc-gostR3411-94-with-gostR3410-2001': AlgorithmWithNullParam\n    });\n\n    var DigestAlgorithmIdentifier = AlgorithmIdentifier({\n        sha1: AlgorithmWithNoParam,\n        sha256: AlgorithmWithNullParam,\n        sha384: AlgorithmWithNullParam,\n        sha512: AlgorithmWithNullParam,\n        'id-GostR3411-94': Gost341194DigestAlgorithm,\n        'id-tc26-gost3411-94': Gost341194DigestAlgorithm,\n        'id-tc26-gost3411-12-256': AlgorithmWithNullParam,\n        'id-tc26-gost3411-12-512': AlgorithmWithNullParam,\n        'id-sc-gostR3411-94': AlgorithmWithNoParam});\n\n    var Gost2814789Key = OCTET_STRING; //(SIZE (32))\n\n    var Gost2814789MAC = OCTET_STRING; // (SIZE (1..4))\n\n    var Gost2814789ParamSet = OBJECT_IDENTIFIER;\n\n    var Gost2814789IV = OCTET_STRING; // (SIZE (8))\n\n    var Gost2814789Parameters = SEQUENCE({\n        iv: Gost2814789IV,\n        encryptionParamSet: Gost2814789ParamSet});\n\n    var Gost2814789KeyWrapParameters = SEQUENCE({\n        encryptionParamSet: Gost2814789ParamSet,\n        ukm: OPTIONAL(OCTET_STRING)}); // (SIZE (8)) must be absent in key agreement\n\n    var Gost2814789Algorithm = Algorithm(Gost2814789Parameters, {\n        encode: function (value) {\n            return {\n                algorithm: value.id,\n                parameters: {\n                    iv: value.iv,\n                    encryptionParamSet: attributes['sBox'][value.sBox || 'E-A']\n                }\n            };\n        },\n        decode: function (value) {\n            var algorithm = expand(algorithms[value.algorithm],\n                    parameters[value.parameters.encryptionParamSet]);\n            algorithm.iv = value.parameters.iv;\n            return algorithm;\n        }\n    });\n\n    var SCGostAlgorithm = Algorithm(Gost2814789IV, {\n        encode: function (value) {\n            return {\n                algorithm: value.id,\n                parameters: value.iv\n            };\n        },\n        decode: function (value) {\n            var algorithm = expand(algorithms[value.algorithm]);\n            algorithm.iv = value.parameters || new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);\n            return algorithm;\n        }\n    });\n\n    var GostKeyWrapAlgorithm = Algorithm(Gost2814789KeyWrapParameters, {\n        encode: function (value) {\n            return {\n                algorithm: value.id,\n                parameters: {\n                    encryptionParamSet: attributes['sBox'][value.sBox || 'E-A'],\n                    ukm: value.ukm\n                }\n            };\n        },\n        decode: function (value) {\n            var algorithm = expand(algorithms[value.algorithm],\n                    parameters[value.parameters.encryptionParamSet]);\n            if (value.parameters.ukm)\n                algorithm.ukm = value.parameters.ukm;\n            return algorithm;\n        }\n    });\n\n    var KeyWrapAlgorithmIdentifier = AlgorithmIdentifier({\n        'id-Gost28147-89-None-KeyWrap': GostKeyWrapAlgorithm,\n        'id-Gost28147-89-CryptoPro-KeyWrap': GostKeyWrapAlgorithm});\n\n    var GostKeyAgreementAlgorithm = Algorithm(KeyWrapAlgorithmIdentifier, {\n        encode: function (value) {\n            return {\n                algorithm: value.id,\n                parameters: value.wrapping\n            };\n        },\n        decode: function (value) {\n            var algorithm = expand(algorithms[value.algorithm]);\n            algorithm.wrapping = value.parameters;\n            return algorithm;\n        }\n    });\n\n    var BaseEncryptionAlgorithmIdentifier = AlgorithmIdentifier({\n        'id-sc-gost28147-gfb': SCGostAlgorithm,\n        'id-Gost28147-89': Gost2814789Algorithm});\n\n    var MessageAuthenticationCodeAlgorithm = AlgorithmIdentifier({\n        'id-Gost28147-89-MAC': Gost2814789Parameters,\n        'id-HMACGostR3411-94': Gost341194DigestAlgorithm,\n        'id-tc26-hmac-gost-3411-12-256': Gost341194DigestAlgorithm,\n        'id-tc26-hmac-gost-3411-12-512': Gost341194DigestAlgorithm,\n        'hmacWithSHA1': AlgorithmWithNoParam,\n        'hmacWithSHA224': AlgorithmWithNoParam,\n        'hmacWithSHA256': AlgorithmWithNoParam,\n        'hmacWithSHA384': AlgorithmWithNoParam,\n        'hmacWithSHA512': AlgorithmWithNoParam,\n        'id-sc-gost28147-mac': AlgorithmWithNoParam,\n        'id-sc-hmacWithGostR3411': AlgorithmWithNoParam});\n\n    // rfc2898 PKCS #5: Password-Based Cryptography Specification\n    // PBKDF2\n    var PBKDF2params = SEQUENCE({\n        salt: CHOICE({\n            specified: OCTET_STRING,\n            otherSource: AlgorithmIdentifier\n        }, function (value) {\n            return isBinary(value) ? 'specified' : 'otherSource';\n        }),\n        iterationCount: INTEGER,\n        keyLength: OPTIONAL(INTEGER),\n        prf: MessageAuthenticationCodeAlgorithm});\n\n    var PBKDF2Algorithm = Algorithm(PBKDF2params, {\n        encode: function (value) {\n            return {\n                algorithm: value.id,\n                parameters: {\n                    salt: value.salt,\n                    iterationCount: value.iterations,\n                    prf: value.hmac\n                }\n            };\n        },\n        decode: function (value) {\n            var algorithm = expand(algorithms[value.algorithm]);\n            algorithm.salt = value.parameters.salt;\n            algorithm.iterations = value.parameters.iterationCount;\n            algorithm.hmac = value.parameters.prf;\n            algorithm.hash = algorithm.hmac.hash;\n            return algorithm;\n        }\n    });\n\n    var KeyDerivationAlgorithmIdentifier = AlgorithmIdentifier({\n        'PBKDF2': PBKDF2Algorithm});\n\n    var PBEParameter = SEQUENCE({\n        salt: OCTET_STRING,\n        iterationCount: INTEGER});\n\n    var PBES1Algorithm = Algorithm(PBEParameter, {\n        paramType: PBEParameter,\n        encode: function (value) {\n            return {\n                algorithm: value.id,\n                parameters: {\n                    salt: value.derivation.salt,\n                    iterationCount: value.derivation.iterations\n                }\n            };\n        },\n        decode: function (value) {\n            var algorithm = expand(algorithms[value.algorithm]);\n            algorithm.derivation = expand(algorithm.derivation,\n                    {salt: value.parameters.salt, iterations: value.parameters.iterationCount});\n            return algorithm;\n        }\n    });\n\n    // PBES2\n    var PBES2params = SEQUENCE({\n        keyDerivationFunc: KeyDerivationAlgorithmIdentifier, // {{PBES2-KDFs}},\n        encryptionScheme: BaseEncryptionAlgorithmIdentifier}); // {{PBES2-Encs}}\n\n    var PBES2Algorithm = Algorithm(PBES2params, {\n        encode: function (value) {\n            return {\n                algorithm: value.id,\n                parameters: {\n                    keyDerivationFunc: value.derivation,\n                    encryptionScheme: value.encryption\n                }\n            };\n        },\n        decode: function (value) {\n            var algorithm = expand(algorithms[value.algorithm]);\n            algorithm.derivation = value.parameters.keyDerivationFunc;\n            algorithm.encryption = value.parameters.encryptionScheme;\n            return algorithm;\n        }\n    });\n\n    var PasswordEncryptionAlgorithmIndentifier = AlgorithmIdentifier({\n        // PBES1\n        'pbeWithSHAAndAES128-CBC': PBES1Algorithm,\n        'pbeWithSHAAndAES192-CBC': PBES1Algorithm,\n        'pbeWithSHAAndAES256-CBC': PBES1Algorithm,\n        'pbeWithSHA256AndAES128-CBC': PBES1Algorithm,\n        'pbeWithSHA256AndAES192-CBC': PBES1Algorithm,\n        'pbeWithSHA256AndAES256-CBC': PBES1Algorithm,\n        'id-sc-pbeWithGost3411AndGost28147': PBES1Algorithm,\n        'id-sc-pbeWithGost3411AndGost28147CFB': PBES1Algorithm,\n        // PKCS12 PBES1 \n        'pbeWithSHAAnd3-KeyTripleDES-CBC': PBES1Algorithm,\n        'pbeWithSHAAnd2-KeyTripleDES-CBC': PBES1Algorithm,\n        'pbeWithSHAAnd128BitRC2-CBC': PBES1Algorithm,\n        'pbeWithSHAAnd40BitRC2-CBC': PBES1Algorithm,\n        'pbeUnknownGost': PBES1Algorithm,\n        // PBES2\n        'PBES2': PBES2Algorithm});\n\n    var KeyEncryptionAlgorithmIdentifier = AlgorithmIdentifier({\n        ecdsa: ECDHKeyAlgorithm,\n        rsaEncryption: AlgorithmWithNullParam,\n        // Base encryption\n        'id-sc-gost28147-gfb': SCGostAlgorithm,\n        'id-Gost28147-89': Gost2814789Algorithm,\n        // Key transport algorithms\n        'id-sc-gostR3410-2001': ECDHKeyAlgorithm,\n        'id-GostR3410-2001': GostKeyAlgorithm,\n        'id-GostR3410-94': GostKeyAlgorithm,\n        'id-tc26-gost3410-12-256': GostKeyAlgorithm,\n        'id-tc26-gost3410-12-512': GostKeyAlgorithm,\n        // Key agreement algorithms\n        'id-GostR3410-94-CryptoPro-ESDH': GostKeyAgreementAlgorithm,\n        'id-GostR3410-2001-CryptoPro-ESDH': GostKeyAgreementAlgorithm,\n        'id-tc26-agreement-gost-3410-12-256': GostKeyAgreementAlgorithm,\n        'id-tc26-agreement-gost-3410-12-512': GostKeyAgreementAlgorithm,\n        'id-sc-r3410-ESDH-r3411kdf': AlgorithmWithNullParam,\n        // Key encryption key algorithms\n        'id-Gost28147-89-None-KeyWrap': GostKeyWrapAlgorithm, // Add ukm to algorithm\n        'id-Gost28147-89-CryptoPro-KeyWrap': GostKeyWrapAlgorithm,\n        'id-sc-cmsGostWrap': AlgorithmWithNoParam, // SC don't use ukm\n        'id-sc-cmsGost28147Wrap': AlgorithmWithNoParam,\n        // Password based encryption\n        'pbeWithSHAAndAES128-CBC': PBES1Algorithm,\n        'pbeWithSHAAndAES192-CBC': PBES1Algorithm,\n        'pbeWithSHAAndAES256-CBC': PBES1Algorithm,\n        'pbeWithSHA256AndAES128-CBC': PBES1Algorithm,\n        'pbeWithSHA256AndAES192-CBC': PBES1Algorithm,\n        'pbeWithSHA256AndAES256-CBC': PBES1Algorithm,\n        'id-sc-pbeWithGost3411AndGost28147': PBES1Algorithm,\n        'id-sc-pbeWithGost3411AndGost28147CFB': PBES1Algorithm,\n        // PKCS12 PBES1 \n        'pbeWithSHAAnd3-KeyTripleDES-CBC': PBES1Algorithm,\n        'pbeWithSHAAnd2-KeyTripleDES-CBC': PBES1Algorithm,\n        'pbeWithSHAAnd128BitRC2-CBC': PBES1Algorithm,\n        'pbeWithSHAAnd40BitRC2-CBC': PBES1Algorithm,\n        'pbeUnknownGost': PBES1Algorithm,\n        // PBES2\n        'PBES2': PBES2Algorithm\n    });\n\n    var PBMAC1params = SEQUENCE({\n        keyDerivationFunc: KeyDerivationAlgorithmIdentifier, // {{PBMAC1-KDFs}},\n        messageAuthScheme: MessageAuthenticationCodeAlgorithm}); // {{PBMAC1-MACs}}\n\n    var PasswordMACAlgorithm = Algorithm(PBMAC1params, {\n        encode: function (value) {\n            return {\n                algorithm: value.id,\n                parameters: {\n                    keyDerivationFunc: value.derivation,\n                    messageAuthScheme: value.hmac}};\n        },\n        decode: function (value) {\n            var algorithm = expand(algorithms[value.algorithm]);\n            algorithm.derivation = value.parameters.keyDerivationFunc;\n            algorithm.hmac = value.parameters.messageAuthScheme;\n            return algorithm;\n        }\n    });\n\n    var PasswordMACAlgorithmIdentifier = AlgorithmIdentifier({\n        'PBMAC1': PasswordMACAlgorithm\n    });\n\n    var ContentEncryptionAlgorithmIdentifier = AlgorithmIdentifier({\n        // Base encryption\n        'id-sc-gost28147-gfb': SCGostAlgorithm,\n        'id-Gost28147-89': Gost2814789Algorithm,\n        // Password based encryption\n        'pbeWithSHAAndAES128-CBC': PBES1Algorithm,\n        'pbeWithSHAAndAES192-CBC': PBES1Algorithm,\n        'pbeWithSHAAndAES256-CBC': PBES1Algorithm,\n        'pbeWithSHA256AndAES128-CBC': PBES1Algorithm,\n        'pbeWithSHA256AndAES192-CBC': PBES1Algorithm,\n        'pbeWithSHA256AndAES256-CBC': PBES1Algorithm,\n        'id-sc-pbeWithGost3411AndGost28147': PBES1Algorithm,\n        'id-sc-pbeWithGost3411AndGost28147CFB': PBES1Algorithm,\n        // PKCS12 PBES1 \n        'pbeWithSHAAnd3-KeyTripleDES-CBC': PBES1Algorithm,\n        'pbeWithSHAAnd2-KeyTripleDES-CBC': PBES1Algorithm,\n        'pbeWithSHAAnd128BitRC2-CBC': PBES1Algorithm,\n        'pbeWithSHAAnd40BitRC2-CBC': PBES1Algorithm,\n        'pbeUnknownGost': PBES1Algorithm,\n        // PBES2\n        'PBES2': PBES2Algorithm\n    });\n\n\n\n    /*\n     * Public Key Info \n     * \n     * http://tools.ietf.org/html/rfc5280\n     * \n     */\n\n    var KeyData = ENCLOSURE;\n\n    var DHPublicKey = KeyData(BIT_STRING(ENCAPSULATES(INTEGER)), {\n        encode: function (value) {\n            return Int16.encode(swapBytes(value));\n        },\n        decode: function (value) {\n            return swapBytes(Int16.decode(value));\n        }\n    });\n\n    var ECDHPublicKey = KeyData(BIT_STRING(ENCAPSULATES(OCTET_STRING)), {\n        encode: function (value) {\n            var r = new Uint8Array(value.byteLength + 1),\n                    d = swapBytes(value),\n                    len = value.byteLength / 2;\n            r[0] = 0x04; // type hex;\n            r.set(new Uint8Array(d, len, len), 1); // x\n            r.set(new Uint8Array(d, 0, len), len + 1); // y\n            return r.buffer;\n        },\n        decode: function (value) {\n            assert((value.byteLength & 1) === 0);\n            var d = new Uint8Array(value.byteLength - 1),\n                    len = d.byteLength / 2;\n            d.set(new Uint8Array(value, len + 1, len), 0); // y\n            d.set(new Uint8Array(value, 1, len), len); // x\n            return swapBytes(d);\n        }\n    });\n\n    var GostR3410PublicKey = BIT_STRING(ENCAPSULATES(OCTET_STRING));\n\n    /**\n     * Subject Public Key Info Syntax X.509\n     * <pre>\n     *  SubjectPublicKeyInfo  ::=  SEQUENCE  {\n     *      algorithm            AlgorithmIdentifier,\n     *      subjectPublicKey     BIT STRING  }\n     *  \n     *  AlgorithmIdentifier  ::=  SEQUENCE  {\n     *      algorithm               OBJECT IDENTIFIER,\n     *      parameters              ANY DEFINED BY algorithm OPTIONAL  }\n     -- contains a value of the type\n     -- registered for use with the\n     -- algorithm object identifier value     \n     * </pre>\n     * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280} \n     * @class GostASN1.SubjectPublicKeyInfo\n     * @extends GostASN1.Sequence\n     * @property {AlgorithmIdentifier} algorithm Identifies the public-key algorithm.\n     * @property {CryptoOperationData} subjectPublicKey An binary data whose contents are the value of the public key\n     */\n    var SubjectPublicKeyInfo = SEQUENCE({\n        algorithm: KeyAlgorithmIdentifier,\n        subjectPublicKey: BIT_STRING}, 'PUBLIC KEY');\n\n    var GostSubjectPublicKeyInfo = (function (PKTypes) {\n\n        /**\n         * Coding methods for {@link Algorithm} and {@link GostASN1.SubjectPublicKeyInfo}\n         * Supported types for GOST algorithms:\n         * <pre>\n         *  {\n         *      'id-sc-gostR3410-2001': ECDHPublicKey,\n         *      'id-sc-gostR3410-94': DHPublicKey,\n         *      'id-GostR3410-2001': GostR3410PublicKey,\n         *      'id-GostR3410-94': GostR3410PublicKey,\n         *      'id-tc26-gost3410-12-256': GostR3410PublicKey,\n         *      'id-tc26-gost3410-12-512': GostR3410PublicKey\n         *  }\n         * </pre>\n         * \n         * @class GostASN1.GostSubjectPublicKeyInfo\n         * @extends GostASN1.SubjectPublicKeyInfo\n         * @extends Key\n         */\n        return ENCLOSURE(ATTRIBUTE({\n            algorithm: KeyAlgorithmIdentifier,\n            subjectPublicKey: ANY},\n        'algorithm', 'subjectPublicKey')(function (algorithm) {\n            return PKTypes[algorithm.id];\n        }), {\n            encode: function (value) {\n                return {\n                    algorithm: value.algorithm,\n                    subjectPublicKey: value.buffer\n                };\n            },\n            decode: function (value) {\n                return {\n                    algorithm: value.algorithm,\n                    type: 'public',\n                    extractable: true,\n                    usages: ['verify', 'deriveKey', 'deriveBits'],\n                    buffer: value.subjectPublicKey\n                };\n            }\n        });\n    })({\n        'id-sc-gostR3410-2001': ECDHPublicKey,\n        'id-sc-gostR3410-94': DHPublicKey,\n        'id-GostR3410-2001': GostR3410PublicKey,\n        'id-GostR3410-94': GostR3410PublicKey,\n        'id-tc26-gost3410-12-256': GostR3410PublicKey,\n        'id-tc26-gost3410-12-512': GostR3410PublicKey\n    });\n\n\n    /*\n     * Private Key Info PKCS#8\n     * \n     * http://tools.ietf.org/html/rfc5208\n     * \n     */\n\n    var PrivateKey = OCTET_STRING;\n\n    var DHPrivateKey = KeyData(PrivateKey(ENCAPSULATES(INTEGER)), {\n        encode: function (value) { // for SignalCom INTEGER d\n            return SInt.encode(value, true);\n        },\n        decode: function (value) {\n            return SInt.decode(value, true);\n        }\n    });\n\n    var GostR3410KeyValueMask = OCTET_STRING;\n\n    var GostR3410KeyValueInfo = SEQUENCE({\n        keyValueMask: GostR3410KeyValueMask,\n        keyValyePublicKey: OCTET_STRING});\n\n    var GostR3410PrivateKey = CHOICE({\n        privateKey: PrivateKey(ENCAPSULATES(CHOICE({\n            keyValueMask: GostR3410KeyValueMask,\n            keyValueInfo: GostR3410KeyValueInfo\n        }, function (value) {\n            if (isBinary(value))\n                return 'keyValueMask';\n            else\n                return 'keyValueInfo';\n        }))),\n        keyValueMask: GostR3410KeyValueMask\n    }, function (value) {\n        return value.enclosed ? 'keyValueMask' : 'privateKey';\n    });\n\n    var GostWrappedPrivateKey = (function (PKTypes) {\n\n        /**\n         * Gost Wrapped Private Key for SignalCom key container\n         * \n         * @class GostASN1.GostWrappedPrivateKey\n         * @extends GostASN1.PrivateKeyInfo\n         */\n        return ATTRIBUTE({\n            version: Version,\n            privateKeyAlgorithm: KeyAlgorithmIdentifier,\n            privateKeyWrapped: KeyData(PrivateKey(ENCAPSULATES(SEQUENCE({\n                keyData: INTEGER,\n                keyMac: INTEGER\n            }))), {\n                encode: function (value) {\n                    var size = value.byteLength - 4;\n                    return {\n                        keyData: SInt.encode(new Uint8Array(value, 0, size)),\n                        keyMac: SInt.encode(new Uint8Array(value, size, 4))\n                    };\n                },\n                decode: function (value) {\n                    var data = SInt.decode(value.keyData),\n                            mac = SInt.decode(value.keyMac),\n                            result = new Uint8Array(data.byteLength + mac.byteLength);\n                    result.set(new Uint8Array(data));\n                    result.set(new Uint8Array(mac), data.byteLength);\n                    return result;\n                }\n            }),\n            attributes: ANY\n        }, 'privateKeyAlgorithm', 'attributes')(function (algorithm) {\n            return OPTIONAL(CTX(0, IMPLICIT(Attributes({\n                'id-sc-gostR3410-2001-publicKey': SET_OF_SINGLE(PKTypes[algorithm.id])\n            }))));\n        });\n    })({\n        // Signature keys\n        'id-sc-gostR3410-2001': ECDHPublicKey,\n        'id-sc-gostR3410-94': DHPublicKey,\n        'id-GostR3410-2001': GostR3410PublicKey,\n        'id-GostR3410-94': GostR3410PublicKey,\n        'id-GostR3410-2001DH': GostR3410PublicKey,\n        'id-GostR3410-94DH': GostR3410PublicKey,\n        'id-tc26-gost3410-12-256': GostR3410PublicKey,\n        'id-tc26-gost3410-12-512': GostR3410PublicKey,\n        'id-tc26-agreement-gost-3410-12-256': GostR3410PublicKey,\n        'id-tc26-agreement-gost-3410-12-512': GostR3410PublicKey\n    });\n\n    /**\n     * Private-Key Information Syntax PKSC#8\n     * <pre>\n     *  -- Private-key information syntax\n     *\n     *  PrivateKeyInfo ::= SEQUENCE {\n     *      version Version,\n     *      privateKeyAlgorithm AlgorithmIdentifier {{PrivateKeyAlgorithms}},\n     *      privateKey PrivateKey,\n     *      attributes [0] Attributes OPTIONAL }\n     *\n     *  Version ::= INTEGER {v1(0)} (v1,...)\n     *\n     *  PrivateKey ::= OCTET STRING\n     *\n     *  Attributes ::= SET OF Attribute\n     * </pre>\n     * RFC 5208 references {@link http://tools.ietf.org/html/rfc5208} \n     * @class GostASN1.PrivateKeyInfo\n     * @extends GostASN1.Sequence\n     * @property {number} version The syntax version number. Should be 0\n     * @property {AlgorithmIndentifier} privateKeyAlgorithm Identifies the private-key algorithm\n     * @property {CryptoOperationData} privateKey Is an binary data whose contents are the value of the private key.  \n     * @property {GostASN1.Attributes} attributes A set of attributes\n     */\n    var PrivateKeyInfo = SEQUENCE({\n        version: Version,\n        privateKeyAlgorithm: KeyAlgorithmIdentifier,\n        privateKey: PrivateKey,\n        attributes: OPTIONAL(CTX(0, IMPLICIT(Attributes)))}, 'PRIVATE KEY');\n\n    var PrivateKeyAlgorithmIdentifier = KeyAlgorithmIdentifier;\n\n    var PublicKey = BIT_STRING;\n\n    var OneAsymmetricKey = SEQUENCE({\n        version: Version,\n        privateKeyAlgorithm: PrivateKeyAlgorithmIdentifier,\n        privateKey: PrivateKey,\n        attributes: OPTIONAL(CTX(0, IMPLICIT(Attributes))),\n        publicKey: OPTIONAL(CTX(1, IMPLICIT(PublicKey)))});\n\n    var AsymmetricKeyPackage = SEQUENCE_OF(OneAsymmetricKey);\n\n    var GostPrivateKeyInfo = (function (PKTypes) {\n\n        /**\n         * Coding methods for {@link Algorithm} and {@link GostASN1.PrivateKeyInfo}\n         * Supported types for GOST algorithms:\n         * <pre>\n         *  {\n         *      'id-sc-gostR3410-2001': DHPrivateKey,\n         *      'id-sc-gostR3410-94': DHPrivateKey,\n         *      'id-GostR3410-2001': GostR3410PrivateKey,\n         *      'id-GostR3410-94': GostR3410PrivateKey,\n         *      'id-tc26-gost3410-12-256': GostR3410PrivateKey,\n         *      'id-tc26-gost3410-12-512': GostR3410PrivateKey\n         *  }\n         * </pre>\n         * \n         * @class GostASN1.GostPrivateKeyInfo\n         * @extends GostASN1.PrivateKeyInfo\n         * @extends Key\n         */\n        return ENCLOSURE(ATTRIBUTE({\n            version: Version,\n            privateKeyAlgorithm: KeyAlgorithmIdentifier,\n            privateKey: ANY,\n            attributes: OPTIONAL(CTX(0, IMPLICIT(Attributes)))},\n        'privateKeyAlgorithm', 'privateKey')(function (algorithm) {\n            return PKTypes[algorithm.id];\n        }), {\n            encode: function (value) {\n                return {\n                    version: 0,\n                    privateKeyAlgorithm: value.algorithm,\n                    privateKey: value.buffer\n                };\n            },\n            decode: function (value) {\n                return {\n                    algorithm: value.privateKeyAlgorithm,\n                    type: 'private',\n                    extractable: true,\n                    usages: ['sign', 'deriveKey', 'deriveBits'],\n                    buffer: isBinary(value.privateKey) ? value.privateKey :\n                            value.privateKey.keyValueMask\n                };\n            }\n        });\n    })({\n        // Signature keys\n        'id-sc-gostR3410-2001': DHPrivateKey,\n        'id-sc-gostR3410-94': DHPrivateKey,\n        'id-GostR3410-2001': GostR3410PrivateKey,\n        'id-GostR3410-94': GostR3410PrivateKey,\n        'id-GostR3410-2001DH': GostR3410PrivateKey,\n        'id-GostR3410-94DH': GostR3410PrivateKey,\n        'id-tc26-gost3410-12-256': GostR3410PrivateKey,\n        'id-tc26-gost3410-12-512': GostR3410PrivateKey,\n        'id-tc26-agreement-gost-3410-12-256': GostR3410PrivateKey,\n        'id-tc26-agreement-gost-3410-12-512': GostR3410PrivateKey\n    });\n\n    var KeyEncryptedData = OCTET_STRING;\n    /**\n     * Encrypted Private-Key Information Syntax\n     * <pre>\n     *  -- Encrypted private-key information syntax\n     *\n     *  EncryptedPrivateKeyInfo ::= SEQUENCE {\n     *      encryptionAlgorithm AlgorithmIdentifier {{KeyEncryptionAlgorithms}},\n     *      encryptedData KeyEncryptedData\n     *  }\n     *\n     *  KeyEncryptedData ::= OCTET STRING\n     *\n     *  PrivateKeyAlgorithms ALGORITHM-IDENTIFIER ::= {\n     *      ... -- For local profiles\n     *  }\n     *\n     *  KeyEncryptionAlgorithms ALGORITHM-IDENTIFIER ::= {\n     *      ... -- For local profiles\n     *  }\n     * </pre>\n     * RFC 5208 references {@link http://tools.ietf.org/html/rfc5208} \n     * @class GostASN1.EncryptedPrivateKeyInfo\n     * @extends GostASN1.Sequence\n     * @property {AlgorithmIdentifier} encryptionAlgorithm Identifies key encryption algorithm\n     * @property {CryptoOperationData} encryptedData Encrypted {@link GostASN1.PrivateKeyInfo}\n     */\n    var EncryptedPrivateKeyInfo = SEQUENCE({\n        encryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\n        encryptedData: KeyEncryptedData}, 'ENCRYPTED PRIVATE KEY');\n\n\n    /*\n     * Certificate Extensions\n     * \n     * http://tools.ietf.org/html/rfc5280\n     * \n     */\n    var UniqueIdentifier = BIT_STRING;\n\n    var CertificateSerialNumber = INTEGER;\n\n    var BasicConstraints = SEQUENCE({\n        cA: DEFAULT(BOOLEAN, false),\n        pathLenConstraint: OPTIONAL(INTEGER)\n    });\n\n    var KeyUsage = BIT_STRING({\n        digitalSignature: 0,\n        nonRepudiation: 1,\n        keyEncipherment: 2,\n        dataEncipherment: 3,\n        keyAgreement: 4,\n        keyCertSign: 5,\n        cRLSign: 6,\n        encipherOnly: 7,\n        decipherOnly: 8});\n    var KeyPurposeId = OBJECT_IDENTIFIER,\n            ExtKeyUsageSyntax = SEQUENCE_OF(KeyPurposeId);\n\n    var KeyIdentifier = OCTET_STRING;\n\n    var OtherName = SEQUENCE({\n        type: OBJECT_IDENTIFIER,\n        value: CTX(0, EXPLICIT(ANY))});\n\n    var EDIPartyName = SEQUENCE({\n        nameAssigner: OPTIONAL(CTX(0, IMPLICIT(DirectoryString))),\n        partyName: OPTIONAL(CTX(1, IMPLICIT(DirectoryString)))});\n\n    var ORAddress = SEQUENCE({});\n\n    var GeneralName = CHOICE({\n        otherName: CTX(0, IMPLICIT(OtherName)),\n        rfc822Name: CTX(1, IMPLICIT(DirectoryString)),\n        dNSName: CTX(2, IMPLICIT(DirectoryString)),\n        x400Address: CTX(3, IMPLICIT(ORAddress)),\n        directoryName: CTX(4, EXPLICIT(Name)), // Name is CHOICE(RDNSequence)\n        ediPartyName: CTX(5, IMPLICIT(EDIPartyName)),\n        uniformResourceIdentifier: CTX(6, IMPLICIT(DirectoryString)),\n        iPAddress: CTX(7, IMPLICIT(OCTET_STRING)),\n        registeredID: CTX(8, IMPLICIT(OBJECT_IDENTIFIER))}, function (value) {\n        return typeof value === 'string' || value instanceof String ?\n                (value.indexOf('@') >= 0 ? 'rfc822Name' : 'dNSName') :\n                isBinary(value) ? 'iPAddress' : 'directoryName';\n    });\n\n    var GeneralNames = SEQUENCE_OF(GeneralName);\n\n    var AuthorityKeyIdentifier = SEQUENCE({\n        keyIdentifier: OPTIONAL(CTX(0, IMPLICIT(KeyIdentifier))),\n        authorityCertIssuer: OPTIONAL(CTX(1, IMPLICIT(GeneralNames))),\n        authorityCertSerialNumber: OPTIONAL(CTX(2, IMPLICIT(CertificateSerialNumber)))});\n\n    var PrivateKeyUsagePeriod = SEQUENCE({\n        notBefore: OPTIONAL(CTX(0, IMPLICIT(GeneralizedTime))),\n        notAfter: OPTIONAL(CTX(1, IMPLICIT(GeneralizedTime)))});\n\n    var CertPolicyId = OBJECT_IDENTIFIER,\n            PolicyQualifierId = OBJECT_IDENTIFIER;\n\n    var PolicyQualifierInfo = SEQUENCE({\n        policyQualifierId: PolicyQualifierId,\n        qualifier: ANY});\n\n    var PolicyInformation = SEQUENCE({\n        policyIdentifier: CertPolicyId,\n        policyQualifiers: OPTIONAL(SEQUENCE_OF(PolicyQualifierInfo))});\n\n    var PolicyMapping = SEQUENCE({\n        issuerDomainPolicy: CertPolicyId,\n        subjectDomainPolicy: CertPolicyId});\n\n    var BaseDistance = INTEGER;\n\n    var GeneralSubtree = SEQUENCE({\n        base: GeneralName,\n        minimum: DEFAULT(CTX(0, IMPLICIT(BaseDistance)), 0),\n        maximum: OPTIONAL(CTX(1, IMPLICIT(BaseDistance)))});\n\n    var GeneralSubtrees = SEQUENCE_OF(GeneralSubtree);\n\n    var NameConstraints = SEQUENCE({\n        permittedSubtrees: OPTIONAL(CTX(0, IMPLICIT(GeneralSubtrees))),\n        excludedSubtrees: OPTIONAL(CTX(1, IMPLICIT(GeneralSubtrees)))});\n\n    var SkipCerts = INTEGER;\n\n    var PolicyConstraints = SEQUENCE({\n        requireExplicitPolicy: OPTIONAL(CTX(0, IMPLICIT(SkipCerts))),\n        inhibitPolicyMapping: OPTIONAL(CTX(1, IMPLICIT(SkipCerts)))});\n\n    var ReasonFlags = BIT_STRING({\n        unused: 0,\n        keyCompromise: 1,\n        cACompromise: 2,\n        affiliationChanged: 3,\n        superseded: 4,\n        cessationOfOperation: 5,\n        certificateHold: 6,\n        privilegeWithdrawn: 7,\n        aACompromise: 8});\n\n    var DistributionPointName = CHOICE({\n        fullName: CTX(0, IMPLICIT(GeneralNames)),\n        nameRelativeToCRLIssuer: CTX(1, IMPLICIT(RelativeDistinguishedName))}, function (value) {\n        return value instanceof Array ? 'fullName' : 'nameRelativeToCRLIssuer';\n    });\n\n    var DistributionPoint = SEQUENCE({\n        distributionPoint: OPTIONAL(CTX(0, EXPLICIT(DistributionPointName))), // DistributionPointName CHOICE\n        reasons: OPTIONAL(CTX(1, IMPLICIT(ReasonFlags))),\n        cRLIssuer: OPTIONAL(CTX(2, IMPLICIT(GeneralNames)))});\n\n    var CRLDistributionPoints = SEQUENCE_OF(DistributionPoint);\n\n    var FreshestCRL = CRLDistributionPoints;\n\n    var AccessDescription = SEQUENCE({\n        accessMethod: OBJECT_IDENTIFIER,\n        accessLocation: GeneralName});\n\n    var Extension = function (typeSet, defaultCritical) {\n\n        var Attribute = ATTRIBUTE({\n            extnID: OBJECT_IDENTIFIER,\n            critical: DEFAULT(BOOLEAN, false),\n            extnValue: function (type) {\n                return OCTET_STRING(ENCAPSULATES(type));\n            }\n        }, 'extnID', 'extnValue');\n\n        var Class = extend(Attribute(typeSet), {\n            object: {\n                get: function () {\n                    var value = this._get(Class.super, 'object');\n                    if (value && typeof value.extnValue === 'object')\n                        this.defineValue(value.extnValue);\n                    return value;\n                },\n                set: function (object) {\n                    this._set(Class.super, 'object', object);\n                    // Define critical\n                    if (object && object.extnValue)\n                        if (object.extnValue.critical !== undefined)\n                            this.critical = object.extnValue.critical;\n                        else if (this.critical === undefined && defaultCritical)\n                            this.critical = defaultCritical(this.extnID, object.extnValue);\n                }\n            },\n            extnValue: {\n                get: function () {\n                    // Get value property of object\n                    var value = this._get(Class.super, 'extnValue');\n                    if (typeof value === 'object')\n                        this.defineValue(value);\n                    return value;\n                },\n                set: function (object) {\n                    // Set value property of object\n                    this._set(Class.super, 'extnValue', object);\n                    // Define critical\n                    if (object) {\n                        if (object.critical !== undefined)\n                            this.critical = object.critical;\n                        else if (this.critical === undefined && defaultCritical)\n                            this.critical = defaultCritical(this.extnID, object);\n                    }\n                }\n            },\n            defineValue: function (value) {\n                if (typeof value === 'object')\n                    if (!getOwnPropertyDescriptor(value, 'critical')) {\n                        var self = global;\n                        defineProperty(value, 'critical', {\n                            get: function () {\n                                return self.critical;\n                            },\n                            set: function (value) {\n                                self.critical = value;\n                            },\n                            enumerable: true,\n                            configurable: false\n                        });\n                    }\n            }\n        });\n        return Class;\n    };\n\n    // http://base.garant.ru/70133464/#ixzz4KaOTGI1l\n    var IssuerSignTool = SEQUENCE({\n        signTool: UTF8String,\n        cATool: UTF8String,\n        signToolCert: UTF8String,\n        cAToolCert: UTF8String});\n\n    /**\n     * Extensions is a base class for extension attributes of certificates, CRLs, requests and etc.\n     * \n     * @class GostASN1.Extensions\n     * @extends GostASN1.Set\n     */\n    var Extensions = SEQUENCE_OF(Extension, {\n        typeName: 'extnID',\n        valueName: 'extnValue'\n    });\n\n    var CertExtensions = Extensions({\n        authorityKeyIdentifier: AuthorityKeyIdentifier,\n        subjectKeyIdentifier: KeyIdentifier,\n        keyUsage: KeyUsage,\n        privateKeyUsagePeriod: PrivateKeyUsagePeriod,\n        certificatePolicies: SEQUENCE_OF(PolicyInformation),\n        policyMappings: SEQUENCE_OF(PolicyMapping),\n        subjectAltName: GeneralNames,\n        issuerAltName: GeneralNames,\n        subjectDirectoryAttributes: AttributeSequence,\n        basicConstraints: BasicConstraints,\n        nameConstraints: NameConstraints,\n        policyConstraints: PolicyConstraints,\n        extKeyUsage: ExtKeyUsageSyntax,\n        cRLDistributionPoints: CRLDistributionPoints,\n        inhibitAnyPolicy: SkipCerts,\n        freshestCRL: FreshestCRL,\n        authorityInfoAccess: SEQUENCE_OF(AccessDescription),\n        subjectInfoAccess: SEQUENCE_OF(AccessDescription),\n        subjectSignTool: UTF8String,\n        issuerSignTool: IssuerSignTool\n    }, function (id, value) {\n        return id === 'keyUsage' ||\n                (id === 'basicConstraints' && value.pathLenConstraint === undefined);\n    });\n\n\n    /*\n     * Signature Values\n     * \n     * http://tools.ietf.org/html/rfc5280\n     * http://tools.ietf.org/html/rfc4491\n     * \n     */\n\n    /**\n     * Gost Signature encode signature values for different GOST signatures\n     * Support algorithms:\n     * <pre>\n     *  {\n     *      'id-GostR3410-94': GostR3410Signature,\n     *      'id-GostR3410-2001': GostR3410Signature,\n     *      'id-tc26-gost3410-12-256': GostR3410Signature,\n     *      'id-tc26-gost3410-12-512': GostR3410Signature,\n     *      'id-GostR3411-94-with-GostR3410-2001': GostR3410Signature,\n     *      'id-GostR3411-94-with-GostR3410-94': GostR3410Signature,\n     *      'id-tc26-signwithdigest-gost3410-12-94': GostR3410Signature,\n     *      'id-tc26-signwithdigest-gost3410-12-256': GostR3410Signature,\n     *      'id-tc26-signwithdigest-gost3410-12-512': GostR3410Signature,\n     *      'id-sc-gostR3410-94': ECDHSignature,\n     *      'id-sc-gostR3410-2001': ECDHSignature,\n     *      'id-sc-gostR3411-94-with-gostR3410-94': ECDHSignature,\n     *      'id-sc-gostR3411-94-with-gostR3410-2001': ECDHSignature\n     *  }\n     * </pre>\n     * \n     * @class GostASN1.GostSignature\n     * @extends GostASN1.Sequence\n     */\n\n    // SignalCom signature\n    var ECDHSignature = SEQUENCE({\n        r: INTEGER,\n        s: INTEGER});\n\n    var GostR3410Signature = ANY;\n\n    // Signature value (only need for CryptoPro\n//    var GostSignature = extend(CHOICE({\n//        ecdhSignature: ECDHSignature}, 'ecdhSignature'));\n    var GostSignature = ECDHSignature;\n\n\n\n    /*\n     * Certificate\n     * \n     * http://tools.ietf.org/html/rfc5280\n     * \n     */\n\n    /**\n     * The sequence TBSCertificate contains information associated with the\n     * subject of the certificate and the CA who issued it.  Every\n     * TBSCertificate contains the names of the subject and issuer, a public\n     * key associated with the subject, a validity period, a version number,\n     * and a serial number; some MAY contain optional unique identifier\n     * fields.  The remainder of this section describes the syntax and\n     * semantics of these fields.  A TBSCertificate usually includes\n     * extensions. \n     * <pre>\n     *  TBSCertificate  ::=  SEQUENCE  {\n     *       version         [0]  EXPLICIT Version DEFAULT v1,\n     *       serialNumber         CertificateSerialNumber,\n     *       signature            AlgorithmIdentifier,\n     *       issuer               Name,\n     *       validity             Validity,\n     *       subject              Name,\n     *       subjectPublicKeyInfo SubjectPublicKeyInfo,\n     *       issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n     *                            -- If present, version MUST be v2 or v3\n     *       subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n     *                            -- If present, version MUST be v2 or v3\n     *       extensions      [3]  EXPLICIT Extensions OPTIONAL\n     *                            -- If present, version MUST be v3\n     *       }\n     *\n     *  Version  ::=  INTEGER  {  v1(0), v2(1), v3(2)  }\n     *\n     *  CertificateSerialNumber  ::=  INTEGER\n     *\n     *  Validity ::= SEQUENCE {\n     *       notBefore      Time,\n     *       notAfter       Time }\n     *\n     *  Time ::= CHOICE {\n     *       utcTime        UTCTime,\n     *       generalTime    GeneralizedTime }\n     *\n     *  UniqueIdentifier  ::=  BIT STRING\n     *\n     *  SubjectPublicKeyInfo  ::=  SEQUENCE  {\n     *       algorithm            AlgorithmIdentifier,\n     *       subjectPublicKey     BIT STRING  }\n     *\n     *  Extensions  ::=  SEQUENCE SIZE (1..MAX) OF Extension\n     *\n     *  Extension  ::=  SEQUENCE  {\n     *       extnID      OBJECT IDENTIFIER,\n     *       critical    BOOLEAN DEFAULT FALSE,\n     *       extnValue   OCTET STRING  }\n     * </pre>\n     * See {@link GostASN1.Certificate} and {@link GostASN1.SubjectPublicKeyInfo}<br><br>\n     * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280} \n     * \n     * @class GostASN1.TBSCertificate\n     * @extends GostASN1.Sequence\n     * @extends GostASN1.Validity\n     * @property {number} version The version of the encoded certificate\n     * @property {(number|string)} serialNumber The serial number MUST be a positive integer assigned by the CA to each certificate.\n     * @property {AlgorithmIdentifier} signature The algorithm identifier for the algorithm used by the CA to sign the certificate.\n     * @property {GostASN1.Name} issuer The issuer field identifies the entity that has signed and issued the certificate.\n     * @property {GostASN1.Validity} validity The certificate validity period\n     * @property {GostASN1.Name} subject The subject field identifies the entity associated with the public key stored in the subject public key field.\n     * @property {GostASN1.SubjectPublicKeyInfo} subject The public key and identify the algorithm with which the key is used\n     * @property {CryptoOperationData} issuerUniqueID The issuer unique identifier\n     * @property {CryptoOperationData} subjectUniqueID The subject unique identifier\n     * @property {GostASN1.Extensions} extensions The extensions defined for X.509 v3 certificates\n     */\n    var TBSCertificate = COMBINE(SEQUENCE({\n        version: CTX(0, EXPLICIT(Version)),\n        serialNumber: CertificateSerialNumber,\n        signature: SignatureAlgorithmIdentifier,\n        issuer: Name,\n        validity: Validity,\n        subject: Name,\n        subjectPublicKeyInfo: SubjectPublicKeyInfo,\n        issuerUniqueID: OPTIONAL(CTX(1, IMPLICIT(UniqueIdentifier))), // If present, version MUST be v2 or v3        \n        subjectUniqueID: OPTIONAL(CTX(2, IMPLICIT(UniqueIdentifier))), // If present, version MUST be v2 or v3\n        extensions: OPTIONAL(CTX(3, EXPLICIT(CertExtensions)))})); // If present, version MUST be v3        \n\n    /**\n     * The X.509 v3 certificate basic syntax is as follows.  For signature\n     * calculation, the data that is to be signed is encoded using the ASN.1\n     * distinguished encoding rules (DER) [X.690].  ASN.1 DER encoding is a\n     * tag, length, value encoding system for each element.\n     * <pre>\n     *  Certificate  ::=  SEQUENCE  {\n     *       tbsCertificate       TBSCertificate,\n     *       signatureAlgorithm   AlgorithmIdentifier,\n     *       signatureValue       BIT STRING  }\n     * </pre>\n     * See {@link GostASN1.TBSCertificate}<br><br>\n     * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280} \n     * \n     * @class GostASN1.Certificate\n     * @extends GostASN1.TBSCertificate\n     * @property {GostASN1.TBSCertificate} tbsCertificate The sequence TBSCertificate\n     * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\n     * @property {CryptoOperationData} signatureValue Signature value\n     */\n    var Certificate = SEQUENCE({\n        tbsCertificate: TBSCertificate,\n        signatureAlgorithm: SignatureAlgorithmIdentifier,\n        signatureValue: BIT_STRING}, 'CERTIFICATE');\n\n\n    /*\n     * Certification Request\n     * \n     * http://tools.ietf.org/html/rfc2986\n     * \n     */\n\n    var ExtensionRequest = CertExtensions;\n\n    var CRIAttributes = Attributes({\n        challengePassword: SET_OF_SINGLE(DirectoryString),\n        extensionRequest: SET_OF_SINGLE(ExtensionRequest),\n        msCertExtensions: SET_OF_SINGLE(CertExtensions),\n        extendedCertificateAttributes: SET_OF_SINGLE(Attributes)});\n\n    /**\n     * Certification request information shall have ASN.1 type CertificationRequestInfo:\n     * <pre>\n     *  CertificationRequestInfo ::= SEQUENCE {\n     *       version       INTEGER { v1(0) } (v1,...),\n     *       subject       Name,\n     *       subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n     *       attributes    [0] Attributes{{ CRIAttributes }}\n     *  }\n     *\n     *  SubjectPublicKeyInfo { ALGORITHM : IOSet} ::= SEQUENCE {\n     *       algorithm        AlgorithmIdentifier {{IOSet}},\n     *       subjectPublicKey BIT STRING\n     *  }\n     *\n     *  PKInfoAlgorithms ALGORITHM ::= {\n     *       ...  -- add any locally defined algorithms here -- }\n     *\n     *  Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n     *\n     *  CRIAttributes  ATTRIBUTE  ::= {\n     *       ... -- add any locally defined attributes here -- }\n     *\n     *  Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n     *       type   ATTRIBUTE.&id({IOSet}),\n     *       values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n     *  }\n     * </pre>\n     * See {@link GostASN1.CertificationRequest} and {@link GostASN1.SubjectPublicKeyInfo}<br><br>\n     * RFC 2986 references {@link http://tools.ietf.org/html/rfc2986} \n     * \n     * @class GostASN1.CertificationRequestInfo\n     * @extends GostASN1.Sequence\n     * @property {number} version The version of the encoded request\n     * @property {GostASN1.Name} subject The subject field identifies the entity associated with the public key stored in the subject public key field.\n     * @property {GostASN1.SubjectPublicKeyInfo} subject The public key and identify the algorithm with which the key is used\n     * @property {GostASN1.Attributes} attributes The request attributes\n     */\n    var CertificationRequestInfo = COMBINE(SEQUENCE({\n        version: INTEGER,\n        subject: Name,\n        subjectPublicKeyInfo: SubjectPublicKeyInfo,\n        attributes: CTX(0, IMPLICIT(CRIAttributes))}));\n\n    /**\n     * A certification request consists of three parts: \"certification\n     * request information,\" a signature algorithm identifier, and a digital\n     * signature on the certification request information.  The\n     * certification request information consists of the entity's\n     * distinguished name, the entity's public key, and a set of attributes\n     * providing other information about the entity.\n     * <pre>\n     *  A certification request shall have ASN.1 type CertificationRequest:\n     *\n     *  CertificationRequest ::= SEQUENCE {\n     *       certificationRequestInfo CertificationRequestInfo,\n     *       signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n     *       signature          BIT STRING\n     *  }\n     *\n     *  AlgorithmIdentifier {ALGORITHM:IOSet } ::= SEQUENCE {\n     *       algorithm          ALGORITHM.&id({IOSet}),\n     *       parameters         ALGORITHM.&Type({IOSet}{@algorithm}) OPTIONAL\n     *  }\n     *\n     *  SignatureAlgorithms ALGORITHM ::= {\n     *       ... -- add any locally defined algorithms here -- }\n     * </pre>\n     * See {@link GostASN1.CertificationRequestInfo}\n     * RFC 2986 references {@link http://tools.ietf.org/html/rfc2986} \n     * \n     * @class GostASN1.CertificationRequest\n     * @extends GostASN1.CertificationRequestInfo\n     * @property {GostASN1.CertificationRequestInfo} requestInfo Request information\n     * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\n     * @property {CryptoOperationData} signatureValue Signature value\n     */\n    var CertificationRequest = SEQUENCE({\n        requestInfo: CertificationRequestInfo,\n        signatureAlgorithm: SignatureAlgorithmIdentifier,\n        signatureValue: BIT_STRING}, 'CERTIFICATE REQUEST');\n\n\n    /*\n     * Certificate Revocation List\n     * \n     * http://tools.ietf.org/html/rfc5280\n     * \n     */\n\n    var CRLNumber = INTEGER;\n\n    var CRLReason = ENUMERATED({\n        unspecified: 0,\n        keyCompromise: 1,\n        cACompromise: 2,\n        affiliationChanged: 3,\n        superseded: 4,\n        cessationOfOperation: 5,\n        certificateHold: 6,\n        removeFromCRL: 8,\n        privilegeWithdrawn: 9,\n        aACompromise: 10});\n\n    var IssuingDistributionPoint = SEQUENCE({\n        distributionPoint: OPTIONAL(CTX(0, EXPLICIT(DistributionPointName))), // DistributionPointName is CHOICE\n        onlyContainsUserCerts: DEFAULT(CTX(1, IMPLICIT(BOOLEAN)), false),\n        onlyContainsCACerts: DEFAULT(CTX(2, IMPLICIT(BOOLEAN)), false),\n        onlySomeReasons: OPTIONAL(CTX(3, IMPLICIT(ReasonFlags))),\n        indirectCRL: DEFAULT(CTX(4, IMPLICIT(BOOLEAN)), false),\n        onlyContainsAttributeCerts: DEFAULT(CTX(5, IMPLICIT(BOOLEAN)), false)});\n\n    var CLRExtensions = Extensions({\n        authorityKeyIdentifier: AuthorityKeyIdentifier,\n        issuerAltName: GeneralNames,\n        cRLNumber: CRLNumber,\n        deltaCRLIndicator: CRLNumber,\n        issuingDistributionPoint: IssuingDistributionPoint,\n        freshestCRL: FreshestCRL\n    }, function (id) {\n        return id === 'cRLNumber';\n    });\n\n    var CLREntryExtensions = Extensions({\n        cRLReason: CRLReason,\n        instructionCode: OBJECT_IDENTIFIER,\n        invalidityDate: GeneralizedTime,\n        certificateIssuer: GeneralNames});\n\n    /**\n     * This field is itself a sequence containing the name of the issuer, \n     * issue date, issue date of the next list, the optional list of revoked\n     * certificates, and optional CRL extensions.  When there are no revoked\n     * certificates, the revoked certificates list is absent.  When one or\n     * more certificates are revoked, each entry on the revoked certificate\n     * list is defined by a sequence of user certificate serial number,\n     * revocation date, and optional CRL entry extensions.\n     * <pre>\n     *  TBSCertList  ::=  SEQUENCE  {\n     *       version                 Version OPTIONAL,\n     *                                    -- if present, MUST be v2\n     *       signature               AlgorithmIdentifier,\n     *       issuer                  Name,\n     *       thisUpdate              Time,\n     *       nextUpdate              Time OPTIONAL,\n     *       revokedCertificates     SEQUENCE OF SEQUENCE  {\n     *            userCertificate         CertificateSerialNumber,\n     *            revocationDate          Time,\n     *            crlEntryExtensions      Extensions OPTIONAL\n     *                                          -- if present, MUST be v2\n     *                                 }  OPTIONAL,\n     *       crlExtensions           [0]  EXPLICIT Extensions OPTIONAL\n     *                                          -- if present, MUST be v2\n     *                                 }\n     * </pre>\n     * See {@link GostASN1.CertificateList}<br><br>\n     * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280} \n     * \n     * @class GostASN1.TBSCertList\n     * @extends GostASN1.Sequence\n     * @property {number} version The version of the encoded CRL\n     * @property {AlgorithmIdentifier} signature The algorithm identifier for the algorithm used to sign the CRL\n     * @property {Name} issuer The issuer name identifies the entity that has signed and issued the CRL\n     * @property {Date} thisUpdate The issue date of this CRL\n     * @property {Date} nextUpdate The date by which the next CRL will be issued\n     * @property {Array} revokedCertificates The revoked certificates are listed by their serial numbers\n     * @property {Extensions} crlExtensions The CRL extensions\n     */\n    var TBSCertList = COMBINE(SEQUENCE({\n        version: OPTIONAL(Version), // if present, MUST be v2\n        signature: SignatureAlgorithmIdentifier,\n        issuer: Name,\n        thisUpdate: Time,\n        nextUpdate: OPTIONAL(Time),\n        revokedCertificates: OPTIONAL(SEQUENCE_OF(SEQUENCE({\n            userCertificate: CertificateSerialNumber,\n            revocationDate: Time,\n            crlEntryExtensions: OPTIONAL(CLREntryExtensions) // if present, MUST be v2\n        }))),\n        crlExtensions: OPTIONAL(CTX(0, EXPLICIT(CLRExtensions)))})); // if present, MUST be v2\n\n    /**\n     * The X.509 v2 CRL syntax is as follows.  For signature calculation,\n     * the data that is to be signed is ASN.1 DER encoded.  ASN.1 DER\n     * encoding is a tag, length, value encoding system for each element.\n     * <pre>\n     *  CertificateList  ::=  SEQUENCE  {\n     *       tbsCertList          TBSCertList,\n     *       signatureAlgorithm   AlgorithmIdentifier,\n     *       signatureValue       BIT STRING  }\n     * </pre>\n     * See {@link GostASN1.TBSCertList}<br><br>\n     * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280} \n     * \n     * @class GostASN1.CertificateList\n     * @extends GostASN1.TBSCertList\n     * @property {GostASN1.TBSCertList} tbsCertList The tbsCertList\n     * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\n     * @property {CryptoOperationData} signatureValue Signature value\n     */\n    var CertificateList = SEQUENCE({\n        tbsCertList: TBSCertList,\n        signatureAlgorithm: SignatureAlgorithmIdentifier,\n        signatureValue: BIT_STRING}, 'CRL');\n\n\n    /*\n     * Attribute Certificate Definision\n     * http://tools.ietf.org/html/rfc5755\n     * \n     */\n\n    var AttCertVersion = INTEGER;\n\n    var ObjectDigestInfo = SEQUENCE({\n        digestedObjectType: ENUMERATED({\n            publicKey: 0,\n            publicKeyCert: 1,\n            otherObjectTypes: 2\n        }), // otherObjectTypes MUST NOT be used in this profile\n        otherObjectTypeID: OPTIONAL(OBJECT_IDENTIFIER),\n        digestAlgorithm: DigestAlgorithmIdentifier,\n        objectDigest: BIT_STRING});\n\n    var IssuerSerial = SEQUENCE({\n        issuer: GeneralNames,\n        serial: CertificateSerialNumber,\n        issuerUID: OPTIONAL(UniqueIdentifier)});\n\n    var V2Form = SEQUENCE({\n        issuerName: OPTIONAL(GeneralNames),\n        baseCertificateID: OPTIONAL(CTX(0, IMPLICIT(IssuerSerial))),\n        // issuerName MUST be present in this profile baseCertificateID and \n        // objectDigestInfo MUST NOT be present in this profile\n        objectDigestInfo: OPTIONAL(CTX(1, IMPLICIT(ObjectDigestInfo)))});\n\n    var TargetCert = SEQUENCE({\n        targetCertificate: IssuerSerial,\n        targetName: OPTIONAL(GeneralName),\n        certDigestInfo: OPTIONAL(ObjectDigestInfo)});\n\n    var Target = CHOICE({\n        targetName: CTX(0, EXPLICIT(GeneralName)), // GeneralName is CHOICE\n        targetGroup: CTX(1, EXPLICIT(GeneralName)),\n        targetCert: CTX(2, IMPLICIT(TargetCert))});\n\n    var Targets = SEQUENCE_OF(Target);\n\n    var AttCertExtensions = Extensions({\n        auditIdentity: OCTET_STRING,\n        targetInformation: Targets,\n        authorityKeyIdentifier: AuthorityKeyIdentifier,\n        authorityInfoAccess: SEQUENCE_OF(AccessDescription),\n        cRLDistributionPoints: CRLDistributionPoints,\n        noRevAvail: NULL\n    }, function (id) {\n        return id === 'auditIdentity' || id === 'targetInformation';\n    });\n\n    var Holder = SEQUENCE({\n        // the issuer and serial number of the holder's Public Key Certificate\n        baseCertificateID: OPTIONAL(CTX(0, IMPLICIT(IssuerSerial))),\n        // the name of the claimant or role\n        entityName: OPTIONAL(CTX(1, IMPLICIT(GeneralNames))),\n        // used to directly authenticate the holder, for example, an executable\n        objectDigestInfo: OPTIONAL(CTX(2, IMPLICIT(ObjectDigestInfo)))});\n\n    var AttCertIssuer = CHOICE({\n        v1Form: GeneralNames, // MUST NOT be used in this profile\n        v2Form: CTX(0, IMPLICIT(V2Form))}, 'v2Form');     // v2 only\n\n    var AttCertValidityPeriod = SEQUENCE({\n        notBeforeTime: GeneralizedTime,\n        notAfterTime: GeneralizedTime});\n\n    var SvceAuthInfo = SEQUENCE({\n        service: GeneralName,\n        ident: GeneralName,\n        authInfo: OPTIONAL(OCTET_STRING)});\n\n    var RoleSyntax = SEQUENCE({\n        roleAuthority: OPTIONAL(CTX(0, IMPLICIT(GeneralNames))),\n        roleName: CTX(1, EXPLICIT(GeneralName))}); // GeneralName is CHOICE\n\n    var ClassList = BIT_STRING({\n        unmarked: 0,\n        unclassified: 1,\n        restricted: 2,\n        confidential: 3,\n        secret: 4,\n        topSecret: 5});\n\n    var SecurityCategory = SEQUENCE({\n        type: CTX(0, IMPLICIT(OBJECT_IDENTIFIER)),\n        value: CTX(1, IMPLICIT(ANY))});\n\n    var Clearance = SEQUENCE({\n        policyId: CTX(0, IMPLICIT(OBJECT_IDENTIFIER)),\n        classList: DEFAULT(CTX(1, IMPLICIT(ClassList)), ['unclassified']),\n        securityCategories: OPTIONAL(CTX(2, IMPLICIT(SET_OF(SecurityCategory))))});\n\n    var IetfAttrSyntax = SEQUENCE({\n        policyAuthority: OPTIONAL(CTX(0, IMPLICIT(GeneralNames))),\n        values: SEQUENCE_OF(CHOICE({\n            octets: OCTET_STRING,\n            oid: OBJECT_IDENTIFIER,\n            string: UTF8String}, function (value) {\n            return isBinary ? 'octets' : getIdentifier(value) ? 'oid' : 'string';\n        }))});\n\n    /**\n     * X.509 Attribute Certificate Definition<br><br>\n     * \n     * X.509 contains the definition of an AC given below.  All types that\n     * are not defined in this document can be found in [PKIXPROF].\n     * <pre>\n     *           AttributeCertificateInfo ::= SEQUENCE {\n     *                version              AttCertVersion -- version is v2,\n     *                holder               Holder,\n     *                issuer               AttCertIssuer,\n     *                signature            AlgorithmIdentifier,\n     *                serialNumber         CertificateSerialNumber,\n     *                attrCertValidityPeriod   AttCertValidityPeriod,\n     *                attributes           SEQUENCE OF Attribute,\n     *                issuerUniqueID       UniqueIdentifier OPTIONAL,\n     *                extensions           Extensions OPTIONAL\n     *           }\n     * <pre>\n     * RFC 3281 references {@link http://tools.ietf.org/html/rfc3281} \n     * \n     * @class GostASN1.AttributeCertificateInfo\n     * @extends GostASN1.Sequence\n     * @property {number} version The version of the encoded certificate\n     * @property {GostASN1.Name} holder Identifies the holder.\n     * @property {GostASN1.Name} issuer Identifies the issuer.\n     * @property {AlgorithmIdentifier} signature The algorithm identifier for the algorithm used by the CA to sign the certificate.\n     * @property {(number|string)} serialNumber The serial number MUST be a positive integer assigned by the CA to each certificate.\n     * @property {GostASN1.Validity} attrCertValidityPeriod The certificate validity period\n     * @property {GostASN1.Attributes} attributes The certificate attributes\n     * @property {CryptoOperationData} issuerUniqueID The issuer unique identifier\n     * @property {GostASN1.Extensions} extensions The certificate extensions\n     */\n    var AttributeCertificateInfo = COMBINE(SEQUENCE({\n        version: AttCertVersion, // version is v2,\n        holder: Holder,\n        issuer: AttCertIssuer,\n        signature: SignatureAlgorithmIdentifier,\n        serialNumber: CertificateSerialNumber,\n        attrCertValidityPeriod: AttCertValidityPeriod,\n        attributes: AttributeSequence({\n            authenticationInfo: SET_OF(SvceAuthInfo),\n            accessIdentity: SET_OF(SvceAuthInfo),\n            chargingIdentity: SET_OF_SINGLE(IetfAttrSyntax),\n            group: SET_OF_SINGLE(IetfAttrSyntax),\n            role: SET_OF(RoleSyntax),\n            clearance: SET_OF(Clearance)\n        }),\n        issuerUniqueID: OPTIONAL(UniqueIdentifier),\n        extensions: OPTIONAL(AttCertExtensions)\n    }));\n\n    /**\n     * Attribute Certificate Profile<br></br>\n     *\n     * ACs may be used in a wide range of applications and environments\n     * covering a broad spectrum of interoperability goals and a broader\n     * spectrum of operational and assurance requirements.  The goal of this\n     * document is to establish a common baseline for generic applications\n     * requiring broad interoperability and limited special purpose\n     * requirements.  In particular, the emphasis will be on supporting the\n     * use of attribute certificates for informal Internet electronic mail,\n     * IPSec, and WWW applications.\n     * <pre>\n     *           AttributeCertificate ::= SEQUENCE {\n     *                acinfo               AttributeCertificateInfo,\n     *                signatureAlgorithm   AlgorithmIdentifier,\n     *                signatureValue       BIT STRING\n     *           }\n     * </pre>\n     * See {@link GostASN1.AttributeCertificateInfo}<br><br>\n     * RFC 3281 references {@link http://tools.ietf.org/html/rfc3281} \n     * \n     * @class GostASN1.AttributeCertificate\n     * @extends GostASN1.AttributeCertificateInfo\n     * @property {GostASN1.AttributeCertificateInfo} acinfo Attribute certificate information\n     * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\n     * @property {CryptoOperationData} signatureValue Signature value\n     */\n    var AttributeCertificate = SEQUENCE({\n        acinfo: AttributeCertificateInfo,\n        signatureAlgorithm: SignatureAlgorithmIdentifier,\n        signatureValue: BIT_STRING}, 'ATTRIBUTE CERTIFICATE');\n\n\n    /*\n     * Encrypted Key with CMS\n     * \n     * http://tools.ietf.org/html/rfc5652\n     * http://tools.ietf.org/html/rfc4490\n     * \n     */\n\n    // RecipientInfo\n    var EncryptedKey = OCTET_STRING;\n\n    var EncryptedContent = OCTET_STRING;\n\n    var SubjectKeyIdentifier = OCTET_STRING;\n\n    var UserKeyingMaterial = OCTET_STRING;\n\n    var ECCCMSSharedInfo = SEQUENCE({\n        keyInfo: KeyWrapAlgorithmIdentifier,\n        entityUInfo: OPTIONAL(CTX(0, EXPLICIT(OCTET_STRING))),\n        suppPubInfo: CTX(2, EXPLICIT(OCTET_STRING))\n    });\n\n    // GOST Key Transport & Key agreement rfc4490\n    var Gost2814789EncryptedKey = ENCLOSURE(SEQUENCE({\n        encryptedKey: Gost2814789Key,\n        maskKey: OPTIONAL(CTX(0, IMPLICIT(Gost2814789Key))),\n        macKey: Gost2814789MAC\n    }), {\n        encode: function (value) {\n            // wrappedKey: (CEK_ENC(32) | CEK_MAC(4))\n            var encryptedKey = new Uint8Array(new Uint8Array(value, 0, 32)).buffer,\n                    macKey = new Uint8Array(new Uint8Array(value, 32, 4)).buffer;\n            return {// from wrapped key\n                encryptedKey: encryptedKey,\n                macKey: macKey\n            };\n        },\n        decode: function (value) {\n            var encryptedKey = value.encryptedKey,\n                    maskKey = value.maskKey,\n                    macKey = value.macKey;\n            if (maskKey) {\n                var m = new Int32Array(maskKey), k = new Int32Array(encryptedKey);\n                for (var i = 0, n = m.length / k.length; i < n; i++) {\n                    for (var j = 0, l = k.length; j < l; j++)\n                        k[j] = (k[j] + m[l * i + j]) & 0xffffffff;\n                }\n            }\n            var result = new Uint8Array(encryptedKey.byteLength + macKey.byteLength);\n            result.set(new Uint8Array(encryptedKey), 0);\n            result.set(new Uint8Array(macKey), 32);\n            return result.buffer;\n        }\n    });\n\n\n    var GostR3410TransportParameters = SEQUENCE({\n        encryptionParamSet: Gost2814789ParamSet,\n        ephemeralPublicKey: OPTIONAL(CTX(0, IMPLICIT(GostSubjectPublicKeyInfo))),\n        ukm: OCTET_STRING}); // ( SIZE(8) )\n\n    var GostR3410KeyTransport = ENCLOSURE(SEQUENCE({\n        sessionEncryptedKey: Gost2814789EncryptedKey,\n        transportParameters: OPTIONAL(CTX(0, IMPLICIT(GostR3410TransportParameters)))\n    }), {\n        encode: function (value) {\n            var algorithm = value.algorithm;\n            return {\n                sessionEncryptedKey: value.sessionEncryptedKey,\n                transportParameters: {\n                    encryptionParamSet: attributes['sBox'][algorithm.wrapping.sBox || 'E-A'],\n                    ephemeralPublicKey: algorithm['public'],\n                    ukm: algorithm.ukm\n                }\n            };\n        },\n        decode: function (value) {\n            return {\n                algorithm: {\n                    wrapping: parameters[value.transportParameters.encryptionParamSet],\n                    ukm: value.transportParameters.ukm,\n                    'public': value.transportParameters.ephemeralPublicKey\n                },\n                sessionEncryptedKey: value.sessionEncryptedKey\n            };\n        }\n    });\n\n    var SCGostKeyTransport = ENCLOSURE(SEQUENCE({\n        sessionEncryptedKey: Gost2814789EncryptedKey,\n        ukm: SEQUENCE({\n            ephemeralPublicKey: GostSubjectPublicKeyInfo,\n            addedukm: OPTIONAL(CTX(0, EXPLICIT(UserKeyingMaterial)))})\n    }), {\n        encode: function (value) {\n            var algorithm = value.algorithm;\n            return {\n                sessionEncryptedKey: value.sessionEncryptedKey,\n                ukm: {\n                    ephemeralPublicKey: algorithm['public'],\n                    addedukm: algorithm.ukm\n                }\n            };\n        },\n        decode: function (value) {\n            return {\n                algorithm: {\n                    ukm: value.ukm.addedukm,\n                    'public': value.ukm.ephemeralPublicKey\n                },\n                sessionEncryptedKey: value.sessionEncryptedKey\n            };\n        }\n    });\n\n    var GostEncryptedKey = (function (typeSet) {\n        /**\n         * Gost Encrypted key encoder for CMS\n         * \n         * @class GostASN1.GostEncryptedKey\n         * @extends GostASN1.Sequence\n         * @param {AlgorithmIdentifier} algorithm\n         */\n        return function (algorithm) {\n            var type = typeSet[algorithm.id];\n            return type ? ENCAPSULATES(type) : ANY;\n        };\n    })({\n        // Key transport algorithms\n        'id-sc-gostR3410-2001': SCGostKeyTransport,\n        'id-sc-gostR3410-94': SCGostKeyTransport,\n        'id-GostR3410-2001': GostR3410KeyTransport,\n        'id-GostR3410-94': GostR3410KeyTransport,\n        'id-tc26-gost3410-12-256': GostR3410KeyTransport,\n        'id-tc26-gost3410-12-512': GostR3410KeyTransport,\n        // Key agreement algorithms\n        'id-GostR3410-94-CryptoPro-ESDH': Gost2814789EncryptedKey,\n        'id-GostR3410-2001-CryptoPro-ESDH': Gost2814789EncryptedKey,\n        'id-tc26-agreement-gost-3410-12-256': Gost2814789EncryptedKey,\n        'id-tc26-agreement-gost-3410-12-512': Gost2814789EncryptedKey,\n        'id-sc-r3410-ESDH-r3411kdf': Gost2814789EncryptedKey,\n        // Key encryption key algorithms\n        'id-Gost28147-89-None-KeyWrap': Gost2814789EncryptedKey,\n        'id-Gost28147-89-CryptoPro-KeyWrap': Gost2814789EncryptedKey,\n        'id-sc-cmsGostWrap': Gost2814789EncryptedKey,\n        'id-sc-cmsGost28147Wrap': Gost2814789EncryptedKey});\n\n\n\n    /*\n     * CryptoPro Gost Private Key Store\n     */\n\n    var GostKeyContainerContentAttributes = BIT_STRING({\n        kccaSoftPassword: 0,\n        kccaReservePrimary: 1,\n        kccaPrimaryKeyAbsent: 2,\n        kccaFKCShared: 3});\n\n    var GostPrivateKeyAttributes = BIT_STRING({\n        pkaExportable: 0,\n        pkaUserProtect: 1,\n        pkaExchange: 2,\n        pkaEphemeral: 3,\n        pkaNonCachable: 4,\n        pkaDhAllowed: 5\n    });\n\n    var GostPrivateKeyParameters = SEQUENCE({\n        attributes: OPTIONAL(GostPrivateKeyAttributes),\n        privateKeyAlgorithm: OPTIONAL(CTX(0, IMPLICIT(KeyAlgorithmIdentifier)))\n    });\n\n    var CertificateLink = SEQUENCE({\n        path: IA5String,\n        hmac: Gost2814789MAC\n    });\n\n    var PasswordPolicy = AlgorithmIdentifier;\n\n    var GostKeyContainerContent = SEQUENCE({\n        containerAlgoritmIdentifier: OPTIONAL(CTX(0, IMPLICIT(AlgorithmIdentifier))),\n        containerName: OPTIONAL(IA5String),\n        attributes: GostKeyContainerContentAttributes,\n        primaryPrivateKeyParameters: GostPrivateKeyParameters,\n        hmacPassword: OPTIONAL(CTX(2, IMPLICIT(Gost2814789MAC))),\n        secondaryEncryptedPrivateKey: OPTIONAL(CTX(3, IMPLICIT(Gost2814789EncryptedKey))),\n        secondaryPrivateKeyParameters: OPTIONAL(CTX(4, IMPLICIT(GostPrivateKeyParameters))),\n        primaryCertificate: OPTIONAL(CTX(5, IMPLICIT(OCTET_STRING(ENCAPSULATES(Certificate))))),\n        secondaryCertificate: OPTIONAL(CTX(6, IMPLICIT(OCTET_STRING(ENCAPSULATES(Certificate))))),\n        encryptionContainerName: OPTIONAL(CTX(7, IMPLICIT(IA5String))),\n        primaryCertificateLink: OPTIONAL(CTX(8, IMPLICIT(CertificateLink))),\n        secondaryCertificateLink: OPTIONAL(CTX(9, IMPLICIT(CertificateLink))),\n        primaryFP: OPTIONAL(CTX(10, IMPLICIT(OCTET_STRING))),\n        secondaryFP: OPTIONAL(CTX(11, IMPLICIT(OCTET_STRING))),\n        passwordPolicy: OPTIONAL(PasswordPolicy),\n        containerSecurityLevel: OPTIONAL(INTEGER),\n        extensions: OPTIONAL(CTX(12, IMPLICIT(Extensions({\n            keyValidity: SEQUENCE({\n                notBefore: OPTIONAL(CTX(0, IMPLICIT(GeneralizedTime))),\n                notAfter: OPTIONAL(CTX(1, IMPLICIT(GeneralizedTime)))})\n        })))),\n        secondaryEncryptionContainerName: OPTIONAL(CTX(13, IMPLICIT(IA5String)))\n    });\n\n    /**\n     * CryptoPro key container header\n     * \n     * @class GostASN1.GostKeyContainer\n     * @extends GostASN1.Sequence\n     */\n    var GostKeyContainer = SEQUENCE({\n        keyContainerContent: GostKeyContainerContent,\n        hmacKeyContainerContent: Gost2814789MAC\n    });\n\n    /**\n     * CryptoPro key container name\n     * \n     * @class GostASN1.GostKeyContainerName\n     * @extends GostASN1.Sequence\n     */\n    var GostKeyContainerName = SEQUENCE({\n        containerName: IA5String,\n        extElem1: OPTIONAL(ANY)\n    });\n\n    /**\n     * PrivateKey encrypted content for CryptoPro key containers\n     * \n     * @class GostASN1.GostPrivateKeys\n     * @extends GostASN1.Sequence\n     */\n    var GostPrivateKeys = SEQUENCE({\n        primaryKey: Gost2814789Key,\n        secondaryKey: OPTIONAL(Gost2814789Key),\n        hmacKey: OPTIONAL(Gost2814789MAC)\n    });\n\n    /**\n     * PrivateKey masks for CryptoPro key containers\n     * \n     * @class GostASN1.GostPrivateMasks\n     * @extends GostASN1.Sequence\n     */\n    var GostPrivateMasks = SEQUENCE({\n        mask: Gost2814789Key,\n        randomStatus: OCTET_STRING,\n        hmacRandom: Gost2814789MAC\n    });\n\n\n\n    /*\n     * ViPNet Gost Private Key Store\n     */\n\n    var ViPNetKeyInfo = SEQUENCE({\n        keyClass: INTEGER,\n        keyType: INTEGER,\n        algorithm: OPTIONAL(CTX(0, EXPLICIT(KeyAlgorithmIdentifier))),\n        serialNumber: OPTIONAL(CTX(1, EXPLICIT(OCTET_STRING))),\n        addSerialNumber: OPTIONAL(CTX(2, EXPLICIT(OCTET_STRING))),\n        certSerialNumber: OPTIONAL(CTX(3, EXPLICIT(OCTET_STRING))),\n        subjectUID: OPTIONAL(CTX(4, EXPLICIT(OCTET_STRING))),\n        recipientUID: OPTIONAL(CTX(5, EXPLICIT(OCTET_STRING))),\n        validity: OPTIONAL(CTX(6, EXPLICIT(CHOICE({\n            validity: Validity,\n            keyValidity: SEQUENCE({\n                notBefore: OPTIONAL(CTX(0, IMPLICIT(GeneralizedTime))),\n                notAfter: OPTIONAL(CTX(1, IMPLICIT(GeneralizedTime)))})\n        }, function () {\n            return 'keyValidity';\n        })))),\n        keyUID: OPTIONAL(CTX(7, EXPLICIT(BIT_STRING))),\n        flags: OPTIONAL(CTX(10, EXPLICIT(INTEGER)))\n    });\n\n    /**\n     * ViPNet key container info\n     * \n     * @class GostASN1.ViPNetInfo\n     * @extends GostASN1.Sequence\n     */\n    var ViPNetInfo = SEQUENCE({\n        version: INTEGER,\n        keyInfo: ViPNetKeyInfo,\n        defenceKeyInfo: ViPNetKeyInfo,\n        certificate: OPTIONAL(CTX(0, EXPLICIT(Certificate))),\n        publicKey: OPTIONAL(CTX(1, EXPLICIT(OCTET_STRING)))\n    });\n\n\n\n    /*\n     * Cryptographic Message Syntax\n     * \n     * http://tools.ietf.org/html/rfc5652\n     * \n     */\n\n    // CMS signed data\n    var CMSVersion = INTEGER;\n\n    var ContentType = OBJECT_IDENTIFIER;\n\n    var SigningTime = Time;\n\n    var SubjectKeyIdentifier = OCTET_STRING;\n\n    var Digest = OCTET_STRING;\n\n    var MessageAuthenticationCode = OCTET_STRING;\n\n    var BodyPartID = INTEGER;\n\n    var BodyPartPath = SEQUENCE_OF(BodyPartID);\n\n    var CMCUnsignedData = SEQUENCE({\n        bodyPartPath: BodyPartPath,\n        identifier: OBJECT_IDENTIFIER,\n        content: ANY}); // DEFINED BY identifier\n    /**\n     * SignedAttributes is a collection of attributes that are signed.  The\n     * field is optional, but it MUST be present if the content type of\n     * the EncapsulatedContentInfo value being signed is not id-data.\n     * SignedAttributes MUST be DER encoded, even if the rest of the\n     * structure is BER encoded.  Useful attribute types, such as signing\n     * time, are defined in Section 11.  If the field is present, it MUST\n     * contain, at a minimum, the following two attributes: <br>\n     *\n     * A content-type attribute having as its value the content type\n     * of the EncapsulatedContentInfo value being signed.  Section\n     * 11.1 defines the content-type attribute.  However, the\n     * content-type attribute MUST NOT be used as part of a\n     * countersignature unsigned attribute as defined in Section 11.4.<br>\n     *\n     * A message-digest attribute, having as its value the message\n     * digest of the content.  Section 11.2 defines the message-digest\n     * attribute.\n     * \n     * @class GostASN1.SignedAttributes\n     * @extends GostASN1.Attributes\n     */\n    var SignedAttributes = Attributes({\n        contentType: SET_OF_SINGLE(ContentType),\n        signingTime: SET_OF_SINGLE(SigningTime),\n        messageDigest: SET_OF_SINGLE(OCTET_STRING)});\n\n    var UnsignedAttributes = Attributes(function (type) {\n        /**\n         * UnsignedAttributes is a collection of attributes that are not signed.\n         * The field is optional.  Useful attribute types, such as\n         * countersignatures.\n         * \n         * @class GostASN1.UnsignedAttributes\n         * @extends GostASN1.Attributes\n         */\n        //    var UnsignedAttributes = Attributes({\n        //        countersignature: SET_OF(Countersignature), // -- check forward\n        //        unsignedData: SET_OF(CMCUnsignedData)\n        //    });\n        return ({\n            countersignature: SET_OF(Countersignature), // recursion\n            unsignedData: SET_OF(CMCUnsignedData)\n        })[type];\n    });\n\n    var AuthAttributes = SignedAttributes,\n            UnauthAttributes = Attributes,\n            UnprotectedAttributes = Attributes;\n\n    var IssuerAndSerialNumber = SEQUENCE({\n        issuer: Name,\n        serialNumber: CertificateSerialNumber});\n\n    var SignerIdentifier = CHOICE({\n        issuerAndSerialNumber: IssuerAndSerialNumber,\n        subjectKeyIdentifier: CTX(0, IMPLICIT(SubjectKeyIdentifier))}, function (value) {\n        return isBinary(value) ? 'subjectKeyIdentifier' : 'issuerAndSerialNumber';\n    });\n\n    var SignerInfo = SEQUENCE({\n        version: CMSVersion,\n        sid: SignerIdentifier,\n        digestAlgorithm: DigestAlgorithmIdentifier,\n        signedAttrs: OPTIONAL(CTX(0, IMPLICIT(SignedAttributes))),\n        signatureAlgorithm: SignatureAlgorithmIdentifier,\n        signatureValue: OCTET_STRING,\n        unsignedAttrs: OPTIONAL(CTX(1, IMPLICIT(UnsignedAttributes)))});\n\n    var Countersignature = SignerInfo,\n            SignerInfos = SET_OF(SignerInfo),\n            DigestAlgorithmIdentifiers = SET_OF(DigestAlgorithmIdentifier),\n            AttributeCertificateV2 = AttributeCertificate;\n\n    var ExtendedCertificateInfo = COMBINE(SEQUENCE({\n        version: CMSVersion,\n        certificate: Certificate,\n        attributes: UnauthAttributes}));\n\n    var ExtendedCertificate = SEQUENCE({\n        extendedCertificateInfo: ExtendedCertificateInfo,\n        signatureAlgorithm: SignatureAlgorithmIdentifier,\n        signatureValue: BIT_STRING});\n\n    var OtherCertificateFormat = SEQUENCE({\n        otherCertFormat: OBJECT_IDENTIFIER,\n        otherCert: ANY});\n\n    var AttributeCertificateInfoV1 = COMBINE(SEQUENCE({\n        version: INTEGER,\n        subject: CHOICE({\n            baseCertificateID: CTX(0, IMPLICIT(IssuerSerial)), // associated with a Public Key Certificate\n            subjectName: CTX(1, IMPLICIT(GeneralNames))}, function (value) {\n            return value.issuer ? 'baseCertificateID' : 'subjectName';\n        }), //associated with a name\n        issuer: GeneralNames,\n        signature: SignatureAlgorithmIdentifier,\n        serialNumber: CertificateSerialNumber,\n        attCertValidityPeriod: AttCertValidityPeriod,\n        attributes: AttributeSequence,\n        issuerUniqueID: OPTIONAL(UniqueIdentifier),\n        extensions: OPTIONAL(CertExtensions)}));\n\n    var AttributeCertificateV1 = SEQUENCE({\n        acInfo: AttributeCertificateInfoV1,\n        signatureAlgorithm: SignatureAlgorithmIdentifier,\n        signatureValue: BIT_STRING});\n\n    var EncapsulatedContentInfo = SEQUENCE({\n        eContentType: ContentType,\n        eContent: OPTIONAL(CTX(0, EXPLICIT(OCTET_STRING)))});\n\n    var CertificateChoices = CHOICE({\n        certificate: Certificate,\n        extendedCertificate: CTX(0, IMPLICIT(ExtendedCertificate)), // Obsolete\n        v1AttrCert: CTX(1, IMPLICIT(AttributeCertificateV1)), // Obsolete\n        v2AttrCert: CTX(2, IMPLICIT(AttributeCertificateV2)),\n        other: CTX(3, IMPLICIT(OtherCertificateFormat))}, function (value) {\n        return value.holder ? 'AttributeCertificateV2' : value.certificate ?\n                'ExtendedCertificate' : value.otherCertFormat ? 'other' :\n                'certificate';\n    });\n\n    var OtherRevocationInfoFormat = SEQUENCE({\n        otherRevInfoFormat: OBJECT_IDENTIFIER,\n        otherRevInfo: ANY});\n\n    var RevocationInfoChoice = CHOICE({\n        crl: CertificateList,\n        other: CTX(1, IMPLICIT(OtherRevocationInfoFormat))}, function (value) {\n        return value.otherRevInfoFormat ? 'other' : 'crl';\n    });\n\n    var CertificateSet = SET_OF(CertificateChoices),\n            RevocationInfoChoices = SET_OF(RevocationInfoChoice);\n\n    /**\n     * The signed-data content type consists of a content of any type and zero or more \n     * signature values.  Any number of signers in parallel can sign any type of content.<br><br>\n     * \n     * The signed-data content type shall have ASN.1 type SignedData:<br><br>\n     *<pre>\n     *\n     *      SignedData ::= SEQUENCE {\n     *        version CMSVersion,\n     *        digestAlgorithms DigestAlgorithmIdentifiers,\n     *        encapContentInfo EncapsulatedContentInfo,\n     *        certificates [0] IMPLICIT CertificateSet OPTIONAL,\n     *        crls [1] IMPLICIT RevocationInfoChoices OPTIONAL,\n     *        signerInfos SignerInfos }\n     *\n     *      DigestAlgorithmIdentifiers ::= SET OF DigestAlgorithmIdentifier\n     *\n     *      SignerInfos ::= SET OF SignerInfo\n     *      \n     *       EncapsulatedContentInfo ::= SEQUENCE {\n     *        eContentType ContentType,\n     *        eContent [0] EXPLICIT OCTET STRING OPTIONAL }\n     *        \n     *</pre>\n     * Per-signer information is represented in the type SignerInfo:<br><br>\n     *<pre>\n     *\n     *      SignerInfo ::= SEQUENCE {\n     *        version CMSVersion,\n     *        sid SignerIdentifier,\n     *        digestAlgorithm DigestAlgorithmIdentifier,\n     *        signedAttrs [0] IMPLICIT SignedAttributes OPTIONAL,\n     *        signatureAlgorithm SignatureAlgorithmIdentifier,\n     *        signature SignatureValue,\n     *        unsignedAttrs [1] IMPLICIT UnsignedAttributes OPTIONAL }\n     *\n     *      SignerIdentifier ::= CHOICE {\n     *        issuerAndSerialNumber IssuerAndSerialNumber,\n     *        subjectKeyIdentifier [0] SubjectKeyIdentifier }\n     *\n     *      SignedAttributes ::= SET SIZE (1..MAX) OF Attribute\n     *\n     *      UnsignedAttributes ::= SET SIZE (1..MAX) OF Attribute\n     *\n     *     SignatureValue ::= OCTET STRING\n     *     \n     *</pre>\n     * See also {@link GostASN1.SignedAttributes} and {@link GostASN1.UnsignedAttributes}\n     * @class GostASN1.SignedData\n     * @extends GostASN1.Sequence\n     * @property {number} version The syntax version number\n     * @property {AlgorithmIdentifier[]} digestAlgorithms Collection of message digest algorithm identifiers\n     * @property {GostASN1.Sequence} encapContentInfo The content is represented in the type EncapsulatedContentInfo\n     * @property {GostASN1.Certificate[]} certificates Certificates\n     * @property {GostASN1.CertificateList[]} crls Certificates\n     * @property {GostASN1.Sequence[]} signerInfos The Signer information\n     */\n    var SignedData = SEQUENCE({\n        version: CMSVersion,\n        digestAlgorithms: DigestAlgorithmIdentifiers,\n        encapContentInfo: EncapsulatedContentInfo,\n        certificates: OPTIONAL(CTX(0, IMPLICIT(CertificateSet))),\n        crls: OPTIONAL(CTX(1, IMPLICIT(RevocationInfoChoices))),\n        signerInfos: SignerInfos});\n\n    var RecipientIdentifier = CHOICE({\n        issuerAndSerialNumber: IssuerAndSerialNumber,\n        subjectKeyIdentifier: CTX(0, IMPLICIT(SubjectKeyIdentifier))}, function (value) {\n        return isBinary(value) ? 'subjectKeyIdentifier' : 'issuerAndSerialNumber';\n    });\n\n    var KeyTransRecipientInfo = SEQUENCE({\n        version: CMSVersion, // always set to 0 or 2\n        rid: RecipientIdentifier,\n        keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\n        encryptedKey: EncryptedKey});\n\n    var OtherKeyAttribute = SEQUENCE({\n        keyAttrId: OBJECT_IDENTIFIER,\n        keyAttr: OPTIONAL(ANY)});\n\n    var RecipientKeyIdentifier = SEQUENCE({\n        subjectKeyIdentifier: SubjectKeyIdentifier,\n        date: OPTIONAL(GeneralizedTime),\n        other: OPTIONAL(OtherKeyAttribute)});\n\n    var KeyAgreeRecipientIdentifier = CHOICE({\n        issuerAndSerialNumber: IssuerAndSerialNumber,\n        rKeyId: CTX(0, IMPLICIT(RecipientKeyIdentifier))}, function (value) {\n        return isBinary(value) ? 'rKeyId' : 'issuerAndSerialNumber';\n    });\n\n    var RecipientEncryptedKey = SEQUENCE({\n        rid: KeyAgreeRecipientIdentifier,\n        encryptedKey: EncryptedKey});\n\n    var RecipientEncryptedKeys = SEQUENCE_OF(RecipientEncryptedKey);\n\n    var OriginatorPublicKey = SEQUENCE({\n        algorithm: KeyAlgorithmIdentifier,\n        publicKey: BIT_STRING});\n\n    var MQVuserKeyingMaterial = SEQUENCE({// ECC rfc5753 KeyAgreeRecipientInfo in ukm\n        ephemeralPublicKey: OriginatorPublicKey,\n        addedukm: OPTIONAL(CTX(0, EXPLICIT(UserKeyingMaterial)))\n    });\n\n    var OriginatorIdentifierOrKey = CHOICE({\n        issuerAndSerialNumber: IssuerAndSerialNumber,\n        subjectKeyIdentifier: CTX(0, IMPLICIT(SubjectKeyIdentifier)),\n        originatorKey: CTX(1, IMPLICIT(OriginatorPublicKey))}, function (value) {\n        return isBinary(value) ? 'subjectKeyIdentifier' : value.algorithm ?\n                'originatorKey' : 'issuerAndSerialNumber';\n    });\n\n    var KeyAgreeRecipientInfo = SEQUENCE({\n        version: CMSVersion, // always set to 3\n        originator: CTX(0, EXPLICIT(OriginatorIdentifierOrKey)),\n        ukm: OPTIONAL(CTX(1, EXPLICIT(UserKeyingMaterial))),\n        keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\n        recipientEncryptedKeys: RecipientEncryptedKeys});\n\n    var KEKIdentifier = SEQUENCE({\n        keyIdentifier: OCTET_STRING,\n        date: OPTIONAL(GeneralizedTime),\n        other: OPTIONAL(OtherKeyAttribute)});\n\n    var KEKRecipientInfo = SEQUENCE({\n        version: CMSVersion, // always set to 4\n        kekid: KEKIdentifier,\n        keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\n        encryptedKey: EncryptedKey});\n\n    var PasswordRecipientInfo = SEQUENCE({\n        version: CMSVersion, // always set to 0\n        friendlyName: OPTIONAL(CTX(0, IMPLICIT(KeyDerivationAlgorithmIdentifier))),\n        keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\n        encryptedKey: EncryptedKey});\n\n    var OtherRecipientInfo = SEQUENCE({\n        oriType: OBJECT_IDENTIFIER,\n        oriValue: ANY});\n\n    var RecipientInfo = CHOICE({\n        ktri: KeyTransRecipientInfo,\n        kari: CTX(1, IMPLICIT(KeyAgreeRecipientInfo)),\n        kekri: CTX(2, IMPLICIT(KEKRecipientInfo)),\n        pwri: CTX(3, IMPLICIT(PasswordRecipientInfo)),\n        ori: CTX(4, IMPLICIT(OtherRecipientInfo))}, function (value) {\n        return value.rid ? 'ktri' : value.originator ? 'kari' :\n                value.kekid ? 'kekri' : value.oriType ? 'ori' : 'pwri';\n    });\n\n    var OriginatorInfo = SEQUENCE({\n        certs: OPTIONAL(CTX(0, IMPLICIT(CertificateSet))),\n        crls: OPTIONAL(CTX(1, IMPLICIT(RevocationInfoChoices)))});\n\n    var RecipientInfos = SET_OF(RecipientInfo);\n\n    // EncryptedContentInfo\n    var EncryptedContentInfo = SEQUENCE({\n        contentType: ContentType,\n        contentEncryptionAlgorithm: ContentEncryptionAlgorithmIdentifier,\n        encryptedContent: OPTIONAL(CTX(0, IMPLICIT(EncryptedContent)))});\n\n    /**\n     * The enveloped-data content type consists of an encrypted content of \n     * any type and encrypted content-encryption keys for one or more\n     * recipients.  The combination of the encrypted content and one\n     * encrypted content-encryption key for a recipient is a \"digital\n     * envelope\" for that recipient.  Any type of content can be enveloped\n     * for an arbitrary number of recipients using any of the supported key\n     * management techniques for each recipient.<br><br>   \n     * \n     * The typical application of the enveloped-data content type will\n     * represent one or more recipients' digital envelopes on content of the\n     * data or signed-data content types.<br><br>\n     * <pre>\n     * \n     *      EnvelopedData ::= SEQUENCE {\n     *        version CMSVersion,\n     *        originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n     *        recipientInfos RecipientInfos,\n     *        encryptedContentInfo EncryptedContentInfo,\n     *        unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }\n     * \n     *      OriginatorInfo ::= SEQUENCE {\n     *        certs [0] IMPLICIT CertificateSet OPTIONAL,\n     *        crls [1] IMPLICIT RevocationInfoChoices OPTIONAL }\n     *\n     *      RecipientInfos ::= SET SIZE (1..MAX) OF RecipientInfo\n     *\n     *      EncryptedContentInfo ::= SEQUENCE {\n     *        contentType ContentType,\n     *        contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\n     *        encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL }\n     *\n     *      EncryptedContent ::= OCTET STRING\n     *\n     *      UnprotectedAttributes ::= SET SIZE (1..MAX) OF Attribute\n     *      \n     * </pre>\n     * @class GostASN1.EnvelopedData\n     * @extends GostASN1.Sequence\n     * @property {number} version The syntax version number\n     * @property {GostASN1.Sequence} originatorInfo Optionally provides information about the originator.\n     * @property {GostASN1.Sequence[]} recipientInfos Collection of per-recipient information. \n     * @property {GostASN1.Sequence} encryptedContentInfo The content is represented in the type EncryptedContentInfo\n     * @property {Attributes} unprotectedAttrs The unprotected attributes\n     */\n    var EnvelopedData = SEQUENCE({\n        version: CMSVersion,\n        originatorInfo: OPTIONAL(CTX(0, IMPLICIT(OriginatorInfo))),\n        recipientInfos: RecipientInfos,\n        encryptedContentInfo: EncryptedContentInfo,\n        unprotectedAttrs: OPTIONAL(CTX(1, IMPLICIT(UnprotectedAttributes)))});\n\n    /**\n     * The digested-data content type consists of content of any type and a\n     * message digest of the content.<br><br>\n     * Typically, the digested-data content type is used to provide content\n     * integrity, and the result generally becomes an input to the\n     * enveloped-data content type.<br><br>\n     * <pre>\n     * \n     *      DigestedData ::= SEQUENCE {\n     *        version CMSVersion,\n     *        digestAlgorithm DigestAlgorithmIdentifier,\n     *        encapContentInfo EncapsulatedContentInfo,\n     *        digest Digest }\n     *\n     *      Digest ::= OCTET STRING\n     *      \n     *</pre>\n     * @class GostASN1.DigestedData\n     * @extends GostASN1.Sequence\n     * @property {number} version The syntax version number\n     * @property {AlgorithmIdentifier} digestAlgorithm Message digest algorithm identifier\n     * @property {GostASN1.Sequence} encapContentInfo The content is represented in the type EncapsulatedContentInfo\n     * @property {CryptoOperationData} digest The degist\n     */\n    var DigestedData = SEQUENCE({\n        version: CMSVersion,\n        digestAlgorithm: DigestAlgorithmIdentifier,\n        encapContentInfo: EncapsulatedContentInfo,\n        digest: Digest});\n\n    /**\n     * The encrypted-data content type consists of encrypted content of any\n     * type.  Unlike the enveloped-data content type, the encrypted-data\n     * content type has neither recipients nor encrypted content-encryption\n     * keys.  Keys MUST be managed by other means.<br><br>\n     * \n     * The typical application of the encrypted-data content type will be to\n     * encrypt the content of the data content type for local storage,\n     * perhaps where the encryption key is derived from a password.<br><br>\n     * <pre>\n     * \n     *      EncryptedData ::= SEQUENCE {\n     *        version CMSVersion,\n     *        encryptedContentInfo EncryptedContentInfo,\n     *        unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }\n     *        \n     *      EncryptedContentInfo ::= SEQUENCE {\n     *        contentType ContentType,\n     *        contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\n     *        encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL }\n     *\n     *      EncryptedContent ::= OCTET STRING\n     *      \n     * </pre>\n     * @class GostASN1.EncryptedData\n     * @extends GostASN1.Sequence\n     * @property {number} version The syntax version number\n     * @property {GostASN1.Sequence} encryptedContentInfo The content is represented in the type EncryptedContentInfo\n     * @property {Attributes} unprotectedAttrs The unprotected attributes\n     */\n    var EncryptedData = SEQUENCE({\n        version: CMSVersion,\n        encryptedContentInfo: EncryptedContentInfo,\n        unprotectedAttrs: OPTIONAL(CTX(1, IMPLICIT(UnprotectedAttributes)))});\n\n    /**\n     * The authenticated-data content type consists of content of any type, \n     * a message authentication code (MAC), and encrypted authentication   \n     * keys for one or more recipients.  The combination of the MAC and one\n     * encrypted authentication key for a recipient is necessary for that\n     * recipient to verify the integrity of the content.  Any type of\n     * content can be integrity protected for an arbitrary number of\n     * recipients.<br><br>\n     * <pre>\n     * \n     *      AuthenticatedData ::= SEQUENCE {\n     *        version CMSVersion,\n     *        originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n     *        recipientInfos RecipientInfos,\n     *        macAlgorithm MessageAuthenticationCodeAlgorithm,\n     *        digestAlgorithm [1] DigestAlgorithmIdentifier OPTIONAL,\n     *        encapContentInfo EncapsulatedContentInfo,\n     *        authAttrs [2] IMPLICIT AuthAttributes OPTIONAL,\n     *        mac MessageAuthenticationCode,\n     *        unauthAttrs [3] IMPLICIT UnauthAttributes OPTIONAL }\n     *\n     *      AuthAttributes ::= SET SIZE (1..MAX) OF Attribute\n     *\n     *      UnauthAttributes ::= SET SIZE (1..MAX) OF Attribute\n     *\n     *      MessageAuthenticationCode ::= OCTET STRING\n     *\n     * </pre>\n     * @class GostASN1.AuthenticatedData\n     * @extends GostASN1.Sequence\n     * @property {number} version The syntax version number\n     * @property {GostASN1.Sequence} originatorInfo Optionally provides information about the originator.\n     * @property {GostASN1.Sequence[]} recipientInfos Collection of per-recipient information. \n     * @property {AlgorithmIdentifier} macAlgorithm Identifies the Message Authentication Code algorithm \n     * @property {AlgorithmIdentifier} digestAlgorithm Identifies the Digest algorithm \n     * @property {GostASN1.Sequence} encapContentInfo The content is represented in the type EncapsulatedContentInfo\n     * @property {Attributes} authAttrs The autheniticated attributes\n     * @property {CryptoOpertionData} mac The Message Authentication Code\n     * @property {Attributes} unauthAttrs The unautheniticated attributes\n     */\n    var AuthenticatedData = SEQUENCE({\n        version: CMSVersion,\n        originatorInfo: OPTIONAL(CTX(0, IMPLICIT(OriginatorInfo))),\n        recipientInfos: RecipientInfos,\n        macAlgorithm: MessageAuthenticationCodeAlgorithm,\n        digestAlgorithm: OPTIONAL(CTX(1, DigestAlgorithmIdentifier)),\n        encapContentInfo: EncapsulatedContentInfo,\n        authAttrs: OPTIONAL(CTX(2, IMPLICIT(AuthAttributes))),\n        mac: MessageAuthenticationCode,\n        unauthAttrs: OPTIONAL(CTX(3, IMPLICIT(UnauthAttributes)))});\n\n    // AuthEnvelopedData RFC 5911\n    var AuthEnvelopedData = SEQUENCE({\n        version: CMSVersion,\n        originatorInfo: OPTIONAL(CTX(0, IMPLICIT(OriginatorInfo))),\n        recipientInfos: RecipientInfos,\n        authEncryptedContentInfo: EncryptedContentInfo,\n        authAttrs: OPTIONAL(CTX(1, IMPLICIT(AuthAttributes))),\n        mac: MessageAuthenticationCode,\n        unauthAttrs: OPTIONAL(CTX(2, IMPLICIT(UnauthAttributes)))});\n\n    // EncryptedKeyPackage rfc6032\n    var EncryptedKeyPackage = CHOICE({\n        encrypted: EncryptedData,\n        enveloped: CTX(0, IMPLICIT(EnvelopedData)),\n        authEnveloped: CTX(1, IMPLICIT(AuthEnvelopedData))}, function (value) {\n        return value.encryptedContentInfo ? (value.recipientInfos ?\n                'enveloped' : 'encrypted') : 'authEnveloped';\n    });\n\n    /**\n     * Cryptographic Message Syntax<br>\n     * The CMS associates a content type identifier with a content. The syntax \n     * MUST have ASN.1 type ContentInfo:\n     * <pre>\n     * \n     *  ContentInfo ::= SEQUENCE {\n     *    contentType ContentType,\n     *    content [0] EXPLICIT ANY DEFINED BY contentType }\n     *\n     *  ContentType ::= OBJECT IDENTIFIER\n     *  \n     * </pre>\n     * The fields of ContentInfo have the following meanings:\n     * <ul>\n     * <li>contentType indicates the type of the associated content.  It is\n     * an object identifier; it is a unique string of integers assigned\n     * by an authority that defines the content type.</li>\n     * <li>content is the associated content.  The type of content can be\n     * determined uniquely by contentType.  Content types for data,\n     * signed-data, enveloped-data, digested-data, encrypted-data, and\n     * authenticated-data are defined in this document.  If additional\n     * content types are defined in other documents, the ASN.1 type\n     * defined SHOULD NOT be a CHOICE type.</li>\n     * </ul>\n     * RFC 5652 references {@link http://tools.ietf.org/html/rfc5652} \n     * \n     * @class GostASN1.ContentInfo\n     * @extends GostASN1.Sequence\n     * @property {string} contentType The content type identifier\n     * @property {(GostASN1.Sequence|CryptoOperationData)} content The content\n     */\n    var ContentType = OBJECT_IDENTIFIER;\n\n    var ContentInfo = ATTRIBUTE({\n        contentType: ContentType,\n        content: function (type) {\n            return CTX(0, EXPLICIT(type));\n        }\n    }, 'contentType', 'content', undefined, 'CMS')({\n        data: OCTET_STRING,\n        signedData: COMBINE(SignedData),\n        envelopedData: COMBINE(EnvelopedData),\n        digestedData: COMBINE(DigestedData),\n        encryptedData: COMBINE(EncryptedData),\n        authData: COMBINE(AuthenticatedData),\n        encryptedKeyPkg: COMBINE(EncryptedKeyPackage),\n        aKeyPackage: COMBINE(AsymmetricKeyPackage)});\n\n    var DigestInfo = SEQUENCE({\n        digestAlgorithm: DigestAlgorithmIdentifier,\n        digest: Digest});\n\n\n    /*\n     * PFX format syntax PKCS#12\n     * \n     * http://tools.ietf.org/html/rfc7292\n     * \n     */\n\n    var PKCS12Attributes = Attributes({\n        friendlyName: SET_OF_SINGLE(BMPString),\n        keyProviderNameAttr: SET_OF_SINGLE(BMPString),\n        localKeyId: SET_OF_SINGLE(OCTET_STRING),\n        certKeyIdentifierPropId: SET_OF_SINGLE(OCTET_STRING)});\n\n    var SafeBagType = OBJECT_IDENTIFIER;\n\n    var CertType = OBJECT_IDENTIFIER;\n\n    var CRLType = OBJECT_IDENTIFIER;\n\n    var SecretType = OBJECT_IDENTIFIER;\n\n    var KeyBag = PrivateKeyInfo;\n\n    var PKCS8ShroudedKeyBag = EncryptedPrivateKeyInfo;\n\n    var CertBag = ATTRIBUTE({\n        certId: CertType,\n        certValue: function (type) {\n            return CTX(0, EXPLICIT(type));\n        }\n    }, 'certId', 'certValue')({\n        // DER-encoded X.509 certificate stored in OCTET STRING\n        x509Certificate: OCTET_STRING(ENCAPSULATES(Certificate)),\n        // Base64-encoded SDSI certificate stored in IA5String\n        sdsiCertificate: IA5String\n    }, OCTET_STRING);\n\n    var CRLBag = ATTRIBUTE({\n        crlId: CRLType,\n        crlValue: function (type) {\n            return CTX(0, EXPLICIT(type));\n        }\n    }, 'crlId', 'crlValue')({\n        // DER-encoded X.509 certificate stored in OCTET STRING\n        x509CRL: OCTET_STRING(ENCAPSULATES(CertificateList))\n    }, OCTET_STRING);\n\n    var SecretBag = ATTRIBUTE({\n        secretTypeId: SecretType,\n        secretValue: function (type) {\n            return CTX(0, EXPLICIT(type));\n        }\n    }, 'secretTypeId', 'secretValue')({\n        secret: OCTET_STRING\n    }, OCTET_STRING);\n\n    var SafeBag = ATTRIBUTE({\n        bagId: SafeBagType,\n        bagValue: function (type) {\n            return CTX(0, EXPLICIT(type));\n        },\n        bagAttributes: OPTIONAL(PKCS12Attributes)\n    }, 'bagId', 'bagValue')(function (type) {\n        return ({\n            keyBag: KeyBag,\n            pkcs8ShroudedKeyBag: PKCS8ShroudedKeyBag,\n            certBag: CertBag,\n            crlBag: CRLBag,\n            secretBag: SecretBag,\n            safeContentsBag: SafeContents // recursion\n        })[type];\n    });\n\n    /**\n     * The SafeContents Type<br><br>\n     * \n     * The sixth type of bag that can be held in a SafeBag is a\n     * SafeContents. This recursive structure allows for arbitrary nesting\n     * of multiple KeyBags, PKCS8ShroudedKeyBags, CertBags, CRLBags, and\n     * SecretBags within the top-level SafeContents.\n     * <pre>\n     *  SafeContents ::= SEQUENCE OF SafeBag\n     *   SafeBag ::= SEQUENCE {\n     *       bagId BAG-TYPE.&id ({PKCS12BagSet})\n     *       bagValue [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n     *       bagAttributes SET OF PKCS12Attribute OPTIONAL\n     *   }\n     *   \n     *   PKCS12Attribute ::= SEQUENCE {\n     *       attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n     *       attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n     *   } -- This type is compatible with the X.500 type ’Attribute’\n     *   \n     *   PKCS12AttrSet ATTRIBUTE ::= {\n     *       friendlyName | -- from PKCS #9 [23]\n     *       localKeyId, -- from PKCS #9\n     *       ... -- Other attributes are allowed\n     *   }\n     * </pre>\n     * The SafeContents type is made up of SafeBags. Each SafeBag holds one\n     * piece of information -- a key, a certificate, etc. -- which is\n     * identified by an object identifier.<br><br>\n     * \n     * See {@link GostASN1.ContentInfo} and {@link GostASN1.PFX}<br><br>\n     * \n     * RFC 7292 references {@link http://tools.ietf.org/html/rfc7292} \n     * @class GostASN1.SafeContents\n     */\n    var SafeContents = SEQUENCE_OF(SafeBag);\n\n    /**\n     * The AuthenticatedSafe<br><br>\n     * Each compliant platform shall be able to import and export\n     * AuthenticatedSafe PDUs wrapped in PFX PDUs.<br>\n     * For integrity, the AuthenticatedSafe is either signed (if public-key\n     * integrity mode is used) or MACed (if password integrity mode is used)\n     * to produce a PFX PDU.\n     * <pre>\n     *      AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n     * \n     *      -- Data if unencrypted\n     *      -- EncryptedData if password-encrypted\n     *      -- EnvelopedData if public key-encrypted\n     * </pre>\n     * As mentioned, the contentType field of authSafe shall be of type data\n     * or signedData. The content field of the authSafe shall, either\n     * directly (data case) or indirectly (signedData case), contain a BER-\n     * encoded value of type AuthenticatedSafe.<br><br>\n     * \n     * See {@link GostASN1.ContentInfo} and {@link GostASN1.PFX}<br><br>\n     * \n     * RFC 7292 references {@link http://tools.ietf.org/html/rfc7292} \n     * \n     * @class GostASN1.AuthenticatedSafe\n     */\n    var AuthenticatedSafe = SEQUENCE_OF(ContentInfo);\n\n    var MacData = SEQUENCE({\n        mac: DigestInfo,\n        macSalt: OCTET_STRING,\n        // Note: The default is for historical reasons and its use is deprecated.\n        iterations: DEFAULT(INTEGER, 1)});\n\n    /**\n     * PFX format syntax<br><br>\n     * \n     * This format corresponds to the data model presented above, with\n     * wrappers for privacy and integrity. This section makes free\n     * reference to PKCS #7 {@link GostASN1.ContentInfo}<br>\n     * All modes of direct exchange use the same PDU format.  ASN.1 and BER-\n     * encoding ensure platform independence.<br>\n     * This standard has one ASN.1 export: PFX.  This is the outer integrity\n     * wrapper.<br><br>\n     * Instances of PFX contain:\n     *  <ol>\n     *  <li>A version indicator.  The version shall be v3 for this version of\n     *      this document.</li>\n     *  <li>A PKCS #7 ContentInfo, whose contentType is signedData in public-\n     *      key integrity mode and data in password integrity mode.</li>\n     *  <li>An optional instance of MacData, present only in password\n     *      integrity.  This object, if present, contains a PKCS #7\n     *      DigestInfo, which holds the MAC value, a macSalt, and an\n     *      iterationCount.  As described in Appendix B, the MAC key is\n     *      derived from the password, the macSalt, and the iterationCount;\n     *      the MAC is computed from the authSafe value and the MAC key via HMAC.  \n     *      The password and the MAC key are not actually present anywhere in the PFX.  \n     *      The salt and (to a certain extent) the iteration count thwarts dictionary\n     *      attacks against the integrity password. </li>\n     *  </ol>\n     *  <pre>\n     *  PFX ::= SEQUENCE {\n     *      version     INTEGER {v3(3)}(v3,...),\n     *      authSafe    ContentInfo,\n     *      macData     MacData OPTIONAL\n     *  }\n     *\n     *  MacData ::= SEQUENCE {\n     *      mac         DigestInfo,\n     *      macSalt     OCTET STRING,\n     *      iterations  INTEGER DEFAULT 1\n     *      -- Note: The default is for historical reasons and its\n     *      --       use is deprecated.\n     *  }\n     *  </pre>\n     * See {@link GostASN1.ContentInfo}<br><br>\n     * \n     * RFC 7292 references {@link http://tools.ietf.org/html/rfc7292} \n     * @class GostASN1.PFX\n     * @extends GostASN1.Sequence\n     * @property {number} version Encoded version number\n     * @property {GostASN1.ContentInfo} authSafe ContentInfo with {@link GostASN1.AuthenticatedSafe} content \n     */\n    var PFX = SEQUENCE({\n        version: INTEGER,\n        authSafe: ContentInfo,\n        macData: OPTIONAL(MacData)}, 'PFX');\n\n\n    /*\n     * Certificate Request Message Format \n     * \n     * http://tools.ietf.org/html/rfc4211\n     * \n     */\n\n    var RegToken = UTF8String;\n\n    var Authenticator = UTF8String;\n\n    var CertId = SEQUENCE({\n        issuer: GeneralName,\n        serialNumber: INTEGER});\n    var OldCertId = CertId;\n\n    var ProtocolEncrKey = SubjectPublicKeyInfo;\n\n    var EncryptedValue = SEQUENCE({\n        // the intended algorithm for which the value will be used\n        intendedAlg: OPTIONAL(CTX(0, IMPLICIT(AlgorithmIdentifier))),\n        // the symmetric algorithm used to encrypt the value\n        symmAlg: OPTIONAL(CTX(1, IMPLICIT(AlgorithmIdentifier))),\n        // the (encrypted) symmetric key used to encrypt the value\n        encSymmKey: OPTIONAL(CTX(2, IMPLICIT(BIT_STRING))),\n        // algorithm used to encrypt the symmetric key\n        keyAlg: OPTIONAL(CTX(3, IMPLICIT(AlgorithmIdentifier))),\n        valueHint: OPTIONAL(CTX(4, IMPLICIT(OCTET_STRING))),\n        // a brief description or identifier of the encValue content\n        // (may be meaningful only to the sending entity, and used only\n        // if EncryptedValue might be re-examined by the sending entity\n        // in the future)\n        encValue: BIT_STRING});\n    var KeyGenParameters = OCTET_STRING;\n\n    // The encrypted private key MUST be placed in the envelopedData\n    // encryptedContentInfo encryptedContent OCTET STRING.\n    var EncryptedKey = CHOICE({\n        encryptedValue: EncryptedValue, // Deprecated\n        envelopedData: CTX(0, IMPLICIT(EnvelopedData))}, function (value) {\n        return value.encryptedContentInfo ? 'envelopedData' : 'encryptedValue';\n    });\n\n    var PKIArchiveOptions = CHOICE({\n        // the actual value of the private key\n        encryptedPrivKey: CTX(0, EncryptedKey),\n        // parameters that allow the private key to be re-generated\n        keyGenParameters: CTX(1, IMPLICIT(KeyGenParameters)),\n        // set to TRUE if sender wishes receiver to archive the private\n        // key of a key pair that the receiver generates in response to\n        // this request; set to FALSE if no archival is desired.\n        archiveRemGenPrivKey: CTX(2, IMPLICIT(BOOLEAN))});\n\n    var SinglePubInfo = SEQUENCE({\n        pubMethod: INTEGER({\n            dontCare: 0,\n            x500: 1,\n            web: 2,\n            ldap: 3}),\n        pubLocation: OPTIONAL(GeneralName)});\n\n    // pubInfos MUST NOT be present if action is \"dontPublish\"\n    // (if action is \"pleasePublish\" and pubInfos is omitted,\n    // \"dontCare\" is assumed)\n    var PKIPublicationInfo = SEQUENCE({\n        action: INTEGER({\n            dontPublish: 0,\n            pleasePublish: 1}),\n        pubInfos: OPTIONAL(SEQUENCE_OF(SinglePubInfo))});\n\n    var SubsequentMessage = INTEGER({\n        // requests that resulting certificate be encrypted for the\n        // end entity (following which, POP will be proven in a\n        // confirmation message)\n        encrCert: 0,\n        // requests that CA engage in challenge-response exchange with\n        // end entity in order to prove private key possession\n        challengeResp: 1});\n\n    var POPOPrivKey = CHOICE({\n        // possession is proven in this message (which contains the private\n        // key itself (encrypted for the CA))\n        thisMessage: CTX(0, IMPLICIT(BIT_STRING)), // Deprecated\n        subsequentMessage: CTX(1, IMPLICIT(SubsequentMessage)),\n        // possession will be proven in a subsequent message\n        dhMAC: CTX(2, IMPLICIT(BIT_STRING)), // Deprecated\n        agreeMAC: CTX(3, IMPLICIT(PKMACValue)),\n        encryptedKey: CTX(4, IMPLICIT(EnvelopedData))});\n\n    var PBMParameter = SEQUENCE({\n        salt: OCTET_STRING,\n        // AlgId for a One-Way Function (SHA-1 recommended)\n        owf: AlgorithmIdentifier,\n        // number of times the OWF is applied\n        iterationCount: INTEGER,\n        // the MAC AlgId (e.g., DES-MAC, Triple-DES-MAC [PKCS11], or HMAC [HMAC, RFC2202])\n        mac: AlgorithmIdentifier});\n\n    var PKMACValue = SEQUENCE({\n        // algorithm value shall be PasswordBasedMac {1 2 840 113533 7 66 13}\n        // parameter value is PBMParameter\n        algId: AlgorithmIdentifier,\n        value: BIT_STRING});\n\n    var POPOSigningKeyInput = SEQUENCE({\n        authInfo: CHOICE({\n            // used only if an authenticated identity has been\n            // established for the sender (e.g., a DN from a\n            // previously-issued and currently-valid certificate)\n            sender: CTX(0, EXPLICIT(GeneralName)), // GeneralName choice - explicit\n            // used if no authenticated GeneralName currently exists for\n            // the sender; publicKeyMAC contains a password-based MAC\n            // on the DER-encoded value of publicKey\n            publicKeyMAC: PKMACValue}),\n        publicKey: SubjectPublicKeyInfo});  // from CertTemplate\n\n    var POPOSigningKey = SEQUENCE({\n        poposkInput: OPTIONAL(CTX(0, POPOSigningKeyInput)),\n        algorithmIdentifier: AlgorithmIdentifier,\n        signature: BIT_STRING});\n\n    var ProofOfPossession = CHOICE({\n        // used if the RA has already verified that the requester is in\n        // possession of the private key\n        raVerified: CTX(0, IMPLICIT(NULL)),\n        signature: CTX(1, IMPLICIT(POPOSigningKey)),\n        keyEncipherment: CTX(2, IMPLICIT(POPOPrivKey)),\n        keyAgreement: CTX(3, IMPLICIT(POPOPrivKey))});\n\n    var Controls = SEQUENCE_OF(AttributeTypeAndValue({\n        regToken: RegToken,\n        authenticator: Authenticator,\n        pkiPublicationInfo: PKIPublicationInfo,\n        pkiArchiveOptions: PKIArchiveOptions,\n        oldCertID: OldCertId,\n        protocolEncrKey: ProtocolEncrKey}));\n\n    var OptionalValidity = SEQUENCE({\n        notBefore: OPTIONAL(CTX(0, IMPLICIT(Time))),\n        notAfter: OPTIONAL(CTX(1, IMPLICIT(Time)))}); // at least one MUST be present\n\n    var CertTemplate = SEQUENCE({\n        version: OPTIONAL(CTX(0, IMPLICIT(Version))),\n        serialNumber: OPTIONAL(CTX(1, IMPLICIT(INTEGER))),\n        signingAlg: OPTIONAL(CTX(2, IMPLICIT(AlgorithmIdentifier))),\n        issuer: OPTIONAL(CTX(3, IMPLICIT(Name))),\n        validity: OPTIONAL(CTX(4, IMPLICIT(OptionalValidity))),\n        subject: OPTIONAL(CTX(5, IMPLICIT(Name))),\n        publicKey: OPTIONAL(CTX(6, IMPLICIT(SubjectPublicKeyInfo))),\n        issuerUID: OPTIONAL(CTX(7, IMPLICIT(UniqueIdentifier))),\n        subjectUID: OPTIONAL(CTX(8, IMPLICIT(UniqueIdentifier))),\n        extensions: OPTIONAL(CTX(9, IMPLICIT(Extensions)))});\n\n    var CertRequest = SEQUENCE({\n        certReqId: INTEGER, // ID for matching request and reply\n        certTemplate: CertTemplate, // Selected fields of cert to be issued\n        controls: OPTIONAL(Controls)});   // Attributes affecting issuance\n\n    var UTF8Pairs = UTF8String;\n\n    var CertReq = CertRequest;\n\n    var EncKeyWithID = SEQUENCE({\n        privateKey: PrivateKeyInfo,\n        identifier: OPTIONAL(CHOICE({\n            string: UTF8String,\n            generalName: GeneralName}, function (value) {\n            return typeof value === 'string' || value instanceof String ?\n                    'string' : 'generalName';\n        }))});\n\n    var CertReqMsg = SEQUENCE({\n        certReq: CertRequest,\n        popo: OPTIONAL(ProofOfPossession),\n        // content depends upon key type\n        regInfo: OPTIONAL(SEQUENCE_OF(AttributeTypeAndValue({\n            utf8Pairs: UTF8Pairs,\n            certReq: CertReq,\n            encKeyWithID: EncKeyWithID})))});\n\n    var CertReqMessages = SEQUENCE_OF(CertReqMsg);\n\n\n\n    /*\n     * Certificate Management over CMS\n     * \n     * http://tools.ietf.org/html/rfc5272\n     * \n     */\n\n    var PendInfo = SEQUENCE({\n        pendToken: OCTET_STRING,\n        pendTime: GeneralizedTime});\n\n    var CMCStatus = INTEGER({\n        success: 0,\n        failed: 2,\n        pending: 3,\n        noSupport: 4,\n        confirmRequired: 5,\n        popRequired: 6,\n        partial: 7});\n\n    var CMCFailInfo = INTEGER({\n        badAlg: 0,\n        badMessageCheck: 1,\n        badRequest: 2,\n        badTime: 3,\n        badCertId: 4,\n        unsupportedExt: 5,\n        mustArchiveKeys: 6,\n        badIdentity: 7,\n        popRequired: 8,\n        popFailed: 9,\n        noKeyReuse: 10,\n        internalCAError: 11,\n        tryLater: 12,\n        authDataFail: 13});\n\n    var CMCStatusInfo = SEQUENCE({\n        cMCStatus: CMCStatus,\n        bodyList: SEQUENCE_OF(BodyPartID),\n        statusString: OPTIONAL(UTF8String),\n        otherInfo: OPTIONAL(CHOICE({\n            failInfo: CMCFailInfo,\n            pendInfo: PendInfo}))});\n\n    var AddExtensions = SEQUENCE({\n        pkiDataReference: BodyPartID,\n        certReferences: SEQUENCE_OF(BodyPartID),\n        extensions: SEQUENCE_OF(Extension)});\n\n    var LraPopWitness = SEQUENCE({\n        pkiDataBodyid: BodyPartID,\n        bodyIds: SEQUENCE_OF(BodyPartID)});\n\n    var GetCert = SEQUENCE({\n        issuerName: GeneralName,\n        serialNumber: INTEGER});\n\n    var GetCRL = SEQUENCE({\n        issuerName: Name,\n        cRLName: OPTIONAL(GeneralName),\n        time: OPTIONAL(GeneralizedTime),\n        reasons: OPTIONAL(ReasonFlags)});\n\n    var RevokeRequest = SEQUENCE({\n        issuerName: Name,\n        serialNumber: INTEGER,\n        reason: CRLReason,\n        invalidityDate: OPTIONAL(GeneralizedTime),\n        passphrase: OPTIONAL(OCTET_STRING),\n        comment: OPTIONAL(UTF8String)});\n\n    var DecryptedPOP = SEQUENCE({\n        bodyPartID: BodyPartID,\n        thePOPAlgID: AlgorithmIdentifier,\n        thePOP: OCTET_STRING});\n\n    var CMCCertId = IssuerAndSerialNumber;\n\n    var BodyPartReference = CHOICE({\n        bodyPartID: BodyPartID,\n        bodyPartPath: BodyPartPath});\n\n    var CMCStatusInfoV2 = SEQUENCE({\n        cMCStatus: CMCStatus,\n        bodyList: SEQUENCE_OF(BodyPartReference),\n        statusString: OPTIONAL(UTF8String),\n        otherInfo: OPTIONAL(CHOICE({\n            failInfo: CMCFailInfo,\n            pendInfo: PendInfo,\n            extendedFailInfo: SEQUENCE({\n                failInfoOID: OBJECT_IDENTIFIER,\n                failInfoValue: AttributeValue})}))});\n\n    var PublishTrustAnchors = SEQUENCE({\n        seqNumber: INTEGER,\n        hashAlgorithm: AlgorithmIdentifier,\n        anchorHashes: SEQUENCE_OF(OCTET_STRING)});\n\n    var AuthPublish = BodyPartID;\n\n    var BodyPartList = SEQUENCE_OF(BodyPartID);\n\n    var CMCPublicationInfo = SEQUENCE({\n        hashAlg: AlgorithmIdentifier,\n        certHashes: SEQUENCE_OF(OCTET_STRING),\n        pubInfo: PKIPublicationInfo});\n\n    var ModCertTemplate = SEQUENCE({\n        pkiDataReference: BodyPartPath,\n        certReferences: BodyPartList,\n        replace: DEFAULT(BOOLEAN, true),\n        certTemplate: CertTemplate});\n\n    var ControlsProcessed = SEQUENCE({\n        bodyList: SEQUENCE_OF(BodyPartReference)});\n\n    var IdentifyProofV2 = SEQUENCE({\n        proofAlgID: AlgorithmIdentifier,\n        macAlgId: AlgorithmIdentifier,\n        witness: OCTET_STRING});\n\n    var PopLinkWitnessV2 = SEQUENCE({\n        keyGenAlgorithm: AlgorithmIdentifier,\n        macAlgorithm: AlgorithmIdentifier,\n        witness: OCTET_STRING});\n\n    var TaggedCertificationRequest = SEQUENCE({\n        bodyPartID: BodyPartID,\n        certificationRequest: CertificationRequest});\n\n    var TaggedContentInfo = SEQUENCE({\n        bodyPartID: BodyPartID,\n        contentInfo: ContentInfo});\n\n    var OtherMsg = SEQUENCE({\n        bodyPartID: BodyPartID,\n        otherMsgType: OBJECT_IDENTIFIER,\n        otherMsgValue: ANY}); //DEFINED BY otherMsgType \n\n    var TaggedRequest = CHOICE({\n        tcr: CTX(0, IMPLICIT(TaggedCertificationRequest)),\n        crm: CTX(1, IMPLICIT(CertReqMsg)),\n        orm: CTX(2, IMPLICIT(SEQUENCE({\n            bodyPartID: BodyPartID,\n            requestMessageType: OBJECT_IDENTIFIER,\n            requestMessageValue: ANY})))}); // DEFINED BY requestMessageType\n\n    var EncryptedPOP = SEQUENCE({\n        request: TaggedRequest,\n        cms: ContentInfo,\n        thePOPAlgID: AlgorithmIdentifier,\n        witnessAlgID: AlgorithmIdentifier,\n        witness: OCTET_STRING});\n\n    var TaggedAttribute = ATTRIBUTE({\n        bodyPartID: BodyPartID,\n        attrType: OBJECT_IDENTIFIER,\n        attrValues: function (type) {\n            return SET_OF(type);\n        }\n    }, 'attrType', 'attrValues', AttributeValue)({\n        statusInfo: CMCStatusInfo,\n        identification: UTF8String,\n        identityProof: OCTET_STRING,\n        dataReturn: OCTET_STRING,\n        transactionId: INTEGER,\n        senderNonce: OCTET_STRING,\n        recipientNonce: OCTET_STRING,\n        addExtensions: AddExtensions,\n        encryptedPOP: EncryptedPOP,\n        decryptedPOP: DecryptedPOP,\n        lraPOPWitness: LraPopWitness,\n        getCert: GetCert,\n        getCRL: GetCRL,\n        revokeRequest: RevokeRequest,\n        regInfo: OCTET_STRING,\n        responseInfo: OCTET_STRING,\n        queryPending: OCTET_STRING,\n        popLinkRandom: OCTET_STRING,\n        popLinkWitness: OCTET_STRING,\n        confirmCertAcceptance: CMCCertId,\n        statusInfoV2: CMCStatusInfoV2,\n        trustedAnchors: PublishTrustAnchors,\n        authPublish: AuthPublish,\n        batchRequests: BodyPartList,\n        batchResponses: BodyPartList,\n        publishCert: CMCPublicationInfo,\n        modCertTemplate: ModCertTemplate,\n        controlProcessed: ControlsProcessed,\n        popLinkWitnessV2: PopLinkWitnessV2,\n        identityProofV2: IdentifyProofV2\n    });\n    /**\n     * PKIData Content Type<br><br>\n     *\n     * The PKIData content type is used for the Full PKI Request.  A PKIData\n     * content type is identified by:\n     * <pre>\n     *   id-cct-PKIData ::= {id-pkix id-cct(12) 2 }\n     * </pre>\n     * The ASN.1 structure corresponding to the PKIData content type is:\n     * <pre>\n     *   PKIData ::= SEQUENCE {\n     *       controlSequence    SEQUENCE SIZE(0..MAX) OF TaggedAttribute,\n     *       reqSequence        SEQUENCE SIZE(0..MAX) OF TaggedRequest,\n     *       cmsSequence        SEQUENCE SIZE(0..MAX) OF TaggedContentInfo,\n     *       otherMsgSequence   SEQUENCE SIZE(0..MAX) OF OtherMsg\n     *   }\n     * </pre>\n     * All certification requests encoded into a single PKIData SHOULD be\n     * for the same identity.  RAs that batch process (see Section 6.17) are\n     * expected to place the PKI Requests received into the cmsSequence of a\n     * PKIData. <br><br>\n     * See {@link GostASN1.ContentInfo} and {@link GostASN1.PKIResponse}<br><br>\n     * RFC 5272 references {@link http://tools.ietf.org/html/rfc5272} \n     * \n     * @class GostASN1.PKIData\n     * @extends GostASN1.Sequence\n     * @property {GostASN1.Attributes[]} controlSequence\n     * @property {GostASN1.Sequence[]} reqSequence\n     * @property {GostASN1.ContentInfo[]} cmsSequence\n     * @property {GostASN1.Sequence[]} otherMsgSequence\n     */\n    var PKIData = SEQUENCE({\n        controlSequence: SEQUENCE_OF(TaggedAttribute),\n        reqSequence: SEQUENCE_OF(TaggedRequest),\n        cmsSequence: SEQUENCE_OF(TaggedContentInfo),\n        otherMsgSequence: SEQUENCE_OF(OtherMsg)}, 'PKI REQUEST');\n\n    /**\n     * PKIResponse Content Type<br><br>\n     *\n     * The PKIResponse content type is used for the Full PKI Response.  The\n     * PKIResponse content type is identified by:\n     * <pre>\n     *   id-cct-PKIResponse ::= {id-pkix id-cct(12) 3  }\n     * </pre>\n     * The ASN.1 structure corresponding to the PKIResponse content type is:\n     * <pre>\n     *    PKIResponse ::= SEQUENCE {\n     *        controlSequence   SEQUENCE SIZE(0..MAX) OF TaggedAttribute,\n     *        cmsSequence       SEQUENCE SIZE(0..MAX) OF TaggedContentInfo,\n     *        otherMsgSequence  SEQUENCE SIZE(0..MAX) OF OtherMsg\n     *    }\n     *    \n     *    ReponseBody ::= PKIResponse\n     * </pre>\n     *\n     * Note: In [RFC2797], this ASN.1 type was named ResponseBody.  It has\n     * been renamed to PKIResponse for clarity and the old name kept as a\n     * synonym.<br><br>\n     *\n     * See {@link GostASN1.ContentInfo} and {@link GostASN1.PKIData}<br><br>\n     * \n     * RFC 5272 references {@link http://tools.ietf.org/html/rfc5272} \n     * \n     * @class GostASN1.PKIResponse\n     * @extends GostASN1.Sequence\n     * @property {GostASN1.Attributes[]} controlSequence\n     * @property {GostASN1.ContentInfo[]} cmsSequence\n     * @property {GostASN1.Sequence[]} otherMsgSequence\n     */\n    var PKIResponse = SEQUENCE({\n        controlSequence: SEQUENCE_OF(TaggedAttribute),\n        cmsSequence: SEQUENCE_OF(TaggedContentInfo),\n        otherMsgSequence: SEQUENCE_OF(OtherMsg)}, 'PKI RESPONSE');\n\n\n\n    /**\n     * ASN.1 syntax definitions\n     * \n     * @class GostASN1\n     */\n    function GostASN1() {\n    }\n\n    GostASN1.prototype = {\n        /**\n         * Gost PrivateKey info encoder\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.GostPrivateKeyInfo\n         */\n        GostPrivateKeyInfo: GostPrivateKeyInfo,\n        /**\n         * Gost subject PublicKey info encoder\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.GostSubjectPublicKeyInfo\n         */\n        GostSubjectPublicKeyInfo: GostSubjectPublicKeyInfo,\n        /**\n         * CryptoPro key container header\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.GostKeyContainer\n         */\n        GostKeyContainer: GostKeyContainer,\n        /**\n         * CryptoPro key container name\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.GostKeyContainerName\n         */\n        GostKeyContainerName: GostKeyContainerName,\n        /**\n         * CryptoPro encrypted PrivateKey for key containers\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.GostPrivateKeys\n         */\n        GostPrivateKeys: GostPrivateKeys,\n        /**\n         * CryptoPro PrivateKey masks for key containers\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.GostPrivateMasks\n         */\n        GostPrivateMasks: GostPrivateMasks,\n        /**\n         * ViPNet key container\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.ViPNetInfo\n         */\n        ViPNetInfo: ViPNetInfo,\n        /**\n         * Gost Signature encoders\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.GostSignature\n         */\n        GostSignature: GostSignature,\n        /**\n         * Gost Encrypted key encoder for CMS\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.GostEncryptedKey\n         */\n        GostEncryptedKey: GostEncryptedKey,\n        /**\n         * SignalCom wrapped PrivateKey\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.GostWrappedPrivateKey\n         */\n        GostWrappedPrivateKey: GostWrappedPrivateKey,\n        /**\n         * PKCS#8 PrivateKey info\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.PrivateKeyInfo\n         */\n        PrivateKeyInfo: PrivateKeyInfo,\n        /**\n         * PKCS#8 encrypted PrivateKey info\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.EncryptedPrivateKeyInfo\n         */\n        EncryptedPrivateKeyInfo: EncryptedPrivateKeyInfo,\n        /**\n         * X.509 subject PublicKey info\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.SubjectPublicKeyInfo\n         */\n        SubjectPublicKeyInfo: SubjectPublicKeyInfo,\n        /**\n         * X.509 To be signed Certificate\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.TBSCertificate\n         */\n        TBSCertificate: TBSCertificate,\n        /**\n         * X.509 Certificate\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.Certificate\n         */\n        Certificate: Certificate,\n        /**\n         * PKCS#10 Certification request definition\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.CertificationRequestInfo\n         */\n        CertificationRequestInfo: CertificationRequestInfo,\n        /**\n         * PKCS#10 Certification request \n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.CertificationRequest\n         */\n        CertificationRequest: CertificationRequest,\n        /**\n         * X.509 To be signed CRL\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.TBSCertList\n         */\n        TBSCertList: TBSCertList,\n        /**\n         * X.509 CRL\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.CertificateList\n         */\n        CertificateList: CertificateList,\n        /**\n         * X.509 Attribute Certificate definition\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.AttributeCertificateInfo\n         */\n        AttributeCertificateInfo: AttributeCertificateInfo,\n        /**\n         * X.509 Attribute Certificate\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.AttributeCertificate\n         */\n        AttributeCertificate: AttributeCertificate,\n        /**\n         * CMS Signed Attributes\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.SignedAttributes\n         */\n        SignedAttributes: SignedAttributes,\n        /**\n         * CMS Unsigned Attributes\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.UnsignedAttributes\n         */\n        UnsignedAttributes: UnsignedAttributes,\n        /**\n         * CMS Content definition\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.ContentInfo\n         */\n        ContentInfo: ContentInfo,\n        /**\n         * PKCS#12 Safe Contents\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.SafeContents\n         */\n        SafeContents: SafeContents,\n        /**\n         * PKCS#12 Authenticated Safe\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.AuthenticatedSafe\n         */\n        AuthenticatedSafe: AuthenticatedSafe,\n        /**\n         * PKCS#12 Personal Information Exchange (PFX)\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.PFX\n         */\n        PFX: PFX,\n        /**\n         * PKI Request\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.PKIData\n         */\n        PKIData: PKIData,\n        /**\n         * PKI Response\n         * \n         * @memberOf GostASN1\n         * @instance\n         * @type GostASN1.PKIResponse\n         */\n        PKIResponse: PKIResponse\n    };\n\n    /**\n     * PKCS ASN.1 message syntax and converters  \n     * \n     * @memberOf gostCrypto\n     * @type GostASN1\n     */\n    gostCrypto.asn1 = new GostASN1();\n\nmodule.exports = GostASN1;\n","/**\n * @file Implements the Cryptographic Message Syntax as specified in RFC-2630.\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this \n *    list of conditions and the following disclaimer.\n *    \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *    \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nconst gostCrypto = require('./gostCrypto');\n// const GostASN1 = require('./gostASN1');\n// const GostCert = require('./gostCert');\n\n    /*\n     * Common algorithms\n     */\n    var root = global;\n    var Promise = root.Promise;\n    var Object = root.Object;\n    var CryptoOperationData = root.ArrayBuffer;\n    var Date = root.Date;\n\n    var subtle = gostCrypto.subtle;\n    var asn1 = gostCrypto.asn1;\n    var coding = gostCrypto.coding;\n    var cert = gostCrypto.cert;\n    var providers = gostCrypto.security.providers;\n\n    // Expand javascript object\n    function expand() {\n        var r = {};\n        for (var i = 0, n = arguments.length; i < n; i++) {\n            var item = arguments[i];\n            if (typeof item === 'object')\n                for (var name in item)\n                    if (item.hasOwnProperty(name))\n                        r[name] = item[name];\n        }\n        return r;\n    }\n\n    function defineProperty(object, name, descriptor, enumerable) {\n        if (typeof descriptor !== 'object')\n            descriptor = {value: descriptor};\n        if (enumerable !== undefined)\n            descriptor.enumerable = enumerable;\n        Object.defineProperty(object, name, descriptor);\n    }\n\n    function defineProperties(object, properties, enumerable) {\n        for (var name in properties)\n            defineProperty(object, name, properties[name], enumerable);\n    }\n\n    // Extend javascript class\n    function extend(Super, Class, propertiesObject, propertiesClass) {\n        // If constructor not defined\n        if (typeof Class !== 'function') {\n            propertiesClass = propertiesObject;\n            propertiesObject = Class;\n            Class = function () {\n                Super.apply(this, arguments);\n            };\n        }\n        // Create prototype properties\n        Class.prototype = Object.create(Super.prototype, {\n            constructor: {\n                value: Class\n            },\n            superclass: {\n                value: Super.prototype\n            }\n        });\n        if (propertiesObject)\n            defineProperties(Class.prototype, propertiesObject, true);\n        // Inherites super class properties\n        if (Super !== Object)\n            for (var name in Super)\n                Class[name] = Super[name];\n        Class.super = Super;\n        if (propertiesClass)\n            defineProperties(Class, propertiesClass, true);\n        return Class;\n    }\n\n    // Self resolver\n    function call(callback) {\n        try {\n            callback();\n        } catch (e) {\n        }\n    }\n\n    // Check the buffers to equal\n    function equalBuffers(r1, r2) {\n        var s1 = new Uint8Array(r1),\n                s2 = new Uint8Array(r2);\n        if (s1.length !== s2.length)\n            return false;\n        for (var i = 0, n = s1.length; i < n; i++)\n            if (s1[i] !== s2[i])\n                return false;\n        return true;\n    }\n\n    // True if equal numbers\n    var equalNumbers = (function () {\n        // Convert number to bigendian hex string\n        var hex = function (s) {\n            var t = typeof s;\n            return t === 'undefined' || s === '' ? '0' :\n                    t === 'number' || s instanceof Number ? s.toString(16).toLowerCase() :\n                    s.replace('0x', '').toLowerCase();\n        };\n        // Zero left padding\n        var lpad = function (s, size) {\n            return (new Array(size + 1).join('0') + s).slice(-size);\n        };\n        return function (s1, s2) {\n            s1 = hex(s1);\n            s2 = hex(s2);\n            var len = Math.max(s1.length, s2.length);\n            return lpad(s1, len) === lpad(s2, len);\n        };\n    })();\n\n    // Check equal names\n    function equalNames(name1, name2) {\n        for (var key in name1)\n            if (name1[key] !== name2[key])\n                return false;\n        for (var key in name2)\n            if (name1[key] !== name2[key])\n                return false;\n        return true;\n    }\n\n    // Add unique value to array\n    function addUnique(array, item, comparator) {\n        var found = false;\n        for (var i = 0, n = array.length; i < n; i++)\n            if (comparator(array[i], item)) {\n                found = true;\n                break;\n            }\n        if (!found)\n            array.push(item);\n    }\n\n    // Set content data\n    function setContentData(object, data) {\n        var content = object.content;\n        switch (object.contentType) {\n            case 'data':\n                object.content = data.content;\n                break;\n            case 'digestedData':\n            case 'signedData':\n            case 'authData':\n                content.encapContentInfo = {\n                    eContentType: data.contentType,\n                    eContent: data.content\n                };\n                break;\n            case 'envelopedData':\n            case 'encryptedData':\n                content.encryptedContentInfo = {\n                    contentType: data.contentType,\n                    encryptedContent: data.content\n                };\n                break;\n        }\n    }\n\n    // Get content data\n    function getContentData(object) {\n        var content = object.content;\n        switch (object.contentType) {\n            case 'data':\n                return {\n                    contentType: object.contentType,\n                    content: object.content\n                };\n            case 'digestedData':\n            case 'signedData':\n            case 'authData':\n                var encap = content.encapContentInfo;\n                return  {\n                    contentType: encap.eContentType,\n                    content: encap.eContent\n                };\n            case 'envelopedData':\n            case 'encryptedData':\n                var enc = content.encryptedContentInfo;\n                return {\n                    contentType: enc.contentType,\n                    content: enc.encryptedContent\n                };\n        }\n    }\n\n    // Check content info type\n    function checkContentInfo(contentInfo) {\n        var content, contentType;\n        if (contentInfo) {\n            if (typeof contentInfo === 'string')\n                try {\n                    contentInfo = coding.PEM.decode(contentInfo);\n                } catch (e1) {\n                    contentInfo = coding.Chars.decode(contentInfo);\n                }\n            if (contentInfo instanceof CryptoOperationData)\n                try {\n                    contentInfo = asn1.ContentInfo.decode(contentInfo);\n                } catch (e) {\n                    contentInfo = {contentType: 'data', content: contentInfo};\n                }\n            contentType = contentInfo.contentType;\n            if (!contentType)\n                throw new Error('Invalid content object');\n            content = contentInfo.content;\n            if (!(content instanceof CryptoOperationData))\n                content = content.encode();\n            return {contentType: contentType, content: content};\n        } else\n            contentInfo = {contentType: 'data'};\n        return contentInfo;\n    }\n\n    function createContentInfo(contentInfo) {\n        try {\n            // Some provider has mistake to envelop ContentInfo enstead \n            // content field of ContentInfo\n            contentInfo = new asn1.ContentInfo(contentInfo.content, true);\n        } catch (e) {\n        }\n        // Create situable content info object\n        switch (contentInfo.contentType) {\n            case 'data':\n                return new DataContentInfo(contentInfo);\n            case 'digestedData':\n                return new DigestedDataContentInfo(contentInfo);\n            case 'signedData':\n                return new SignedDataContentInfo(contentInfo);\n            case 'encryptedData':\n                return new EncryptedDataContentInfo(contentInfo);\n            case 'envelopedData':\n                return new EnvelopedDataContentInfo(contentInfo);\n            default:\n                return new asn1.ContentInfo(contentInfo);\n        }\n    }\n    ;\n\n    function matchCert(id, cert) {\n        return (id instanceof CryptoOperationData ? cert.extensions &&\n                equalBuffers(id, cert.extensions.subjectKeyIdentifier) :\n                equalNames(cert.issuer, id.issuer) &&\n                equalNumbers(cert.serialNumber, id.serialNumber));\n    }\n\n    // Get random values\n    function getSeed(length) {\n        var seed = new Uint8Array(length);\n        gostCrypto.getRandomValues(seed);\n        return seed.buffer;\n    }\n\n    // Salt size\n    function saltSize(algorithm) {\n        switch (algorithm.id) {\n            case 'pbeWithSHAAnd40BitRC2-CBC':\n            case 'pbeWithSHAAnd128BitRC2-CBC':\n                return 8;\n            case 'pbeUnknownGost':\n                return 16;\n            case 'sha1':\n                return 20;\n            default:\n                return 32;\n        }\n    }\n\n    // Password to bytes\n    function passwordData(derivation, password) {\n        if (!password)\n            return new CryptoOperationData(0);\n        if (password instanceof CryptoOperationData)\n            return password;\n        if (typeof password !== 'string')\n            throw new Error('The password must be string or raw data type');\n        if (derivation.name.indexOf('CPKDF') >= 0) {\n            // CryptoPro store password\n            var r = [];\n            for (var i = 0; i < password.length; i++) {\n                var c = password.charCodeAt(i);\n                r.push(c & 0xff);\n                r.push(c >>> 8 & 0xff);\n                r.push(0);\n                r.push(0);\n            }\n            return new Uint8Array(r).buffer;\n        } else if (derivation.name.indexOf('PFXKDF') >= 0)\n            // PKCS#12 unicode password\n            return coding.Chars.decode(password + '\\0', 'unicode');\n        else\n            // PKCS#5 password mode\n            return coding.Chars.decode(password, 'utf8');\n    }\n\n    // Define provider for encription algorithm\n    function encryptionProvider(algorithm) {\n        var id = algorithm.id;\n        for (var name in providers) {\n            var provider = providers[name];\n            if (provider.encryption.id === id)\n                return provider;\n        }\n    }\n\n\n\n    /**\n     * Provides facilities for handling certificates, CRLs, etc.\n     * @class GostCMS\n     */\n    function GostCMS() {\n    }\n\n    /**\n     * Message templates\n     * <ul>\n     *      <li>providerName - provider name for key generation, default 'CP-01'</li>\n     *      <li>autoAddCert - automatic add signer certificate to signature, default false</li>\n     *      <li>useKeyIdentifier - true to add Signer as the SignerIdentifier (v3), otherwise, as the IssuerAndSerialNumber (v1) (default false).</li>\n     * </ul>\n     * \n     * @memberOf GostCMS\n     * @instance\n     */\n    var options = {\n        providerName: 'CP-01',\n        autoAddCert: false,\n        useKeyIdentifier: false\n    };\n\n    GostCMS.prototype.options = options;\n\n    /**\n     * The base class for all CMS objects.<br><br>\n     * \n     * A CMS object consists of a content type, and content.<br><br>\n     * \n     * @class GostCMS.DataContentInfo\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content object.\n     * @param {string} defaultSet The default object initialization set.\n     * @extends GostASN1.ContentInfo\n     */\n    function DataContentInfo(contentInfo, defaultSet)\n    {\n        asn1.ContentInfo.call(this, contentInfo || defaultSet || {contentType: 'data'});\n        if (defaultSet && this.contentType !== (defaultSet.contentType || 'data'))\n            throw new Error('Invalid content type');\n    }\n\n    extend(asn1.ContentInfo, DataContentInfo, {\n        /**\n         * Indicates if this is a detached CMS object.\n         * \n         * @memberOf GostCMS.DataContentInfo\n         * @instance\n         * @returns {boolean} true if detached; false otherwise.\n         */\n        isDetached: {\n            value: false,\n            enumerable: true,\n            writable: true\n        },\n        /**\n         * Indicates if an external (detached) signature must be created.\n         * \n         * @memberOf GostCMS.DataContentInfo\n         * @instance\n         * @param {boolean} createDetached True if detached; false otherwise.\n         */\n        writeDetached: function (createDetached)\n        {\n            // Define external signature mode\n            this.isDetached = createDetached;\n        },\n        /**\n         * Encode the message to binary format 'DER' or 'PEM'\n         * \n         * @memberOf GostCMS.DataContentInfo\n         * @instance\n         * @param {string} format\n         * @returns {FormatedData}\n         */\n        encode: function (format)\n        {\n            if (this.isDetached) {\n                var data = getContentData(this);\n                setContentData(this, {contentType: data.contentType});\n                var result = asn1.ContentInfo.method('encode').call(this, format);\n                setContentData(this, data);\n                return result;\n            } else\n                return asn1.ContentInfo.method('encode').call(this, format);\n        },\n        /**\n         * Enclose content to document. \n         * \n         * @memberOf GostCMS.DataContentInfo\n         * @instance\n         * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo\n         * @returns {Promise} Promise to return self object after enclose content\n         */\n        encloseContent: function (contentInfo)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                self.setEnclosed(contentInfo);\n                return self;\n            });\n        },\n        /**\n         * Sets the content of attached document.<br><br>\n         * \n         * This is necessary only in detached mode.\n         * \n         * @memberOf GostCMS.DataContentInfo\n         * @instance\n         * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo - The encapsulated CMS Object.\n         */\n        setEnclosed: function (contentInfo)\n        {\n            setContentData(this, checkContentInfo(contentInfo));\n        },\n        /**\n         * Returns the document which attached. If the content is not attached, the CMS object \n         * which is returned will be degenerate.\n         * \n         * @memberOf GostCMS.DataContentInfo\n         * @instance\n         * @returns {GostASN1.ContentInfo} The encapsulated CMS Object.\n         */\n        getEnclosed: function ()\n        {\n            return createContentInfo(getContentData(this));\n        }\n    });\n\n    /**\n     * This class encapsulates a CMS object of content type binary data.\n     * \n     * @memberOf GostCMS\n     * @type GostCMS.DigestedDataContentInfo\n     */\n    GostCMS.prototype.DataContentInfo = DataContentInfo;\n\n    /**\n     * This class encapsulates a CMS object of content type digested-data.\n     * \n     * @class GostCMS.DigestedDataContentInfo\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo - The content that is to be signed.\n     * @extends GostCMS.DataContentInfo\n     * @extends GostASN1.DigestedData\n     */\n    function DigestedDataContentInfo(contentInfo)\n    {\n        DataContentInfo.call(this, contentInfo, {\n            contentType: 'digestedData',\n            version: 0,\n            digestAlgorithm: providers[options.providerName].digest,\n            encapContentInfo: {\n                eContentType: 'data'\n            },\n            digest: new CryptoOperationData(0)\n        });\n    }\n\n    extend(DataContentInfo, DigestedDataContentInfo, {\n        /**\n         * Enclose the content and calculate the message digest with given digest algorithm\n         * \n         * @memberOf GostCMS.DigestedDataContentInfo\n         * @instance\n         * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo Content data to be enclosed.\n         * @param {(AlgorithmIdentifier|string)} digestAlgorithm Digest algorithm or provider name\n         * @returns {Promise} \n         */\n        encloseContent: function (contentInfo, digestAlgorithm)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                // Set enclosed data\n                self.setEnclosed(contentInfo);\n\n                // Define digest algorithm\n                if (digestAlgorithm) {\n                    var digestProvider = providers[digestAlgorithm];\n                    self.digestAlgorithm = (digestProvider && digestProvider.digest) || digestAlgorithm;\n                }\n\n                // Calculate digest\n                return subtle.digest(self.digestAlgorithm, self.encapContentInfo.eContent);\n            }).then(function (digest) {\n\n                // Set digest attribute\n                self.digest = digest;\n            });\n        },\n        /**\n         * Verify the Message Digest. <br><br>\n         * \n         * @memberOf GostCMS.DigestedDataContentInfo\n         * @instance\n         * @param contentInfo Detached content (optional)\n         * @returns {Promise} Promise to return enclosed object {@link GostASN1.ContentInfo} if digest verified\n         */\n        verify: function (contentInfo)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                // Append attached\n                if (contentInfo)\n                    self.setEnclosed(contentInfo);\n\n                // Check data\n                var dataToVerify = self.encapContentInfo &&\n                        self.encapContentInfo.eContent;\n                if (!dataToVerify)\n                    throw new Error('Detached content is not found');\n\n                // Calculate digest\n                return subtle.digest(self.digestAlgorithm, self.encapContentInfo.eContent);\n            }).then(function (digest) {\n                if (!equalBuffers(digest, self.digest))\n                    throw Error('Message digest is not verified');\n                // Return content\n                return createContentInfo({\n                    contentType: self.encapContentInfo.eContentType,\n                    content: self.encapContentInfo.eContent\n                });\n            });\n        }\n    });\n\n    /**\n     * This class encapsulates a CMS object of content type digested-data.\n     * \n     * @memberOf GostCMS\n     * @type GostCMS.DigestedDataContentInfo\n     */\n    GostCMS.prototype.DigestedDataContentInfo = DigestedDataContentInfo;\n\n    /**\n     * This class encapsulates a CMS object of content type signed-data.\n     * \n     * Use encloseContent or setEnclosed methods to add a enclosed content before add signatures\n     * \n     * @class GostCMS.SignedDataContentInfo\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo - The signed content. \n     * @extends GostCMS.DataContentInfo\n     * @extends GostASN1.SignedData\n     */\n    function SignedDataContentInfo(contentInfo)\n    {\n        DataContentInfo.call(this, contentInfo, {\n            contentType: 'signedData',\n            version: 1,\n            digestAlgorithms: [],\n            encapContentInfo: {\n                eContentType: 'data'\n            },\n            signerInfos: []\n        });\n    }\n\n    extend(DataContentInfo, SignedDataContentInfo, {\n        /**\n         * Add a Signer using the the IssuerAndSerialNumber as the SignerIdentifier i.e a Version1 CMSSignerInfo \n         * or SubjectPublicKeyIdentifier as the SignerIdentifier i.e a Version3 CMSSignerInfo.\n         * \n         * @memberOf GostCMS.SignedDataContentInfo\n         * @instance\n         * @param {GostASN1.PrivateKeyInfo} signerKey Private Key of the signer.\n         * @param {GostCert.X509} signerCert Signer certificate or certificate chain\n         * @param {GostASN1.SignedAttributes} signedAttrs The set of signed attributes. Default undefined. If true or {} standard attributes will be appended: contentType and messageDigest\n         * @param {GostASN1.UnsignedAttributes} unsignedAttrs  The set of unsigned attributes. Default undefined.\n         * @returns {Promise} Promise to return self object after add signature\n         */\n        addSignature: function (signerKey, signerCert, signedAttrs, unsignedAttrs)\n        {\n            var self = this, signerInfo, dataToSign, signerCertChain;\n            return new Promise(call).then(function () {\n                // Check attribures\n                if (!signerKey || !signerCert)\n                    throw new Error('Signer key or certificate is not defined');\n                // Cert chain\n                if (signerCert instanceof Array) {\n                    signerCertChain = signerCert;\n                    signerCert = signerCertChain[0];\n                } else\n                    signerCertChain = [signerCert];\n                // Signature algorithm provider\n                var provider = signerCert.getProvider() ||\n                        providers[options.providerName];\n                var useKeyIdentifier = options.useKeyIdentifier && signerCert.extensions &&\n                        signerCert.extensions.subjectKeyIdentifier;\n                // Get enclosed data\n                dataToSign = self.encapContentInfo.eContent;\n                // Prepare signer info structure\n                signerInfo = {\n                    version: useKeyIdentifier ? 2 : 0,\n                    sid: useKeyIdentifier ? signerCert.extensions.subjectKeyIdentifier : {\n                        issuer: signerCert.issuer,\n                        serialNumber: signerCert.serialNumber},\n                    digestAlgorithm: provider.digest,\n                    signatureAlgorithm: signerCert.subjectPublicKeyInfo.algorithm};\n                // Set an unsigned attributes\n                if (unsignedAttrs)\n                    signerInfo.unsignedAttrs = unsignedAttrs;\n                // For a signed attributes calculate digest\n                if (signedAttrs) {\n                    if (typeof signedAttrs !== 'object')\n                        signedAttrs = {};\n                    return subtle.digest(signerInfo.digestAlgorithm, dataToSign);\n                }\n            }).then(function (digest) {\n                if (digest) {\n                    // Add standard signed attributes\n                    signedAttrs.contentType = self.encapContentInfo.eContentType,\n                            signedAttrs.messageDigest = digest,\n                            signedAttrs.signingTime = new Date();\n                    signerInfo.signedAttrs = signedAttrs,\n                            // Now data to sign = attributes\n                            dataToSign = asn1.SignedAttributes.encode(signerInfo.signedAttrs);\n                }\n\n                // Import the private key\n                return subtle.importKey('pkcs8', asn1.PrivateKeyInfo.encode(signerKey),\n                        signerKey.privateKeyAlgorithm, false, ['sign']);\n            }).then(function (key) {\n\n                // Sign data\n                var algorithm = expand(signerInfo.signatureAlgorithm, {hash: signerInfo.digestAlgorithm});\n                return subtle.sign(algorithm, key, dataToSign);\n            }).then(function (signatureValue) {\n                signerInfo.signatureValue = signatureValue;\n\n                // Add digest algorithm\n                addUnique(self.digestAlgorithms, signerInfo.digestAlgorithm, function (algorithm1, algorithm2) {\n                    return algorithm1.id === algorithm2.id;\n                });\n\n                // Add signer certificate\n                if (options.autoAddCert) {\n                    if (!self.certificates)\n                        self.certificates = [];\n                    for (var i = 0, n = signerCertChain.length; i < n; i++) {\n                        addUnique(self.certificates, signerCertChain[i], function (cert1, cert2) {\n                            return equalNames(cert1.issuer, cert2.issuer) &&\n                                    equalNumbers(cert1.serialNumber, cert2.serialNumber);\n                        });\n                    }\n                }\n\n                // Add signer info\n                self.signerInfos.push(signerInfo);\n            });\n        },\n        /**\n         * Indicates if this object has any signers i.e. checks for the absence of any SignerInfo structures.\n         * CMS (RFC-2630) defines a degenerate object as one which has no signers.\n         * \n         * @memberOf GostCMS.SignedDataContentInfo\n         * @instance\n         * @returns {boolean} True if this object has no signers; false otherwise.\n         */\n        isDegenerate: {\n            get: function () {\n                return !(this.signerInfos && this.signerInfos.length > 0);\n            }\n        },\n        /**\n         * Returns normally if this CMS signed data object contains at least one valid signature, \n         * according to the given trust policy; otherwise throws an Error.<br><br>\n         * \n         * In order to be considered valid, there must be at least one signature on this CMS \n         * message which is validated by one of the certificates included with it; furthermore, \n         * the validating certificate must itself be valid according to the given certificate \n         * trust policy. This latter validation process may involve examining the other certificates \n         * or CRLs included with this object, if called for by the trust policy.<br><br>\n         * \n         * If a signature is encountered for which a certification path can be found, but is \n         * invalid, an Error will be created, but will not be thrown until \n         * all other signatures have been checked. If another signature is found which is valid, \n         * then the method simply returns and no exception at all is thrown. \n         * \n         * @memberOf GostCMS.SignedDataContentInfo\n         * @instance\n         * @param {GostCert.CertificateTrustPolicy} trustPolicy The trust prolicy for verification\n         * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content that was signed (optional)\n         * @returns {Promise} Promise to return enclosed object {@link GostASN1.ContentInfo} if signature verified\n         */\n        verify: function (trustPolicy, contentInfo)\n        {\n            var self = this, result;\n            return new Promise(call).then(function () {\n                // Append attached\n                if (contentInfo)\n                    self.setEnclosed(contentInfo);\n                if (!self.signerInfos || self.signerInfos.length === 0)\n                    throw new Error('No signatures found');\n                // Validate certificate of signers\n                return Promise.all(self.signerInfos.map(function (signerInfo, i) {\n                    var sid = signerInfo.sid, selector = sid instanceof CryptoOperationData ? {\n                        subjectKeyIdentifier: sid\n                    } : {\n                        issuer: sid.issuer,\n                        serialNumber: sid.serialNumber};\n                    // Signing date\n                    var date;\n                    if (signerInfo.signedAttrs && signerInfo.signedAttrs.signingTime)\n                        date = signerInfo.signedAttrs.signingTime;\n                    // Use certificate trust policy validation\n                    return trustPolicy.getValidCertificate(selector,\n                            self.certificates, self.crls, date).catch(function () {\n                        return; // Ignore error\n                    });\n                }));\n\n            }).then(function (certs) {\n                // Get encapsulated data\n                var verifiers = [];\n                // Verify signatures for each signers\n                certs.forEach(function (signerCert) {\n                    if (signerCert)\n                        verifiers.push(self.verifySignature(signerCert).then(function (data) {\n                            result = data; // Enough one valid signature\n                        }, function () {\n                            return; // Ignore error\n                        }));\n                });\n                if (verifiers.length === 0)\n                    throw new Error('Valid verification path not found');\n                return Promise.all(verifiers);\n            }).then(function () {\n                if (!result)\n                    throw Error('Verification path found but no valid signature');\n                // Return content\n                return result;\n            });\n        },\n        /**\n         * Returns successfully if this CMS signed data object contains a signature which is \n         * validated by the given certificate and data; otherwise throws an Error.<br><br>\n         * \n         * This method verifies the specified signature directly and ignores any certificates \n         * or CRLs which may be contained in this CMS object. A more complex verification process, \n         * which does make use of attached certificates and CRLs, is provided by the verify method.\n         * \n         * @memberOf GostCMS.SignedDataContentInfo\n         * @instance\n         * @param {GostCert.X509} signerCert The signer certificate\n         * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content that was signed (optional)\n         * @returns {Promise} Promise to return enclosed object {@link GostASN1.ContentInfo} if signature verified\n         */\n        verifySignature: function (signerCert, contentInfo)\n        {\n            var self = this, signerInfo, dataToVerify, dataDigest;\n            return new Promise(call).then(function () {\n                // Append attached\n                if (contentInfo)\n                    self.setEnclosed(contentInfo);\n                dataToVerify = self.encapContentInfo && self.encapContentInfo.eContent;\n                if (!dataToVerify)\n                    throw new Error('Detached content is not found');\n                // Find signer\n                for (var i = 0; i < self.signerInfos.length; i++) {\n                    var sid = self.signerInfos[i].sid;\n                    if (matchCert(sid, signerCert)) {\n                        signerInfo = self.signerInfos[i];\n                        break;\n                    }\n                }\n                if (!signerInfo)\n                    throw new Error('Signature not found for the certificate');\n                // Choice data for verification\n                if (signerInfo.signedAttrs) {\n                    dataDigest = signerInfo.signedAttrs.messageDigest;\n                    if (!dataDigest)\n                        throw new Error('Message digest must present in signed attributes');\n\n                    // To exclude implicit [0] need to reassemble signed attributes (auto on CTX object)\n                    dataToVerify = signerInfo.signedAttrs.encode();\n                }\n                if (!dataToVerify)\n                    throw new Error('Data for verification not found');\n                // Verify signature\n                var algorithm = expand(signerInfo.signatureAlgorithm, {hash: signerInfo.digestAlgorithm});\n                return signerCert.verifySignature(dataToVerify, signerInfo.signatureValue, algorithm);\n            }).then(function (result) {\n                if (!result)\n                    throw new Error('Signature not verified');\n                // Verify digest\n                if (signerInfo.signedAttrs)\n                    return subtle.digest(signerInfo.digestAlgorithm, self.encapContentInfo.eContent);\n            }).then(function (digest) {\n                if (digest && !equalBuffers(digest, dataDigest))\n                    throw new Error('Message digest not verified');\n                // Return content\n                return createContentInfo({\n                    contentType: self.encapContentInfo.eContentType,\n                    content: self.encapContentInfo.eContent\n                });\n            });\n        }\n    });\n\n    /**\n     * This class encapsulates a CMS object of content type signed-data.\n     * \n     * @memberOf GostCMS\n     * @type GostCMS.SignedDataContentInfo\n     */\n    GostCMS.prototype.SignedDataContentInfo = SignedDataContentInfo;\n\n    /**\n     * This class encapsulates a CMS object of content type encrypted-data.\n     * \n     * @class GostCMS.EncryptedDataContentInfo\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The encrypted data content.\n     * @extends GostCMS.DataContentInfo\n     * @extends GostASN1.EncryptedData\n     */\n    function EncryptedDataContentInfo(contentInfo)\n    {\n        DataContentInfo.call(this, contentInfo, {\n            contentType: 'encryptedData',\n            version: 0,\n            encryptedContentInfo: {\n                contentType: 'data',\n                contentEncryptionAlgorithm: providers[options.providerName].encryption\n            }\n        });\n    }\n\n    extend(DataContentInfo, EncryptedDataContentInfo, {\n        /**\n         * Encrypt the content with given encryption algorithm, secret key or password\n         * \n         * @memberOf GostCMS.EncryptedDataContentInfo\n         * @instance\n         * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content data to be enclosed.\n         * @param {Key|string} contentEncryptionKey content The encryption key or password for derive key\n         * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\n         * @returns {Promise} Promise to return self object after encrypt content\n         */\n        encloseContent: function (contentInfo, contentEncryptionKey, encryptionAlgorithm)\n        {\n            var self = this, encryption, derivation;\n            return new Promise(call).then(function () {\n                // Check content info\n                contentInfo = checkContentInfo(contentInfo);\n                if (!contentInfo.content)\n                    throw new Error('Content for encryption must be specified');\n\n                // Define encryption algorithm\n                var type = typeof contentEncryptionKey === 'string' ? 'pbes' : 'encryption';\n                if (encryptionAlgorithm) {\n                    var provider = providers[encryptionAlgorithm];\n                    encryptionAlgorithm = (provider && provider[type]) || encryptionAlgorithm;\n                } else\n                    encryptionAlgorithm = providers[options.providerName][type];\n                // Prepare content encryption key\n                if (encryptionAlgorithm.derivation) {\n                    // Encrypt with password\n                    derivation = expand(encryptionAlgorithm.derivation);\n                    encryption = expand(encryptionAlgorithm.encryption);\n                    derivation.salt = getSeed(saltSize(encryptionAlgorithm));\n                    // Import password for key generation\n                    var integrityKey;\n                    return subtle.importKey('raw', passwordData(derivation, contentEncryptionKey),\n                            derivation, false, ['deriveKey', 'deriveBits']).then(function (key) {\n                        integrityKey = key;\n                        // Derive IV\n                        if (derivation.name.indexOf('PFXKDF') >= 0) {\n                            derivation.diversifier = 2;\n                            return subtle.deriveBits(derivation, integrityKey, 64);\n                        }\n                    }).then(function (iv) {\n                        if (iv)\n                            encryption.iv = iv;\n                        // Generate key from password \n                        derivation.diversifier = 1;\n                        return subtle.deriveKey(derivation, integrityKey, encryption, false, ['encrypt']);\n                    }).then(function (encryptionKey) {\n                        // Content encryption with key\n                        return encryptionKey;\n                    });\n                } else {\n                    // Base encryption\n                    encryption = expand(encryptionAlgorithm);\n                    if (contentEncryptionKey instanceof CryptoOperationData) {\n                        // Import key\n                        return subtle.importKey('raw', contentEncryptionKey, encryption, false, ['encrypt']);\n                    } else if (contentEncryptionKey.type === 'secret') {\n                        return contentEncryptionKey;\n                    } else\n                        throw new Error('Content encryption key must be raw data or secret key type');\n                }\n            }).then(function (encryptionKey) {\n                // Initial vector\n                if (!encryption.iv)\n                    encryption.iv = getSeed(8);\n\n                return subtle.encrypt(encryption, encryptionKey, contentInfo.content);\n            }).then(function (encryptedContent) {\n                if (encryptionAlgorithm.derivation) {\n                    delete derivation.diversifier;\n                    encryptionAlgorithm = expand(encryptionAlgorithm, {\n                        derivation: derivation,\n                        encryption: encryption\n                    });\n                } else\n                    encryptionAlgorithm = encryption;\n                // Set enclosed data\n                self.encryptedContentInfo = {\n                    contentType: contentInfo.contentType,\n                    contentEncryptionAlgorithm: encryptionAlgorithm,\n                    encryptedContent: encryptedContent\n                };\n                return self;\n            });\n        },\n        /**\n         * Returns the decrypted content. \n         * \n         * @memberOf GostCMS.EncryptedDataContentInfo\n         * @instance\n         * @param {Key|string} decryptionKey The decryption key or password for derive key   \n         * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The detached content (optional).\n         * @returns {Promise} Promise to return enclosed object {@ling GostASN1.ContentInfo} after decrypt content\n         */\n        getEnclosed: function (decryptionKey, contentInfo)\n        {\n            var self = this, encryption, derivation, encryptedContent;\n            return new Promise(call).then(function () {\n                // Append attached\n                if (contentInfo)\n                    self.setEnclosed(contentInfo);\n                encryptedContent = self.encryptedContentInfo.encryptedContent;\n                if (!encryptedContent)\n                    throw new Error('Encrypted content must be specified');\n\n                encryption = expand(self.encryptedContentInfo.contentEncryptionAlgorithm);\n                if (encryption.derivation) {\n                    // Decrypt with password\n                    derivation = expand(encryption.derivation);\n                    encryption = expand(encryption.encryption);\n                    // Derive encryption key from password\n                    var integrityKey;\n                    return subtle.importKey('raw', passwordData(derivation, decryptionKey),\n                            derivation, false, ['deriveKey', 'deriveBits']).then(function (key) {\n                        integrityKey = key;\n                        // Derive iv for PFX\n                        if (derivation.name.indexOf('PFXKDF') >= 0) {\n                            derivation.diversifier = 2;\n                            return subtle.deriveBits(derivation, integrityKey, 64);\n                        }\n                    }).then(function (iv) {\n                        if (iv)\n                            encryption.iv = iv;\n                        // Generate key from password \n                        derivation.diversifier = 1;\n                        return subtle.deriveKey(derivation, integrityKey, encryption, false, ['decrypt']);\n                    });\n                } else {\n                    // Base encryption. Password should be secret key\n                    if (decryptionKey instanceof CryptoOperationData) {\n                        // Import key\n                        return subtle.importKey('raw', decryptionKey, encryption, false, ['decrypt']);\n                    } else if (decryptionKey.type === 'secret') {\n                        return decryptionKey;\n                    } else\n                        throw new Error('Decryption key must be raw data or secret key type');\n                }\n            }).then(function (encryptionKey) {\n                // Decrypt key with encryption key\n                return subtle.decrypt(encryption, encryptionKey, encryptedContent);\n            }).then(function (decryptedContent) {\n                // Create content info object\n                return createContentInfo({\n                    contentType: self.encryptedContentInfo.contentType,\n                    content: decryptedContent\n                });\n            });\n        }\n    });\n\n    /**\n     * This class encapsulates a CMS object of content type encrypted-data.\n     * \n     * @memberOf GostCMS\n     * @type GostCMS.EncryptedDataContentInfo\n     */\n    GostCMS.prototype.EncryptedDataContentInfo = EncryptedDataContentInfo;\n    /**\n     * This class encapsulates a CMS object of content type enveloped-data.\n     * \n     * @class GostCMS.EnvelopedDataContentInfo\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The encrypted data content.\n     * @extends GostCMS.DataContentInfo\n     * @extends GostASN1.EnvelopedData\n     */\n    function EnvelopedDataContentInfo(contentInfo)\n    {\n        DataContentInfo.call(this, contentInfo, {\n            contentType: 'envelopedData',\n            version: 0,\n            recipientInfos: [],\n            encryptedContentInfo: {\n                contentType: 'data',\n                contentEncryptionAlgorithm: providers[options.providerName].encryption\n            }\n        });\n    }\n\n    extend(DataContentInfo, EnvelopedDataContentInfo, {\n        /**\n         * Generate content encryption key with given encryption algorithm and encrypt the content\n         * \n         * @memberOf GostCMS.EnvelopedDataContentInfo\n         * @instance\n         * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content data to be enclosed.\n         * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\n         * @returns {Promise} Promise to return self object after encrypt content\n         */\n        encloseContent: function (contentInfo, encryptionAlgorithm)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                // Check content info\n                contentInfo = checkContentInfo(contentInfo);\n                if (!contentInfo.content)\n                    throw new Error('Content for encryption must be specified');\n                // Define encryption algorithm\n                if (encryptionAlgorithm) {\n                    var provider = providers[encryptionAlgorithm];\n                    encryptionAlgorithm = (provider && provider.encryption) || encryptionAlgorithm;\n                } else\n                    encryptionAlgorithm = providers[options.providerName].encryption;\n                // Generate key for encryption content\n                return subtle.generateKey(encryptionAlgorithm, true, ['encrypt']);\n            }).then(function (encryptionKey) {\n                // Encrypt content\n                self.contentEncryptionKey = encryptionKey;\n                // Initial vector\n                if (!encryptionAlgorithm.iv)\n                    encryptionAlgorithm.iv = getSeed(8);\n                return subtle.encrypt(encryptionAlgorithm, encryptionKey, contentInfo.content);\n            }).then(function (encryptedContent) {\n                self.encryptedContentInfo = {\n                    contentType: contentInfo.contentType,\n                    contentEncryptionAlgorithm: encryptionAlgorithm,\n                    encryptedContent: encryptedContent\n                };\n                return self;\n            });\n        },\n        /**\n         * Add a recipient. <br><br>\n         * \n         * Uses the Recipient Information with IssuerAndSerialNumber as the Recipient Identifier.\n         * Note: If senderCert specified uses the Key Agreement algorithm overwise Key Transport algorithm.\n         * \n         * @memberOf GostCMS.EnvelopedDataContentInfo\n         * @instance\n         * @param {GostCert.X509} recipientCert The certificate of recepient\n         * @param {(AlgorithmIdentifier|string)} keyEncryptionAlgorithm Key encryption algorithm or provider name\n         * @param {GostASN1.PrivateKeyInfo} senderKey The private key of sender for key agreement protocol\n         * @param {GostCert.X509} senderCert The certificate of sender for key agreement protocol\n         * @returns {Promise} Promise to return self object after add recipient\n         */\n        addRecipient: function (recipientCert, keyEncryptionAlgorithm, senderKey, senderCert)\n        {\n            var self = this, privateKey, encryptionProvider, derivation, wrapping;\n            return new Promise(call).then(function () {\n                // Check for recepient cert\n                recipientCert = new cert.X509(recipientCert);\n                if (keyEncryptionAlgorithm && typeof keyEncryptionAlgorithm !== 'string' &&\n                        !keyEncryptionAlgorithm.algorithm) {\n                    // Sender parameters\n                    senderCert = senderKey;\n                    senderKey = keyEncryptionAlgorithm;\n                    keyEncryptionAlgorithm = undefined;\n                }\n                if (keyEncryptionAlgorithm) {\n                    encryptionProvider = providers[keyEncryptionAlgorithm];\n                } else\n                    encryptionProvider = recipientCert.getProvider();\n\n                // Check for content encryption key\n                if (!self.contentEncryptionKey)\n                    throw new Error('The content encryption key is not assigned');\n\n                if (senderCert) {\n                    // Sender certificate for agreement protocol\n                    var senderCertChain;\n                    if (senderCert instanceof Array) {\n                        senderCertChain = senderCert;\n                        senderCert = senderCertChain[0];\n                    } else\n                        senderCertChain = [senderCert];\n\n                    // Add sender certificate\n                    if (options.autoAddCert) {\n                        if (!self.originatorInfo)\n                            self.originatorInfo = {certs: []};\n                        else if (!self.originatorInfo.certs)\n                            self.originatorInfo.certs = [];\n                        for (var i = 0, n = senderCertChain.length; i < n; i++) {\n                            addUnique(self.originatorInfo.certs, senderCertChain[i], function (cert1, cert2) {\n                                return equalNames(cert1.issuer, cert2.issuer) &&\n                                        equalNumbers(cert1.serialNumber, cert2.serialNumber);\n                            });\n                        }\n                    }\n                    // Key Agreement\n                    if (encryptionProvider)\n                        keyEncryptionAlgorithm = expand(encryptionProvider.agreement);\n                    else\n                        encryptionProvider = recipientCert.getProvider();\n                    // Certificates must have similar curve parameters\n                    if (recipientCert.subjectPublicKeyInfo.algorithm.namedCurve !==\n                            senderCert.subjectPublicKeyInfo.algorithm.namedCurve)\n                        throw new Error('The sender and the recipient have different public key algorithms');\n                    // Get private sender key\n                    return subtle.importKey('pkcs8', senderKey.encode(), senderKey.privateKeyAlgorithm,\n                            false, ['deriveKey']);\n                } else {\n                    // Key Transport\n                    if (encryptionProvider)\n                        keyEncryptionAlgorithm = expand(recipientCert.subjectPublicKeyInfo.algorithm);\n                    else\n                        encryptionProvider = recipientCert.getProvider();\n                    // Generate key pair\n                    return subtle.generateKey(keyEncryptionAlgorithm, true, ['deriveKey']).then(function (keyPair) {\n                        keyEncryptionAlgorithm['public'] = keyPair.publicKey;\n                        return keyPair.privateKey;\n                    });\n                }\n            }).then(function (key) {\n                privateKey = key;\n                // Get public key from recipient certificate\n                return subtle.importKey('spki', recipientCert.subjectPublicKeyInfo.encode(),\n                        recipientCert.subjectPublicKeyInfo.algorithm, false, ['deriveKey', 'deriveBits']);\n            }).then(function (publicKey) {\n                // Derivate key encryption key\n                keyEncryptionAlgorithm.ukm = getSeed(8);\n                derivation = expand(encryptionProvider.agreement,\n                        {sBox: keyEncryptionAlgorithm.sBox, ukm: keyEncryptionAlgorithm.ukm, 'public': publicKey});\n                wrapping = expand(keyEncryptionAlgorithm.wrapping || encryptionProvider.wrapping,\n                        {ukm: keyEncryptionAlgorithm.ukm});\n                return subtle.deriveKey(derivation, privateKey, wrapping, true, ['wrapKey']);\n            }).then(function (wrappingKey) {\n                // Wrap content encryption key \n                keyEncryptionAlgorithm.wrapping = wrapping;\n                return subtle.wrapKey('raw', self.contentEncryptionKey, wrappingKey, wrapping);\n            }).then(function (wrappedKey) {\n                // Create recipient info\n                var recipientInfo;\n                var useKeyIdentifier = options.useKeyIdentifier && recipientCert.extensions &&\n                        recipientCert.extensions.subjectKeyIdentifier,\n                        rid = useKeyIdentifier ? recipientCert.extensions.subjectKeyIdentifier : {\n                            issuer: recipientCert.issuer,\n                            serialNumber: recipientCert.serialNumber};\n                if (senderCert) {\n                    var spki = senderCert.subjectPublicKeyInfo;\n                    recipientInfo = {// KeyAgreeRecipientInfo\n                        version: 3, // always set to 3\n                        originator: {\n                            algorithm: spki.algorithm,\n                            publicKey: spki.subjectPublicKey\n                        },\n                        ukm: keyEncryptionAlgorithm.ukm,\n                        keyEncryptionAlgorithm: keyEncryptionAlgorithm,\n                        recipientEncryptedKeys: [{// use only one recipient in domain\n                                rid: rid,\n                                encryptedKey: asn1.GostEncryptedKey(keyEncryptionAlgorithm).encode(wrappedKey)\n                            }]\n                    };\n                } else {\n                    recipientInfo = {\n                        version: 0, // always set to 0 or 2\n                        rid: rid,\n                        keyEncryptionAlgorithm: keyEncryptionAlgorithm,\n                        encryptedKey: asn1.GostEncryptedKey(keyEncryptionAlgorithm).encode({\n                            algorithm: keyEncryptionAlgorithm,\n                            sessionEncryptedKey: wrappedKey\n                        })\n                    };\n                }\n                self.recipientInfos.push(recipientInfo);\n                return self;\n            });\n        },\n        /**\n         * Returns the decrypted content. \n         * \n         * @memberOf GostCMS.EnvelopedDataContentInfo\n         * @instance\n         * @param {GostASN1.PrivateKeyInfo} recipientKey The decryption key or password for derive key   \n         * @param {GostCert.X509} recipientCert  The decryption key or password for derive key   \n         * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The detached content (optional).\n         * @param {GostCert.X509} originatorCert The originator certificate (optional).\n         * @returns {Promise} Promise to return enclosed object {@ling GostASN1.ContentInfo} after decrypt content\n         */\n        getEnclosed: function (recipientKey, recipientCert, contentInfo, originatorCert)\n        {\n            var self = this, wrappedKey, encryptedContent, derivation, wrapping, encryption;\n            return new Promise(call).then(function () {\n                var encryptionProvider = recipientCert.getProvider();\n                // Append attached\n                if (contentInfo)\n                    self.setEnclosed(contentInfo);\n                encryptedContent = self.encryptedContentInfo.encryptedContent;\n                if (!encryptedContent)\n                    throw new Error('Encrypted content must be specified');\n\n                encryption = self.encryptedContentInfo.contentEncryptionAlgorithm;\n\n                // Find receiver\n                for (var i = 0; i < self.recipientInfos.length; i++) {\n                    var recipientInfo = self.recipientInfos[i],\n                            algorithm = expand(recipientInfo.keyEncryptionAlgorithm);\n                    if (recipientInfo.rid) {\n                        if (matchCert(recipientInfo.rid, recipientCert)) {\n                            // Algorithm and wrapped key\n                            var transportKey = asn1.GostEncryptedKey(algorithm).decode(recipientInfo.encryptedKey).object;\n                            wrappedKey = transportKey.sessionEncryptedKey;\n                            algorithm = expand(algorithm, transportKey.algorithm);\n                            derivation = expand(encryptionProvider.agreement, {ukm: algorithm.ukm, sBox: algorithm.sBox});\n                            wrapping = expand(encryptionProvider.wrapping, algorithm.wrapping, {ukm: algorithm.ukm});\n                            return algorithm['public'];\n                        }\n                    } else {\n                        var keys = recipientInfo.recipientEncryptedKeys;\n                        if (keys) {\n                            for (var j = 0; j < keys.length; j++) {\n                                if (matchCert(keys[j].rid, recipientCert)) {\n                                    // Algorithm and wrapped key\n                                    algorithm = expand(encryptionProvider.agreement, algorithm, {ukm: recipientInfo.ukm});\n                                    wrappedKey = asn1.GostEncryptedKey(algorithm).decode(keys[j].encryptedKey).object;\n                                    derivation = algorithm;\n                                    wrapping = expand(algorithm.wrapping || encryptionProvider.wrapping, {ukm: recipientInfo.ukm});\n                                    // Check originator\n                                    var originator = recipientInfo.originator;\n                                    if (originator.algorithm) {\n                                        var spki = new asn1.SubjectPublicKeyInfo({\n                                            algorithm: originator.algorithm,\n                                            subjectPublicKey: originator.publicKey});\n                                        return subtle.importKey('spki', spki.encode(), spki.algorithm, false, ['deriveKey', 'deriveBits']);\n                                    } else if (originatorCert && matchCert(originator, originatorCert))\n                                        return importKey('pkcs', originatorCert.subjectPublicKeyInfo.encode(),\n                                                originatorCert.subjectPublicKeyInfo.algorithm, false, ['deriveKey', 'deriveBits']);\n                                    else\n                                        throw Error('Originator certificate not specified or not valid');\n                                }\n                            }\n                        }\n                    }\n                }\n                throw new Error('Recipient not found or format not supported');\n            }).then(function (publicKey) {\n                derivation['public'] = publicKey;\n                // Import private key\n                return subtle.importKey('pkcs8', recipientKey.encode(), recipientKey.privateKeyAlgorithm,\n                        false, ['deriveKey', 'deriveBits']);\n            }).then(function (privateKey) {\n                // Derive key\n                return subtle.deriveKey(derivation, privateKey, wrapping, true, ['unwrapKey']);\n            }).then(function (unwrappingKey) {\n                // Unwrap key\n                return subtle.unwrapKey('raw', wrappedKey, unwrappingKey,\n                        wrapping, encryption, false, ['decrypt']);\n            }).then(function (encryptionKey) {\n                // Decrypt content\n                return subtle.decrypt(encryption, encryptionKey, encryptedContent);\n            }).then(function (decryptedContent) {\n                return createContentInfo({\n                    contentType: self.encryptedContentInfo.contentType,\n                    content: decryptedContent\n                });\n            });\n        }\n    });\n\n    /**\n     * This class encapsulates a CMS object of content type enveloped-data.\n     * \n     * @memberOf GostCMS\n     * @type GostCMS.EnvelopedDataContentInfo\n     */\n    GostCMS.prototype.EnvelopedDataContentInfo = EnvelopedDataContentInfo;\n\n    /**\n     * Implements the Cryptographic Message Syntax as specified in RFC-2630.\n     * \n     * @memberOf gostCrypto\n     * @type GostCMS\n     */\n    gostCrypto.cms = new GostCMS();\n\nmodule.exports = GostCMS;\n","/**\n * @file Provides facilities for handling certificates, CRLs, etc.\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this \n *    list of conditions and the following disclaimer.\n *    \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *    \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nconst gostCrypto = require('./gostCrypto');\n\n    /*\n     * Common algorithms\n     * \n     */\n    var root = global;\n    var Promise = root.Promise;\n    var Object = root.Object;\n    var CryptoOperationData = root.ArrayBuffer;\n    var Date = root.Date;\n\n    // Crypto subtle\n    var subtle = gostCrypto.subtle;\n\n    // Coding\n    var coding = gostCrypto.coding;\n\n    // ASN.1 syntax\n    var asn1 = gostCrypto.asn1;\n\n    // Providers\n    var providers = gostCrypto.security.providers;\n\n    // Expand javascript object\n    function expand(r) {\n        for (var i = 1, n = arguments.length; i < n; i++) {\n            var item = arguments[i];\n            if (typeof item === 'object')\n                for (var name in item)\n                    if (item.hasOwnProperty(name))\n                        r[name] = item[name];\n        }\n        return r;\n    }\n\n    // Extend javascript class\n    // function extend(Class) {\n    //     var F = function () {\n    //     };\n    //     F.prototype = Class.prototype;\n    //     var r = new F, args = [r];\n    //     for (var i = 1; i < arguments.length; i++)\n    //         args.push(arguments[i]);\n    //     return expand.apply(this, args);\n    // }\n\n    // Today date + n days\n    function today(n) {\n        var date = new Date();\n        date.setHours(0, 0, 0, 0);\n        if (n)\n            date.setDate(date.getDate() + n);\n        return date;\n    }\n\n    // Self resolver\n    function call(callback) {\n        try {\n            callback();\n        } catch (e) {\n        }\n    }\n\n    // Serial number\n    function genSerialNumber() {\n        var seed = new Uint8Array(4);\n        gostCrypto.getRandomValues(seed);\n        seed[0] = seed[0] & 0x7f;\n        return coding.Int16.encode(seed);\n    }\n\n    // True if equal numbers\n    var equalNumbers = (function () {\n        // Convert number to bigendian hex string\n        var hex = function (s) {\n            var t = typeof s;\n            return t === 'undefined' || s === '' ? '0' :\n                    t === 'number' || s instanceof Number ? s.toString(16).toLowerCase() :\n                    s.replace('0x', '').toLowerCase();\n        };\n        // Zero left padding\n        var lpad = function (s, size) {\n            return (new Array(size + 1).join('0') + s).slice(-size);\n        };\n        return function (s1, s2) {\n            s1 = hex(s1);\n            s2 = hex(s2);\n            var len = Math.max(s1.length, s2.length);\n            return lpad(s1, len) === lpad(s2, len);\n        };\n    })();\n\n    // Check equal names\n    function equalNames(name1, name2) {\n        for (var key in name1)\n            if (name1[key] !== name2[key])\n                return false;\n        for (var key in name2)\n            if (name1[key] !== name2[key])\n                return false;\n        return true;\n    }\n\n    // Check the buffers to equal\n    function equalBuffers(r1, r2) {\n        var s1 = new Uint8Array(r1),\n                s2 = new Uint8Array(r2);\n        if (s1.length !== s2.length)\n            return false;\n        for (var i = 0, n = s1.length; i < n; i++)\n            if (s1[i] !== s2[i])\n                return false;\n        return true;\n    }\n\n    // Match certificate\n    function matchCertificate(cert, selector) {\n        var skid = cert.extensions && cert.extensions.subjectKeyIdentifier;\n        return (cert && selector &&\n                (!selector.issuer || equalNames(cert.issuer, selector.issuer)) &&\n                (!selector.serialNumber || equalNumbers(cert.serialNumber, selector.serialNumber)) &&\n                (!selector.subjectKeyIdentifier || equalBuffers(skid, selector.subjectKeyIdentifier)) &&\n                (!selector.subject || equalNames(cert.subject, selector.subject)) &&\n                (!selector.date || (cert.notBefore.getTime() <= selector.date.getTime() &&\n                        cert.notAfter.getTime() > selector.date.getTime())));\n    }\n\n    // Create authority certificate selector\n    function authoritySelector(cert, extensions, date) {\n        var selector = {subject: cert.issuer, date: date},\n        akid = extensions && extensions.authorityKeyIdentifier;\n        if (akid) {\n            selector.subjectKeyIdentifier = akid.keyIdentifier;\n            if (akid.authorityCertIssuer && akid.authorityCertIssuer[0] &&\n                    akid.authorityCertSerialNumber) {\n                selector.issuer = akid.authorityCertIssuer[0];\n                selector.serialNumber = akid.authorityCertSerialNumber;\n            }\n        }\n        return selector;\n    }\n\n    // Find certificates\n    function selectCertificates(certs, selector) {\n        var result = [];\n        for (var i = 0, n = certs.length; i < n; i++)\n            if (matchCertificate(certs[i], selector))\n                result.push(certs[i]);\n        return result;\n    }\n\n    // Match CRL\n    function matchCRL(crl, selector) {\n        return ((!selector.issuer || equalNames(crl.issuer, selector.issuer)) &&\n                (!selector.date || (crl.thisUpdate.getTime() < selector.date.getTime())));\n    }\n\n    // Find certificates\n    function selectCRLs(crls, selector) {\n        var result = [];\n        for (var i = 0, n = crls.length; i < n; i++)\n            if (matchCRL(crls[i], selector))\n                result.push(crls[i]);\n        return result;\n    }\n\n    // Define provider for key algorithm\n    function keyProvider(algorithm) {\n        var id = algorithm.id;\n        for (var name in providers) {\n            var provider = providers[name];\n            if (provider.publicKey.id === id)\n                return provider;\n        }\n    }\n\n    function defineProperty(object, name, descriptor, enumerable) {\n        if (typeof descriptor !== 'object')\n            descriptor = {value: descriptor};\n        if (enumerable !== undefined)\n            descriptor.enumerable = enumerable;\n        Object.defineProperty(object, name, descriptor);\n    }\n\n    function defineProperties(object, properties, enumerable) {\n        for (var name in properties)\n            defineProperty(object, name, properties[name], enumerable);\n    }\n\n    // Extend javascript class\n    function extend(Super, Class, propertiesObject, propertiesClass) {\n        // If constructor not defined\n        if (typeof Class !== 'function') {\n            propertiesClass = propertiesObject;\n            propertiesObject = Class;\n            Class = function () {\n                Super.apply(this, arguments);\n            };\n        }\n        // Create prototype properties\n        Class.prototype = Object.create(Super.prototype, {\n            constructor: {\n                value: Class\n            },\n            superclass: {\n                value: Super.prototype\n            }\n        });\n        if (propertiesObject)\n            defineProperties(Class.prototype, propertiesObject, true);\n        // Inherites super class properties\n        if (Super !== Object)\n            for (var name in Super)\n                Class[name] = Super[name];\n        Class.super = Super;\n        if (propertiesClass)\n            defineProperties(Class, propertiesClass, true);\n        return Class;\n    }\n\n\n\n    /**\n     * Provides facilities for handling certificates, CRLs, etc.\n     * \n     * @class GostCert\n     */\n    function GostCert() {\n    }\n\n    /**\n     * Certificate templates\n     * <ul>\n     *      <li>providerName - provider name for key generation, default 'CP-01'</li>\n     *      <li>subject - template of subject name {countryName: 'RU', commonName: 'Anonymous'}</li>\n     *      <li>caKeyUsage - default key usages for a CA certificates \n     *          ['digitalSignature', 'nonRepudiation', 'keyEncipherment',\n     *          'dataEncipherment', 'keyAgreement', 'keyCertSign', 'cRLSign']</li>\n     *      <li>caExtKeyUsage - default extended key usages for a CA certificates \n     *          ['serverAuth', 'clientAuth', 'codeSigning', 'emailProtection', 'ipsecEndSystem',\n     *          'ipsecTunnel', 'ipsecUser', 'timeStamping', 'OCSPSigning']</li>\n     *      <li>userKeyUsage - default key usages for a user certificate \n     *          ['digitalSignature', 'nonRepudiation', 'keyEncipherment', 'dataEncipherment', 'keyAgreement'],\n     *      <li>userExtKeyUsage - default extended key usages for user certificate \n     *          ['clientAuth', 'emailProtection']</li>\n     *      <li>days - validity of the certificate in days, default 7305</li>\n     * </ul>\n     * \n     * @memberOf GostCert\n     * @instance\n     */\n    var options = {\n        providerName: 'CP-01',\n        subject: {countryName: 'RU', commonName: 'Anonymous'},\n        caKeyUsage: ['digitalSignature', 'nonRepudiation', 'keyEncipherment',\n            'dataEncipherment', 'keyAgreement', 'keyCertSign', 'cRLSign'],\n        caExtKeyUsage: ['serverAuth', 'clientAuth', 'codeSigning', 'emailProtection', 'ipsecEndSystem',\n            'ipsecTunnel', 'ipsecUser', 'timeStamping', 'OCSPSigning'],\n        userKeyUsage: ['digitalSignature', 'nonRepudiation', 'keyEncipherment', 'dataEncipherment', 'keyAgreement'],\n        userExtKeyUsage: ['clientAuth', 'emailProtection'],\n        days: 7305\n    };\n\n    GostCert.prototype.options = options;\n\n    /**\n     * This class encapsulates X.509 Version 3 certificates.<br><br>\n     * \n     * Constructs an X.509 certificate from the given DER encoding or ASN.1 Certificate object.\n     * \n     * @class GostCert.X509\n     * @extends GostASN1.Certificate\n     * @param {(FormatedData|GostASN1.Certificate)} cert The certificate\n     */\n    var X509 = function (cert)\n    {\n        try {\n            // Try to use decode X.509 certificate\n            asn1.Certificate.call(this, cert, true);\n        } catch (e) {\n            try {\n                // Try to decode certification request\n                cert = new asn1.CertificationRequest(cert, true);\n            } catch (e) {\n            }\n            // Create new certificate structure\n            cert = cert || {};\n            asn1.Certificate.call(this, {\n                version: 2,\n                serialNumber: cert.serialNumber || genSerialNumber(),\n                signature: cert.signature || {id: 'noSignature'},\n                issuer: cert.subject || options.subject,\n                notBefore: cert.notBefore || today(),\n                notAfter: cert.notAfter ||\n                        today(cert.days || options.days),\n                subject: cert.subject || options.subject,\n                subjectPublicKeyInfo: cert.subjectPublicKeyInfo || {\n                    algorithm: {id: 'noSignature'},\n                    subjectPublicKey: new CryptoOperationData(0)\n                },\n                extensions: (cert.attributes && (cert.attributes.extensionRequest ||\n                        cert.attributes.msCertExtensions)) || cert.extensions,\n                signatureAlgorithm: {id: 'noSignature'},\n                signatureValue: new CryptoOperationData(0)\n            });\n        }\n    };\n\n    extend(asn1.Certificate, X509, {\n        /**\n         * Generate the contents of this certificate and sign it.<br><br>\n         * \n         * If issuerCertificate is not defined self signed certificate generated\n         * \n         * @memberOf GostCert.X509\n         * @instance\n         * @param {GostASN1.PrivateKeyInfo} issuerPrivateKey The issuer's private key\n         * @param {GostCert.X509} issuerCertificate The issuer's certificate or undefined for self-signed certificate\n         * @returns {Promise} Promise to return self object after sign the certificate\n         */\n        sign: function (issuerPrivateKey, issuerCertificate)\n        {\n\n            var self = this, spki = self.subjectPublicKeyInfo;\n            return new Promise(call).then(function () {\n\n                // Need generated key\n                if (!spki || !spki.algorithm || spki.algorithm === 'noSignature')\n                    throw new Error('Key pair was not generated for the certificate');\n                // Check issuer private key\n                if (!issuerPrivateKey)\n                    throw new Error('The private key of the issuer is not defined');\n                        \n                // Certificate can be self signed\n                issuerCertificate = issuerCertificate || self;\n\n                // Calculate subject key indentifier\n                return subtle.digest('SHA-1', spki.subjectPublicKey);\n            }).then(function (digest) {\n\n                // Signature algorithm\n                var provider = issuerCertificate.getProvider() || providers[options.providerName];\n                if (!self.signature || self.signature.id === 'noSignature')\n                    self.signature = provider.signature;\n                self.signatureAlgorithm = self.signature;\n\n                // Set issuer\n                self.issuer = issuerCertificate.subject;\n                // Set default extensions\n                if (!self.extensions)\n                    self.extensions = {};\n                var exts = self.extensions, ae = issuerCertificate.extensions;\n                if (self === issuerCertificate) { // Self-signed CA certificate\n                    // Set key usage\n                    exts.keyUsage = exts.keyUsage || options.caKeyUsage;\n                    exts.extKeyUsage = exts.extKeyUsage || options.caExtKeyUsage;\n                    // Set basic constraints\n                    exts.basicConstraints = exts.basicConstraints || {cA: true};\n                } else {\n                    // Check key usage and validity\n                    if (!issuerCertificate.checkUsage('keyCertSign', self.notBefore))\n                        throw new Error('The issuer\\'s certificate is not valid for signing a certificate');\n\n                    // Set key usage\n                    exts.keyUsage = exts.keyUsage || options.userKeyUsage;\n                    exts.extKeyUsage = exts.extKeyUsage || options.userExtKeyUsage;\n                    // Set basic constraints\n                    exts.basicConstraints = exts.basicConstraints || {\n                        cA: exts.keyUsage.indexOf('keyCertSign') >= 0\n                    };\n                    // Check path length constraint\n                    if (exts.basicConstraints.cA) {\n                        var pathLen = ae && ae.basicConstraints && ae.pathLenConstraint;\n                        if (pathLen !== undefined) {\n                            if (pathLen > 0)\n                                exts.basicConstraints.pathLenConstraint = pathLen - 1;\n                            else\n                                throw new Error('Path length constraint exceeded');\n                        }\n                    }\n                }\n                // Subject key identifier 160 bit from public key hash\n                exts.subjectKeyIdentifier = digest;\n                // Authority key identifier\n                if (ae && ae.subjectKeyIdentifier)\n                    exts.authorityKeyIdentifier = {\n                        keyIdentifier: ae.subjectKeyIdentifier,\n                        authorityCertIssuer: [issuerCertificate.issuer],\n                        authorityCertSerialNumber: issuerCertificate.serialNumber};\n\n                // Import the private key\n                return subtle.importKey('pkcs8', issuerPrivateKey.encode(), issuerPrivateKey.privateKeyAlgorithm, false, ['sign']);\n            }).then(function (key) {\n\n                // Sign certificate\n                return subtle.sign(self.signatureAlgorithm, key, self.tbsCertificate.encode());\n            }).then(function (signatureValue) {\n                // Siganture value\n                self.signatureValue = signatureValue;\n\n                return self;\n            });\n        },\n        /**\n         * Generate key pair for certificate\n         * \n         * @memberOf GostCert.X509\n         * @instance\n         * @param {(AlgorithmIdentifier|string)} keyAlgorithm The key algorithm or name of provider\n         * @returns {Promise} Promise to return {@link GostASN1.PrivateKeyInfo} after self-signed certificate generation\n         */\n        generate: function (keyAlgorithm)\n        {\n            var self = this, privateKey, provider;\n            if (keyAlgorithm)\n                provider = providers[keyAlgorithm];\n            else\n                provider = this.getProvider() || providers[options.providerName];\n            if (provider)\n                keyAlgorithm = expand(provider.publicKey, {privateKey: provider.privateKey});\n\n            return new Promise(call).then(function () {\n\n                // Generate key pair\n                return subtle.generateKey(keyAlgorithm, 'true', ['sign', 'verify']);\n            }).then(function (keyPair) {\n                privateKey = keyPair.privateKey;\n\n                // Export public key\n                return subtle.exportKey('spki', keyPair.publicKey);\n            }).then(function (spki) {\n                self.subjectPublicKeyInfo = new asn1.SubjectPublicKeyInfo(spki);\n\n                return subtle.exportKey('pkcs8', privateKey);\n            }).then(function (pkcs8) {\n\n                return new asn1.PrivateKeyInfo(pkcs8);\n            });\n        },\n        /**\n         * Gets the public key.\n         * \n         * @memberOf GostCert.X509\n         * @instance\n         * @returns {Promise} Promise to return {@link Key}\n         */\n        getPublicKey: function ()\n        {\n            var spki = this.subjectPublicKeyInfo,\n                    keyUsages = (spki.algorithm.id === 'rsaEncryption') ? ['verify'] :\n                    ['verify', 'deriveKey', 'deriveBits'];\n            return subtle.importKey('spki', spki.encode(), spki.algorithm, 'false', keyUsages);\n        },\n        /**\n         * Get appropriate crypto provider for public key\n         * \n         * @memberOf GostCert.X509\n         * @instance\n         * @returns Object Set of crypto provider algorithms\n         */\n        getProvider: function ()\n        {\n            return keyProvider(this.subjectPublicKeyInfo.algorithm);\n        },\n        /**\n         * Verifies this certificate.<br><br>\n         * \n         * More precisely:<br><br>\n         * <ul>\n         *      <li>Verifies that the current VM date/time is within the validity period of the certificate.</li>\n         *      <li>If an unrecognized critical extension is present, the certificate is rejected.</li> \n         *      <li>If the issuer certificate has been set, verifies that the signing certificate is a \n         *          CA certificate, and that the signature is correct. The signing certificate is considered \n         *          to be a CA certificate unless one of the following two conditions hold: The signing \n         *          certificate contains a basicConstraints extension, and the CA flag is false; or the \n         *          signing certificate contains a keyUsage extension, the keyUsage extension is marked \n         *          critical, and the keyCertSign bit is false.</li>\n         *      <li>If the issuer CRL has been set, verifies that the certificate has not been revoked.</li>\n         * </ul>\n         * \n         * @memberOf GostCert.X509\n         * @instance\n         * @param {GostCert.X509} issuerCertificate The issuer X.509 certificate\n         * @param {GostCert.CRL} issuerCRL The issuer CRL\n         * @param {Date} date Validation date. Default current date\n         * @returns {Promise} Promise to return self object if the certificate is valid\n         */\n        verify: function (issuerCertificate, issuerCRL, date)\n        {\n            var self = this, exts = self.extensions;\n            return new Promise(call).then(function () {\n                // Current date\n                date = date || today();\n                if (self.notBefore.getTime() > date.getTime() ||\n                        self.notAfter.getTime() <= date.getTime())\n                    throw new Error('The certificate has not yet started or expired');\n                // A unrecognized critical extensions \n                for (var name in exts) {\n                    var value = exts[name];\n                    if (value.critical &&\n                            ['authorityKeyIdentifier', 'subjectKeyIdentifier', 'keyUsage', 'certificatePolicies',\n                                'policyMappings', 'basicConstraints', 'nameConstraints', 'policyConstraints',\n                                'extKeyUsage'].indexOf(name) < 0)\n                        throw new Error('The critical extension \\'' + name + '\\' is unrecognized');\n                }\n                // The certificate can be self-signed\n                var selector = authoritySelector(self, exts, self.notBefore);\n                if (!issuerCertificate && matchCertificate(self, selector))\n                    issuerCertificate = self;\n                // Check issuer\n                if (issuerCertificate) {\n                    if (!matchCertificate(issuerCertificate, selector) ||\n                            !issuerCertificate.checkUsage('keyCertSign', self.notBefore))\n                        throw new Error('The issuer\\'s certificate is not valid');\n                    // Check certificate signature\n                    return issuerCertificate.verifySignature(self.tbsCertificate.encode(),\n                            self.signatureValue, self.signatureAlgorithm);\n                }\n                return true;\n            }).then(function (result) {\n                if (!result)\n                    throw new Error('The certificate has invalid signature');\n                // Check CRL\n                if (issuerCRL) {\n                    if (!matchCRL(issuerCRL, {issuer: self.issuer, date: date}))\n                        throw new Error('The issuer\\'s CRL is not valid');\n                    if (issuerCRL.isRevoked(self.serialNumber))\n                        throw new Error('The certificate is revoked');\n                }\n                return self;\n            });\n        },\n        /**\n         * Verify a signature made with this certificate's public key.\n         * \n         * @memberOf GostCert.X509\n         * @instance\n         * @param {CryptoOperationData} data The signed document.\n         * @param {CryptoOperationData} signature The signature\n         * @param {AlgorithmIdentifier} algorithm The algorithm ID used for the signature.\n         * @returns {Promise} Promise to return true if the signature is verified, and false otherwise\n         */\n        verifySignature: function (data, signature, algorithm)\n        {\n            return this.getPublicKey().then(function (publicKey) {\n                return subtle.verify(algorithm, publicKey, signature, data);\n            });\n        },\n        /**\n         * Check key usage and date validation\n         * \n         * @memberOf GostCert.X509\n         * @instance\n         * @param {DOMString} operation The operation\n         * @param {Date} date Operation date. Default current date\n         * @returns {boolean} \n         */\n        checkUsage: function (operation, date)\n        {\n            var self = this, exts = self.extensions;\n            date = date || today();\n            return (self.notBefore.getTime() <= date.getTime() && self.notAfter.getTime() > date.getTime()) &&\n                    (!exts || !((['keyCertSign', 'cRLSign'].indexOf(operation) > 0 && exts.basicConstraints && !exts.basicConstraints.cA) ||\n                            ((exts.keyUsage && exts.keyUsage.indexOf(operation) < 0) && (exts.extKeyUsage && exts.extKeyUsage.indexOf(operation) < 0))));\n        }\n    });\n\n    /**\n     * This class encapsulates X.509 Version 3 certificates.\n     * \n     * @memberOf GostCert\n     * @type GostCert.X509\n     */\n    GostCert.prototype.X509 = X509;\n\n    /**\n     * This class encapsulates a X.509 certificate revocation list (CRL) of RevokedCertificate objects.<br><br>\n     *\n     * Note: the methods and constructors that input a CRL do not automatically verify it. \n     * You need to explicitly call the verify method.\n     *  \n     * @class GostCert.CRL       \n     * @extends GostASN1.CertificateList\n     * @param {(FormatedData|GostASN1.CertificateList)} crl\n     */\n    var CRL = function (crl)\n    {\n        // Call super\n        CRL.super.call(this, crl);\n        // Initialize defaults\n        if (!this.version)\n            this.version = 1;\n        if (!this.revokedCertificates)\n            this.revokedCertificates = [];\n        if (!this.thisUpdate)\n            this.thisUpdate = today();\n    };\n\n    extend(asn1.CertificateList, CRL, {\n        /**\n         * Signs this CRL. The issuer's private key has to be set. The default random number generator is used, if needed.<br><br>\n         * \n         * Note: Making any modifications to the contents of the CRL after signing invalidates the signature. \n         * The sign method must be invoked again after any modifications for a valid signature to be computed.\n         * \n         * @memberOf GostCert.CRL\n         * @instance\n         * @param {GostASN1.PrivateKeyInfo} issuerPrivateKey the issuer's private signing key\n         * @param {GostCert.X509} issuerCertificate the issuer's certificate\n         * @returns {Promise} Promise to return self object after sign the CRL\n         */\n        sign: function (issuerPrivateKey, issuerCertificate)\n        {\n\n            var self = global;\n            return new Promise(call).then(function () {\n                // Check issuer private key\n                if (!issuerPrivateKey)\n                    throw new Error('The issuer\\'s private key is not defined');\n                // Check issuer certificate\n                if (!issuerCertificate)\n                    throw new Error('The issuer\\'s certificate is not defined');\n                // Check issuer name\n                if (!self.issuer)\n                    self.issuer = issuerCertificate.issuer;\n                else if (!equalNames(self.issuer, issuerCertificate.issuer))\n                    throw new Error('The CRL prototype and authority certificate have different issuers');\n                // Check key usage and validity\n                if (!issuerCertificate.checkUsage('cRLSign', self.thisUpdate))\n                    throw new Error('The issuer\\'s certificate is not valid for signing a CRL');\n\n                // Signature algorithm\n                var provider = issuerCertificate.getProvider() || providers[options.providerName];\n                if (!self.signature)\n                    self.signature = provider.signature;\n                self.signatureAlgorithm = self.signature;\n\n                // Set issuer\n                self.issuer = issuerCertificate.subject;\n                // Set default extensions\n                if (!self.crlExtensions)\n                    self.crlExtensions = {};\n                var exts = self.crlExtensions,\n                        ae = issuerCertificate.extensions;\n                if (ae && ae.subjectKeyIdentifier)\n                    exts.authorityKeyIdentifier = {\n                        keyIdentifier: ae.subjectKeyIdentifier,\n                        authorityCertIssuer: [issuerCertificate.issuer],\n                        authorityCertSerialNumber: issuerCertificate.serialNumber};\n                exts.cRLNumber = exts.cRLNumber || 0;\n\n                // Import the private key\n                return subtle.importKey('pkcs8', issuerPrivateKey.encode(),\n                        issuerPrivateKey.privateKeyAlgorithm, false, ['sign']);\n            }).then(function (key) {\n\n                // Sign CRL\n                return subtle.sign(self.signatureAlgorithm, key, self.tbsCertList.encode());\n            }).then(function (signatureValue) {\n\n                // Siganture value\n                self.signatureValue = signatureValue;\n                return self;\n            });\n        },\n        /**\n         * Verify the CRL. Checks the date and signature if issuer's certifiate has been defined.\n         * \n         * @memberOf GostCert.CRL\n         * @instance\n         * @param {GostCert.X509} issuerCertificate the issuer's certificate\n         * @param {Date} date Validation date. Default current date\n         * @returns {Promise} Promise to return self object if the certificate is valid\n         */\n        verify: function (issuerCertificate, date)\n        {\n            var self = this, exts = self.crlExtensions;\n            return new Promise(call).then(function () {\n                // Current date\n                date = date || today();\n                if (!self.thisUpdate.getTime() > date.getTime())\n                    throw new Error('The CRL has not yet started');\n                // Check issuer\n                if (issuerCertificate) {\n                    if (!matchCertificate(issuerCertificate, authoritySelector(self, exts, self.thisUpdate)) ||\n                            !issuerCertificate.checkUsage('cRLSign', self.thisUpdate))\n                        throw new Error('The issuer\\'s certificate is not valid');\n                    if (!self.signatureValue || !self.signatureAlgorithm)\n                        throw new Error('The has no signature');\n                    // Check CRL signature\n                    return issuerCertificate.verifySignature(self.tbsCertList.encode(),\n                            self.signatureValue, self.signatureAlgorithm);\n                }\n            }).then(function (result) {\n                if (!result)\n                    throw new Error('The CRL has invalid signature');\n                return self;\n            });\n        },\n        /**\n         * Checks whether this certificate serial number is on the list.\n         * \n         * @memberOf GostCert.CRL\n         * @instance\n         * @param {Number} serialNumber the issuer's certificate\n         * @param {Date} date Validation date. Default current date\n         * @returns {boolean} True if the certificate is valid, and false otherwise\n         */\n        isRevoked: function (serialNumber, date)\n        {\n            var rc = this.revokedCertificates;\n            date = date || today();\n            for (var i = 0; i < rc.length; i++) {\n                // Check date and serial number\n                if (date.getTime() >= rc[i].revocationDate.getTime() &&\n                        equalNumbers(rc[i].userCertificate, serialNumber))\n                    return true;\n            }\n            return false;\n        }\n    });\n\n    /**\n     * This class encapsulates a X.509 certificate revocation list (CRL) of RevokedCertificate objects.\n     * \n     * @memberOf GostCert\n     * @type GostCert.CRL\n     */\n    GostCert.prototype.CRL = CRL;\n\n    /**\n     * A class that encapsulates a DER-encoded PKCS #10 certificate request. The request contains \n     * the subject's name and public key, and it is signed with the subject's private key. \n     * The public key contained in the request is used to verify the signature. \n     * The signature on the request is verified automatically when the request is read. \n     * Note that the subject's private key is used only to produce a signature when the request is output, \n     * and is not actually stored with the request.\n     * \n     * @class GostCert.Request\n     * @extends GostASN1.CertificationRequest\n     * @param {(FormatedData|GostASN1.CertificationRequest)} req\n     */\n    function Request(req)\n    {\n        try {\n            // Try to use encode\n            asn1.CertificationRequest.call(this, req, true);\n        } catch (e) {\n            // Create new certificate structure\n            req = req || {};\n            asn1.CertificationRequest.call(this, {\n                version: 0,\n                subject: req.subject || options.subject,\n                subjectPublicKeyInfo: req.subjectPublicKeyInfo || {\n                    algorithm: {id: 'noSignature'},\n                    subjectPublicKey: new CryptoOperationData(0)\n                },\n                attributes: req.attributes || {\n                    extensionRequest: {\n                        keyUsage: options.userKeyUsage,\n                        extKeyUsage: options.userExtKeyUsage\n                    }\n                },\n                signatureAlgorithm: {id: 'noSignature'},\n                signatureValue: new CryptoOperationData(0)\n            });\n        }\n    }\n\n    extend(asn1.CertificationRequest, Request, {\n        /**\n         * Generate key pair and sign request\n         * \n         * @memberOf GostCert.Request\n         * @instance\n         * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\n         * @returns {Promise} Promise to return {@link GostASN1.PrivateKeyInfo} after request generation\n         */\n        generate: function (keyAlgorithm)\n        {\n            var self = this, privateKey, provider;\n            if (keyAlgorithm)\n                provider = providers[keyAlgorithm];\n            else\n                provider = this.getProvider() || providers[options.providerName];\n            if (provider)\n                keyAlgorithm = expand(provider.publicKey, {privateKey: provider.privateKey});\n\n            return new Promise(call).then(function () {\n\n                // Generate key pair\n                return subtle.generateKey(keyAlgorithm, 'true', ['sign', 'verify']);\n            }).then(function (keyPair) {\n                privateKey = keyPair.privateKey;\n\n                // Export public key\n                return subtle.exportKey('spki', keyPair.publicKey);\n            }).then(function (spki) {\n                self.subjectPublicKeyInfo = new asn1.SubjectPublicKeyInfo(spki);\n\n                return subtle.exportKey('pkcs8', privateKey);\n            }).then(function (pkcs8) {\n                privateKey = new asn1.PrivateKeyInfo(pkcs8);\n\n                // Sign request\n                return self.sign(privateKey);\n            }).then(function () {\n\n                return privateKey;\n            });\n        },\n        /**\n         * Get appropriate crypto provider for public key\n         * \n         * @memberOf GostCert.Request\n         * @instance\n         * @returns Object Set of crypto provider algorithms\n         */\n        getProvider: function ()\n        {\n            return keyProvider(this.subjectPublicKeyInfo.algorithm);\n        },\n        /**\n         * Generate the contents of this request and sign it.<br><br>\n         * \n         * @memberOf GostCert.Request\n         * @instance\n         * @param {GostASN1.PrivateKeyInfo} privateKey The subject's private key\n         * @returns Promise to return self object after sign the request\n         */\n        sign: function (privateKey)\n        {\n\n            var self = this, spki = self.subjectPublicKeyInfo;\n            return new Promise(call).then(function () {\n\n                // Need generated key\n                if (!spki || !spki.algorithm || spki.algorithm === 'noSignature')\n                    throw new Error('Key pair was not generated for the certificate');\n                // Check issuer private key\n                if (!privateKey)\n                    throw new Error('The private key is not defined');\n\n                // Signature algorithm\n                var provider = keyProvider(spki.algorithm) || providers[options.providerName];\n                self.signatureAlgorithm = provider.signature;\n\n                // Import the private key\n                return subtle.importKey('pkcs8', privateKey.encode(),\n                        privateKey.privateKeyAlgorithm, false, ['sign']);\n            }).then(function (key) {\n\n                // Sign the certification request\n                return subtle.sign(self.signatureAlgorithm, key, self.requestInfo.encode());\n            }).then(function (signatureValue) {\n\n                // Siganture value\n                self.signatureValue = signatureValue;\n                return self;\n            });\n        },\n        /**\n         * Verify the Certification Request. Checks the signature on the public key in the request.\n         * \n         * @memberOf GostCert.Request\n         * @instance\n         * @returns {Promise} Promise to return self object  if the certificate is valid\n         */\n        verify: function ()\n        {\n            var self = this, spki = self.subjectPublicKeyInfo;\n            return new Promise(call).then(function () {\n\n                // Import key\n                return subtle.importKey('spki', spki.encode(), spki.algorithm, 'false', ['verify']);\n            }).then(function (publicKey) {\n\n                // Verify signature\n                return subtle.verify(self.signatureAlgorithm, publicKey, self.signatureValue,\n                        self.requestInfo.encode());\n            }).then(function (result) {\n                if (!result)\n                    throw new Error('The certification request has invalid signature');\n                return self;\n            });\n        }\n    });\n\n    /**\n     * A class that encapsulates a DER-encoded PKCS #10 certificate request.\n     * \n     * @memberOf GostCert\n     * @type GostCert.Request\n     */\n    GostCert.prototype.Request = Request;\n\n    /**\n     * A class for retrieving Certificates and CRLs from a repository.<br><br>\n     * \n     * Once the CertStore has been created, it can be used to retrieve Certificates \n     * and CRLs by calling its getCertificates and getCRLs methods. Unlike a KeyStore, \n     * which provides access to a cache of private keys and trusted certificates, \n     * a CertStore is designed to provide access to a potentially vast repository \n     * of untrusted certificates and CRLs.\n     * \n     * @class GostCert.CertStore\n     * @param {GostCert.X509[]} certificates Certificates\n     * @param {GostCert.CRL[]} crls CLRs\n     */\n    function CertStore(certificates, crls)\n    {\n        this.certificates = certificates || [];\n        this.crls = crls || [];\n    }\n\n    extend(Object, CertStore, {\n        /**\n         * Returns a Array of Certificates that match the specified selector.\n         * \n         * @memberOf GostCert.CertStore\n         * @instance\n         * @param {GostCert.CertSelector} selector Certificate filter selector\n         * @returns {GostCert.X509[]} Selected certificates\n         */\n        getCertificates: function (selector)\n        {\n            return selectCertificates(this.certificates, selector);\n        },\n        /**\n         * Returns a Collection of CRLs that match the specified selector.\n         * \n         * @memberOf GostCert.CertStore\n         * @instance\n         * @param {GostCert.CertSelector} selector CRL filter selector\n         * @returns {GostCert.CRL[]} selected CRLs\n         */\n        getCRLs: function (selector)\n        {\n            return selectCRLs(this.certificates, selector);\n        },\n        /**\n         * Loads this CertStore from the given PKCS#7 formated input stream.\n         * \n         * @memberOf GostCert.CertStore\n         * @instance\n         * @param {(FormatedData|GostASN1.ContentInfo)} store The input stream from which the certstore is loaded\n         * @returns {GostCert.CertStore} Self object after store loaded\n         */\n        load: function (store)\n        {\n            var info = new asn1.ContentInfo(store),\n                    certs = info.certificates, crls = info.crls;\n            for (var i = 0; i < certs.length; i++)\n                this.certificates.push(new X509(certs[i]));\n            for (var i = 0; i < crls.length; i++)\n                this.crls.push(new CRL(crls[i]));\n            return this;\n        },\n        /**\n         * Stores this CertStore to the given output stream in PKCS#7 format.\n         * \n         * @memberOf GostCert.CertStore\n         * @instance\n         * @returns {GostASN1.ContentInfo} PKCS#7 content info with certificates and crls from CertStore\n         */\n        store: function ()\n        {\n            return new asn1.ContentInfo({\n                contentType: 'signedData',\n                version: 0,\n                digestAlgorithms: [],\n                encapContentInfo: {contentType: 'data'},\n                certificates: this.certs,\n                crls: this.crls,\n                signerInfos: []\n            });\n        }\n    });\n\n    /**\n     * A class for retrieving Certificates and CRLs from a repository.\n     * \n     * @memberOf GostCert\n     * @type GostCert.Request\n     */\n    GostCert.prototype.CertStore = CertStore;\n\n    /**\n     * A class for building and validating certification paths (also known as certificate chains).\n     * \n     * @class GostCert.CertPath\n     * @param {GostCert.CertStore} certStore\n     */\n    function CertPath(certStore)\n    {\n        this.certStore = certStore;\n    }\n\n    extend(Object, CertPath, {\n        /**\n         * Attempts to build a certification path using the specified algorithm parameter set.\n         * \n         * @memberOf GostCert.CertPath\n         * @instance\n         * @param {GostCert.X509} certificate Starting path certificate \n         * @param {Date} date Validation date. Default today\n         * @returns {Promise} Promise to return array of {@link GostCert.X509} with certification path\n         */\n        build: function (certificate, date)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                // Build certification path\n                var current = new X509(certificate), certPath = [], success = false, verifiers = [];\n                while (current) {\n                    var foundCRLs = [], founds = [];\n                    certPath.push(current);\n                    if (!success) {\n                        // Select issuer CRL\n                        foundCRLs = self.certStore.getCRLs({issuer: current.issuer, date: date});\n                        // Create issuer's selection criteria\n                        var selector = authoritySelector(current, current.extensions,\n                                current.notBefore);\n                        // Self-signed certificate?\n                        if (!matchCertificate(current, selector))\n                            // Select issuer form trusted CA root list\n                            founds = self.certStore.getCertificates(selector);\n                        else\n                            success = true;\n                    }\n                    // Add verification tasks\n                    var next = founds.length > 0 && new X509(founds[0]),\n                            crl = foundCRLs.length > 0 && new CRL(foundCRLs[0]);\n                    // Verify CRLs\n                    if (crl)\n                        verifiers.push(crl.verify(next, date));\n\n                    // Verify the certificate\n                    verifiers.push(current.verify(next, crl, date));\n                    current = next;\n                }\n                if (!success)\n                    throw new Error('Root certificate is not found');\n                // Verify all certificates in path\n                return Promise.all(verifiers).then(function (results) {\n                    for (var i = 0; i < results; i++)\n                        if (!results[i])\n                            throw new Error('Certification path is not validated');\n                    return certPath;\n                });\n            });\n        }\n    });\n\n    /**\n     * A class for building and validating certification paths (also known as certificate chains).\n     * \n     * @memberOf GostCert\n     * @type GostCert.CertPath\n     */\n    GostCert.prototype.CertPath = CertPath;\n\n    /**\n     * A generic interface for implementing a particular certificate verification \n     * scheme, such as constructing and verifying \n     * certificate chains.\n     * \n     * @class GostCert.CertificateTrustPolicy\n     */\n    function CertificateTrustPolicy() {\n    }\n\n    extend(Object, CertificateTrustPolicy, {\n        /**\n         * Returns a certificate, known to be valid (according to criteria dependent \n         * on the verification scheme), which has the given selector, certificate and \n         * CRL lists to implement a particular certificate verification  scheme, \n         * such a forming valid certificate chains.<br>\n         * Second and third argument to this method may be undefined, and such a case \n         * must be treated exactly the same as if the particular argument was an empty array.\n         * \n         * @memberOf GostCert.CertificateTrustPolicy\n         * @instance\n         * @param {GostCert.CertificateSelector} selector Certificate selector\n         * @param {GostCert.X509[]} certificates Certificates\n         * @param {GostCert.CRL[]} crls CLRs\n         * @returns {Promise} Promise to return valid {@link GostCert.X509}\n         */\n        getValidCertificate: function (selector, certificates, crls) {\n        }\n    });\n\n    /**\n     * A generic interface for implementing a particular certificate verification\n     * \n     * @memberOf GostCert\n     * @type GostCert.CertificateTrustPolicy\n     */\n    GostCert.prototype.CertificateTrustPolicy = CertificateTrustPolicy;\n\n    /**\n     * A certificate trust policy based on a set of trusted root CAs.<br><br>\n     * \n     * In this policy, a certificate will be trusted if and only if it is part of a \n     * valid certificate chain which terminates in one of the trusted root CAs. <br><br>\n     * \n     * This policy has two options for certificate chain verification:\n     * <ul>\n     *      <li>requireCRL - If true, then for every certificate in a chain \n     *          (unless it is one of the trusted root CA certificates) a valid CRL \n     *          must be provided to determine its revocation status. The default is false.</li>\n     *      <li>requireCAFlag - If true, then every intermediate CA certificate (excluding \n     *          the root CA or the end entity certificate) must contain a Basic Constraints \n     *          extension, with the CA flag set. The default for this option is true.</li>\n     * </ul>\n     * \n     * @class GostCert.TrustedCAPolicy\n     * @extends GostCert.CertificateTrustPolicy\n     * @param {GostCert.X509[]} trustedCACerts \n     * @param {boolean} requireCRL \n     * @param {boolean} requireCA \n     */\n    function TrustedCAPolicy(trustedCACerts, requireCRL, requireCA)\n    {\n        this.trustedCACerts = trustedCACerts || [];\n        this.requireCRL = requireCRL || false;\n        this.requireCA = requireCA || true;\n    }\n\n    extend(CertificateTrustPolicy, TrustedCAPolicy, {\n        /**\n         * Returns a certificate, known to be valid (according to criteria dependent \n         * on the verification scheme), which has the given selector, certificate and \n         * CRL lists to implement a particular certificate verification  scheme, \n         * such a forming valid certificate chains.<br>\n         * Second and third argument to this method may be undefined, and such a case \n         * must be treated exactly the same as if the particular argument was an empty array.\n         * \n         * @memberOf GostCert.TrustedCAPolicy\n         * @instance\n         * @param {GostCert.CertificateSelector} selector Certificate selector\n         * @param {GostASN1.Certificate[]} certificates Certificates\n         * @param {GostASN1.CertificateList[]} crls CLRs\n         * @param {Date} date Validation date. Default today\n         * @returns {Promise} Promise to return valid {@link GostCert.X509}\n         */\n        getValidCertificate: function (selector, certificates, crls, date)\n        {\n            var self = this, certPath;\n            return new Promise(call).then(function () {\n                certificates = certificates || [];\n                crls = crls || [];\n                // Get certificates from the trusted list\n                var certs = selectCertificates(self.trustedCACerts, selector);\n                if (certs.length > 0)\n                    return new X509(certs[0]);\n                // Get certificates from the list\n                certs = selectCertificates(certificates, selector);\n                if (certs.length === 0)\n                    return;\n                // Build certification path\n                var current = new X509(certs[0]), success = false, verifiers = [];\n                certPath = [];\n                while (current) {\n                    var foundCRLs = [], founds = [];\n                    certPath.push(current);\n                    if (!success) {\n                        // Select issuer CRL\n                        foundCRLs = selectCRLs(crls, {issuer: current.issuer, date: date});\n                        if (foundCRLs.length === 0 && self.requireCRL)\n                            return; // The issuer\\'s CRL is not found\n                        // Create issuer's selection criteria\n                        selector = authoritySelector(current, current.extensions,\n                                current.notBefore);\n                        // Select issuer form trusted CA root list\n                        founds = selectCertificates(self.trustedCACerts, selector);\n                        if (founds.length === 0) {\n                            // Non-trusted self-signed certificate?\n                            if (!matchCertificate(current, selector)) {\n                                // Select issuer from certificate list\n                                founds = selectCertificates(certificates, selector);\n                                if (founds.length > 0) {\n                                    // Check basic contrains and CA flag\n                                    var exts = founds[0].extensions;\n                                    if (self.requireCA) {\n                                        if (!exts || !exts.basicConstraints || !exts.basicConstraints.cA)\n                                            return; // The issuer\\'s certificate is not valid\n                                        // Check path length limit\n                                        if (exts.basicConstraints.pathLenConstraint !== undefined &&\n                                                exts.basicConstraints.pathLenConstraint < certPath.length - 1)\n                                            return; // The issuer\\'s certificate path length constraint exceeded\n                                    }\n                                } else\n                                    return; // Certification path is not built\n                            }\n                        } else\n                            success = true;\n                    }\n                    // Add verification tasks\n                    var next = founds.length > 0 && new X509(founds[0]),\n                            crl = foundCRLs.length > 0 && new CRL(foundCRLs[0]);\n                    // Verify CRLs\n                    if (crl)\n                        verifiers.push(crl.verify(next, date));\n\n                    // Verify the certificate\n                    verifiers.push(current.verify(next, crl, date));\n                    current = next;\n                }\n                if (!success)\n                    throw new Error('Trusted root certificate is not found');\n                // Verify all certificates in path\n                return Promise.all(verifiers).then(function (results) {\n                    for (var i = 0; i < results; i++)\n                        if (!results[i])\n                            throw new Error('Certification path is not validated');\n                    return certPath[0];\n                });\n            });\n        }\n    });\n\n    /**\n     * A certificate trust policy based on a set of trusted root CAs.\n     * \n     * @memberOf GostCert\n     * @type GostCert.TrustedCAPolicy\n     */\n    GostCert.prototype.TrustedCAPolicy = TrustedCAPolicy;\n\n    /**\n     * Provides facilities for handling certificates, CRLs, etc.\n     * \n     * @memberOf gostCrypto\n     * @type GostCert\n     */\n    gostCrypto.cert = new GostCert();\n\nmodule.exports = GostCert;\n\n\n","/**\n * @file GOST 28147-89/GOST R 34.12-2015/GOST R 32.13-2015 Encryption Algorithm\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nconst GostRandom = require('./gostRandom');\n\n    /*\n     * Initial parameters and common algortithms of GOST 28147-89 \n     * \n     * http://tools.ietf.org/html/rfc5830\n     * \n     */\n\n    var root = global;\n    var rootCrypto = root.crypto || root.msCrypto;\n    var CryptoOperationData = root.ArrayBuffer;\n    var SyntaxError = root.SyntaxError || root.Error,\n            DataError = root.DataError || root.Error,\n            NotSupportedError = root.NotSupportedError || root.Error;\n    /*\n     * Check supported\n     * This implementation support only Little Endian arhitecture\n     */\n\n    var littleEndian = (function () {\n        var buffer = new CryptoOperationData(2);\n        new DataView(buffer).setInt16(0, 256, true);\n        return new Int16Array(buffer)[0] === 256;\n    })();\n\n    // Default initial vector\n    var defaultIV = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);\n\n    // Predefined sBox collection\n    var sBoxes = {\n        'E-TEST': [\n            0x4, 0x2, 0xF, 0x5, 0x9, 0x1, 0x0, 0x8, 0xE, 0x3, 0xB, 0xC, 0xD, 0x7, 0xA, 0x6,\n            0xC, 0x9, 0xF, 0xE, 0x8, 0x1, 0x3, 0xA, 0x2, 0x7, 0x4, 0xD, 0x6, 0x0, 0xB, 0x5,\n            0xD, 0x8, 0xE, 0xC, 0x7, 0x3, 0x9, 0xA, 0x1, 0x5, 0x2, 0x4, 0x6, 0xF, 0x0, 0xB,\n            0xE, 0x9, 0xB, 0x2, 0x5, 0xF, 0x7, 0x1, 0x0, 0xD, 0xC, 0x6, 0xA, 0x4, 0x3, 0x8,\n            0x3, 0xE, 0x5, 0x9, 0x6, 0x8, 0x0, 0xD, 0xA, 0xB, 0x7, 0xC, 0x2, 0x1, 0xF, 0x4,\n            0x8, 0xF, 0x6, 0xB, 0x1, 0x9, 0xC, 0x5, 0xD, 0x3, 0x7, 0xA, 0x0, 0xE, 0x2, 0x4,\n            0x9, 0xB, 0xC, 0x0, 0x3, 0x6, 0x7, 0x5, 0x4, 0x8, 0xE, 0xF, 0x1, 0xA, 0x2, 0xD,\n            0xC, 0x6, 0x5, 0x2, 0xB, 0x0, 0x9, 0xD, 0x3, 0xE, 0x7, 0xA, 0xF, 0x4, 0x1, 0x8\n        ],\n        'E-A': [\n            0x9, 0x6, 0x3, 0x2, 0x8, 0xB, 0x1, 0x7, 0xA, 0x4, 0xE, 0xF, 0xC, 0x0, 0xD, 0x5,\n            0x3, 0x7, 0xE, 0x9, 0x8, 0xA, 0xF, 0x0, 0x5, 0x2, 0x6, 0xC, 0xB, 0x4, 0xD, 0x1,\n            0xE, 0x4, 0x6, 0x2, 0xB, 0x3, 0xD, 0x8, 0xC, 0xF, 0x5, 0xA, 0x0, 0x7, 0x1, 0x9,\n            0xE, 0x7, 0xA, 0xC, 0xD, 0x1, 0x3, 0x9, 0x0, 0x2, 0xB, 0x4, 0xF, 0x8, 0x5, 0x6,\n            0xB, 0x5, 0x1, 0x9, 0x8, 0xD, 0xF, 0x0, 0xE, 0x4, 0x2, 0x3, 0xC, 0x7, 0xA, 0x6,\n            0x3, 0xA, 0xD, 0xC, 0x1, 0x2, 0x0, 0xB, 0x7, 0x5, 0x9, 0x4, 0x8, 0xF, 0xE, 0x6,\n            0x1, 0xD, 0x2, 0x9, 0x7, 0xA, 0x6, 0x0, 0x8, 0xC, 0x4, 0x5, 0xF, 0x3, 0xB, 0xE,\n            0xB, 0xA, 0xF, 0x5, 0x0, 0xC, 0xE, 0x8, 0x6, 0x2, 0x3, 0x9, 0x1, 0x7, 0xD, 0x4\n        ],\n        'E-B': [\n            0x8, 0x4, 0xB, 0x1, 0x3, 0x5, 0x0, 0x9, 0x2, 0xE, 0xA, 0xC, 0xD, 0x6, 0x7, 0xF,\n            0x0, 0x1, 0x2, 0xA, 0x4, 0xD, 0x5, 0xC, 0x9, 0x7, 0x3, 0xF, 0xB, 0x8, 0x6, 0xE,\n            0xE, 0xC, 0x0, 0xA, 0x9, 0x2, 0xD, 0xB, 0x7, 0x5, 0x8, 0xF, 0x3, 0x6, 0x1, 0x4,\n            0x7, 0x5, 0x0, 0xD, 0xB, 0x6, 0x1, 0x2, 0x3, 0xA, 0xC, 0xF, 0x4, 0xE, 0x9, 0x8,\n            0x2, 0x7, 0xC, 0xF, 0x9, 0x5, 0xA, 0xB, 0x1, 0x4, 0x0, 0xD, 0x6, 0x8, 0xE, 0x3,\n            0x8, 0x3, 0x2, 0x6, 0x4, 0xD, 0xE, 0xB, 0xC, 0x1, 0x7, 0xF, 0xA, 0x0, 0x9, 0x5,\n            0x5, 0x2, 0xA, 0xB, 0x9, 0x1, 0xC, 0x3, 0x7, 0x4, 0xD, 0x0, 0x6, 0xF, 0x8, 0xE,\n            0x0, 0x4, 0xB, 0xE, 0x8, 0x3, 0x7, 0x1, 0xA, 0x2, 0x9, 0x6, 0xF, 0xD, 0x5, 0xC\n        ],\n        'E-C': [\n            0x1, 0xB, 0xC, 0x2, 0x9, 0xD, 0x0, 0xF, 0x4, 0x5, 0x8, 0xE, 0xA, 0x7, 0x6, 0x3,\n            0x0, 0x1, 0x7, 0xD, 0xB, 0x4, 0x5, 0x2, 0x8, 0xE, 0xF, 0xC, 0x9, 0xA, 0x6, 0x3,\n            0x8, 0x2, 0x5, 0x0, 0x4, 0x9, 0xF, 0xA, 0x3, 0x7, 0xC, 0xD, 0x6, 0xE, 0x1, 0xB,\n            0x3, 0x6, 0x0, 0x1, 0x5, 0xD, 0xA, 0x8, 0xB, 0x2, 0x9, 0x7, 0xE, 0xF, 0xC, 0x4,\n            0x8, 0xD, 0xB, 0x0, 0x4, 0x5, 0x1, 0x2, 0x9, 0x3, 0xC, 0xE, 0x6, 0xF, 0xA, 0x7,\n            0xC, 0x9, 0xB, 0x1, 0x8, 0xE, 0x2, 0x4, 0x7, 0x3, 0x6, 0x5, 0xA, 0x0, 0xF, 0xD,\n            0xA, 0x9, 0x6, 0x8, 0xD, 0xE, 0x2, 0x0, 0xF, 0x3, 0x5, 0xB, 0x4, 0x1, 0xC, 0x7,\n            0x7, 0x4, 0x0, 0x5, 0xA, 0x2, 0xF, 0xE, 0xC, 0x6, 0x1, 0xB, 0xD, 0x9, 0x3, 0x8\n        ],\n        'E-D': [\n            0xF, 0xC, 0x2, 0xA, 0x6, 0x4, 0x5, 0x0, 0x7, 0x9, 0xE, 0xD, 0x1, 0xB, 0x8, 0x3,\n            0xB, 0x6, 0x3, 0x4, 0xC, 0xF, 0xE, 0x2, 0x7, 0xD, 0x8, 0x0, 0x5, 0xA, 0x9, 0x1,\n            0x1, 0xC, 0xB, 0x0, 0xF, 0xE, 0x6, 0x5, 0xA, 0xD, 0x4, 0x8, 0x9, 0x3, 0x7, 0x2,\n            0x1, 0x5, 0xE, 0xC, 0xA, 0x7, 0x0, 0xD, 0x6, 0x2, 0xB, 0x4, 0x9, 0x3, 0xF, 0x8,\n            0x0, 0xC, 0x8, 0x9, 0xD, 0x2, 0xA, 0xB, 0x7, 0x3, 0x6, 0x5, 0x4, 0xE, 0xF, 0x1,\n            0x8, 0x0, 0xF, 0x3, 0x2, 0x5, 0xE, 0xB, 0x1, 0xA, 0x4, 0x7, 0xC, 0x9, 0xD, 0x6,\n            0x3, 0x0, 0x6, 0xF, 0x1, 0xE, 0x9, 0x2, 0xD, 0x8, 0xC, 0x4, 0xB, 0xA, 0x5, 0x7,\n            0x1, 0xA, 0x6, 0x8, 0xF, 0xB, 0x0, 0x4, 0xC, 0x3, 0x5, 0x9, 0x7, 0xD, 0x2, 0xE\n        ],\n        'E-SC': [\n            0x3, 0x6, 0x1, 0x0, 0x5, 0x7, 0xd, 0x9, 0x4, 0xb, 0x8, 0xc, 0xe, 0xf, 0x2, 0xa,\n            0x7, 0x1, 0x5, 0x2, 0x8, 0xb, 0x9, 0xc, 0xd, 0x0, 0x3, 0xa, 0xf, 0xe, 0x4, 0x6,\n            0xf, 0x1, 0x4, 0x6, 0xc, 0x8, 0x9, 0x2, 0xe, 0x3, 0x7, 0xa, 0xb, 0xd, 0x5, 0x0,\n            0x3, 0x4, 0xf, 0xc, 0x5, 0x9, 0xe, 0x0, 0x6, 0x8, 0x7, 0xa, 0x1, 0xb, 0xd, 0x2,\n            0x6, 0x9, 0x0, 0x7, 0xb, 0x8, 0x4, 0xc, 0x2, 0xe, 0xa, 0xf, 0x1, 0xd, 0x5, 0x3,\n            0x6, 0x1, 0x2, 0xf, 0x0, 0xb, 0x9, 0xc, 0x7, 0xd, 0xa, 0x5, 0x8, 0x4, 0xe, 0x3,\n            0x0, 0x2, 0xe, 0xc, 0x9, 0x1, 0x4, 0x7, 0x3, 0xf, 0x6, 0x8, 0xa, 0xd, 0xb, 0x5,\n            0x5, 0x2, 0xb, 0x8, 0x4, 0xc, 0x7, 0x1, 0xa, 0x6, 0xe, 0x0, 0x9, 0x3, 0xd, 0xf\n        ],\n        'E-Z': [// This is default S-box in according to draft of new standard\n            0xc, 0x4, 0x6, 0x2, 0xa, 0x5, 0xb, 0x9, 0xe, 0x8, 0xd, 0x7, 0x0, 0x3, 0xf, 0x1,\n            0x6, 0x8, 0x2, 0x3, 0x9, 0xa, 0x5, 0xc, 0x1, 0xe, 0x4, 0x7, 0xb, 0xd, 0x0, 0xf,\n            0xb, 0x3, 0x5, 0x8, 0x2, 0xf, 0xa, 0xd, 0xe, 0x1, 0x7, 0x4, 0xc, 0x9, 0x6, 0x0,\n            0xc, 0x8, 0x2, 0x1, 0xd, 0x4, 0xf, 0x6, 0x7, 0x0, 0xa, 0x5, 0x3, 0xe, 0x9, 0xb,\n            0x7, 0xf, 0x5, 0xa, 0x8, 0x1, 0x6, 0xd, 0x0, 0x9, 0x3, 0xe, 0xb, 0x4, 0x2, 0xc,\n            0x5, 0xd, 0xf, 0x6, 0x9, 0x2, 0xc, 0xa, 0xb, 0x7, 0x8, 0x1, 0x4, 0x3, 0xe, 0x0,\n            0x8, 0xe, 0x2, 0x5, 0x6, 0x9, 0x1, 0xc, 0xf, 0x4, 0xb, 0x0, 0xd, 0xa, 0x3, 0x7,\n            0x1, 0x7, 0xe, 0xd, 0x0, 0x5, 0x8, 0x3, 0x4, 0xf, 0xa, 0x6, 0x9, 0xc, 0xb, 0x2\n        ],\n        //S-box for digest\n        'D-TEST': [\n            0x4, 0xA, 0x9, 0x2, 0xD, 0x8, 0x0, 0xE, 0x6, 0xB, 0x1, 0xC, 0x7, 0xF, 0x5, 0x3,\n            0xE, 0xB, 0x4, 0xC, 0x6, 0xD, 0xF, 0xA, 0x2, 0x3, 0x8, 0x1, 0x0, 0x7, 0x5, 0x9,\n            0x5, 0x8, 0x1, 0xD, 0xA, 0x3, 0x4, 0x2, 0xE, 0xF, 0xC, 0x7, 0x6, 0x0, 0x9, 0xB,\n            0x7, 0xD, 0xA, 0x1, 0x0, 0x8, 0x9, 0xF, 0xE, 0x4, 0x6, 0xC, 0xB, 0x2, 0x5, 0x3,\n            0x6, 0xC, 0x7, 0x1, 0x5, 0xF, 0xD, 0x8, 0x4, 0xA, 0x9, 0xE, 0x0, 0x3, 0xB, 0x2,\n            0x4, 0xB, 0xA, 0x0, 0x7, 0x2, 0x1, 0xD, 0x3, 0x6, 0x8, 0x5, 0x9, 0xC, 0xF, 0xE,\n            0xD, 0xB, 0x4, 0x1, 0x3, 0xF, 0x5, 0x9, 0x0, 0xA, 0xE, 0x7, 0x6, 0x8, 0x2, 0xC,\n            0x1, 0xF, 0xD, 0x0, 0x5, 0x7, 0xA, 0x4, 0x9, 0x2, 0x3, 0xE, 0x6, 0xB, 0x8, 0xC\n        ],\n        'D-A': [\n            0xA, 0x4, 0x5, 0x6, 0x8, 0x1, 0x3, 0x7, 0xD, 0xC, 0xE, 0x0, 0x9, 0x2, 0xB, 0xF,\n            0x5, 0xF, 0x4, 0x0, 0x2, 0xD, 0xB, 0x9, 0x1, 0x7, 0x6, 0x3, 0xC, 0xE, 0xA, 0x8,\n            0x7, 0xF, 0xC, 0xE, 0x9, 0x4, 0x1, 0x0, 0x3, 0xB, 0x5, 0x2, 0x6, 0xA, 0x8, 0xD,\n            0x4, 0xA, 0x7, 0xC, 0x0, 0xF, 0x2, 0x8, 0xE, 0x1, 0x6, 0x5, 0xD, 0xB, 0x9, 0x3,\n            0x7, 0x6, 0x4, 0xB, 0x9, 0xC, 0x2, 0xA, 0x1, 0x8, 0x0, 0xE, 0xF, 0xD, 0x3, 0x5,\n            0x7, 0x6, 0x2, 0x4, 0xD, 0x9, 0xF, 0x0, 0xA, 0x1, 0x5, 0xB, 0x8, 0xE, 0xC, 0x3,\n            0xD, 0xE, 0x4, 0x1, 0x7, 0x0, 0x5, 0xA, 0x3, 0xC, 0x8, 0xF, 0x6, 0x2, 0x9, 0xB,\n            0x1, 0x3, 0xA, 0x9, 0x5, 0xB, 0x4, 0xF, 0x8, 0x6, 0x7, 0xE, 0xD, 0x0, 0x2, 0xC\n        ],\n        'D-SC': [\n            0xb, 0xd, 0x7, 0x0, 0x5, 0x4, 0x1, 0xf, 0x9, 0xe, 0x6, 0xa, 0x3, 0xc, 0x8, 0x2,\n            0x1, 0x2, 0x7, 0x9, 0xd, 0xb, 0xf, 0x8, 0xe, 0xc, 0x4, 0x0, 0x5, 0x6, 0xa, 0x3,\n            0x5, 0x1, 0xd, 0x3, 0xf, 0x6, 0xc, 0x7, 0x9, 0x8, 0xb, 0x2, 0x4, 0xe, 0x0, 0xa,\n            0xd, 0x1, 0xb, 0x4, 0x9, 0xc, 0xe, 0x0, 0x7, 0x5, 0x8, 0xf, 0x6, 0x2, 0xa, 0x3,\n            0x2, 0xd, 0xa, 0xf, 0x9, 0xb, 0x3, 0x7, 0x8, 0xc, 0x5, 0xe, 0x6, 0x0, 0x1, 0x4,\n            0x0, 0x4, 0x6, 0xc, 0x5, 0x3, 0x8, 0xd, 0xa, 0xb, 0xf, 0x2, 0x1, 0x9, 0x7, 0xe,\n            0x1, 0x3, 0xc, 0x8, 0xa, 0x6, 0xb, 0x0, 0x2, 0xe, 0x7, 0x9, 0xf, 0x4, 0x5, 0xd,\n            0xa, 0xb, 0x6, 0x0, 0x1, 0x3, 0x4, 0x7, 0xe, 0xd, 0x5, 0xf, 0x8, 0x2, 0x9, 0xc\n        ]\n    };\n\n    var C = new Uint8Array([\n        0x69, 0x00, 0x72, 0x22, 0x64, 0xC9, 0x04, 0x23,\n        0x8D, 0x3A, 0xDB, 0x96, 0x46, 0xE9, 0x2A, 0xC4,\n        0x18, 0xFE, 0xAC, 0x94, 0x00, 0xED, 0x07, 0x12,\n        0xC0, 0x86, 0xDC, 0xC2, 0xEF, 0x4C, 0xA9, 0x2B\n    ]);\n\n    function signed(x) {\n        return x >= 0x80000000 ? x - 0x100000000 : x;\n    }\n\n    function unsigned(x) {\n        return x < 0 ? x + 0x100000000 : x;\n    }\n\n    // Set random values into Uint8Arry\n    // Random generator\n    function randomSeed(e) {\n        var randomSource = new GostRandom();\n        if (randomSource.getRandomValues)\n            randomSource.getRandomValues(e);\n        else\n            throw new NotSupportedError('Random generator not found');\n    }\n\n    // Get buffer\n    function buffer(d) {\n        if (d instanceof CryptoOperationData)\n            return d;\n        else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\n            return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\n                    d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\n        else\n            throw new DataError('CryptoOperationData required');\n    }\n\n    // Get byte array\n    function byteArray(d) {\n        return new Uint8Array(buffer(d));\n    }\n\n    // Clone byte array\n    function cloneArray(d) {\n        return new Uint8Array(byteArray(d));\n    }\n\n\n    // Get int32 array\n    function intArray(d) {\n        return new Int32Array(buffer(d));\n    }\n\n    // Swap bytes for version 2015\n    function swap32(b) {\n        return ((b & 0xff) << 24)\n                | ((b & 0xff00) << 8)\n                | ((b >> 8) & 0xff00)\n                | ((b >> 24) & 0xff);\n    }\n\n\n\n    /*\n     * Initial parameters and common algortithms of GOST R 34.12-15 \n     * Algorithm \"Kuznechik\" 128bit\n     * \n     */\n\n    // Default initial vector\n    var defaultIV128 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n    // Mult table for R function\n    var multTable = (function () {\n\n        // Multiply two numbers in the GF(2^8) finite field defined \n        // by the polynomial x^8 + x^7 + x^6 + x + 1 = 0 */\n        function gmul(a, b) {\n            var p = 0, counter, carry;\n            for (counter = 0; counter < 8; counter++) {\n                if (b & 1)\n                    p ^= a;\n                carry = a & 0x80; // detect if x^8 term is about to be generated \n                a = (a << 1) & 0xff;\n                if (carry)\n                    a ^= 0xc3; // replace x^8 with x^7 + x^6 + x + 1 \n                b >>= 1;\n            }\n            return p & 0xff;\n        }\n\n        // It is required only this values for R function\n        //       0   1   2    3    4    5    6    7\n        var x = [1, 16, 32, 133, 148, 192, 194, 251];\n        var m = [];\n        for (var i = 0; i < 8; i++) {\n            m[i] = [];\n            for (var j = 0; j < 256; j++)\n                m[i][j] = gmul(x[i], j);\n        }\n        return m;\n    })();\n\n    // 148, 32, 133, 16, 194, 192, 1, 251, 1, 192, 194, 16, 133, 32, 148, 1\n    var kB = [4, 2, 3, 1, 6, 5, 0, 7, 0, 5, 6, 1, 3, 2, 4, 0];\n\n    // R - function\n    function funcR(d) {\n        var sum = 0;\n        for (var i = 0; i < 16; i++)\n            sum ^= multTable[kB[i]][d[i]];\n\n        for (var i = 16; i > 0; --i)\n            d[i] = d[i - 1];\n        d[0] = sum;\n    }\n\n    function funcReverseR(d) {\n        var tmp = d[0];\n        for (var i = 0; i < 15; i++)\n            d[i] = d[i + 1];\n        d[15] = tmp;\n\n        var sum = 0;\n        for (i = 0; i < 16; i++)\n            sum ^= multTable[kB[i]][d[i]];\n        d[15] = sum;\n    }\n\n    // Nonlinear transformation\n    var kPi = [\n        252, 238, 221, 17, 207, 110, 49, 22, 251, 196, 250, 218, 35, 197, 4, 77,\n        233, 119, 240, 219, 147, 46, 153, 186, 23, 54, 241, 187, 20, 205, 95, 193,\n        249, 24, 101, 90, 226, 92, 239, 33, 129, 28, 60, 66, 139, 1, 142, 79,\n        5, 132, 2, 174, 227, 106, 143, 160, 6, 11, 237, 152, 127, 212, 211, 31,\n        235, 52, 44, 81, 234, 200, 72, 171, 242, 42, 104, 162, 253, 58, 206, 204,\n        181, 112, 14, 86, 8, 12, 118, 18, 191, 114, 19, 71, 156, 183, 93, 135,\n        21, 161, 150, 41, 16, 123, 154, 199, 243, 145, 120, 111, 157, 158, 178, 177,\n        50, 117, 25, 61, 255, 53, 138, 126, 109, 84, 198, 128, 195, 189, 13, 87,\n        223, 245, 36, 169, 62, 168, 67, 201, 215, 121, 214, 246, 124, 34, 185, 3,\n        224, 15, 236, 222, 122, 148, 176, 188, 220, 232, 40, 80, 78, 51, 10, 74,\n        167, 151, 96, 115, 30, 0, 98, 68, 26, 184, 56, 130, 100, 159, 38, 65,\n        173, 69, 70, 146, 39, 94, 85, 47, 140, 163, 165, 125, 105, 213, 149, 59,\n        7, 88, 179, 64, 134, 172, 29, 247, 48, 55, 107, 228, 136, 217, 231, 137,\n        225, 27, 131, 73, 76, 63, 248, 254, 141, 83, 170, 144, 202, 216, 133, 97,\n        32, 113, 103, 164, 45, 43, 9, 91, 203, 155, 37, 208, 190, 229, 108, 82,\n        89, 166, 116, 210, 230, 244, 180, 192, 209, 102, 175, 194, 57, 75, 99, 182\n    ];\n\n    var kReversePi = (function () {\n        var m = [];\n        for (var i = 0, n = kPi.length; i < n; i++)\n            m[kPi[i]] = i;\n        return m;\n    })();\n\n    function funcS(d) {\n        for (var i = 0; i < 16; ++i)\n            d[i] = kPi[d[i]];\n    }\n\n    function funcReverseS(d) {\n        for (var i = 0; i < 16; ++i)\n            d[i] = kReversePi[d[i]];\n    }\n\n    function funcX(a, b) {\n        for (var i = 0; i < 16; ++i)\n            a[i] ^= b[i];\n    }\n\n    function funcL(d) {\n        for (var i = 0; i < 16; ++i)\n            funcR(d);\n    }\n\n    function funcReverseL(d) {\n        for (var i = 0; i < 16; ++i)\n            funcReverseR(d);\n    }\n\n    function funcLSX(a, b) {\n        funcX(a, b);\n        funcS(a);\n        funcL(a);\n    }\n\n    function funcReverseLSX(a, b) {\n        funcX(a, b);\n        funcReverseL(a);\n        funcReverseS(a);\n    }\n\n    function funcF(inputKey, inputKeySecond, iterationConst) {\n        var tmp = new Uint8Array(inputKey);\n        funcLSX(inputKey, iterationConst);\n        funcX(inputKey, inputKeySecond);\n        inputKeySecond.set(tmp);\n    }\n\n    function funcC(number, d) {\n        for (var i = 0; i < 15; i++)\n            d[i] = 0;\n        d[15] = number;\n        funcL(d);\n    }\n\n\n\n    /**\n     * Key schedule for GOST R 34.12-15 128bits\n     * \n     * @memberOf GostCipher\n     * @private\n     * @instance\n     * @method keySchedule\n     * @param {type} k\n     * @returns {Uint8Array}\n     */\n    function keySchedule128(k)\n    {\n        var keys = new Uint8Array(160), c = new Uint8Array(16);\n        keys.set(byteArray(k));\n        for (var j = 0; j < 4; j++) {\n            var j0 = 32 * j, j1 = 32 * (j + 1);\n            keys.set(new Uint8Array(keys.buffer, j0, 32), j1);\n            for (var i = 1; i < 9; i++) {\n                funcC(j * 8 + i, c);\n                funcF(new Uint8Array(keys.buffer, j1, 16),\n                        new Uint8Array(keys.buffer, j1 + 16, 16), c);\n            }\n        }\n        return keys;\n    }\n\n    /**\n     * GOST R 34.12-15 128 bits encrypt/decrypt process \n     * \n     * @memberOf GostCipher\n     * @private\n     * @instance\n     * @method round\n     * @param {Uint8Array} k Scheduled key\n     * @param {Uint8Array} d Data\n     * @param {number} ofs Offsec\n     * @param {number} e true - decrypt\n     */\n    function process128(k, d, ofs, e)\n    {\n        ofs = ofs || d.byteOffset;\n        var r = new Uint8Array(d.buffer, ofs, 16);\n        if (e) {\n            for (var i = 0; i < 9; i++)\n                funcReverseLSX(r, new Uint8Array(k.buffer, (9 - i) * 16, 16));\n\n            funcX(r, new Uint8Array(k.buffer, 0, 16));\n        } else {\n            for (var i = 0; i < 9; i++)\n                funcLSX(r, new Uint8Array(k.buffer, 16 * i, 16));\n\n            funcX(r, new Uint8Array(k.buffer, 16 * 9, 16));\n        }\n    }\n\n    /**\n     * One GOST encryption round\n     * \n     * @memberOf GostCipher\n     * @private\n     * @instance\n     * @method round\n     * @param {Int8Array} S sBox\n     * @param {Int32Array} m 2x32 bits cipher block \n     * @param {Int32Array} k 32 bits key[i] \n     */\n    function round(S, m, k)\n    {\n        var cm = (m[0] + k) & 0xffffffff;\n\n        var om = S[  0 + ((cm >> (0 * 4)) & 0xF)] << (0 * 4);\n        om |= S[ 16 + ((cm >> (1 * 4)) & 0xF)] << (1 * 4);\n        om |= S[ 32 + ((cm >> (2 * 4)) & 0xF)] << (2 * 4);\n        om |= S[ 48 + ((cm >> (3 * 4)) & 0xF)] << (3 * 4);\n        om |= S[ 64 + ((cm >> (4 * 4)) & 0xF)] << (4 * 4);\n        om |= S[ 80 + ((cm >> (5 * 4)) & 0xF)] << (5 * 4);\n        om |= S[ 96 + ((cm >> (6 * 4)) & 0xF)] << (6 * 4);\n        om |= S[112 + ((cm >> (7 * 4)) & 0xF)] << (7 * 4);\n        cm = om << 11 | om >>> (32 - 11);\n\n        cm ^= m[1];\n        m[1] = m[0];\n        m[0] = cm;\n\n    }\n\n    /**\n     * Process encrypt/decrypt block with key K using GOST 28147-89\n     * \n     * @memberOf GostCipher\n     * @private\n     * @instance\n     * @method process\n     * @param k {Int32Array} 8x32 bits key \n     * @param d {Int32Array} 8x8 bits cipher block \n     * @param ofs {number} offset\n     */\n    function process89(k, d, ofs)\n    {\n        ofs = ofs || d.byteOffset;\n        var s = this.sBox,\n                m = new Int32Array(d.buffer, ofs, 2);\n\n        for (var i = 0; i < 32; i++)\n            round(s, m, k[i]);\n\n        var r = m[0];\n        m[0] = m[1];\n        m[1] = r;\n    }\n\n    /**\n     * Process encrypt/decrypt block with key K using GOST R 34.12-15 64bit block\n     * \n     * @memberOf GostCipher\n     * @private\n     * @instance\n     * @method process\n     * @param k {Int32Array} 8x32 bits key \n     * @param d {Int32Array} 8x8 bits cipher block \n     * @param ofs {number} offset\n     */\n    function process15(k, d, ofs)\n    {\n        ofs = ofs || d.byteOffset;\n        var s = this.sBox,\n                m = new Int32Array(d.buffer, ofs, 2),\n                r = swap32(m[0]);\n        m[0] = swap32(m[1]);\n        m[1] = r;\n\n        for (var i = 0; i < 32; i++)\n            round(s, m, k[i]);\n\n        m[0] = swap32(m[0]);\n        m[1] = swap32(m[1]);\n    }\n\n    /**\n     * Key keySchedule algorithm for GOST 28147-89 64bit cipher\n     * \n     * @memberOf GostCipher\n     * @private\n     * @instance\n     * @method process\n     * @param k {Uint8Array} 8 bit key array\n     * @param e {boolean}  true - decrypt\n     * @returns {Int32Array} keyScheduled 32-bit key\n     */\n    function keySchedule89(k, e)\n    {\n        var sch = new Int32Array(32),\n                key = new Int32Array(buffer(k));\n\n        for (var i = 0; i < 8; i++)\n            sch[i] = key[i];\n\n        if (e) {\n            for (var i = 0; i < 8; i++)\n                sch[i + 8] = sch[7 - i];\n\n            for (var i = 0; i < 8; i++)\n                sch[i + 16] = sch[7 - i];\n        } else {\n            for (var i = 0; i < 8; i++)\n                sch[i + 8] = sch[i];\n\n            for (var i = 0; i < 8; i++)\n                sch[i + 16] = sch[i];\n        }\n\n        for (var i = 0; i < 8; i++)\n            sch[i + 24] = sch[7 - i];\n\n        return sch;\n    }\n\n    /**\n     * Key keySchedule algorithm for GOST R 34.12-15 64bit cipher\n     * \n     * @memberOf GostCipher\n     * @private\n     * @instance\n     * @method process\n     * @param k {Uint8Array} 8 bit key array\n     * @param e {boolean}  true - decrypt\n     * @returns {Int32Array} keyScheduled 32-bit key\n     */\n    function keySchedule15(k, e)\n    {\n        var sch = new Int32Array(32),\n                key = new Int32Array(buffer(k));\n\n        for (var i = 0; i < 8; i++)\n            sch[i] = swap32(key[i]);\n\n        if (e) {\n            for (var i = 0; i < 8; i++)\n                sch[i + 8] = sch[7 - i];\n\n            for (var i = 0; i < 8; i++)\n                sch[i + 16] = sch[7 - i];\n        } else {\n            for (var i = 0; i < 8; i++)\n                sch[i + 8] = sch[i];\n\n            for (var i = 0; i < 8; i++)\n                sch[i + 16] = sch[i];\n        }\n\n        for (var i = 0; i < 8; i++)\n            sch[i + 24] = sch[7 - i];\n\n        return sch;\n    }\n\n    /**\n     * Key schedule for RC2\n     * \n     * https://tools.ietf.org/html/rfc2268\n     * \n     * @memberOf GostCipher\n     * @private\n     * @instance\n     * @method keySchedule\n     * @param {Uint8Array} k\n     * @returns {Uint16Array}\n     */\n    var keyScheduleRC2 = (function ()\n    {\n        // an array of \"random\" bytes based on the digits of PI = 3.14159...\n        var PITABLE = new Uint8Array([\n            0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n            0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n            0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n            0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n            0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n            0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n            0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n            0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n            0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n            0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n            0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n            0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n            0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n            0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n            0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n            0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n        ]);\n\n        return function (k)\n        {\n            var key = new Uint8Array(buffer(k)),\n                    T = Math.min(key.length, 128),\n                    T1 = this.effectiveLength,\n                    T8 = Math.floor((T1 + 7) / 8),\n                    TM = 0xff % Math.pow(2, 8 + T1 - 8 * T8);\n\n            var L = new Uint8Array(128), K = new Uint16Array(L.buffer);\n            for (var i = 0; i < T; i++)\n                L[i] = key[i];\n            for (var i = T; i < 128; i++)\n                L[i] = PITABLE[(L[i - 1] + L[i - T]) % 256];\n            L[128 - T8] = PITABLE[L[128 - T8] & TM];\n            for (var i = 127 - T8; i >= 0; --i)\n                L[i] = PITABLE[L[i + 1] ^ L[i + T8]];\n            return K;\n        };\n    }\n    )();\n\n    /**\n     * RC2 encrypt/decrypt process \n     * \n     * https://tools.ietf.org/html/rfc2268\n     * \n     * @memberOf GostCipher\n     * @private\n     * @instance\n     * @method round\n     * @param {CryptoOperationData} k Scheduled key\n     * @param {CryptoOperationData} d Data\n     * @param {number} ofs Offsec\n     * @param {number} e true - decrypt\n     */\n    var processRC2 = (function ()\n    {\n        var K, j, R = new Uint16Array(4),\n                s = new Uint16Array([1, 2, 3, 5]), reverse;\n\n        function rol(R, s) {\n            return (R << s | R >>> (16 - s)) & 0xffff;\n        }\n\n        function ror(R, s) {\n            return (R >>> s | R << (16 - s)) & 0xffff;\n        }\n\n        function mix(i) {\n            if (reverse) {\n                R[i] = ror(R[i], s[i]);\n                R[i] = R[i] - K[j] - (R[(i + 3) % 4] & R[(i + 2) % 4]) - ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n                j = j - 1;\n            } else {\n                R[i] = R[i] + K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) + ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n                j = j + 1;\n                R[i] = rol(R[i], s[i]);\n            }\n        }\n\n        function mash(i) {\n            if (reverse) {\n                R[i] = R[i] - K[R[(i + 3) % 4] & 63];\n            } else {\n                R[i] = R[i] + K[R[(i + 3) % 4] & 63];\n            }\n        }\n\n        function perform(method, count) {\n            count = count || 1;\n            for (var j = 0; j < count; j++) {\n                if (reverse) {\n                    for (var i = 3; i >= 0; --i)\n                        method(i);\n                } else {\n                    for (var i = 0; i < 4; i++)\n                        method(i);\n                }\n            }\n        }\n\n        return function (k, d, ofs, e) {\n            reverse = e;\n            //  1. Initialize words R[0], ..., R[3] to contain the 64-bit\n            //     ciphertext value.\n            R = new Uint16Array(d.buffer, ofs || d.byteOffset, 4);\n            //  2. Expand the key, so that words K[0], ..., K[63] become\n            //     defined.\n            K = k;\n            //  3. Initialize j to zero (enc) j to 63 (dec).\n            j = e ? 63 : 0;\n            //  4. Perform five mixing rounds.\n            perform(mix, 5);\n            //  5. Perform one mashing round.\n            perform(mash);\n            //  6. Perform six mixing rounds.\n            perform(mix, 6);\n            //  7. Perform one mashing round.\n            perform(mash);\n            //  8. Perform five mixing rounds.\n            perform(mix, 5);\n        };\n    }\n    )();\n\n    /**\n     * Algorithm name GOST 28147-ECB<br><br>\n     * \n     * encryptECB (K, D) is D, encrypted with key k using GOST 28147/GOST R 34.13 in \n     * \"prostaya zamena\" (Electronic Codebook, ECB) mode. \n     * @memberOf GostCipher\n     * @method encrypt\n     * @instance\n     * @param k {CryptoOperationData} 8x32 bit key \n     * @param d {CryptoOperationData} 8 bits message\n     * @return {CryptoOperationData} result\n     */\n    function encryptECB(k, d)\n    {\n        var p = this.pad(byteArray(d)),\n                n = this.blockSize,\n                b = p.byteLength / n,\n                key = this.keySchedule(k);\n\n        for (var i = 0; i < b; i++)\n            this.process(key, p, n * i);\n\n        return p.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-ECB<br><br>\n     * \n     * decryptECB (K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13 in   \n     * \"prostaya zamena\"  (Electronic Codebook, ECB) mode.\n     * \n     * @memberOf GostCipher\n     * @method decrypt\n     * @instance\n     * @param k {CryptoOperationData} 8x32 bits key \n     * @param d {CryptoOperationData} 8 bits message\n     * @return {CryptoOperationData} result\n     */\n    function decryptECB(k, d)\n    {\n        var p = cloneArray(d),\n                n = this.blockSize,\n                b = p.byteLength / n,\n                key = this.keySchedule(k, 1);\n\n        for (var i = 0; i < b; i++)\n            this.process(key, p, n * i, 1);\n\n        return this.unpad(p).buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-CFB<br><br>\n     * \n     * encryptCFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13   \n     * in \"gammirovanie s obratnoj svyaziyu\" (Cipher Feedback, CFB) mode, and IV is   \n     * used as the initialization vector.\n     * \n     * @memberOf GostCipher\n     * @method encrypt\n     * @instance\n     * @param {CryptoOperationData} k 8x32 bits key \n     * @param {CryptoOperationData} d 8 bits array with data \n     * @param {CryptoOperationData} iv initial vector\n     * @return {CryptoOperationData} result\n     */\n    function encryptCFB(k, d, iv)\n    {\n        var s = new Uint8Array(iv || this.iv),\n                c = cloneArray(d),\n                m = s.length,\n                t = new Uint8Array(m),\n                b = this.shiftBits >> 3,\n                cb = c.length, r = cb % b, q = (cb - r) / b,\n                key = this.keySchedule(k);\n\n        for (var i = 0; i < q; i++) {\n\n            for (var j = 0; j < m; j++)\n                t[j] = s[j];\n\n            this.process(key, s);\n\n            for (var j = 0; j < b; j++)\n                c[i * b + j] ^= s[j];\n\n            for (var j = 0; j < m - b; j++)\n                s[j] = t[b + j];\n\n            for (var j = 0; j < b; j++)\n                s[m - b + j] = c[i * b + j];\n\n            k = this.keyMeshing(k, s, i, key);\n        }\n\n        if (r > 0) {\n            this.process(key, s);\n\n            for (var i = 0; i < r; i++)\n                c[q * b + i] ^= s[i];\n        }\n        return c.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-CFB<br><br>\n     * \n     * decryptCFB (IV, K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13   \n     * in \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (Cipher Feedback, CFB) mode, and IV is   \n     * used as the initialization vector.\n     * \n     * @memberOf GostCipher\n     * @method decrypt\n     * @instance\n     * @param {CryptoOperationData} k 8x32 bits key \n     * @param {CryptoOperationData} d 8 bits array with data \n     * @param {CryptoOperationData} iv initial vector\n     * @return {CryptoOperationData} result\n     */\n    function decryptCFB(k, d, iv)\n    {\n        var s = new Uint8Array(iv || this.iv),\n                c = cloneArray(d),\n                m = s.length,\n                t = new Uint8Array(m),\n                b = this.shiftBits >> 3,\n                cb = c.length, r = cb % b, q = (cb - r) / b,\n                key = this.keySchedule(k);\n\n        for (var i = 0; i < q; i++) {\n\n            for (var j = 0; j < m; j++)\n                t[j] = s[j];\n\n            this.process(key, s);\n\n            for (var j = 0; j < b; j++) {\n                t[j] = c[i * b + j];\n                c[i * b + j] ^= s[j];\n            }\n\n            for (var j = 0; j < m - b; j++)\n                s[j] = t[b + j];\n\n            for (var j = 0; j < b; j++)\n                s[m - b + j] = t[j];\n\n            k = this.keyMeshing(k, s, i, key);\n        }\n\n        if (r > 0) {\n            this.process(key, s);\n\n            for (var i = 0; i < r; i++)\n                c[q * b + i] ^= s[i];\n        }\n        return c.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-OFB<br><br>\n     * \n     * encryptOFB/decryptOFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13   \n     * in \"gammirovanie s obratnoj svyaziyu po vyhodu\" (Output Feedback, OFB) mode, and IV is   \n     * used as the initialization vector.\n     * \n     * @memberOf GostCipher\n     * @method encrypt\n     * @instance\n     * @param {CryptoOperationData} k 8x32 bits key \n     * @param {CryptoOperationData} d 8 bits array with data \n     * @param {CryptoOperationData} iv 8x8 optional bits initial vector\n     * @return {CryptoOperationData} result\n     */\n    /**\n     * Algorithm name GOST 28147-OFB<br><br>\n     * \n     * encryptOFB/decryptOFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13   \n     * in \"gammirovanie s obratnoj svyaziyu po vyhodu\" (Output Feedback, OFB) mode, and IV is   \n     * used as the initialization vector.\n     * \n     * @memberOf GostCipher\n     * @method decrypt\n     * @instance\n     * @param {CryptoOperationData} k 8x32 bits key \n     * @param {CryptoOperationData} d 8 bits array with data \n     * @param {CryptoOperationData} iv initial vector\n     * @return {CryptoOperationData} result\n     */\n    function processOFB(k, d, iv)\n    {\n        var s = new Uint8Array(iv || this.iv),\n                c = cloneArray(d),\n                m = s.length,\n                t = new Uint8Array(m),\n                b = this.shiftBits >> 3,\n                p = new Uint8Array(b),\n                cb = c.length, r = cb % b, q = (cb - r) / b,\n                key = this.keySchedule(k);\n\n        for (var i = 0; i < q; i++) {\n\n            for (var j = 0; j < m; j++)\n                t[j] = s[j];\n\n            this.process(key, s);\n\n            for (var j = 0; j < b; j++)\n                p[j] = s[j];\n\n            for (var j = 0; j < b; j++)\n                c[i * b + j] ^= s[j];\n\n            for (var j = 0; j < m - b; j++)\n                s[j] = t[b + j];\n\n            for (var j = 0; j < b; j++)\n                s[m - b + j] = p[j];\n\n            k = this.keyMeshing(k, s, i, key);\n        }\n\n        if (r > 0) {\n            this.process(key, s);\n\n            for (var i = 0; i < r; i++)\n                c[q * b + i] ^= s[i];\n        }\n        return c.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-CTR<br><br>\n     * \n     * encryptCTR/decryptCTR (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13   \n     * in \"gammirovanie\" (Counter Mode-CTR) mode, and IV is used as the   \n     * initialization vector.\n     * @memberOf GostCipher\n     * @method encrypt\n     * @instance\n     * @param {CryptoOperationData} k 8x32 bits key \n     * @param {CryptoOperationData} d 8 bits array with data \n     * @param {CryptoOperationData} iv 8x8 optional bits initial vector\n     * @return {CryptoOperationData} result\n     */\n    /**\n     * Algorithm name GOST 28147-CTR<br><br>\n     * \n     * encryptCTR/decryptCTR (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13   \n     * in \"gammirovanie\" (Counter Mode-CTR) mode, and IV is used as the   \n     * initialization vector.\n     * @memberOf GostCipher\n     * @method decrypt\n     * @instance\n     * @param {CryptoOperationData} k 8x32 bits key \n     * @param {CryptoOperationData} d 8 bits array with data \n     * @param {CryptoOperationData} iv initial vector\n     * @return {CryptoOperationData} result\n     */\n    function processCTR89(k, d, iv)\n    {\n        var s = new Uint8Array(iv || this.iv),\n                c = cloneArray(d),\n                b = this.blockSize,\n                t = new Int8Array(b),\n                cb = c.length, r = cb % b, q = (cb - r) / b,\n                key = this.keySchedule(k),\n                syn = new Int32Array(s.buffer);\n\n        this.process(key, s);\n\n        for (var i = 0; i < q; i++) {\n            syn[0] = (syn[0] + 0x1010101) & 0xffffffff;\n            // syn[1] = signed(unsigned((syn[1] + 0x1010104) & 0xffffffff) % 0xffffffff);\n            var tmp = unsigned(syn[1]) + 0x1010104; // Special thanks to Ilya Matveychikov\n            syn[1] = signed(tmp < 0x100000000 ? tmp : tmp - 0xffffffff);\n\n            for (var j = 0; j < b; j++)\n                t[j] = s[j];\n\n            this.process(key, syn);\n\n            for (var j = 0; j < b; j++)\n                c[i * b + j] ^= s[j];\n\n            for (var j = 0; j < b; j++)\n                s[j] = t[j];\n\n            k = this.keyMeshing(k, s, i, key);\n        }\n        if (r > 0) {\n            syn[0] = (syn[0] + 0x1010101) & 0xffffffff;\n            // syn[1] = signed(unsigned((syn[1] + 0x1010104) & 0xffffffff) % 0xffffffff);\n            var tmp = unsigned(syn[1]) + 0x1010104; // Special thanks to Ilya Matveychikov\n            syn[1] = signed(tmp < 0x100000000 ? tmp : tmp - 0xffffffff);\n\n            this.process(key, syn);\n\n            for (var i = 0; i < r; i++)\n                c[q * b + i] ^= s[i];\n        }\n        return c.buffer;\n    }\n\n    function processCTR15(k, d, iv)\n    {\n        var c = cloneArray(d),\n                n = this.blockSize,\n                b = this.shiftBits >> 3,\n                cb = c.length, r = cb % b, q = (cb - r) / b,\n                s = new Uint8Array(n),\n                t = new Int32Array(n),\n                key = this.keySchedule(k);\n\n        s.set(iv || this.iv);\n        for (var i = 0; i < q; i++) {\n\n            for (var j = 0; j < n; j++)\n                t[j] = s[j];\n\n            this.process(key, s);\n\n            for (var j = 0; j < b; j++)\n                c[b * i + j] ^= s[j];\n\n            for (var j = 0; j < n; j++)\n                s[j] = t[j];\n\n            for (var j = n - 1; i >= 0; --i) {\n                if (s[j] > 0xfe) {\n                    s[j] -= 0xfe;\n                } else {\n                    s[j]++;\n                    break;\n                }\n            }\n        }\n\n        if (r > 0) {\n            this.process(key, s);\n            for (var j = 0; j < r; j++)\n                c[b * q + j] ^= s[j];\n        }\n\n        return c.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-CBC<br><br>\n     * \n     * encryptCBC (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13   \n     * in \"Prostaya zamena s zatsepleniem\" (Cipher-Block-Chaining, CBC) mode and IV is used as the initialization \n     * vector.\n     * \n     * @memberOf GostCipher\n     * @method encrypt\n     * @instance\n     * @param {CryptoOperationData} k 8x32 bits key \n     * @param {CryptoOperationData} d 8 bits array with data \n     * @param {CryptoOperationData} iv initial vector\n     * @return {CryptoOperationData} result\n     */\n    function encryptCBC(k, d, iv)\n    {\n        var s = new Uint8Array(iv || this.iv),\n                n = this.blockSize,\n                m = s.length,\n                c = this.pad(byteArray(d)),\n                key = this.keySchedule(k);\n\n        for (var i = 0, b = c.length / n; i < b; i++) {\n\n            for (var j = 0; j < n; j++)\n                s[j] ^= c[i * n + j];\n\n            this.process(key, s);\n\n            for (var j = 0; j < n; j++)\n                c[i * n + j] = s[j];\n\n            if (m !== n) {\n                for (var j = 0; j < m - n; j++)\n                    s[j] = s[n + j];\n\n                for (var j = 0; j < n; j++)\n                    s[j + m - n] = c[i * n + j];\n            }\n\n            k = this.keyMeshing(k, s, i, key);\n        }\n\n        return c.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-CBC<br><br>\n     * \n     * decryptCBC (IV, K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13   \n     * in \"Prostaya zamena s zatsepleniem\" (Cipher-Block-Chaining, CBC) mode and IV is used as the initialization \n     * vector.\n     * \n     * @memberOf GostCipher\n     * @method decrypt\n     * @instance\n     * @param {CryptoOperationData} k 8x32 bits key \n     * @param {CryptoOperationData} d 8 bits array with data \n     * @param {CryptoOperationData} iv initial vector\n     * @return {CryptoOperationData} result\n     */\n    function decryptCBC(k, d, iv)\n    {\n        var s = new Uint8Array(iv || this.iv),\n                n = this.blockSize,\n                m = s.length,\n                c = cloneArray(d),\n                next = new Uint8Array(n),\n                key = this.keySchedule(k, 1);\n\n        for (var i = 0, b = c.length / n; i < b; i++) {\n\n            for (var j = 0; j < n; j++)\n                next[j] = c[i * n + j];\n\n            this.process(key, c, i * n, 1);\n\n            for (var j = 0; j < n; j++)\n                c[i * n + j] ^= s[j];\n\n            if (m !== n) {\n                for (var j = 0; j < m - n; j++)\n                    s[j] = s[n + j];\n            }\n\n            for (var j = 0; j < n; j++)\n                s[j + m - n] = next[j];\n\n            k = this.keyMeshing(k, s, i, key, 1);\n        }\n\n        return this.unpad(c).buffer;\n    }\n\n    /**\n     * The generateKey method returns a new generated key.\n     * \n     * @memberOf GostCipher\n     * @method generateKey\n     * @instance\n     * @return {CryptoOperationData} result\n     */\n\n    function generateKey()\n    {\n        // Simple generate 256 bit random seed\n        var k = new Uint8Array(this.keySize);\n        randomSeed(k);\n        return k.buffer;\n    }\n\n\n    /**\n     * makeIMIT (K, D) is the 32-bit result of the GOST 28147/GOST R 34.13 in   \n     * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV   \n     * as initialization vector.  Note that the standard specifies its use   \n     * in this mode only with an initialization vector of zero.\n     * \n     * @memberOf GostCipher\n     * @method processMAC\n     * @private\n     * @instance\n     * @param {Int32Array} key 8x32 bits key \n     * @param {Int32Array} s 8x8 sum array\n     * @param {Uint8Array} d 8 bits array with data \n     * @return {Uint8Array} result\n     */\n    function processMAC89(key, s, d)\n    {\n        var c = zeroPad.call(this, byteArray(d)),\n                n = this.blockSize,\n                q = c.length / n,\n                sBox = this.sBox,\n                sum = new Int32Array(s.buffer);\n\n        for (var i = 0; i < q; i++) {\n\n            for (var j = 0; j < n; j++)\n                s[j] ^= c[i * n + j];\n\n            for (var j = 0; j < 16; j++) // 1-16 steps\n                round(sBox, sum, key[j]);\n        }\n    }\n\n    function processKeyMAC15(s)\n    {\n        var t = 0, n = s.length;\n        for (var i = n - 1; i >= 0; --i) {\n            var t1 = s[i] >>> 7;\n            s[i] = (s[i] << 1) & 0xff | t;\n            t = t1;\n        }\n        if (t !== 0) {\n            if (n === 16)\n                s[15] ^= 0x87;\n            else\n                s[7] ^= 0x1b;\n        }\n    }\n\n    function processMAC15(key, s, d)\n    {\n        var n = this.blockSize,\n                sBox = this.sBox, c = byteArray(d),\n                r = new Uint8Array(n);\n        // R\n        this.process(key, r);\n        // K1\n        processKeyMAC15(r);\n        if (d.byteLength % n !== 0) {\n            c = bitPad.call(this, byteArray(d));\n            // K2\n            processKeyMAC15(r);\n        }\n\n        for (var i = 0, q = c.length / n; i < q; i++) {\n\n            for (var j = 0; j < n; j++)\n                s[j] ^= c[i * n + j];\n\n            if (i === q - 1) {// Last block\n                for (var j = 0; j < n; j++)\n                    s[j] ^= r[j];\n            }\n\n            this.process(key, s);\n        }\n    }\n\n    /**\n     * signMAC (K, D, IV) is the 32-bit result of the GOST 28147/GOST R 34.13 in   \n     * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV   \n     * as initialization vector.  Note that the standard specifies its use   \n     * in this mode only with an initialization vector of zero.\n     * \n     * @memberOf GostCipher\n     * @method sign\n     * @instance\n     * @param {CryptoOperationData} k 8x32 bits key \n     * @param {CryptoOperationData} d 8 bits array with data \n     * @param {CryptoOperationData} iv initial vector\n     * @return {CryptoOperationData} result\n     */\n    function signMAC(k, d, iv)\n    {\n        var key = this.keySchedule(k),\n                s = new Uint8Array(iv || this.iv),\n                m = Math.ceil(this.macLength >> 3) || this.blockSize >> 1;\n\n        this.processMAC(key, s, d);\n\n        var mac = new Uint8Array(m); // mac size\n        mac.set(new Uint8Array(s.buffer, 0, m));\n        return mac.buffer;\n    }\n\n    /**\n     * verifyMAC (K, M, D, IV) the 32-bit result verification of the GOST 28147/GOST R 34.13 in   \n     * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV   \n     * as initialization vector.  Note that the standard specifies its use   \n     * in this mode only with an initialization vector of zero.\n     * \n     * @memberOf GostCipher\n     * @method verify\n     * @instance\n     * @param {CryptoOperationData} k 8x32 bits key \n     * @param {CryptoOperationData} m 8 bits array with signature\n     * @param {CryptoOperationData} d 8 bits array with data \n     * @param {CryptoOperationData} iv 8x8 optional bits initial vector\n     * @return {boolen} MAC verified = true\n     */\n    function verifyMAC(k, m, d, iv)\n    {\n        var mac = new Uint8Array(signMAC.call(this, k, d, iv)),\n                test = byteArray(m);\n        if (mac.length !== test.length)\n            return false;\n        for (var i = 0, n = mac.length; i < n; i++)\n            if (mac[i] !== test[i])\n                return false;\n        return true;\n    }\n\n    /**\n     * Algorithm name GOST 28147-KW<br><br>\n     * \n     * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147/GOST R 34.13 KEK.\n     * Ref. rfc4357 6.1 GOST 28147-89 Key Wrap\n     * Note: This algorithm MUST NOT be used with a KEK produced by VKO GOST   \n     * R 34.10-94, because such a KEK is constant for every sender-recipient   \n     * pair.  Encrypting many different content encryption keys on the same   \n     * constant KEK may reveal that KEK.\n     * \n     * @memberOf GostCipher\n     * @method wrapKey\n     * @instance\n     * @param {CryptoOperationData} kek Key encryption key\n     * @param {CryptoOperationData} cek Content encryption key\n     * @returns {CryptoOperationData} Encrypted cek\n     */\n    function wrapKeyGOST(kek, cek)\n    {\n        var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\n        // 1) For a unique symmetric KEK, generate 8 octets at random and call \n        // the result UKM.  For a KEK, produced by VKO GOST R 34.10-2001, use \n        // the UKM that was used for key derivation.    \n        if (!this.ukm) \n            throw new DataError('UKM must be defined');\n        var ukm = new Uint8Array(this.ukm);\n        // 2) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK, CEK).       \n        // Call the result CEK_MAC. \n        var mac = signMAC.call(this, kek, cek, ukm);\n        // 3) Encrypt the CEK in ECB mode using the KEK.  Call the ciphertext CEK_ENC.\n        var enc = encryptECB.call(this, kek, cek);\n        // 4) The wrapped content-encryption key is (UKM | CEK_ENC | CEK_MAC).\n        var r = new Uint8Array(len);\n        r.set(new Uint8Array(enc), 0);\n        r.set(new Uint8Array(mac), k);\n        return r.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-KW<br><br>\n     * \n     *  This algorithm decrypts GOST 28147-89 CEK with a GOST 28147 KEK.\n     *  Ref. rfc4357 6.2 GOST 28147-89 Key Unwrap\n     *  \n     * @memberOf GostCipher\n     * @method unwrapKey\n     * @instance\n     * @param {type} kek Key encryption key\n     * @param {type} data Content encryption key\n     * @return {CryptoOperationData} result\n     */\n    function unwrapKeyGOST(kek, data)\n    {\n        var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\n        // 1) If the wrapped content-encryption key is not 44 octets, then error.\n        var d = buffer(data);\n        if (d.byteLength !== len)\n            throw new DataError('Wrapping key size must be ' + len + ' bytes');\n        // 2) Decompose the wrapped content-encryption key into UKM, CEK_ENC, and CEK_MAC.  \n        // UKM is the most significant (first) 8 octets. CEK_ENC is next 32 octets, \n        // and CEK_MAC is the least significant (last) 4 octets.    \n        if (!this.ukm)\n            throw new DataError('UKM must be defined');\n        var ukm = new Uint8Array(this.ukm),\n                enc = new Uint8Array(d, 0, k),\n                mac = new Uint8Array(d, k, n >> 1);\n        // 3) Decrypt CEK_ENC in ECB mode using the KEK.  Call the output CEK.\n        var cek = decryptECB.call(this, kek, enc);\n        // 4) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK, CEK), \n        // compare the result with CEK_MAC.  If they are not equal, then error.\n        var check = verifyMAC.call(this, kek, mac, cek, ukm);\n        if (!check)\n            throw new DataError('Error verify MAC of wrapping key');\n        return cek;\n    }\n\n    /**\n     * Algorithm name GOST 28147-CPKW<br><br>\n     * \n     * Given a random 64-bit UKM and a GOST 28147 key K, this algorithm   \n     * creates a new GOST 28147-89 key K(UKM).\n     * Ref. rfc4357 6.3 CryptoPro KEK Diversification Algorithm\n     * \n     * @memberOf GostCipher\n     * @method diversify\n     * @instance\n     * @private\n     * @param {CryptoOperationData} kek Key encryption key\n     * @param {CryptoOperationData} ukm Random generated value\n     * @returns {CryptoOperationData} Diversified kek\n     */\n    function diversifyKEK(kek, ukm)\n    {\n        var n = this.blockSize;\n\n        // 1) Let K[0] = K;    \n        var k = intArray(kek);\n        // 2) UKM is split into components a[i,j]:       \n        //    UKM = a[0]|..|a[7] (a[i] - byte, a[i,0]..a[i,7] - it’s bits) \n        var a = [];\n        for (var i = 0; i < n; i++) {\n            a[i] = [];\n            for (var j = 0; j < 8; j++) {\n                a[i][j] = (ukm[i] >>> j) & 0x1;\n            }\n        }\n        // 3) Let i be 0.    \n        // 4) K[1]..K[8] are calculated by repeating the following algorithm       \n        //    eight times:     \n        for (var i = 0; i < n; i++) {\n            //     A) K[i] is split into components k[i,j]:\n            //        K[i] = k[i,0]|k[i,1]|..|k[i,7] (k[i,j] - 32-bit integer)\n            //     B) Vector S[i] is calculated:        \n            //        S[i] = ((a[i,0]*k[i,0] + ... + a[i,7]*k[i,7]) mod 2^32) |        \n            //         (((~a[i,0])*k[i,0] + ... + (~a[i,7])*k[i,7]) mod 2^32);     \n            var s = new Int32Array(2);\n            for (var j = 0; j < 8; j++) {\n                if (a[i][j])\n                    s[0] = (s[0] + k[j]) & 0xffffffff;\n                else\n                    s[1] = (s[1] + k[j]) & 0xffffffff;\n            }\n            //     C) K[i+1] = encryptCFB (S[i], K[i], K[i])\n            var iv = new Uint8Array(s.buffer);\n            k = new Int32Array(encryptCFB.call(this, k, k, iv));\n            //     D) i = i + 1\n        }\n        // 5) Let K(UKM) be K[8].\n        return k;\n    }\n\n    /**\n     * Algorithm name GOST 28147-CPKW<br><br>\n     * \n     * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147 KEK.   \n     * It can be used with any KEK (e.g., produced by VKO GOST R 34.10-94 or   \n     * VKO GOST R 34.10-2001) because a unique UKM is used to diversify the KEK.\n     * Ref. rfc4357 6.3  CryptoPro Key Wrap\n     * \n     * @memberOf GostCipher\n     * @method wrapKey\n     * @instance\n     * @param {CryptoOperationData} kek Key encryption key\n     * @param {CryptoOperationData} cek Content encryption key\n     * @returns {CryptoOperationData} Encrypted cek\n     */\n    function wrapKeyCP(kek, cek)\n    {\n        var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\n        // 1) For a unique symmetric KEK or a KEK produced by VKO GOST R       \n        // 34.10-94, generate 8 octets at random.  Call the result UKM.  For       \n        // a KEK, produced by VKO GOST R 34.10-2001, use the UKM that was       \n        // used for key derivation.\n        if (!this.ukm) \n            throw new DataError('UKM must be defined');\n        var ukm = new Uint8Array(this.ukm);\n        // 2) Diversify KEK, using the CryptoPro KEK Diversification Algorithm,       \n        // described in Section 6.5.  Call the result KEK(UKM).\n        var dek = diversifyKEK.call(this, kek, ukm);\n        // 3) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK(UKM),       \n        // CEK).  Call the result CEK_MAC.    \n        var mac = signMAC.call(this, dek, cek, ukm);\n        // 4) Encrypt CEK in ECB mode using KEK(UKM).  Call the ciphertext       \n        // CEK_ENC.    \n        var enc = encryptECB.call(this, dek, cek);\n        // 5) The wrapped content-encryption key is (UKM | CEK_ENC | CEK_MAC).\n        var r = new Uint8Array(len);\n        r.set(new Uint8Array(enc), 0);\n        r.set(new Uint8Array(mac), k);\n        return r.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-CPKW<br><br>\n     * \n     * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147 KEK. \n     * Ref. rfc4357 6.4 CryptoPro Key Unwrap\n     *\n     * @memberOf GostCipher\n     * @method unwrapKey\n     * @instance\n     * @param {CryptoOperationData} kek Key encryption key\n     * @param {CryptoOperationData} data Encrypted content encryption keu\n     * @return {CryptoOperationData} result Decrypted content encryption keu\n     */\n    function unwrapKeyCP(kek, data)\n    {\n        var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\n        // 1) If the wrapped content-encryption key is not 44 octets, then error.    \n        var d = buffer(data);\n        if (d.byteLength !== len)\n            throw new DataError('Wrapping key size must be ' + len + ' bytes');\n        // 2) Decompose the wrapped content-encryption key into UKM, CEK_ENC,       \n        // and CEK_MAC.  UKM is the most significant (first) 8 octets.       \n        // CEK_ENC is next 32 octets, and CEK_MAC is the least significant       \n        // (last) 4 octets.    \n        if (!this.ukm)\n            throw new DataError('UKM must be defined');\n        var ukm = new Uint8Array(this.ukm),\n                enc = new Uint8Array(d, 0, k),\n                mac = new Uint8Array(d, k, n >> 1);\n        // 3) Diversify KEK using the CryptoPro KEK Diversification Algorithm,       \n        // described in section 6.5.  Call the result KEK(UKM).    \n        var dek = diversifyKEK.call(this, kek, ukm);\n        // 4) Decrypt CEK_ENC in ECB mode using KEK(UKM).  Call the output CEK.    \n        var cek = decryptECB.call(this, dek, enc);\n        // 5) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK(UKM),       \n        // CEK), compare the result with CEK_MAC.  If they are not equal, \n        // then it is an error.\n        var check = verifyMAC.call(this, dek, mac, cek, ukm);\n        if (!check)\n            throw new DataError('Error verify MAC of wrapping key');\n        return cek;\n    }\n\n    /**\n     * SignalCom master key packing algorithm\n     * \n     * kek stored in 3 files - kek.opq, mk.db3, masks.db3\n     * kek.opq - always 36 bytes length = 32 bytes encrypted kek + 4 bytes mac of decrypted kek\n     * mk.db3 - 6 bytes header (1 byte magic code 0x22 + 1 byte count of masks + 4 bytes mac of \n     * xor summarizing masks value) + attached masks \n     * masks.db3 - detached masks. \n     * Total length  of attached + detached masks = 32 bits * count of masks\n     * Default value of count 8 = (7 attached + 1 detached). But really no reason for such \n     * separation - all masks xor summarizing - order is not matter.\n     * Content of file rand.opq can used as ukm. Don't forget change file content after using. \n     * \n     * For usb-token files has names: \n     * a001 - mk.db3, b001 - masks.db3, c001 - kek.opq, d001 - rand.opq\n     * For windows registry\n     * 00000001 - mk.db3, 00000002 - masks.db3, 00000003 - key.opq, 00000004 - rand.opq, \n     * 00000006 - keys\\00000001.key, 0000000A - certificate\n     * \n     * @memberOf GostCipher\n     * @method packKey\n     * @instance\n     * @private\n     * @param {CryptoOperationData} unpacked - clear main key 32 bytes\n     * @param {CryptoOperationData} ukm - random vector for packing - 32 bytes * (count of masks - 1)\n     * @returns {CryptoOperationData} packed master key - concatination of mk.db3 + masks.db3\n     */\n    function packKeySC(unpacked, ukm)\n    {\n        var m = this.blockSize >> 1, k = this.keySize;\n        var mcount = 8;\n        var key = new Uint8Array(buffer(unpacked));\n        if (key.byteLength !== k)\n            throw new DataError('Wrong cleartext size ' + key.byteLength + ' bytes');\n        // Check or generate UKM\n        ukm = ukm || this.ukm;\n        if (ukm) {\n            ukm = new Uint8Array(buffer(ukm));\n            if (ukm.byteLength > 0 && ukm.byteLength % k === 0)\n                mcount = ukm.byteLength / k + 1;\n            else\n                throw new DataError('Wrong rand size ' + ukm.byteLength + ' bytes');\n        } else\n            randomSeed(ukm = new Uint8Array((mcount - 1) * k));\n        // Output array\n        var d = new Uint8Array(mcount * k + m + 2), b = d.buffer;\n        // Calculate MAC\n        var zero32 = new Uint8Array(k);\n        var mac = signMAC.call(this, key, zero32);\n        d[0] = 0x22; // Magic code\n        d[1] = mcount; // Count of masks\n        d.set(new Uint8Array(mac), 2);\n        d.set(ukm, k + m + 2);\n        for (var i = 1; i < mcount; i++) {\n            var mask = new Uint8Array(b, 2 + m + k * i);\n            for (var j = 0; j < k; j++)\n                key[j] ^= mask[j];\n        }\n        d.set(key, m + 2);\n        return d.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-SCKW<br><br>\n     * \n     * SignalCom master key unpacking algorithm\n     * \n     * @memberOf GostCipher\n     * @method unpackKey\n     * @instance\n     * @private\n     * @param {CryptoOperationData} packed - concatination of mk.db3 + masks.db3\n     * @returns {CryptoOperationData} unpacked master key\n     */\n    function unpackKeySC(packed)\n    {\n        var m = this.blockSize >> 1, k = this.keySize;\n        var b = buffer(packed);\n        // Unpack master key\n        var magic = new Uint8Array(b, 0, 1)[0];\n        if (magic !== 0x22)\n            throw new DataError('Invalid magic number');\n        var mcount = new Uint8Array(b, 1, 1)[0];\n        var mac = new Uint8Array(b, 2, m); // MAC for summarized mask\n        // Compute packKey xor summing for all masks\n        var key = new Uint8Array(k);\n        for (var i = 0; i < mcount; i++) {\n            var mask = new Uint8Array(b, 2 + m + k * i, k);\n            for (var j = 0; j < k; j++)\n                key[j] ^= mask[j];\n        }\n        // Test MAC for packKey with default sBox on zero 32 bytes array\n        var zero32 = new Uint8Array(k);\n        var test = verifyMAC.call(this, key, mac, zero32);\n        if (!test) {\n            // Try to use different sBoxes\n            var names = ['E-A', 'E-B', 'E-C', 'E-D', 'E-SC'];\n            for (var i = 0, n = names.length; i < n; i++) {\n                this.sBox = sBoxes[names[i]];\n                test = verifyMAC.call(this, key, mac, zero32);\n                if (test)\n                    break;\n            }\n        }\n        if (!test)\n            throw new DataError('Invalid main key MAC');\n        return key.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-SCKW<br><br>\n     * \n     * SignalCom Key Wrapping algorithm\n     * \n     * @memberOf GostCipher\n     * @method wrapKey\n     * @instance\n     * @param {CryptoOperationData} kek - clear kek or concatination of mk.db3 + masks.db3\n     * @param {CryptoOperationData} cek - key for wrapping \n     * @returns {CryptoOperationData} wrapped key - file kek.opq\n     */\n    function wrapKeySC(kek, cek)\n    {\n        var m = this.blockSize >> 1, n = this.keySize;\n        var k = buffer(kek);\n        var c = buffer(cek);\n        if (k.byteLength !== n)\n            k = unpackKeySC.call(this, k);\n        var enc = encryptECB.call(this, k, c);\n        var mac = signMAC.call(this, k, c);\n        var d = new Uint8Array(m + n);\n        d.set(new Uint8Array(enc), 0);\n        d.set(new Uint8Array(mac), n);\n        return d.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-SCKW<br><br>\n     * \n     * SignalCom Key UnWrapping algorithm\n     * \n     * @memberOf GostCipher\n     * @method unwrapKey\n     * @instance\n     * @param {CryptoOperationData} kek - concatination of files mk.db3 + masks.db3 or clear kek \n     * @param {CryptoOperationData} cek - wrapping key - file kek.opq\n     * @return {CryptoOperationData} result\n     */\n    function unwrapKeySC(kek, cek)\n    {\n        var m = this.blockSize >> 1, n = this.keySize;\n        var k = buffer(kek);\n        var c = buffer(cek);\n        if (k.byteLength !== n)\n            k = unpackKeySC.call(this, k);\n        var enc = new Uint8Array(c, 0, n); // Encrypted kek\n        var mac = new Uint8Array(c, n, m); // MAC for clear kek\n        var d = decryptECB.call(this, k, enc);\n        if (!verifyMAC.call(this, k, mac, d))\n            throw new DataError('Invalid key MAC');\n        return d;\n    }\n\n    /**\n     * Algorithm name GOST 28147-SCKW<br><br>\n     * \n     * SignalCom master key generation for wrapping\n     * \n     * @memberOf GostCipher\n     * @method generateKey\n     * @instance\n     * @return {CryptoOperationData} result\n     */\n    function generateWrappingKeySC()\n    {\n        return packKeySC.call(this, generateKey.call(this));\n    }\n\n    function maskKey(mask, key, inverse, keySize)\n    {\n        var k = keySize / 4, \n                m32 = new Int32Array(buffer(mask)),\n                k32 = new Int32Array(buffer(key)), \n                r32 = new Int32Array(k);\n        if (inverse)\n            for (var i = 0; i < k; i++) \n                r32[i] = (k32[i] + m32[i]) & 0xffffffff;\n        else\n            for (var i = 0; i < k; i++) \n                r32[i] = (k32[i] - m32[i]) & 0xffffffff;\n        return r32.buffer;\n    }\n\n    /**\n     * Algorithm name GOST 28147-MASK<br><br>\n     * \n     * This algorithm wrap key mask\n     * \n     * @memberOf GostCipher\n     * @method wrapKey\n     * @instance\n     * @param {CryptoOperationData} mask The mask\n     * @param {CryptoOperationData} key The key\n     * @returns {CryptoOperationData} The masked key\n     */\n    function wrapKeyMask(mask, key)\n    {\n        return maskKey(mask, key, this.procreator === 'VN', this.keySize);\n    }\n\n    /**\n     * Algorithm name GOST 28147-CPKW<br><br>\n     * \n     * This algorithm unwrap key mask\n     *\n     * @memberOf GostCipher\n     * @method unwrapKey\n     * @instance\n     * @param {CryptoOperationData} mask The mask\n     * @param {CryptoOperationData} key The masked key\n     * @return {CryptoOperationData} result The key\n     */\n    function unwrapKeyMask(mask, key)\n    {\n        return maskKey(mask, key, this.procreator !== 'VN', this.keySize);\n    }\n    \n    /**\n     * Algorithm name GOST 28147-CPKM<br><br>\n     * \n     * Key meshing in according to rfc4357 2.3.2. CryptoPro Key Meshing\n     * \n     * @memberOf GostCipher\n     * @method keyMeshing\n     * @instance\n     * @private\n     * @param {(Uint8Array|CryptoOperationData)} k 8x8 bit key \n     * @param {Uint8Array} s 8x8 bit sync (iv)\n     * @param {Integer} i block index\n     * @param {Int32Array} key 8x32 bit key schedule \n     * @param {boolean} e true - decrypt\n     * @returns CryptoOperationData next 8x8 bit key\n     */\n    function keyMeshingCP(k, s, i, key, e)\n    {\n        if ((i + 1) * this.blockSize % 1024 === 0) { // every 1024 octets\n            // K[i+1] = decryptECB (K[i], C);\n            k = decryptECB.call(this, k, C);\n            // IV0[i+1] = encryptECB (K[i+1],IVn[i])\n            s.set(new Uint8Array(encryptECB.call(this, k, s)));\n            // restore key schedule\n            key.set(this.keySchedule(k, e));\n        }\n        return k;\n    }\n\n    /**\n     *  Null Key Meshing in according to rfc4357 2.3.1\n     * \n     * @memberOf GostCipher\n     * @method keyMeshing\n     * @instance\n     * @private\n     * @param {(Uint8Array|CryptoOperationData)} k 8x8 bit key \n     */\n    function noKeyMeshing(k)\n    {\n        return k;\n    }\n\n    /**\n     * Algorithm name GOST 28147-NoPadding<br><br>\n     * \n     * No padding.\n     * \n     * @memberOf GostCipher\n     * @method padding\n     * @instance\n     * @private\n     * @param {Uint8Array} d array with source data\n     * @returns {Uint8Array} result\n     */\n    function noPad(d)\n    {\n        return new Uint8Array(d);\n    }\n\n    /**\n     * Algorithm name GOST 28147-PKCS5Padding<br><br>\n     * \n     *  PKCS#5 padding: 8-x remaining bytes are filled with the value of      \n     *  8-x.  If there’s no incomplete block, one extra block filled with      \n     *  value 8 is added\n     * \n     * @memberOf GostCipher\n     * @method padding\n     * @instance\n     * @private\n     * @param {Uint8Array} d array with source data\n     * @returns {Uint8Array} result\n     */\n    function pkcs5Pad(d)\n    {\n        var n = d.byteLength,\n                nb = this.blockSize,\n                q = nb - n % nb,\n                m = Math.ceil((n + 1) / nb) * nb,\n                r = new Uint8Array(m);\n        r.set(d);\n        for (var i = n; i < m; i++)\n            r[i] = q;\n        return r;\n    }\n\n    function pkcs5Unpad(d)\n    {\n        var m = d.byteLength,\n                nb = this.blockSize,\n                q = d[m - 1],\n                n = m - q;\n        if (q > nb)\n            throw DataError('Invalid padding');\n        var r = new Uint8Array(n);\n        if (n > 0)\n            r.set(new Uint8Array(d.buffer, 0, n));\n        return r;\n    }\n\n\n    /**\n     * Algorithm name GOST 28147-ZeroPadding<br><br>\n     * \n     * Zero padding: 8-x remaining bytes are filled with zero\n     * \n     * @memberOf GostCipher\n     * @method padding\n     * @instance\n     * @private\n     * @param {Uint8Array} d array with source data\n     * @returns {Uint8Array} result\n     */\n    function zeroPad(d)\n    {\n        var n = d.byteLength,\n                nb = this.blockSize,\n                m = Math.ceil(n / nb) * nb,\n                r = new Uint8Array(m);\n        r.set(d);\n        for (var i = n; i < m; i++)\n            r[i] = 0;\n        return r;\n    }\n\n\n    /**\n     * Algorithm name GOST 28147-BitPadding<br><br>\n     * \n     * Bit padding: P* = P || 1 || 000...0 If there’s no incomplete block, \n     * one extra block filled with 1 || 000...0\n     * \n     * @memberOf GostCipher\n     * @method padding\n     * @instance\n     * @private\n     * @param {Uint8Array} d array with source data\n     * @returns {Uint8Array} result\n     */\n    function bitPad(d)\n    {\n        var n = d.byteLength,\n                nb = this.blockSize,\n                m = Math.ceil((n + 1) / nb) * nb,\n                r = new Uint8Array(m);\n        r.set(d);\n        r[n] = 1;\n        for (var i = n + 1; i < m; i++)\n            r[i] = 0;\n        return r;\n    }\n\n    function bitUnpad(d)\n    {\n        var m = d.byteLength,\n                n = m;\n        while (n > 1 && d[n - 1] === 0)\n            n--;\n        if (d[n - 1] !== 1)\n            throw DataError('Invalid padding');\n        n--;\n        var r = new Uint8Array(n);\n        if (n > 0)\n            r.set(new Uint8Array(d.buffer, 0, n));\n        return r;\n    }\n\n    /**\n     * Algorithm name GOST 28147-RandomPadding<br><br>\n     * \n     * Random padding: 8-x remaining bytes of the last block are set to      \n     * random.\n     * \n     * @memberOf GostCipher\n     * @method padding\n     * @instance\n     * @private\n     * @param {Uint8Array} d array with source data\n     * @returns {Uint8Array} result\n     */\n    function randomPad(d)\n    {\n        var n = d.byteLength,\n                nb = this.blockSize,\n                q = nb - n % nb,\n                m = Math.ceil(n / nb) * nb,\n                r = new Uint8Array(m), e = new Uint8Array(r.buffer, n, q);\n        r.set(d);\n        randomSeed(e);\n        return r;\n    }\n\n    /**\n     * GOST 28147-89 Encryption Algorithm<br><br> \n     * \n     * References {@link http://tools.ietf.org/html/rfc5830}<br><br>\n     * \n     * When keys and initialization vectors are converted to/from byte arrays, \n     * little-endian byte order is assumed.<br><br>\n     * \n     * Normalized algorithm identifier common parameters:\n     * \n     *  <ul>\n     *      <li><b>name</b> Algorithm name 'GOST 28147' or 'GOST R 34.12'</li>\n     *      <li><b>version</b> Algorithm version, number\n     *          <ul>\n     *              <li><b>1989</b> Current version of standard</li>\n     *              <li><b>2015</b> New draft version of standard</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>length</b> Block length\n     *          <ul>\n     *              <li><b>64</b> 64 bits length (default)</li>\n     *              <li><b>128</b> 128 bits length (only for version 2015)</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>mode</b> Algorithm mode, string\n     *          <ul>\n     *              <li><b>ES</b> Encryption mode (default)</li>\n     *              <li><b>MAC</b> \"imitovstavka\" (MAC) mode</li>\n     *              <li><b>KW</b> Key wrapping mode</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>sBox</b> Paramset sBox for GOST 28147-89, string. Used only if version = 1989</li>\n     *  </ul>\n     *  \n     * Supported algorithms, modes and parameters:\n     * \n     *  <ul>\n     *      <li>Encript/Decrypt mode (ES)\n     *          <ul>\n     *              <li><b>block</b> Block mode, string. Default ECB</li>\n     *              <li><b>keyMeshing</b> Key meshing mode, string. Default NO</li>\n     *              <li><b>padding</b> Padding mode, string. Default NO for CFB and CTR modes, or ZERO for others</li>\n     *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\n     *          </ul>\n     *      </li>\n     *      <li>Sign/Verify mode (MAC)\n     *          <ul>\n     *              <li><b>macLength</b> Length of mac in bits (default - 32 bits)</li>\n     *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\n     *          </ul>\n     *      </li>\n     *      <li>Wrap/Unwrap key mode (KW)\n     *          <ul>\n     *              <li><b>keyWrapping</b> Mode of keywrapping, string. Default NO - standard GOST key wrapping</li>\n     *              <li><b>ukm</b> {@link CryptoOperationData} User key material. Default - random generated value</li>\n     *          </ul>\n     *      </li>\n     *  </ul>\n     *      \n     * Supported paramters values:\n     *      \n     *  <ul>\n     *      <li>Block modes (parameter 'block')\n     *          <ul>\n     *              <li><b>ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n     *              <li><b>CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\n     *              <li><b>OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\n     *              <li><b>CTR</b> \"gammirovanie\" (counter) mode</li>\n     *              <li><b>CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n     *          </ul>\n     *      </li>\n     *      <li>Key meshing modes (parameter 'keyMeshing')\n     *          <ul>\n     *              <li><b>NO</b> No key wrapping (default)</li>\n     *              <li><b>CP</b> CryptoPor Key key meshing</li>\n     *          </ul>\n     *      </li>\n     *      <li>Padding modes (parameter 'padding')\n     *          <ul>\n     *              <li><b>NO</b> No padding only for CFB, OFB and CTR modes</li>\n     *              <li><b>PKCS5</b> PKCS#5 padding mode</li>\n     *              <li><b>ZERO</b> Zero bits padding mode</li>\n     *              <li><b>RANDOM</b> Random bits padding mode</li>\n     *              <li><b>BIT</b> One bit padding mode</li>\n     *          </ul>\n     *      </li>\n     *      <li>Wrapping key modes (parameter 'keyWrapping')\n     *          <ul>\n     *              <li><b>NO</b> Ref. rfc4357 6.1 GOST 28147-89 Key wrapping</li>\n     *              <li><b>CP</b> CryptoPro Key wrapping mode</li>\n     *              <li><b>SC</b> SignalCom Key wrapping mode</li>\n     *          </ul>\n     *      </li>\n     *  </ul>\n     * \n     * @class GostCipher\n     * @param {AlgorithmIndentifier} algorithm WebCryptoAPI algorithm identifier\n     */\n    function GostCipher(algorithm)\n    {\n        // Check little endian support\n        if (!littleEndian)\n            throw new NotSupportedError('Big endian platform not supported');\n        algorithm = algorithm || {};\n        this.keySize = 32;\n        this.blockLength = algorithm.length || 64;\n        this.blockSize = this.blockLength >> 3;\n\n        this.name = (algorithm.name || (algorithm.version === 1 ? 'RC2' :\n                algorithm.version === 1989 ? 'GOST 28147' : 'GOST R 34.12')) +\n                (algorithm.version > 4 ? '-' + ((algorithm.version || 1989) % 100) : '') + '-' +\n                (this.blockLength === 64 ? '' : this.blockLength + '-') +\n                ((algorithm.mode === 'MAC') ? 'MAC-' + (algorithm.macLength || this.blockLength >> 1) :\n                        (algorithm.mode === 'KW' || algorithm.keyWrapping) ?\n                        ((algorithm.keyWrapping || 'NO') !== 'NO' ? algorithm.keyWrapping : '') + 'KW' :\n                        (algorithm.block || 'ECB') + ((algorithm.block === 'CFB' || algorithm.block === 'OFB' ||\n                        (algorithm.block === 'CTR' && algorithm.version === 2015)) &&\n                        algorithm.shiftBits && algorithm.shiftBits !== this.blockLength ? '-' + algorithm.shiftBits : '') +\n                        (algorithm.padding ? '-' + (algorithm.padding || (algorithm.block === 'CTR' ||\n                                algorithm.block === 'CFB' || algorithm.block === 'OFB' ? 'NO' : 'ZERO')) + 'PADDING' : '') +\n                        ((algorithm.keyMeshing || 'NO') !== 'NO' ? '-CPKEYMESHING' : '')) +\n                (algorithm.procreator ? '/' + algorithm.procreator : '') +\n                (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\n\n        // Algorithm procreator\n        this.procreator = algorithm.procreator;\n        \n        switch (algorithm.version || 1989) {\n            case 1:\n                this.process = processRC2;\n                this.keySchedule = keyScheduleRC2;\n                this.blockLength = 64;\n                this.effectiveLength = algorithm.length || 32;\n                this.keySize = 8 * Math.ceil(this.effectiveLength / 8); // Max 128\n                this.blockSize = this.blockLength >> 3;\n                break;\n            case 2015:\n                this.version = 2015;\n                if (this.blockLength === 64) {\n                    this.process = process15;\n                    this.keySchedule = keySchedule15;\n                } else if (this.blockLength === 128) {\n                    this.process = process128;\n                    this.keySchedule = keySchedule128;\n                } else\n                    throw new DataError('Invalid block length');\n                this.processMAC = processMAC15;\n                break;\n            case 1989:\n                this.version = 1989;\n                this.process = process89;\n                this.processMAC = processMAC89;\n                this.keySchedule = keySchedule89;\n                if (this.blockLength !== 64)\n                    throw new DataError('Invalid block length');\n                break;\n            default:\n                throw new NotSupportedError('Algorithm version ' + algorithm.version + ' not supported');\n        }\n\n        switch (algorithm.mode || (algorithm.keyWrapping && 'KW') || 'ES') {\n\n            case 'ES':\n                switch (algorithm.block || 'ECB') {\n                    case 'ECB':\n                        this.encrypt = encryptECB;\n                        this.decrypt = decryptECB;\n                        break;\n                    case 'CTR':\n                        if (this.version === 1989) {\n                            this.encrypt = processCTR89;\n                            this.decrypt = processCTR89;\n                        } else {\n                            this.encrypt = processCTR15;\n                            this.decrypt = processCTR15;\n                            this.shiftBits = algorithm.shiftBits || this.blockLength;\n                        }\n                        break\n                    case 'CBC':\n                        this.encrypt = encryptCBC;\n                        this.decrypt = decryptCBC;\n                        break\n                    case 'CFB':\n                        this.encrypt = encryptCFB;\n                        this.decrypt = decryptCFB;\n                        this.shiftBits = algorithm.shiftBits || this.blockLength;\n                        break;\n                    case 'OFB':\n                        this.encrypt = processOFB;\n                        this.decrypt = processOFB;\n                        this.shiftBits = algorithm.shiftBits || this.blockLength;\n                        break;\n                    default:\n                        throw new NotSupportedError('Block mode ' + algorithm.block + ' not supported');\n                }\n                switch (algorithm.keyMeshing) {\n                    case 'CP':\n                        this.keyMeshing = keyMeshingCP;\n                        break;\n                    default:\n                        this.keyMeshing = noKeyMeshing;\n                }\n                if (this.encrypt === encryptECB || this.encrypt === encryptCBC) {\n                    switch (algorithm.padding) {\n                        case 'PKCS5P':\n                            this.pad = pkcs5Pad;\n                            this.unpad = pkcs5Unpad;\n                            break;\n                        case 'RANDOM':\n                            this.pad = randomPad;\n                            this.unpad = noPad;\n                            break;\n                        case 'BIT':\n                            this.pad = bitPad;\n                            this.unpad = bitUnpad;\n                            break;\n                        default:\n                            this.pad = zeroPad;\n                            this.unpad = noPad;\n                    }\n                } else {\n                    this.pad = noPad;\n                    this.unpad = noPad;\n                }\n                this.generateKey = generateKey;\n                break;\n            case 'MAC':\n                this.sign = signMAC;\n                this.verify = verifyMAC;\n                this.generateKey = generateKey;\n                this.macLength = algorithm.macLength || (this.blockLength >> 1);\n                this.pad = noPad;\n                this.unpad = noPad;\n                this.keyMeshing = noKeyMeshing;\n                break;\n            case 'KW':\n                this.pad = noPad;\n                this.unpad = noPad;\n                this.keyMeshing = noKeyMeshing;\n                switch (algorithm.keyWrapping) {\n                    case 'CP':\n                        this.wrapKey = wrapKeyCP;\n                        this.unwrapKey = unwrapKeyCP;\n                        this.generateKey = generateKey;\n                        this.shiftBits = algorithm.shiftBits || this.blockLength;\n                        break;\n                    case 'SC':\n                        this.wrapKey = wrapKeySC;\n                        this.unwrapKey = unwrapKeySC;\n                        this.generateKey = generateWrappingKeySC;\n                        break;\n                    default:\n                        this.wrapKey = wrapKeyGOST;\n                        this.unwrapKey = unwrapKeyGOST;\n                        this.generateKey = generateKey;\n                }\n                break;\n            case 'MASK':\n                this.wrapKey = wrapKeyMask;\n                this.unwrapKey = unwrapKeyMask;\n                this.generateKey = generateKey;\n                break;\n            default:\n                throw new NotSupportedError('Mode ' + algorithm.mode + ' not supported');\n        }\n\n        // Define sBox parameter\n        var sBox = algorithm.sBox, sBoxName;\n        if (!sBox)\n            sBox = this.version === 2015 ? sBoxes['E-Z'] : this.procreator === 'SC' ? sBoxes['E-SC'] : sBoxes['E-A'];\n        else if (typeof sBox === 'string') {\n            sBoxName = sBox.toUpperCase();\n            sBox = sBoxes[sBoxName];\n            if (!sBox)\n                throw new SyntaxError('Unknown sBox name: ' + algorithm.sBox);\n        } else if (!sBox.length || sBox.length !== sBoxes['E-Z'].length)\n            throw new SyntaxError('Length of sBox must be ' + sBoxes['E-Z'].length);\n        this.sBox = sBox;\n        // Initial vector\n        if (algorithm.iv) {\n            this.iv = new Uint8Array(algorithm.iv);\n            if (this.iv.byteLength !== this.blockSize && this.version === 1989)\n                throw new SyntaxError('Length of iv must be ' + this.blockLength + ' bits');\n            else if (this.iv.byteLength !== this.blockSize >> 1 && this.encrypt === processCTR15)\n                throw new SyntaxError('Length of iv must be ' + this.blockLength >> 1 + ' bits');\n            else if (this.iv.byteLength % this.blockSize !== 0 && this.encrypt !== processCTR15)\n                throw new SyntaxError('Length of iv must be a multiple of ' + this.blockLength + ' bits');\n        } else\n            this.iv = this.blockLength === 128 ? defaultIV128 : defaultIV;\n        // User key material\n        if (algorithm.ukm) {\n            this.ukm = new Uint8Array(algorithm.ukm);\n            if (this.ukm.byteLength * 8 !== this.blockLength)\n                throw new SyntaxError('Length of ukm must be ' + this.blockLength + ' bits');\n        }\n    }\n\nmodule.exports = GostCipher;\n\n\n","/**\n * @file Coding algorithms: Base64, Hex, Int16, Chars, BER and PEM\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * THIS SOfTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES Of MERCHANTABILITY AND fITNESS fOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * fOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT Of SUBSTITUTE GOODS OR\n * SERVICES; LOSS Of USE, DATA, OR PROfITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY Of LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT Of THE USE\n * Of THIS SOfTWARE, EVEN If ADVISED Of THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nconst gostCrypto = require('./gostCrypto');\n\n    /**\n     * The Coding interface provides string converting methods: Base64, Hex, \n     * Int16, Chars, BER and PEM\n     * @class GostCoding\n     * \n     */\n    var root = global;\n    var DataError = root.DataError || root.Error;\n    var CryptoOperationData = root.ArrayBuffer;\n    var Date = root.Date;\n\n    function buffer(d) {\n        if (d instanceof CryptoOperationData)\n            return d;\n        else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\n            return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\n                    d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\n        else\n            throw new DataError('CryptoOperationData required');\n    }\n\n    function GostCoding() {\n    }\n\n    /**\n     * BASE64 conversion\n     * \n     * @class GostCoding.Base64\n     */\n    var Base64 = {\n        /**\n         * Base64.decode convert BASE64 string s to CryptoOperationData\n         * \n         * @memberOf GostCoding.Base64\n         * @param {String} s BASE64 encoded string value\n         * @returns {CryptoOperationData} Binary decoded data\n         */\n        decode: function (s) {\n            s = s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n            var n = s.length,\n                    k = n * 3 + 1 >> 2, r = new Uint8Array(k);\n\n            for (var m3, m4, u24 = 0, j = 0, i = 0; i < n; i++) {\n                m4 = i & 3;\n                var c = s.charCodeAt(i);\n\n                c = c > 64 && c < 91 ?\n                        c - 65 : c > 96 && c < 123 ?\n                        c - 71 : c > 47 && c < 58 ?\n                        c + 4 : c === 43 ?\n                        62 : c === 47 ?\n                        63 : 0;\n\n                u24 |= c << 18 - 6 * m4;\n                if (m4 === 3 || n - i === 1) {\n                    for (m3 = 0; m3 < 3 && j < k; m3++, j++) {\n                        r[j] = u24 >>> (16 >>> m3 & 24) & 255;\n                    }\n                    u24 = 0;\n\n                }\n            }\n            return r.buffer;\n        },\n        /**\n         * Base64.encode(data) convert CryptoOperationData data to BASE64 string\n         * \n         * @memberOf GostCoding.Base64\n         * @param {CryptoOperationData} data Bynary data for encoding\n         * @returns {String} BASE64 encoded data\n         */\n        encode: function (data) {\n            var slen = 8, d = new Uint8Array(buffer(data));\n            var m3 = 2, s = '';\n            for (var n = d.length, u24 = 0, i = 0; i < n; i++) {\n                m3 = i % 3;\n                if (i > 0 && (i * 4 / 3) % (12 * slen) === 0)\n                    s += '\\r\\n';\n                u24 |= d[i] << (16 >>> m3 & 24);\n                if (m3 === 2 || n - i === 1) {\n                    for (var j = 18; j >= 0; j -= 6) {\n                        var c = u24 >>> j & 63;\n                        c = c < 26 ? c + 65 : c < 52 ? c + 71 : c < 62 ? c - 4 :\n                                c === 62 ? 43 : c === 63 ? 47 : 65;\n                        s += String.fromCharCode(c);\n                    }\n                    u24 = 0;\n                }\n            }\n            return s.substr(0, s.length - 2 + m3) + (m3 === 2 ? '' : m3 === 1 ? '=' : '==');\n        }\n    };\n\n    /**\n     * BASE64 conversion\n     * \n     * @memberOf GostCoding\n     * @insnance\n     * @type GostCoding.Base64\n     */\n    GostCoding.prototype.Base64 = Base64;\n\n    /**\n     * Text string conversion <br>\n     * Methods support charsets: ascii, win1251, utf8, utf16 (ucs2, unicode), utf32 (ucs4)\n     * \n     * @class GostCoding.Chars\n     */\n    var Chars = (function () {\n\n        var _win1251_ = {\n            0x402: 0x80, 0x403: 0x81, 0x201A: 0x82, 0x453: 0x83, 0x201E: 0x84, 0x2026: 0x85, 0x2020: 0x86, 0x2021: 0x87,\n            0x20AC: 0x88, 0x2030: 0x89, 0x409: 0x8A, 0x2039: 0x8B, 0x40A: 0x8C, 0x40C: 0x8D, 0x40B: 0x8E, 0x40f: 0x8f,\n            0x452: 0x90, 0x2018: 0x91, 0x2019: 0x92, 0x201C: 0x93, 0x201D: 0x94, 0x2022: 0x95, 0x2013: 0x96, 0x2014: 0x97,\n            0x2122: 0x99, 0x459: 0x9A, 0x203A: 0x9B, 0x45A: 0x9C, 0x45C: 0x9D, 0x45B: 0x9E, 0x45f: 0x9f,\n            0xA0: 0xA0, 0x40E: 0xA1, 0x45E: 0xA2, 0x408: 0xA3, 0xA4: 0xA4, 0x490: 0xA5, 0xA6: 0xA6, 0xA7: 0xA7,\n            0x401: 0xA8, 0xA9: 0xA9, 0x404: 0xAA, 0xAB: 0xAB, 0xAC: 0xAC, 0xAD: 0xAD, 0xAE: 0xAE, 0x407: 0xAf,\n            0xB0: 0xB0, 0xB1: 0xB1, 0x406: 0xB2, 0x456: 0xB3, 0x491: 0xB4, 0xB5: 0xB5, 0xB6: 0xB6, 0xB7: 0xB7,\n            0x451: 0xB8, 0x2116: 0xB9, 0x454: 0xBA, 0xBB: 0xBB, 0x458: 0xBC, 0x405: 0xBD, 0x455: 0xBE, 0x457: 0xBf\n        };\n        var _win1251back_ = {};\n        for (var from in _win1251_) {\n            var to = _win1251_[from];\n            _win1251back_[to] = from;\n        }\n\n        return {\n            /**\n             * Chars.decode(s, charset) convert string s with defined charset to CryptoOperationData \n             * \n             * @memberOf GostCoding.Chars\n             * @param {string} s Javascript string\n             * @param {string} charset Charset, default 'win1251'\n             * @returns {CryptoOperationData} Decoded binary data\n             */\n            decode: function (s, charset) {\n                charset = (charset || 'win1251').toLowerCase().replace('-', '');\n                var r = [];\n                for (var i = 0, j = s.length; i < j; i++) {\n                    var c = s.charCodeAt(i);\n                    if (charset === 'utf8') {\n                        if (c < 0x80) {\n                            r.push(c);\n                        } else if (c < 0x800) {\n                            r.push(0xc0 + (c >>> 6));\n                            r.push(0x80 + (c & 63));\n                        } else if (c < 0x10000) {\n                            r.push(0xe0 + (c >>> 12));\n                            r.push(0x80 + (c >>> 6 & 63));\n                            r.push(0x80 + (c & 63));\n                        } else if (c < 0x200000) {\n                            r.push(0xf0 + (c >>> 18));\n                            r.push(0x80 + (c >>> 12 & 63));\n                            r.push(0x80 + (c >>> 6 & 63));\n                            r.push(0x80 + (c & 63));\n                        } else if (c < 0x4000000) {\n                            r.push(0xf8 + (c >>> 24));\n                            r.push(0x80 + (c >>> 18 & 63));\n                            r.push(0x80 + (c >>> 12 & 63));\n                            r.push(0x80 + (c >>> 6 & 63));\n                            r.push(0x80 + (c & 63));\n                        } else {\n                            r.push(0xfc + (c >>> 30));\n                            r.push(0x80 + (c >>> 24 & 63));\n                            r.push(0x80 + (c >>> 18 & 63));\n                            r.push(0x80 + (c >>> 12 & 63));\n                            r.push(0x80 + (c >>> 6 & 63));\n                            r.push(0x80 + (c & 63));\n                        }\n                    } else if (charset === 'unicode' || charset === 'ucs2' || charset === 'utf16') {\n                        if (c < 0xD800 || (c >= 0xE000 && c <= 0x10000)) {\n                            r.push(c >>> 8);\n                            r.push(c & 0xff);\n                        } else if (c >= 0x10000 && c < 0x110000) {\n                            c -= 0x10000;\n                            var first = ((0xffc00 & c) >> 10) + 0xD800;\n                            var second = (0x3ff & c) + 0xDC00;\n                            r.push(first >>> 8);\n                            r.push(first & 0xff);\n                            r.push(second >>> 8);\n                            r.push(second & 0xff);\n                        }\n                    } else if (charset === 'utf32' || charset === 'ucs4') {\n                        r.push(c >>> 24 & 0xff);\n                        r.push(c >>> 16 & 0xff);\n                        r.push(c >>> 8 & 0xff);\n                        r.push(c & 0xff);\n                    } else if (charset === 'win1251') {\n                        if (c >= 0x80) {\n                            if (c >= 0x410 && c < 0x450) // А..Яа..я\n                                c -= 0x350;\n                            else\n                                c = _win1251_[c] || 0;\n                        }\n                        r.push(c);\n                    } else\n                        r.push(c & 0xff);\n                }\n                return new Uint8Array(r).buffer;\n            },\n            /**\n             * Chars.encode(data, charset) convert CryptoOperationData data to string with defined charset\n             * \n             * @memberOf GostCoding.Chars\n             * @param {CryptoOperationData} data Binary data\n             * @param {string} charset Charset, default win1251\n             * @returns {string} Encoded javascript string\n             */\n            encode: function (data, charset) {\n                charset = (charset || 'win1251').toLowerCase().replace('-', '');\n                var r = [], d = new Uint8Array(buffer(data));\n                for (var i = 0, n = d.length; i < n; i++) {\n                    var c = d[i];\n                    if (charset === 'utf8') {\n                        c = c >= 0xfc && c < 0xfe && i + 5 < n ? // six bytes\n                                (c - 0xfc) * 1073741824 + (d[++i] - 0x80 << 24) + (d[++i] - 0x80 << 18) + (d[++i] - 0x80 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\n                                : c >> 0xf8 && c < 0xfc && i + 4 < n ? // five bytes \n                                (c - 0xf8 << 24) + (d[++i] - 0x80 << 18) + (d[++i] - 0x80 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\n                                : c >> 0xf0 && c < 0xf8 && i + 3 < n ? // four bytes \n                                (c - 0xf0 << 18) + (d[++i] - 0x80 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\n                                : c >= 0xe0 && c < 0xf0 && i + 2 < n ? // three bytes \n                                (c - 0xe0 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\n                                : c >= 0xc0 && c < 0xe0 && i + 1 < n ? // two bytes \n                                (c - 0xc0 << 6) + d[++i] - 0x80\n                                : c; // one byte \n                    } else if (charset === 'unicode' || charset === 'ucs2' || charset === 'utf16') {\n                        c = (c << 8) + d[++i];\n                        if (c >= 0xD800 && c < 0xE000) {\n                            var first = (c - 0xD800) << 10;\n                            c = d[++i];\n                            c = (c << 8) + d[++i];\n                            var second = c - 0xDC00;\n                            c = first + second + 0x10000;\n                        }\n                    } else if (charset === 'utf32' || charset === 'ucs4') {\n                        c = (c << 8) + d[++i];\n                        c = (c << 8) + d[++i];\n                        c = (c << 8) + d[++i];\n                    } else if (charset === 'win1251') {\n                        if (c >= 0x80) {\n                            if (c >= 0xC0 && c < 0x100)\n                                c += 0x350; // А..Яа..я\n                            else\n                                c = _win1251back_[c] || 0;\n                        }\n                    }\n                    r.push(String.fromCharCode(c));\n                }\n                return r.join('');\n            }\n        };\n    })();\n\n    /**\n     * Text string conversion\n     * \n     * @memberOf GostCoding\n     * @insnance\n     * @type GostCoding.Chars\n     */\n    GostCoding.prototype.Chars = Chars;\n\n    /**\n     * HEX conversion\n     * \n     * @class GostCoding.Hex\n     */\n    var Hex = {\n        /**\n         * Hex.decode(s, endean) convert HEX string s to CryptoOperationData in endean mode\n         * \n         * @memberOf GostCoding.Hex\n         * @param {string} s Hex encoded string\n         * @param {boolean} endean Little or Big Endean, default Little\n         * @returns {CryptoOperationData} Decoded binary data\n         */\n        decode: function (s, endean) {\n            s = s.replace(/[^A-fa-f0-9]/g, '');\n            var n = Math.ceil(s.length / 2), r = new Uint8Array(n);\n            s = (s.length % 2 > 0 ? '0' : '') + s;\n            if (endean && ((typeof endean !== 'string') ||\n                    (endean.toLowerCase().indexOf('little') < 0)))\n                for (var i = 0; i < n; i++)\n                    r[i] = parseInt(s.substr((n - i - 1) * 2, 2), 16);\n            else\n                for (var i = 0; i < n; i++)\n                    r[i] = parseInt(s.substr(i * 2, 2), 16);\n            return r.buffer;\n        },\n        /**\n         * Hex.encode(data, endean) convert CryptoOperationData data to HEX string in endean mode\n         * \n         * @memberOf GostCoding.Hex \n         * @param {CryptoOperationData} data Binary data\n         * @param {boolean} endean Little/Big Endean, default Little\n         * @returns {string} Hex decoded string\n         */\n        encode: function (data, endean) {\n            var s = [], d = new Uint8Array(buffer(data)), n = d.length;\n            if (endean && ((typeof endean !== 'string') ||\n                    (endean.toLowerCase().indexOf('little') < 0)))\n                for (var i = 0; i < n; i++) {\n                    var j = n - i - 1;\n                    s[j] = (j > 0 && j % 32 === 0 ? '\\r\\n' : '') +\n                            ('00' + d[i].toString(16)).slice(-2);\n                }\n            else\n                for (var i = 0; i < n; i++)\n                    s[i] = (i > 0 && i % 32 === 0 ? '\\r\\n' : '') +\n                            ('00' + d[i].toString(16)).slice(-2);\n            return s.join('');\n        }\n    };\n\n    /**\n     *  HEX conversion\n     * @memberOf GostCoding\n     * @insnance\n     * @type GostCoding.Hex\n     */\n    GostCoding.prototype.Hex = Hex;\n\n    /**\n     * String hex-encoded integer conversion\n     * \n     * @class GostCoding.Int16\n     */\n    var Int16 = {\n        /**\n         * Int16.decode(s) convert hex big insteger s to CryptoOperationData\n         * \n         * @memberOf GostCoding.Int16 \n         * @param {string} s Int16 string \n         * @returns {CryptoOperationData} Decoded binary data\n         */\n        decode: function (s) {\n            s = (s || '').replace(/[^\\-A-fa-f0-9]/g, '');\n            if (s.length === 0)\n                s = '0';\n            // Signature\n            var neg = false;\n            if (s.charAt(0) === '-') {\n                neg = true;\n                s = s.substring(1);\n            }\n            // Align 2 chars\n            while (s.charAt(0) === '0' && s.length > 1)\n                s = s.substring(1);\n            s = (s.length % 2 > 0 ? '0' : '') + s;\n            // Padding for singanuture\n            // '800000' - 'ffffff' - for positive\n            // '800001' - 'ffffff' - for negative\n            if ((!neg && !/^[0-7]/.test(s)) ||\n                    (neg && !/^[0-7]|8[0]+$/.test(s)))\n                s = '00' + s;\n            // Convert hex\n            var n = s.length / 2, r = new Uint8Array(n), t = 0;\n            for (var i = n - 1; i >= 0; --i) {\n                var c = parseInt(s.substr(i * 2, 2), 16);\n                if (neg && (c + t > 0)) {\n                    c = 256 - c - t;\n                    t = 1;\n                }\n                r[i] = c;\n            }\n            return r.buffer;\n        },\n        /**\n         * Int16.encode(data) convert CryptoOperationData data to big integer hex string\n         * \n         * @memberOf GostCoding.Int16\n         * @param {CryptoOperationData} data Binary data\n         * @returns {string} Int16 encoded string\n         */\n        encode: function (data) {\n            var d = new Uint8Array(buffer(data)), n = d.length;\n            if (d.length === 0)\n                return '0x00';\n            var s = [], neg = d[0] > 0x7f, t = 0;\n            for (var i = n - 1; i >= 0; --i) {\n                var v = d[i];\n                if (neg && (v + t > 0)) {\n                    v = 256 - v - t;\n                    t = 1;\n                }\n                s[i] = ('00' + v.toString(16)).slice(-2);\n            }\n            s = s.join('');\n            while (s.charAt(0) === '0')\n                s = s.substring(1);\n            return (neg ? '-' : '') + '0x' + s;\n        }\n    };\n\n    /**\n     * String hex-encoded integer conversion\n     * @memberOf GostCoding\n     * @insnance\n     * @type GostCoding.Int16\n     */\n    GostCoding.prototype.Int16 = Int16;\n\n    /**\n     * BER, DER, CER conversion\n     * \n     * @class GostCoding.BER\n     */\n    var BER = (function () {\n\n        // Predefenition block\n        function encodeBER(source, format, onlyContent) {\n            // Correct primitive type\n            var object = source.object;\n            if (object === undefined)\n                object = source;\n\n            // Determinate tagClass\n            var tagClass = source.tagClass = source.tagClass || 0; // Universial default\n\n            // Determinate tagNumber. Use only for Universal class\n            if (tagClass === 0) {\n                var tagNumber = source.tagNumber;\n                if (typeof tagNumber === 'undefined') {\n                    if (typeof object === 'string') {\n                        if (object === '')   // NULL\n                            tagNumber = 0x05;\n                        else if (/^\\-?0x[0-9a-fA-F]+$/.test(object)) // INTEGER\n                            tagNumber = 0x02;\n                        else if (/^(\\d+\\.)+\\d+$/.test(object)) // OID\n                            tagNumber = 0x06;\n                        else if (/^[01]+$/.test(object)) // BIT STRING\n                            tagNumber = 0x03;\n                        else if (/^(true|false)$/.test(object)) // BOOLEAN\n                            tagNumber = 0x01;\n                        else if (/^[0-9a-fA-F]+$/.test(object)) // OCTET STRING\n                            tagNumber = 0x04;\n                        else\n                            tagNumber = 0x13; // Printable string (later can be changed to UTF8String)\n                    } else if (typeof object === 'number') { // INTEGER\n                        tagNumber = 0x02;\n                    } else if (typeof object === 'boolean') { // BOOLEAN\n                        tagNumber = 0x01;\n                    } else if (object instanceof Array) { // SEQUENCE\n                        tagNumber = 0x10;\n                    } else if (object instanceof Date) { // GeneralizedTime\n                        tagNumber = 0x18;\n                    } else if (object instanceof CryptoOperationData || (object && object.buffer instanceof CryptoOperationData)) {\n                        tagNumber = 0x04;\n                    } else\n                        throw new DataError('Unrecognized type for ' + object);\n                }\n            }\n\n            // Determinate constructed\n            var tagConstructed = source.tagConstructed;\n            if (typeof tagConstructed === 'undefined')\n                tagConstructed = source.tagConstructed = object instanceof Array;\n\n            // Create content\n            var content;\n            if (object instanceof CryptoOperationData || (object && object.buffer instanceof CryptoOperationData)) { // Direct\n                content = new Uint8Array(buffer(object));\n                if (tagNumber === 0x03) { // BITSTRING\n                    // Set unused bits\n                    var a = new Uint8Array(buffer(content));\n                    content = new Uint8Array(a.length + 1);\n                    content[0] = 0; // No unused bits\n                    content.set(a, 1);\n                }\n            } else if (tagConstructed) { // Sub items coding\n                if (object instanceof Array) {\n                    var bytelen = 0, ba = [], offset = 0;\n                    for (var i = 0, n = object.length; i < n; i++) {\n                        ba[i] = encodeBER(object[i], format);\n                        bytelen += ba[i].length;\n                    }\n                    if (tagNumber === 0x11)\n                        ba.sort(function (a, b) { // Sort order for SET components\n                            for (var i = 0, n = Math.min(a.length, b.length); i < n; i++) {\n                                var r = a[i] - b[i];\n                                if (r !== 0)\n                                    return r;\n                            }\n                            return a.length - b.length;\n                        });\n                    if (format === 'CER') { // final for CER 00 00\n                        ba[n] = new Uint8Array(2);\n                        bytelen += 2;\n                    }\n                    content = new Uint8Array(bytelen);\n                    for (var i = 0, n = ba.length; i < n; i++) {\n                        content.set(ba[i], offset);\n                        offset = offset + ba[i].length;\n                    }\n                } else\n                    throw new DataError('Constracted block can\\'t be primitive');\n            } else {\n                switch (tagNumber) {\n                    // 0x00: // EOC\n                    case 0x01: // BOOLEAN\n                        content = new Uint8Array(1);\n                        content[0] = object ? 0xff : 0;\n                        break;\n                    case 0x02: // INTEGER\n                    case 0x0a: // ENUMIRATED\n                        content = Int16.decode(\n                                typeof object === 'number' ? object.toString(16) : object);\n                        break;\n                    case 0x03: // BIT STRING\n                        if (typeof object === 'string') {\n                            var unusedBits = 7 - (object.length + 7) % 8;\n                            var n = Math.ceil(object.length / 8);\n                            content = new Uint8Array(n + 1);\n                            content[0] = unusedBits;\n                            for (var i = 0; i < n; i++) {\n                                var c = 0;\n                                for (var j = 0; j < 8; j++) {\n                                    var k = i * 8 + j;\n                                    c = (c << 1) + (k < object.length ? (object.charAt(k) === '1' ? 1 : 0) : 0);\n                                }\n                                content[i + 1] = c;\n                            }\n                        }\n                        break;\n                    case 0x04:\n                        content = Hex.decode(\n                                typeof object === 'number' ? object.toString(16) : object);\n                        break;\n                        // case 0x05: // NULL\n                    case 0x06: // OBJECT IDENTIFIER\n                        var a = object.match(/\\d+/g), r = [];\n                        for (var i = 1; i < a.length; i++) {\n                            var n = +a[i], r1 = [];\n                            if (i === 1)\n                                n = n + a[0] * 40;\n                            do {\n                                r1.push(n & 0x7F);\n                                n = n >>> 7;\n                            } while (n);\n                            // reverse order\n                            for (j = r1.length - 1; j >= 0; --j)\n                                r.push(r1[j] + (j === 0 ? 0x00 : 0x80));\n                        }\n                        content = new Uint8Array(r);\n                        break;\n                        // case 0x07: // ObjectDescriptor\n                        // case 0x08: // EXTERNAL\n                        // case 0x09: // REAL\n                        // case 0x0A: // ENUMERATED\n                        // case 0x0B: // EMBEDDED PDV\n                    case 0x0C: // UTF8String\n                        content = Chars.decode(object, 'utf8');\n                        break;\n                        // case 0x10: // SEQUENCE\n                        // case 0x11: // SET\n                    case 0x12: // NumericString\n                    case 0x16: // IA5String // ASCII\n                    case 0x13: // PrintableString // ASCII subset\n                    case 0x14: // TeletexString // aka T61String\n                    case 0x15: // VideotexString\n                    case 0x19: // GraphicString\n                    case 0x1A: // VisibleString // ASCII subset\n                    case 0x1B: // GeneralString\n                        // Reflect on character encoding\n                        for (var i = 0, n = object.length; i < n; i++)\n                            if (object.charCodeAt(i) > 255)\n                                tagNumber = 0x0C;\n                        if (tagNumber === 0x0C)\n                            content = Chars.decode(object, 'utf8');\n                        else\n                            content = Chars.decode(object, 'ascii');\n                        break;\n                    case 0x17: // UTCTime\n                    case 0x18: // GeneralizedTime\n                        var result = object.original;\n                        if (!result) {\n                            var date = new Date(object);\n                            date.setMinutes(date.getMinutes() + date.getTimezoneOffset()); // to UTC\n                            var ms = tagNumber === 0x18 ? date.getMilliseconds().toString() : ''; // Milliseconds, remove trailing zeros\n                            while (ms.length > 0 && ms.charAt(ms.length - 1) === '0')\n                                ms = ms.substring(0, ms.length - 1);\n                            if (ms.length > 0)\n                                ms = '.' + ms;\n                            result = (tagNumber === 0x17 ? date.getYear().toString().slice(-2) : date.getFullYear().toString()) +\n                                    ('00' + (date.getMonth() + 1)).slice(-2) +\n                                    ('00' + date.getDate()).slice(-2) +\n                                    ('00' + date.getHours()).slice(-2) +\n                                    ('00' + date.getMinutes()).slice(-2) +\n                                    ('00' + date.getSeconds()).slice(-2) + ms + 'Z';\n                        }\n                        content = Chars.decode(result, 'ascii');\n                        break;\n                    case 0x1C: // UniversalString\n                        content = Chars.decode(object, 'utf32');\n                        break;\n                    case 0x1E: // BMPString\n                        content = Chars.decode(object, 'utf16');\n                        break;\n                }\n            }\n\n            if (!content)\n                content = new Uint8Array(0);\n            if (content instanceof CryptoOperationData)\n                content = new Uint8Array(content);\n\n            if (!tagConstructed && format === 'CER') {\n                // Encoding CER-form for string types\n                var k;\n                switch (tagNumber) {\n                    case 0x03: // BIT_STRING\n                        k = 1; // ingnore unused bit for bit string\n                    case 0x04: // OCTET_STRING\n                    case 0x0C: // UTF8String\n                    case 0x12: // NumericString\n                    case 0x13: // PrintableString\n                    case 0x14: // TeletexString\n                    case 0x15: // VideotexString\n                    case 0x16: // IA5String\n                    case 0x19: // GraphicString\n                    case 0x1A: // VisibleString\n                    case 0x1B: // GeneralString\n                    case 0x1C: // UniversalString\n                    case 0x1E: // BMPString\n                        k = k || 0;\n                        // Split content on 1000 octet len parts \n                        var size = 1000;\n                        var bytelen = 0, ba = [], offset = 0;\n                        for (var i = k, n = content.length; i < n; i += size - k) {\n                            ba[i] = encodeBER({\n                                object: new Unit8Array(content.buffer, i, Math.min(size - k, n - i)),\n                                tagNumber: tagNumber,\n                                tagClass: 0,\n                                tagConstructed: false\n                            }, format);\n                            bytelen += ba[i].length;\n                        }\n                        ba[n] = new Uint8Array(2); // final for CER 00 00\n                        bytelen += 2;\n                        content = new Uint8Array(bytelen);\n                        for (var i = 0, n = ba.length; i < n; i++) {\n                            content.set(ba[i], offset);\n                            offset = offset + ba[i].length;\n                        }\n                }\n            }\n\n            // Restore tagNumber for all classes\n            if (tagClass === 0)\n                source.tagNumber = tagNumber;\n            else\n                source.tagNumber = tagNumber = source.tagNumber || 0;\n            source.content = content;\n\n            if (onlyContent)\n                return content;\n\n            // Create header\n            // tagNumber\n            var ha = [], first = tagClass === 3 ? 0xC0 : tagClass === 2 ? 0x80 :\n                    tagClass === 1 ? 0x40 : 0x00;\n            if (tagConstructed)\n                first |= 0x20;\n            if (tagNumber < 0x1F) {\n                first |= tagNumber & 0x1F;\n                ha.push(first);\n            } else {\n                first |= 0x1F;\n                ha.push(first);\n                var n = tagNumber, ha1 = [];\n                do {\n                    ha1.push(n & 0x7F);\n                    n = n >>> 7;\n                } while (n)\n                // reverse order\n                for (var j = ha1.length - 1; j >= 0; --j)\n                    ha.push(ha1[j] + (j === 0 ? 0x00 : 0x80));\n            }\n            // Length\n            if (tagConstructed && format === 'CER') {\n                ha.push(0x80);\n            } else {\n                var len = content.length;\n                if (len > 0x7F) {\n                    var l2 = len, ha2 = [];\n                    do {\n                        ha2.push(l2 & 0xff);\n                        l2 = l2 >>> 8;\n                    } while (l2);\n                    ha.push(ha2.length + 0x80); // reverse order\n                    for (var j = ha2.length - 1; j >= 0; --j)\n                        ha.push(ha2[j]);\n                } else {\n                    // simple len\n                    ha.push(len);\n                }\n            }\n            var header = source.header = new Uint8Array(ha);\n\n            // Result - complete buffer\n            var block = new Uint8Array(header.length + content.length);\n            block.set(header, 0);\n            block.set(content, header.length);\n            return block;\n        }\n\n        function decodeBER(source, offset) {\n\n            // start pos\n            var pos = offset || 0, start = pos;\n            var tagNumber, tagClass, tagConstructed,\n                    content, header, buffer, sub, len;\n\n            if (source.object) {\n                // Ready from source\n                tagNumber = source.tagNumber;\n                tagClass = source.tagClass;\n                tagConstructed = source.tagConstructed;\n                content = source.content;\n                header = source.header;\n                buffer = source.object instanceof CryptoOperationData ?\n                        new Uint8Array(source.object) : null;\n                sub = source.object instanceof Array ? source.object : null;\n                len = buffer && buffer.length || null;\n            } else {\n                // Decode header\n                var d = source;\n\n                // Read tag\n                var buf = d[pos++];\n                tagNumber = buf & 0x1f;\n                tagClass = buf >> 6;\n                tagConstructed = (buf & 0x20) !== 0;\n                if (tagNumber === 0x1f) { // long tag\n                    tagNumber = 0;\n                    do {\n                        if (tagNumber > 0x1fffffffffff80)\n                            throw new DataError('Convertor not supported tag number more then (2^53 - 1) at position ' + offset);\n                        buf = d[pos++];\n                        tagNumber = (tagNumber << 7) + (buf & 0x7f);\n                    } while (buf & 0x80);\n                }\n\n                // Read len        \n                buf = d[pos++];\n                len = buf & 0x7f;\n                if (len !== buf) {\n                    if (len > 6) // no reason to use Int10, as it would be a huge buffer anyways\n                        throw new DataError('Length over 48 bits not supported at position ' + offset);\n                    if (len === 0)\n                        len = null; // undefined\n                    else {\n                        buf = 0;\n                        for (var i = 0; i < len; ++i)\n                            buf = (buf << 8) + d[pos++];\n                        len = buf;\n                    }\n                }\n\n                start = pos;\n                sub = null;\n\n                if (tagConstructed) {\n                    // must have valid content\n                    sub = [];\n                    if (len !== null) {\n                        // definite length\n                        var end = start + len;\n                        while (pos < end) {\n                            var s = decodeBER(d, pos);\n                            sub.push(s);\n                            pos += s.header.length + s.content.length;\n                        }\n                        if (pos !== end)\n                            throw new DataError('Content size is not correct for container starting at offset ' + start);\n                    } else {\n                        // undefined length\n                        try {\n                            for (; ; ) {\n                                var s = decodeBER(d, pos);\n                                pos += s.header.length + s.content.length;\n                                if (s.tagClass === 0x00 && s.tagNumber === 0x00)\n                                    break;\n                                sub.push(s);\n                            }\n                            len = pos - start;\n                        } catch (e) {\n                            throw new DataError('Exception ' + e + ' while decoding undefined length content at offset ' + start);\n                        }\n                    }\n                }\n\n                // Header and content\n                header = new Uint8Array(d.buffer, offset, start - offset);\n                content = new Uint8Array(d.buffer, start, len);\n                buffer = content;\n            }\n\n            // Constructed types - check for string concationation\n            if (sub !== null && tagClass === 0) {\n                var k;\n                switch (tagNumber) {\n                    case 0x03: // BIT_STRING\n                        k = 1; // ingnore unused bit for bit string\n                    case 0x04: // OCTET_STRING\n                    case 0x0C: // UTF8String\n                    case 0x12: // NumericString\n                    case 0x13: // PrintableString\n                    case 0x14: // TeletexString\n                    case 0x15: // VideotexString\n                    case 0x16: // IA5String\n                    case 0x19: // GraphicString\n                    case 0x1A: // VisibleString\n                    case 0x1B: // GeneralString\n                    case 0x1C: // UniversalString\n                    case 0x1E: // BMPString\n                        k = k || 0;\n                        // Concatination\n                        if (sub.length === 0)\n                            throw new DataError('No constructed encoding content of string type at offset ' + start);\n                        len = k;\n                        for (var i = 0, n = sub.length; i < n; i++) {\n                            var s = sub[i];\n                            if (s.tagClass !== tagClass || s.tagNumber !== tagNumber || s.tagConstructed)\n                                throw new DataError('Invalid constructed encoding of string type at offset ' + start);\n                            len += s.content.length - k;\n                        }\n                        buffer = new Uint8Array(len);\n                        for (var i = 0, n = sub.length, j = k; i < n; i++) {\n                            var s = sub[i];\n                            if (k > 0)\n                                buffer.set(s.content.subarray(1), j);\n                            else\n                                buffer.set(s.content, j);\n                            j += s.content.length - k;\n                        }\n                        tagConstructed = false; // follow not required\n                        sub = null;\n                        break;\n                }\n            }\n            // Primitive types\n            var object = '';\n            if (sub === null) {\n                if (len === null)\n                    throw new DataError('Invalid tag with undefined length at offset ' + start);\n\n                if (tagClass === 0) {\n                    switch (tagNumber) {\n                        case 0x01: // BOOLEAN\n                            object = buffer[0] !== 0;\n                            break;\n                        case 0x02: // INTEGER\n                        case 0x0a: // ENUMIRATED\n                            if (len > 6) {\n                                object = Int16.encode(buffer);\n                            } else {\n                                var v = buffer[0];\n                                if (buffer[0] > 0x7f)\n                                    v = v - 256;\n                                for (var i = 1; i < len; i++)\n                                    v = v * 256 + buffer[i];\n                                object = v;\n                            }\n                            break;\n                        case 0x03: // BIT_STRING\n                            if (len > 5) { // Content buffer\n                                object = new Uint8Array(buffer.subarray(1)).buffer;\n                            } else { // Max bit mask only for 32 bit\n                                var unusedBit = buffer[0],\n                                        skip = unusedBit, s = [];\n                                for (var i = len - 1; i >= 1; --i) {\n                                    var b = buffer[i];\n                                    for (var j = skip; j < 8; ++j)\n                                        s.push((b >> j) & 1 ? '1' : '0');\n                                    skip = 0;\n                                }\n                                object = s.reverse().join('');\n                            }\n                            break;\n                        case 0x04: // OCTET_STRING\n                            object = new Uint8Array(buffer).buffer;\n                            break;\n                            //  case 0x05: // NULL\n                        case 0x06: // OBJECT_IDENTIFIER\n                            var s = '',\n                                    n = 0,\n                                    bits = 0;\n                            for (var i = 0; i < len; ++i) {\n                                var v = buffer[i];\n                                n = (n << 7) + (v & 0x7F);\n                                bits += 7;\n                                if (!(v & 0x80)) { // finished\n                                    if (s === '') {\n                                        var m = n < 80 ? n < 40 ? 0 : 1 : 2;\n                                        s = m + \".\" + (n - m * 40);\n                                    } else\n                                        s += \".\" + n.toString();\n                                    n = 0;\n                                    bits = 0;\n                                }\n                            }\n                            if (bits > 0)\n                                throw new DataError('Incompleted OID at offset ' + start);\n                            object = s;\n                            break;\n                            //case 0x07: // ObjectDescriptor\n                            //case 0x08: // EXTERNAL\n                            //case 0x09: // REAL\n                            //case 0x0A: // ENUMERATED\n                            //case 0x0B: // EMBEDDED_PDV\n                        case 0x10: // SEQUENCE\n                        case 0x11: // SET\n                            object = [];\n                            break;\n                        case 0x0C: // UTF8String\n                            object = Chars.encode(buffer, 'utf8');\n                            break;\n                        case 0x12: // NumericString\n                        case 0x13: // PrintableString\n                        case 0x14: // TeletexString\n                        case 0x15: // VideotexString\n                        case 0x16: // IA5String\n                        case 0x19: // GraphicString\n                        case 0x1A: // VisibleString\n                        case 0x1B: // GeneralString\n                            object = Chars.encode(buffer, 'ascii');\n                            break;\n                        case 0x1C: // UniversalString\n                            object = Chars.encode(buffer, 'utf32');\n                            break;\n                        case 0x1E: // BMPString\n                            object = Chars.encode(buffer, 'utf16');\n                            break;\n                        case 0x17: // UTCTime\n                        case 0x18: // GeneralizedTime\n                            var shortYear = tagNumber === 0x17;\n                            var s = Chars.encode(buffer, 'ascii'),\n                                    m = (shortYear ?\n                                            /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/ :\n                                            /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/).exec(s);\n                            if (!m)\n                                throw new DataError('Unrecognized time format \"' + s + '\" at offset ' + start);\n                            if (shortYear) {\n                                // Where YY is greater than or equal to 50, the year SHALL be interpreted as 19YY; and\n                                // Where YY is less than 50, the year SHALL be interpreted as 20YY                                \n                                m[1] = +m[1];\n                                m[1] += (m[1] < 50) ? 2000 : 1900;\n                            }\n                            var dt = new Date(m[1], +m[2] - 1, +m[3], +(m[4] || '0'), +(m[5] || '0'), +(m[6] || '0'), +(m[7] || '0')),\n                                    tz = dt.getTimezoneOffset();\n                            if (m[8] || tagNumber === 0x17) {\n                                if (m[8].toUpperCase() !== 'Z' && m[9]) {\n                                    tz = tz + parseInt(m[9]);\n                                }\n                                dt.setMinutes(dt.getMinutes() - tz);\n                            }\n                            dt.original = s;\n                            object = dt;\n                            break;\n                    }\n                } else // OCTET_STRING\n                    object = new Uint8Array(buffer).buffer;\n            } else\n                object = sub;\n\n            // result\n            return {\n                tagConstructed: tagConstructed,\n                tagClass: tagClass,\n                tagNumber: tagNumber,\n                header: header,\n                content: content,\n                object: object\n            };\n        }\n\n        return {\n            /**\n             * BER.decode(object, format) convert javascript object to ASN.1 format CryptoOperationData<br><br>\n             * If object has members tagNumber, tagClass and tagConstructed\n             * it is clear define encoding rules. Else method use defaul rules:\n             * <ul>\n             *   <li>Empty string or null - NULL</li>\n             *   <li>String starts with '0x' and has 0-9 and a-f characters - INTEGER</li>\n             *   <li>String like d.d.d.d (d - set of digits) - OBJECT IDENTIFIER</li>\n             *   <li>String with characters 0 and 1 - BIT STRING</li>\n             *   <li>Strings 'true' or 'false' - BOOLEAN</li>\n             *   <li>String has only 0-9 and a-f characters - OCTET STRING</li>\n             *   <li>String has only characters with code 0-255 - PrintableString</li>\n             *   <li>Other strings - UTF8String</li>\n             *   <li>Number - INTEGER</li>\n             *   <li>Date - GeneralizedTime</li>\n             *   <li>Boolean - SEQUENCE</li>\n             *   <li>CryptoOperationData - OCTET STRING</li>\n             * </ul>\n             * SEQUENCE or SET arrays recursively encoded for each item.<br>\n             * OCTET STRING and BIT STRING can presents as array with one item. \n             * It means encapsulates encoding for child element.<br>\n             * \n             * If CONTEXT or APPLICATION classes item presents as array with one \n             * item we use EXPLICIT encoding for element, else IMPLICIT encoding.<br>\n             * \n             * @memberOf GostCoding.BER\n             * @param {Object} object Object to encoding\n             * @param {string} format Encoding rule: 'DER' or 'CER', default 'DER'\n             * @param {boolean} onlyContent Encode content only, without header\n             * @returns {CryptoOperationData} BER encoded data\n             */\n            encode: function (object, format, onlyContent) {\n                return encodeBER(object, format, onlyContent).buffer;\n            },\n            /**\n             * BER.encode(data) convert ASN.1 format CryptoOperationData data to javascript object<br><br>\n             * \n             * Conversion rules to javascript object:\n             *  <ul>\n             *      <li>BOOLEAN - Boolean object</li>\n             *      <li>INTEGER, ENUMIRATED - Integer object if len <= 6 (48 bits) else Int16 encoded string</li>\n             *      <li>BIT STRING - Integer object if len <= 5 (w/o unsedBit octet - 32 bits) else String like '10111100' or  Array with one item in case of incapsulates encoding</li>\n             *      <li>OCTET STRING - Hex encoded string or Array with one item in case of incapsulates encoding</li>\n             *      <li>OBJECT IDENTIFIER - String with object identifier</li>\n             *      <li>SEQUENCE, SET - Array of encoded items</li>\n             *      <li>UTF8String, NumericString, PrintableString, TeletexString, VideotexString, \n             *          IA5String, GraphicString, VisibleString, GeneralString, UniversalString,\n             *          BMPString - encoded String</li>\n             *      <li>UTCTime, GeneralizedTime - Date</li>\n             *  </ul>\n             * @memberOf GostCoding.BER\n             * @param {(CryptoOperationData|GostCoding.BER)} data Binary data to decode\n             * @returns {Object} Javascript object with result of decoding\n             */\n            decode: function (data) {\n                return decodeBER(data.object ? data : new Uint8Array(buffer(data)), 0);\n            }\n        };\n    })();\n\n    /**\n     * BER, DER, CER conversion\n     * @memberOf GostCoding\n     * @insnance\n     * @type GostCoding.BER\n     */\n    GostCoding.prototype.BER = BER;\n\n    /**\n     * PEM conversion\n     * @class GostCoding.PEM\n     */\n    var PEM = {\n        /**\n         * PEM.encode(data, name) encode CryptoOperationData to PEM format with name label\n         * \n         * @memberOf GostCoding.PEM\n         * @param {(Object|CryptoOperationData)} data Java script object or BER-encoded binary data\n         * @param {string} name Name of PEM object: 'certificate', 'private key' etc.\n         * @returns {string} Encoded object\n         */\n        encode: function (data, name) {\n            return (name ? '-----BEGIN ' + name.toUpperCase() + '-----\\r\\n' : '') +\n                    Base64.encode(data instanceof CryptoOperationData ? data : BER.encode(data)) +\n                    (name ? '\\r\\n-----END ' + name.toUpperCase() + '-----' : '');\n        },\n        /**\n         * PEM.decode(s, name, deep) decode PEM format s labeled name to CryptoOperationData or javascript object in according to deep parameter\n         * \n         * @memberOf GostCoding.PEM\n         * @param {string} s PEM encoded string\n         * @param {string} name Name of PEM object: 'certificate', 'private key' etc.\n         * @param {boolean} deep If true method do BER-decoding, else only BASE64 decoding\n         * @param {integer} index Index of decoded value\n         * @returns {(Object|CryptoOperationData)} Decoded javascript object if deep=true, else CryptoOperationData for father BER decoding\n         */\n        decode: function (s, name, deep, index) {\n            // Try clear base64\n            var re1 = /([A-Za-z0-9\\+\\/\\s\\=]+)/g,\n                    valid = re1.exec(s);\n            if (valid[1].length !== s.length)\n                valid = false;\n            if (!valid && name) {\n                // Try with the name\n                var re2 = new RegExp(\n                        '-----\\\\s?BEGIN ' + name.toUpperCase() +\n                        '-----([A-Za-z0-9\\\\+\\\\/\\\\s\\\\=]+)-----\\\\s?END ' +\n                        name.toUpperCase() + '-----', 'g');\n                valid = re2.exec(s);\n            }\n            if (!valid) {\n                // Try with some name\n                var re3 = new RegExp(\n                        '-----\\\\s?BEGIN [A-Z0-9\\\\s]+' +\n                        '-----([A-Za-z0-9\\\\+\\\\/\\\\s\\\\=]+)-----\\\\s?END ' +\n                        '[A-Z0-9\\\\s]+-----', 'g');\n                valid = re3.exec(s);\n            }\n            var r = valid && valid[1 + (index || 0)];\n            if (!r)\n                throw new DataError('Not valid PEM format');\n            var out = Base64.decode(r);\n            if (deep)\n                out = BER.decode(out);\n            return out;\n        }\n    };\n\n    /**\n     * PEM conversion\n     * @memberOf GostCoding\n     * @insnance\n     * @type GostCoding.PEM\n     */\n    GostCoding.prototype.PEM = PEM;\n\n    if (gostCrypto)\n        /**\n         * Coding algorithms: Base64, Hex, Int16, Chars, BER and PEM\n         * \n         * @memberOf gostCrypto\n         * @type GostCoding\n         */\n        gostCrypto.coding = new GostCoding();\n\nmodule.exports = GostCoding;\n","/**\n * @file Implementation Web Crypto interfaces for GOST algorithms\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/* \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nconst GostRandom = require('./gostRandom');\nconst gostEngine = require('./gostEngine');\n\n    /*\n     * Algorithm normalization\n     * \n     */\n\n    var root = global;\n    var rootCrypto = root.crypto || root.msCrypto;\n\n    var SyntaxError = root.SyntaxError || root.Error,\n            DataError = root.DataError || root.Error,\n            NotSupportedError = root.NotSupportedError || root.Error,\n            OperationError = root.OperationError || root.Error,\n            InvalidStateError = root.InvalidAccessError || root.Error,\n            InvalidAccessError = root.InvalidAccessError || root.Error;\n\n    // Normalize algorithm\n    function normalize(algorithm, method) {\n        if (typeof algorithm === 'string' || algorithm instanceof String)\n            algorithm = {name: algorithm};\n        var name = algorithm.name;\n        if (!name)\n            throw new SyntaxError('Algorithm name not defined');\n        // Extract algorithm modes from name\n        var modes = name.split('/'), modes = modes[0].split('-').concat(modes.slice(1));\n        // Normalize the name with default modes\n        var na = {};\n        name = modes[0].replace(/[\\.\\s]/g, '');\n        modes = modes.slice(1);\n        if (name.indexOf('28147') >= 0) {\n            na = {\n                name: 'GOST 28147',\n                version: 1989,\n                mode: (algorithm.mode || (// ES, MAC, KW\n                        (method === 'sign' || method === 'verify') ? 'MAC' :\n                        (method === 'wrapKey' || method === 'unwrapKey') ? 'KW' : 'ES')).toUpperCase(),\n                length: algorithm.length || 64\n            };\n        } else if (name.indexOf('3412') >= 0) {\n            na = {\n                name: 'GOST R 34.12',\n                version: 2015,\n                mode: (algorithm.mode || (// ES, MAC, KW\n                        (method === 'sign' || method === 'verify') ? 'MAC' :\n                        (method === 'wrapKey' || method === 'unwrapKey') ? 'KW' : 'ES')).toUpperCase(),\n                length: algorithm.length || 64 // 128\n            };\n        } else if (name.indexOf('3411') >= 0) {\n            na = {\n                name: 'GOST R 34.11',\n                version: 2012, // 1994\n                mode: (algorithm.mode || (// HASH, KDF, HMAC, PBKDF2, PFXKDF, CPKDF\n                        (method === 'deriveKey' || method === 'deriveBits') ? 'KDF' :\n                        (method === 'sign' || method === 'verify') ? 'HMAC' : 'HASH')).toUpperCase(),\n                length: algorithm.length || 256 // 512\n            };\n        } else if (name.indexOf('3410') >= 0) {\n            na = {\n                name: 'GOST R 34.10',\n                version: 2012, // 1994, 2001\n                mode: (algorithm.mode || (// SIGN, DH, MASK\n                        (method === 'deriveKey' || method === 'deriveBits') ? 'DH' : 'SIGN')).toUpperCase(),\n                length: algorithm.length || 256 // 512\n            };\n        } else if (name.indexOf('SHA') >= 0) {\n            na = {\n                name: 'SHA',\n                version: (algorithm.length || 160) === 160 ? 1 : 2, // 1, 2\n                mode: (algorithm.mode || (// HASH, KDF, HMAC, PBKDF2, PFXKDF\n                        (method === 'deriveKey' || method === 'deriveBits') ? 'KDF' :\n                        (method === 'sign' || method === 'verify') ? 'HMAC' : 'HASH')).toUpperCase(),\n                length: algorithm.length || 160\n            };\n        } else if (name.indexOf('RC2') >= 0) {\n            na = {\n                name: 'RC2',\n                version: 1,\n                mode: (algorithm.mode || (// ES, MAC, KW\n                        (method === 'sign' || method === 'verify') ? 'MAC' :\n                        (method === 'wrapKey' || method === 'unwrapKey') ? 'KW' : 'ES')).toUpperCase(),\n                length: algorithm.length || 32 // 1 - 1024\n            };\n        } else if (name.indexOf('PBKDF2') >= 0) {\n            na = normalize(algorithm.hash, 'digest');\n            na.mode = 'PBKDF2';\n        } else if (name.indexOf('PFXKDF') >= 0) {\n            na = normalize(algorithm.hash, 'digest');\n            na.mode = 'PFXKDF';\n        } else if (name.indexOf('CPKDF') >= 0) {\n            na = normalize(algorithm.hash, 'digest');\n            na.mode = 'CPKDF';\n        } else if (name.indexOf('HMAC') >= 0) {\n            na = normalize(algorithm.hash, 'digest');\n            na.mode = 'HMAC';\n        } else\n            throw new NotSupportedError('Algorithm not supported');\n\n        // Compile modes\n        modes.forEach(function (mode) {\n            mode = mode.toUpperCase();\n            if (/^[0-9]+$/.test(mode)) {\n                if ((['8', '16', '32'].indexOf(mode) >= 0) || (na.length === '128' && mode === '64')) { // Shift bits\n                    if (na.mode === 'ES')\n                        na.shiftBits = parseInt(mode);\n                    else if (na.mode === 'MAC')\n                        na.macLength = parseInt(mode);\n                    else\n                        throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\n                } else if (['89', '94', '01', '12', '15', '1989', '1994', '2001', '2012', '2015'].indexOf(mode) >= 0) { // GOST Year\n                    var version = parseInt(mode);\n                    version = version < 1900 ? (version < 80 ? 2000 + version : 1900 + version) : version;\n                    na.version = version;\n                } else if (['1'].indexOf(mode) >= 0 && na.name === 'SHA') { // SHA-1\n                    na.version = 1;\n                    na.length = 160;\n                } else if (['256', '384', '512'].indexOf(mode) >= 0 && na.name === 'SHA') { // SHA-2\n                    na.version = 2;\n                    na.length = parseInt(mode);\n                } else if (['40', '128'].indexOf(mode) >= 0 && na.name === 'RC2') { // RC2\n                    na.version = 1;\n                    na.length = parseInt(mode); // key size\n                } else if (['64', '128', '256', '512'].indexOf(mode) >= 0) // block size\n                    na.length = parseInt(mode);\n                else if (['1000', '2000'].indexOf(mode) >= 0) // Iterations\n                    na.iterations = parseInt(mode);\n                // Named Paramsets\n            } else if (['E-TEST', 'E-A', 'E-B', 'E-C', 'E-D', 'E-SC', 'E-Z', 'D-TEST', 'D-A', 'D-SC'].indexOf(mode) >= 0) {\n                na.sBox = mode;\n            } else if (['S-TEST', 'S-A', 'S-B', 'S-C', 'S-D', 'X-A', 'X-B', 'X-C'].indexOf(mode) >= 0) {\n                na.namedParam = mode;\n            } else if (['S-256-TEST', 'S-256-A', 'S-256-B', 'S-256-C', 'P-256', 'T-512-TEST', 'T-512-A',\n                'T-512-B', 'X-256-A', 'X-256-B', 'T-256-TEST', 'T-256-A', 'T-256-B', 'S-256-B', 'T-256-C', 'S-256-C'].indexOf(mode) >= 0) {\n                na.namedCurve = mode;\n            } else if (['SC', 'CP', 'VN'].indexOf(mode) >= 0) {\n                na.procreator = mode;\n\n                // Encription GOST 28147 or GOST R 34.12\n            } else if (na.name === 'GOST 28147' || na.name === 'GOST R 34.12' || na.name === 'RC2') {\n                if (['ES', 'MAC', 'KW', 'MASK'].indexOf(mode) >= 0) {\n                    na.mode = mode;\n                } else if (['ECB', 'CFB', 'OFB', 'CTR', 'CBC'].indexOf(mode) >= 0) {\n                    na.mode = 'ES';\n                    na.block = mode;\n                } else if (['CPKW', 'NOKW', 'SCKW'].indexOf(mode) >= 0) {\n                    na.mode = 'KW';\n                    na.keyWrapping = mode.replace('KW', '');\n                } else if (['ZEROPADDING', 'PKCS5PADDING', 'NOPADDING', 'RANDOMPADDING', 'BITPADDING'].indexOf(mode) >= 0) {\n                    na.padding = mode.replace('PADDING', '');\n                } else if (['NOKM', 'CPKM'].indexOf(mode) >= 0) {\n                    na.keyMeshing = mode.replace('KM', '');\n                } else\n                    throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\n\n                // Digesting GOST 34.11\n            } else if (na.name === 'GOST R 34.11' || na.name === 'SHA') {\n                if (['HASH', 'KDF', 'HMAC', 'PBKDF2', 'PFXKDF', 'CPKDF'].indexOf(mode) >= 0)\n                    na.mode = mode;\n                else\n                    throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\n\n                // Signing GOST 34.10\n            } else if (na.name === 'GOST R 34.10') {\n                var hash = mode.replace(/[\\.\\s]/g, '');\n                if (hash.indexOf('GOST') >= 0 && hash.indexOf('3411') >= 0)\n                    na.hash = mode;\n                else if (['SIGN', 'DH', 'MASK'].indexOf(mode))\n                    na.mode = mode;\n                else\n                    throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\n            }\n        });\n\n        // Procreator\n        na.procreator = algorithm.procreator || na.procreator || 'CP';\n\n        // Key size\n        switch (na.name) {\n            case 'GOST R 34.10':\n                na.keySize = na.length / (na.version === 1994 ? 4 : 8);\n                break;\n            case 'GOST R 34.11':\n                na.keySize = 32;\n                break;\n            case 'GOST 28147':\n            case 'GOST R 34.12':\n                na.keySize = 32;\n                break;\n            case 'RC2':\n                na.keySize = Math.ceil(na.length / 8);\n                break;\n            case 'SHA':\n                na.keySize = na.length / 8;\n                break;\n        }\n\n        // Encrypt additional modes \n        if (na.mode === 'ES') {\n            if (algorithm.block)\n                na.block = algorithm.block; // ECB, CFB, OFB, CTR, CBC\n            if (na.block)\n                na.block = na.block.toUpperCase();\n            if (algorithm.padding)\n                na.padding = algorithm.padding; // NO, ZERO, PKCS5, RANDOM, BIT\n            if (na.padding)\n                na.padding = na.padding.toUpperCase();\n            if (algorithm.shiftBits)\n                na.shiftBits = algorithm.shiftBits; // 8, 16, 32, 64\n            if (algorithm.keyMeshing)\n                na.keyMeshing = algorithm.keyMeshing; // NO, CP\n            if (na.keyMeshing)\n                na.keyMeshing = na.keyMeshing.toUpperCase();\n            // Default values\n            if (method !== 'importKey' && method !== 'generateKey') {\n                na.block = na.block || 'ECB';\n                na.padding = na.padding || (na.block === 'CBC' || na.block === 'ECB' ? 'ZERO' : 'NO');\n                if (na.block === 'CFB' || na.block === 'OFB')\n                    na.shiftBits = na.shiftBits || na.length;\n                na.keyMeshing = na.keyMeshing || 'NO';\n            }\n        }\n        if (na.mode === 'KW') {\n            if (algorithm.keyWrapping)\n                na.keyWrapping = algorithm.keyWrapping; // NO, CP, SC\n            if (na.keyWrapping)\n                na.keyWrapping = na.keyWrapping.toUpperCase();\n            if (method !== 'importKey' && method !== 'generateKey')\n                na.keyWrapping = na.keyWrapping || 'NO';\n        }\n\n        // Paramsets\n        ['sBox', 'namedParam', 'namedCurve', 'curve', 'param', 'modulusLength'].forEach(function (name) {\n            algorithm[name] && (na[name] = algorithm[name]);\n        });\n        // Default values\n        if (method !== 'importKey' && method !== 'generateKey') {\n            if (na.name === 'GOST 28147') {\n                na.sBox = na.sBox || (na.procreator === 'SC' ? 'E-SC' : 'E-A'); // 'E-A', 'E-B', 'E-C', 'E-D', 'E-SC'\n            } else if (na.name === 'GOST R 34.12' && na.length === 64) {\n                na.sBox = 'E-Z';\n            } else if (na.name === 'GOST R 34.11' && na.version === 1994) {\n                na.sBox = na.sBox || (na.procreator === 'SC' ? 'D-SC' : 'D-A'); // 'D-SC'\n            } else if (na.name === 'GOST R 34.10' && na.version === 1994) {\n                na.namedParam = na.namedParam || (na.mode === 'DH' ? 'X-A' : 'S-A'); // 'S-B', 'S-C', 'S-D', 'X-B', 'X-C'\n            } else if (na.name === 'GOST R 34.10' && na.version === 2001) {\n                na.namedCurve = na.namedCurve || (na.length === 256 ?\n                        na.procreator === 'SC' ? 'P-256' : (na.mode === 'DH' ? 'X-256-A' : 'S-256-A') : // 'S-256-B', 'S-256-C', 'X-256-B', 'T-256-A', 'T-256-B', 'T-256-C', 'P-256'\n                        na.mode === 'T-512-A'); // 'T-512-B', 'T-512-C'\n            } else if (na.name === 'GOST R 34.10' && na.version === 2012) {\n                na.namedCurve = na.namedCurve || (na.length === 256 ?\n                        na.procreator === 'SC' ? 'P-256' : (na.mode === 'DH' ? 'X-256-A' : 'S-256-A') : // 'S-256-B', 'S-256-C', 'X-256-B', 'T-256-A', 'T-256-B', 'T-256-C', 'P-256'\n                        na.mode === 'T-512-A'); // 'T-512-B', 'T-512-C'\n            }\n        }\n\n        // Vectors\n        switch (na.mode) {\n            case 'DH':\n                algorithm.ukm && (na.ukm = algorithm.ukm);\n                algorithm['public'] && (na['public'] = algorithm['public']);\n                break;\n            case 'SIGN':\n            case 'KW':\n                algorithm.ukm && (na.ukm = algorithm.ukm);\n                break;\n            case 'ES':\n            case 'MAC':\n                algorithm.iv && (na.iv = algorithm.iv);\n                break;\n            case 'KDF':\n                algorithm.label && (na.label = algorithm.label);\n                algorithm.contex && (na.context = algorithm.contex);\n                break;\n            case 'PBKDF2':\n                algorithm.salt && (na.salt = algorithm.salt);\n                algorithm.iterations && (na.iterations = algorithm.iterations);\n                algorithm.diversifier && (na.diversifier = algorithm.diversifier);\n                break;\n            case 'PFXKDF':\n                algorithm.salt && (na.salt = algorithm.salt);\n                algorithm.iterations && (na.iterations = algorithm.iterations);\n                algorithm.diversifier && (na.diversifier = algorithm.diversifier);\n                break;\n            case 'CPKDF':\n                algorithm.salt && (na.salt = algorithm.salt);\n                algorithm.iterations && (na.iterations = algorithm.iterations);\n                break;\n        }\n\n        // Verification method and modes\n        if (method && (\n                ((na.mode !== 'ES' && na.mode !== 'SIGN' && na.mode !== 'MAC' &&\n                        na.mode !== 'HMAC' && na.mode !== 'KW' && na.mode !== 'DH'\n                        && na.mode !== 'MASK') &&\n                        (method === 'generateKey')) ||\n                ((na.mode !== 'ES') &&\n                        (method === 'encrypt' || method === 'decrypt')) ||\n                ((na.mode !== 'SIGN' && na.mode !== 'MAC' && na.mode !== 'HMAC') &&\n                        (method === 'sign' || method === 'verify')) ||\n                ((na.mode !== 'HASH') &&\n                        (method === 'digest')) ||\n                ((na.mode !== 'KW' && na.mode !== 'MASK') &&\n                        (method === 'wrapKey' || method === 'unwrapKey')) ||\n                ((na.mode !== 'DH' && na.mode !== 'PBKDF2' && na.mode !== 'PFXKDF' &&\n                        na.mode !== 'CPKDF' && na.mode !== 'KDF') &&\n                        (method === 'deriveKey' || method === 'deriveBits'))))\n            throw new NotSupportedError('Algorithm mode ' + na.mode + ' not valid for method ' + method);\n\n        // Normalize hash algorithm\n        algorithm.hash && (na.hash = algorithm.hash);\n        if (na.hash) {\n            if ((typeof na.hash === 'string' || na.hash instanceof String)\n                    && na.procreator)\n                na.hash = na.hash + '/' + na.procreator;\n            na.hash = normalize(na.hash, 'digest');\n        }\n\n        // Algorithm object identirifer\n        algorithm.id && (na.id = algorithm.id);\n\n        return na;\n    }\n\n    // Check for possibility use native crypto.subtle\n    function checkNative(algorithm) {\n        if (!rootCrypto || !rootCrypto.subtle || !algorithm)\n            return false;\n        // Prepare name\n        var name = (typeof algorithm === 'string' || algorithm instanceof String) ?\n                name = algorithm : algorithm.name;\n        if (!name)\n            return false;\n        name = name.toUpperCase();\n        // Digest algorithm for key derivation\n        if ((name.indexOf('KDF') >= 0 || name.indexOf('HMAC') >= 0) && algorithm.hash)\n            return checkNative(algorithm.hash);\n        // True if no supported names\n        return name.indexOf('GOST') === -1 &&\n                name.indexOf('SHA-1') === -1 &&\n                name.indexOf('RC2') === -1 &&\n                name.indexOf('?DES') === -1;\n    }\n\n\n    /*\n     * Key conversion methods\n     * \n     */\n\n    // Check key parameter\n    function checkKey(key, method) {\n        if (!key.algorithm)\n            throw new SyntaxError('Key algorithm not defined');\n\n        if (!key.algorithm.name)\n            throw new SyntaxError('Key algorithm name not defined');\n\n        var name = key.algorithm.name,\n                gostCipher = name === 'GOST 28147' || name === 'GOST R 34.12' || name === 'RC2',\n                gostDigest = name === 'GOST R 34.11' || name === 'SHA',\n                gostSign = name === 'GOST R 34.10';\n\n        if (!gostCipher && !gostSign && !gostDigest)\n            throw new NotSupportedError('Key algorithm ' + name + ' is unsupproted');\n\n        if (!key.type)\n            throw new SyntaxError('Key type not defined');\n\n        if (((gostCipher || gostDigest) && key.type !== 'secret') ||\n                (gostSign && !(key.type === 'public' || key.type === 'private')))\n            throw new DataError('Key type ' + key.type + ' is not valid for algorithm ' + name);\n\n        if (!key.usages || !key.usages.indexOf)\n            throw new SyntaxError('Key usages not defined');\n\n        for (var i = 0, n = key.usages.length; i < n; i++) {\n            var md = key.usages[i];\n            if (((md === 'encrypt' || md === 'decrypt') && key.type !== 'secret') ||\n                    (md === 'sign' && key.type === 'public') ||\n                    (md === 'verify' && key.type === 'private'))\n                throw new InvalidStateError('Key type ' + key.type + ' is not valid for ' + md);\n        }\n\n        if (method)\n            if (key.usages.indexOf(method) === -1)\n                throw new InvalidAccessError('Key usages is not contain method ' + method);\n\n        if (!key.buffer)\n            throw new SyntaxError('Key buffer is not defined');\n\n        var size = key.buffer.byteLength * 8, keySize = 8 * key.algorithm.keySize;\n        if ((key.type === 'secret' && size !== (keySize || 256) &&\n                (key.usages.indexOf('encrypt') >= 0 || key.usages.indexOf('decrypt') >= 0)) ||\n                (key.type === 'private' && !(size === 256 || size === 512)) ||\n                (key.type === 'public' && !(size === 512 || size === 1024)))\n            throw new SyntaxError('Key buffer has wrong size ' + size + ' bit');\n    }\n\n    // Extract key and enrich cipher algorithm\n    function extractKey(method, algorithm, key) {\n        checkKey(key, method);\n        if (algorithm) {\n            var params;\n            switch (algorithm.mode) {\n                case 'ES':\n                    params = ['sBox', 'keyMeshing', 'padding', 'block'];\n                    break;\n                case 'SIGN':\n                    params = ['namedCurve', 'namedParam', 'sBox', 'curve', 'param', 'modulusLength'];\n                    break;\n                case 'MAC':\n                    params = ['sBox'];\n                    break;\n                case 'KW':\n                    params = ['keyWrapping', 'ukm'];\n                    break;\n                case 'DH':\n                    params = ['namedCurve', 'namedParam', 'sBox', 'ukm', 'curve', 'param', 'modulusLength'];\n                    break;\n                case 'KDF':\n                    params = ['context', 'label'];\n                    break;\n                case 'PBKDF2':\n                    params = ['sBox', 'iterations', 'salt'];\n                    break;\n                case 'PFXKDF':\n                    params = ['sBox', 'iterations', 'salt', 'diversifier'];\n                    break;\n                case 'CPKDF':\n                    params = ['sBox', 'salt'];\n                    break;\n            }\n            if (params)\n                params.forEach(function (name) {\n                    key.algorithm[name] && (algorithm[name] = key.algorithm[name]);\n                });\n        }\n        return key.buffer;\n    }\n\n    // Make key definition\n    function convertKey(algorithm, extractable, keyUsages, keyData, keyType) {\n        var key = {\n            type: keyType || (algorithm.name === 'GOST R 34.10' ? 'private' : 'secret'),\n            extractable: extractable || 'false',\n            algorithm: algorithm,\n            usages: keyUsages || [],\n            buffer: keyData\n        };\n        checkKey(key);\n        return key;\n    }\n\n    function convertKeyPair(publicAlgorithm, privateAlgorithm, extractable, keyUsages, publicBuffer, privateBuffer) {\n\n        if (!keyUsages || !keyUsages.indexOf)\n            throw new SyntaxError('Key usages not defined');\n\n        var publicUsages = keyUsages.filter(function (value) {\n            return value !== 'sign';\n        });\n        var privateUsages = keyUsages.filter(function (value) {\n            return value !== 'verify';\n        });\n\n        return {\n            publicKey: convertKey(publicAlgorithm, extractable, publicUsages, publicBuffer, 'public'),\n            privateKey: convertKey(privateAlgorithm, extractable, privateUsages, privateBuffer, 'private')\n        };\n    }\n\n    // Swap bytes in buffer\n    function swapBytes(src) {\n        if (src instanceof CryptoOperationData)\n            src = new Uint8Array(src);\n        var dst = new Uint8Array(src.length);\n        for (var i = 0, n = src.length; i < n; i++)\n            dst[n - i - 1] = src[i];\n        return dst.buffer;\n    }\n\n\n    /**\n     * Promise stub object (not fulfill specification, only for internal use)\n     * Class not defined if Promise class already defined in root context<br><br>\n     * \n     * The Promise object is used for deferred and asynchronous computations. A Promise is in one of the three states:\n     *  <ul>\n     *      <li>pending: initial state, not fulfilled or rejected.</li>\n     *      <li>fulfilled: successful operation</li>\n     *      <li>rejected: failed operation.</li>\n     *  </ul>\n     * Another term describing the state is settled: the Promise is either fulfilled or rejected, but not pending.<br><br>\n     * @class Promise\n     * @global\n     * @param {function} executor Function object with two arguments resolve and reject. \n     * The first argument fulfills the promise, the second argument rejects it. \n     * We can call these functions, once our operation is completed.\n     */\n    if (!root.Promise) {\n\n        root.Promise = (function () {\n\n            function mswrap(value) {\n                if (value && value.oncomplete === null && value.onerror === null) {\n                    return new Promise(function (resolve, reject) {\n                        value.oncomplete = function () {\n                            resolve(value.result);\n                        };\n                        value.onerror = function () {\n                            reject(new OperationError(value.toString()));\n                        };\n                    });\n                } else\n                    return value;\n            }\n\n            function Promise(executor) {\n\n                var state = 'pending', result,\n                        resolveQueue = [], rejectQueue = [];\n\n                function call(callback) {\n                    try {\n                        callback();\n                    } catch (e) {\n                    }\n                }\n\n                try {\n                    executor(function (value) {\n                        if (state === 'pending') {\n                            state = 'fulfilled';\n                            result = value;\n                            resolveQueue.forEach(call);\n                        }\n                    }, function (reason) {\n                        if (state === 'pending') {\n                            state = 'rejected';\n                            result = reason;\n                            rejectQueue.forEach(call);\n                        }\n                    });\n                } catch (error) {\n                    if (state === 'pending') {\n                        state = 'rejected';\n                        result = error;\n                        rejectQueue.forEach(call);\n                    }\n                }\n                /**\n                 * The then() method returns a Promise. It takes two arguments, both are \n                 * callback functions for the success and failure cases of the Promise.\n                 * \n                 * @method then\n                 * @memberOf Promise\n                 * @instance\n                 * @param {function} onFulfilled A Function called when the Promise is fulfilled. This function has one argument, the fulfillment value.\n                 * @param {function} onRejected A Function called when the Promise is rejected. This function has one argument, the rejection reason.\n                 * @returns {Promise} \n                 */\n                this.then = function (onFulfilled, onRejected) {\n\n                    return new Promise(function (resolve, reject) {\n\n                        function asyncOnFulfilled() {\n                            var value;\n                            try {\n                                value = onFulfilled ? onFulfilled(result) : result;\n                            } catch (error) {\n                                reject(error);\n                                return;\n                            }\n                            value = mswrap(value);\n                            if (value && value.then && value.then.call) {\n                                value.then(resolve, reject);\n                            } else {\n                                resolve(value);\n                            }\n                        }\n\n                        function asyncOnRejected() {\n                            var reason;\n                            try {\n                                reason = onRejected ? onRejected(result) : result;\n                            } catch (error) {\n                                reject(error);\n                                return;\n                            }\n                            reason = mswrap(reason);\n                            if (reason && reason.then && reason.then.call) {\n                                reason.then(resolve, reject);\n                            } else {\n                                reject(reason);\n                            }\n                        }\n\n                        if (state === 'fulfilled') {\n                            asyncOnFulfilled();\n                        } else if (state === 'rejected') {\n                            asyncOnRejected();\n                        } else {\n                            resolveQueue.push(asyncOnFulfilled);\n                            rejectQueue.push(asyncOnRejected);\n                        }\n\n                    });\n\n                };\n                /**\n                 * The catch() method returns a Promise and deals with rejected cases only. \n                 * It behaves the same as calling Promise.prototype.then(undefined, onRejected).\n                 * \n                 * @method catch\n                 * @memberOf Promise\n                 * @instance\n                 * @param {function} onRejected A Function called when the Promise is rejected. This function has one argument, the rejection reason.\n                 * @returns {Promise} \n                 */\n                this['catch'] = function (onRejected) {\n                    return this.then(undefined, onRejected);\n                };\n            }\n\n            /**\n             * The Promise.all(iterable) method returns a promise that resolves when all \n             * of the promises in the iterable argument have resolved.<br><br>\n             * \n             * The result is passed as an array of values from all the promises. \n             * If something passed in the iterable array is not a promise, it's converted to \n             * one by Promise.resolve. If any of the passed in promises rejects, the \n             * all Promise immediately rejects with the value of the promise that rejected, \n             * discarding all the other promises whether or not they have resolved.\n             * \n             * @method all\n             * @memberOf Promise\n             * @static\n             * @param {KeyUsages} promises Array with promises.\n             * @returns {Promise}\n             */\n            Promise.all = function (promises) {\n                return new Promise(function (resolve, reject) {\n                    var result = [], count = 0;\n                    function asyncResolve(k) {\n                        count++;\n                        return function (data) {\n                            result[k] = data;\n                            count--;\n                            if (count === 0)\n                                resolve(result);\n                        };\n                    }\n\n                    function asyncReject(reason) {\n                        if (count > 0)\n                            reject(reason);\n                        count = 0;\n                    }\n\n                    for (var i = 0, n = promises.length; i < n; i++) {\n                        var data = promises[i];\n                        if (data.then && data.then.call)\n                            data.then(asyncResolve(i), asyncReject);\n                        else\n                            result[i] = data;\n                    }\n\n                    if (count === 0)\n                        resolve(result);\n                });\n            };\n\n            return Promise;\n        })();\n    }\n\n    // Executor for any method\n    function execute(algorithm, method, args) {\n        return new Promise(function (resolve, reject) {\n            try {\n                if (gostEngine)\n                    resolve(gostEngine.execute(algorithm, method, args));\n                else\n                    reject(new OperationError('Module gostEngine not found'));\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    // Self resolver\n    function call(callback) {\n        try {\n            callback();\n        } catch (e) {\n        }\n    }\n\n\n\n    /*\n     * WebCrypto common class references\n     * \n     */\n    /**\n     * The Algorithm object is a dictionary object [WebIDL] which is used to \n     * specify an algorithm and any additional parameters required to fully \n     * specify the desired operation.<br>\n     * <pre>\n     *  dictionary Algorithm {\n     *      DOMString name;\n     *  };\n     * </pre>\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#algorithm-dictionary}\n     * @class Algorithm\n     * @param {DOMString} name The name of the registered algorithm to use.\n     */\n\n    /**\n     * AlgorithmIdentifier - Algorithm or DOMString name of algorithm<br>\n     * <pre>\n     *  typedef (Algorithm or DOMString) AlgorithmIdentifier;\n     * </pre>\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#algorithm-dictionary}\n     * @class AlgorithmIdentifier\n     */\n\n    /**\n     * The KeyAlgorithm interface represents information about the contents of a \n     * given Key object.\n     * <pre>\n     *  interface KeyAlgorithm {\n     *      readonly attribute DOMString name\n     *  };\n     * </pre>\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-algorithm-interface}\n     * @class KeyAlgorithm \n     * @param {DOMString} name The name of the algorithm used to generate the Key\n     */\n\n    /**\n     * The type of a key. The recognized key type values are \"public\", \"private\" \n     * and \"secret\". Opaque keying material, including that used for symmetric \n     * algorithms, is represented by \"secret\", while keys used as part of asymmetric \n     * algorithms composed of public/private keypairs will be either \"public\" or \"private\".\n     * <pre>\n     *  typedef DOMString KeyType;\n     * </pre>\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\n     * @class KeyType\n     */\n\n    /**\n     * Sequence of operation type that may be performed using a key. The recognized \n     * key usage values are \"encrypt\", \"decrypt\", \"sign\", \"verify\", \"deriveKey\", \n     * \"deriveBits\", \"wrapKey\" and \"unwrapKey\".\n     * <pre>\n     *  typedef DOMString[] KeyUsages;\n     * </pre>\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\n     * @class KeyUsages\n     */\n\n    /**\n     * The Key object represents an opaque reference to keying material that is \n     * managed by the user agent.<br>\n     * This specification provides a uniform interface for many different kinds of \n     * keying material managed by the user agent. This may include keys that have \n     * been generated by the user agent, derived from other keys by the user agent, \n     * imported to the user agent through user actions or using this API, \n     * pre-provisioned within software or hardware to which the user agent has \n     * access or made available to the user agent in other ways. The term key refers \n     * broadly to any keying material including actual keys for cryptographic \n     * operations and secret values obtained within key derivation or exchange operations.<br>\n     * The Key object is not required to directly interface with the underlying key \n     * storage mechanism, and may instead simply be a reference for the user agent \n     * to understand how to obtain the keying material when needed, eg. when performing \n     * a cryptographic operation.\n     * <pre>\n     *  interface Key {\n     *      readonly attribute KeyType type;\n     *      readonly attribute boolean extractable;\n     *      readonly attribute KeyAlgorithm algorithm;\n     *      readonly attribute KeyUsages usages;\n     *  };     \n     * </pre>\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\n     * @class Key\n     * @param {KeyType} type The type of a key. The recognized key type values are \"public\", \"private\" and \"secret\".\n     * @param {boolean} extractable Whether or not the raw keying material may be exported by the application.\n     * @param {KeyAlgorithm} algorithm The Algorithm used to generate the key.\n     * @param {KeyUsages} usages Key usage array: type of operation that may be performed using a key. \n     */\n\n    /**\n     * The KeyPair interface represents an asymmetric key pair that is comprised of both public and private keys.\n     * <pre>\n     *  interface KeyPair {\n     *      readonly attribute Key publicKey;\n     *      readonly attribute Key privateKey;\n     *  };     \n     * </pre>\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#keypair}\n     * @class KeyPair\n     * @param {Key} privateKey Private key\n     * @param {Key} publicKey Public key\n     */\n\n    /**\n     * Specifies a serialization format for a key. The recognized key format values are:\n     *  <ul>\n     *      <li>'raw' - An unformatted sequence of bytes. Intended for secret keys.</li>\n     *      <li>'pkcs8' - The DER encoding of the PrivateKeyInfo structure from RFC 5208.</li>\n     *      <li>'spki' - The DER encoding of the SubjectPublicKeyInfo structure from RFC 5280.</li>\n     *      <li>'jwk' - The key is represented as JSON according to the JSON Web Key format.</li>\n     *  </ul>\n     *  <pre>\n     *  typedef DOMString KeyFormat;\n     *  </pre>\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\n     *  @class KeyFormat\n     */\n\n    /**\n     * Binary data \n     *  <pre>\n     *  typedef (ArrayBuffer or ArrayBufferView) CryptoOperationData;\n     *  </pre>\n     * @class CryptoOperationData\n     */\n    var CryptoOperationData = root.ArrayBuffer;\n\n    /**\n     * DER-encoded ArrayBuffer or PEM-encoded DOMString constains ASN.1 object<br>\n     * <pre>\n     *  typedef (ArrayBuffer or DOMString) FormatedData;\n     * </pre>\n     * @class FormatedData\n     */\n\n\n    /**\n     * The gostCrypto provide general purpose cryptographic functionality for\n     * GOST standards including a cryptographically strong pseudo-random number \n     * generator seeded with truly random values.\n     * \n     * @namespace gostCrypto\n     */\n    var gostCrypto = {};\n\n    /**\n     * The SubtleCrypto class provides low-level cryptographic primitives and algorithms.\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#subtlecrypto-interface}\n     * \n     * @class SubtleCrypto\n     */\n    function SubtleCrypto() {\n    }\n\n    /**\n     * The encrypt method returns a new Promise object that will encrypt data \n     * using the specified algorithm identifier with the supplied Key.\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-encrypt}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST 28147-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n     *      <li><b>GOST 28147-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\n     *      <li><b>GOST 28147-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\n     *      <li><b>GOST 28147-CTR</b> \"gammirovanie\" (counter) mode</li>\n     *      <li><b>GOST 28147-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n     *      <li><b>GOST R 34.12-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n     *      <li><b>GOST R 34.12-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\n     *      <li><b>GOST R 34.12-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\n     *      <li><b>GOST R 34.12-CTR</b> \"gammirovanie\" (counter) mode</li>\n     *      <li><b>GOST R 34.12-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n     *  </ul>\n     *  For more information see {@link GostCipher} \n     * \n     * @memberOf SubtleCrypto\n     * @method encrypt\n     * @instance\n     * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n     * @param {Key} key Key object\n     * @param {CryptoOperationData} data Operation data\n     * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n     */\n    SubtleCrypto.prototype.encrypt = function (algorithm, key, data)\n    {\n        return new Promise(call).then(function () {\n            if (checkNative(algorithm))\n                return rootCrypto.subtle.encrypt(algorithm, key, data);\n\n            algorithm = normalize(algorithm, 'encrypt');\n            return execute(algorithm, 'encrypt',\n                    [extractKey('encrypt', algorithm, key), data]);\n        });\n    };\n\n    /**\n     * The decrypt method returns a new Promise object that will decrypt data \n     * using the specified algorithm identifier with the supplied Key. \n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-decrypt}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST 28147-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n     *      <li><b>GOST 28147-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\n     *      <li><b>GOST 28147-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\n     *      <li><b>GOST 28147-CTR</b> \"gammirovanie\" (counter) mode</li>\n     *      <li><b>GOST 28147-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n     *      <li><b>GOST R 34.12-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n     *      <li><b>GOST R 34.12-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\n     *      <li><b>GOST R 34.12-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\n     *      <li><b>GOST R 34.12-CTR</b> \"gammirovanie\" (counter) mode</li>\n     *      <li><b>GOST R 34.12-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n     *  </ul>\n     *  For additional modes see {@link GostCipher} \n     * \n     * @memberOf SubtleCrypto\n     * @method decrypt\n     * @instance\n     * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n     * @param {Key} key Key object\n     * @param {CryptoOperationData} data Operation data\n     * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n     */\n    SubtleCrypto.prototype.decrypt = function (algorithm, key, data)\n    {\n        return new Promise(call).then(function () {\n            if (checkNative(algorithm))\n                return rootCrypto.subtle.decrypt(algorithm, key, data);\n\n            algorithm = normalize(algorithm, 'decrypt');\n            return execute(algorithm, 'decrypt',\n                    [extractKey('decrypt', algorithm, key), data]);\n        });\n    };\n\n    /**\n     * The sign method returns a new Promise object that will sign data using \n     * the specified algorithm identifier with the supplied Key.\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-sign}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST R 34.10-94</b> GOST Signature</li>\n     *      <li><b>GOST R 34.10-94/GOST R 34.11-94</b> GOST Signature with Hash</li>\n     *      <li><b>GOST R 34.10</b> ECGOST Signature</li>\n     *      <li><b>GOST R 34.10/GOST R 34.11-94</b> ECGOST Signature with Old-Style Hash</li>\n     *      <li><b>GOST R 34.10/GOST R 34.11</b> ECGOST Signature with Streebog Hash</li>\n     *      <li><b>GOST 28147-MAC</b> MAC base on GOST 28147</li>\n     *      <li><b>GOST R 34.12-MAC</b> MAC base on GOST R 43.12</li>\n     *      <li><b>GOST R 34.11-HMAC</b> HMAC base on GOST 34.11</li>\n     *      <li><b>SHA-HMAC</b> HMAC base on SHA</li>\n     *  </ul>\n     *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}\n     * \n     * @memberOf SubtleCrypto\n     * @method sign\n     * @instance\n     * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n     * @param {Key} key Key object \n     * @param {CryptoOperationData} data Operation data\n     * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n     */\n    SubtleCrypto.prototype.sign = function (algorithm, key, data)\n    {\n        return new Promise(call).then(function () {\n            if (checkNative(algorithm))\n                return rootCrypto.subtle.sign(algorithm, key, data);\n\n            algorithm = normalize(algorithm, 'sign');\n            var value = execute(algorithm, 'sign',\n                    [extractKey('sign', algorithm, key), data]).then(function (data) {\n                if (algorithm.procreator === 'SC' && algorithm.mode === 'SIGN') {\n                    data = gostCrypto.asn1.GostSignature.encode(data);\n                }\n                return data;\n            });\n            return value;\n        });\n    };\n\n    /**\n     * The verify method returns a new Promise object that will verify data \n     * using the specified algorithm identifier with the supplied Key.\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-verify}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST R 34.10-94</b> GOST Signature</li>\n     *      <li><b>GOST R 34.10-94/GOST R 34.11-94</b> GOST Signature with Hash</li>\n     *      <li><b>GOST R 34.10</b> ECGOST Signature</li>\n     *      <li><b>GOST R 34.10/GOST R 34.11-94</b> ECGOST Signature with Old-Style Hash</li>\n     *      <li><b>GOST R 34.10/GOST R 34.11</b> ECGOST Signature with Streebog Hash</li>\n     *      <li><b>GOST 28147-MAC</b> MAC base on GOST 28147</li>\n     *      <li><b>GOST R 34.12-MAC</b> MAC base on GOST R 34.12</li>\n     *      <li><b>GOST R 34.11-HMAC</b> HMAC base on GOST 34.11</li>\n     *      <li><b>SHA-HMAC</b> HMAC base on SHA</li>\n     *  </ul>\n     *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}\n     * \n     * @memberOf SubtleCrypto\n     * @method verify\n     * @instance\n     * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n     * @param {Key} key Key object\n     * @param {CryptoOperationData} signature Signature data\n     * @param {CryptoOperationData} data Operation data\n     * @returns {Promise} Promise that resolves with boolean value of verification result\n     */\n    SubtleCrypto.prototype.verify = function (algorithm, key, signature, data)\n    {\n        return new Promise(call).then(function () {\n            if (checkNative(algorithm))\n                return rootCrypto.subtle.verify(algorithm, key, signature, data);\n\n            algorithm = normalize(algorithm, 'verify');\n            if (algorithm.procreator === 'SC' && algorithm.mode === 'SIGN') {\n                var obj = gostCrypto.asn1.GostSignature.decode(signature);\n                signature = {r: obj.r, s: obj.s};\n            }\n            return execute(algorithm, 'verify',\n                    [extractKey('verify', algorithm, key), signature, data]);\n        });\n    };\n\n    /**\n     * The digest method returns a new Promise object that will digest data \n     * using the specified algorithm identifier. \n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-digest}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST R 34.11-94</b> Old-Style GOST Hash</li>\n     *      <li><b>GOST R 34.11</b> GOST Streebog Hash</li>\n     *      <li><b>SHA</b> SHA Hash</li>\n     *  </ul>\n     *  For additional modes see {@link GostDigest}\n     * \n     * @memberOf SubtleCrypto\n     * @method digest\n     * @instance\n     * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n     * @param {CryptoOperationData} data Operation data\n     * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n     */\n    SubtleCrypto.prototype.digest = function (algorithm, data)\n    {\n        return new Promise(call).then(function () {\n            if (checkNative(algorithm))\n                return rootCrypto.subtle.digest(algorithm, data);\n\n            algorithm = normalize(algorithm, 'digest');\n            return execute(algorithm, 'digest', [data]);\n        });\n    };\n\n    /**\n     * The generateKey method returns a new Promise object that will key(s) using\n     * the specified algorithm identifier. Key can be used in according with\n     * KeyUsages sequence. The recognized key usage values are \"encrypt\", \"decrypt\", \n     * \"sign\", \"verify\", \"deriveKey\", \"deriveBits\", \"wrapKey\" and \"unwrapKey\".\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-generateKey}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST R 34.10</b> ECGOST Key Pairs</li>\n     *      <li><b>GOST 28147</b> Key for encryption GOST 28147 modes</li>\n     *      <li><b>GOST 28147-KW</b> Key for wrapping GOST 28147 modes</li>\n     *      <li><b>GOST R 34.12</b> Key for encryption GOST R 34.12 modes</li>\n     *      <li><b>GOST R 34.12-KW</b> Key for wrapping GOST R 34.12 modes</li>\n     *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\n     *  </ul>\n     *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}<br>\n     *  Note: Generation key for GOST R 34.10-94 not supported.\n     * \n     * @memberOf SubtleCrypto\n     * @method generateKey\n     * @instance\n     * @param {AlgorithmIdentifier} algorithm Key algorithm identifier\n     * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\n     * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\n     * @returns {Promise} Promise that resolves with {@link Key} or {@link KeyPair} in according to key algorithm\n     */\n    SubtleCrypto.prototype.generateKey = function (algorithm, extractable, keyUsages)\n    {\n        return new Promise(call).then(function () {\n            if (checkNative(algorithm))\n                return rootCrypto.subtle.generateKey(algorithm, extractable, keyUsages);\n\n            var privateAlgorithm = algorithm.privateKey,\n                    publicAlgorithm = algorithm.publicKey;\n            algorithm = normalize(algorithm, 'generateKey');\n            if (privateAlgorithm)\n                privateAlgorithm = normalize(privateAlgorithm, 'generateKey');\n            else\n                privateAlgorithm = algorithm;\n            if (publicAlgorithm)\n                publicAlgorithm = normalize(publicAlgorithm, 'generateKey');\n            else\n                publicAlgorithm = algorithm;\n            return execute(algorithm, 'generateKey', []).then(function (data) {\n                if (data.publicKey && data.privateKey)\n                    return convertKeyPair(publicAlgorithm, privateAlgorithm, extractable, keyUsages, data.publicKey, data.privateKey);\n                else\n                    return convertKey(algorithm, extractable, keyUsages, data);\n            });\n        });\n    };\n\n    /**\n     * The deriveKey method returns a new Promise object that will key(s) using\n     * the specified algorithm identifier. Key can be used in according with\n     * KeyUsage sequence. The recognized key usage values are \"encrypt\", \"decrypt\", \n     * \"sign\", \"verify\", \"deriveKey\", \"deriveBits\", \"wrapKey\" and \"unwrapKey\".\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-deriveKey}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST R 34.10-DH</b> ECDH Key Agreement mode</li>\n     *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\n     *      <li><b>GOST R 34.11-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\n     *      <li><b>GOST R 34.11-PFXKDF</b> PFX Key for Derivation Algorithm</li>\n     *      <li><b>GOST R 34.11-CPKDF</b> Password Based Key for CryptoPro Derivation Algorithm</li>\n     *      <li><b>SHA-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\n     *      <li><b>SHA-PFXKDF</b> PFX Key for Derivation Algorithm</li>\n     *  </ul>\n     *  For additional modes see {@link GostSign} and {@link GostDigest}\n     * \n     * @memberOf SubtleCrypto\n     * @method deriveKey\n     * @instance\n     * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n     * @param {Key} baseKey Derivation key object\n     * @param {AlgorithmIdentifier} derivedKeyType Derived key algorithm identifier\n     * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\n     * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key \n     * @returns {Promise} Promise that resolves with {@link Key}\n     */\n    SubtleCrypto.prototype.deriveKey = function (algorithm, baseKey,\n            derivedKeyType, extractable, keyUsages)\n    {\n        return new Promise(call).then(function () {\n            if (checkNative(algorithm))\n                return rootCrypto.subtle.deriveKey(algorithm, baseKey,\n                        derivedKeyType, extractable, keyUsages);\n\n            algorithm = normalize(algorithm, 'deriveKey');\n            derivedKeyType = normalize(derivedKeyType, 'generateKey');\n            algorithm.keySize = derivedKeyType.keySize;\n            if (algorithm['public']) {\n                algorithm['public'].algorithm = normalize(algorithm['public'].algorithm);\n                algorithm['public'] = extractKey('deriveKey', algorithm, algorithm['public']);\n            }\n            return execute(algorithm, 'deriveKey', [extractKey('deriveKey', algorithm, baseKey)]).then(function (data) {\n                return convertKey(derivedKeyType, extractable, keyUsages, data);\n            });\n        });\n    };\n\n    /**\n     * The deriveBits method returns length bits on baseKey using the \n     * specified algorithm identifier. \n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-deriveBits}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST R 34.10-DH</b> ECDH Key Agreement mode</li>\n     *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\n     *      <li><b>GOST R 34.11-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\n     *      <li><b>GOST R 34.11-PFXKDF</b> PFX Key for Derivation Algorithm</li>\n     *      <li><b>GOST R 34.11-CPKDF</b> Password Based Key for CryptoPro Derivation Algorithm</li>\n     *      <li><b>SHA-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\n     *      <li><b>SHA-PFXKDF</b> PFX Key for Derivation Algorithm</li>\n     *  </ul>\n     *  For additional modes see {@link GostSign} and {@link GostDigest}\n     * \n     * @memberOf SubtleCrypto\n     * @method deriveBits\n     * @instance\n     * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n     * @param {Key} baseKey Derivation key object\n     * @param {number} length Length bits\n     * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n     */\n    SubtleCrypto.prototype.deriveBits = function (algorithm, baseKey, length)\n    {\n        return new Promise(call).then(function () {\n            if (checkNative(algorithm))\n                return rootCrypto.subtle.deriveBits(algorithm, baseKey, length);\n\n            algorithm = normalize(algorithm, 'deriveBits');\n            if (algorithm['public'])\n                algorithm['public'] = extractKey('deriveBits', algorithm, algorithm['public']);\n            return execute(algorithm, 'deriveBits', [extractKey('deriveBits', algorithm, baseKey), length]);\n        });\n    };\n\n    /**\n     * The importKey method returns a new Promise object that will key(s) using\n     * the specified algorithm identifier. Key can be used in according with\n     * KeyUsage sequence. The recognized key usage values are \"encrypt\", \"decrypt\", \n     * \"sign\", \"verify\", \"deriveKey\", \"deriveBits\", \"wrapKey\" and \"unwrapKey\".<br><br>\n     * Parameter keyData contains data in defined format.\n     * The suppored key format values are:\n     *  <ul>\n     *      <li>'raw' - An unformatted sequence of bytes. Intended for secret keys.</li>\n     *      <li>'pkcs8' - The DER encoding of the PrivateKeyInfo structure from RFC 5208.</li>\n     *      <li>'spki' - The DER encoding of the SubjectPublicKeyInfo structure from RFC 5280.</li>\n     *  </ul>\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-importKey}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST R 34.10-94</b> GOST Private and Public keys</li>\n     *      <li><b>GOST R 34.10</b> ECGOST Private and Public keys</li>\n     *      <li><b>GOST 28147</b> Key for encryption GOST 28147 modes</li>\n     *      <li><b>GOST 28147-KW</b> Key for key wrapping GOST 28147 modes</li>\n     *      <li><b>GOST R 34.12</b> Key for encryption GOST 34.12 modes</li>\n     *      <li><b>GOST R 34.12-KW</b> Key for key wrapping GOST 34.12 modes</li>\n     *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\n     *  </ul>\n     *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}<br>\n     * \n     * @memberOf SubtleCrypto\n     * @method importKey\n     * @instance\n     * @param {KeyFormat} format Key format Format specifies a serialization format for a key\n     * @param {CryptoOperationData} keyData\n     * @param {AlgorithmIdentifier} algorithm Key algorithm identifier\n     * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\n     * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\n     * @returns {Promise} Promise that resolves with {@link Key}\n     */\n    SubtleCrypto.prototype.importKey = function (format, keyData, algorithm, extractable, keyUsages)\n    {\n        var type;\n        return new Promise(call).then(function () {\n            if (checkNative(algorithm))\n                return rootCrypto.subtle.importKey(format, keyData, algorithm, extractable, keyUsages);\n\n            if (format === 'raw') {\n                algorithm = normalize(algorithm, 'importKey');\n                if (keyUsages && keyUsages.indexOf) {\n                    var name = algorithm.name.toUpperCase().replace(/[\\.\\s]/g, '');\n                    if (name.indexOf('3410') >= 0 && keyUsages.indexOf('sign') >= 0)\n                        type = 'private';\n                    else if (name.indexOf('3410') >= 0 && keyUsages.indexOf('verify') >= 0)\n                        type = 'public';\n                }\n                return keyData;\n            } else {\n                var key;\n                if (format === 'pkcs8')\n                    key = gostCrypto.asn1.GostPrivateKeyInfo.decode(keyData).object;\n                else if (format === 'spki')\n                    key = gostCrypto.asn1.GostSubjectPublicKeyInfo.decode(keyData).object;\n                else\n                    throw new NotSupportedError('Key format not supported');\n\n                algorithm = normalize(key.algorithm, 'importKey');\n                type = key.type;\n                if (extractable !== false)\n                    extractable = extractable || key.extractable;\n                if (keyUsages) {\n                    for (var i = 0; i < keyUsages.length; i++) {\n                        if (key.usages.indexOf(keyUsages[i]) < 0)\n                            throw DataError('Key usage not valid for this key');\n                    }\n                } else\n                    keyUsages = key.usages;\n                var data = key.buffer, keySize = algorithm.keySize, dataLen = data.byteLength;\n                if (type === 'public' || keySize === dataLen)\n                    return data;\n                else {\n                    // Remove private key masks\n                    if (dataLen % keySize > 0)\n                        throw new DataError('Invalid key size');\n                    algorithm.mode = 'MASK';\n                    algorithm.procreator = 'VN';\n                    var chain = [];\n                    for (var i = keySize; i < dataLen; i += keySize) {\n                        chain.push((function (mask) {\n                            return function (data) {\n                                return execute(algorithm, 'unwrapKey', [mask, data]).then(function (data) {\n                                    var next = chain.pop();\n                                    if (next)\n                                        return next(data);\n                                    else {\n                                        delete algorithm.mode;\n                                        return data;\n                                    }\n                                });\n                            };\n                        })(new Uint8Array(data, i, keySize)));\n                    }\n                    return chain.pop()(new Uint8Array(data, 0, keySize));\n                }\n            }\n        }).then(function (data) {\n            return convertKey(algorithm, extractable, keyUsages, data, type);\n        });\n    };\n\n    /**\n     * The exportKey method returns a new Promise object that will key data in\n     * defined format. <br><br>\n     * The suppored key format values are:\n     *  <ul>\n     *      <li>'raw' - An unformatted sequence of bytes. Intended for secret keys.</li>\n     *      <li>'pkcs8' - The DER encoding of the PrivateKeyInfo structure from RFC 5208.</li>\n     *      <li>'spki' - The DER encoding of the SubjectPublicKeyInfo structure from RFC 5280.</li>\n     *  </ul>\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-exportKey}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST R 34.10-94</b> GOST Private and Public keys</li>\n     *      <li><b>GOST R 34.10</b> ECGOST Private and Public keys</li>\n     *      <li><b>GOST 28147</b> Key for encryption GOST 28147 modes</li>\n     *      <li><b>GOST 28147-KW</b> Key for key wrapping GOST 28147 modes</li>\n     *      <li><b>GOST R 34.12</b> Key for encryption GOST R 34.12 modes</li>\n     *      <li><b>GOST R 34.12-KW</b> Key for key wrapping GOST R 34.12 modes</li>\n     *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\n     *      <li><b>GOST R 34.11-PBKDF2</b> Import Password for Key for Derivation Algorithm</li>\n     *      <li><b>GOST R 34.11-PFXKDF</b> Import PFX Key for Derivation Algorithm</li>\n     *      <li><b>GOST R 34.11-CPKDF</b> Import Password Key for CryptoPro Derivation Algorithm</li>\n     *      <li><b>SHA-PBKDF2</b> Import Password for Key for Derivation Algorithm</li>\n     *      <li><b>SHA-PFXKDF</b> Import PFX Key for Derivation Algorithm</li>\n     *  </ul>\n     *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}<br>\n     * \n     * @memberOf SubtleCrypto\n     * @method exportKey\n     * @instance\n     * @param {KeyFormat} format Format specifies a serialization format for a key\n     * @param {Key} key Key object\n     * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n     */\n    SubtleCrypto.prototype.exportKey = function (format, key)\n    {\n        return new Promise(call).then(function () {\n            if (key && checkNative(key.algorithm))\n                return rootCrypto.subtle.exportKey(format, key);\n\n            if (!key.extractable)\n                throw new InvalidAccessError('Key not extractable');\n\n            var raw = extractKey(null, null, key);\n            if (format === 'raw')\n                return raw;\n            else if (format === 'pkcs8' && key.algorithm && key.algorithm.id) {\n                if (key.algorithm.procreator === 'VN') {\n                    // Add masks for ViPNet\n                    var algorithm = key.algorithm, mask;\n                    algorithm.mode = 'MASK';\n                    return execute(algorithm, 'generateKey').then(function (data) {\n                        mask = data;\n                        return execute(algorithm, 'wrapKey', [mask, key.buffer]);\n                    }).then(function (data) {\n                        delete algorithm.mode;\n                        var d = new Uint8Array(data.byteLength + mask.byteLength);\n                        d.set(new Uint8Array(data, 0, data.byteLength));\n                        d.set(new Uint8Array(mask, 0, mask.byteLength), data.byteLength);\n                        var buffer = d.buffer;\n                        buffer.enclosed = true;\n                        return gostCrypto.asn1.GostPrivateKeyInfo.encode({\n                            algorithm: algorithm,\n                            buffer: buffer\n                        });\n                    });\n                } else\n                    return gostCrypto.asn1.GostPrivateKeyInfo.encode(key);\n            } else if (format === 'spki' && key.algorithm && key.algorithm.id)\n                return gostCrypto.asn1.GostSubjectPublicKeyInfo.encode(key);\n            else\n                throw new NotSupportedError('Key format not supported');\n        });\n    };\n\n    /**\n     * The wrapKey method returns a new Promise object that will wrapped key(s).\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-wrapKey}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST 28147-KW</b> Key Wrapping GOST 28147 modes</li>\n     *      <li><b>GOST R 34.12-KW</b> Key Wrapping GOST R 34.12 modes</li>\n     *      <li><b>GOST 28147-MASK</b> Key Mask GOST 28147 modes</li>\n     *      <li><b>GOST R 34.12-MASK</b> Key Mask GOST R 34.12 modes</li>\n     *      <li><b>GOST R 34.10-MASK</b> Key Mask GOST R 34.10 modes</li>\n     *  </ul>\n     *  For additional modes see {@link GostCipher}<br>\n     * \n     * @memberOf SubtleCrypto\n     * @method wrapKey\n     * @instance\n     * @param {KeyFormat} format Format specifies a serialization format for a key. Now suppored only 'raw' key format.\n     * @param {Key} key Key object\n     * @param {Key} wrappingKey Wrapping key object\n     * @param {AlgorithmIdentifier} wrapAlgorithm Algorithm identifier\n     * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n     */\n    SubtleCrypto.prototype.wrapKey = function (format, key, wrappingKey, wrapAlgorithm)\n    {\n        return new Promise(call).then(function () {\n            if (checkNative(wrapAlgorithm))\n                return rootCrypto.subtle.wrapKey(format, key, wrappingKey, wrapAlgorithm);\n\n            wrapAlgorithm = normalize(wrapAlgorithm, 'wrapKey');\n            var keyData = extractKey(null, null, key);\n            if (wrapAlgorithm.procreator === 'SC' && key.type === 'private')\n                keyData = swapBytes(keyData);\n            return execute(wrapAlgorithm, 'wrapKey',\n                    [extractKey('wrapKey', wrapAlgorithm, wrappingKey), keyData]).then(function (data) {\n                if (format === 'raw')\n                    return data;\n                else\n                    throw new NotSupportedError('Key format not supported');\n            });\n        });\n    };\n\n    /**\n     * The unwrapKey method returns a new Promise object that will unwrapped key(s).\n     * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-unwrapKey}<br><br>\n     * \n     * Supported algorithm names:\n     *  <ul>\n     *      <li><b>GOST 28147-KW</b> Key Wrapping GOST 28147 modes</li>\n     *      <li><b>GOST R 34.12-KW</b> Key Wrapping GOST R 34.12 modes</li>\n     *      <li><b>GOST 28147-MASK</b> Key Mask GOST 28147 modes</li>\n     *      <li><b>GOST R 34.12-MASK</b> Key Mask GOST R 34.12 modes</li>\n     *      <li><b>GOST R 34.10-MASK</b> Key Mask GOST R 34.10 modes</li>\n     *  </ul>\n     *  For additional modes see {@link GostCipher}<br>\n     * \n     * @memberOf SubtleCrypto\n     * @method unwrapKey\n     * @instance\n     * @param {KeyFormat} format Format specifies a serialization format for a key. Now suppored only 'raw' key format.\n     * @param {CryptoOperationData} wrappedKey Wrapped key data\n     * @param {Key} unwrappingKey Unwrapping key object\n     * @param {AlgorithmIdentifier} unwrapAlgorithm Algorithm identifier\n     * @param {AlgorithmIdentifier} unwrappedKeyAlgorithm Key algorithm identifier\n     * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\n     * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\n     * @returns {Promise} Promise that resolves with {@link Key}\n     */\n    SubtleCrypto.prototype.unwrapKey = function (format, wrappedKey, unwrappingKey,\n            unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages)\n    {\n        return new Promise(call).then(function () {\n            if (checkNative(unwrapAlgorithm))\n                return rootCrypto.subtle.unwrapKey(format, wrappedKey, unwrappingKey,\n                        unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages);\n\n            unwrapAlgorithm = normalize(unwrapAlgorithm, 'unwrapKey');\n            unwrappedKeyAlgorithm = normalize(unwrappedKeyAlgorithm, 'importKey');\n            if (format !== 'raw')\n                throw new NotSupportedError('Key format not supported');\n\n            return execute(unwrapAlgorithm, 'unwrapKey', [extractKey('unwrapKey', unwrapAlgorithm, unwrappingKey), wrappedKey]).then(function (data) {\n                var type;\n                if (unwrappedKeyAlgorithm && unwrappedKeyAlgorithm.name) {\n                    var name = unwrappedKeyAlgorithm.name.toUpperCase().replace(/[\\.\\s]/g, '');\n                    if (name.indexOf('3410') >= 0 && keyUsages.indexOf('sign') >= 0)\n                        type = 'private';\n                    else if (name.indexOf('3410') >= 0 && keyUsages.indexOf('verify') >= 0)\n                        type = 'public';\n                }\n                if (unwrapAlgorithm.procreator === 'SC' && type === 'private')\n                    data = swapBytes(data);\n                return convertKey(unwrappedKeyAlgorithm, extractable, keyUsages, data, type);\n            });\n        });\n    };\n\n    /**\n     * The subtle attribute provides an instance of the SubtleCrypto \n     * interface which provides low-level cryptographic primitives and \n     * algorithms.\n     * \n     * @memberOf gostCrypto\n     * @type SubtleCrypto\n     */\n    gostCrypto.subtle = new SubtleCrypto();\n\n    /**\n     * The getRandomValues method generates cryptographically random values. \n     * \n     * First try to use Web Crypto random genereator. Next make random\n     * bytes based on standart Math.random mixed with time and mouse pointer\n     * \n     * @memberOf gostCrypto\n     * @param {(CryptoOperationData)} array Destination buffer for random data\n     */\n    gostCrypto.getRandomValues = function (array)\n    {\n        // Execute randomizer\n        var randomSource = new GostRandom();\n        if (randomSource.getRandomValues)\n            randomSource.getRandomValues(array);\n        else\n            throw new NotSupportedError('Random generator not found');\n    };\n\n\nmodule.exports = gostCrypto;\n\n","/**\n * @file GOST R 34.11-94 / GOST R 34.11-12 implementation\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * Converted to JavaScript from source https://www.streebog.net/\n * Copyright (c) 2013, Alexey Degtyarev.\n * All rights reserved.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nconst GostRandom = require('./gostRandom');\nconst GostCipher = require('./gostCipher');\n\n    /*\n     * GOST R 34.11\n     * Common methods \n     * \n     */\n\n    var root = global;\n    var rootCrypto = root.crypto || root.msCrypto;\n\n    var DataError = root.DataError || Error,\n            NotSupportedError = root.NotSupportedError || Error;\n\n    // Copy len values from s[sOfs] to d[dOfs]\n    function arraycopy(s, sOfs, d, dOfs, len) {\n        for (var i = 0; i < len; i++)\n            d[dOfs + i] = s[sOfs + i];\n    }\n\n    // Swap bytes in buffer\n    function swap(s) {\n        var src = new Uint8Array(s),\n                dst = new Uint8Array(src.length);\n        for (var i = 0, n = src.length; i < n; i++)\n            dst[n - i - 1] = src[i];\n        return dst.buffer;\n    }\n\n    // Convert BASE64 string to Uint8Array\n    // for decompression of constants and precalc values\n    function b64decode(s) {\n        // s = s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n        var n = s.length,\n                k = n * 3 + 1 >> 2, r = new Uint8Array(k);\n\n        for (var m3, m4, u24 = 0, j = 0, i = 0; i < n; i++) {\n            m4 = i & 3;\n            var c = s.charCodeAt(i);\n\n            c = c > 64 && c < 91 ?\n                    c - 65 : c > 96 && c < 123 ?\n                    c - 71 : c > 47 && c < 58 ?\n                    c + 4 : c === 43 ?\n                    62 : c === 47 ?\n                    63 : 0;\n\n            u24 |= c << 18 - 6 * m4;\n            if (m4 === 3 || n - i === 1) {\n                for (m3 = 0; m3 < 3 && j < k; m3++, j++) {\n                    r[j] = u24 >>> (16 >>> m3 & 24) & 255;\n                }\n                u24 = 0;\n\n            }\n        }\n        return r.buffer;\n    }\n\n    // Random seed\n    function getSeed(length) {\n        var randomSource = new GostRandom();\n        if (randomSource.getRandomValues) {\n            var d = new Uint8Array(Math.ceil(length / 8));\n            randomSource.getRandomValues(d);\n            return d;\n        } else\n            throw new NotSupportedError('Random generator not found');\n    }\n\n    // Check buffer\n    function buffer(d) {\n        if (d instanceof ArrayBuffer)\n            return d;\n        else if (d && d.buffer && d.buffer instanceof ArrayBuffer)\n            return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\n                    d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\n        else\n            throw new DataError('ArrayBuffer or ArrayBufferView required');\n    }\n\n    /**\n     * Algorithm name GOST R 34.11 or GOST R 34.11-12<br><br>\n     * \n     * http://tools.ietf.org/html/rfc6986\n     * \n     * The digest method returns digest data in according to GOST R 4311-2012.<br>\n     * Size of digest also defines in algorithm name. \n     *  <ul>\n     *      <li>GOST R 34.11-256-12 - 256 bits digest</li>\n     *      <li>GOST R 34.11-512-12 - 512 bits digest</li>\n     *  </ul>\n     *  \n     * @memberOf GostDigest\n     * @method digest\n     * @instance\n     * @param {(ArrayBuffer|TypedArray)} data Data\n     * @returns {ArrayBuffer} Digest of data\n     */\n    var digest2012 = (function ()\n    {\n        // Constants \n        var buffer0 = new Int32Array(16); // [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];  \n\n        var buffer512 = new Int32Array(16); // [512, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; \n        buffer512[0] = 512;\n\n        // Constant C \n        var C = (function (s) {\n            var h = new Int32Array(b64decode(s)),\n                    r = new Array(12);\n            for (var i = 0; i < 12; i++)\n                r[i] = new Int32Array(h.buffer, i * 64, 16);\n            return r;\n        })(\n                'B0Wm8lllgN0jTXTMNnR2BRXTYKQIKkKiAWlnkpHgfEv8xIV1jbhOcRbQRS5DdmovH3xlwIEvy+vp2soe2lsIsbebsSFwBHnmVs3L1xui3VXKpwrbwmG1XFiZ1hJrF7WaMQG1Fg9e1WGYKyMKcur+89e1cA9GneNPGi+dqYq1o2+yCroK9ZYemTHbeoZD9LbCCdtiYDc6ycGxnjWQ5A/i03t7KbEUderyix+cUl9e8QY1hD1qKPw5Cscvzius3HT1LtHjhLy+DCLxN+iToepTNL4DUpMzE7fYddYD7YIs16k/NV5orRxynX08XDN+hY5I3eRxXaDhSPnSZhXos98f71f+bHz9WBdg9WPqqX6iVnoWGicjtwD/36P1OiVHF82/vf8PgNc1njVKEIYWHxwVf2MjqWwMQT+amUdHraxr6ktufWRGekBo+jVPkDZyxXG/tsa+wmYf8gq0t5oct6b6z8aO8Jq0mn8YbKRCUfnEZi3AOTB6O8Okb9nTOh2urk+uk9QUOk1WhojzSjyiTEUXNQQFSiiDaUcGNyyCLcWrkgnJk3oZMz5H08mHv+bHxp45VAkkv/6GrFHsxaruFg7H9B7nAr/UDX+k' +\n                '2ahRWTXCrDYvxKXRK43RaZAGm5LLK4n0msTbTTtEtIke3jaccfi3TkFBbgwCqucDp8mTTUJbH5vbWiODUURhcmAqH8uS3DgOVJwHppqKK3uxzrLbC0QKgIQJDeC3Vdk8JEKJJRs6fTreXxbs2JpMlJsiMRZUWo837ZxFmPvHtHTDtjsV0fqYNvRSdjswbB56SzNprwJn558DYTMbiuH/H9t4iv8c50GJ8/PkskjlKjhSbwWApt6+qxst84HNpMprXdhvwEpZot6Ybkd9Hc2678q5SOrvcR2KeWaEFCGAASBhB6vru2v62JT+WmPNxgIw+4nI79CezXsg1xvxSpK8SJkbstnVF/T6UijhiKqkHeeGzJEYne+AXZufITDUEiD4dx3fvDI8pM16sUkEsIAT0roxFvFn5443');\n\n        // Precalc Ax \n        var Ax = (function (s) {\n            return new Int32Array(b64decode(s));\n        })(\n                '5vh+XFtxH9Alg3eACST6FshJ4H6FLqSoW0aGoY8GwWoLMumi13tBbqvaN6RngVxm9heWqBpoZnb13AtwY5GVS0hi84235kvx/1ximmi9hcXLgn2m/NdXlWbTba9pufCJNWyfdEg9g7B8vOyxI4yZoTanAqwxxHCNnrao0C+839aLGfpR5bOuN5zPtUCKEn0LvAx4tQggj1rlM+OEIojs7c7Cx9N3wV/S7HgXtlBdD165TMLAgzaHHYwgXbTLCwStdjyFWyigiS9YjRt59v8yVz/s9p5DEZM+D8DTn4A6GMnuAQom9fOtgxDv6PRBGXmmXc2hDH3pOhBKG+4dEkjpLFO/8tshhHM5tPUMz6aiPQlftLyc2EeYzeiKLYsHHFb5f3dxaVp1apzF8C5xoLoevKZj+atCFeZyLrGeIt5fu3gNuc4PJZS6FIJSDmOXZk2ELwMeagII6phcfyFEob5r8Ho3yxzRY2Lbg+COK0sxHGTPcEebq5YOMoVrqYa53ucetUeMh3r1bOm4/kKIX2HW/RvdAVaWYjjIYiFXkj74qS78l/9CEUR2+J19NQhWRSzrTJDJsOCnElYjCFAt+8sBbC16A/qnpkhF' +\n                '9G6LOL/GxKu9vvj91HfeujqsTOvIB5t58JyxBeiHnQwn+moQrIpYy4lg58FAHQzqGm+BHko1aSiQxPsHc9GW/0NQGi9gnQqf96UW4MY/N5Yc5KazuNqSUhMkdSw44IqbpahkczvsFU8r8SRXVUmzP9dm2xVEDcXHp9F5455Ct5La3xUaYZl/04agNF7AJxQjONVRe22pOaRlGPB3EEADtAJ5HZClrqLdiNJniZxKXQqTD2bfCihlwk7p1CBFCbCLMlU4kWaFKSpBKQe/xTOoQrJ+K2JUTcZzbFMERWKV4Ada9AbpU1GQih8vO2vBI2Fvw3sJ3FJV5cY5Z9Ezsf5oRCmIOcfw5xHiQJuH9xlk+aLpOK3D20sHGQwLTkf5w+v0VTTVdtNriENGEKBa64sC2CDDzfWCMvJRbeGEDb7Cseeg6N4GsPodCHuFS1QNNDM7QuKaZ7zKW3/YpgiKxDfdDsY7s6nZQ+2BIXFNvV5lo7FnYe3nte6haSQx98jVc6v21R/GheGjZxpeBjzUBBDJLSg6uY8ssEACj+vAbLLy95AX1k8Rb6HTPOBzWfGpnuSqeE7WjHTNwAZuKhnVxztC2ocStBYccEXD' +\n                'NxWC5O2TIW2s45BBSTn2/H7F8SGGIjt8wLCUBCusFvv510U3mlJ+v3N8Py6jtoFoM+e42brSeMqpoyo0wi/+u+SBY8z+370NjllAJG6lpnBRxu9LhCrR5CK60GUnnFCM2RSIwhhgjO4xnqVJH3zaF9OU4SgTTJxgCUv0MnLV47Ob9hKlpKrXkcy72kPSb/0PNN4fPJRq0lBPW1RomV7ha9+fr2/qj3eUJkjqWHDdCSu/x+Vtcdl8Z93msv9PIdVJPCdrRjroYAORdntPr4bHH2ihPng11LmgtowRXwMMn9QUHdLJFlggAZg9j33dUySsZKpwP8wXUlTCyYmUjgK0Jj5edtafRsLeUHRvA1h9gARF2z2CknLx5WBYSgKbVgvz+65Ypz/83GKhWl5ObK1M6EupblXOH7jMCPl0eq6CslPBAhRM9/tHG58EKJjz6442BosnrfLv+3rtypf+jApevneOBRP099jPMCwlAcMri/eNkt38F1xVTfhlxX9GBS9f6vMwG6Ky9CSqaLfsu9YNhpmPDzUBBHVMAAAAAAAAAADxLjFNNNDM7HEFIr4GGCO1rygNmTDABcGX/VziXWk8ZRmkHMYzzJoV' +\n                'lYRBcvjHnrjcVDK3k3aEqZQ2wTokkM9YgCsT8zLI71nEQq45fO1PXPoc2O/jq42C8uWslU0pP9Fq2CPokHobfU0iSfg88EO2A8ud2Hn58z3eLS8nNtgmdCpDpB+JHuLfb5iZnRtsEzrUrUbNPfQ2+rs131AmmCXAlk/cqoE+bYXrQbBTfuWlxAVAunWLFghHpBrkO+e7RK/juMQp0GcXl4GZk7vun765rpqN0eyXVCHzVyzdkX5uMWOT19rir/jOR6IgEjfcUzijI0PeyQPuNXn8VsSompHmAbKASNxXUeASlvVk5Lfbe3X3GINRWXoS222VUr3OLjMenbsjHXQwj1INcpP90yLZ4gpEYQwwRnf+7uLStOrUJcow/e4ggAZ1YerKSkcBWhPnSv4UhyZOMCzIg7J78RmlFmTPWbP2gtyoEap8HnivWx1WJvtkjcOytz6RF99bzjTQX3zwarVvXf0lfwrNEycYV03I5nbFKp4HOaflLriqmlSGVT4PPNmjVv9IrqqSe36+dWUlrY4th30ObPn/28hBOx7MoxRQyplpE74w6YPoQK1REAmVbqccsbW2ui20NU5Eab3KTiWgBRWvUoHKD3Hh' +\n                'dEWYy40OK/JZP5sxKqhjt++zim4ppPxja2qjoEwtSp09lesO5r8x46KRw5YVVL/VGBacju+by/URXWi8nU4oRrqHXxj6z3Qg0e38uLbiPr2wBzby8eNkroTZKc5libb+cLei9tpPclUOclPXXG1JKQTyOj1XQVmnCoBp6gssEI5J0HPFa7EaEYqrehk55P/XzQlaCw44rO/J+2A2WXn1SJK95pfWfzQix4kz4QUUvGHhwdm5dcm1StImYWDPG82AmkSS7Xj9hnGzzKsqiBqXk3LOv2Z/4dCI1tRbXZhalCfIEagFjD9V3mX1tDGWtQYZ90+WsdZwbkOFnR6Ly0PTNlqrioXM+j2E+ce/mcKV/P2iH9Wh3ktjD82z73Y7i0VtgD9Z+Hz3w4WyfHO+XzGRPJjjrGYzsEghv2FnTCa4+BgP+8mVxMEwyKqghiAQdhqYYFfzQiEBFqr2PHYMBlTMNS3bRcxmfZBCvPRalkvUA4Jo6KDD7zxvPae9ktJp/3O8KQriAgHtIoe33jTN6IWBj9kB7qfdYQWb1vonMhmgNVPVbxrodMzOyeoxJFwug/VUcDRVXaB75JnOJtKsVue+9/0WGFelBU44' +\n                'ag59pFJ0NtFb2Go4HN6f8sr3dWIxdwwysJqu2eJ5yNBd7xCRxgZ02xEQRqJRXlBFI1Ns5HKYAvzFDLz39bY8+nOhaIfNFx8DfSlBr9nyjb0/Xj60Wk87nYTu/jYbZ3FAPbjj0+cHYnEaOij58g/SSH68fHW0nnYndOXyk8frVlwY3PWeT0eLpAxu9E+prctSxpmBLZjax2B4iwbcbkadDvxl+Op1IexOMKX3IZ6OC1Ur7D9lvKV7a93QSWm68bdemZBM2+OU6lcUsgHR5upA9ruwwIJBKErdUPIEY7+PHf/o1/k7k8usuE2Mto5HfIbowd0bOZImjj98WqESCdYvyy89mKvbNcmuZxNpViv9X/UVweFsNs7igB1+su3485sX2pTTfbAN/gGHe8PsdguK2suEld/hU65EBaJHc7e0ELMShXt4PDKr3463cNBoElE7U2c5udLj5mVYTVficbJkaNeJx4/JhJclqTW7+n0a4QKLFTej36ZBiNDNXZvDeN56Ssgsmk2Az7dCd38bg722IHLSiDodM711XnotS6tqj0H02qtruxyV2ZBc/+f9jTG2g6pkIhGbOB/ArvuEQgIsSaD5CMZjAzrj' +\n                'pCivCASTiCat5Bw0GopTx65xIe535qhdxH9cSiWSnoy1OOmqVc3YYwY3eqna2OspoYroe7MnmJVu39pqNeSEFGt9nRmCUJSn1Bz6VaTobL/lyu3J6kLFnKNsNRwOb8F5UYHk3m+rv4n/8MUwGE0X1J1B6xWEBFiSHA1SUCjXOWHxeOwYDKiFapoFcQGO+BHNQJGifD7178wZrxUjn2Mp0jR0UO/5HrmQ4RtKB43Sd1m5Vh3l/GATMZEvH1otqZPAFlTctluiGRo+Ld4JimuZ64pm1x4PguP+jFGtt9VaCNdFM+UPiUH/fwLm3We9SFns4Giqul321S/CSCbj/0p1pWw5Bw2IrN34ZIZUjEaRpG/Rvr0mE1x8DLMPkwOPFTNKgtmEn8G/mmmcMguoVCD65PpSgkOv+QdnntTWz+loowi4Jf1YLESxR5t2kbxe3LO7x+phkEj+ZRYQY6YfgXryM0fVOGg0CaaTY8LOmExt7TAqn9/YbIHZHXseOwYDKmaUZmCJ6/vZ/YMKWY7mc3UgewdEmhQK/ElfLKilcbZZMjQfmG+KRbvC+zgapKBQs3LCVCOjrdgfrzoXJzwLi4a7bP6DJY3IabWi' +\n                'KHkCv9HJgPH1qUvWazg3r4iACnmyyroSVVBDEAg7DUzfNpQOB7nusgTRp85nkLLFYSQT//EltNwm8SuXxSwST4YII1GmLyis75NjL5k35ec1B7BSKTob5ucsMK5XCpxw01hgQa4UJeDeRXSz151MxJK6IoBAxWha8AsMpdyMJxy+Eofx9pxabvOeMX+x4NyGSV0RQCDsNC1pm0B+PxjNS9yjqdRq1RUoDR0U8nmJaSQAAAAAAAAAAFk+t1+hlsYeLk54FgsRa9htSuewWIh/juZf0BOHLj4Gem3bu9MOxOKsl/yJyq7xsQnMszweGdvhifPqxGLuGGR3cM9JqoetxlbFfsplV/bWA5U92m1s+5o2ko2IRFbgfB7rjzeVn2CNMdYXnE6qqSNvrDrX5cAmYkMEn6ZTmRRWq9NmncBSuO6vAsFTp8IKKzzLA243I8AHk8nCPZDhyizDO8ZeL27X00z/VjOXWCSeselOZDJdaqY34W01lHJCCnn45mG+Yj94UhTZBALHRBNILvH98MiWWxP2m8XsFgmpDogpKBTlkr5OGYtUKhB9cszAD8vrr+cbG0nIRCIrcD4lZBZNqEDp1SDGUT4f9Plm' +\n                'usMgP5EM6Kvy7dHCYcR+8IFMuUWs02Hzlf64lEo5IQVcnPAsFiLWrZcYZfP3cXjpvYe6K5vwofREQAWyWWVdCe11vkgkf7wLdZYSLhfP9Cq0SwkXhel6FZZrhU4nVdqf7uCDkkkTR5EyQypGI8ZSuahGW0etPkN0+LRfJBKxXoskF/bweGRLo/shYv5/3aURS7vMJ52kbcEBc+C90CSidiIgjFmivKCKj8SQbbg2803kuQ10OmZn6nFHteBwX0bvJ4LLKhUIsDnsBl719FsefSG1sYPP0FsQ2+czwGApXHefpzZyOUwBfs9VMhGGwxyB2HIOGg1Fp+07j5l6Pd+JWDr8ecft+ysu6aQZhkPvDs5fCc32e04tN09qa+n6NN8Etq3UcDihI/mNIk0KBX6qocliSLhcG/eo4/2XYDCaLrULKm5bo1GCDetCxOH+p1cilI1YKZodg3N/z5zIZLrUUaVbT7XUtypQCL9Tgc49eZdGptjV5C0E5dIrgPx+MIeWV7aed7VzVKA5aUQdgJfQtDMwyvvz4vDP4o533eC+jMNisS4lnElPRqbOcm+529HKQeJCwe7RTbp2Ay/0eqMPsEWyaKk6zeTM' +\n                'r38L6IRUnQgEg1SzwUaCY5JUNcLIDv7S7k438n/f+6cWejOSDGDxTfsSO1LqA+WESgyrU/27kAed6vY4D3iKGctI7FWPDLMqtZ3Estb+9+Dc28oi9PPsthHfWBNUmpxA4z/e31aKztOgwcgSQyLpwwela4FY+m0NdyeVebHh893ZsYt0QirABLjsLZ//q8KU9Kz4qC11kU97v2mx7ytoeMT2L69Iesfhds6AnMZ+XQxnEdiPkuTBTGJ7mdkkPe3+I0qlw9+2i1GQmx8VJi2/bU9m6gVLYry1GuLPWlKqaui+oFP70M4BSO1oCMDmYxTJQ/4WzRWoJxDNBJIxoGlw9ue8imyXzEywM3zoNfyzucBl3vJYfMeA81IhTt5BMrtQlfFeQ5D0k9+HCDliXdLg8UExPBr7i2avkXIK8FGyEbxHfUJ+1O6lcy47TO72474lgmJ4NOsLzEOcA+PdeOckyCh3MorZhn35FLUZReJDsPJXSw+I9+uX4oi2+piapJQ6GcTwaMsWhYZQ7mQJrxH6733zF9XATqukelZ8VJi0xqm2u/uAT0IYjjzCK887xc0L0EM26qo5dxPwL6wb7DMTLCUG26fw00iN' +\n                '1+Zda/LDGh5eubIWH/gg9YQuBlDEbg+fcWvrHZ6EMAGpM3WMqzFe1D/kFP2ieSJlJ8nxcB7wCTJzpMHKcKdxvpQYS6bnaz0OQNgp/4wUyH4PvsP6x3Z0yzYWqWNKapVyjxORGcJe+Tf1Re1NWuo/nugCSZZQujh7ZDfnvQtYLiLmVZ+J4FPiYYCtUuMFKI38bcVaI+NLmTXeFOD1GtCtCcY5BXimWYZeltdhcQlIfLHi1ss6IRVgAgHpFeV3n67RrbAhP2p33LeYgLduuaGmq12fjSSGRM+b/V5FNsVmJljxxrn+m6y9/erNY0G+mXnE76ciFwhAVXZRB3Hs2I5UPsK6UctnHwQ9CtSCrHGvWHn+eHoEXNrJNrI4rzOOBJrtvYZsyUly7iZhXabrvYECkDKV/dCLLBcR+DQEYHO/CurzCZMpdY/8QhyusT59z6k0uiMHSBGIgysk785Ch0zmXA5X1h+w6doas9G61vmbNDzAdXsciTxFgitRDbhAOpKXXHaYwfHbYUo+DQEY1eaMtNYPSI6FXLTPrpYeDfPLM9k6jlWrFKAO10IXAyhiN4nBg4tt0ZyUYpKJX+997Ts668/LuOZOSjFJ' +\n                'Bkx+ZC9lw9w9Kz4qTFpj2lvT80CpIQxHtHTRV6FhWTGsWTTaHehyZm7jZRF693ZbyG7TZxawXESbpohcIB1JxbkFOHqINGxFExByxLq53f+/SUYep1GvmdUpd7wc4FuhsPeF5GAn21JUbTC6bld4jDBa1wdlD1auyYfGgmEv8pWlq4lE9fvFcX7VKOdZ8kTKjdy7zix9uIiqFUq+Mo2xuh5hm+mT7OiLCfK9nugTtxd0AapLKF0csyGFjxQxlcruSMOBhBOY0bj8t1DTsvmIiTmoapmNHOG5H4iODORzRlp4mVaDdpeHFgLPKtfuI0G/hccTtbPxoU7/kW/hK0Vn53waAjC30QV1DJj8yF7Km6Wj5/cg2p4GrWpgMaK7sfQ4lz50lH7X0mAs9GY5GMD/ml9Qp/NoZ44kNNmDtKRJ1M1orxt1VZK1h388PQIubeobq/xfW0USH2sNcektKVU1dN/99RBtTwPYCBuoe5+MGcbbfqGjrAmBu7vKEq1mFy36eXBDZgEIKccXkyZ3e/9fnAAAAAAAAAAA6yR2pMkG1xVyTdQvBzjfb7dS7mU43bZfN/+8hj31O6OO+oT8tcFX5unrXHMnJZaq' +\n                'GwvavyU1xDmG4SyHKk1OIJlpoovOPgh6+vsut52cS1UFakFWttksslo65qXevqKWIqOwJqgpJYBTyFs7Nq0VgbEekAEXuHWDxR86Sj/laTDgGeHtzzYhveyBHSWR/LoYRFt9TE1SSh2o2mBp3K7wBVj1zHIwneMp1MBiWWt/9XDOIq0DOdWfmFkc2ZdHAk34i5DFqgMYe1T2Y9J/w1bQ8NhYnpE1tW7VNTCWUdPWehwS+WchzSZzLtKMHD1EGjasSSqUYWQHf2ktHXPcb19RS28KcPQNaNiKYLSzDsoerEHTZQnYM4WYfQs9l0kGMPaonszJCpbEZXeiDuLFrQGofOSatV4OcKPepEKcoYJka6Dal7RG25Yvaszth9TX9t4nKrgYXTelPEafJdzv4VvLpsGcbvn+o+tTp2SjkxvYhM4v0lkLgXwQ9FaiGm2AdDkz5XOgu3nvDQ8VXAygldweI2wsT8aU1DfkEDZN9iMFMpHdMt/Hg2xCZwMmPzKZvO9uZvjNauV7b52MNa4rW+IWWTGzwuISkPh/k70gJ7+RUANpRg6QIg0bVimeJ2+uGdMoY5KMPFOiQy9wgv746Rue0LxveSw+7UD3' +\n                'TEDVN9LeU9t16L+uX8KyYk2pwNKlQf0KTo//4Dz9EmQmIOSVaW+n4+Hw9Ai4qY9s0aojD92m2cLH0BCd0cYoj4p50E90h9WFRpRXm6NxC6I4QX98+oNPaB1HpNsKUAflIGya8UYKZD+hKN33NL1HEoFERwZytyMt8uCGzAIQUpMYLeWNvIkrV8qh+bD4kx37a4kkR8wuWun53RGFBCCkO0vlvraKJD7WVYQlXxnI1l07Z0BOYz+gBqaNtnZsRyof94rHmrTJfiHDU0QuEICq7JpPnblXgucUBbp7yCybMiAxpUZl+LZeT7G2Ufd1R/TUi/oNhXukZoKFqWxaoWqYu5kPrvkI63nJoV43okf0pi12hX3NXSd0HvjFC4AKGCC8vmXcsgH3orRmbRuYb5Qm50zJIb9TxOZIlUEKD5PZykIgzcyqZHuk70KaQGCJChhxDE6k9psys4vM2jYt3jVM05bcI7x8Wy+pwwm7aKqFGrPSYTGnNkjgEwIdxSlB/E2yzVrat3BL5IqneWXZhO1x5jI4b9YXNLuk6C1t1TirckVcIUfqYXe0sV2hq3DPCRzorJB/znK4vf9XyF39lyJ4qKTkTGprb5QN' +\n                'OFGZW08f3+RiV4zK7XG8ntmIK7DAHSwKkXudXRE8UDuiwx4RqHZDxuRjySOjmcHO9xaGxX6odtyHtKlz4JbVCa8NVn2dOlgUtAwqP1ncxvQ2AviEldEh3dPh3T2YNkhK+UXnGqRmiOV1GFR+sqWR9ZNmWHRQwB2JnqgQGGWMBltPVAgMvEYDoy0DhMZRN7893DJQeOyGHirqMKj8eVc/9yFNIDDKBQy2ZfAyK4AWwwxpvpbdGyRwh9uV7pmB4WG40fwYFNnKBfiCDtK7zA3nKWPXYFBDDxTHO8yw6KCdOg+OQHZNVz9UojnRdcHhYXe9EvWjfHNPH0urN8EvH9/CbVZIsWc5XNDxbATtFTe/QqftlxYdFDBAZX1sZ9qrcrgH7Bf6h7pO6Dzfr3nLAwT7wXM/BgVxvEY+eNYcEofpiifQfPSOd7StobnCYlNskN0m4kSbWGCAFgWPwJrX+UH8+/rYzqlL5G0Oo0PyiwYI65+bEmvQSRc0e5qSh0rnaZwiGwF8QsTmnuA6TFxyDuOSVktun14+o5naa6NT9FrYPTXn/uCQTBskJSLQCYMlh+ldhCmAwA8UMOLGs8Cghh4okwh0M6QZ1yny' +\n                'NB89rdQtbG/uCj+u+7Kljkruc8SQ3TGDqrcttbGhajSpKgQGXiOP33tLNaFoa2/MaiO/bvSmlWwZHLlrhRrTUlXVmNTW3jUayWBN5fKufvMcpsKjqYHhct4vlVGtelOYMCWq/1bI9hYVUh2dHihg2VBv4xz6RQc6GJxV8StkewsBgOyarn6oWXzsi0AFDBBeI1DlGYv5QQTvitM0VcwN1wenvuFtZ3+S5eMluQ3naZdaBhWRom5jerYR7xYYIItGCfTfPrepgaseuweK6H2swLeRA4y2XiMfD9ONRXSwVmBn7fcCweqOvrpfS+CDEjjN48R3ws7+vlwNzkhsNUwb0oxds2QWwxkQJuqe0adicyQDnSmz74Ll658o/ILL8q4CqKronPBdJ4ZDGqz6J3SwKM9HH54xt6k4WBvQuOOSLsi8eBmbQAvvBpD7cce/QvhiHzvrEEYDBJloPnpHtVrY3piPQmOmldGQ2AjHKm5jhFMGJ1J7wxnXy+uwRGbXKZeu5n4MCuJljHwU0vEHsFbIgHEiwywwQAuMinrhH9Xaztug3ts46YoOdK0Qk1TcxhWmC+kaF/ZVzBmN3V/+uL2xSb/lMCiviQrt' +\n                '1lum9bStemp5VvCIKZcifhDoZlUys1L5DlNh39rO/jnOx/MEn8kBYf9itWFnf18ul1zPJtIlh/BR7w+GVDuvYy8eQe8Qy/KPUnImNbu5SoiujbrnM0TwTUEHadNmiP2as6uU3jS7uWaAExeSjfGqm6VkoPDFETxU8THUvr2xoRd/caLz6o71tUCHhUnI9lXDfvFOaUTwXezURmPc9VE32PKs/Q1SM0T8AAAAAAAAAABfvG5ZjvVRWhbPNC7xqoUysDa9bds5XI0TdU/m3TG3Ervfp3otbJCUiefIrDpYKzA8aw4JzfpFncSuBYnH4mUhSXNad39f1GjK/WRWHSybGNoVAgMvn8nhiGckNpQmg2k3ghQeO6+JhJy11TEkcEvp19tKbxrT0jOm+YlDKpPZv501OauKDuOwU/LKrxXH4tFuGSg8dkMPFT3r4pNjhO3EXjyCwyCL+QMzuINMuUoT/WRw3rEuaGtVNZ/RN3pTxDZhyqV5AvNZdQQ6l1KC5Zp5/X9wSCaDEpzFLukTaZzNeCi5/w59rI0dVFV0TnignUPLfYjMs1IzQUS9EhtKE8+6TUnNJf26ThE+dssgjAYILz/2J7oieKB2' +\n                'wolX8gT7supFPf6B5G1n45TB5pU9p2IbLINoXP9JF2TzLBGX/E3spSsk1r2SLmj2sit4RJrFET9I87bt0SF8MS6erXW+tVrWF0/YtF/ULWtO1OSWEjir+pLmtO7+vrXQRqDXMgvvgghHIDuopZEqUST3W/jmnj6W8LE4JBPPCU7+4ln7yQH3dydqcksJHNt9vfj1Ae51R19ZmzwiTeyGkW2EAY+Zwer+dJi45BzbOazgWV5xIXxbtyqkOic8UMCv9QtD7D9UO26Djj4hYnNPcMCUkttFB/9Ycr/qn9/C7mcRaIrPnM36oBqBkNhqmDa5esvZO8YVx5XHMyw6KGCAyoY0RelO6H1Q9pZqX9DW3oXprYFPltXaHHCiL7aePqPVCmn2jVgrZEC4Qo7Jwu51f2BKSeOsjfEsW4b5CwwQyyPh2bLrjwLz7ik5E5TT0iVEyOChf1zQ1qq1jMal96JurYGT+wgjjwLC1caPRlsvn4H8/5zSiP26xXcFkVfzWdxHHSYuOQf/SSv7WCIz5ZrFV92yvOJC+LZzJXe3Ykjgls9vmcSm2D2nTMEUfkHreVcB9IuvdpEqkzc+8p0kmywKGenhYyK2+GIv' +\n                'VTaZQEd1f3qfTVbVpHsLM4IlZ0ZqoRdMuPUFfesIL7LMSMEL9EdfUzcwiNQnXew6lo9DJRgK7RAXPSMs9wFhUa5O0J+Ub8wT/UtHQcRTmHMbWz8N2ZM3ZS/8sJZ7ZEBS4CN20gqJhAyjrjpwMpsY10GcvSM13oUm+v6/EVt8MZkDlwdPhaqbDcWK1PtINrlwvsYL4/xBBKge/zbcS3CHchMf3DPthFO2CETjPjQXZNMP8RtuqzjNOWQ1Hwp3YbhaO1aU9QnPug4whXCEuHJF0Eevs70il6488rpcL29rVUp0vcR2H09w4c/fxkRx7cRe5hB4TB3ArxZ6yinWPBE/KC3tQRd2qFmvrF8hHpmj1e7UhPlJqH7zOzzjbKWW4BPk0SDwmDqdQyxrxARk3Fl1Y2nV9eXRlWyemulfBDaYuyTJ7MjaZqTvRNaVCMilsurGxAwiNcBQO4A4wZO6jGUhAxzux11GvJ6P0zEBGTdRWtHY4uVohuylD7E3EI1XecmRcJ87aQXKQgZP61CDFoDK7+xFavMkG9I4WNZzr+GBq74kL1Tnytm/jAIR8YENzBn9kLxNuw9DxgqVGERqnaB2HaG/y/E/VwEq' +\n                'K95PiWHhcrUnuFOoT3MkgbCx5kPfH0thGMw4Qlw5rGjSt/fXvzfYITEDhkowFMcgFKokY3Kr+lxuYA21TrrFdDlHZXQEA6PzCcIV8Lxx5iMqWLlH6YfwRXtM3xi0d73Ylwm165Bsb+BzCDwmgGDZC/7cQA5B+QN+KElIxuRL6bhyjsroCAZb+wYzDp4XSSsaWVCFYWnnKU665PT85sQ2T8p7z5XjDnRJfX/RhqM+lsJSg2EQ2FrWkE36oQIbTNMSkTq7dYclRPrdRuy5FA8VGD1lmmsehpEUwj8sq9cZEJrXE/4GLdRoNtCmBlay+8HcIhxaed2QlJbv0m28obFJNQ537aAjXk/Jy/05W2to9rkN4OrvpvTUxAQi/x8ahTLn+Wm4Xt7WqpR/biAHrvKPPzrQYjuBqTj+ZiTui3qtoae2gujdyFZge6eMxW8oHiowx5slekX6oI1bQXTgZCsws19ji/9+rgJUS8mvnAwF+AjOWTCK+YtGro/FjanMVcOIgDSWx2dtDrHzPKrh5w3XurtiAjJuorS/1QIPhyAYccudXKdUqbcSzoQWadh96DxWimGEeF62c59CC7pssHQeK/EtW2Dqwc5H' +\n                'dqw19xKDaRwsa7fZ/s7bX/zNsY9MNRqDH3nAEsMWBYLwq62uYqdMt+GlgByC7wb8Z6IYRfLLI1dRFGZfXfBNnb9A/S10J4ZYoDk9P7cxg9oFpAnRkuOwF6n7KM8LQGX5JamiKUK/PXzbdeInA0Y+ArMm4QxatdBs55aOgpWmLea5c/OzY26tQt9XHTgZwwzl7lSbcinXy8USmSr9ZeLRRvjvTpBWsChktwQeE0Aw4ovALt0q2tUJZ5MrSvSK6V0Hb+b7e8bcR4Qjmqy3VfYWZkAaS+29uAfWSF6o04mvYwWkG8IgrbSxPXU7MriXKfIRmX5YS7MyICkdaDGTztocf/9atsDJn4GOFrvV4n9n46GlnTTuJdIzzZj4roU7VKLZbfcK+ssQXnl5XS6ZubukJY5De2dEM0F4AYb2zohmgvDr8JKjuzR70rzX+mLxjR1VrdnX0BHFVx4L0+Rxsb3/3qpsL4CO6v70XuV9MfbIgKT1D6R/8ET8oBrdycNR9bWV6nZkbTNS+SIAAAAAAAAAAIWQnxb1jr6mRilFc6rxLMwKVRK/Odt9Lnjb2Fcx3SbVKc++CGwta0ghi102WDoPmxUs0q36zXis' +\n                'g6ORiOLHlbzDudplX3+Sap7LoBssHYnDB7X4UJ8vqep+6NbJJpQNzza2fhqvO27KhgeYWXAkJav7eEnf0xqzaUx8V8yTKlHi2WQTpg6KJ/8mPqVmxxWmcWxx/DRDdtyJSk9ZUoRjevja8xTpiyC88lcnaMFKuWaHEIjbfGguyLuIcHX5U3pqYi56RljzAsKiYZEW2+WCCE2ofd4BgybnCdzAGnecaZfo7cOcPax9UMimCjOhoHiowMGoK+RSs4uXP3Rr6hNKiOmiKMy+uv2aJ6vq2U4GjHwE9IlSsXgiflBc9Iyw+wSZWWAX4BVt5Iq9RDi08qc9NTGMUormSf9YhbUV75JN/Pt2DGYcIS6SVjS0kxlcxZp5hpzaUZoh0ZA+MpSBBbW+XC0ZSs6M1F8umEONTKI4Epzbm2+pyr7+OdSBsmAJ7wuMQd7R6/aRpY4VTm2mTZ7mSB9UsG+OzxP9iknYXh0ByeH1r8gmURwJTuP2mKMwde5nrVrHgi7sTbJDjdR8KMGZ2nWJ9oM32xzoks3ON8V8Id2jUwWX3lA8VGBqQvKqVD/3k11yen5zYhup4jKHUwdFnfFWoZ4Pwt/kd8Yd07TNnCJ9' +\n                '5Yd/A5hqNBuUnrKkFcb07WIGEZRgKJNAY4DnWuhOEbCL53K21tDxb1CSkJHVls9t6GeV7D6e4N98+SdIK1gUMshqPhTuwm20cRnNp42swPbkAYnNEAy265KtvDoCj9/3sqAXwtLTUpwgDav40FyNazSnj5ui93c347RxnY8jHwFFvkI8L1u3wfceVf79iOVdaFMDK1nz7m5ls+nE/wc6qncqwzma5evsh4Ful/hCp1sRDi2y4EhKSzMSd8s92N7dvVEMrHnrn6U1IXlVKpH1x4qwqWhG4GptQ8foC0vwszoIybNUaxYe5TnxwjXrqZC+wb7yN2YGx7IsIJIzYUVpqusBUjtvwyialGlTq5Nazt0nKDj2PhM0DosEVeyhK6BSd6GyxJeP+KKlUSLKE+VAhiJ2E1hi0/HN243f3gi3bP5dHhLInkoXig5WgWsDlphn7l95lTMD7Vmv7XSLq3jXHW2Sny35PlPu9dio+Lp5jCr2GbFpjjnPa5Xdry90kQTi7CqcgOCIZCfOXI/YgluV6sTg2Zk6xgJxRpnDpRcwdvk9GxUfUKKfQp7VBeorx1lGNGZaz9x/S5hhsftTKSNC98chwAgOhkEw' +\n                'hpPNFpb9e3SHJzGScTaxS9NEbIpjoXIbZpo16KZoDkrKtljyOVCaFqTl3k70Loq5N6dDXug/CNkTTmI54mx/loJ5Gjwt9nSIP27wCoMpFjyOWn5C/etlkVyq7kx5gd21GfI0eFrx6A0lXd3j7Zi9cFCJijKpnMysKMpFGdpOZlauWYgPTLMdIg2XmPo31tsmMvlo8LT/zRqgDwlkTyWFRfo61RdeJN5y9GxUfF2yRhVxPoD7/w9+IHhDzytz0qr6vRfqNq7fYrT9ERus0W+Sz0q6p9vHLWfgs0FrXa1J+tO8oxaySRSoixXRUAaK7PkU4nwd6+Me/EBP5Ix1m+2iI37c/RQbUix4TlBw8XwmaBzmlsrBWBXzvDXSpks7tIGngAz/Kf59/fYe2frD1bqksGwmY6ke9ZnRA8EZkTRAQ0H3rU3tafIFVM2dlkm2G9aryMO95+rbE2jRMYmfsCr7ZR0Y41Lh+ufx2jkjWu98psGhu/XgqO5PepE3eAXPmgseMThxYYC/jlvZ+DrL2zzlgAJ15RXTi4l+Ry0/IfD7vMYtlG63ho6jlbo8JI0hlC4J5yI2Rb/eOYP/ZP65AuQbscl3QWMNENlX' +\n                'w8sXIrWNTsyieuxxnK4MO5n+y1GkjBX7FGWsgm0nMyvhvQR6116/AXn3M6+UGWDFZy7JbEGjxHXCf+umUkaE82Tv0P1144c07Z5gBAdDrhj7jimTue8UTThFPrEMYlqBaXhIB0I1XBJIz0LOFKbunhysH9YGMS3Oe4LWukeS6budFBx7H4caB1YWuA3BHEouuEnBmPIfp3d8qRgByNmlBrE0jkh+wnOtQbINHph7OkR0YKtVo8+744TmKANFdvIKG4fRbYl6YXMP4n3v5F1SWIPN5rjKPb63DCNkftAdERl6Nio+oFkjhLYfQPPxiT8QddRX0UQEcdxFWNo0I3A1uNymEWWH/CBDjZtn08mrJtArC1yI7g4lF2/nejgqtdqQJpzEctnY/jFjxB5G+qjLibervHcWQvUvfR3khS8SbzmoxrowJDOboGAFB9fO6IjIj+6Cxhogr65XokSJJteAEfyl5yg2pFjwByvOu49LTL1Je75K820koTyv6Zu3aVV9EvqevQWntanowEuqW4Nr20JzFI+sO3kFkIOEgShRwSHlV9NQbFWw/XL/mWrLTz1hPtoMjmTi3APwhoNW5rlJ6QTq1yq7Cw/8' +\n                'F6S1E1lncGrjyOFvBNU2f/hPMAKNr1cMGEbI/L06IjJbgSD39sqRCNRvojHs6j6mM02UdFM0ByVYQDlmworSSb7W86eanyH1aMy0g6X+li3QhXUbV+ExWv7QAj3lL9GOSw5bXyDmrd8aMy3pbrGrTKPOEPV7ZcYEEI97qNYsPNerB6OhEHPY4WsNrRKRvtVs8vNmQzUywJcuVXcmss7g1AAAAAAAAAAAywKkdt6bUCnk4y/Ui556wnNLZe4shPdeblOGvM1+EK8BtPyE58vKP8/oc1xlkF/VNhO/2g/0wuYRO4csMef26C/hi6JVBSrr6XS3LrxIoeQKvFZBuJ2Xm7RqpeYiArZuROwmsMS7/4emkDtbJ6UDx39oAZD8meZHl6hKOqcajZzdEu3hYDfqfMVUJR3dDchOiMVMfZVr4xNNkWlgSGYrXbCAcsyZCbmStd5ZYsXJfFGBuAOtGbY3ybL1l9lKgjDsCwiqxV9WXaTxMn/SAXKD1q2YkZ54815jarlRlnZ1H1Mk6SFnClN3T7n9PRwV1G1IkvZhlPvaSF9aNdxzEQFbN97T9HBUd6k9wAoOs4HNDY27iNgJxl/kNhYQSZe+rLpV' +\n                'IbcKyVaTsoxZ9MXiJUEYdtXbXrULIfSZVdehnPVcCW+pcka0w/hRn4VS1IeivTg1VGNdGBKXw1Ajwu/chRg78p9h+W7MDJN5U0iTo53cj+1e3wtZqgpUy6wsbRqfOJRc1667oNiqfecqv6AMCcXvKNhMxk889y+/IAP2TbFYeLOnJMffwG7J+AafMj9ogIaCzClqzVHQHJQFXiuuXMDFw2Jw4sIdYwG2O4QnIDgiGcDS8JAOhGq4JFL8byd6F0XSxpU8jOlNiw/gCfj+MJV1PmVbLHmSKE0LmEo31UNH38Tqta6/iAjipZo/0sCQzFa6nKDg//hM0DhMJZXkr63hYt9nCPSzvGMCv2IPI31U68qTQp0QHBGCYAl9T9CM3dTajC+bVy5g7O9winx/GMS0Hzow26Tf6dP/QAbxmn+w8Htfa/fdTcGe9B9tBkcycW6P+fvMhmpknTMwjI3lZ3REZIlxsPlyoCks1hpHJD9ht9jv64UR1MgnZpYctr5A0UejqrNfJfe4Et52FU5AcEQynVE9drZOVwaT80eax9L5Cqibiy5EdwechSl+uZ09haxpfjfmLfx9QMN3byWk7pOeW+BFyFDdj7Wt' +\n                'hu1bpxH/GVLpHQvZz2FrNTfgqyVuQI/7lgf2wDECWnoLAvXhFtI8nfPYSGv7UGUMYhz/J8QIdfV9QMtx+l/TSm2qZhbaopBin181SSPshOLshHw9xQfDswJaNmgEPOIFqL+ebE2sCxn6gIvi6b67lLW5nFJ3x0+jeNm8lfA5e8zjMuUM260mJMdPzhKTMnl+Fyns6y6nCavC1rn2mVTR+F2JjL+6uFUahZp2+xfditsb6FiGNi9/tfZBP4/xNs2K0xEPpbu341wKL+7VFMxNEegwEO3Nfxq5oedd5V9C1YHu3kpVwTshtvL1U1/5ThSADMG0bRiIdh684V/bZSmROy0l6JdacYHCcYF/HOLXpVQuUsXLXFMSS/n3pr7vnCgdnnIufSHy9W7OFw2bgdyn5g6bggUctJQbHnEvYjxJ1zMh5Fz6Qvn33MuOen+Lug9gjpiDGgEPtkZHTM8NjolbI6mShVhPsnqVjMK1cgUzVENC1bjphO/zpQEtGzQCHnGMV6Ziaq50GAv/GfwG49gTEjW6nU1qfG3+ydRMF4+G7WVQZSPmoC5SiAN3LVwGIpOJiwH0/gtpHsD42r2K7YJZkUxOOuyYW2e+' +\n                'sQ3wgn+/lqlqaSea1Pja4eeGidzT1f8ugS4aKx+lU9H7rZDW66DKGBrFQ7I0MQ45FgT33yy5eCemJBxpURifAnU1E8zqr3xeZPKln8hMTvokfSseSJ9fWttk1xirR0xIefSnofInCkAVc9qDKpvrrjSXhnloYhxyUUg40qIwIwTwr2U3/XL2hR0GAj46a0S6Z4WIw85u3XNmqJP3zHCs/9TSTim17anfOFYyFHDqamwHw0GMDlpKgyvLsi9WNbrNBLRs0Ah42QoG7lq4DEQ7DzshH0h2yPnlCVjDiRLu3pjRSznNv4sBWTl7KSBy9Bvgh8BAkxPhaN6tJumIR8qjn04UDIScZ4W71f9VHbfz2FOgykbRXVykDc1gIMeH/jRvhLdtzxXD+1fe/aD8oSHkzkuNe2CWAS09msZCrSmKLGQIddi9EPCvFLNXxup7g3SsTWMh2JpFFjLtqWcJxxmyP/dsJLvzKLwGxmLVJpEsCPI84l7EeJKzZrl4KD9vTzm9wIyPnp1oM/1PORewnnn0N1k94G+ywIwQ1oh4QbHRS9oZsm7uMhOdsLSUh2Z12T4vglk3dxmHwFiQ6ax4PUZhdfGCfgP/bIcJ' +\n                'lF3AqDU+uH9FFvllirW5Jj+Vc5h+sCDvuFUzC21RSDEq5qkbVCvLQWMx5BPGFgR5QI+OgYDTEaDv81FhwyVQOtBmIvm9lXDViHbZog1LjUmlUzE1VzoMi+Fo02TfkcQh9BsJ5/UKL48SsJsPJMGhLdpJzCypWT3EH1w0Vj5Xpr9U0U82qFaLgq983+BD9kGa6momhclD+Lzl3L+01+kdK7J63d55nQUga0Q8rtbmq217rpHJ9hvoRT64aKx8rlFjEce2UyLjMqTSPBSRuamS0I+1mC4DEcfKcKxkKODJ1NiJW8KWD1X8xXZCPpDsje/Xb/BQft6ecmc9z0XweozC6kqgYFSUH1yxWBD7W7De/Zxe/qHjvJrGk27dS0rcgAPrdBgI+OixDdIUXsG3KIWaIii8n3NQFylEJwoGQk69zNOXKu30Mxwr9gWZd+QKZqiGJVAwKkqBLtbdio2gpwN3R8UV+HqXDpt7MCPqqWAaxXi346o6c/utpg+2mTEequWXAAAAAAAAAAAxDvGdYgS09CKTcaZE22RVDeyvWRqWB5JcpJeLuKYklhwrGQo4dTU2QaKVtYLNYCwyedzBZCYnfcGhlKqfdkJx' +\n                'E52AOybf0KGuUcTUQegwFtgT+kStZd/BrAvyvEXU0hMjvmqSRsUV2UnXTQiSPc84nQUDISfQZucvf97/Xk1jx6R+KgFVJH0HmbFv8S+ov+1GYdQ5jJcqr9/Qu8ijP5VC3KeWlKUdBsuwIOu2faHnJboPBWNpbao05PGkgNX3bKfEOONOlRDq95OegSQ7ZPL8je+uRgctJc8sCPOjWG/wTtelY3WzzzpWIMlHzkDnhlBD+KPdhvGCKVaLeV6sammHgAMBHx27Il31NhLT9xReAxifddowDew8lXDbnDcgyfO7Ih5Xa3PbuHL2UkDk9TbdRDviUYiryKriH/442bNXqP1Dym7n5PEXyqNhS4mkfuz+NOcy4cZinoN0LEMbmbHUzzoWr4PC1mqq5agESZDpHCYnHXZMo71fkcS3TD9YEPl8bdBF+EGixn8a/Rn+YzFPyPlXI42YnOmnCQddUwbujlX8VAKqSPoOSPpWPJAjvrRl376rylI/dmyHfSLYvOHuzE0784XgReO+u2mzYRVzPhDqrWcg/UMots6xDnHl3Cq9zETvZzfgt1I/FY6kErCNmJx0xS22zmGb61mZK5Rd6Ios78oJd29M' +\n                'o71rjVt+N4TrRz2xy12JMMP7osKbSqB0nCgYFSXOF2toMxHy0MQ45F/Tute+hLcf/G7RWuX6gJs2zbARbF7+dymRhEdSCVjIopBwuVlgRghTEg66pgzBAToMBHx01ohpaR4KxtLaSWhz20l05utHUXqDiv30BZnJWkrNM7TiH5lgRslPwDSX8OarkujRy46iM1TH9WY4VvHZPuFwr3uuTWFr0nvCKuZ8krOaEDl6g3CryLMwS46YkL+WcodjCwKyW2fWB7b8bhXQMcOXzlU/5ha6WwGwBrUlqJut5ilucMhqH1Jdd9NDW24QNXBXPfoLZg77Khf8lat2Mnqel2NL9kutnWRiRYv18YMMrtvD90jFyPVCZpEx/5UEShzcSLDLiSli3zz4uGawueII6TDBNaFPs/BhGnZ8jSYF8hwWATbWtxki/sxUnjcIlDilkH2LC12jjlgD1JxaW8yc6m88vO2uJG07c//l0rh+D94i7c5eVKuxyoGF7B3n+I/oBWG5rV4ahwE1oIwvKtvWZc7MdleAtaeC9YNYPtyKLu3kez/J2Vw1Br7nD4O+ER1sTgXupgO5CVk2dBAQPIG0gJ/eXSxptgJ9DHdK' +\n                'OZCA19XIeVMJ1B4WSHQGtM3WOxgmUF5f+Z3C9JsCmOic0FQKlDy2f7yoS3+JHxfFcj0ds7eN8qZ4qm5x5ztPLhQz5pmgcWcNhPIb5FRiB4KY3zMntNIPL/BJ3OLTdp5c22xgGZZW63pkh0ayB4tHgzLNI1mNy63PHqSVW/DH2oXpoUNAG51Gtf2Spdm77CG4yBOMeQ4Ljhsu4AuabXulYvhXEriTt/H86yj+2AvqlJ1WSmXrikDqTGyZiOhHSigjRTWJixIdjy2r2MAyMazL9Loukcq5hny9eWC+Pe+OJjoMEal3YC/W8MtQ4a0WyTUn6uIulANf/YkoZtEvXeLOGv8bGEGrm/OQn5M53oz+DUOWRyfIxIoL91JFAsaqrlMcm5xe86wQtBNPovpJQqsypT8WWmLlURIrx0FI2nbm49eSSEDl5GSyp9NyrkPWl4TaIztyoQXhGoakigSRSUGmOLS2hSXJ3nhl3eq6rKbPgAIKl3PCULa9iMKE/7tevTOTi6DfRyyPak4q72y3TZUcMkJ5g3IqMY1Bc/fN/784m7IHTAr5OCwCbIpqDwskOgNab9rlPF+Ikx/Gi5iWflOKw0T/WccaqOY5' +\n                '4vzgzkOekimiDN4kedjNQBnon6LI69jp9Ea7z/OYJwxDs1M+IoTkVdgvDc2OlFBGUQZvErJs6CDnOVeva8VCbQgezlpAwW+gOxk9T8W/q3t/5mSI3xdNQg6YFO9wWATYgTeshXw518axczJE4YWoIWlcP4lvEfhn9s8GV+Pv9SQaq/J20Clj1S2jZk51uR5eAom9mBB30iiQwf199BNgjzxVN7b9k6kXqhIQfjkZouAGhtq1MJlreNqmsFWe44Juw04v91YIWodtU1ikT/9BN/xYdZWzWUisfKUJXMfV9n77FH9si3VKwL/rJquR3az5aJbvxWekkXPKmjHhHnxcM7vkQYaxMxWpDdt5O2iav+RwtKArp/ogjuR6OntzB/lRjOzVvhSjaCLu7Um5I7FE2Rdwi024s9wxYIghnydl/tOz+o/c8fJ6CZELLTH8pgmbD1LEo3jtbcxQzL9eutmBNGvVghF/ZipPlM6aUNT92d8rJbz7RSB1JmfEK2YfSfy/SSQg/HIyWd0DQ23UGMK7PB9uRRf4crORoIVjvGmvH2jUPqS67ruGtgHK0EwItWkUrJTKywmAyZhUw9hzmjc4ZCb+xcAtusrC' +\n                '3qnXeL4NOz4ED2ctIO65UOWw6jd7spBF8wqxNsu0JWBiAZwHNxIs++hrkwwTKC+hzBzrVC7lN0tTj9KKohs6CBthIjrYnArBNsJEdK0lFJ96I9Pp90ydBr4h9ueZaMXtz1+GgDYnjHf3BdYb61qcME0rR9FS3OCNX557/cI07Pgkd3hYPc0Y6oZ7pnxEFdWqTOGXnVppiZkAAAAAAAAAAOxk9CEzxpbxtXxVacFrEXHBx5JvRn+Ir2VNlv4PPi6XFfk21ajEDhm4pyxSqfGulalRfaoh2xncWNJxBPoY7pRZGKFI8q2HgFzdFina9lfEgnTBUWT7bPrR+xPbxuBW8n1v2RDPYJ9qtj84vdmpqk09n+f69SbAA3S7xwaHFJne32MHNLa4Uio60+0DzQrCb/reryCDwCPUwA1CI07K4buFOMuoXNdulsQCJQ5uJFjrR7w0EwJqXQWv16cfEUJypJeN94TMP2LjuW38HqFEx4Ehss85FZbIrjGOTo2VCRbzzpVWzD6S5WM4WlCb3X0QRzWBKaC156+j5vOH42NwK3ngdV1WU+lAAXvpA6X/+fQSErU8LJDoDHUzB/MVhX7E24+vuGoMYdMe' +\n                '2eXdgYYhOVJ3+KrSn9Yi4iW9qBQ1eHH+dXEXSo+h8MoTf+xgmF1lYTBEnsGdvH/npUDU3UH0zyzcIGrgrnrpFluRHNDi2lWosjBfkPlHEx00S/nsvVLGt10XxmXSQz7QGCJP7sBesf2eWemShEtkV5pWjr+kpd0Ho8YOaHFtpFR+LLTE16IkVoexdjBMoLy+QTrupjLzNn2ZFeNrvGdmO0DwPuo6Rl9pHC0ow+CwCK1OaCoFSh5bsQXFt2EoW9BE4b+NGltcKRXywGF6wwFMdLf16PHRHMNZY8tMSz+nRe+dGoRGnInfa+M2MIJLK/s91fR09uYO76L1jGuD+y1OGEZ25F8K3zQRIHgfdR0jobq9Ypszgap+0a4dd1MZ9xuw/tHIDaMumoRVCQg/koJRcCmsAWNVV6cOp8lpRVGDHQSOZWgmBNS6ChH2UfiIKrdJ133JbvZ5PYrvJ5n1KwQtzUju8LB6hzDJIvGi7Q1Uc5JhQvHTL9CXx0pnTShq8OLhgP18yXSMvtJxfnBnr09JmpOCkKns0duziOOykzRN0XInNBWMJQ+j1g'); //==\n\n        // Variables\n        var sigma, N, h;\n\n        // 64bit tools \n        function get8(x, i) {\n            return (x[i >> 2] >> ((i & 3) << 3)) & 0xff;\n        }\n\n        // 512bit tools \n        function add512(x, y) {\n            var CF = 0, w0, w1;\n            for (var i = 0; i < 16; i++) {\n                w0 = (x[i] & 0xffff) + (y[i] & 0xffff) + (CF || 0);\n                w1 = (x[i] >>> 16) + (y[i] >>> 16) + (w0 >>> 16);\n                x[i] = (w0 & 0xffff) | (w1 << 16);\n                CF = (w1 >>> 16);\n            }\n        }\n\n        function get512(d) {\n            return new Int32Array(d.buffer, d.byteOffset, 16);\n        }\n\n\n        function copy512(r, d) {\n            for (var i = 0; i < 16; i++)\n                r[i] = d[i];\n        }\n\n        function new512() {\n            return new Int32Array(16);\n        }\n\n        // Core private algorithms\n        function xor512(x, y) {\n            for (var i = 0; i < 16; i++)\n                x[i] = x[i] ^ y[i];\n        }\n\n\n        var r = new512();\n        function XLPS(x, y) {\n            copy512(r, x);\n            xor512(r, y);\n            for (var i = 0; i < 8; i++) {\n                var z0, z1, k = get8(r, i) << 1;\n                z0 = Ax[k];\n                z1 = Ax[k + 1];\n                for (var j = 1; j < 8; j++) {\n                    k = (j << 9) + (get8(r, (j << 3) + i) << 1);\n                    z0 = z0 ^ Ax[k];\n                    z1 = z1 ^ Ax[k + 1];\n                }\n                x[i << 1] = z0;\n                x[(i << 1) + 1] = z1;\n            }\n        }\n\n        var data = new512(), Ki = new512();\n        function g(h, N, m)\n        {\n            var i;\n\n            copy512(data, h);\n            XLPS(data, N);\n\n            /* Starting E() */\n            copy512(Ki, data);\n            XLPS(data, m);\n\n            for (i = 0; i < 11; i++) {\n                XLPS(Ki, C[i]);\n                XLPS(data, Ki);\n            }\n\n            XLPS(Ki, C[11]);\n            xor512(data, Ki);\n            /* E() done */\n\n            xor512(h, data);\n            xor512(h, m);\n        }\n\n        // Stages\n        function stage2(d) {\n            var m = get512(d);\n            g(h, N, m);\n\n            add512(N, buffer512);\n            add512(sigma, m);\n        }\n\n        function stage3(d) {\n            var n = d.length;\n            if (n > 63)\n                return;\n\n            var b0 = new Int32Array(16);\n            b0[0] = n << 3;\n\n            var b = new Uint8Array(64);\n            for (var i = 0; i < n; i++)\n                b[i] = d[i];\n            b[n] = 0x01;\n\n            var m = get512(b), m0 = get512(b0);\n            g(h, N, m);\n\n            add512(N, m0);\n            add512(sigma, m);\n\n            g(h, buffer0, N);\n            g(h, buffer0, sigma);\n        }\n\n        return function (data) {\n\n            // Cleanup \n            sigma = new512();\n            N = new512();\n\n            // Initial vector\n            h = new512();\n            for (var i = 0; i < 16; i++)\n                if (this.bitLength === 256)\n                    h[i] = 0x01010101;\n\n            // Make data\n            var d = new Uint8Array(buffer(data));\n\n            var n = d.length;\n            var r = n % 64, q = (n - r) / 64;\n\n            for (var i = 0; i < q; i++)\n                stage2.call(this, new Uint8Array(d.buffer, i * 64, 64));\n\n            stage3.call(this, new Uint8Array(d.buffer, q * 64, r));\n\n            var digest;\n            if (this.bitLength === 256) {\n                digest = new Int32Array(8);\n                for (var i = 0; i < 8; i++)\n                    digest[i] = h[8 + i];\n            } else {\n                digest = new Int32Array(16);\n                for (var i = 0; i < 16; i++)\n                    digest[i] = h[i];\n            }\n            // Swap hash for SignalCom\n            if (this.procreator === 'SC' || this.procreator === 'VN')\n                return swap(digest.buffer);\n            else\n                return digest.buffer;\n        };\n    }\n    )();\n\n    /**\n     * Algorithm name GOST R 34.11-94<br><br>\n     * \n     * http://tools.ietf.org/html/rfc5831\n     * \n     * The digest method returns digest data in according to GOST R 34.11-94.\n     * @memberOf GostDigest\n     * @method digest\n     * @instance\n     * @param {(ArrayBuffer|TypedArray)} data Data\n     * @returns {ArrayBuffer} Digest of data\n     */\n    var digest94 = (function ()\n    {\n        var C, H, M, Sum;\n\n        // (i + 1 + 4(k - 1)) = 8i + k      i = 0-3, k = 1-8\n        function P(d) {\n            var K = new Uint8Array(32);\n\n            for (var k = 0; k < 8; k++) {\n                K[4 * k] = d[k];\n                K[1 + 4 * k] = d[ 8 + k];\n                K[2 + 4 * k] = d[16 + k];\n                K[3 + 4 * k] = d[24 + k];\n            }\n\n            return K;\n        }\n\n        //A (x) = (x0 ^ x1) || x3 || x2 || x1\n        function A(d)\n        {\n            var a = new Uint8Array(8);\n\n            for (var j = 0; j < 8; j++)\n            {\n                a[j] = (d[j] ^ d[j + 8]);\n            }\n\n            arraycopy(d, 8, d, 0, 24);\n            arraycopy(a, 0, d, 24, 8);\n\n            return d;\n        }\n\n        // (in:) n16||..||n1 ==> (out:) n1^n2^n3^n4^n13^n16||n16||..||n2\n        function fw(d) {\n            var wS = new Uint16Array(d.buffer, 0, 16);\n            var wS15 = wS[0] ^ wS[1] ^ wS[2] ^ wS[3] ^ wS[12] ^ wS[15];\n            arraycopy(wS, 1, wS, 0, 15);\n            wS[15] = wS15;\n        }\n\n        //Encrypt function, ECB mode\n        function encrypt(key, s, sOff, d, dOff) {\n            var t = new Uint8Array(8);\n            arraycopy(d, dOff, t, 0, 8);\n            var r = new Uint8Array(this.cipher.encrypt(key, t));\n            arraycopy(r, 0, s, sOff, 8);\n        }\n\n        // block processing\n        function process(d, dOff) {\n            var S = new Uint8Array(32), U = new Uint8Array(32),\n                    V = new Uint8Array(32), W = new Uint8Array(32);\n\n            arraycopy(d, dOff, M, 0, 32);\n\n            //key step 1\n\n            // H = h3 || h2 || h1 || h0\n            // S = s3 || s2 || s1 || s0\n            arraycopy(H, 0, U, 0, 32);\n            arraycopy(M, 0, V, 0, 32);\n            for (var j = 0; j < 32; j++)\n            {\n                W[j] = (U[j] ^ V[j]);\n            }\n            // Encrypt GOST 28147-ECB\n            encrypt.call(this, P(W), S, 0, H, 0); // s0 = EK0 [h0]\n\n            //keys step 2,3,4\n            for (var i = 1; i < 4; i++) {\n                var tmpA = A(U);\n                for (var j = 0; j < 32; j++) {\n                    U[j] = (tmpA[j] ^ C[i][j]);\n                }\n                V = A(A(V));\n                for (var j = 0; j < 32; j++) {\n                    W[j] = (U[j] ^ V[j]);\n                }\n                // Encrypt GOST 28147-ECB\n                encrypt.call(this, P(W), S, i * 8, H, i * 8); // si = EKi [hi]\n            }\n\n            // x(M, H) = y61(H^y(M^y12(S)))\n            for (var n = 0; n < 12; n++) {\n                fw(S);\n            }\n            for (var n = 0; n < 32; n++) {\n                S[n] = (S[n] ^ M[n]);\n            }\n\n            fw(S);\n\n            for (var n = 0; n < 32; n++) {\n                S[n] = (H[n] ^ S[n]);\n            }\n            for (var n = 0; n < 61; n++) {\n                fw(S);\n            }\n            arraycopy(S, 0, H, 0, H.length);\n        }\n\n\n        //  256 bitsblock modul -> (Sum + a mod (2^256))\n        function summing(d)\n        {\n            var carry = 0;\n            for (var i = 0; i < Sum.length; i++)\n            {\n                var sum = (Sum[i] & 0xff) + (d[i] & 0xff) + carry;\n\n                Sum[i] = sum;\n\n                carry = sum >>> 8;\n            }\n        }\n\n        // reset the chaining variables to the IV values.\n        var C2 = new Uint8Array([\n            0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,\n            0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00,\n            0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF,\n            0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF\n        ]);\n\n        return function (data) {\n\n            // Reset buffers\n            H = new Uint8Array(32);\n            M = new Uint8Array(32);\n            Sum = new Uint8Array(32);\n\n            // Reset IV value\n            C = new Array(4);\n            for (var i = 0; i < 4; i++)\n                C[i] = new Uint8Array(32);\n            arraycopy(C2, 0, C[2], 0, C2.length);\n\n            // Make data\n            var d = new Uint8Array(buffer(data));\n\n            var n = d.length;\n            var r = n % 32, q = (n - r) / 32;\n\n            // Proccess full blocks \n            for (var i = 0; i < q; i++) {\n                var b = new Uint8Array(d.buffer, i * 32, 32);\n\n                summing.call(this, b); // calc sum M\n                process.call(this, b, 0);\n            }\n\n            // load d the remadder with padding zero;\n            if (r > 0) {\n                var b = new Uint8Array(d.buffer, q * 32),\n                        c = new Uint8Array(32);\n                arraycopy(b, 0, c, 0, r);\n                summing.call(this, c); // calc sum M\n                process.call(this, c, 0);\n\n            }\n\n            // get length into L (byteCount * 8 = bitCount) in little endian.\n            var L = new Uint8Array(32), n8 = n * 8, k = 0;\n            while (n8 > 0) {\n                L[k++] = n8 & 0xff;\n                n8 = Math.floor(n8 / 256);\n            }\n            process.call(this, L, 0);\n            process.call(this, Sum, 0);\n\n            var h = H.buffer;\n\n            // Swap hash for SignalCom\n            if (this.procreator === 'SC')\n                h = swap(h);\n\n            return h;\n        };\n\n    }\n    )();\n\n    /**\n     * Algorithm name SHA-1<br><br>\n     * \n     * https://tools.ietf.org/html/rfc3174\n     * \n     * The digest method returns digest data in according to SHA-1.<br>\n     *  \n     * @memberOf GostDigest\n     * @method digest\n     * @instance\n     * @param {(ArrayBuffer|TypedArray)} data Data\n     * @returns {ArrayBuffer} Digest of data\n     */\n    var digestSHA1 = (function ()\n    {\n\n        // Create a buffer for each 80 word block.\n        var state, block = new Uint32Array(80);\n\n        function common(a, e, w, k, f) {\n            return (f + e + w + k + ((a << 5) | (a >>> 27))) >>> 0;\n        }\n\n        function f1(a, b, c, d, e, w) {\n            return common(a, e, w, 0x5A827999, d ^ (b & (c ^ d)));\n        }\n\n        function f2(a, b, c, d, e, w) {\n            return common(a, e, w, 0x6ED9EBA1, b ^ c ^ d);\n        }\n\n        function f3(a, b, c, d, e, w) {\n            return common(a, e, w, 0x8F1BBCDC, (b & c) | (d & (b | c)));\n        }\n\n        function f4(a, b, c, d, e, w) {\n            return common(a, e, w, 0xCA62C1D6, b ^ c ^ d);\n        }\n\n        function cycle(state, block) {\n            var a = state[0],\n                    b = state[1],\n                    c = state[2],\n                    d = state[3],\n                    e = state[4];\n\n            // Partially unroll loops so we don't have to shift variables.\n            var fn = f1;\n            for (var i = 0; i < 80; i += 5) {\n                if (i === 20) {\n                    fn = f2;\n                }\n                else if (i === 40) {\n                    fn = f3;\n                }\n                else if (i === 60) {\n                    fn = f4;\n                }\n                e = fn(a, b, c, d, e, block[i]);\n                b = ((b << 30) | (b >>> 2)) >>> 0;\n                d = fn(e, a, b, c, d, block[i + 1]);\n                a = ((a << 30) | (a >>> 2)) >>> 0;\n                c = fn(d, e, a, b, c, block[i + 2]);\n                e = ((e << 30) | (e >>> 2)) >>> 0;\n                b = fn(c, d, e, a, b, block[i + 3]);\n                d = ((d << 30) | (d >>> 2)) >>> 0;\n                a = fn(b, c, d, e, a, block[i + 4]);\n                c = ((c << 30) | (c >>> 2)) >>> 0;\n            }\n            state[0] += a;\n            state[1] += b;\n            state[2] += c;\n            state[3] += d;\n            state[4] += e;\n        }\n\n        // Swap bytes for 32bits word\n        function swap32(b) {\n            return ((b & 0xff) << 24)\n                    | ((b & 0xff00) << 8)\n                    | ((b >> 8) & 0xff00)\n                    | ((b >> 24) & 0xff);\n        }\n\n        // input is a Uint8Array bitstream of the data\n        return function (data) {\n            var d = new Uint8Array(buffer(data)), dlen = d.length;\n\n            // Pad the input string length.\n            var len = dlen + 9;\n            if (len % 64) {\n                len += 64 - (len % 64);\n            }\n\n            state = new Uint32Array(5);\n            state[0] = 0x67452301;\n            state[1] = 0xefcdab89;\n            state[2] = 0x98badcfe;\n            state[3] = 0x10325476;\n            state[4] = 0xc3d2e1f0;\n\n            for (var ofs = 0; ofs < len; ofs += 64) {\n\n                // Copy input to block and write padding as needed\n                for (var i = 0; i < 64; i++) {\n                    var b = 0,\n                            o = ofs + i;\n                    if (o < dlen) {\n                        b = d[o];\n                    }\n                    else if (o === dlen) {\n                        b = 0x80;\n                    }\n                    else {\n                        // Write original bit length as a 64bit big-endian integer to the end.\n                        var x = len - o - 1;\n                        if (x >= 0 && x < 4) {\n                            b = (dlen << 3 >>> (x * 8)) & 0xff;\n                        }\n                    }\n\n                    // Interpret the input bytes as big-endian per the spec\n                    if (i % 4 === 0) {\n                        block[i >> 2] = b << 24;\n                    }\n                    else {\n                        block[i >> 2] |= b << ((3 - (i % 4)) * 8);\n                    }\n                }\n\n                // Extend the block\n                for (var i = 16; i < 80; i++) {\n                    var w = block[i - 3] ^ block[i - 8] ^ block[i - 14] ^ block[i - 16];\n                    block[i] = (w << 1) | (w >>> 31);\n                }\n\n                cycle(state, block);\n\n            }\n\n            // Swap the bytes around since they are big endian internally\n            for (var i = 0; i < 5; i++)\n                state[i] = swap32(state[i]);\n            return state.buffer;\n        };\n\n    }\n    )();\n\n    /** \n     * Algorithm name GOST R 34.11-HMAC<br><br>\n     * \n     * HMAC with the specified hash function.\n     * @memberOf GostDigest\n     * @method sign\n     * @instance\n     * @param {ArrayBuffer} key The key for HMAC.\n     * @param {Hash} data Data\n     */\n    function signHMAC(key, data)\n    {\n        // GOST R 34.11-94 - B=32b, L=32b\n        // GOST R 34.11-256 - B=64b, L=32b\n        // GOST R 34.11-512 - B=64b, L=64b\n        var b = (this.digest === digest94) ? 32 : 64,\n                l = this.bitLength / 8,\n                k = buffer(key),\n                d = buffer(data), k0;\n        if (k.byteLength === b)\n            k0 = new Uint8Array(k);\n        else {\n            var k0 = new Uint8Array(b);\n            if (k.byteLength > b) {\n                k0.set(new Uint8Array(this.digest(k)));\n            } else {\n                k0.set(new Uint8Array(k));\n            }\n        }\n        var s0 = new Uint8Array(b + d.byteLength),\n                s1 = new Uint8Array(b + l);\n        for (var i = 0; i < b; i++) {\n            s0[i] = k0[i] ^ 0x36;\n            s1[i] = k0[i] ^ 0x5C;\n        }\n        s0.set(new Uint8Array(d), b);\n        s1.set(new Uint8Array(this.digest(s0)), b);\n        return this.digest(s1);\n    }\n\n    /**\n     * Algorithm name GOST R 34.11-HMAC<br><br>\n     * \n     * Verify HMAC based on GOST R 34.11 hash\n     * \n     * @memberOf GostDigest\n     * @method verify\n     * @instance\n     * @param {(ArrayBuffer|TypedArray)} key Key which used for HMAC generation\n     * @param {(ArrayBuffer|TypedArray)} signature generated HMAC\n     * @param {(ArrayBuffer|TypedArray)} data Data\n     * @returns {boolean} HMAC verified = true\n     */\n    function verifyHMAC(key, signature, data)\n    {\n        var hmac = new Uint8Array(this.sign(key, data)),\n                test = new Uint8Array(signature);\n        if (hmac.length !== test.length)\n            return false;\n        for (var i = 0, n = hmac.length; i < n; i++)\n            if (hmac[i] !== test[i])\n                return false;\n        return true;\n    }\n\n\n    /**\n     * Algorithm name GOST R 34.11-KDF<br><br>\n     * \n     * Simple generate key 256/512 bit random seed for derivation algorithms\n     * \n     * @memberOf GostDigest\n     * @method generateKey\n     * @instance\n     * @returns {ArrayBuffer} Generated key\n     */\n    function generateKey()\n    {\n        return getSeed(this.bitLength).buffer;\n    }\n\n    /**\n     * Algorithm name GOST R 34.11-PFXKDF<br><br>\n     * \n     * Derive bits from password (PKCS12 mode)\n     *  <ul>\n     *      <li>algorithm.salt - random value, salt</li>\n     *      <li>algorithm.iterations - number of iterations</li>\n     *  </ul>\n     * @memberOf GostDigest\n     * @method deriveBits\n     * @instance\n     * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\n     * @param {number} length output bit-length\n     * @returns {ArrayBuffer} result\n     */\n    function deriveBitsPFXKDF(baseKey, length)\n    {\n        if (length % 8 > 0)\n            throw new DataError('Length must multiple of 8');\n        var u = this.bitLength / 8, v = (this.digest === digest94) ? 32 : 64,\n                n = length / 8, r = this.iterations;\n        //   1.  Construct a string, D (the \"diversifier\"), by concatenating v/8\n        //       copies of ID.\n        var ID = this.diversifier, D = new Uint8Array(v);\n        for (var i = 0; i < v; i++)\n            D[i] = ID;\n        //   2.  Concatenate copies of the salt together to create a string S of\n        //       length v(ceiling(s/v)) bits (the final copy of the salt may be\n        //       truncated to create S).  Note that if the salt is the empty\n        //       string, then so is S.\n        var S0 = new Uint8Array(buffer(this.salt)), s = S0.length,\n                slen = v * Math.ceil(s / v), S = new Uint8Array(slen);\n        for (var i = 0; i < slen; i++)\n            S[i] = S0[i % s];\n        //   3.  Concatenate copies of the password together to create a string P\n        //       of length v(ceiling(p/v)) bits (the final copy of the password\n        //       may be truncated to create P).  Note that if the password is the\n        //       empty string, then so is P.\n        var P0 = new Uint8Array(buffer(baseKey)), p = P0.length,\n                plen = v * Math.ceil(p / v), P = new Uint8Array(plen);\n        for (var i = 0; i < plen; i++)\n            P[i] = P0[i % p];\n        //   4.  Set I=S||P to be the concatenation of S and P.\n        var I = new Uint8Array(slen + plen);\n        arraycopy(S, 0, I, 0, slen);\n        arraycopy(P, 0, I, slen, plen);\n        //   5.  Set c=ceiling(n/u).\n        var c = Math.ceil(n / u);\n        //   6.  For i=1, 2, ..., c, do the following:\n        var A = new Uint8Array(c * u);\n        for (var i = 0; i < c; i++) {\n            //  A.  Set A2=H^r(D||I). (i.e., the r-th hash of D||1,\n            //      H(H(H(... H(D||I))))\n            var H = new Uint8Array(v + slen + plen);\n            arraycopy(D, 0, H, 0, v);\n            arraycopy(I, 0, H, v, slen + plen);\n            for (var j = 0; j < r; j++)\n                H = new Uint8Array(this.digest(H));\n            arraycopy(H, 0, A, i * u, u);\n            //  B.  Concatenate copies of Ai to create a string B of length v\n            //      bits (the final copy of Ai may be truncated to create B).\n            var B = new Uint8Array(v);\n            for (var j = 0; j < v; j++)\n                B[j] = H[j % u];\n            //  C.  Treating I as a concatenation I_0, I_1, ..., I_(k-1) of v-bit\n            //      blocks, where k=ceiling(s/v)+ceiling(p/v), modify I by\n            //      setting I_j=(I_j+B+1) mod 2^v for each j.\n            var k = (slen + plen) / v;\n            for (j = 0; j < k; j++) {\n                var cf = 1, w;\n                for (var l = v - 1; l >= 0; --l) {\n                    w = I[v * j + l] + B[l] + cf;\n                    cf = w >>> 8;\n                    I[v * j + l] = w & 0xff;\n                }\n            }\n        }\n        //   7.  Concatenate A_1, A_2, ..., A_c together to form a pseudorandom\n        //       bit string, A.\n        //   8.  Use the first n bits of A as the output of this entire process.\n        var R = new Uint8Array(n);\n        arraycopy(A, 0, R, 0, n);\n        return R.buffer;\n    }\n\n    /**\n     * Algorithm name GOST R 34.11-KDF<br><br>\n     * \n     * Derive bits for KEK deversification in 34.10-2012 algorithm\n     * KDF(KEK, UKM, label) = HMAC256 (KEK,  0x01|label|0x00|UKM|0x01|0x00) \n     * Default label = 0x26|0xBD|0xB8|0x78 \n     * \n     * @memberOf GostDigest\n     * @method deriveBits\n     * @instance\n     * @param {(ArrayBuffer|TypedArray)} baseKey base key for deriviation\n     * @param {number} length output bit-length \n     * @returns {ArrayBuffer} result\n     */\n    function deriveBitsKDF(baseKey, length)\n    {\n        if (length % 8 > 0)\n            throw new DataError('Length must be multiple of 8');\n        var rlen = length / 8, label, context = new Uint8Array(buffer(this.context)),\n                blen = this.bitLength / 8, n = Math.ceil(rlen / blen);\n        if (this.label)\n            label = new Uint8Array(buffer(this.label));\n        else\n            label = new Uint8Array([0x26, 0xBD, 0xB8, 0x78]);\n        var result = new Uint8Array(rlen);\n        for (var i = 0; i < n; i++) {\n            var data = new Uint8Array(label.length + context.length + 4);\n            data[0] = i + 1;\n            data.set(label, 1);\n            data[label.length + 1] = 0x00;\n            data.set(context, label.length + 2);\n            data[data.length - 2] = length >>> 8;\n            data[data.length - 1] = length & 0xff;\n            result.set(new Uint8Array(signHMAC.call(this, baseKey, data), 0,\n                    i < n - 1 ? blen : rlen - i * blen), i * blen);\n        }\n        return result.buffer;\n    }\n\n    /**\n     * Algorithm name GOST R 34.11-PBKDF1<br><br>\n     * \n     * Derive bits from password\n     *  <ul>\n     *      <li>algorithm.salt - random value, salt</li>\n     *      <li>algorithm.iterations - number of iterations</li>\n     *  </ul>\n     * @memberOf GostDigest\n     * @method deriveBits\n     * @instance\n     * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\n     * @param {number} length output bit-length\n     * @returns {ArrayBuffer} result\n     */\n    function deriveBitsPBKDF1(baseKey, length)\n    {\n        if (length < this.bitLength / 2 || length % 8 > 0)\n            throw new DataError('Length must be more than ' + this.bitLength / 2 + ' bits and multiple of 8');\n        var hLen = this.bitLength / 8, dkLen = length / 8,\n                c = this.iterations,\n                P = new Uint8Array(buffer(baseKey)),\n                S = new Uint8Array(buffer(this.salt)),\n                slen = S.length, plen = P.length,\n                T = new Uint8Array(plen + slen),\n                DK = new Uint8Array(dkLen);\n        if (dkLen > hLen)\n            throw new DataError('Invalid parameters: Length value');\n        arraycopy(P, 0, T, 0, plen);\n        arraycopy(S, 0, T, plen, slen);\n        for (var i = 0; i < c; i++)\n            T = new Uint8Array(this.digest(T));\n        arraycopy(T, 0, DK, 0, dkLen);\n        return DK.buffer;\n    }\n\n    /**\n     * Algorithm name GOST R 34.11-PBKDF2<br><br>\n     * \n     * Derive bits from password\n     *  <ul>\n     *      <li>algorithm.salt - random value, salt</li>\n     *      <li>algorithm.iterations - number of iterations</li>\n     *  </ul>\n     * @memberOf GostDigest\n     * @method deriveBits\n     * @instance\n     * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\n     * @param {number} length output bit-length\n     * @returns {ArrayBuffer} result\n     */\n    function deriveBitsPBKDF2(baseKey, length)\n    {\n        var diversifier = this.diversifier || 1; // For PKCS12 MAC required 3*length\n        length = length * diversifier;\n        if (length < this.bitLength / 2 || length % 8 > 0)\n            throw new DataError('Length must be more than ' + this.bitLength / 2 + ' bits and multiple of 8');\n        var hLen = this.bitLength / 8, dkLen = length / 8,\n                c = this.iterations,\n                P = new Uint8Array(buffer(baseKey)),\n                S = new Uint8Array(buffer(this.salt));\n        var slen = S.byteLength,\n                data = new Uint8Array(slen + 4);\n        arraycopy(S, 0, data, 0, slen);\n\n        if (dkLen > (0xffffffff - 1) * 32)\n            throw new DataError('Invalid parameters: Length value');\n        var n = Math.ceil(dkLen / hLen),\n                DK = new Uint8Array(dkLen);\n        for (var i = 1; i <= n; i++) {\n            data[slen] = i >>> 24 & 0xff;\n            data[slen + 1] = i >>> 16 & 0xff;\n            data[slen + 2] = i >>> 8 & 0xff;\n            data[slen + 3] = i & 0xff;\n\n            var U = new Uint8Array(signHMAC.call(this, P, data)), Z = U;\n            for (var j = 1; j < c; j++) {\n                U = new Uint8Array(signHMAC.call(this, P, U));\n                for (var k = 0; k < hLen; k++)\n                    Z[k] = U[k] ^ Z[k];\n            }\n            var ofs = (i - 1) * hLen;\n            arraycopy(Z, 0, DK, ofs, Math.min(hLen, dkLen - ofs));\n        }\n        if (diversifier > 1) {\n            var rLen = dkLen / diversifier, R = new Uint8Array(rLen);\n            arraycopy(DK, dkLen - rLen, R, 0, rLen);\n            return R.buffer;\n        } else\n            return DK.buffer;\n    }\n\n    /**\n     * Algorithm name GOST R 34.11-CPKDF<br><br>\n     * \n     * Derive bits from password. CryptoPro algorithm\n     *  <ul>\n     *      <li>algorithm.salt - random value, salt</li>\n     *      <li>algorithm.iterations - number of iterations</li>\n     *  </ul>\n     * @memberOf GostDigest\n     * @method deriveBits\n     * @instance\n     * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\n     * @param {number} length output bit-length\n     * @returns {ArrayBuffer} result\n     */\n    function deriveBitsCP(baseKey, length) {\n        if (length > this.bitLength || length % 8 > 0)\n            throw new DataError('Length can\\'t be more than ' + this.bitLength + ' bits and multiple of 8');\n        // GOST R 34.11-94 - B=32b, L=32b\n        // GOST R 34.11-256 - B=64b, L=32b\n        // GOST R 34.11-512 - B=64b, L=64b\n        var b = (this.digest === digest94) ? 32 : 64,\n                l = this.bitLength / 8,\n                p = baseKey && baseKey.byteLength > 0 ? new Uint8Array(buffer(baseKey)) : false,\n                plen = p ? p.length : 0,\n                iterations = this.iterations,\n                salt = new Uint8Array(buffer(this.salt)),\n                slen = salt.length,\n                d = new Uint8Array(slen + plen);\n        arraycopy(salt, 0, d, 0, slen);\n        if (p)\n            arraycopy(p, 0, d, slen, plen);\n\n        var h = new Uint8Array(this.digest(d)),\n                k = new Uint8Array(b),\n                s0 = new Uint8Array(b),\n                s1 = new Uint8Array(b);\n        var c = 'DENEFH028.760246785.IUEFHWUIO.EF';\n        for (var i = 0; i < c.length; i++)\n            k[i] = c.charCodeAt(i);\n\n        d = new Uint8Array(2 * (b + l));\n        for (var j = 0; j < iterations; j++) {\n            for (var i = 0; i < b; i++) {\n                s0[i] = k[i] ^ 0x36;\n                s1[i] = k[i] ^ 0x5C;\n                k[i] = 0;\n            }\n            arraycopy(s0, 0, d, 0, b);\n            arraycopy(h, 0, d, b, l);\n            arraycopy(s1, 0, d, b + l, b);\n            arraycopy(h, 0, d, b + l + b, l);\n            arraycopy(new Uint8Array(this.digest(d)), 0, k, 0, l);\n        }\n        for (var i = 0; i < l; i++) {\n            s0[i] = k[i] ^ 0x36;\n            s1[i] = k[i] ^ 0x5C;\n            k[i] = 0;\n        }\n        d = new Uint8Array(2 * l + slen + plen);\n        arraycopy(s0, 0, d, 0, l);\n        arraycopy(salt, 0, d, l, slen);\n        arraycopy(s1, 0, d, l + slen, l);\n        if (p)\n            arraycopy(p, 0, d, l + slen + l, plen);\n        h = this.digest(this.digest(d));\n        if (length === this.bitLength)\n            return h;\n        else {\n            var rlen = length / 8, r = new Uint8Array(rlen);\n            arraycopy(h, 0, r, 0, rlen);\n            return r.buffer;\n        }\n    }\n\n    /**\n     * Algorithm name GOST R 34.11-KDF or GOST R 34.11-PBKDF2 or other<br><br>\n     * \n     * Derive key from derive bits subset\n     * \n     * @memberOf GostDigest\n     * @method deriveKey\n     * @instance\n     * @param {ArrayBuffer} baseKey\n     * @returns {ArrayBuffer}\n     */\n    function deriveKey(baseKey)\n    {\n        return this.deriveBits(baseKey, this.keySize * 8);\n    }\n\n    /**\n     * GOST R 34.11 Algorithm<br><br>\n     * \n     * References: {@link http://tools.ietf.org/html/rfc6986} and {@link http://tools.ietf.org/html/rfc5831}<br><br>\n     * \n     * Normalized algorithm identifier common parameters:\n     * \n     *  <ul>\n     *      <li><b>name</b> Algorithm name 'GOST R 34.11'</li>\n     *      <li><b>version</b> Algorithm version\n     *          <ul>\n     *              <li><b>1994</b> old-style 256 bits digest based on GOST 28147-89</li>\n     *              <li><b>2012</b> 256 ro 512 bits digest algorithm \"Streebog\" GOST R 34.11-2012 (default)</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>length</b> Digest length\n     *          <ul>\n     *              <li><b>256</b> 256 bits digest</li>\n     *              <li><b>512</b> 512 bits digest, valid only for algorithm \"Streebog\"</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>mode</b> Algorithm mode\n     *          <ul>\n     *              <li><b>HASH</b> simple digest mode (default)</li>\n     *              <li><b>HMAC</b> HMAC algorithm based on GOST R 34.11</li>\n     *              <li><b>KDF</b> Derive bits for KEK deversification</li>\n     *              <li><b>PBKDF2</b> Password based key dirivation algorithms PBKDF2 (based on HMAC)</li>\n     *              <li><b>PFXKDF</b> Password based PFX key dirivation algorithms</li>\n     *              <li><b>CPKDF</b> CpyptoPro Password based key dirivation algorithms</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>sBox</b> Paramset sBox for GOST 28147-89. Used only if version = 1994</li>\n     *  </ul>\n     * \n     * Supported algorithms, modes and parameters:\n     * \n     *  <ul>\n     *      <li>Digest HASH mode (default)</li>\n     *      <li>Sign/Verify HMAC modes parameters depends on version and length\n     *          <ul>\n     *              <li><b>version: 1994</b> HMAC parameters (B = 32, L = 32)</li>\n     *              <li><b>version: 2012, length: 256</b> HMAC parameters (B = 64, L = 32)</li>\n     *              <li><b>version: 2012, length: 512</b> HMAC parameters  (B = 64, L = 64)</li>\n     *          </ul>\n     *      </li>\n     *      <li>DeriveBits/DeriveKey KDF mode\n     *          <ul>\n     *              <li><b>context</b> {@link CryptoOperationData} Context of the key derivation</li>\n     *              <li><b>label</b> {@link CryptoOperationData} Label that identifies the purpose for the derived keying material</li>\n     *          </ul>\n     *      </li>\n     *      <li>DeriveBits/DeriveKey PBKDF2 mode\n     *          <ul>\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n     *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption, ID=3 - integrity key for MACing</li>\n     *          </ul>\n     *      </li>\n     *      <li>DeriveBits/DeriveKey PFXKDF mode\n     *          <ul>\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n     *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption, \n     *              ID=2 - IV (Initial Value) for encryption or decryption, ID=3 - integrity key for MACing</li>\n     *          </ul>\n     *      </li>\n     *      <li>DeriveBits/DeriveKey CPKDF mode\n     *          <ul>\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n     *          </ul>\n     *      </li>\n     *  </ul>\n     * \n     * @class GostDigest\n     * @param {AlgorithmIdentifier} algorithm WebCryptoAPI algorithm identifier\n     */\n    function GostDigest(algorithm)\n    {\n\n        algorithm = algorithm || {};\n\n        this.name = (algorithm.name || 'GOST R 34.10') + '-' + ((algorithm.version || 2012) % 100) +\n                ((algorithm.version || 2012) > 1 ? '-' + (algorithm.length || 256) : '') +\n                (((algorithm.mode || 'HASH') !== 'HASH') ? '-' + algorithm.mode : '') +\n                (algorithm.procreator ? '/' + algorithm.procreator : '') +\n                (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\n\n        // Algorithm procreator\n        this.procreator = algorithm.procreator;\n\n        // Bit length\n        this.bitLength = algorithm.length || 256;\n\n        switch (algorithm.version || 2012) {\n            case 1: // SHA-1\n                this.digest = digestSHA1;\n                this.bitLength = 160;\n                break;\n            case 1994:\n                this.digest = digest94;\n                // Define chiper algorithm\n                this.sBox = (algorithm.sBox || (algorithm.procreator === 'SC' ? 'D-SC' : 'D-A')).toUpperCase();\n\n                if (!GostCipher)\n                    throw new NotSupportedError('Object GostCipher not found');\n\n                this.cipher = new GostCipher({\n                    name: 'GOST 28147',\n                    block: 'ECB',\n                    sBox: this.sBox,\n                    procreator: this.procreator\n                });\n\n                break;\n            case 2012:\n                this.digest = digest2012;\n                break;\n            default:\n                throw new NotSupportedError('Algorithm version ' + algorithm.version + ' not supported');\n        }\n\n        // Key size\n        this.keySize = algorithm.keySize || (algorithm.version <= 2 ? this.bitLength / 8 : 32);\n\n        switch (algorithm.mode || 'HASH') {\n            case 'HASH':\n                break;\n            case 'HMAC':\n                this.sign = signHMAC;\n                this.verify = verifyHMAC;\n                this.generateKey = generateKey;\n                break;\n            case 'KDF':\n                this.deriveKey = deriveKey;\n                this.deriveBits = deriveBitsKDF;\n                this.label = algorithm.label;\n                this.context = algorithm.context;\n                break;\n            case 'PBKDF2':\n                this.deriveKey = deriveKey;\n                this.deriveBits = deriveBitsPBKDF2;\n                this.generateKey = generateKey;\n                this.salt = algorithm.salt;\n                this.iterations = algorithm.iterations || 2000;\n                this.diversifier = algorithm.diversifier || 1;\n                break;\n            case 'PFXKDF':\n                this.deriveKey = deriveKey;\n                this.deriveBits = deriveBitsPFXKDF;\n                this.generateKey = generateKey;\n                this.salt = algorithm.salt;\n                this.iterations = algorithm.iterations || 2000;\n                this.diversifier = algorithm.diversifier || 1;\n                break;\n            case 'CPKDF':\n                this.deriveKey = deriveKey;\n                this.deriveBits = deriveBitsCP;\n                this.generateKey = generateKey;\n                this.salt = algorithm.salt;\n                this.iterations = algorithm.iterations || 2000;\n                break;\n            default:\n                throw new NotSupportedError('Algorithm mode ' + algorithm.mode + ' not supported');\n        }\n    }\n\nmodule.exports = GostDigest;\n","/**\n * @file GOST 34.10-2012 signature function with 1024/512 bits digest\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\n//const GostRandom = require('./gostRandom');\nconst GostCipher = require('./gostCipher');\nconst GostDigest = require('./gostDigest');\nconst GostSign = require('./gostSign');\n\n    /*\n     * Engine definition base on normalized algorithm identifier\n     * \n     */\n\n    var root = global;\n\n    // Define engine\n    function defineEngine(method, algorithm) {\n        if (!algorithm)\n            throw new (root.SyntaxError || Error)('Algorithm not defined');\n\n        if (!algorithm.name)\n            throw new (root.SyntaxError || Error)('Algorithm name not defined');\n\n        var name = algorithm.name, mode = algorithm.mode;\n        if ((name === 'GOST 28147' || name === 'GOST R 34.12' || name === 'RC2') && (method === 'generateKey' ||\n                (mode === 'MAC' && (method === 'sign' || method === 'verify')) ||\n                ((mode === 'KW' || mode === 'MASK') && (method === 'wrapKey' || method === 'unwrapKey')) ||\n                ((!mode || mode === 'ES') && (method === 'encrypt' || method === 'decrypt')))) {\n            return 'GostCipher';\n\n        } else if ((name === 'GOST R 34.11' || name === 'SHA') && (method === 'digest' ||\n                (mode === 'HMAC' && (method === 'sign' || method === 'verify' || method === 'generateKey')) ||\n                ((mode === 'KDF' || mode === 'PBKDF2' || mode === 'PFXKDF' || mode === 'CPKDF') &&\n                        (method === 'deriveKey' || method === 'deriveBits' || method === 'generateKey')))) {\n            return 'GostDigest';\n\n        } else if (name === 'GOST R 34.10' && (method === 'generateKey' ||\n                ((!mode || mode === 'SIGN') && (method === 'sign' || method === 'verify')) ||\n                (mode === 'MASK' && (method === 'wrapKey' || method === 'unwrapKey')) ||\n                (mode === 'DH' && (method === 'deriveKey' || method === 'deriveBits')))) {\n            return 'GostSign';\n        } else\n            throw new (root.NotSupportedError || Error)('Algorithm ' + name + '-' + mode + ' is not valid for ' + method);\n    }\n\n    /**\n     * Object implements dedicated Web Workers and provide a simple way to create \n     * and run GOST cryptographic algorithms in background thread. \n     * \n     * Object provide interface to GOST low-level cryptogric classes:\n     *  <ul>\n     *      <li>GostCipher - implementation of GOST 28147, GOST R 34.12, GOST R 34.13 Encryption algorithms. Reference {@link http://tools.ietf.org/html/rfc5830}</li>\n     *      <li>GostDigest - implementation of GOST R 34.11 Hash Function algorithms. References {@link http://tools.ietf.org/html/rfc5831} and {@link http://tools.ietf.org/html/rfc6986}</li>\n     *      <li>GostSign - implementation of GOST R 34.10 Digital Signature algorithms. References {@link http://tools.ietf.org/html/rfc5832} and {@link http://tools.ietf.org/html/rfc7091}</li>\n     *  </ul>\n     * @namespace gostEngine\n     */\n    var gostEngine = {\n        /**\n         * gostEngine.execute(algorithm, method, args) Entry point to execution \n         * all low-level GOST cryptographic methods\n         * \n         *  <ul>\n         *      <li>Determine the appropriate engine for a given execution method</li>\n         *      <li>Create cipher object for determineted engine</li>\n         *      <li>Execute method of cipher with given args</li>\n         *  </ul>\n         * \n         * @memberOf gostEngine\n         * @param {AlgorithmIndentifier} algorithm Algorithm identifier\n         * @param {string} method Crypto method for execution\n         * @param {Array} args Method arguments (keys, data, additional parameters)\n         * @returns {(CryptoOperationData|Key|KeyPair|boolean)} Result of method execution\n         */\n        execute: function (algorithm, method, args)\n        {\n            // Define engine for GOST algorithms\n            var engine = defineEngine(method, algorithm);\n            // Create cipher \n            var cipher = this['get' + engine](algorithm);\n            // Execute method\n            return cipher[method].apply(cipher, args);\n        },\n        /**\n         * gostEngine.getGostCipher(algorithm) returns GOST 28147 / GOST R 34.12 cipher instance<br><br>\n         * \n         * GOST 28147-89 / GOST R 34.12-15 Encryption Algorithm<br><br> \n         * When keys and initialization vectors are converted to/from byte arrays, \n         * little-endian byte order is assumed.<br><br>\n         * \n         * Normalized algorithm identifier common parameters:\n         * \n         *  <ul>\n         *      <li><b>name</b> Algorithm name 'GOST 28147' or 'GOST R 34.12'</li>\n         *      <li><b>version</b> Algorithm version, number\n         *          <ul>\n         *              <li><b>1989</b> Current version of standard</li>\n         *              <li><b>2015</b> New draft version of standard</li>\n         *          </ul>\n         *      </li>\n         *      <li><b>length</b> Block length\n         *          <ul>\n         *              <li><b>64</b> 64 bits length (default)</li>\n         *              <li><b>128</b> 128 bits length (only for version 2015)</li>\n         *          </ul>\n         *      </li>\n         *      <li><b>mode</b> Algorithm mode, string\n         *          <ul>\n         *              <li><b>ES</b> Encryption mode (default)</li>\n         *              <li><b>MAC</b> \"imitovstavka\" (MAC) mode</li>\n         *              <li><b>KW</b> Key wrapping mode</li>\n         *              <li><b>MASK</b> Key mask mode</li>\n         *          </ul>\n         *      </li>\n         *      <li><b>sBox</b> Paramset sBox for GOST 28147-89, string. Used only if version = 1989</li>\n         *  </ul>\n         *  \n         * Supported algorithms, modes and parameters:\n         * \n         *  <ul>\n         *      <li>Encript/Decrypt mode (ES)\n         *          <ul>\n         *              <li><b>block</b> Block mode, string. Default ECB</li>\n         *              <li><b>keyMeshing</b> Key meshing mode, string. Default NO</li>\n         *              <li><b>padding</b> Padding mode, string. Default NO for CFB and CTR modes, or ZERO for others</li>\n         *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\n         *          </ul>\n         *      </li>\n         *      <li>Sign/Verify mode (MAC)\n         *          <ul>\n         *              <li><b>macLength</b> Length of mac in bits (default - 32 bits)</li>\n         *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\n         *          </ul>\n         *      </li>\n         *      <li>Wrap/Unwrap key mode (KW)\n         *          <ul>\n         *              <li><b>keyWrapping</b> Mode of keywrapping, string. Default NO - standard GOST key wrapping</li>\n         *              <li><b>ukm</b> {@link CryptoOperationData} User key material. Default - random generated value</li>\n         *          </ul>\n         *      </li>\n         *      <li>Wrap/Unwrap key mode (MASK)</li>\n         *  </ul>\n         *      \n         * Supported paramters values:\n         *      \n         *  <ul>\n         *      <li>Block modes (parameter 'block')\n         *          <ul>\n         *              <li><b>ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n         *              <li><b>CFB</b> \"gammirovanie s obratnoj svyaziyu\" (64-bit CFB) mode</li>\n         *              <li><b>CTR</b> \"gammirovanie\" (counter) mode</li>\n         *              <li><b>CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n         *          </ul>\n         *      </li>\n         *      <li>Key meshing modes (parameter 'keyMeshing')\n         *          <ul>\n         *              <li><b>NO</b> No key wrapping (default)</li>\n         *              <li><b>CP</b> CryptoPor Key key meshing</li>\n         *          </ul>\n         *      </li>\n         *      <li>Padding modes (parameter 'padding')\n         *          <ul>\n         *              <li><b>NO</b> No padding only for CFB and CTR modes</li>\n         *              <li><b>PKCS5</b> PKCS#5 padding mode</li>\n         *              <li><b>ZERO</b> Zero bits padding mode</li>\n         *              <li><b>RANDOM</b> Random bits padding mode</li>\n         *          </ul>\n         *      </li>\n         *      <li>Wrapping key modes (parameter 'keyWrapping')\n         *          <ul>\n         *              <li><b>NO</b> Ref. rfc4357 6.1 GOST 28147-89 Key wrapping</li>\n         *              <li><b>CP</b> CryptoPro Key wrapping mode</li>\n         *              <li><b>SC</b> SignalCom Key wrapping mode</li>\n         *          </ul>\n         *      </li>\n         *  </ul>\n         * \n         * @memberOf gostEngine\n         * @param {AlgorithmIndentifier} algorithm Algorithm identifier\n         * @returns {GostCipher} Instance of GostCipher\n         */\n        getGostCipher: function (algorithm)\n        {\n            return new GostCipher(algorithm);\n        },\n        /**\n         * gostEngine.getGostDigest(algorithm) returns GOST R 34.11 cipher instance<br><br>\n         * \n         * Normalized algorithm identifier common parameters:\n         * \n         *  <ul>\n         *      <li><b>name</b> Algorithm name 'GOST R 34.11'</li>\n         *      <li><b>version</b> Algorithm version\n         *          <ul>\n         *              <li><b>1994</b> old-style 256 bits digest based on GOST 28147-89</li>\n         *              <li><b>2012</b> 256 ro 512 bits digest algorithm \"Streebog\" GOST R 34.11-2012 (default)</li>\n         *          </ul>\n         *      </li>\n         *      <li><b>length</b> Digest length\n         *          <ul>\n         *              <li><b>256</b> 256 bits digest</li>\n         *              <li><b>512</b> 512 bits digest, valid only for algorithm \"Streebog\"</li>\n         *          </ul>\n         *      </li>\n         *      <li><b>mode</b> Algorithm mode\n         *          <ul>\n         *              <li><b>HASH</b> simple digest mode (default)</li>\n         *              <li><b>HMAC</b> HMAC algorithm based on GOST R 34.11</li>\n         *              <li><b>KDF</b> Derive bits for KEK deversification</li>\n         *              <li><b>PBKDF2</b> Password based key dirivation algorithms PBKDF2 (based on HMAC)</li>\n         *              <li><b>PFXKDF</b> PFX key dirivation algorithms PFXKDF</li>\n         *              <li><b>CPKDF</b> CryptoPro Password based key dirivation algorithms</li>\n         *          </ul>\n         *      </li>\n         *      <li><b>sBox</b> Paramset sBox for GOST 28147-89. Used only if version = 1994</li>\n         *  </ul>\n         * \n         * Supported algorithms, modes and parameters:\n         * \n         *  <ul>\n         *      <li>Digest HASH mode (default)</li>\n         *      <li>Sign/Verify HMAC modes parameters depends on version and length\n         *          <ul>\n         *              <li><b>version: 1994</b> HMAC parameters (B = 32, L = 32)</li>\n         *              <li><b>version: 2012, length: 256</b> HMAC parameters (B = 64, L = 32)</li>\n         *              <li><b>version: 2012, length: 512</b> HMAC parameters  (B = 64, L = 64)</li>\n         *          </ul>\n         *      </li>\n         *      <li>DeriveBits/DeriveKey KDF mode\n         *          <ul>\n         *              <li><b>context</b> {@link CryptoOperationData} Context of the key derivation</li>\n         *              <li><b>label</b> {@link CryptoOperationData} Label that identifies the purpose for the derived keying material</li>\n         *          </ul>\n         *      </li>\n         *      <li>DeriveBits/DeriveKey PBKDF2 mode\n         *          <ul>\n         *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n         *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n         *          </ul>\n         *      </li>\n         *      <li>DeriveBits/DeriveKey PFXKDF mode\n         *          <ul>\n         *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n         *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n         *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption, \n         *              ID=2 - IV (Initial Value) for encryption or decryption, ID=3 - integrity key for MACing</li>\n         *          </ul>\n         *      </li>\n         *      <li>DeriveBits/DeriveKey CPKDF mode\n         *          <ul>\n         *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n         *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n         *          </ul>\n         *      </li>\n         *  </ul>\n         * \n         * @memberOf gostEngine\n         * @param {AlgorithmIndentifier} algorithm Algorithm identifier\n         * @returns {GostDigest} Instance of GostDigest\n         */\n        getGostDigest: function (algorithm)\n        {\n            return new GostDigest(algorithm);\n        },\n        /**\n         * gostEngine.getGostSign(algorithm) returns GOST R 34.10 cipher instance<br><br>\n         * \n         * Normalized algorithm identifier common parameters:\n         * \n         *  <ul>\n         *      <li><b>name</b> Algorithm name 'GOST R 34.10'</li>\n         *      <li><b>version</b> Algorithm version\n         *          <ul>\n         *              <li><b>1994</b> - Old-style GOST R 34.10-94 ExpMod algorithm with GOST R 34.11-94 hash</li>\n         *              <li><b>2001</b> - GOST R 34.10-2001 Eliptic curve algorithm with old GOST R 34.11-94 hash</li>\n         *              <li><b>2012</b> - GOST R 34.10-2012 Eliptic curve algorithm with GOST R 34.11-12 hash, default mode</li>\n         *          </ul>\n         *      </li>\n         *      <li><b>length</b> Length of hash and signature. Key length == hash length for EC algorithms and 2 * hash length for ExpMod algorithm\n         *          <ul>\n         *              <li><b>GOST R 34.10-256</b> - 256 bits digest, default mode</li>\n         *              <li><b>GOST R 34.10-512</b> - 512 bits digest only for GOST R 34.11-2012 hash</li>\n         *          </ul>\n         *      </li>\n         *      <li><b>mode</b> Algorithm mode\n         *          <ul>\n         *              <li><b>SIGN</b> Digital signature mode (default)</li>\n         *              <li><b>DH</b> Diffie-Hellman key generation and key agreement mode</li>\n         *              <li><b>MASK</b> Key mask mode</li>\n         *          </ul>\n         *      </li>\n         *      <li><b>sBox</b> Paramset sBox for GOST 34.11-94. Used only if version = 1994 or 2001</li>\n         *  </ul>\n         *  \n         * Supported algorithms, modes and parameters:\n         * \n         *  <ul>\n         *      <li>Sign/Verify mode (SIGN)</li>\n         *      <li>Wrap/Unwrap mode (MASK)</li>\n         *      <li>DeriveKey/DeriveBits mode (DH)\n         *          <ul>\n         *              <li>{@link CryptoOperationData} <b>ukm</b> User key material. Default - random generated value</li>\n         *              <li>{@link CryptoOperationData} <b>public</b> The peer's EC public key data</li>\n         *          </ul>\n         *      </li>\n         *      <li>GenerateKey mode (SIGN and DH and MASK) version = 1994\n         *          <ul>\n         *              <li><b>namedParam</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\n         *          </ul>\n         *          Additional parameters, if namedParam not specified\n         *          <ul>\n         *              <li><b>modulusLength</b> Bit length of p (512 or 1024 bits). Default = 1024</li>\n         *              <li><b>p</b> {@link CryptoOperationData} Modulus, prime number, 2^(t-1)<p<2^t</li>\n         *              <li><b>q</b> {@link CryptoOperationData} Order of cyclic group, prime number, 2^254<q<2^256, q is a factor of p-1</li>\n         *              <li><b>a</b> {@link CryptoOperationData} Generator, integer, 1<a<p-1, at that aq (mod p) = 1</li>\n         *          </ul>\n         *      </li>\n         *      <li>GenerateKey mode (SIGN and DH and MASK) version = 2001 or 2012\n         *          <ul>\n         *              <li><b>namedCurve</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\n         *          </ul>\n         *          Additional EC parameters, if namedCurve not specified\n         *          <ul>\n         *              <li><b>p</b> {@link CryptoOperationData} Prime number - elliptic curve modulus</li>\n         *              <li><b>a</b> {@link CryptoOperationData} Coefficients a of the elliptic curve E</li>\n         *              <li><b>b</b> {@link CryptoOperationData} Coefficients b of the elliptic curve E</li>\n         *              <li><b>q</b> {@link CryptoOperationData} Prime number - order of cyclic group</li>\n         *              <li><b>x</b> {@link CryptoOperationData} Base point p x-coordinate</li>\n         *              <li><b>y</b> {@link CryptoOperationData} Base point p y-coordinate</li>\n         *          </ul>\n         *      </li>\n         *  </ul>\n         *  \n         * @memberOf gostEngine\n         * @param {AlgorithmIndentifier} algorithm Algorithm identifier\n         * @returns {GostSign} Instance of GostSign\n         */\n        getGostSign: function (algorithm)\n        {\n            return new GostSign(algorithm);\n        }\n    };\n\nmodule.exports = gostEngine;\n","/** \n * @file Key and Certificate Store methods\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nconst gostCrypto = require('./gostCrypto');\n// const GostASN1 = require('./gostASN1');\n// const GostCert = require('./gostCert');\n// const GostCMS = require('./gostCMS');\n\n    /*\n     * Common tools and methods\n     */\n\n    var root = global;\n    var Promise = root.Promise;\n    var Object = root.Object;\n    var CryptoOperationData = root.ArrayBuffer;\n    var Date = root.Date;\n\n    var subtle = gostCrypto.subtle;\n    var asn1 = gostCrypto.asn1;\n    var coding = gostCrypto.coding;\n    var providers = gostCrypto.security.providers;\n    var cert = gostCrypto.cert;\n    var cms = gostCrypto.cms;\n\n    // Expand javascript object\n    function expand() {\n        var r = {};\n        for (var i = 0, n = arguments.length; i < n; i++) {\n            var item = arguments[i];\n            if (typeof item === 'object')\n                for (var name in item)\n                    if (item.hasOwnProperty(name))\n                        r[name] = item[name];\n        }\n        return r;\n    }\n\n    function defineProperty(object, name, descriptor, enumerable) {\n        if (typeof descriptor !== 'object')\n            descriptor = {value: descriptor};\n        if (enumerable !== undefined)\n            descriptor.enumerable = enumerable;\n        Object.defineProperty(object, name, descriptor);\n    }\n\n    function defineProperties(object, properties, enumerable) {\n        for (var name in properties)\n            defineProperty(object, name, properties[name], enumerable);\n    }\n\n    // Extend javascript class\n    function extend(Super, Class, propertiesObject, propertiesClass) {\n        // If constructor not defined\n        if (typeof Class !== 'function') {\n            propertiesClass = propertiesObject;\n            propertiesObject = Class;\n            Class = function () {\n                Super.apply(this, arguments);\n            };\n        }\n        // Create prototype properties\n        Class.prototype = Object.create(Super.prototype, {\n            constructor: {\n                value: Class\n            },\n            superclass: {\n                value: Super.prototype\n            }\n        });\n        if (propertiesObject)\n            defineProperties(Class.prototype, propertiesObject, true);\n        // Inherites super class properties\n        if (Super !== Object)\n            for (var name in Super)\n                Class[name] = Super[name];\n        Class.super = Super;\n        if (propertiesClass)\n            defineProperties(Class, propertiesClass, true);\n        return Class;\n    }\n\n    // Get random values\n    function getSeed(length) {\n        var seed = new Uint8Array(length);\n        gostCrypto.getRandomValues(seed);\n        return seed.buffer;\n    }\n\n    // Self resolver\n    function call(callback) {\n        try {\n            callback();\n        } catch (e) {\n        }\n    }\n\n\n    // Get buffer\n    function buffer(d) {\n        if (d instanceof CryptoOperationData)\n            return d;\n        else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\n            return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\n                    d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\n        else\n            throw new DataError('CryptoOperationData required');\n    }\n    // Today date + n days with time\n    function now(n) {\n        var date = new Date();\n        if (n)\n            date.setDate(date.getDate() + n);\n        return date;\n    }\n\n    // Today date + n days\n    function today(n) {\n        var date = now(n);\n        date.setHours(0, 0, 0, 0);\n        return date;\n    }\n\n    // Check the buffers to equal\n    function equalBuffers(r1, r2) {\n        var s1 = new Uint8Array(r1),\n                s2 = new Uint8Array(r2);\n        if (s1.length !== s2.length)\n            return false;\n        for (var i = 0, n = s1.length; i < n; i++)\n            if (s1[i] !== s2[i])\n                return false;\n        return true;\n    }\n\n    // Generate new alias\n    function generateUUID() {\n        var r = new Uint8Array(getSeed(16)), s = '';\n        for (var i = 0; i < 16; i++)\n            s += ('00' + r[i].toString(16)).slice(-2);\n        return s.substr(0, 8) + '-' + s.substr(8, 4) + '-4' + s.substr(13, 3) +\n                '-9' + s.substr(17, 3) + '-' + s.substr(20, 12);\n    }\n\n    // Return get32 from buffer\n    function get32(buffer, offset) {\n        var r = new Uint8Array(buffer, offset, 4);\n        return (r[3] << 24) | (r[2] << 16) | (r[1] << 8) | r[0];\n    }\n\n    function set32(buffer, offset, int) {\n        var r = new Uint8Array(buffer, offset, 4);\n        r[3] = int >>> 24;\n        r[2] = int >>> 16 & 0xff;\n        r[1] = int >>> 8 & 0xff;\n        r[0] = int & 0xff;\n        return r;\n    }\n\n    // Salt size\n    function saltSize(algorithm) {\n        switch (algorithm.id) {\n            case 'pbeWithSHAAnd40BitRC2-CBC':\n            case 'pbeWithSHAAnd128BitRC2-CBC':\n                return 8;\n            case 'pbeUnknownGost':\n                return 16;\n            case 'sha1':\n                return 20;\n            default:\n                return 32;\n        }\n    }\n\n    // Password to bytes\n    function passwordData(derivation, password) {\n        if (!password)\n            return new CryptoOperationData(0);\n        if (derivation.name.indexOf('CPKDF') >= 0) {\n            // CryptoPro store password\n            var r = [];\n            for (var i = 0; i < password.length; i++) {\n                var c = password.charCodeAt(i);\n                r.push(c & 0xff);\n                r.push(c >>> 8 & 0xff);\n                r.push(0);\n                r.push(0);\n            }\n            return new Uint8Array(r).buffer;\n        } else if (derivation.name.indexOf('PFXKDF') >= 0)\n            // PKCS#12 unicode password\n            return coding.Chars.decode(password + '\\0', 'unicode');\n        else\n            // PKCS#5 password mode\n            return coding.Chars.decode(password, 'utf8');\n    }\n\n\n\n    /**\n     * Key and Certificate Store methods\n     * \n     * @class GostKeys\n     */\n    function GostKeys() {\n    }\n\n    /**\n     * Key templates\n     * <ul>\n     *      <li>providerName - provider name for key encryption, default 'CP-01'</li>\n     *      <li>days - validity of the key in days, default 7305</li>\n     * </ul>\n     * \n     * @memberOf GostKeys\n     * @instance\n     */\n    var options = {\n        providerName: 'CP-01',\n        days: 7305\n    };\n\n    GostKeys.prototype.options = options;\n\n    /**\n     * A class for private keys in PKCS #8 format\n     * \n     * @class GostKeys.PKCS8\n     * @extends GostASN1.PrivateKeyInfo\n     * @param {(FormatedData|GostASN1.PrivateKeyInfo)} keyInfo\n     */\n    function PKCS8(keyInfo) {\n        asn1.PrivateKeyInfo.call(this, keyInfo);\n    }\n\n    extend(asn1.PrivateKeyInfo, PKCS8, {\n        /**\n         * Get the private key\n         * \n         * @memberOf GostKeys.PKCS8\n         * @instance\n         * @returns {Promise} Promise to return the {@link Key}\n         */\n        getPrivateKey: function ()\n        {\n            var keyUsages = (this.privateKeyAlgorithm.id === 'rsaEncryption') ? ['sign'] :\n                    ['sign', 'deriveKey', 'deriveBits'];\n            return subtle.importKey('pkcs8', this.encode(), this.privateKeyAlgorithm, 'true', keyUsages);\n        },\n        /**\n         * Set the private key\n         * \n         * @memberOf GostKeys.PKCS8\n         * @instance\n         * @param {Key} privateKey The Private Key\n         * @returns {Promise} Promise to return the self object after set the key\n         */\n        setPrivateKey: function (privateKey)\n        {\n            var self = global;\n            return subtle.exportKey('pkcs8', privateKey).then(function (keyInfo) {\n                asn1.PrivateKeyInfo.call(self, keyInfo);\n                return self;\n            });\n        },\n        /**\n         * Generate private key and return certification request\n         * \n         * @memberOf GostKeys.PKCS8\n         * @instance\n         * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\n         * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm identifier\n         * @returns {Promise} Promise to return the {@link GostCert.Request} after key generation\n         */\n        generate: function (req, keyAlgorithm)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                if (!(req instanceof cert.Request))\n                    req = new cert.Request(req);\n                // Generate request\n                return req.generate(keyAlgorithm);\n            }).then(function (key) {\n                asn1.PrivateKeyInfo.call(self, key);\n                ;\n                return req;\n            });\n        }\n    });\n\n    /**\n     * A class for private keys in PKCS #8 format\n     * \n     * @memberOf GostKeys\n     * @type GostKeys.PKCS8\n     */\n    GostKeys.prototype.PKCS8 = PKCS8;\n\n    /**\n     * A class for PKCS #5 and PKCS #12 password-encrypted private keys in PKCS #8 format\n     * \n     * @class GostKeys.PKCS8Encrypted\n     * @extends GostASN1.EncryptedPrivateKeyInfo\n     * @param {(FormatedData|GostASN1.EncryptedPrivateKeyInfo)} encryptedKey\n     */\n    function PKCS8Encrypted(encryptedKey) {\n        asn1.EncryptedPrivateKeyInfo.call(this, encryptedKey);\n    }\n\n    extend(asn1.EncryptedPrivateKeyInfo, PKCS8Encrypted, {\n        /**\n         * Get the private key info\n         * \n         * @memberOf GostKeys.PKCS8Encrypted\n         * @instance\n         * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption \n         * @returns {Promise} Promise to return decrypted {@link GostKeys.PKCS8}\n         */\n        getKey: function (keyPassword)\n        {\n            var self = this, engine;\n            return new Promise(call).then(function () {\n                engine = new cms.EncryptedDataContentInfo({\n                    contentType: 'encryptedData',\n                    version: 0,\n                    encryptedContentInfo: {\n                        contentType: 'data',\n                        contentEncryptionAlgorithm: self.encryptionAlgorithm,\n                        encryptedContent: self.encryptedData\n                    }\n                });\n                return engine.getEnclosed(keyPassword);\n            }).then(function (contentInfo) {\n                // Create key object\n                return PKCS8.decode(contentInfo.content);\n            });\n        },\n        /**\n         * Get the private key\n         * \n         * @memberOf GostKeys.PKCS8Encrypted\n         * @instance\n         * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption \n         * @returns {Promise} Promise to return decrypted {@link Key}\n         */\n        getPrivateKey: function (keyPassword)\n        {\n            return this.getKey(keyPassword).then(function (keyInfo) {\n                return keyInfo.getPrivateKey();\n            });\n        },\n        /**\n         * Sets and encrypt the private key info\n         * \n         * @memberOf GostKeys.PKCS8Encrypted\n         * @instance\n         * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The private key info \n         * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for encryption\n         * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\n         * @returns {Promise} Promise to return self object after set key \n         */\n        setKey: function (keyInfo, keyPassword, encryptionAlgorithm)\n        {\n            var self = this, engine;\n            return new Promise(call).then(function () {\n                keyInfo = new PKCS8(keyInfo);\n                engine = new cms.EncryptedDataContentInfo();\n                return engine.encloseContent(keyInfo.encode(), keyPassword, encryptionAlgorithm || options.providerName);\n            }).then(function () {\n                self.encryptionAlgorithm = engine.encryptedContentInfo.contentEncryptionAlgorithm;\n                self.encryptedData = engine.encryptedContentInfo.encryptedContent;\n                return self;\n            });\n        },\n        /**\n         * Set the private key\n         * \n         * @memberOf GostKeys.PKCS8Encrypted\n         * @instance\n         * @param {Key} privateKey The private key\n         * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption \n         * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\n         * @returns {Promise} Promise to return self object after set key \n         */\n        setPrivateKey: function (privateKey, keyPassword, encryptionAlgorithm)\n        {\n            var self = global;\n            return new PKCS8().setPrivateKey(privateKey).then(function (keyInfo) {\n                return self.setKey(keyInfo, keyPassword, encryptionAlgorithm);\n            });\n        },\n        /**\n         * Generate private key and return certification request\n         * \n         * @memberOf GostKeys.PKCS8Encrypted\n         * @instance\n         * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\n         * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption \n         * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\n         * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\n         * @returns {Promise} Promise to return {@link GostCert.Request}\n         */\n        generate: function (req, keyPassword, keyAlgorithm, encryptionAlgorithm)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                if (!(req instanceof cert.Request))\n                    req = new cert.Request(req);\n                // Generate request\n                return req.generate(keyAlgorithm);\n            }).then(function (key) {\n                return self.setKey(key, keyPassword, encryptionAlgorithm);\n            }).then(function () {\n                return req;\n            });\n        }\n    });\n\n    /**\n     * A class for PKCS #5 and PKCS #12 password-encrypted private keys in PKCS #8 format\n     * \n     * @memberOf GostKeys\n     * @type GostKeys.PKCS8Encrypted\n     */\n    GostKeys.prototype.PKCS8Encrypted = PKCS8Encrypted;\n\n    /**\n     * A class for password-encrypted private keys in SignalCom container<br><br>\n     * \n     * The container file list:\n     * <ul>\n     *      <li>mk.db3 - master key data</li>\n     *      <li>masks.db3 - encrypted or decrypted masks</li>\n     *      <li>kek.opq - wrapped key encryption key</li>\n     *      <li>rand.opq - wrapped random data</li>\n     * </ul>\n     * \n     * @class GostKeys.SignalComKeyContainer\n     * @param {SignalComKeyContainer} container \n     */\n    function SignalComKeyContainer(container)\n    {\n        if (container) {\n            var self = global;\n            ['mk.db3', 'masks.db3', 'kek.opq', 'rand.opq'].forEach(function (name) {\n                self[name] = container[name];\n            });\n        }\n    }\n\n    extend(Object, SignalComKeyContainer, {\n        /**\n         * Get password-based encryption key\n         * \n         * @memberOf GostKeys.SignalComKeyContainer\n         * @instance\n         * @param {string} keyPassword \n         * @returns {Promise} Promise to return {@link Key}\n         */\n        getEncryptionKey: function (keyPassword)\n        {\n            var self = this, wrapping = providers['SC-01'].wrapping,\n                    encryption = providers['SC-01'].encryption,\n                    derivation = providers['SC-01'].derivation,\n                    masks = self['masks.db3'], mk = self['mk.db3'], kek = self['kek.opq'];\n            // Decrypt key\n            return new Promise(call).then(function () {\n                if ((!masks || !mk || !kek))\n                    throw new Error('Not enougth key container files');\n                // Check for encrypted key\n                if (masks.byteLength > 32) {\n                    if (keyPassword) {\n                        // Extract password based encryption mask\n                        return subtle.importKey('raw', coding.Chars.decode(keyPassword, 'utf8'),\n                                derivation, false, ['deriveKey', 'deriveBits']).then(function (integrityKey) {\n                            return subtle.deriveKey(expand(derivation,\n                                    {salt: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])}),\n                                    integrityKey, encryption, false, ['decrypt']);\n                        }).then(function (encryptionKey) {\n                            var encrypted = new cms.EncryptedDataContentInfo(masks);\n                            return encrypted.getEnclosed(encryptionKey);\n                        }).then(function (digested) {\n                            return digested.verify();\n                        }).then(function (data) {\n                            return data.content;\n                        });\n                    } else\n                        throw new Error('Key password is required');\n                } else if (keyPassword)\n                    throw new Error('Key password is not required');\n                return masks;\n            }).then(function (decrypedMasks) {\n                // Combine masks\n                masks = decrypedMasks;\n                var mkm = new Uint8Array(mk.byteLength + masks.byteLength);\n                mkm.set(new Uint8Array(mk), 0);\n                mkm.set(new Uint8Array(masks), mk.byteLength);\n                // Import master key\n                return subtle.importKey('raw', mkm.buffer, wrapping, false, ['unwrapKey']);\n            }).then(function (unwrappingKey) {\n                // Unwrap kek\n                return subtle.unwrapKey('raw', kek, unwrappingKey, wrapping, encryption,\n                        false, ['wrapKey', 'unwrapKey']);\n            });\n        },\n        /**\n         * Generate encryption key and container files\n         * \n         * @memberOf GostKeys.SignalComKeyContainer\n         * @instance\n         * @param {string} keyPassword\n         * @returns {Promise} Promise to return {@link Key}\n         */\n        generateContainer: function (keyPassword)\n        {\n            var self = this, wrapping = providers['SC-01'].wrapping,\n                    encryption = providers['SC-01'].encryption,\n                    derivation = providers['SC-01'].derivation,\n                    digest = providers['SC-01'].digest,\n                    encryptionKey, wrappingKey;\n            return new Promise(call).then(function () {\n                // Generate wrapping key\n                return subtle.generateKey(wrapping, true, ['wrapKey']);\n            }).then(function (key) {\n                wrappingKey = key;\n                // Split masks\n                var len = wrappingKey.buffer.byteLength;\n                self['mk.db3'] = new Uint8Array(new Uint8Array(wrappingKey.buffer, 0, len - 32)).buffer;\n                var masks = new Uint8Array(new Uint8Array(wrappingKey.buffer, len - 32, 32)).buffer;\n                if (keyPassword) {\n                    // Encrypt masks\n                    var encrypted = new cms.EncryptedDataContentInfo(),\n                            digested = new cms.DigestedDataContentInfo();\n                    // Digest data\n                    return digested.encloseContent(masks, digest).then(function () {\n                        digested = {// Double wrapping - SignalCom mistake\n                            contentType: 'digestedData',\n                            content: digested.encode()\n                        };\n                        return subtle.importKey('raw', coding.Chars.decode(keyPassword, 'utf8'),\n                                derivation, false, ['deriveKey', 'deriveBits']);\n                    }).then(function (integrityKey) {\n                        return subtle.deriveKey(expand(derivation,\n                                {salt: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])}),\n                                integrityKey, encryption, false, ['encrypt']);\n                    }).then(function (encryptionKey) {\n                        // Encrypt data with password\n                        return encrypted.encloseContent(digested, encryptionKey, encryption);\n                    }).then(function () {\n                        return encrypted.encode();\n                    });\n                }\n                return masks;\n            }).then(function (masks) {\n                self['masks.db3'] = masks;\n                // Generate encryption key\n                return subtle.generateKey(encryption, false, ['wrapKey', 'unwrapKey']);\n            }).then(function (key) {\n                encryptionKey = key;\n                // Wrap encryption key\n                return subtle.wrapKey('raw', key, wrappingKey, wrapping);\n            }).then(function (data) {\n                self['kek.opq'] = data;\n                // Generate random seed\n                return subtle.generateKey(encryption, false, ['wrapKey', 'unwrapKey']);\n            }).then(function (key) {\n                // Wrap random seed\n                return subtle.wrapKey('raw', key, wrappingKey, wrapping);\n            }).then(function (data) {\n                self['rand.opq'] = data;\n                return encryptionKey;\n            });\n        }\n    });\n\n    /**\n     * A class for password-encrypted private keys in SignalCom container\n     * \n     * @memberOf GostKeys\n     * @type GostKeys.SignalComKeyContainer\n     */\n    GostKeys.prototype.SignalComKeyContainer = SignalComKeyContainer;\n\n    /**\n     * A class for password-encrypted SignalCom private keys\n     * \n     * @class GostKeys.SignalComPrivateKeyInfo\n     * @extends GostASN1.GostWrappedPrivateKey\n     * @extends GostKeys.SignalComKeyContainer\n     * @param {GostASN1.PrivateKeyInfo} keyInfo \n     * @param {GostKeys.SignalComKeyContainer} container \n     */\n    function SignalComPrivateKeyInfo(keyInfo, container)\n    {\n        asn1.GostWrappedPrivateKey.call(this, keyInfo);\n        SignalComKeyContainer.call(this, container);\n    }\n\n    extend(asn1.GostWrappedPrivateKey, SignalComPrivateKeyInfo, {\n        /**\n         * Get the private key info\n         * \n         * @memberOf GostKeys.SignalComPrivateKeyInfo\n         * @param {string} keyPassword The password for decryption \n         * @returns {Promise} Promise to return {@link GostKeys.PKCS8}\n         */\n        getKey: function (keyPassword)\n        {\n            return this.getPrivateKey(keyPassword).then(function (privateKey) {\n                return new PKCS8().setPrivateKey(privateKey);\n            });\n        },\n        /**\n         * Get the private key\n         * \n         * @memberOf GostKeys.SignalComPrivateKeyInfo\n         * @instance\n         * @param {string} keyPassword The password for decryption \n         * @returns {Promise} Promise to return the {@link Key}\n         */\n        getPrivateKey: function (keyPassword)\n        {\n            var self = this, wrapping = providers['SC-01'].wrapping,\n                    publicKeyData;\n            // Decrypt key\n            return new Promise(call).then(function () {\n                // Get password key\n                return self.getEncryptionKey(keyPassword, true);\n            }).then(function (encryptionKey) {\n                // Unwrap private key\n                return subtle.unwrapKey('raw', self.privateKeyWrapped, encryptionKey, wrapping,\n                        self.privateKeyAlgorithm, true, ['sign', 'deriveKey', 'deriveBits']);\n            }).then(function (privateKey) {\n                publicKeyData = self.attributes && self.attributes['id-sc-gostR3410-2001-publicKey'];\n                // Generate key pair\n                if (publicKeyData)\n                    return subtle.generateKey(expand(privateKey.algorithm, {ukm: privateKey.buffer}),\n                            privateKey.extractable, privateKey.usages);\n                else\n                    return {privateKey: privateKey};\n            }).then(function (keyPair) {\n                // Compare public key\n                if (publicKeyData && !equalBuffers(keyPair.publicKey.buffer, publicKeyData))\n                    throw new Error('Check public key failed');\n                return keyPair.privateKey;\n            });\n        },\n        /**\n         * Sets and encrypt the private key info\n         * \n         * @memberOf GostKeys.SignalComPrivateKeyInfo\n         * @instance\n         * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The private key info \n         * @param {string} keyPassword The password for encryption\n         * @returns {Promise} Promise to return self object after set the key\n         */\n        setKey: function (keyInfo, keyPassword)\n        {\n            var self = global;\n            return new PKCS8(keyInfo).getPrivateKey().then(function (privateKey) {\n                return self.setPrivateKey(privateKey, keyPassword);\n            });\n        },\n        /**\n         * Set the private key\n         * \n         * @memberOf GostKeys.SignalComPrivateKeyInfo\n         * @instance\n         * @param {Key} privateKey The private key\n         * @param {string} keyPassword The secret key encryption \n         * @returns {Promise} Promise to return self object after set the key\n         */\n        setPrivateKey: function (privateKey, keyPassword)\n        {\n            var self = this, wrapping = providers['SC-01'].wrapping, wrappedData;\n            return new Promise(call).then(function () {\n                // Get or generate encryption key\n                return self.getEncryptionKey(keyPassword)['catch'](function () {\n                    return self.generateContainer(keyPassword);\n                });\n            }).then(function (encryptionKey) {\n                // Encrypt key buffer\n                return subtle.wrapKey('raw', privateKey, encryptionKey, wrapping);\n            }).then(function (data) {\n                wrappedData = data;\n                // Generate public key\n                return subtle.generateKey(expand(privateKey.algorithm,\n                        {ukm: privateKey.buffer}), true, ['sign', 'verify']);\n            }).then(function (keyPair) {\n                self.object = {\n                    version: 0,\n                    privateKeyAlgorithm: privateKey.algorithm,\n                    privateKeyWrapped: wrappedData,\n                    attributes: {\n                        'id-sc-gostR3410-2001-publicKey': keyPair.publicKey.buffer\n                    }\n                };\n                return self;\n            });\n        },\n        /**\n         * Change key password\n         * \n         * @memberOf GostKeys.SignalComPrivateKeyInfo\n         * @instance\n         * @param {string} oldKeyPassword Old key password\n         * @param {string} newKeyPassword New key password\n         * @returns {Promise} Promise to return self object after change password\n         */\n        changePassword: function (oldKeyPassword, newKeyPassword)\n        {\n            var self = global;\n            return self.getPrivateKey(oldKeyPassword).then(function (privateKey) {\n                return self.setPrivateKey(privateKey, newKeyPassword);\n            });\n        },\n        /**\n         * Generate private key, certificate and return certification request\n         * \n         * @memberOf GostKeys.SignalComPrivateKeyInfo\n         * @instance\n         * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\n         * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption \n         * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\n         * @returns {Promise} Promise to return {@link GostCert.Request}\n         */\n        generate: function (req, keyPassword, keyAlgorithm)\n        {\n            var self = this, keyInfo;\n            return new Promise(call).then(function () {\n                if (!(req instanceof cert.Request))\n                    req = new cert.Request(req);\n                // Generate request\n                return req.generate(keyAlgorithm);\n            }).then(function (key) {\n                keyInfo = key;\n                return self.setKey(keyInfo, keyPassword);\n            }).then(function () {\n                return req;\n            });\n        }\n    });\n    defineProperties(SignalComPrivateKeyInfo.prototype, SignalComKeyContainer.prototype);\n\n    /**\n     * A class for password-encrypted SignalCom private keys\n     * \n     * @memberOf GostKeys\n     * @type GostKeys.SignalComPrivateKeyInfo\n     */\n    GostKeys.prototype.SignalComPrivateKeyInfo = SignalComPrivateKeyInfo;\n\n    /**\n     * A class for password-encrypted private keys in CryptoPro container\n     * \n     * The container file list:\n     * <ul>\n     *      <li>header - container header @link GostASN1.GostKeyContainer</li>\n     *      <li>name - container name @link GostASN1.GostKeyContainerName</li>\n     *      <li>primary - private keys data @link GostASN1.GostPrivateKeys</li>\n     *      <li>masks - private key masks @link GostASN1.GostPrivateMasks</li>\n     *      <li>primary2 - reserve of private keys data @link GostASN1.GostPrivateKeys</li>\n     *      <li>masks2 - reserve of private key masks @link GostASN1.GostPrivateMasks</li>\n     * </ul>\n     * \n     * @class GostKeys.CryptoProKeyContainer\n     * @param {Object} container \n     */\n    function CryptoProKeyContainer(container)\n    {\n        if (container) {\n            this.header = asn1.GostKeyContainer.decode(container.header);\n            this.name = asn1.GostKeyContainerName.decode(container.name);\n            this.primary = asn1.GostPrivateKeys.decode(container.primary);\n            this.masks = asn1.GostPrivateMasks.decode(container.masks);\n            if (container.primary2 && container.masks2) {\n                this.primary2 = asn1.GostPrivateKeys.decode(container.primary2);\n                this.masks2 = asn1.GostPrivateMasks.decode(container.masks2);\n            }\n        }\n    }\n\n    extend(Object, CryptoProKeyContainer, (function () {\n\n\n        // True if 512 bit\n        function isKeySize512(algorithm) {\n            return algorithm.name.indexOf('-512') >= 0 || algorithm.length === 512;\n        }\n\n        // Test version 2012\n        function isVersion2012(algorithm) {\n            return !((algorithm.name.indexOf('-94') >= 0 || algorithm.name.indexOf('-2001') >= 0 ||\n                    algorithm.version === 1994 || algorithm.version === 2001));\n        }\n\n        // Derive password key\n        function derivePasswordKey(algorithm, password, salt) {\n            var hash = isVersion2012(algorithm) ? 'GOST R 34.11-256' : 'GOST R 34.11-94/' + (algorithm.sBox || 'D-A'),\n                    derivation = {name: 'CPKDF', hash: hash, salt: salt, iterations: password ? 2000 : 2};\n\n            // Import password\n            return subtle.importKey('raw', passwordData(derivation, password),\n                    derivation, false, ['deriveKey', 'deriveBits']).then(function (baseKey) {\n\n                // Derive key\n                return subtle.deriveKey(derivation, baseKey, 'GOST 28147',\n                        false, ['sign', 'verify', 'encrypt', 'decrypt']);\n            });\n        }\n\n        // Compute password MAC \n        function computePasswordMAC(algorithm, password, salt) {\n            var mac = expand({name: 'GOST 28147-MAC'}, algorithm.encParams);\n\n            // Derive password\n            return derivePasswordKey(algorithm, password, salt).then(function (macKey) {\n\n                // Mac for 16 zero bytes\n                return subtle.sign(mac, macKey,\n                        new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n            });\n        }\n\n        //        var lastBuffer;\n        // Compute container MAC\n        function computeContainerMAC(algorithm, content) {\n            var mac = expand({name: 'GOST 28147-MAC'}, algorithm.encParams),\n                    keyData = new Uint8Array([// 32 zero bytes\n                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n            return subtle.importKey('raw', keyData, mac, false, ['sign']).then(function (macKey) {\n                //                var buffer = new Uint8Array(content.encode());\n                //                console.log(coding.Hex.encode(buffer));\n                //                if (lastBuffer && lastBuffer.length === buffer.length) {\n                //                    for (var i = 0; i < buffer.length; i++)\n                //                        if (lastBuffer[i] !== buffer[i])\n                //                            console.log('diff at ' + i);\n                //                } else\n                //                    console.log('diff length');\n                //                lastBuffer = buffer;\n                // Mac for content\n                return subtle.sign(mac, macKey, content.encode());\n            });\n        }\n\n        // Compute mask MAC\n        function computeMaskMAC(algorithm, mask, status) {\n            // Import mask as key for MAC\n            var mac = expand({name: 'GOST 28147-MAC'}, algorithm.encParams),\n                    keyData = mask.byteLength === 64 ?\n                    new Uint8Array(new Uint8Array(mask, 32, 32)).buffer : mask;\n            return subtle.importKey('raw', keyData, mac, false, ['sign']).then(function (macKey) {\n\n                // Verify MAC for maskStatus\n                return subtle.sign(mac, macKey, status);\n            });\n        }\n\n        // Generate mask\n        function generateMasks(algorithm) {\n            var wrapAlgorithm = expand(algorithm, {mode: 'MASK'}),\n                    mask, status = getSeed(12);\n            wrapAlgorithm.name = wrapAlgorithm.name.replace('-DH', '');\n            return subtle.generateKey(wrapAlgorithm, true, ['wrapKey', 'unwrapKey']).then(function (key) {\n                return subtle.exportKey('raw', key);\n            }).then(function (data) {\n                mask = data;\n                return computeMaskMAC(algorithm, mask, status);\n            }).then(function (hmac) {\n                return new asn1.GostPrivateMasks({\n                    mask: mask,\n                    randomStatus: status,\n                    hmacRandom: hmac\n                });\n            });\n        }\n\n        // Compute FP\n        function computeFP(privateKey) {\n            // Generate key pair with predefined ukm for check public key\n            return subtle.generateKey(expand(privateKey.algorithm, {ukm: privateKey.buffer}), true, ['sign', 'verify']).then(function (keyPair) {\n                return new Uint8Array(new Uint8Array(keyPair.publicKey.buffer, 0, 8)).buffer;\n            });\n        }\n\n        // Unwrap private key\n        function unwrapKey(algorithm, encryptionKey, key, mask, fp) {\n            var encryption = {name: 'GOST 28147-ECB', sBox: algorithm.encParams && algorithm.encParams.sBox},\n            unwrapAlgorithm = expand(algorithm, {mode: 'MASK'}), privateKey;\n            unwrapAlgorithm.name = unwrapAlgorithm.name.replace('-DH', '');\n            var wrappedKey;\n\n            // Encrypt ukm data for private key\n            return subtle.decrypt(encryption, encryptionKey, key).then(function (data) {\n                wrappedKey = data;\n                // Import mask key\n                return subtle.importKey('raw', mask, unwrapAlgorithm, 'false', ['sign', 'unwrapKey']);\n            }).then(function (unwrappingKey) {\n\n                // Unwrap private key\n                return subtle.unwrapKey('raw', wrappedKey, unwrappingKey,\n                        unwrapAlgorithm, algorithm, 'true', ['sign']);\n            }).then(function (key) {\n                privateKey = key;\n                return computeFP(privateKey);\n            }).then(function (computedFP) {\n                // Check public key buffer\n                if (!equalBuffers(computedFP, fp))\n                    throw new Error('Incorrect fp');\n\n                return privateKey;\n            });\n\n        }\n\n        // Wrap private key\n        function wrapKey(algorithm, encryptionKey, privateKey, mask) {\n            var encryption = {name: 'GOST 28147-ECB', sBox: algorithm.encParams && algorithm.encParams.sBox},\n            wrapAlgorithm = expand(algorithm, {mode: 'MASK'});\n            wrapAlgorithm.name = wrapAlgorithm.name.replace('-DH', '');\n\n            // Import mask key\n            return subtle.importKey('raw', mask, wrapAlgorithm, false,\n                    ['sign', 'wrapKey']).then(function (wrappingKey) {\n                // Wrap private key\n                return subtle.wrapKey('raw', privateKey, wrappingKey, wrapAlgorithm);\n            }).then(function (wrappedKey) {\n                // Encrypt key\n                return subtle.encrypt(encryption, encryptionKey, wrappedKey);\n            });\n        }\n\n        // Decrypt private key\n        function decryptKey(content, primary, masks, keyPassword, secondary) {\n            var algorithm = content.primaryPrivateKeyParameters.privateKeyAlgorithm;\n            return new Promise(call).then(function () {\n                // Check format\n                if (primary.hmacKey)\n                    throw new Error('Old key format');\n\n                if (masks.randomStatus.byteLength < 12)\n                    throw new Error(\"Invalid random status length\");\n\n                // Import mask as key for MAC\n                return computeMaskMAC(algorithm, masks.mask, masks.randomStatus);\n            }).then(function (hmac) {\n                if (!equalBuffers(hmac, masks.hmacRandom))\n                    throw new Error(\"Imita for mask is invalid\");\n\n                // Derive key\n                return derivePasswordKey(algorithm, keyPassword, new Uint8Array(masks.randomStatus, 0, 12));\n            }).then(function (encryptionKey) {\n                // Unwrap keys\n                return secondary && primary.secondaryKey ?\n                        unwrapKey(content.secondaryPrivateKeyParameters.privateKeyAlgorithm,\n                                encryptionKey, primary.secondaryKey, masks.mask, content.secondaryFP) :\n                        unwrapKey(algorithm, encryptionKey, primary.primaryKey, masks.mask, content.primaryFP);\n            });\n        }\n\n        // Encrypt private key\n        function encryptKey(algorithm, primary, masks, keyPassword, secondary, privateKey) {\n            // Derive key\n            return derivePasswordKey(algorithm, keyPassword, new Uint8Array(masks.randomStatus, 0, 12)).then(function (encryptionKey) {\n                // Wrap keys\n                return wrapKey(algorithm, encryptionKey, privateKey, masks.mask);\n            }).then(function (encryptedKey) {\n                if (!primary)\n                    primary = new asn1.GostPrivateKeys();\n                if (secondary) {\n                    primary.secondaryKey = encryptedKey;\n                } else {\n                    primary.primaryKey = encryptedKey;\n                }\n                return primary;\n            });\n        }\n\n\n\n        return {\n            /**\n             * Get the private key info\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {string} keyPassword The password for decryption \n             * @param {boolean} secondary True if required secondary key\n             * @returns {Promise} Promise to return {@link GostKeys.PKCS8}\n             */\n            getKey: function (keyPassword, secondary)\n            {\n                return this.getPrivateKey(keyPassword, secondary).then(function (privateKey) {\n                    return new PKCS8().setPrivateKey(privateKey);\n                });\n            },\n            /**\n             * Get the private key\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {string} keyPassword Rhe password for decryption \n             * @param {boolean} secondary True if required secondary key\n             * @returns {Promise} Promise to return the {@link Key}\n             */\n            getPrivateKey: function (keyPassword, secondary)\n            {\n                var self = this, content = self.header.keyContainerContent;\n                // Decrypt key\n                return decryptKey(content, self.primary, self.masks, keyPassword, secondary)['catch'](function (e) {\n                    if (self.primary2 && self.masks2)\n                        return decryptKey(content, self.primary2, self.masks2, keyPassword, secondary);\n                    else\n                        throw e;\n                });\n            },\n            /**\n             * Get the certificate from the key container\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {boolean} secondary True for set secondary certificate\n             * @returns {Promise} Promise to return {@link GostCert.X509}\n             */\n            getCertificate: function (secondary)\n            {\n                var self = this, content = self.header.keyContainerContent;\n                return new Promise(call).then(function () {\n                    if (secondary)\n                        return new cert.X509(content.secondaryCertificate);\n                    else\n                        return new cert.X509(content.primaryCertificate);\n                });\n            },\n            /**\n             * Get the container name\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @returns {string} Container name\n             */\n            getContainerName: function ()\n            {\n                return this.name.containerName;\n            },\n            /**\n             * Sets and encrypt the private key info\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The private key info \n             * @param {string} keyPassword The assword for encryption\n             * @param {boolean} secondary True for set secondary key\n             * @param {number} days Validity days. Default 7305 days (20 years)\n             * @returns {Promise} Promise to return self object after set key\n             */\n            setKey: function (keyInfo, keyPassword, secondary, days)\n            {\n                var self = global;\n                return new PKCS8(keyInfo).getPrivateKey().then(function (privateKey) {\n                    return self.setPrivateKey(privateKey, keyPassword, secondary, days);\n                });\n            },\n            /**\n             * Set the private key\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {Key} privateKey The private key\n             * @param {string} keyPassword The secret key encryption \n             * @param {boolean} secondary True for set secondary key\n             * @param {number} days Validity days. Default 7305 days (20 years)\n             * @returns {Promise} Promise to return self object after set key\n             */\n            setPrivateKey: function (privateKey, keyPassword, secondary, days)\n            {\n                var self = this, content, algorithm;\n                return new Promise(call).then(function () {\n                    self.header = self.header || new asn1.GostKeyContainer({\n                        keyContainerContent: {\n                            containerAlgoritmIdentifier: {\n                                algorithm: 'id-CryptoPro-GostPrivateKeys-V2-Full'\n                            },\n                            attributes: ['kccaReservePrimary', 'kccaPrimaryKeyAbsent'],\n                            extensions: {\n                                keyValidity: {\n                                    notAfter: now(days || options.days)\n                                }\n                            }\n                        }\n                    });\n                    content = self.header.keyContainerContent;\n                    // Set private key                    \n                    var keyParameters = secondary ? content.secondaryPrivateKeyParameters :\n                            content.primaryPrivateKeyParameters;\n                    if (!keyParameters) {\n                        algorithm = expand(privateKey.algorithm, {\n                            sBox: \"D-A\",\n                            encParams: {\n                                block: \"CFB\",\n                                sBox: \"E-A\",\n                                keyMeshing: \"CP\"\n                            }\n                        });\n                        keyParameters = {\n                            attributes: [\"pkaExportable\", \"pkaExchange\", \"pkaDhAllowed\"],\n                            privateKeyAlgorithm: algorithm\n                        };\n                        if (secondary) {\n                            if (!content.primaryPrivateKeyParameters)\n                                throw new Error('Primary key must be defined first');\n                            content.secondaryPrivateKeyParameters = keyParameters;\n                        } else {\n                            content.primaryPrivateKeyParameters = keyParameters;\n                            var absent = content.attributes.indexOf('kccaPrimaryKeyAbsent');\n                            if (absent >= 0)\n                                content.attributes.splice(absent, 1);\n                        }\n                    } else\n                        algorithm = keyParameters.privateKeyAlgorithm;\n                    // Generate masks\n                    var promises = [];\n                    [0, 1].forEach(function (i) {\n                        var name = 'masks' + (i > 0 ? '2' : '');\n                        if (!self[name])\n                            promises.push(generateMasks(algorithm).then(function (masks) {\n                                self[name] = masks;\n                            }));\n                    });\n                    return Promise.all(promises);\n                }).then(function () {\n                    // Encrypt key\n                    var promises = [];\n                    [0, 1].forEach(function (i) {\n                        var name = 'primary' + (i > 0 ? '2' : ''),\n                                maskname = 'masks' + (i > 0 ? '2' : '');\n                        promises.push(encryptKey(algorithm, self[name], self[maskname], keyPassword, secondary, privateKey).then(function (primary) {\n                            self[name] = primary;\n                        }));\n                    });\n                    return Promise.all(promises);\n                }).then(function () {\n                    // Compute FP for a private key\n                    return computeFP(privateKey).then(function (FP) {\n                        if (secondary)\n                            content.secondaryFP = FP;\n                        else\n                            content.primaryFP = FP;\n                    });\n                }).then(function () {\n                    // Compute password MAC\n                    var softPassword = content.attributes.indexOf('kccaSoftPassword');\n                    if (keyPassword) {\n                        if (softPassword < 0)\n                            content.attributes.push('kccaSoftPassword');\n                        return computePasswordMAC(algorithm, keyPassword, content.primaryFP);\n                    } else {\n                        if (softPassword >= 0)\n                            content.attributes.splice(softPassword, 1);\n                    }\n                }).then(function (hmac) {\n                    if (hmac)\n                        content.hmacPassword = hmac;\n                    // Calculate container MAC\n                    return computeContainerMAC(algorithm, content);\n                }).then(function (hmac) {\n                    self.header.hmacKeyContainerContent = hmac;\n                    return self;\n                });\n            },\n            /**\n             * Set the certificate to the key container\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {(FormatedData|GostCert.X509)} certificate The certificate\n             * @param {boolean} secondary True for set secondary certificate\n             * @param {number} days Validity days. Default 7305 days (20 years)\n             * @returns {Promise} Promise to return self object after set certificate\n             */\n            setCertificate: function (certificate, secondary, days)\n            {\n                var self = this, content, algorithm;\n                return new Promise(call).then(function () {\n                    self.header = self.header || new asn1.GostKeyContainer({\n                        keyContainerContent: {\n                            containerAlgoritmIdentifier: {\n                                algorithm: 'id-CryptoPro-GostPrivateKeys-V2-Full'\n                            },\n                            attributes: ['kccaReservePrimary', 'kccaPrimaryKeyAbsent'],\n                            extensions: {\n                                keyValidity: {\n                                    notAfter: now(days || options.days)\n                                }\n                            }\n                        }\n                    });\n                    content = self.header.keyContainerContent;\n                    certificate = new cert.X509(certificate);\n                    algorithm = (content.primaryPrivateKeyParameters &&\n                            content.primaryPrivateKeyParameters.privateKeyAlgorithm) ||\n                            expand(certificate.subjectPublicKeyInfo.algorithm, {\n                                sBox: \"D-A\",\n                                encParams: {\n                                    block: \"CFB\",\n                                    sBox: \"E-A\",\n                                    keyMeshing: \"CP\"\n                                }\n                            });\n                    return certificate.getPublicKey();\n                }).then(function (publicKey) {\n                    if (secondary) {\n                        if (content.secondaryFP && !equalBuffers(content.secondaryFP,\n                                new Uint8Array(publicKey.buffer, 0, content.secondaryFP.byteLength)))\n                            throw new Error('The public key of the certificate does not match the private key');\n                        content.secondaryCertificate = certificate;\n                    } else {\n                        if (content.primaryFP && !equalBuffers(content.primaryFP,\n                                new Uint8Array(publicKey.buffer, 0, content.primaryFP.byteLength)))\n                            throw new Error('The public key of the certificate does not match the private key');\n                        content.primaryCertificate = certificate;\n                    }\n                    // Calculate container MAC\n                    return computeContainerMAC(algorithm, content);\n                }).then(function (hmac) {\n                    self.header.hmacKeyContainerContent = hmac;\n                    return self;\n                });\n            },\n            /**\n             * Set the container name\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {string} name Container name\n             */\n            setContainerName: function (name)\n            {\n                this.name = new asn1.GostKeyContainerName({containerName: name});\n            },\n            /**\n             * Verify key container with password\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {string} keyPassword the secret key or password for decryption \n             * @returns {Promise} Promise to return self object after verify\n             */\n            verify: function (keyPassword)\n            {\n                var self = this, content, algorithm;\n                return new Promise(call).then(function () {\n                    content = self.header.keyContainerContent;\n                    algorithm = content.primaryPrivateKeyParameters.privateKeyAlgorithm;\n                    // Verify container MAC\n                    return computeContainerMAC(algorithm, content);\n                }).then(function (hmac) {\n                    if (!equalBuffers(hmac, self.header.hmacKeyContainerContent))\n                        throw new Error(\"Container is not valid.\");\n                    // Verify key password MAC\n                    var needPassword = content.attributes.indexOf('kccaSoftPassword') >= 0;\n                    if (!keyPassword && needPassword)\n                        throw new Error(\"Password is required\");\n                    if (keyPassword && !needPassword)\n                        throw new Error(\"Password is not reqiured.\");\n                    if (keyPassword)\n                        // Derive password\n                        return computePasswordMAC(algorithm, keyPassword, content.primaryFP).then(function (hmac) {\n                            if (!equalBuffers(hmac, content.hmacPassword))\n                                throw new Error(\"Password is not valid.\");\n                            return self;\n                        });\n                    return self;\n                });\n            },\n            /**\n             * Change key password\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {string} oldKeyPassword Old key password\n             * @param {string} newKeyPassword New key password\n             * @returns {Promise} Promise to return self object after change password\n             */\n            changePassword: function (oldKeyPassword, newKeyPassword)\n            {\n                var self = this, content;\n                return new Promise(call).then(function () {\n                    content = self.header.keyContainerContent;\n                    if (!content.primaryPrivateKeyParameters)\n                        throw new Error('Private key not yet defined');\n                    return self.getPrivateKey(oldKeyPassword).then(function (privateKey) {\n                        return self.setPrivateKey(privateKey, newKeyPassword);\n                    });\n                }).then(function () {\n                    if (content.secondaryPrivateKeyParameters)\n                        return self.getPrivateKey(oldKeyPassword, true).then(function (privateKey) {\n                            return self.setPrivateKey(privateKey, newKeyPassword, true);\n                        });\n                    return self;\n                });\n            },\n            /**\n             * Generate private key, certificate and return certification request\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\n             * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption \n             * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\n             * @returns {Promise} Promise to return {@link GostCert.Request}\n             */\n            generate: function (req, keyPassword, keyAlgorithm)\n            {\n                var self = this, certificate, keyInfo;\n                return new Promise(call).then(function () {\n                    if (!(req instanceof cert.Request))\n                        req = new cert.Request(req);\n                    // Generate request\n                    return req.generate(keyAlgorithm);\n                }).then(function (key) {\n                    keyInfo = key;\n                    return self.setKey(keyInfo, keyPassword);\n                }).then(function () {\n                    // Create the new certificate\n                    certificate = new cert.X509(req);\n                    return certificate.sign(keyInfo);\n                }).then(function () {\n                    return self.setCertificate(certificate);\n                }).then(function () {\n                    return req;\n                });\n            },\n            /**\n             * Encode key container\n             * \n             * @memberOf GostKeys.CryptoProKeyContainer\n             * @instance\n             * @param {string} format Encode format 'DER', 'CER', 'PEM'\n             * @returns {Object} container Object contains encoded files\n             */\n            encode: function (format)\n            {\n                return {\n                    header: this.header.encode(format),\n                    name: this.name.encode(format),\n                    masks: this.masks.encode(format),\n                    primary: this.primary.encode(format),\n                    masks2: this.masks2.encode(format),\n                    primary2: this.primary2.encode(format)\n                };\n            }\n        };\n    })());\n\n    /**\n     * A class for password-encrypted private keys in CryptoPro container\n     * \n     * @memberOf GostKeys\n     * @type GostKeys.SignalComPrivateKeyInfo\n     */\n    GostKeys.prototype.CryptoProKeyContainer = CryptoProKeyContainer;\n\n    /**\n     * A class for password-encrypted private keys in ViPNet container entry\n     * \n     * @class GostKeys.ViPNetContainerEntry\n     * @extends GostASN1.ViPNetInfo\n     * @param {(FormatedData|GostKeys.ViPNetContainerEntry)} entry \n     */\n    function ViPNetContainerEntry(entry)\n    {\n        asn1.ViPNetInfo.call(this, entry || {\n            version: 3,\n            keyInfo: {\n                keyClass: 1,\n                keyType: 43556,\n                flags: 1\n            },\n            defenceKeyInfo: {\n                keyClass: 1024,\n                keyType: 24622,\n                keyUID: getSeed(32),\n                flags: -2147483648\n            }\n        });\n    }\n\n    extend(asn1.ViPNetInfo, ViPNetContainerEntry, (function () {\n\n        function getKeyPassword(keyPassword)\n        {\n            if (keyPassword === undefined)\n                keyPassword = '';\n            // Generate key data\n            var passwordData = coding.Chars.decode(keyPassword, 'win1251'), keyData;\n            return subtle.digest('GOST R 34.11-94', passwordData).then(function (data) {\n                keyData = data;\n                // Generate mask data\n                var secodeData = new Uint8Array(passwordData.byteLength + keyData.byteLength);\n                secodeData.set(new Uint8Array(passwordData), 0);\n                secodeData.set(new Uint8Array(keyData), passwordData.byteLength);\n                return subtle.digest('GOST R 34.11-94', secodeData);\n            }).then(function (data) {\n                // Remove mask\n                return subtle.importKey('raw', data, 'GOST 28147', false, ['unwrapKey']);\n            }).then(function (unwrappingKey) {\n                // Unwrap secret key\n                return subtle.unwrapKey('raw', keyData, unwrappingKey,\n                        'GOST 28147-MASK/VN', 'GOST 28147-89',\n                        'false', ['encrypt', 'decrypt', 'sign', 'verify']);\n            });\n        }\n\n        return {\n            /**\n             * Get the private key\n             * \n             * @memberOf GostKeys.ViPNetContainerEntry\n             * @instance\n             * @param {string} keyPassword The password of secrect key for decryption \n             * @returns {Promise} Promise to return the {@link Key}\n             */\n            getPrivateKey: function (keyPassword)\n            {\n                var self = this, keyPart, encryptedKey;\n                // Decrypt key\n                return new Promise(call).then(function () {\n                    return !keyPassword || typeof keyPassword === 'string' ?\n                            getKeyPassword(keyPassword) : keyPassword;\n                }).then(function (key) {\n                    keyPassword = key;\n                    // Verify password    \n                    keyPart = self.keyPart;\n                    encryptedKey = new Uint8Array(keyPart, 0, keyPart.byteLength - 4 - 8);\n                    var macKey = new Uint8Array(keyPart, encryptedKey.byteLength, 4),\n                            encodedKeyInfo = self.keyInfo.encode(),\n                            data = new Uint8Array(encryptedKey.byteLength + encodedKeyInfo.byteLength);\n                    data.set(new Uint8Array(encryptedKey), 0);\n                    data.set(new Uint8Array(encodedKeyInfo), encryptedKey.byteLength);\n                    return subtle.verify({name: 'GOST 28147-89-MAC'}, keyPassword, macKey, data);\n                }).then(function (result) {\n                    if (!result)\n                        throw new Error('Invalid key password');\n                    var iv = new Uint8Array(keyPart, keyPart.byteLength - 8, 8);\n                    // Decrypt key data\n                    return subtle.decrypt({name: 'GOST 28147-89-CFB', iv: iv}, keyPassword, encryptedKey);\n                }).then(function (keyData) {\n                    var l2 = keyData.byteLength / 2;\n                    if (self.keyInfo.keyClass & 0x3 === 0) {\n                        // Secret key. Remove mask and import\n                        return subtle.importKey('raw', new Int32Array(keyData, l2, l2), 'GOST 28147', false,\n                                ['unwrapKey']).then(function (unwrappingKey) {\n                            // Unwrap secret key\n                            return subtle.unwrapKey('raw', new Int32Array(keyData, 0, l2), unwrappingKey,\n                                    'GOST 28147-MASK/VN', 'GOST 28147-89',\n                                    'false', ['encrypt', 'decrypt', 'sign', 'verify']);\n                        });\n                    } else {\n                        // Private key\n                        var algorithm = self.keyInfo.algorithm ||\n                                (self.certificate && self.certificate.subjectPublicKeyInfo.algorithm);\n                        if (!algorithm)\n                            throw new Error('Algorithm is not specified');\n                        var unwrapAlgorithm = expand(algorithm, {mode: 'MASK', procreator: 'VN'});\n                        unwrapAlgorithm.name = unwrapAlgorithm.name.replace('-DH', '');\n                        var wrapped = new Uint8Array(keyData, 0, l2),\n                                mask = new Uint8Array(keyData, l2, l2);\n                        // Import mask key\n                        return subtle.importKey('raw', mask, unwrapAlgorithm, 'false', ['sign', 'unwrapKey']).then(function (unwrappingKey) {\n                            // Unwrap private key\n                            return subtle.unwrapKey('raw', wrapped, unwrappingKey, unwrapAlgorithm, algorithm, 'true', ['sign', 'deriveBits', 'deriveKey']);\n                        }).then(function (privateKey) {\n                            // Generate key pair\n                            if (self.publicKey)\n                                return subtle.generateKey(expand(privateKey.algorithm, {ukm: privateKey.buffer}),\n                                        privateKey.extractable, privateKey.usages);\n                            else\n                                return {privateKey: privateKey};\n                        }).then(function (keyPair) {\n                            // Compare public key\n                            if (self.publicKey && !equalBuffers(keyPair.publicKey.buffer, self.publicKey))\n                                throw new Error('Check public key failed');\n                            return keyPair.privateKey;\n                        });\n                    }\n                });\n            },\n            /**\n             * Set the private key\n             * \n             * @memberOf GostKeys.ViPNetContainerEntry\n             * @instance\n             * @param {Key} privateKey The private key\n             * @param {string} keyPassword The secret key encryption \n             * @param {number} days Validity days. Default 7305 days (20 years)\n             * @returns {Promise} Promise to return the self object after set the key\n             */\n            setPrivateKey: function (privateKey, keyPassword, days)\n            {\n                var self = this, wrapAlgorithm, wrappingKey, keyData, keyPart;\n                // Decrypt key\n                return new Promise(call).then(function () {\n                    return !keyPassword || typeof keyPassword === 'string' ?\n                            getKeyPassword(keyPassword) : keyPassword;\n                }).then(function (key) {\n                    keyPassword = key;\n                    var algorithm = privateKey.algorithm;\n                    self.keyInfo.algorithm = algorithm;\n                    self.keyInfo.serialNumber = getSeed(16);\n                    self.keyInfo.keyUID = getSeed(8);\n                    self.keyInfo.validity = {\n                        notBefore: today(),\n                        notAfter: today(days || options.days)\n                    };\n                    if (privateKey.type === 'private') {\n                        // Generate mask\n                        wrapAlgorithm = expand(algorithm, {mode: 'MASK', procreator: 'VN'});\n                        wrapAlgorithm.name = wrapAlgorithm.name.replace('-DH', '');\n                        self.keyInfo.keyClass = 1;\n                        self.keyInfo.keyType = 43556;\n                        // Generate public key\n                        return subtle.generateKey(expand(algorithm, {ukm: privateKey.buffer}), true,\n                                ['sign', 'verify']).then(function (keyPair) {\n                            self.publicKey = keyPair.publicKey.buffer;\n                            // Check certificate\n                            if (self.certificate) {\n                                var spki = self.certificate.subjectPublicKeyInfo;\n                                return subtle.importKey('spki', spki.encode(), spki.algorithm, true, ['verify']);\n                            }\n                        }).then(function (publicKey) {\n                            if (publicKey && !equalBuffers(publicKey.buffer, self.publicKey))\n                                delete self.certificate; // Remove not valid certificate\n                        });\n                    } else if (privateKey.type === 'secret') {\n                        wrapAlgorithm = 'GOST 28147/MASK/VN';\n                        delete self.certificate;\n                        delete self.publicKey;\n                        self.keyInfo.keyClass = 64;\n                        self.keyInfo.keyType = 24622;\n                    } else\n                        throw new Error('Invalid key type');\n                }).then(function () {\n                    // Generate mask\n                    return subtle.generateKey(wrapAlgorithm, true, ['wrapKey', 'unwrapKey']);\n                }).then(function (key) {\n                    wrappingKey = key;\n                    // Wrap private key with mask\n                    return subtle.wrapKey('raw', privateKey, wrappingKey, wrapAlgorithm);\n                }).then(function (data) {\n                    keyData = new Uint8Array(data.byteLength * 2);\n                    keyData.set(new Uint8Array(data));\n                    return subtle.exportKey('raw', wrappingKey);\n                }).then(function (data) {\n                    keyData.set(new Uint8Array(data), data.byteLength);\n                    keyPart = new Uint8Array(keyData.byteLength + 12);\n                    // Encrypt key\n                    var encyption = {name: 'GOST 28147-CFB', iv: getSeed(8)};\n                    keyPart.set(new Uint8Array(encyption.iv), keyPart.byteLength - 8);\n                    return subtle.encrypt(encyption, keyPassword, keyData);\n                }).then(function (encryptedKey) {\n                    keyPart.set(new Uint8Array(encryptedKey));\n                    // Calculate MAC\n                    var encodedKeyInfo = self.keyInfo.encode(),\n                            data = new Uint8Array(encryptedKey.byteLength + encodedKeyInfo.byteLength);\n                    data.set(new Uint8Array(encryptedKey), 0);\n                    data.set(new Uint8Array(encodedKeyInfo), encryptedKey.byteLength);\n                    return subtle.sign({name: 'GOST 28147-89-MAC'}, keyPassword, data);\n                }).then(function (macKey) {\n                    keyPart.set(new Uint8Array(macKey), keyPart.byteLength - 12);\n                    self.keyPart = keyPart.buffer;\n                    return self;\n                });\n            },\n            /**\n             * Encode container entry\n             * \n             * @memberOf GostKeys.ViPNetContainerEntry\n             * @instance\n             * @param {string} format The encoded data format\n             * @returns {CryptoOperationData}\n             */\n            encode: function (format)\n            {\n                var header = asn1.ViPNetInfo.method('encode').call(this),\n                        result = new Uint8Array(8 + header.byteLength + this.keyPart.byteLength);\n                set32(result.buffer, 0, 4 + header.byteLength + this.keyPart.byteLength);\n                result.set(new Uint8Array(header), 4);\n                set32(result.buffer, 4 + header.byteLength, this.keyPart.byteLength);\n                result.set(new Uint8Array(this.keyPart), 8 + header.byteLength);\n                if (format === 'PEM')\n                    return coding.Base64.encode(result.buffer);\n                return result.buffer;\n            }\n        };\n    })(), {\n        /**\n         * Decode container entry\n         * \n         * @memberOf GostKeys.ViPNetContainerEntry\n         * @param {FormatedData} entry\n         * @returns {GostKeys.ViPNetContainer}\n         */\n        decode: function (entry)\n        {\n            if (typeof entry === 'string')\n                entry = coding.Base64.decode(entry);\n            entry = buffer(entry);\n            // Entry size \n            var entrySize = get32(entry, 0);\n            if (entry.byteLength !== entrySize + 4)\n                throw new Error('Invalid container entry size');\n            // Decode header info\n            var source = coding.BER.decode(new Uint8Array(entry, 4, entrySize));\n            var result = asn1.ViPNetInfo.decode.call(this, source);\n            // Decode key info\n            var headerSize = source.header.byteLength + source.content.byteLength,\n                    keyPartSize = get32(entry, 4 + headerSize);\n            if (entry.byteLength !== headerSize + keyPartSize + 8)\n                throw new Error('Invalid container key part size');\n            result.keyPart = new Uint8Array(new Uint8Array(entry, headerSize + 8, keyPartSize)).buffer;\n            // Key Info buffer - can be used in case error of format encoding\n            // var keyInfoSource = source.object[1];\n            // result.encodedKeyInfo = new Uint8Array(new Uint8Array(keyInfoSource.header.buffer, \n            //    keyInfoSource.header.byteOffset, keyInfoSource.header.byteLength + keyInfoSource.content.byteLength)).buffer;\n            return result;\n        }\n    });\n\n    /**\n     * A class for password-encrypted private keys in CryptoPro container\n     * \n     * @memberOf GostKeys\n     * @type GostKeys.SignalComPrivateKeyInfo\n     */\n    GostKeys.prototype.ViPNetContainerEntry = ViPNetContainerEntry;\n\n    /**\n     * A class for password-encrypted private keys in ViPNet container\n     * \n     * @class GostKeys.ViPNetContainer\n     * @param {(FormatedData|GostKeys.ViPNetContainer)} container \n     */\n    function ViPNetContainer(container)\n    {\n        if (container && (container instanceof CryptoOperationData ||\n                container.buffer instanceof CryptoOperationData ||\n                typeof container === 'string'))\n            this.decode(container);\n        else {\n            container = container || {};\n            this.fileType = container.fileType || 'ITCS';\n            this.fileVersion = container.fileVersion || 0x10;\n            if (container.applicationHeader)\n                this.applicationHeader = container.applicationHeader;\n            this.entries = container.entries || [];\n        }\n    }\n\n\n    extend(Object, ViPNetContainer, {\n        /**\n         * Get the certificate from the container\n         * \n         * @memberOf GostKeys.ViPNetContainer\n         * @instance\n         * @param {number} index Index of the entriy. Default 0\n         * @returns {Promise} Promise to return {@link GostCert.X509} \n         */\n        getCertificate: function (index)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                var entry = self.entries[index || 0];\n                if (!entry)\n                    throw new Error('Entry not defined');\n                if (entry.certificate)\n                    return new cert.X509(entry.certificate);\n            });\n        },\n        /**\n         * Get the private key info\n         * \n         * @memberOf GostKeys.ViPNetContainer\n         * @instance\n         * @param {string} keyPassword The password for decryption \n         * @param {number} index Index of the entriy. Default 0\n         * @returns {Promise} Promise to return {@link GostKeys.PKCS8}\n         */\n        getKey: function (keyPassword, index)\n        {\n            return this.getPrivateKey(keyPassword, index).then(function (privateKey) {\n                return new PKCS8().setPrivateKey(privateKey);\n            });\n        },\n        /**\n         * Get the private key\n         * \n         * @memberOf GostKeys.ViPNetContainer\n         * @instance\n         * @param {string} keyPassword The password of secrect key for decryption \n         * @param {number} index Index of the entriy. Default 0\n         * @returns {Promise} Promise to return the {@link Key}\n         */\n        getPrivateKey: function (keyPassword, index)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                var entry = self.entries[index || 0];\n                if (!entry)\n                    throw new Error('Entry not defined');\n                return entry.getPrivateKey(keyPassword);\n            });\n        },\n        /**\n         * Set the certificate to the container\n         * \n         * @memberOf GostKeys.ViPNetContainer\n         * @instance\n         * @param {(FormatedData|GostCert.X509)} certificate The certificate\n         * @param {number} index Index of the entriy. Default 0\n         * @returns {Promise} Promise to return self object after set certificate\n         */\n        setCertificate: function (certificate, index)\n        {\n            var self = this, entry, certificate;\n            return new Promise(call).then(function () {\n                entry = self.entries[index || 0] ||\n                        (self.entries[index || 0] = new ViPNetContainerEntry());\n                certificate = new cert.X509(certificate);\n                if (entry.publicKey)\n                    return certificate.getPublicKey();\n            }).then(function (publicKey) {\n                if (publicKey && !equalBuffers(entry.publicKey, publicKey.buffer))\n                    throw new Error('Invalid certificate for private key');\n                entry.certificate = certificate;\n                return self;\n            });\n        },\n        /**\n         * Set the key to the container\n         * \n         * @memberOf GostKeys.ViPNetContainer\n         * @instance\n         * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The key\n         * @param {string} keyPassword The password for decryption \n         * @param {number} index Index of the entriy. Default 0\n         * @param {number} days Validity days. Default 7305 days (20 years)\n         * @returns {Promise} Promise to return self object after set the key\n         */\n        setKey: function (keyInfo, keyPassword, index, days)\n        {\n            var self = global;\n            return new PKCS8(keyInfo).getPrivateKey().then(function (privateKey) {\n                return self.setPrivateKey(privateKey, keyPassword, index, days);\n            });\n        },\n        /**\n         * Set the private key\n         * \n         * @memberOf GostKeys.ViPNetContainerEntry\n         * @instance\n         * @param {Key} privateKey The private key\n         * @param {string} keyPassword The secret key encryption \n         * @param {number} index Index of the entriy. Default 0\n         * @param {number} days Validity days. Default 7305 days (20 years)\n         * @returns {Promise} Promise to return the self object after set the key\n         */\n        setPrivateKey: function (privateKey, keyPassword, index, days)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                var entry = self.entries[index || 0] ||\n                        (self.entries[index || 0] = new ViPNetContainerEntry());\n                return entry.setPrivateKey(privateKey, keyPassword, days);\n            }).then(function () {\n                return self;\n            });\n        },\n        /**\n         * Change key password\n         * \n         * @memberOf GostKeys.ViPNetContainerEntry\n         * @instance\n         * @param {string} oldKeyPassword Old key password\n         * @param {string} newKeyPassword New key password\n         * @returns {Promise} Promise to return self object after change password\n         */\n        changePassword: function (oldKeyPassword, newKeyPassword)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                return self.getPrivateKey(oldKeyPassword).then(function (privateKey) {\n                    return self.setPrivateKey(privateKey, newKeyPassword);\n                });\n            });\n        },\n        /**\n         * Generate private key, certificate and return certification request\n         * \n         * @memberOf GostKeys.ViPNetContainerEntry\n         * @instance\n         * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\n         * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption \n         * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\n         * @returns {Promise} Promise to return {@link GostCert.Request}\n         */\n        generate: function (req, keyPassword, keyAlgorithm)\n        {\n            var self = this, certificate, keyInfo;\n            return new Promise(call).then(function () {\n                if (!(req instanceof cert.Request))\n                    req = new cert.Request(req);\n                // Generate request\n                return req.generate(keyAlgorithm);\n            }).then(function (key) {\n                keyInfo = key;\n                return self.setKey(keyInfo, keyPassword);\n            }).then(function () {\n                // Create the new certificate\n                certificate = new cert.X509(req);\n                return certificate.sign(keyInfo);\n            }).then(function () {\n                return self.setCertificate(certificate);\n            }).then(function () {\n                return req;\n            });\n        },\n        /**\n         * Encode objet to container\n         * \n         * @memberOf GostKeys.ViPNetContainer\n         * @instance\n         * @param {string} format The encoded data format\n         * @returns {CryptoOperationData}\n         */\n        encode: function (format)\n        {\n            // Encode entries\n            var entries = [], entriesSize = 0;\n            this.entries.forEach(function (entry) {\n                var encoded = entry.encode();\n                entriesSize += encoded.byteLength;\n                entries.push(encoded);\n            });\n            var headerSize = this.applicationHeader ? this.applicationHeader.byteLength : 0,\n                    result = new Uint8Array(12 + headerSize + entriesSize);\n            result.set(new Uint8Array(coding.Chars.decode(this.fileType, 'ascii')));\n            set32(result.buffer, 4, this.fileVersion);\n            set32(result.buffer, 8, headerSize);\n            if (headerSize > 0)\n                result.set(new Uint8Array(this.applicationHeader), 12);\n            var offset = 12 + headerSize;\n            entries.forEach(function (entry) {\n                result.set(new Uint8Array(entry), offset);\n                offset += entry.byteLength;\n            });\n            if (format === 'PEM')\n                return coding.Base64.encode(result.buffer);\n            return result.buffer;\n        },\n        /**\n         * Decode container to the object\n         * \n         * @memberOf GostKeys.ViPNetContainer\n         * @instance\n         * @param {FormatedData} container\n         * @returns {GostKeys.ViPNetContainer}\n         */\n        decode: function (container)\n        {\n            container = this.constructor.decode(container);\n            this.fileType = container.fileType;\n            this.fileVersion = container.fileVersion;\n            if (container.applicationHeader)\n                this.applicationHeader = container.applicationHeader;\n            this.entries = container.entries;\n        }\n    }, {\n        /**\n         * Encode object\n         * \n         * @memberOf GostKeys.ViPNetContainer\n         * @instance\n         * @param {GostKeys.ViPNetContainer} object\n         * @param {string} format The encoded data format\n         * @returns {CryptoOperationData}\n         */\n        encode: function (object, format)\n        {\n            return new this(object).encode(format);\n        },\n        /**\n         * Decode container\n         * \n         * @memberOf GostKeys.ViPNetContainer\n         * @instance\n         * @param {FormatedData} container\n         * @returns {GostKeys.ViPNetContainer}\n         */\n        decode: function (container)\n        {\n            if (typeof container === 'string')\n                container = coding.Base64.decode(container);\n            container = buffer(container);\n            // File type\n            var fileType = coding.Chars.encode(new Uint8Array(container, 0, 4), 'ascii');\n            if (fileType !== 'ITCS' && fileType !== 'PKEY' && fileType !== '_CCK' && fileType !== '_LCK')\n                throw new Error('Unsupported ViPNet container type');\n            // File version\n            var fileVersion = get32(container, 4),\n                    i = fileVersion >>> 16, j = fileVersion & 0xffff;\n            if ((i !== 0 && i !== 1) || j > 0xff)\n                throw new Error('Unsupported ViPNet container version');\n            // File header\n            var headerSize = get32(container, 8), applicationHeader;\n            if (headerSize > 0)\n                applicationHeader = buffer(new Uint8Array(container, 12, headerSize));\n            // Read entries\n            var offset = 12 + headerSize, entries = [];\n            while (offset < container.byteLength) {\n                // Entry size\n                var entrySize = get32(container, offset);\n                // Decode entry\n                entries.push(ViPNetContainerEntry.decode(\n                        new Uint8Array(container, offset, entrySize + 4)));\n                offset = offset + entrySize + 4;\n            }\n            return new ViPNetContainer({\n                fileType: fileType,\n                fileVersion: fileVersion,\n                applicationHeader: applicationHeader,\n                entries: entries\n            });\n        }\n    });\n\n    /**\n     * A class for password-encrypted private keys in CryptoPro container\n     * \n     * @memberOf GostKeys\n     * @type GostKeys.SignalComPrivateKeyInfo\n     */\n    GostKeys.prototype.ViPNetContainer = ViPNetContainer;\n\n    /**\n     * An implementation of PKCS #12 password encryption/integrity modes. Both input and output are implemented.<br><br>\n     * \n     * A PFX object may contain multiple authenticated safes (represented as GostASN1.SafeContents objects). \n     * Each authenticated safe may have its own encryption method, and contains a number of bags \n     * (represented as instances of GostASN1.SafeBag). <br>\n     * Note: the methods and constructors that input a PFX object do not automatically check the validity of the MAC. \n     * You need to explicitly call verify() to make this check.\n     * \n     * @class GostKeys.PKCS12\n     * @extends GostASN1.PFX\n     * @param {(FormatedData|GostASN1.PFX)} store\n     */\n    function PKCS12(store)\n    {\n        asn1.PFX.call(this, store || {\n            version: 3,\n            authSafe: {\n                contentType: 'data'\n            }\n        });\n    }\n\n    extend(asn1.PFX, PKCS12, (function () {\n\n\n        function calcHMAC(derivation, password, content) {\n            var hmac = {name: 'HMAC', hash: derivation.hash};\n            // Import password for key generation \n            return subtle.importKey('raw', passwordData(derivation, password),\n                    derivation, false, ['deriveKey']).then(function (passwordKey) {\n                // Generate key from password. \n                return subtle.deriveKey(derivation, passwordKey, hmac, false, ['sign']);\n            }).then(function (integrityKey) {\n                // Sign MAC \n                return subtle.sign(hmac, integrityKey, content);\n            });\n        }\n\n        function verifyHMAC(derivation, password, digest, content) {\n            return calcHMAC(derivation, password, content).then(function (test) {\n                if (!equalBuffers(digest, test))\n                    throw new Error('Invalid password, MAC is not verified');\n            });\n        }\n\n        return {\n            /**\n             * Sign the enclosed content with given digest algorithm\n             * \n             * @memberOf GostKeys.PKCS12\n             * @instance\n             * @param {string} password The password \n             * @param {(AlgorithmIdentifier|string)} digestAlgorithm Digest algorithm or provider name\n             * @returns {Promise} Promise to return self object after enclose content\n             */\n            sign: function (password, digestAlgorithm)\n            {\n                var self = global;\n                return new Promise(call).then(function () {\n                    // Calculate mac for password integrity\n                    if (password) {\n                        // Define digeset algorithm\n                        var hash, derivation, digestProvider;\n                        if (digestAlgorithm)\n                            digestProvider = providers[digestAlgorithm];\n                        else\n                            digestAlgorithm = providers[options.providerName].digest;\n                        if (digestProvider) {\n                            hash = digestProvider.digest;\n                            derivation = digestProvider.derivation;\n                        } else {\n                            hash = digestAlgorithm;\n                            derivation = {name: 'PFXKDF', hash: hash, iterations: 2000};\n                        }\n                        // Add salt\n                        derivation = expand(derivation, {salt: getSeed(saltSize(hash)), diversifier: 3});\n                        // Sign HMAC\n                        var content = self.authSafe.content;\n                        return calcHMAC(derivation, password, content).then(function (digest) {\n                            self.macData = {\n                                mac: {\n                                    digestAlgorithm: hash,\n                                    digest: digest\n                                },\n                                macSalt: derivation.salt,\n                                iterations: derivation.iterations\n                            };\n                            return self;\n                        });\n                    } else\n                        return self;\n                });\n            },\n            /**\n             * Verifies the MAC.\n             * \n             * @memberOf GostKeys.PKCS12\n             * @instance\n             * @param password The password for mac verification\n             * @returns {Promise} Promise to return self object after verification\n             */\n            verify: function (password)\n            {\n                var self = this, authSafe = self.authSafe, derivation;\n                return new Promise(call).then(function () {\n                    // Indirectly verification\n                    if (authSafe.contentType === 'data') {\n                        // Check MAC \n                        if (self.macData) {\n                            if (!password)\n                                throw new Error('Password must be defined for the MAC verification');\n                            derivation = {\n                                name: 'PFXKDF',\n                                hash: self.macData.mac.digestAlgorithm,\n                                salt: self.macData.macSalt,\n                                iterations: self.macData.iterations,\n                                diversifier: 3\n                            };\n                            var content = self.authSafe.content, digest = self.macData.mac.digest;\n                            // Verify HMAC with PFXKDF (PKCS#12)\n                            return verifyHMAC(derivation, password, digest, content)['catch'](function () {\n                                // Verify HMAC with PBKDF2 (TC 26, PKCS#5)\n                                derivation.name = 'PBKDF2';\n                                return verifyHMAC(derivation, password, digest, content);\n                            });\n                        } // No check with MAC\n                    } else\n                        throw new Error('Unsupported format');\n                }).then(function () {\n                    return self;\n                });\n            }\n        };\n    })());\n\n    /**\n     * An implementation of PKCS #12 password encryption/integrity modes. \n     * \n     * @memberOf GostKeys\n     * @type GostKeys.PKCS12\n     */\n    GostKeys.prototype.PKCS12 = PKCS12;\n\n    /**\n     * This type of entry holds a cryptographic PrivateKey, which is optionally stored \n     * in a protected format to prevent unauthorized access. It is also accompanied by \n     * a certificate chain for the corresponding public key.\n     * \n     * @class GostKeys.KeyEntry\n     * @property {(GostKeys.PKCS8|GostKeys.PKCS8Encrypted)} key The Private Key\n     * @property {GostCert.X509[]} certs The X.509 Certificates chain\n     * @property {GostCert.CRL[]} crls The X.509 CRLs for certificate chain\n     */\n\n    /**\n     * This class represents a storage facility for cryptographic keys and certificates.\n     * \n     * @class GostKeys.KeyStore\n     * @param {Object} entries Object contains aliased {@link KeyEntry} objects\n     */\n    function KeyStore(entries)\n    {\n        this.entries = {};\n        if (entries)\n            for (var name in entries)\n                this.setEntry(name, entries[name]);\n    }\n\n    extend(Object, KeyStore, {\n        /**\n         * Lists all the alias names of this keystore.\n         * \n         * @memberOf GostKeys.KeyStore\n         * @instance\n         * @returns {string[]}\n         */\n        aliases: function ()\n        {\n            var result = [];\n            for (var name in this.entries)\n                result.push(name);\n            return result;\n        },\n        /**\n         * Checks if the given alias exists in this keystore.\n         * \n         * @memberOf GostKeys.KeyStore\n         * @instance\n         * @param {string} alias The alias name\n         * @returns {boolean} True if the alias exists, false otherwise\n         */\n        containsAlias: function (alias)\n        {\n            return !!this.entries[alias];\n        },\n        /**\n         * Deletes the entry identified by the given alias from this keystore.\n         * \n         * @memberOf GostKeys.KeyStore\n         * @instance\n         * @param {string} alias The alias name \n         */\n        deleteEntry: function (alias)\n        {\n            delete this.entries[alias];\n        },\n        /**\n         * Saves a keystore Entry under the specified alias.\n         * \n         * @memberOf GostKeys.KeyStore\n         * @instance\n         * @param {string} alias The alias name \n         * @param {GostKeys.KeyEntry} entry The entry\n         */\n        setEntry: function (alias, entry)\n        {\n            var r = {};\n            // Keys\n            if (entry.key) {\n                try {\n                    r.key = new PKCS8(entry.key, true); // Private key\n                } catch (e) {\n                    try {\n                        r.key = new PKCS8Encrypted(entry.key, true); // Encrypted private key\n                    } catch (e1) {\n                        if (entry.key instanceof CryptoOperationData)\n                            r.key = entry.key; // Secret key\n                        else\n                            throw new Error('Unknown Key format');\n                    }\n                }\n            }\n            // Certs\n            if (entry.certs) {\n                var certs = entry.certs instanceof Array ? entry.certs : [entry.certs];\n                for (var i = 0; i < certs.length; i++) {\n                    try {\n                        certs[i] = new cert.X509(certs[i]);\n                    } catch (e) {\n                    }\n                }\n                r.certs = certs;\n            }\n            // CRLs\n            if (entry.crls) {\n                var crls = entry.crls instanceof Array ? entry.crls : [entry.crls];\n                for (var i = 0; i < crls.length; i++) {\n                    try {\n                        crls[i] = new cert.CRL(crls[i]);\n                    } catch (e) {\n                    }\n                }\n                r.crls = crls;\n            }\n            this.entries[alias] = r;\n        },\n        /**\n         * Gets a keystore Entry for the specified alias \n         * \n         * @memberOf GostKeys.KeyStore\n         * @instance\n         * @param {string} alias The alias name \n         * @returns {GostKeys.KeyEntry} The entry\n         */\n        getEntry: function (alias)\n        {\n            return this.entries[alias];\n        },\n        /**\n         * Loads this KeyStore from the given input stream.<br><br>\n         * A password may be given to unlock the keystore (e.g. the keystore resides on a hardware token device), \n         * or to check the integrity of the keystore data. If a password is not given for integrity checking, \n         * then integrity checking is not performed.\n         * \n         * @memberOf GostKeys.KeyStore\n         * @instance\n         * @param {(FormatedData|GostKeys.PKSC12)} store The input stream from which the keystore is loaded\n         * @param {string} password The password used to check the integrity of the keystore, the password used to unlock the keystore\n         * @returns {Promise} Promise to return self object after store loaded\n         */\n        load: function (store, password)\n        {\n            var self = global;\n            return new Promise(call).then(function () {\n                // Verify store file\n                store = new PKCS12(store);\n                return store.verify(password);\n            }).then(function () {\n                if (store.authSafe.contentType !== 'data')\n                    throw new Error('Unsupported PFX format');\n                var authSafe = asn1.AuthenticatedSafe.decode(store.authSafe.content).object,\n                        promises = [];\n                // Decrypt encrypted content\n                authSafe.forEach(function (info) {\n                    if (info.contentType === 'data')\n                        promises.push(new cms.DataContentInfo(info));\n                    else if (info.contentType === 'encryptedData')\n                        promises.push(new cms.EncryptedDataContentInfo(info).getEnclosed(password));\n                    else\n                        throw new Error('Unsupported PFX format');\n                });\n                return Promise.all(promises);\n            }).then(function (contents) {\n                // Read bags\n                var entries = {};\n                contents.forEach(function (info) {\n                    var bags = asn1.SafeContents.decode(info.content).object;\n                    bags.forEach(function (bag) {\n                        var keyId = coding.Hex.encode((bag.bagAttributes && bag.bagAttributes.localKeyId)\n                                || getSeed(4), true), entry = entries[keyId] || (entries[keyId] = {});\n                        switch (bag.bagId) {\n                            case 'keyBag':\n                                entry.key = new PKCS8(bag.bagValue);\n                                break;\n                            case 'pkcs8ShroudedKeyBag':\n                                entry.key = new PKCS8Encrypted(bag.bagValue);\n                                break;\n                            case 'secretBag':\n                                if (bag.bagValue.secretTypeId === 'secret')\n                                    entry.key = bag.bagValue.secretValue;\n                                break;\n                            case 'certBag':\n                                var certs = entry.certs || (entry.certs = []);\n                                if (bag.bagValue.certId === 'x509Certificate')\n                                    certs.push(new cert.X509(bag.bagValue.certValue));\n                                break;\n                            case 'crlBag':\n                                var crls = entry.crls || (entry.crls = []);\n                                if (bag.bagValue.crlId === 'x509CRL')\n                                    crls.push(new cert.CRL(bag.bagValue.crlValue));\n                                break;\n                        }\n                        if (bag.bagAttributes && bag.bagAttributes.friendlyName)\n                            entry.friendlyName = bag.bagAttributes.friendlyName;\n                    });\n                });\n                // Decrypt keys\n                var promises = [];\n                for (var name in entries)\n                    promises.push((function (entry) {\n                        // Try to decrypt private key\n                        if (entry.key instanceof PKCS8Encrypted)\n                            return entry.key.getKey(password).then(function (key) {\n                                // Return entry with decrypted key\n                                entry.key = key;\n                                return entry;\n                            })['catch'](function () {\n                                // Return entry with encrypted key\n                                return entry;\n                            });\n                        else\n                            return entry;\n                    })(entries[name]));\n                return Promise.all(promises);\n            }).then(function (entries) {\n                // Set alias names\n                entries.forEach(function (entry) {\n                    var friendlyName = entry.friendlyName;\n                    if (friendlyName) {\n                        delete entry.friendlyName;\n                        self.entries[friendlyName] = entry;\n                    } else\n                        self.entries[generateUUID()] = entry;\n                });\n                return self;\n            });\n        },\n        /**\n         * Stores this keystore to the given output stream, and protects its integrity with the given password.\n         * \n         * @memberOf GostKeys.KeyStore\n         * @instance\n         * @param {string} password The password to generate the keystore integrity check\n         * @param {string} digestAlgortihm The digest algorithm or provider name for integrity check\n         * @param {string} encryptionAlgortihm The encryption algorithm or provider name for encrypt certificates\n         * @returns {Promise} Promise to return {@link GostKeyst.PKCS12} \n         */\n        store: function (password, digestAlgortihm, encryptionAlgortihm)\n        {\n            var self = this, keys = [], contents = [], authSafe = [];\n            return new Promise(call).then(function () {\n                // Define encryption algorithm\n                if (encryptionAlgortihm)\n                    encryptionAlgortihm = providers[encryptionAlgortihm] ?\n                            providers[encryptionAlgortihm].pbes : encryptionAlgortihm;\n                else if (digestAlgortihm)\n                    encryptionAlgortihm = providers[digestAlgortihm] ?\n                            providers[digestAlgortihm].pbes : providers[options.providerName].pbes;\n                else\n                    encryptionAlgortihm = providers[options.providerName].pbes;\n                // Prepare keys and certs\n                var index = 1;\n                for (var name in self.entries) {\n                    var keyId = new Uint32Array([index]), entry = self.entries[name];\n                    if (entry.key) {\n                        (function (key, attributes) {\n                            if (key instanceof CryptoOperationData)\n                                contents.push({\n                                    bagId: 'secretBag',\n                                    bagValue: {\n                                        secretTypeId: 'secret',\n                                        secretValue: key,\n                                        bagAttributes: attributes\n                                    }\n                                });\n                            else if (key instanceof PKCS8) {\n                                if (encryptionAlgortihm && password)\n                                    keys.push(new PKCS8Encrypted().setKey(key, password, encryptionAlgortihm).then(function (encryptedKey) {\n                                        return {\n                                            bagId: 'pkcs8ShroudedKeyBag',\n                                            bagValue: encryptedKey,\n                                            bagAttributes: attributes\n                                        };\n                                    }));\n                                else\n                                    keys.push({\n                                        bagId: 'keyBag',\n                                        bagValue: key,\n                                        bagAttributes: attributes\n                                    });\n                            } else if (key instanceof PKCS8Encrypted)\n                                keys.push({\n                                    bagId: 'pkcs8ShroudedKeyBag',\n                                    bagValue: key,\n                                    bagAttributes: attributes\n                                });\n                        })(entry.key, {\n                            localKeyId: keyId,\n                            friendlyName: name\n                        });\n                    }\n                    if (entry.certs) {\n                        entry.certs.forEach(function (certificate) {\n                            var attributes = {localKeyId: keyId};\n                            if (certificate instanceof cert.X509)\n                                contents.push({\n                                    bagId: 'certBag',\n                                    bagValue: {\n                                        certId: 'x509Certificate',\n                                        certValue: certificate\n                                    },\n                                    bagAttributes: attributes\n                                });\n                        });\n                    }\n                    if (entry.crls) {\n                        entry.crls.forEach(function (crl) {\n                            var attributes = {localKeyId: keyId};\n                            if (crl instanceof cert.CRL)\n                                contents.push({\n                                    bagId: 'crlBag',\n                                    bagValue: {\n                                        crlId: 'x509CRL',\n                                        crlValue: crl\n                                    },\n                                    bagAttributes: attributes\n                                });\n                        });\n                    }\n                }\n                // Encrypt keys\n                if (keys.length > 0)\n                    return Promise.all(keys);\n            }).then(function (bags) {\n                if (bags) {\n                    var keyContents = asn1.SafeContents.encode(bags);\n                    authSafe.push(new cms.DataContentInfo({\n                        contentType: 'data',\n                        content: keyContents\n                    }));\n                }\n\n                // Encrypt certificates and crls\n                if (contents.length > 0) {\n                    contents = asn1.SafeContents.encode(contents);\n                    if (encryptionAlgortihm && password)\n                        return new cms.EncryptedDataContentInfo().encloseContent(\n                                contents, password, encryptionAlgortihm);\n                    else\n                        return new cms.DataContentInfo().encloseContent(contents);\n                }\n            }).then(function (contents) {\n                authSafe.push(contents);\n                // Set enclosed data\n                authSafe = new asn1.AuthenticatedSafe(authSafe);\n                var store = new PKCS12();\n                store.authSafe = {\n                    contentType: 'data',\n                    content: authSafe.encode()\n                };\n                // Return new PKCS12 with enclosed authenificated content\n                return store.sign(password, digestAlgortihm);\n            });\n        }\n    });\n\n    /**\n     * This class represents a storage facility for cryptographic keys and certificates.\n     * \n     * @memberOf GostKeys\n     * @type GostKeys.KeyStore\n     */\n    GostKeys.prototype.KeyStore = KeyStore;\n\n    /**\n     * Implements the Key and Certificate Store methods\n     * \n     * @memberOf gostCrypto\n     * @type GostKeys\n     */\n    gostCrypto.keys = new GostKeys();\n\nmodule.exports = GostKeys;\n","/** \n * @file Implementation Web Crypto random generatore for GOST algorithms\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\n    /**\n     * The gostCrypto provide general purpose cryptographic functionality for\n     * GOST standards including a cryptographically strong pseudo-random number \n     * generator seeded with truly random values.\n     * \n     * @Class GostRandom\n     * \n     */\n\n    var root = global;\n    var rootCrypto = root.crypto || root.msCrypto;\n\n    var TypeMismatchError = root.TypeMismatchError || Error;\n    var QuotaExceededError = root.QuotaExceededError || Error;\n\n    // Initialize mouse and time counters for random generator    \n    var randomRing = {\n        seed: new Uint8Array(1024),\n        getIndex: 0,\n        setIndex: 0,\n        set: function (x) {\n            if (this.setIndex >= 1024)\n                this.setIndex = 0;\n            this.seed[this.setIndex++] = x;\n        },\n        get: function () {\n            if (this.getIndex >= 1024)\n                this.getIndex = 0;\n            return this.seed[this.getIndex++];\n        }\n    };\n\n    function GostRandom() {\n    }\n\n    /**\n     * The getRandomValues method generates cryptographically random values. <br><br>\n     * \n     * Random generator based on JavaScript Web Crypto random genereator \n     * (if it is possible) or  Math.random mixed with time and parameters of \n     * mouse and keyboard events\n     * \n     * @memberOf GostRandom\n     * @param {(ArrayBuffer|ArrayBufferView)} array Destination buffer for random data\n     */\n    GostRandom.prototype.getRandomValues = function (array)\n    {\n\n        if (!array.byteLength)\n            throw new TypeMismatchError('Array is not of an integer type (Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, or Uint32Array)');\n\n        if (array.byteLength > 65536)\n            throw new QuotaExceededError('Byte length of array can\\'t be greate then 65536');\n\n        var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n        if (rootCrypto && rootCrypto.getRandomValues) {\n            // Native window cryptographic interface\n            rootCrypto.getRandomValues(u8);\n        } else {\n            // Standard Javascript method\n            for (var i = 0, n = u8.length; i < n; i++)\n                u8[i] = Math.floor(256 * Math.random()) & 255;\n        }\n\n        // Mix bio randomizator\n        for (var i = 0, n = u8.length; i < n; i++)\n            u8[i] = u8[i] ^ randomRing.get();\n        return array;\n    };\n\nmodule.exports = GostRandom;\n\n","/**\n * @file GOST and common ASN.1 Object and Algorithm Identifiers \n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nconst gostCrypto = require('./gostCrypto');\n\n    var root = global;\n\n    // Expand javascript object\n    function expand() {\n        var r = {};\n        for (var i = 0, n = arguments.length; i < n; i++) {\n            var item = arguments[i];\n            if (typeof item === 'object')\n                for (var name in item)\n                    r[name] = item[name];\n        }\n        return r;\n    }\n\n\n    /**\n     * Freandly names for ASN.1 Object Identifiers\n     * \n     * @field names\n     * @memberOf GostSecurity\n     */\n    var names = {\n        // CryptoPro algoritms\n        '1.2.643.2.2': 'CryptoPro',\n        '1.2.643.2.2.3': 'id-GostR3411-94-with-GostR3410-2001',\n        '1.2.643.2.2.4': 'id-GostR3411-94-with-GostR3410-94',\n        '1.2.643.2.2.9': 'id-GostR3411-94',\n        '1.2.643.2.2.10': 'id-HMACGostR3411-94',\n        '1.2.643.2.2.13.0': 'id-Gost28147-89-None-KeyWrap',\n        '1.2.643.2.2.13.1': 'id-Gost28147-89-CryptoPro-KeyWrap',\n        '1.2.643.2.2.14.0': 'id-Gost28147-89-None-KeyMeshing',\n        '1.2.643.2.2.14.1': 'id-Gost28147-89-CryptoPro-KeyMeshing',\n        '1.2.643.2.2.19': 'id-GostR3410-2001',\n        '1.2.643.2.2.20': 'id-GostR3410-94',\n        '1.2.643.2.2.20.1': 'id-GostR3410-94-a',\n        '1.2.643.2.2.20.2': 'id-GostR3410-94-aBis',\n        '1.2.643.2.2.20.3': 'id-GostR3410-94-b',\n        '1.2.643.2.2.20.4': 'id-GostR3410-94-bBis',\n        '1.2.643.2.2.21': 'id-Gost28147-89',\n        '1.2.643.2.2.22': 'id-Gost28147-89-MAC',\n        '1.2.643.2.2.30.0': 'id-GostR3411-94-TestParamSet',\n        '1.2.643.2.2.30.1': 'id-GostR3411-94-CryptoProParamSet',\n        '1.2.643.2.2.30.2': 'id-GostR3411-94-CryptoPro-B-ParamSet',\n        '1.2.643.2.2.30.3': 'id-GostR3411-94-CryptoPro-C-ParamSet',\n        '1.2.643.2.2.30.4': 'id-GostR3411-94-CryptoPro-D-ParamSet',\n        '1.2.643.2.2.31.0': 'id-Gost28147-89-TestParamSet',\n        '1.2.643.2.2.31.1': 'id-Gost28147-89-CryptoPro-A-ParamSet',\n        '1.2.643.2.2.31.2': 'id-Gost28147-89-CryptoPro-B-ParamSet',\n        '1.2.643.2.2.31.3': 'id-Gost28147-89-CryptoPro-C-ParamSet',\n        '1.2.643.2.2.31.4': 'id-Gost28147-89-CryptoPro-D-ParamSet',\n        '1.2.643.2.2.31.5': 'id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet',\n        '1.2.643.2.2.31.6': 'id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet',\n        '1.2.643.2.2.31.7': 'id-Gost28147-89-CryptoPro-RIC-1-ParamSet ',\n        '1.2.643.2.2.31.12': 'id-Gost28147-89-CryptoPro-tc26-1',\n        '1.2.643.2.2.31.13': 'id-Gost28147-89-CryptoPro-tc26-2',\n        '1.2.643.2.2.31.14': 'id-Gost28147-89-CryptoPro-tc26-3',\n        '1.2.643.2.2.31.15': 'id-Gost28147-89-CryptoPro-tc26-4',\n        '1.2.643.2.2.31.16': 'id-Gost28147-89-CryptoPro-tc26-5',\n        '1.2.643.2.2.31.17': 'id-Gost28147-89-CryptoPro-tc26-6',\n        '1.2.643.2.2.32.0': 'id-GostR3410-94-TestParamSet',\n        '1.2.643.2.2.32.2': 'id-GostR3410-94-CryptoPro-A-ParamSet',\n        '1.2.643.2.2.32.3': 'id-GostR3410-94-CryptoPro-B-ParamSet',\n        '1.2.643.2.2.32.4': 'id-GostR3410-94-CryptoPro-C-ParamSet',\n        '1.2.643.2.2.32.5': 'id-GostR3410-94-CryptoPro-D-ParamSet',\n        '1.2.643.2.2.33.1': 'id-GostR3410-94-CryptoPro-XchA-ParamSet',\n        '1.2.643.2.2.33.2': 'id-GostR3410-94-CryptoPro-XchB-ParamSet',\n        '1.2.643.2.2.33.3': 'id-GostR3410-94-CryptoPro-XchC-ParamSet',\n        // Certificate center attributes\n        '1.2.643.2.2.34.2': 'temporaryAccessToRC',\n        '1.2.643.2.2.34.3': 'internetContentSignature',\n        '1.2.643.2.2.34.4': 'adminRC',\n        '1.2.643.2.2.34.5': 'operatorRC',\n        '1.2.643.2.2.34.6': 'userRC',\n        '1.2.643.2.2.34.7': 'clientRC',\n        '1.2.643.2.2.34.8': 'serverRC',\n        '1.2.643.2.2.34.9': 'sysAdminRC',\n        '1.2.643.2.2.34.10': 'arcAdminRC',\n        '1.2.643.2.2.34.11': 'authorityPersonRC',\n        '1.2.643.2.2.34.12': 'clientCC',\n        '1.2.643.2.2.34.13': 'sysAdminCC',\n        '1.2.643.2.2.34.14': 'arcAdminCC',\n        '1.2.643.2.2.34.15': 'accessIPSecCA',\n        '1.2.643.2.2.34.16': 'auditAdminHSM',\n        '1.2.643.2.2.34.21': 'adminHSM',\n        '1.2.643.2.2.34.22': 'serverAdminHSH',\n        '1.2.643.2.2.34.24': 'winlogonCA',\n        '1.2.643.2.2.34.25': 'timestampServiceUser',\n        '1.2.643.2.2.34.26': 'statusServiceUser',\n        '1.2.643.2.2.34.27': 'arcAdminHSM',\n        '1.2.643.2.2.34.28': 'auditorHSM',\n        // CryptoPro algoritms\n        '1.2.643.2.2.35.0': 'id-GostR3410-2001-CryptoPro-TestParamSet',\n        '1.2.643.2.2.35.1': 'id-GostR3410-2001-CryptoPro-A-ParamSet',\n        '1.2.643.2.2.35.2': 'id-GostR3410-2001-CryptoPro-B-ParamSet',\n        '1.2.643.2.2.35.3': 'id-GostR3410-2001-CryptoPro-C-ParamSet',\n        '1.2.643.2.2.36.0': 'id-GostR3410-2001-CryptoPro-XchA-ParamSet',\n        '1.2.643.2.2.36.1': 'id-GostR3410-2001-CryptoPro-XchB-ParamSet',\n        \"1.2.643.2.2.37.1\": 'id-CryptoPro-GostPrivateKeys-V1',\n        \"1.2.643.2.2.37.2\": 'id-CryptoPro-GostPrivateKeys-V2',\n        \"1.2.643.2.2.37.2.1\": 'id-CryptoPro-GostPrivateKeys-V2-Full',\n        \"1.2.643.2.2.37.2.2\": 'id-CryptoPro-GostPrivateKeys-V2-PartOf',\n        '1.2.643.2.2.37.3.1': 'intermediateCertificates',\n        '1.2.643.2.2.37.3.2': 'trustedCertificatesSignature',\n        '1.2.643.2.2.37.3.3': 'trustedCertificatesExchange',\n        '1.2.643.2.2.37.3.10': 'keyValidity',\n        '1.2.643.2.2.38.1': 'personalBaseProlicy',\n        '1.2.643.2.2.38.2': 'networkBasePolicy',\n        '1.2.643.2.2.47.1': 'id-CryptoPro-ocsp-treats-exp-key-or-exp-cert-rev',\n        '1.2.643.2.2.47.2': 'id-CryptoPro-ocsp-crl-locator',\n        '1.2.643.2.2.47.3': 'id-CryptoPro-ocsp-instant-revocation-indicator',\n        '1.2.643.2.2.47.4': 'id-CryptoPro-ocsp-revocation-announcement-reference',\n        '1.2.643.2.2.47.5': 'id-CryptoPro-ocsp-historical-request',\n        '1.2.643.2.2.49.2': 'limitedLicense',\n        '1.2.643.2.2.96': 'id-GostR3410-2001-CryptoPro-ESDH',\n        '1.2.643.2.2.97': 'id-GostR3410-94-CryptoPro-ESDH',\n        '1.2.643.2.2.98': 'id-GostR3410-2001DH',\n        '1.2.643.2.2.99': 'id-GostR3410-94DH',\n        // signature attributes\n        '1.2.643.2.45.1.1.1': 'signatureComment',\n        '1.2.643.2.45.1.1.2': 'resourceName',\n        '1.2.643.2.45.1.1.3': 'signatureUsage',\n        // params\n        '1.2.643.3.131.1.1': 'INN',\n        '1.2.643.3.141.1.1': 'RNS FSS',\n        '1.2.643.3.141.1.2': 'KP FSS',\n        // tc26\n        '1.2.643.7.1': 'tc26',\n        '1.2.643.7.1.1.1.1': 'id-tc26-gost3410-12-256',\n        '1.2.643.7.1.1.1.2': 'id-tc26-gost3410-12-512',\n        '1.2.643.7.1.1.2.1': 'id-tc26-gost3411-94',\n        '1.2.643.7.1.1.2.2': 'id-tc26-gost3411-12-256',\n        '1.2.643.7.1.1.2.3': 'id-tc26-gost3411-12-512',\n        '1.2.643.7.1.1.3.1': 'id-tc26-signwithdigest-gost3410-12-94',\n        '1.2.643.7.1.1.3.2': 'id-tc26-signwithdigest-gost3410-12-256',\n        '1.2.643.7.1.1.3.3': 'id-tc26-signwithdigest-gost3410-12-512',\n        '1.2.643.7.1.1.4.1': 'id-tc26-hmac-gost-3411-12-256',\n        '1.2.643.7.1.1.4.2': 'id-tc26-hmac-gost-3411-12-512',\n        '1.2.643.7.1.1.6.1': 'id-tc26-agreement-gost-3410-12-256',\n        '1.2.643.7.1.1.6.2': 'id-tc26-agreement-gost-3410-12-512',\n        '1.2.643.7.1.2.1.1.0': 'id-tc26-gost-3410-12-256-paramSetTest',\n        '1.2.643.7.1.2.1.1.1': 'id-tc26-gost-3410-12-256-paramSetA',\n        '1.2.643.7.1.2.1.1.2': 'id-tc26-gost-3410-12-256-paramSetB',\n        '1.2.643.7.1.2.1.2.0': 'id-tc26-gost-3410-12-512-paramSetTest',\n        '1.2.643.7.1.2.1.2.1': 'id-tc26-gost-3410-12-512-paramSetA',\n        '1.2.643.7.1.2.1.2.2': 'id-tc26-gost-3410-12-512-paramSetB',\n        '1.2.643.7.1.2.1.2.3': 'id-tc26-gost-3410-12-512-paramSetC',\n        '1.2.643.7.1.2.1.2.4': 'id-tc26-gost-3410-12-512-paramSetD',\n        '1.2.643.7.1.2.5.1.1': 'id-tc26-gost-28147-param-Z',\n        // GOST Parameters\n        '1.2.643.100.1': 'OGRN',\n        '1.2.643.100.2.1': 'SMEV-person',\n        '1.2.643.100.2.2': 'SMEV-government',\n        '1.2.643.100.3': 'SNILS',\n        '1.2.643.100.4': 'KPP',\n        '1.2.643.100.5': 'OGRNIP',\n        '1.2.643.100.6': 'internal-government',\n        '1.2.643.100.111': 'subjectSignTool',\n        '1.2.643.100.112': 'issuerSignTool',\n        '1.2.643.100.113.1': 'signToolClassKC1',\n        '1.2.643.100.113.2': 'signToolClassKC2',\n        '1.2.643.100.113.3': 'signToolClassKC3',\n        '1.2.643.100.113.4': 'signToolClassKB1',\n        '1.2.643.100.113.5': 'signToolClassKB2',\n        '1.2.643.100.113.6': 'signToolClassKA1',\n        '1.2.643.100.114.1': 'issuerToolClassKC1',\n        '1.2.643.100.114.2': 'issuerToolClassKC2',\n        '1.2.643.100.114.3': 'issuerToolClassKC3',\n        '1.2.643.100.114.4': 'issuerToolClassKB2',\n        '1.2.643.100.114.5': 'issuerToolClassKB1',\n        '1.2.643.100.114.6': 'issuerToolClassKA1',\n        // Common algorithms\n        '1.2.840.10040.4': 'x9cm',\n        '1.2.840.10040.4.1': 'dsa',\n        '1.2.840.10040.4.3': 'dsa-with-SHA1',\n        '1.2.840.10045': 'ansi-x962',\n        '1.2.840.10045.1': 'id-fieldType',\n        '1.2.840.10045.1.1': 'id-prime-Field',\n        '1.2.840.10045.1.2': 'id-characteristic-two-field',\n        '1.2.840.10045.2.1': 'ecPublicKey',\n        '1.2.840.10045.3.0': 'characteristicTwo',\n        '1.2.840.10045.3.1.1': 'secp192r1',\n        '1.2.840.10045.3.1.2': 'prime192v2',\n        '1.2.840.10045.3.1.3': 'prime192v3',\n        '1.2.840.10045.3.1.4': 'prime239v1',\n        '1.2.840.10045.3.1.5': 'prime239v2',\n        '1.2.840.10045.3.1.6': 'prime239v3',\n        '1.2.840.10045.3.1.7': 'secp256r1',\n        '1.2.840.10045.4': 'ecdsa',\n        '1.2.840.10045.4.1': 'ecdsa-with-SHA1',\n        '1.2.840.10045.4.2': 'ecdsa-with-Recommended',\n        '1.2.840.10045.4.4': 'ecdsa-with-SHA2',\n        '1.2.840.10045.4.4.1': 'ecdsa-with-SHA224',\n        '1.2.840.10045.4.4.2': 'ecdsa-with-SHA256',\n        '1.2.840.10045.4.4.3': 'ecdsa-with-SHA384',\n        '1.2.840.10045.4.4.4': 'ecdsa-with-SHA512',\n        '1.2.840.113533.7.66.13': 'PasswordBasedMac',\n        '1.3.6.1.4.1.22554.1.1.2.1.2': 'pbeWithSHAAndAES128-CBC',\n        '1.3.6.1.4.1.22554.1.1.2.1.22': 'pbeWithSHAAndAES192-CBC',\n        '1.3.6.1.4.1.22554.1.1.2.1.42': 'pbeWithSHAAndAES256-CBC',\n        '1.3.6.1.4.1.22554.1.2.1.2.1.2': 'pbeWithSHA256AndAES128-CBC',\n        '1.3.6.1.4.1.22554.1.2.1.2.1.22': 'pbeWithSHA256AndAES192-CBC',\n        '1.3.6.1.4.1.22554.1.2.1.2.1.42': 'pbeWithSHA256AndAES256-CBC',\n        //  Diffie-Hellman Key Exchange Keys\n        '1.2.840.113549': 'rsa',\n        '1.2.840.113549.1.1.1': 'rsaEncryption',\n        '1.2.840.113549.1.1.2': 'md2withRSAEncryption',\n        '1.2.840.113549.1.1.3': 'md4withRSAEncryption',\n        '1.2.840.113549.1.1.4': 'md5withRSAEncryption',\n        '1.2.840.113549.1.1.5': 'sha1withRSAEncryption',\n        '1.2.840.113549.1.1.7': 'rsaes-oaep',\n        '1.2.840.113549.1.1.8': 'mgf1',\n        '1.2.840.113549.1.1.9': 'pSpecified',\n        '1.2.840.113549.1.1.10': 'rsassa-pss',\n        '1.2.840.113549.1.1.11': 'sha256withRSAEncryption',\n        '1.2.840.113549.1.1.12': 'sha384withRSAEncryption',\n        '1.2.840.113549.1.1.13': 'sha512withRSAEncryption',\n        '1.2.840.113549.1.2.7': 'hmacWithSHA1',\n        '1.2.840.113549.1.2.8': 'hmacWithSHA224',\n        '1.2.840.113549.1.2.9': 'hmacWithSHA256',\n        '1.2.840.113549.1.2.10': 'hmacWithSHA384',\n        '1.2.840.113549.1.2.11': 'hmacWithSHA512',\n        '1.2.840.113549.1.3.1': 'dhKeyAgreement',\n        // pkcs#7 content types\n        '1.2.840.113549.1.5.12': 'PBKDF2',\n        '1.2.840.113549.1.5.13': 'PBES2',\n        '1.2.840.113549.1.5.14': 'PBMAC1',\n        '1.2.840.113549.1.7.1': 'data',\n        '1.2.840.113549.1.7.2': 'signedData',\n        '1.2.840.113549.1.7.3': 'envelopedData',\n        '1.2.840.113549.1.7.4': 'signedAndEnvelopedData',\n        '1.2.840.113549.1.7.5': 'digestedData',\n        '1.2.840.113549.1.7.6': 'encryptedData',\n        '1.2.840.113549.1.9.1': 'emailAddress',\n        '1.2.840.113549.1.9.2': 'unstructuredName',\n        '1.2.840.113549.1.9.3': 'contentType',\n        '1.2.840.113549.1.9.4': 'messageDigest',\n        '1.2.840.113549.1.9.5': 'signingTime',\n        '1.2.840.113549.1.9.6': 'countersignature',\n        '1.2.840.113549.1.9.7': 'challengePassword',\n        '1.2.840.113549.1.9.8': 'unstructuredAddress',\n        '1.2.840.113549.1.9.9': 'extendedCertificateAttributes',\n        '1.2.840.113549.1.9.10': 'issuerAndSerialNumber',\n        '1.2.840.113549.1.9.11': 'passwordCheck',\n        '1.2.840.113549.1.9.12': 'publicKey',\n        '1.2.840.113549.1.9.13': 'signingDescription',\n        '1.2.840.113549.1.9.14': 'extensionRequest',\n        '1.2.840.113549.1.9.15': 'sMimeCapabilities',\n        '1.2.840.113549.1.9.16': 'sMimeObjectIdentifierRegistry',\n        '1.2.840.113549.1.9.16.1.2': 'authData',\n        '1.2.840.113549.1.9.16.1.4 ': 'timestampToken',\n        '1.2.840.113549.1.9.16.1.17 ': 'firmwareLoadReceipt',\n        '1.2.840.113549.1.9.16.1.21': 'encKeyWithID',\n        '1.2.840.113549.1.9.16.1.23': 'authEnvelopedData',\n        '1.2.840.113549.1.9.16.2': 'sMimeAttributes',\n        '1.2.840.113549.1.9.16.2.1': 'receiptRequest',\n        '1.2.840.113549.1.9.16.2.12': 'signingCertificate',\n        '1.2.840.113549.1.9.16.2.14': 'timeStampToken',\n        '1.2.840.113549.1.9.16.2.2': 'securityLabel',\n        '1.2.840.113549.1.9.16.2.3': 'mlExpansionHistory',\n        '1.2.840.113549.1.9.16.2.34': 'unsignedData',\n        '1.2.840.113549.1.9.16.2.47': 'signingCertificateV2',\n        '1.2.840.113549.1.9.16.3.5': 'ESDH',\n        // pkcs#9 oids\n        '1.2.840.113549.1.9.20': 'friendlyName',\n        '1.2.840.113549.1.9.21': 'localKeyId',\n        '1.2.840.113549.1.9.22': 'certTypes',\n        '1.2.840.113549.1.9.22.1': 'x509Certificate',\n        '1.2.840.113549.1.9.22.2': 'sdsiCertificate',\n        '1.2.840.113549.1.9.23': 'crlTypes',\n        '1.2.840.113549.1.9.23.1': 'x509CRL',\n        '1.2.840.113549.1.9.24': 'secretTypes',\n        '1.2.840.113549.1.9.24.1': 'secret',\n        '1.2.840.113549.1.9.25.1': 'pkcs15Token',\n        '1.2.840.113549.1.9.25.2': 'encryptedPrivateKeyInfo',\n        '1.2.840.113549.1.9.25.3': 'randomNonce',\n        '1.2.840.113549.1.9.25.4': 'sequenceNumber',\n        '1.2.840.113549.1.9.25.5': 'pkcs7PDU',\n        '1.2.840.113549.1.9.26.1': 'pkcs9String',\n        '1.2.840.113549.1.9.26.2': 'signingTimeString',\n        '1.2.840.113549.1.9.27.1': 'caseIgnoreMatch',\n        '1.2.840.113549.1.9.27.2': 'signingTimeMatch',\n        // password-based-encryption for pkcs#12\n        '1.2.840.113549.1.12.0.1': 'pkcs-12',\n        '1.2.840.113549.1.12.1': 'pbe',\n        '1.2.840.113549.1.12.1.1': 'pbeWithSHAAnd128BitRC4',\n        '1.2.840.113549.1.12.1.2': 'pbeWithSHAAnd40BitRC4',\n        '1.2.840.113549.1.12.1.3': 'pbeWithSHAAnd3-KeyTripleDES-CBC',\n        '1.2.840.113549.1.12.1.4': 'pbeWithSHAAnd2-KeyTripleDES-CBC',\n        '1.2.840.113549.1.12.1.5': 'pbeWithSHAAnd128BitRC2-CBC',\n        '1.2.840.113549.1.12.1.6': 'pbeWithSHAAnd40BitRC2-CBC',\n        '1.2.840.113549.1.12.1.80': 'pbeUnknownGost',\n        '1.2.840.113549.1.12.2.1': 'pkcs8-key-shrouding',\n        '1.2.840.113549.1.12.3.1': 'keyBagId',\n        '1.2.840.113549.1.12.3.2': 'certAndCRLBagId',\n        '1.2.840.113549.1.12.3.3': 'secretBagId',\n        '1.2.840.113549.1.12.3.4': 'safeContentsId',\n        '1.2.840.113549.1.12.3.5': 'pkcs-8ShroudedKeyBagId',\n        '1.2.840.113549.1.12.4.1': 'x509CertCRLBagId',\n        '1.2.840.113549.1.12.4.2': 'pkcs-12-SDSICertBag',\n        // pkcs#12 safe bags\n        '1.2.840.113549.1.12.10.1.1': 'keyBag',\n        '1.2.840.113549.1.12.10.1.2': 'pkcs8ShroudedKeyBag',\n        '1.2.840.113549.1.12.10.1.3': 'certBag',\n        '1.2.840.113549.1.12.10.1.4': 'crlBag',\n        '1.2.840.113549.1.12.10.1.5': 'secretBag',\n        '1.2.840.113549.1.12.10.1.6': 'safeContentsBag',\n        // hash algorithm\n        '1.2.840.113549.2.5': 'md-5',\n        // symmetric key algorithm oids\n        '1.2.840.113549.3.7': 'des-EDE3-CBC',\n        // additional algorithms\n        '1.3.132.0.34': 'secp384r1',\n        '1.3.132.0.35': 'secp521r1',\n        '1.3.132.112': 'ecDH',\n        '1.3.14.3.2.26': 'sha1',\n        '1.3.6.1.4.1.311.2.1.14': 'msCertExtensions',\n        '1.3.6.1.4.1.311.17.1': 'keyProviderNameAttr',\n        '1.3.6.1.4.1.311.17.2': 'localMachineKeyset',\n        '1.3.6.1.4.1.311.17.3.20': 'certKeyIdentifierPropId',\n        // SignalCom algorithms\n        '1.3.6.1.4.1.5849': 'SignalCom',\n        '1.3.6.1.4.1.5849.1.1.1': 'id-sc-gost28147-ecb',\n        '1.3.6.1.4.1.5849.1.1.2': 'id-sc-gost28147-gamma',\n        '1.3.6.1.4.1.5849.1.1.3': 'id-sc-gost28147-gfb',\n        '1.3.6.1.4.1.5849.1.1.4': 'id-sc-gost28147-mac',\n        '1.3.6.1.4.1.5849.1.1.5': 'id-sc-gostR3410-94',\n        '1.3.6.1.4.1.5849.1.1.6.1.1.1': 'id-sc-gostR3410-94-default',\n        '1.3.6.1.4.1.5849.1.1.6.1.1.2': 'id-sc-gostR3410-94-test',\n        '1.3.6.1.4.1.5849.1.2.1': 'id-sc-gostR3411-94',\n        '1.3.6.1.4.1.5849.1.3.1': 'id-sc-gostR3411-94-with-gostR3410-94',\n        '1.3.6.1.4.1.5849.1.3.2': 'id-sc-gostR3411-94-with-gostR3410-2001',\n        '1.3.6.1.4.1.5849.1.4.1': 'id-sc-cmsGostWrap',\n        '1.3.6.1.4.1.5849.1.4.2': 'id-sc-cmsGost28147Wrap',\n        '1.3.6.1.4.1.5849.1.5.1': 'id-sc-pbeWithGost3411AndGost28147',\n        '1.3.6.1.4.1.5849.1.5.2': 'id-sc-pbeWithGost3411AndGost28147CFB',\n        '1.3.6.1.4.1.5849.1.6.2': 'id-sc-gostR3410-2001',\n        '1.3.6.1.4.1.5849.1.7.2': 'id-sc-hmacWithGostR3411',\n        '1.3.6.1.4.1.5849.1.8.1': 'id-sc-r3410-ESDH-r3411kdf',\n        '1.3.6.1.4.1.5849.1.8.3': 'id-sc-ecdh-singlePass-cofactor-r3411kdf',\n        '1.3.6.1.4.1.5849.2.2.1': 'id-sc-gostR3410-2001-publicKey',\n        // additinal data\n        '1.3.6.1.5.5.7.0.12': 'attribute-cert',\n        '1.3.6.1.5.5.7.1.1': 'authorityInfoAccess',\n        '1.3.6.1.5.5.7.1.4': 'auditIdentity',\n        '1.3.6.1.5.5.7.1.6': 'aaControls',\n        '1.3.6.1.5.5.7.1.10': 'ac-proxying',\n        '1.3.6.1.5.5.7.1.11': 'subjectInfoAccess',\n        '1.3.6.1.5.5.7.3.1': 'serverAuth',\n        '1.3.6.1.5.5.7.3.2': 'clientAuth',\n        '1.3.6.1.5.5.7.3.3': 'codeSigning',\n        '1.3.6.1.5.5.7.3.4': 'emailProtection',\n        '1.3.6.1.5.5.7.3.5': 'ipsecEndSystem',\n        '1.3.6.1.5.5.7.3.6': 'ipsecTunnel',\n        '1.3.6.1.5.5.7.3.7': 'ipsecUser',\n        '1.3.6.1.5.5.7.3.8': 'timeStamping',\n        '1.3.6.1.5.5.7.3.9': 'OCSPSigning',\n        '1.3.6.1.5.5.7.5.1': 'regCtrl',\n        '1.3.6.1.5.5.7.5.1.1': 'regToken',\n        '1.3.6.1.5.5.7.5.1.2': 'authenticator',\n        '1.3.6.1.5.5.7.5.1.3': 'pkiPublicationInfo',\n        '1.3.6.1.5.5.7.5.1.4': 'pkiArchiveOptions',\n        '1.3.6.1.5.5.7.5.1.5': 'oldCertID',\n        '1.3.6.1.5.5.7.5.1.6': 'protocolEncrKey',\n        '1.3.6.1.5.5.7.5.2': 'regInfoAttr',\n        '1.3.6.1.5.5.7.5.2.1': 'UTF8Pairs',\n        '1.3.6.1.5.5.7.5.2.2': 'certReq',\n        '1.3.6.1.5.5.7.6.2': 'noSignature',\n        '1.3.6.1.5.5.7.7.1': 'statusInfo',\n        '1.3.6.1.5.5.7.7.2': 'identification',\n        '1.3.6.1.5.5.7.7.3': 'identityProof',\n        '1.3.6.1.5.5.7.7.4': 'dataReturn',\n        '1.3.6.1.5.5.7.7.5': 'transactionId',\n        '1.3.6.1.5.5.7.7.6': 'senderNonce',\n        '1.3.6.1.5.5.7.7.7': 'recipientNonce',\n        '1.3.6.1.5.5.7.7.8': 'addExtensions',\n        '1.3.6.1.5.5.7.7.9': 'encryptedPOP',\n        '1.3.6.1.5.5.7.7.10': 'decryptedPOP',\n        '1.3.6.1.5.5.7.7.11': 'lraPOPWitness',\n        '1.3.6.1.5.5.7.7.15': 'getCert',\n        '1.3.6.1.5.5.7.7.16': 'getCRL',\n        '1.3.6.1.5.5.7.7.17': 'revokeRequest',\n        '1.3.6.1.5.5.7.7.18': 'regInfo',\n        '1.3.6.1.5.5.7.7.19': 'responseInfo',\n        '1.3.6.1.5.5.7.7.21': 'queryPending',\n        '1.3.6.1.5.5.7.7.22': 'popLinkRandom',\n        '1.3.6.1.5.5.7.7.23': 'popLinkWitness',\n        '1.3.6.1.5.5.7.7.24': 'confirmCertAcceptance',\n        '1.3.6.1.5.5.7.7.25': 'statusInfoV2',\n        '1.3.6.1.5.5.7.7.26': 'trustedAnchors',\n        '1.3.6.1.5.5.7.7.27': 'authPublish',\n        '1.3.6.1.5.5.7.7.28': 'batchRequests',\n        '1.3.6.1.5.5.7.7.29': 'batchResponses',\n        '1.3.6.1.5.5.7.7.30': 'publishCert',\n        '1.3.6.1.5.5.7.7.31': 'modCertTemplate',\n        '1.3.6.1.5.5.7.7.32': 'controlProcessed',\n        '1.3.6.1.5.5.7.7.33': 'popLinkWitnessV2',\n        '1.3.6.1.5.5.7.7.34': 'identityProofV2',\n        '1.3.6.1.5.5.7.9.1': 'dateOfBirth',\n        '1.3.6.1.5.5.7.9.2': 'placeOfBirth',\n        '1.3.6.1.5.5.7.9.3': 'gender',\n        '1.3.6.1.5.5.7.9.4': 'countryOfCitizenship',\n        '1.3.6.1.5.5.7.9.5': 'countryOfResidence',\n        '1.3.6.1.5.5.7.10.1': 'authenticationInfo',\n        '1.3.6.1.5.5.7.10.2': 'accessIdentity',\n        '1.3.6.1.5.5.7.10.3': 'chargingIdentity',\n        '1.3.6.1.5.5.7.10.4': 'group',\n        '1.3.6.1.5.5.7.10.6': 'encAttrs',\n        '1.3.6.1.5.5.7.12.2': 'PKIData',\n        '1.3.6.1.5.5.7.12.3': 'PKIResponse',\n        '1.3.6.1.5.5.7.48.1.1': 'ocsp-basic',\n        '1.3.6.1.5.5.7.48.1.2': 'ocsp-nonce',\n        '1.3.6.1.5.5.7.48.1.3': 'ocsp-crl',\n        '1.3.6.1.5.5.7.48.1.4': 'ocsp-response',\n        '1.3.6.1.5.5.7.48.1.5': 'ocsp-nocheck',\n        '1.3.6.1.5.5.7.48.1.6': 'ocsp-archive-cutoff',\n        '1.3.6.1.5.5.7.48.1.7': 'ocsp-service-locator',\n        // Key packages\n        '2.16.840.1.101.2.1.2.78.2': 'encryptedKeyPkg',\n        '2.16.840.1.101.2.1.2.78.3': 'keyPackageReceipt',\n        '2.16.840.1.101.2.1.2.78.5': 'aKeyPackage',\n        '2.16.840.1.101.2.1.2.78.6': 'keyPackageError',\n        // symmetric key algorithm oids\n        '2.16.840.1.101.3.4': 'nistAlgorithms',\n        '2.16.840.1.101.3.4.1': 'aes',\n        '2.16.840.1.101.3.4.1.1': 'aes128-ECB',\n        '2.16.840.1.101.3.4.1.2': 'aes128-CBC',\n        '2.16.840.1.101.3.4.1.3': 'aes128-OFB',\n        '2.16.840.1.101.3.4.1.4': 'aes128-CFB',\n        '2.16.840.1.101.3.4.1.5': 'aes128-wrap',\n        '2.16.840.1.101.3.4.1.6': 'aes128-GCM',\n        '2.16.840.1.101.3.4.1.7': 'aes128-CCM',\n        '2.16.840.1.101.3.4.1.8': 'aes128-wrap-pad',\n        '2.16.840.1.101.3.4.1.21': 'aes192-ECB',\n        '2.16.840.1.101.3.4.1.22': 'aes192-CBC',\n        '2.16.840.1.101.3.4.1.23': 'aes192-OFB',\n        '2.16.840.1.101.3.4.1.24': 'aes192-CFB',\n        '2.16.840.1.101.3.4.1.25': 'aes192-wrap',\n        '2.16.840.1.101.3.4.1.26': 'aes192-GCM',\n        '2.16.840.1.101.3.4.1.27': 'aes192-CCM',\n        '2.16.840.1.101.3.4.1.28': 'aes192-wrap-pad',\n        '2.16.840.1.101.3.4.1.41': 'aes256-ECB',\n        '2.16.840.1.101.3.4.1.42': 'aes256-CBC',\n        '2.16.840.1.101.3.4.1.43': 'aes256-OFB',\n        '2.16.840.1.101.3.4.1.44': 'aes256-CFB',\n        '2.16.840.1.101.3.4.1.45': 'aes256-wrap',\n        '2.16.840.1.101.3.4.1.46': 'aes256-GCM',\n        '2.16.840.1.101.3.4.1.47': 'aes256-CCM',\n        '2.16.840.1.101.3.4.1.48': 'aes256-wrap-pad',\n        // hash algorihtms\n        '2.16.840.1.101.3.4.2.1': 'sha256',\n        '2.16.840.1.101.3.4.2.2': 'sha384',\n        '2.16.840.1.101.3.4.2.3': 'sha512',\n        // pkcs12\n        '2.16.840.1.113730.3.1.216': 'userPKCS12',\n        // certificate issuer/subject OIDsets\n        '2.5.1.5.55': 'clearance',\n        '2.5.4.0': 'objectClass',\n        '2.5.4.1': 'aliasedEntryName',\n        '2.5.4.2': 'knowldgeinformation',\n        '2.5.4.3': 'commonName',\n        '2.5.4.5': 'serialName',\n        '2.5.4.6': 'countryName',\n        '2.5.4.7': 'localityName',\n        '2.5.4.8': 'stateOrProvinceName',\n        '2.5.4.9': 'streetAddress',\n        '2.5.4.10': 'organizationName',\n        '2.5.4.11': 'organizationalUnitName',\n        '2.5.4.12': 'title',\n        '2.5.4.13': 'description',\n        '2.5.4.14': 'searchGuide',\n        '2.5.4.15': 'businessCategory',\n        '2.5.4.16': 'postalAddress',\n        '2.5.4.17': 'postalCode',\n        '2.5.4.18': 'postOfficeBox',\n        '2.5.4.19': 'physicalDeliveryOfficeName',\n        '2.5.4.20': 'telephoneNumber',\n        '2.5.4.21': 'telexNumber',\n        '2.5.4.22': 'teletexTerminalIdentifier',\n        '2.5.4.23': 'facsimileTelephoneNumber',\n        '2.5.4.24': 'x121Address',\n        '2.5.4.25': 'internationalISDNNumber',\n        '2.5.4.26': 'registeredAddress',\n        '2.5.4.27': 'destinationIndicator',\n        '2.5.4.28': 'preferredDeliveryMethod',\n        '2.5.4.29': 'presentationAddress',\n        '2.5.4.30': 'supportedApplicationContext',\n        '2.5.4.31': 'member',\n        '2.5.4.32': 'owner',\n        '2.5.4.33': 'roleOccupant',\n        '2.5.4.34': 'seeAlso',\n        '2.5.4.35': 'userPassword',\n        '2.5.4.36': 'userCertificate',\n        '2.5.4.37': 'cACertificate',\n        '2.5.4.38': 'authorityRevocationList',\n        '2.5.4.39': 'certificateRevocationList',\n        '2.5.4.40': 'crossCertificatePair',\n        '2.5.4.41': 'name',\n        '2.5.4.42': 'givenName',\n        '2.5.4.43': 'initials',\n        '2.5.4.44': 'generationQualifier',\n        '2.5.4.45': 'uniqueIdentifier',\n        '2.5.4.46': 'dnQualifier',\n        '2.5.4.47': 'enhancedSearchGuide',\n        '2.5.4.48': 'protocolInformation',\n        '2.5.4.49': 'distinguishedName',\n        '2.5.4.50': 'uniqueMember',\n        '2.5.4.51': 'houseIdentifier',\n        '2.5.4.52': 'supportedAlgorithms',\n        '2.5.4.53': 'deltaRevocationList',\n        '2.5.4.58': 'attributeCertificate',\n        '2.5.4.65': 'pseudonym',\n        '2.5.4.72': 'role',\n        // X.509 extension OIDsets\n        '2.5.29.1': 'authorityKeyIdentifierX',\n        '2.5.29.2': 'keyAttributesX',\n        '2.5.29.3': 'certificatePoliciesX',\n        '2.5.29.4': 'keyUsageRestriction',\n        '2.5.29.5': 'policyMapping',\n        '2.5.29.6': 'subtreesConstraint',\n        '2.5.29.7': 'subjectAltNameX',\n        '2.5.29.8': 'issuerAltNameX',\n        '2.5.29.9': 'subjectDirectoryAttributes',\n        '2.5.29.10': 'basicConstraintsX',\n        '2.5.29.11': 'nameConstraintsX',\n        '2.5.29.12': 'policyConstraintsX',\n        '2.5.29.13': 'basicConstraintsY',\n        '2.5.29.14': 'subjectKeyIdentifier',\n        '2.5.29.15': 'keyUsage',\n        '2.5.29.16': 'privateKeyUsagePeriod',\n        '2.5.29.17': 'subjectAltName',\n        '2.5.29.18': 'issuerAltName',\n        '2.5.29.19': 'basicConstraints',\n        '2.5.29.20': 'cRLNumber',\n        '2.5.29.21': 'cRLReason',\n        '2.5.29.22': 'expirationDate',\n        '2.5.29.23': 'instructionCode',\n        '2.5.29.24': 'invalidityDate',\n        '2.5.29.25': 'cRLDistributionPointsX',\n        '2.5.29.26': 'issuingDistributionPointX',\n        '2.5.29.27': 'deltaCRLIndicator',\n        '2.5.29.28': 'issuingDistributionPoint',\n        '2.5.29.29': 'certificateIssuer',\n        '2.5.29.30': 'nameConstraints',\n        '2.5.29.31': 'cRLDistributionPoints',\n        '2.5.29.32': 'certificatePolicies',\n        '2.5.29.33': 'policyMappings',\n        '2.5.29.34': 'policyConstraintsY',\n        '2.5.29.35': 'authorityKeyIdentifier',\n        '2.5.29.36': 'policyConstraints',\n        '2.5.29.37': 'extKeyUsage',\n        '2.5.29.46': 'freshestCRL',\n        '2.5.29.54': 'inhibitAnyPolicy',\n        '2.5.29.55': 'targetInformation',\n        '2.5.29.56': 'noRevAvail'\n    };\n\n    /**\n     * ASN.1 Object Identifiers for friandly names\n     * Generated automaticly\n     * @field identifiers\n     * @memberOf GostSecurity\n     */\n    var identifiers = {};\n    for (var id in names) \n        identifiers[names[id]] = id;\n    \n\n\n    /**\n     * Algorithm identifiers {@link gostCrypto.AlgorithmIdentifier} for Object Identifiers\n     * \n     * @field algorithms\n     * @memberOf GostSecurity\n     */\n    var algorithms = {\n        // CryptoPro algoritms\n        'id-GostR3411-94-with-GostR3410-2001': 'GOST R 34.10-2001/GOST R 34.11-94',\n        'id-GostR3411-94-with-GostR3410-94': 'GOST R 34.10-94/GOST R 34.11-94',\n        'id-GostR3411-94': 'GOST R 34.11-94',\n        'id-HMACGostR3411-94': {name: 'HMAC', hash: {name: 'GOST R 34.11-94'}},\n        'id-Gost28147-89-None-KeyWrap': 'GOST 28147-89-KW',\n        'id-Gost28147-89-CryptoPro-KeyWrap': 'GOST 28147-89-CPKW',\n        'id-GostR3410-2001': 'GOST R 34.10-2001',\n        'id-GostR3410-94': 'GOST R 34.10-94',\n        'id-GostR3410-94-a': 'GOST R 34.10-94',\n        'id-GostR3410-94-aBis': 'GOST R 34.10-94',\n        'id-GostR3410-94-b': 'GOST R 34.10-94',\n        'id-GostR3410-94-bBis': 'GOST R 34.10-94',\n        'id-Gost28147-89': 'GOST 28147-89',\n        'id-Gost28147-89-MAC': 'GOST 28147-89-MAC',\n        'id-GostR3410-2001-CryptoPro-ESDH': 'GOST R 34.10-2001-DH/GOST R 34.11-94',\n        'id-GostR3410-94-CryptoPro-ESDH': 'GOST R 34.10-94-DH/GOST R 34.11-94',\n        'id-GostR3410-2001DH': 'GOST R 34.10-2001-DH',\n        'id-GostR3410-94DH': 'GOST R 34.10-94-DH',\n        // TK-26 attributes\n        'id-tc26-gost3410-12-256': 'GOST R 34.10-256',\n        'id-tc26-gost3410-12-512': 'GOST R 34.10-512',\n        'id-tc26-gost3411-94': 'GOST R 34.11-94',\n        'id-tc26-gost3411-12-256': 'GOST R 34.11-256',\n        'id-tc26-gost3411-12-512': 'GOST R 34.11-512',\n        'id-tc26-signwithdigest-gost3410-12-94': 'GOST R 34.10-256/GOST R 34.11-94',\n        'id-tc26-signwithdigest-gost3410-12-256': 'GOST R 34.10-256/GOST R 34.11-256',\n        'id-tc26-signwithdigest-gost3410-12-512': 'GOST R 34.10-512/GOST R 34.11-512',\n        'id-tc26-hmac-gost-3411-12-256': {name: 'HMAC', hash: {name: 'GOST R 34.11-256'}},\n        'id-tc26-hmac-gost-3411-12-512': {name: 'HMAC', hash: {name: 'GOST R 34.11-512'}},\n        'id-tc26-agreement-gost-3410-12-256': 'GOST R 34.10-256-DH/GOST R 34.11-256',\n        'id-tc26-agreement-gost-3410-12-512': 'GOST R 34.10-512-DH/GOST R 34.11-256',\n        // SignalCom algorithms\n        'id-sc-gost28147-ecb': 'GOST 28147-89-ECB/SC',\n        'id-sc-gost28147-gamma': 'GOST 28147-89-CTR/SC',\n        'id-sc-gost28147-gfb': 'GOST 28147-89-CFB/SC',\n        'id-sc-gost28147-mac': 'GOST 28147-89-MAC/SC',\n        'id-sc-gostR3410-94': 'GOST R 34.10-94/SC',\n        'id-sc-gostR3410-94-default': 'GOST R 34.10-94/SC',\n        'id-sc-gostR3410-94-test': 'GOST R 34.10-94/SC/S-TEST',\n        'id-sc-gostR3411-94': 'GOST R 34.11-94/SC',\n        'id-sc-gostR3411-94-with-gostR3410-94': 'GOST R 34.10-94/GOST R 34.11-94/SC',\n        'id-sc-gostR3411-94-with-gostR3410-2001': 'GOST R 34.10-2001/GOST R 34.11-94/SC',\n        'id-sc-cmsGostWrap': 'GOST 28147-89-SCKW/SC',\n        'id-sc-cmsGost28147Wrap': 'GOST 28147-89-KW/SC',\n        'id-sc-pbeWithGost3411AndGost28147': {derivation: {name: 'GOST R 34.11-94-PBKDF2/SC'}, encryption: {name: 'GOST 28147-ECB/SC'}},\n        'id-sc-pbeWithGost3411AndGost28147CFB': {derivation: {name: 'GOST R 34.11-94-PBKDF2/SC'}, encryption: {name: 'GOST 28147-CFB/SC'}},\n        'id-sc-gostR3410-2001': 'GOST R 34.10-2001/SC',\n        'id-sc-hmacWithGostR3411': {name: 'HMAC', hash: {name: 'GOST R 34.11-94/SC'}},\n        'id-sc-r3410-ESDH-r3411kdf': 'GOST R 34.10-2001-DH/GOST R 34.11-94/SC',\n        // RSA algorithms\n        noSignature: 'NONE',\n        rsaEncryption: {name: 'RSASSA-PKCS1-v1_5', hash: {name: 'SHA-256'}},\n        sha1withRSAEncryption: {name: 'RSASSA-PKCS1-v1_5', hash: {name: 'SHA-1'}},\n        sha256withRSAEncryption: {name: 'RSASSA-PKCS1-v1_5', hash: {name: 'SHA-256'}},\n        sha384withRSAEncryption: {name: 'RSASSA-PKCS1-v1_5', hash: {name: 'SHA-384'}},\n        sha512withRSAEncryption: {name: 'RSASSA-PKCS1-v1_5', hash: {name: 'SHA-512'}},\n        'rsaes-oaep': 'RSA-OAEP',\n        'rsassa-pss': 'RSA-PSS',\n        // ECDSA\n        'ecdsa': 'ECDSA',\n        'ecdsa-with-SHA1': {name: 'ECDSA', hash: {name: 'SHA-1'}},\n        'ecdsa-with-SHA256': {name: 'ECDSA', hash: {name: 'SHA-256'}},\n        'ecdsa-with-SHA384': {name: 'ECDSA', hash: {name: 'SHA-384'}},\n        'ecdsa-with-SHA512': {name: 'ECDSA', hash: {name: 'SHA-512'}},\n        // Legion of the Bouncy Castle pbe\n        'pbeWithSHAAndAES128-CBC': {derivation: {name: 'PBKDF2', hash: {name: 'SHA-1'}}, encryption: {name: 'AES-CBC', length: 128}},\n        'pbeWithSHAAndAES192-CBC': {derivation: {name: 'PBKDF2', hash: {name: 'SHA-1'}}, encryption: {name: 'AES-CBC', length: 192}},\n        'pbeWithSHAAndAES256-CBC': {derivation: {name: 'PBKDF2', hash: {name: 'SHA-1'}}, encryption: {name: 'AES-CBC', length: 256}},\n        'pbeWithSHA256AndAES128-CBC': {derivation: {name: 'PBKDF2', hash: {name: 'SHA-256'}}, encryption: {name: 'AES-CBC', length: 128}},\n        'pbeWithSHA256AndAES192-CBC': {derivation: {name: 'PBKDF2', hash: {name: 'SHA-256'}}, encryption: {name: 'AES-CBC', length: 192}},\n        'pbeWithSHA256AndAES256-CBC': {derivation: {name: 'PBKDF2', hash: {name: 'SHA-256'}}, encryption: {name: 'AES-CBC', length: 256}},\n        // PKCS12 PBE\n        'pbeWithSHAAnd3-KeyTripleDES-CBC': {derivation: {name: 'PFXKDF', iterations: 2000, hash: 'SHA-1'}, encryption: {name: '3DES', block: 'CBC'}},\n        'pbeWithSHAAnd2-KeyTripleDES-CBC': {derivation: {name: 'PFXKDF', iterations: 2000, hash: 'SHA-1'}, encryption: {name: '2DES', block: 'CBC'}},\n        'pbeWithSHAAnd128BitRC2-CBC': {derivation: {name: 'PFXKDF', iterations: 2000, hash: 'SHA-1'}, encryption: {name: 'RC2', block: 'CBC', length: 128}},\n        'pbeWithSHAAnd40BitRC2-CBC': {derivation: {name: 'PFXKDF', iterations: 2000, hash: 'SHA-1'}, encryption: {name: 'RC2', block: 'CBC', length: 40}},\n        'pbeUnknownGost': {derivation: {name: 'PFXKDF', iterations: 2000, hash: 'GOST R 34.11-94'}, encryption: {name: 'GOST 28147-89-CFB'}},\n        //  Diffie-Hellman Key Exchange Keys\n        ecDH: 'ECDH',\n        dhKeyAgreement: 'DH',\n        // symmetric key algorithm oids\n        'aes128-CBC': {name: 'AES-CBC', length: 128},\n        'aes128-CFB': {name: 'AES-CFB-8', length: 128},\n        'aes128-GCM': {name: 'AES-GCM', length: 128},\n        'aes128-wrap': {name: 'AES-KW', length: 128},\n        'aes192-CBC': {name: 'AES-CBC', length: 192},\n        'aes192-CFB': {name: 'AES-CFB-8', length: 192},\n        'aes192-GCM': {name: 'AES-GCM', length: 192},\n        'aes192-wrap': {name: 'AES-KW', length: 192},\n        'aes256-CBC': {name: 'AES-CBC', length: 256},\n        'aes256-CFB': {name: 'AES-CFB-8', length: 256},\n        'aes256-GCM': {name: 'AES-GCM', length: 256},\n        'aes256-wrap': {name: 'AES-KW', length: 256},\n        // hash algorihtms\n        sha1: 'SHA-1',\n        sha256: 'SHA-256',\n        sha384: 'SHA-384',\n        sha512: 'SHA-512',\n        // PBE\n        PBKDF2: 'PBKDF2',\n        PBES2: {derivation: {name: 'PBKDF2'}, encryption: {}},\n        PBMAC1: {derivation: {name: 'PBKDF2'}, hmac: {}},\n        // HMAC\n        hmacWithSHA1: 'SHA-1-HMAC',\n        hmacWithSHA256: {name: 'HMAC', hash: {name: 'SHA-256'}},\n        hmacWithSHA384: {name: 'HMAC', hash: {name: 'SHA-384'}},\n        hmacWithSHA512: {name: 'HMAC', hash: {name: 'SHA-512'}}\n    };\n\n    // Each algorithm must has id for convertions\n    for (var id in algorithms) {\n        var algorithm = algorithms[id];\n        if (typeof algorithm === 'string') {\n            algorithm = {name: algorithm};\n        }\n        algorithm.id = id;\n        algorithms[id] = algorithm;\n    }\n\n    /**\n     * Algorithm parameters\n     * \n     * @field parameters\n     * @memberOf GostSecurity\n     */\n    var parameters = {\n        'id-GostR3410-94-TestParamSet': {namedParam: 'S-TEST'},\n        'id-GostR3410-94-CryptoPro-A-ParamSet': {namedParam: 'S-A'},\n        'id-GostR3410-94-CryptoPro-B-ParamSet': {namedParam: 'S-B'},\n        'id-GostR3410-94-CryptoPro-C-ParamSet': {namedParam: 'S-C'},\n        'id-GostR3410-94-CryptoPro-D-ParamSet': {namedParam: 'S-D'},\n        'id-GostR3410-94-CryptoPro-XchA-ParamSet': {namedParam: 'X-A'},\n        'id-GostR3410-94-CryptoPro-XchB-ParamSet': {namedParam: 'X-B'},\n        'id-GostR3410-94-CryptoPro-XchC-ParamSet': {namedParam: 'X-C'},\n        // CryptoPro named curves\n        'id-GostR3410-2001-CryptoPro-TestParamSet': {namedCurve: 'S-256-TEST'},\n        'id-GostR3410-2001-CryptoPro-A-ParamSet': {namedCurve: 'S-256-A'},\n        'id-GostR3410-2001-CryptoPro-B-ParamSet': {namedCurve: 'S-256-B'},\n        'id-GostR3410-2001-CryptoPro-C-ParamSet': {namedCurve: 'S-256-C'},\n        'id-GostR3410-2001-CryptoPro-XchA-ParamSet': {namedCurve: 'X-256-A'},\n        'id-GostR3410-2001-CryptoPro-XchB-ParamSet': {namedCurve: 'X-256-B'},\n        // TC-26 named curves\n        'id-tc26-gost-3410-12-256-paramSetTest': {namedCurve: 'T-256-TEST'},\n        'id-tc26-gost-3410-12-256-paramSetA': {namedCurve: 'T-256-A'},\n        'id-tc26-gost-3410-12-256-paramSetB': {namedCurve: 'T-256-B'},\n        'id-tc26-gost-3410-12-512-paramSetTest': {namedCurve: 'T-512-TEST'},\n        'id-tc26-gost-3410-12-512-paramSetA': {namedCurve: 'T-512-A'},\n        'id-tc26-gost-3410-12-512-paramSetB': {namedCurve: 'T-512-B'},\n        'id-tc26-gost-3410-12-512-paramSetC': {namedCurve: 'T-512-C'},\n        'id-tc26-gost-3410-12-512-paramSetD': {namedCurve: 'T-512-D'},\n        // Curve attributes additional algorithms\n        secp256r1: {namedCurve: 'P-256'},\n        secp384r: {namedCurve: 'P-384'},\n        secp521r: {namedCurve: 'P-521'},\n        // CryptoPro encryption parameters\n        'id-GostR3411-94-TestParamSet': {sBox: 'D-TEST'},\n        'id-GostR3411-94-CryptoProParamSet': {sBox: 'D-A'},\n        'id-GostR3411-94-CryptoPro-A-ParamSet': {sBox: 'D-B'},\n        'id-GostR3411-94-CryptoPro-B-ParamSet': {sBox: 'D-C'},\n        'id-GostR3411-94-CryptoPro-C-ParamSet': {sBox: 'D-D'},\n        'id-Gost28147-89-TestParamSet': {block: 'CTR', sBox: 'E-TEST'},\n        'id-Gost28147-89-CryptoPro-A-ParamSet': {block: 'CFB', sBox: 'E-A', keyMeshing: 'CP'},\n        'id-Gost28147-89-CryptoPro-B-ParamSet': {block: 'CFB', sBox: 'E-B', keyMeshing: 'CP'},\n        'id-Gost28147-89-CryptoPro-C-ParamSet': {block: 'CFB', sBox: 'E-C', keyMeshing: 'CP'},\n        'id-Gost28147-89-CryptoPro-D-ParamSet': {block: 'CFB', sBox: 'E-D', keyMeshing: 'CP'},\n        'id-Gost28147-89-None-KeyMeshing': {keyMeshing: 'NO'},\n        'id-Gost28147-89-CryptoPro-KeyMeshing': {keyMeshing: 'CP'},\n        // TC-26 encryption parameters\n        'id-tc26-gost-28147-param-Z': {block: 'CFB', sBox: 'E-Z'}\n    };\n\n    /**\n     * Named attributes for Algorithm identifiers {@link AlgorithmIdentifier}<br><br> \n     * \n     * Recognized attributes:\n     *  <ul>\n     *      <li>sBox - Paramsets for GOST 28147. Supported values:\n     *          <ul>\n     *              <li>D-TEST - id-GostR3411-94-TestParamSet</li>\n     *              <li>D-A - id-GostR3411-94-CryptoProParamSet</li>\n     *              <li>D-B - id-GostR3411-94-CryptoPro-A-ParamSet</li>\n     *              <li>D-C - id-GostR3411-94-CryptoPro-B-ParamSet</li>\n     *              <li>D-D - id-GostR3411-94-CryptoPro-C-ParamSet</li>\n     *              <li>E-TEST - id-Gost28147-89-TestParamSet</li>\n     *              <li>E-A - id-Gost28147-89-CryptoPro-A-ParamSet</li>\n     *              <li>E-B - id-Gost28147-89-CryptoPro-B-ParamSet</li>\n     *              <li>E-C - id-Gost28147-89-CryptoPro-C-ParamSet</li>\n     *              <li>E-D - id-Gost28147-89-CryptoPro-D-ParamSet</li>\n     *              <li>E-Z - id-tc26-gost-28147-param-Z</li>\n     *              <li>D-256 - id-tc26-gost3411-12-256</li>\n     *              <li>D-512 - id-tc26-gost3411-12-512</li>\n     *          </ul>\n     *      </li>\n     *      <li>namedParam - Paramset for GOST R 34.10-94\n     *          <ul>\n     *              <li>S-TEST - id-GostR3410-94-TestParamSet</li>\n     *              <li>S-A - id-GostR3410-94-CryptoPro-A-ParamSet</li>\n     *              <li>S-B - id-GostR3410-94-CryptoPro-B-ParamSet</li>\n     *              <li>S-C - id-GostR3410-94-CryptoPro-C-ParamSet</li>\n     *              <li>S-D - id-GostR3410-94-CryptoPro-D-ParamSet</li>\n     *              <li>X-A - id-GostR3410-94-CryptoPro-XchA-ParamSet</li>\n     *              <li>X-B - id-GostR3410-94-CryptoPro-XchB-ParamSet</li>\n     *              <li>X-C - id-GostR3410-94-CryptoPro-XchC-ParamSet</li>\n     *          </ul>\n     *      </li>\n     *      <li>namedCurve - Paramset for GOST R 34.10-01 and GOST R 34.10-12\n     *          <ul>\n     *              <li>S-256-TEST - id-GostR3410-2001-CryptoPro-TestParamSet</li>\n     *              <li>S-256-A - id-GostR3410-2001-CryptoPro-A-ParamSet</li>\n     *              <li>S-256-B - id-GostR3410-2001-CryptoPro-B-ParamSet</li>\n     *              <li>S-256-C - id-GostR3410-2001-CryptoPro-C-ParamSet</li>\n     *              <li>X-256-A - id-GostR3410-2001-CryptoPro-XchA-ParamSet</li>\n     *              <li>X-256-B - id-GostR3410-2001-CryptoPro-XchB-ParamSet</li>\n     *              <li>P-256 - secp256r1</li>\n     *              <li>T-256-TEST - id-tc26-gost-3410-12-256-paramSetTest</li>\n     *              <li>T-256-A - id-tc26-gost-3410-12-256-paramSetA</li>\n     *              <li>T-256-B - id-tc26-gost-3410-12-256-paramSetB</li>\n     *              <li>T-512-TEST - id-tc26-gost-3410-12-512-paramSetTest</li>\n     *              <li>T-512-A - id-tc26-gost-3410-12-512-paramSetA</li>\n     *              <li>T-512-B - id-tc26-gost-3410-12-512-paramSetB</li>\n     *          </ul>\n     *      </li>\n     *  </ul>\n     * @field attributes\n     * @memberOf GostSecurity\n     */\n    var attributes = {\n        sBox: {\n            'D-TEST': 'id-GostR3411-94-TestParamSet',\n            'D-A': 'id-GostR3411-94-CryptoProParamSet',\n            'D-B': 'id-GostR3411-94-CryptoPro-A-ParamSet',\n            'D-C': 'id-GostR3411-94-CryptoPro-B-ParamSet',\n            'D-D': 'id-GostR3411-94-CryptoPro-C-ParamSet',\n            'E-TEST': 'id-Gost28147-89-TestParamSet',\n            'E-A': 'id-Gost28147-89-CryptoPro-A-ParamSet',\n            'E-B': 'id-Gost28147-89-CryptoPro-B-ParamSet',\n            'E-C': 'id-Gost28147-89-CryptoPro-C-ParamSet',\n            'E-D': 'id-Gost28147-89-CryptoPro-D-ParamSet',\n            'E-Z': 'id-tc26-gost-28147-param-Z',\n            'D-256': 'id-tc26-gost3411-12-256',\n            'D-512': 'id-tc26-gost3411-12-512'\n        },\n        namedParam: {\n            'S-TEST': 'id-GostR3410-94-TestParamSet',\n            'S-A': 'id-GostR3410-94-CryptoPro-A-ParamSet',\n            'S-B': 'id-GostR3410-94-CryptoPro-B-ParamSet',\n            'S-C': 'id-GostR3410-94-CryptoPro-C-ParamSet',\n            'S-D': 'id-GostR3410-94-CryptoPro-D-ParamSet',\n            'X-A': 'id-GostR3410-94-CryptoPro-XchA-ParamSet',\n            'X-B': 'id-GostR3410-94-CryptoPro-XchB-ParamSet',\n            'X-C': 'id-GostR3410-94-CryptoPro-XchC-ParamSet'\n        },\n        namedCurve: {\n            'S-256-TEST': 'id-GostR3410-2001-CryptoPro-TestParamSet',\n            'S-256-A': 'id-GostR3410-2001-CryptoPro-A-ParamSet',\n            'S-256-B': 'id-GostR3410-2001-CryptoPro-B-ParamSet',\n            'S-256-C': 'id-GostR3410-2001-CryptoPro-C-ParamSet',\n            'X-256-A': 'id-GostR3410-2001-CryptoPro-XchA-ParamSet',\n            'X-256-B': 'id-GostR3410-2001-CryptoPro-XchB-ParamSet',\n            'P-256': 'secp256r1',\n            'T-256-TEST': 'id-tc26-gost-3410-12-256-paramSetTest',\n            'T-256-A': 'id-tc26-gost-3410-12-256-paramSetA',\n            'T-256-B': 'id-tc26-gost-3410-12-256-paramSetB',\n            'T-512-TEST': 'id-tc26-gost-3410-12-512-paramSetTest',\n            'T-512-A': 'id-tc26-gost-3410-12-512-paramSetA',\n            'T-512-B': 'id-tc26-gost-3410-12-512-paramSetB'\n        }\n    };\n\n    /**\n     * Set of algorithms for different providers<br><br>\n     * Supported providers:\n     *  <ul>\n     *      <li><b>CP-94</b> - CryptoPro GOST R 34.10-94 algorithm set</li>\n     *      <li><b>CP-01</b> - CryptoPro GOST R 34.10-2001 algorithm set</li>\n     *      <li><b>TC-256</b> - Technical Commitee GOST R 34.10-256 algorithm set</li>\n     *      <li><b>TC-512</b> - Technical Commitee GOST R 34.10-512 algorithm set</li>\n     *      <li><b>SC-94</b> - SignalCom GOST R 34.10-94 algorithm set</li>\n     *      <li><b>SC-01</b> - SignalCom GOST R 34.10-2001 algorithm set</li>\n     *  </ul>\n     *  \n     *  Follow set can be used if it's supported your browser native WebCrypto API:\n     *  <ul>\n     *      <li><b>RSA-2048</b> - RSA Encryption 2048 bits with SHA-256 algorithm set</li>\n     *      <li><b>ECDSA-256</b> - ECDSA-256 with SHA-256 algorithm set</li>\n     *  </ul>\n     *  \n     *  Each provider records has follow standart algorithm identifiers:\n     *  <ul>\n     *      <li><b>signature</b> - Signature algorithm</li>\n     *      <li><b>generation</b> - Asymmetric key generation algorithm</li>\n     *      <li><b>digest</b> - Digest algorithm</li>\n     *      <li><b>wrapping</b> - Key wrapping algorithm</li>\n     *      <li><b>hmac</b> - Hash-based message authentication code algorithm</li>\n     *      <li><b>agreement</b> - Key agreement algorithm (except RSA schema)</li>\n     *      <li><b>encryption</b> - Content encription algorithm</li>\n     *      <li><b>derivation</b> - Password-based derivation algorithm</li>\n     *      <li><b>pbes</b> - Password-based encryption algorithm</li>\n     *      <li><b>pbmac</b> - Password-based message authentication code algorithm</li>\n     *  </ul>\n     *  \n     * @field providers\n     * @memberOf GostSecurity\n     */\n    var providers = {\n        'CP-94': {\n            title: 'Crypto-Pro GOST R 34.10-94 Cryptographic Service Provider',\n            signature: algorithms['id-GostR3411-94-with-GostR3410-94'],\n            publicKey: {id: 'id-GostR3410-94', name: 'GOST R 34.10-94', namedParam: 'X-A'},\n            privateKey: {id: 'id-GostR3410-94DH', name: 'GOST R 34.10-94-DH', namedParam: 'X-A'},\n            digest: algorithms['id-GostR3411-94'],\n            wrapping: {id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A'},\n            hmac: algorithms['id-HMACGostR3411-94'],\n            agreement: algorithms['id-GostR3410-94-CryptoPro-ESDH'],\n            encryption: {id: 'id-Gost28147-89', name: 'GOST 28147-89', block: 'CFB', sBox: 'E-A', keyMeshing: 'CP'},\n            derivation: {id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2', iterations: 2000}\n        },\n        'CP-01': {\n            title: 'Crypto-Pro GOST R 34.10-2001 Cryptographic Service Provider',\n            signature: algorithms['id-GostR3411-94-with-GostR3410-2001'],\n            publicKey: {id: 'id-GostR3410-2001', name: 'GOST R 34.10-2001', namedCurve: 'X-256-A'},\n            privateKey: {id: 'id-GostR3410-2001DH', name: 'GOST R 34.10-2001-DH', namedCurve: 'X-256-A'},\n            digest: {id: 'id-GostR3411-94', name: 'GOST R 34.11-94', sBox: 'D-A'},\n            wrapping: {id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A'},\n            hmac: algorithms['id-HMACGostR3411-94'],\n            agreement: algorithms['id-GostR3410-2001-CryptoPro-ESDH'],\n            encryption: {id: 'id-Gost28147-89', name: 'GOST 28147-89-CFB-CPKM', sBox: 'E-A'},\n            derivation: {id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2', iterations: 2000}\n        },\n        'TC-256': {\n            title: 'Crypto-Pro GOST R 34.10-2012 Cryptographic Service Provider',\n            signature: algorithms['id-tc26-signwithdigest-gost3410-12-256'],\n            publicKey: {id: 'id-tc26-gost3410-12-256', name: 'GOST R 34.10-256', namedCurve: 'X-256-A'},\n            privateKey: {id: 'id-tc26-agreement-gost-3410-12-256', name: 'GOST R 34.10-256-DH/GOST R 34.11-256', namedCurve: 'X-256-A'},\n            digest: algorithms['id-tc26-gost3411-12-256'],\n            wrapping: {id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A'},\n            hmac: algorithms['id-tc26-hmac-gost-3411-12-256'],\n            agreement: algorithms['id-tc26-agreement-gost-3410-12-256'],\n            encryption: {id: 'id-Gost28147-89', name: 'GOST 28147-89-CFB-CPKM', sBox: 'E-A'},\n            derivation: {id: 'PBKDF2', name: 'GOST R 34.11-256-12-PBKDF2', iterations: 2000}\n        },\n        'TC-512': {\n            title: 'Crypto-Pro GOST R 34.10-2012 Strong Cryptographic Service Provider',\n            signature: algorithms['id-tc26-signwithdigest-gost3410-12-512'],\n            publicKey: {id: 'id-tc26-gost3410-12-512', name: 'GOST R 34.10-512', namedCurve: 'T-512-A'},\n            privateKey: {id: 'id-tc26-agreement-gost-3410-12-512', name: 'GOST R 34.10-512-DH/GOST R 34.11-256', namedCurve: 'T-512-A'},\n            digest: algorithms['id-tc26-gost3411-12-512'],\n            wrapping: {id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A'},\n            hmac: algorithms['id-tc26-hmac-gost-3411-12-512'],\n            agreement: algorithms['id-tc26-agreement-gost-3410-12-512'],\n            encryption: {id: 'id-Gost28147-89', name: 'GOST 28147-89-CFB-CPKM', sBox: 'E-A'},\n            derivation: {id: 'PBKDF2', name: 'GOST R 34.11-256-PBKDF2', iterations: 2000}\n        },\n        'SC-94': {\n            title: 'Signal-COM GOST Cryptographic Provider',\n            signature: algorithms['id-sc-gostR3411-94-with-gostR3410-94'],\n            publicKey: {id: 'id-sc-gostR3410-94', name: 'GOST R 34.10-94/SC', namedParam: 'S-A'},\n            privateKey: {id: 'id-sc-gostR3410-94', name: 'GOST R 34.10-94/SC', modulusLength: 1024, param: {\n                p: '0xB4E25EFB018E3C8B87505E2A67553C5EDC56C2914B7E4F89D23F03F03377E70A2903489DD60E78418D3D851EDB5317C4871E40B04228C3B7902963C4B7D85D52B9AA88F2AFDBEB28DA8869D6DF846A1D98924E925561BD69300B9DDD05D247B5922D967CBB02671881C57D10E5EF72D3E6DAD4223DC82AA1F7D0294651A480DF',\n                q: '0x972432A437178B30BD96195B773789AB2FFF15594B176DD175B63256EE5AF2CF',\n                a: '0x8FD36731237654BBE41F5F1F8453E71CA414FFC22C25D915309E5D2E62A2A26C7111F3FC79568DAFA028042FE1A52A0489805C0DE9A1A469C844C7CABBEE625C3078888C1D85EEA883F1AD5BC4E6776E8E1A0750912DF64F79956499F1E182475B0B60E2632ADCD8CF94E9C54FD1F3B109D81F00BF2AB8CB862ADF7D40B9369A'}},\n            digest: algorithms['id-sc-gostR3411-94'],\n            encryption: {id: 'id-sc-gost28147-gfb', name: 'GOST 28147-89-CFB/SC'},\n            hmac: algorithms['id-sc-hmacWithGostR3411'],\n            wrapping: ['id-sc-cmsGostWrap'],\n            agreement: algorithms['id-sc-r3410-ESDH-r3411kdf'],\n            derivation: {id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048},\n            pbes: {id: 'id-sc-pbeWithGost3411AndGost28147CFB',\n                derivation: {id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048},\n                encryption: {id: 'id-sc-gost28147-gfb', name: 'GOST 28147-CFB/SC', iv: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])}}\n        },\n        'SC-01': {\n            title: 'Signal-COM ECGOST Cryptographic Provider',\n            signature: algorithms['id-sc-gostR3411-94-with-gostR3410-2001'],\n            publicKey: {id: 'id-sc-gostR3410-2001', name: 'GOST R 34.10-2001/SC', namedCurve: 'P-256'},\n            privateKey: {id: 'id-sc-gostR3410-2001', name: 'GOST R 34.10-2001/SC', curve: {\n                p: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF',\n                a: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC',\n                b: '0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B',\n                x: '0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296',\n                y: '0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5',\n                q: '0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551'}},\n            digest: algorithms['id-sc-gostR3411-94'],\n            encryption: {id: 'id-sc-gost28147-gfb', name: 'GOST 28147-89-CFB/SC'},\n            hmac: algorithms['id-sc-hmacWithGostR3411'],\n            wrapping: algorithms['id-sc-cmsGostWrap'],\n            agreement: algorithms['id-sc-r3410-ESDH-r3411kdf'],\n            derivation: {id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048},\n            pbes: {id: 'id-sc-pbeWithGost3411AndGost28147CFB',\n                derivation: {id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048},\n                encryption: {id: 'id-sc-gost28147-gfb', name: 'GOST 28147-CFB/SC', iv: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])}}\n        },\n        'RSA-2048': {\n            title: 'Microsoft Strong Cryptographic Provider',\n            signature: algorithms['sha256withRSAEncryption'],\n            publicKey: {id: 'rsaEncryption', name: 'RSASSA-PKCS1-v1_5', modulusLength: 2048,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]), hash: algorithms['sha256']},\n            privateKey: {id: 'rsaEncryption', name: 'RSASSA-PKCS1-v1_5', modulusLength: 2048,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]), hash: algorithms['sha256']},\n            digest: algorithms['sha256'],\n            encryption: algorithms['aes256-CFB'],\n            hmac: algorithms['hmacWithSHA256']\n        },\n        'ECDSA-256': {\n            title: 'Microsoft Base DSS and Diffie-Hellman Cryptographic Provider',\n            signature: algorithms['ecdsa-with-SHA256'],\n            publicKey: {id: 'ecdsa', name: 'ECDSA', namedCurve: 'P-256'},\n            privateKey: {id: 'ecdsa', name: 'ECDSA', namedCurve: 'P-256'},\n            digest: algorithms['sha256'],\n            encryption: algorithms['aes256-CFB'],\n            hmac: algorithms['hmacWithSHA256'],\n            agreement: algorithms['ecDH']\n        }\n    };\n    // Russian providers extension\n    ['CP-94', 'CP-01', 'TC-256', 'TC-512', 'SC-94', 'SC-01'].forEach(function (name) {\n        var provider = providers[name];\n        provider.hmac = expand(provider.hmac, {hash: provider.digest});\n        provider.derivation = expand(provider.derivation, {hash: provider.digest, hmac: provider.hmac});\n        provider.pbes = provider.pbes || {id: 'PBES2', derivation: provider.derivation,\n            encryption: provider.encryption};\n        provider.pbmac = provider.pbmac || {id: 'PBMAC1', derivation: provider.derivation,\n            hmac: provider.hmac};\n        provider.agreement = expand(provider.agreement, {wrapping: provider.wrapping});\n    });\n    // RSA & ECDA providers extension\n    ['RSA-2048', 'ECDSA-256'].forEach(function (name) {\n        var provider = providers[name];\n        provider.derivation = provider.derivation || {id: 'PBKDF2', name: 'PBKDF2',\n            iterations: 2048, hash: provider.digest};\n        provider.pbes = provider.pbes || {id: 'PBES2',\n            derivation: provider.derivation,\n            encryption: provider.encryption\n        };\n        provider.pbmac = provider.pbmac || {id: 'PBMAC1',\n            derivation: provider.derivation,\n            hmac: provider.hmac\n        };\n    });\n    // Workaround for Chrome error for RSA algorithm when hash for keys is not defined\n    // if (root.crypto && root.crypto.subtle)\n    //    setTimeout(function () {\n    //        root.crypto.subtle.generateKey(providers['RSA-2048'].generation, false, [\"sign\"])['catch'](function () {\n    //            providers['RSA-2048'].generation.hash = providers['RSA-2048'].digest;\n    //            algorithms['rsaEncryption'].hash = providers['RSA-2048'].digest;\n    //        });\n    //    }); \n\n\n    /**\n     * GOST and common ASN.1 Object and Algorithm Identifiers\n     * @class GostSecurity\n     */\n    function GostSecurity() {\n    }\n\n    GostSecurity.prototype = {\n        names: names,\n        identifiers: identifiers,\n        algorithms: algorithms,\n        parameters: parameters,\n        attributes: attributes,\n        providers: providers\n    };\n\n    /**\n     * GOST and common ASN.1 Object and Algorithm Identifiers  \n     * \n     * @memberOf gostCrypto\n     * @type GostSecurity\n     */\n    gostCrypto.security = new GostSecurity();\n\nmodule.exports = GostSecurity();\n","/**\n * @file GOST 34.10-2012 signature function with 1024/512 bits digest\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *    \n * Used library JSBN http://www-cs-students.stanford.edu/~tjw/jsbn/\n * Copyright (c) 2003-2005  Tom Wu (tjw@cs.Stanford.EDU)\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nconst GostRandom = require('./gostRandom');\nconst GostDigest = require('./gostDigest');\n\n    /*\n     * Predefined curves and params collection\n     * \n     * http://tools.ietf.org/html/rfc5832\n     * http://tools.ietf.org/html/rfc7091\n     * http://tools.ietf.org/html/rfc4357\n     * \n     */\n\n    var root = global;\n    var rootCrypto = root.crypto || root.msCrypto;\n    var CryptoOperationData = root.ArrayBuffer;\n    \n    var OperationError = root.OperationError || root.Error,\n            DataError = root.DataError || root.Error,\n            NotSupportedError = root.NotSupportedError || root.Error;\n\n    // Predefined named curve collection\n    var ECGostParams = {\n        'S-256-TEST': {\n            a: 7,\n            b: '0x5FBFF498AA938CE739B8E022FBAFEF40563F6E6A3472FC2A514C0CE9DAE23B7E',\n            p: '0x8000000000000000000000000000000000000000000000000000000000000431',\n            q: '0x8000000000000000000000000000000150FE8A1892976154C59CFC193ACCF5B3',\n            x: 2,\n            y: '0x8E2A8A0E65147D4BD6316030E16D19C85C97F0A9CA267122B96ABBCEA7E8FC8'\n        },\n        'S-256-A': {\n            a: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD94',\n            b: 166,\n            p: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD97',\n            q: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6C611070995AD10045841B09B761B893',\n            x: 1,\n            y: '0x8D91E471E0989CDA27DF505A453F2B7635294F2DDF23E3B122ACC99C9E9F1E14'\n        },\n        'S-256-B': {\n            a: '0x8000000000000000000000000000000000000000000000000000000000000C96',\n            b: '0x3E1AF419A269A5F866A7D3C25C3DF80AE979259373FF2B182F49D4CE7E1BBC8B',\n            p: '0x8000000000000000000000000000000000000000000000000000000000000C99',\n            q: '0x800000000000000000000000000000015F700CFFF1A624E5E497161BCC8A198F',\n            x: 1,\n            y: '0x3FA8124359F96680B83D1C3EB2C070E5C545C9858D03ECFB744BF8D717717EFC'\n        },\n        'S-256-C': {\n            a: '0x9B9F605F5A858107AB1EC85E6B41C8AACF846E86789051D37998F7B9022D7598',\n            b: 32858,\n            p: '0x9B9F605F5A858107AB1EC85E6B41C8AACF846E86789051D37998F7B9022D759B',\n            q: '0x9B9F605F5A858107AB1EC85E6B41C8AA582CA3511EDDFB74F02F3A6598980BB9',\n            x: 0,\n            y: '0x41ECE55743711A8C3CBF3783CD08C0EE4D4DC440D4641A8F366E550DFDB3BB67'\n        },\n        'P-256': {\n            p: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF',\n            a: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC',\n            b: '0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B',\n            x: '0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296',\n            y: '0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5',\n            q: '0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551'\n        },\n        'T-512-TEST': {\n            a: 7,\n            b: '0x1CFF0806A31116DA29D8CFA54E57EB748BC5F377E49400FDD788B649ECA1AC4361834013B2AD7322480A89CA58E0CF74BC9E540C2ADD6897FAD0A3084F302ADC',\n            p: '0x4531ACD1FE0023C7550D267B6B2FEE80922B14B2FFB90F04D4EB7C09B5D2D15DF1D852741AF4704A0458047E80E4546D35B8336FAC224DD81664BBF528BE6373',\n            q: '0x4531ACD1FE0023C7550D267B6B2FEE80922B14B2FFB90F04D4EB7C09B5D2D15DA82F2D7ECB1DBAC719905C5EECC423F1D86E25EDBE23C595D644AAF187E6E6DF',\n            x: '0x24D19CC64572EE30F396BF6EBBFD7A6C5213B3B3D7057CC825F91093A68CD762FD60611262CD838DC6B60AA7EEE804E28BC849977FAC33B4B530F1B120248A9A',\n            y: '0x2BB312A43BD2CE6E0D020613C857ACDDCFBF061E91E5F2C3F32447C259F39B2C83AB156D77F1496BF7EB3351E1EE4E43DC1A18B91B24640B6DBB92CB1ADD371E'\n        },\n        'T-512-A': {\n            p: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC7',\n            a: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC4',\n            b: '0xE8C2505DEDFC86DDC1BD0B2B6667F1DA34B82574761CB0E879BD081CFD0B6265EE3CB090F30D27614CB4574010DA90DD862EF9D4EBEE4761503190785A71C760',\n            q: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27E69532F48D89116FF22B8D4E0560609B4B38ABFAD2B85DCACDB1411F10B275',\n            x: 3,\n            y: '0x7503CFE87A836AE3A61B8816E25450E6CE5E1C93ACF1ABC1778064FDCBEFA921DF1626BE4FD036E93D75E6A50E3A41E98028FE5FC235F5B889A589CB5215F2A4'\n        },\n        'T-512-B': {\n            p: '0x8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006F',\n            a: '0x8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006C',\n            b: '0x687D1B459DC841457E3E06CF6F5E2517B97C7D614AF138BCBF85DC806C4B289F3E965D2DB1416D217F8B276FAD1AB69C50F78BEE1FA3106EFB8CCBC7C5140116',\n            q: '0x800000000000000000000000000000000000000000000000000000000000000149A1EC142565A545ACFDB77BD9D40CFA8B996712101BEA0EC6346C54374F25BD',\n            x: 2,\n            y: '0x1A8F7EDA389B094C2C071E3647A8940F3C123B697578C213BE6DD9E6C8EC7335DCB228FD1EDF4A39152CBCAAF8C0398828041055F94CEEEC7E21340780FE41BD'\n        }\n    };\n    ECGostParams['X-256-A'] = ECGostParams['S-256-A'];\n    ECGostParams['X-256-B'] = ECGostParams['S-256-C'];\n    ECGostParams['T-256-TEST'] = ECGostParams['S-256-TEST'];\n    ECGostParams['T-256-A'] = ECGostParams['S-256-A'];\n    ECGostParams['T-256-B'] = ECGostParams['S-256-B'];\n    ECGostParams['T-256-C'] = ECGostParams['S-256-C'];\n\n\n    var GostParams = {\n        'S-TEST': {\n            modulusLength: 512, // bit length of p (512 or 1024 bits)\n            p: '0xEE8172AE8996608FB69359B89EB82A69854510E2977A4D63BC97322CE5DC3386EA0A12B343E9190F23177539845839786BB0C345D165976EF2195EC9B1C379E3',\n            q: '0x98915E7EC8265EDFCDA31E88F24809DDB064BDC7285DD50D7289F0AC6F49DD2D',\n            a: '0x9e96031500c8774a869582d4afde2127afad2538b4b6270a6f7c8837b50d50f206755984a49e509304d648be2ab5aab18ebe2cd46ac3d8495b142aa6ce23e21c'\n        },\n        'S-A': {\n            modulusLength: 1024,\n            p: '0xB4E25EFB018E3C8B87505E2A67553C5EDC56C2914B7E4F89D23F03F03377E70A2903489DD60E78418D3D851EDB5317C4871E40B04228C3B7902963C4B7D85D52B9AA88F2AFDBEB28DA8869D6DF846A1D98924E925561BD69300B9DDD05D247B5922D967CBB02671881C57D10E5EF72D3E6DAD4223DC82AA1F7D0294651A480DF',\n            q: '0x972432A437178B30BD96195B773789AB2FFF15594B176DD175B63256EE5AF2CF',\n            a: '0x8FD36731237654BBE41F5F1F8453E71CA414FFC22C25D915309E5D2E62A2A26C7111F3FC79568DAFA028042FE1A52A0489805C0DE9A1A469C844C7CABBEE625C3078888C1D85EEA883F1AD5BC4E6776E8E1A0750912DF64F79956499F1E182475B0B60E2632ADCD8CF94E9C54FD1F3B109D81F00BF2AB8CB862ADF7D40B9369A'\n        },\n        'S-B': {\n            modulusLength: 1024,\n            p: '0xC6971FC57524B30C9018C5E621DE15499736854F56A6F8AEE65A7A404632B1BCF0349FFCAFCB0A103177971FC1612ADCDB8C8CC938C70225C8FD12AFF01B1D064E0AD6FDE6AB9159166CB9F2FC171D92F0CC7B6A6B2CD7FA342ACBE2C9315A42D576B1ECCE77A963157F3D0BD96A8EB0B0F3502AD238101B05116334F1E5B7AB',\n            q: '0xB09D634C10899CD7D4C3A7657403E05810B07C61A688BAB2C37F475E308B0607',\n            a: '0x3D26B467D94A3FFC9D71BF8DB8934084137264F3C2E9EB16DCA214B8BC7C872485336744934FD2EF5943F9ED0B745B90AA3EC8D70CDC91682478B664A2E1F8FB56CEF2972FEE7EDB084AF746419B854FAD02CC3E3646FF2E1A18DD4BEB3C44F7F2745588029649674546CC9187C207FB8F2CECE8E2293F68395C4704AF04BAB5'\n        },\n        'S-C': {\n            modulusLength: 1024,\n            p: '0x9D88E6D7FE3313BD2E745C7CDD2AB9EE4AF3C8899E847DE74A33783EA68BC30588BA1F738C6AAF8AB350531F1854C3837CC3C860FFD7E2E106C3F63B3D8A4C034CE73942A6C3D585B599CF695ED7A3C4A93B2B947B7157BB1A1C043AB41EC8566C6145E938A611906DE0D32E562494569D7E999A0DDA5C879BDD91FE124DF1E9',\n            q: '0xFADD197ABD19A1B4653EECF7ECA4D6A22B1F7F893B641F901641FBB555354FAF',\n            a: '0x7447ED7156310599070B12609947A5C8C8A8625CF1CF252B407B331F93D639DDD1BA392656DECA992DD035354329A1E95A6E32D6F47882D960B8F10ACAFF796D13CD9611F853DAB6D2623483E46788708493937A1A29442598AEC2E0742022563440FE9C18740ECE6765AC05FAF024A64B026E7E408840819E962E7E5F401AE3'\n        },\n        'S-D': {\n            modulusLength: 1024,\n            p: '0x80F102D32B0FD167D069C27A307ADAD2C466091904DBAA55D5B8CC7026F2F7A1919B890CB652C40E054E1E9306735B43D7B279EDDF9102001CD9E1A831FE8A163EED89AB07CF2ABE8242AC9DEDDDBF98D62CDDD1EA4F5F15D3A42A6677BDD293B24260C0F27C0F1D15948614D567B66FA902BAA11A69AE3BCEADBB83E399C9B5',\n            q: '0xF0F544C418AAC234F683F033511B65C21651A6078BDA2D69BB9F732867502149',\n            a: '0x6BCC0B4FADB3889C1E06ADD23CC09B8AB6ECDEDF73F04632595EE4250005D6AF5F5ADE44CB1E26E6263C672347CFA26F9E9393681E6B759733784CDE5DBD9A14A39369DFD99FA85CC0D10241C4010343F34A91393A706CF12677CBFA1F578D6B6CFBE8A1242CFCC94B3B653A476E145E3862C18CC3FED8257CFEF74CDB205BF1'\n        },\n        'X-A': {\n            modulusLength: 1024,\n            p: '0xCA3B3F2EEE9FD46317D49595A9E7518E6C63D8F4EB4D22D10D28AF0B8839F079F8289E603B03530784B9BB5A1E76859E4850C670C7B71C0DF84CA3E0D6C177FE9F78A9D8433230A883CD82A2B2B5C7A3306980278570CDB79BF01074A69C9623348824B0C53791D53C6A78CAB69E1CFB28368611A397F50F541E16DB348DBE5F',\n            q: '0xCAE4D85F80C147704B0CA48E85FB00A9057AA4ACC44668E17F1996D7152690D9',\n            a: '0xBE27D652F2F1E339DA734211B85B06AE4DE236AA8FBEEB3F1ADCC52CD43853777E834A6A518138678A8ADBD3A55C70A7EAB1BA7A0719548677AAF4E609FFB47F6B9D7E45B0D06D83D7ADC53310ABD85783E7317F7EC73268B6A9C08D260B85D8485696CA39C17B17F044D1E050489036ABD381C5E6BF82BA352A1AFF136601AF'\n        },\n        'X-B': {\n            modulusLength: 1024,\n            p: '0x9286DBDA91ECCFC3060AA5598318E2A639F5BA90A4CA656157B2673FB191CD0589EE05F4CEF1BD13508408271458C30851CE7A4EF534742BFB11F4743C8F787B11193BA304C0E6BCA25701BF88AF1CB9B8FD4711D89F88E32B37D95316541BF1E5DBB4989B3DF13659B88C0F97A3C1087B9F2D5317D557DCD4AFC6D0A754E279',\n            q: '0xC966E9B3B8B7CDD82FF0F83AF87036C38F42238EC50A876CD390E43D67B6013F',\n            a: '0x7E9C3096676F51E3B2F9884CF0AC2156779496F410E049CED7E53D8B7B5B366B1A6008E5196605A55E89C3190DABF80B9F1163C979FCD18328DAE5E9048811B370107BB7715F82091BB9DE0E33EE2FED6255474F8769FCE5EAFAEEF1CB5A32E0D5C6C2F0FC0B3447072947F5B4C387666993A333FC06568E534AD56D2338D729'\n        },\n        'X-C': {\n            modulusLength: 1024,\n            p: '0xB194036ACE14139D36D64295AE6C50FC4B7D65D8B340711366CA93F383653908EE637BE428051D86612670AD7B402C09B820FA77D9DA29C8111A8496DA6C261A53ED252E4D8A69A20376E6ADDB3BDCD331749A491A184B8FDA6D84C31CF05F9119B5ED35246EA4562D85928BA1136A8D0E5A7E5C764BA8902029A1336C631A1D',\n            q: '0x96120477DF0F3896628E6F4A88D83C93204C210FF262BCCB7DAE450355125259',\n            a: '0x3F1817052BAA7598FE3E4F4FC5C5F616E122CFF9EBD89EF81DC7CE8BF56CC64B43586C80F1C4F56DD5718FDD76300BE336784259CA25AADE5A483F64C02A20CF4A10F9C189C433DEFE31D263E6C9764660A731ECCAECB74C8279303731E8CF69205BC73E5A70BDF93E5BB681DAB4EEB9C733CAAB2F673C475E0ECA921D29782E'\n        }\n    };\n\n    /* \n     * BigInteger arithmetic tools \n     * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn.js \n     * \n     */\n\n    // Bits per one element\n    var DB = 28, DM = (1 << DB) - 1, DV = 1 << DB,\n            FV = Math.pow(2, 52), F1 = 52 - DB, F2 = 2 * DB - 52;\n\n    function am(y, i, x, w, j, c, n) {\n        var xl = x & 0x3fff, xh = x >> 14;\n        while (--n >= 0) {\n            var l = y[i] & 0x3fff;\n            var h = y[i++] >> 14;\n            var m = xh * l + h * xl;\n            l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n            c = (l >> 28) + (m >> 14) + xh * h;\n            w[j++] = l & 0xfffffff;\n        }\n        return c;\n    }\n\n    function nbi(words) {\n        var r = new Array(Math.ceil(words));\n        r.s = 0;\n        r.t = 0;\n        return r;\n    }\n\n    function copyTo(x, r) {\n        for (var i = x.t - 1; i >= 0; --i)\n            r[i] = x[i];\n        r.t = x.t;\n        r.s = x.s;\n        return r;\n    }\n\n    function copy(x) {\n        return copyTo(x, nbi(x.t));\n    }\n\n    function setInt(x, i) {\n        x.t = 1;\n        x.s = (i < 0) ? -1 : 0;\n        if (i > 0)\n            x[0] = i;\n        else if (i < -1)\n            x[0] = i + DV;\n        else\n            x.t = 0;\n        return x;\n    }\n\n    function nbv(i) {\n        var r = nbi(1);\n        setInt(r, i);\n        return r;\n    }\n\n    var ZERO = nbv(0), ONE = nbv(1), THREE = nbv(3);\n\n    function clamp(x) {\n        var c = x.s & DM;\n        while (x.t > 0 && x[x.t - 1] === c)\n            --x.t;\n        return x;\n    }\n\n    function subTo(x, a, r) {\n        var i = 0, c = 0, m = Math.min(a.t, x.t);\n        while (i < m) {\n            c += x[i] - a[i];\n            r[i++] = c & DM;\n            c >>= DB;\n        }\n        if (a.t < x.t) {\n            c -= a.s;\n            while (i < x.t) {\n                c += x[i];\n                r[i++] = c & DM;\n                c >>= DB;\n            }\n            c += x.s;\n        }\n        else {\n            c += x.s;\n            while (i < a.t) {\n                c -= a[i];\n                r[i++] = c & DM;\n                c >>= DB;\n            }\n            c -= a.s;\n        }\n        r.s = (c < 0) ? -1 : 0;\n        if (c < -1)\n            r[i++] = DV + c;\n        else if (c > 0)\n            r[i++] = c;\n        r.t = i;\n        return clamp(r);\n    }\n\n    function sub(x, y) {\n        return subTo(x, y, nbi(x.t));\n    }\n\n    function addTo(x, a, r) {\n        var i = 0, c = 0, m = Math.min(a.t, x.t);\n        while (i < m) {\n            c += x[i] + a[i];\n            r[i++] = c & DM;\n            c >>= DB;\n        }\n        if (a.t < x.t) {\n            c += a.s;\n            while (i < x.t) {\n                c += x[i];\n                r[i++] = c & DM;\n                c >>= DB;\n            }\n            c += x.s;\n        }\n        else {\n            c += x.s;\n            while (i < a.t) {\n                c += a[i];\n                r[i++] = c & DM;\n                c = c >> DB;\n            }\n            c += a.s;\n        }\n        r.s = (c < 0) ? -1 : 0;\n        if (c > 0)\n            r[i++] = c;\n        else if (c < -1)\n            r[i++] = DV + c;\n        r.t = i;\n        return clamp(r);\n    }\n\n    function add(x, y) {\n        return addTo(x, y, nbi(x.t));\n    }\n\n    function negTo(x, r) {\n        return subTo(ZERO, x, r);\n    }\n\n    function neg(x) {\n        return negTo(x, nbi(x.t));\n    }\n\n    function absTo(x, r) {\n        return (x.s < 0) ? negTo(r) : copyTo(r);\n    }\n\n    function abs(x) {\n        return (x.s < 0) ? neg(x) : x;\n    }\n\n    function compare(x, a) {\n        var r = x.s - a.s;\n        if (r !== 0)\n            return r;\n        var i = x.t;\n        r = i - a.t;\n        if (r !== 0)\n            return (x.s < 0) ? -r : r;\n        while (--i >= 0)\n            if ((r = x[i] - a[i]) !== 0)\n                return r;\n        return 0;\n    }\n\n    function equals(x, y) {\n        return(compare(x, y) === 0);\n    }\n\n    function min(x, y) {\n        return(compare(x, y) < 0) ? x : y;\n    }\n\n    function max(x, y) {\n        return(compare(x, y) > 0) ? x : y;\n    }\n\n    function nbits(x) {\n        var r = 1, t;\n        if ((t = x >>> 16) !== 0) {\n            x = t;\n            r += 16;\n        }\n        if ((t = x >> 8) !== 0) {\n            x = t;\n            r += 8;\n        }\n        if ((t = x >> 4) !== 0) {\n            x = t;\n            r += 4;\n        }\n        if ((t = x >> 2) !== 0) {\n            x = t;\n            r += 2;\n        }\n        if ((t = x >> 1) !== 0) {\n            x = t;\n            r += 1;\n        }\n        return r;\n    }\n\n    function dshlTo(x, n, r) {\n        var i;\n        for (i = x.t - 1; i >= 0; --i)\n            r[i + n] = x[i];\n        for (i = n - 1; i >= 0; --i)\n            r[i] = 0;\n        r.t = x.t + n;\n        r.s = x.s;\n        return r;\n    }\n    function dshrTo(x, n, r) {\n        for (var i = n; i < x.t; ++i)\n            r[i - n] = x[i];\n        r.t = Math.max(x.t - n, 0);\n        r.s = x.s;\n        return r;\n    }\n\n    function shlTo(x, n, r) {\n        var bs = n % DB;\n        var cbs = DB - bs;\n        var bm = (1 << cbs) - 1;\n        var ds = Math.floor(n / DB), c = (x.s << bs) & DM, i;\n        for (i = x.t - 1; i >= 0; --i) {\n            r[i + ds + 1] = (x[i] >> cbs) | c;\n            c = (x[i] & bm) << bs;\n        }\n        for (i = ds - 1; i >= 0; --i)\n            r[i] = 0;\n        r[ds] = c;\n        r.t = x.t + ds + 1;\n        r.s = x.s;\n        return clamp(r);\n    }\n\n    function shrTo(x, n, r) {\n        r.s = x.s;\n        var ds = Math.floor(n / DB);\n        if (ds >= x.t) {\n            r.t = 0;\n            return;\n        }\n        var bs = n % DB;\n        var cbs = DB - bs;\n        var bm = (1 << bs) - 1;\n        r[0] = x[ds] >> bs;\n        for (var i = ds + 1; i < x.t; ++i) {\n            r[i - ds - 1] |= (x[i] & bm) << cbs;\n            r[i - ds] = x[i] >> bs;\n        }\n        if (bs > 0)\n            r[x.t - ds - 1] |= (x.s & bm) << cbs;\n        r.t = x.t - ds;\n        return clamp(r);\n    }\n\n    function shl(x, n) {\n        var r = nbi(x.t);\n        if (n < 0)\n            shrTo(x, -n, r);\n        else\n            shlTo(x, n, r);\n        return r;\n    }\n\n    function shr(x, n) {\n        var r = nbi(x.t);\n        if (n < 0)\n            shlTo(x, -n, r);\n        else\n            shrTo(x, n, r);\n        return r;\n    }\n\n    function bitLength(x) {\n        if (x.t <= 0)\n            return 0;\n        return DB * (x.t - 1) + nbits(x[x.t - 1] ^ (x.s & DM));\n    }\n\n    function mulTo(b, a, r) {\n        var x = abs(b), y = abs(a);\n        var i = x.t;\n        r.t = i + y.t;\n        while (--i >= 0)\n            r[i] = 0;\n        for (i = 0; i < y.t; ++i)\n            r[i + x.t] = am(x, 0, y[i], r, i, 0, x.t);\n        r.s = 0;\n        if (b.s !== a.s)\n            subTo(ZERO, r, r);\n        return clamp(r);\n    }\n\n    function mul(x, y) {\n        return mulTo(x, y, nbi(x.t + y.t));\n    }\n\n    function sqrTo(a, r) {\n        var x = abs(a);\n        var i = r.t = 2 * x.t;\n        while (--i >= 0)\n            r[i] = 0;\n        for (i = 0; i < x.t - 1; ++i) {\n            var c = am(x, i, x[i], r, 2 * i, 0, 1);\n            if ((r[i + x.t] += am(x, i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n                r[i + x.t] -= x.DV;\n                r[i + x.t + 1] = 1;\n            }\n        }\n        if (r.t > 0)\n            r[r.t - 1] += am(x, i, x[i], r, 2 * i, 0, 1);\n        r.s = 0;\n        return clamp(r);\n    }\n\n    function sqr(a) {\n        return sqrTo(a, nbi(a.t * 2));\n    }\n\n    function divRemTo(n, m, q, r) {\n        var pm = abs(m);\n        if (pm.t <= 0)\n            throw new OperationError('Division by zero');\n        var pt = abs(n);\n        if (pt.t < pm.t) {\n            if (q)\n                setInt(q, 0);\n            if (r)\n                copyTo(n, r);\n            return q;\n        }\n        if (!r)\n            r = nbi(m.t);\n        var y = nbi(m.t), ts = n.s, ms = m.s;\n        var nsh = DB - nbits(pm[pm.t - 1]);\n        if (nsh > 0) {\n            shlTo(pm, nsh, y);\n            shlTo(pt, nsh, r);\n        }\n        else {\n            copyTo(pm, y);\n            copyTo(pt, r);\n        }\n        var ys = y.t;\n        var y0 = y[ys - 1];\n        if (y0 === 0)\n            return q;\n        var yt = y0 * (1 << F1) + ((ys > 1) ? y[ys - 2] >> F2 : 0);\n        var d1 = FV / yt, d2 = (1 << F1) / yt, e = 1 << F2;\n        var i = r.t, j = i - ys, t = !q ? nbi(Math.max(n.t - m.t, 1)) : q;\n        dshlTo(y, j, t);\n        if (compare(r, t) >= 0) {\n            r[r.t++] = 1;\n            subTo(r, t, r);\n        }\n        dshlTo(ONE, ys, t);\n        subTo(t, y, y);\n        while (y.t < ys)\n            y[y.t++] = 0;\n        while (--j >= 0) {\n            var qd = (r[--i] === y0) ? DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n            if ((r[i] += am(y, 0, qd, r, j, 0, ys)) < qd) {\n                dshlTo(y, j, t);\n                subTo(r, t, r);\n                while (r[i] < --qd)\n                    subTo(r, t, r);\n            }\n        }\n        if (q) {\n            dshrTo(r, ys, q);\n            if (ts !== ms)\n                subTo(ZERO, q, q);\n        }\n        r.t = ys;\n        clamp(r);\n        if (nsh > 0)\n            shrTo(r, nsh, r);\n        if (ts < 0)\n            subTo(ZERO, r, r);\n        return q;\n    }\n\n    function modTo(b, a, r) {\n        divRemTo(abs(b), a, null, r);\n        if (b.s < 0 && compare(r, ZERO) > 0)\n            subTo(a, r, r);\n        return r;\n    }\n\n    function mod(b, a) {\n        return modTo(b, a, nbi(a.t));\n    }\n\n    function div(b, a) {\n        return divRemTo(b, a, nbi(Math.max(b.t - a.t, 1)), null);\n    }\n\n    function isEven(x) {\n\n        return ((x.t > 0) ? (x[0] & 1) : x.s) === 0;\n    }\n\n    function isZero(x) {\n        return equals(x, ZERO);\n    }\n\n    function sig(x) {\n        if (x.s < 0)\n            return -1;\n        else if (x.t <= 0 || (x.t === 1 && x[0] <= 0))\n            return 0;\n        else\n            return 1;\n    }\n\n    function invMod(x, m) {\n        var ac = isEven(m);\n        if ((isEven(x) && ac) || sig(m) === 0)\n            return ZERO;\n        var u = copy(m), v = copy(x);\n        var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n        while (sig(u) !== 0) {\n            while (isEven(u)) {\n                shrTo(u, 1, u);\n                if (ac) {\n                    if (!isEven(a) || !isEven(b)) {\n                        addTo(a, x, a);\n                        subTo(b, m, b);\n                    }\n                    shrTo(a, 1, a);\n                }\n                else if (!isEven(b))\n                    subTo(b, m, b);\n                shrTo(b, 1, b);\n            }\n            while (isEven(v)) {\n                shrTo(v, 1, v);\n                if (ac) {\n                    if (!isEven(c) || !isEven(d)) {\n                        addTo(c, x, c);\n                        subTo(d, m, d);\n                    }\n                    shrTo(c, 1, c);\n                }\n                else if (!isEven(d))\n                    subTo(d, m, d);\n                shrTo(d, 1, d);\n            }\n            if (compare(u, v) >= 0) {\n                subTo(u, v, u);\n                if (ac)\n                    subTo(a, c, a);\n                subTo(b, d, b);\n            }\n            else {\n                subTo(v, u, v);\n                if (ac)\n                    subTo(c, a, c);\n                subTo(d, b, d);\n            }\n        }\n        if (compare(v, ONE) !== 0)\n            return ZERO;\n        if (compare(d, m) >= 0)\n            return subtract(d, m);\n        if (sig(d) < 0)\n            addTo(d, m, d);\n        else\n            return d;\n        if (sig(d) < 0)\n            return add(d, m);\n        else\n            return d;\n    }\n\n    function testBit(x, n) {\n        var j = Math.floor(n / DB);\n        if (j >= x.t)\n            return (x.s !== 0);\n        return ((x[j] & (1 << (n % DB))) !== 0);\n    }\n\n    function nothing(x) {\n        return x;\n    }\n\n    function extend(c, o) {\n        for (var i in o)\n            c.prototype[i] = o[i];\n    }\n\n    /*\n     * Classic, Barret, Mongomery reductions, optimized ExpMod algorithms\n     * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn2.js\n     * \n     */\n\n    // Classic reduction\n    var Classic = function (m) {\n        this.m = m;\n    };\n\n    extend(Classic, {\n        convert: function (x) {\n            if (x.s < 0 || compare(x, this.m) >= 0)\n                return mod(x, this.m);\n            else\n                return x;\n        },\n        revert: nothing,\n        reduce: function (x) {\n            modTo(x, this.m, x);\n        },\n        sqrTo: function (x, r) {\n            sqrTo(x, r);\n            this.reduce(r);\n        },\n        mulTo: function (x, y, r) {\n            mulTo(x, y, r);\n            this.reduce(r);\n        }\n    });\n\n    function invDig(a) {\n        if (a.t < 1)\n            return 0;\n        var x = a[0];\n        if ((x & 1) === 0)\n            return 0;\n        var y = x & 3;\n        y = (y * (2 - (x & 0xf) * y)) & 0xf;\n        y = (y * (2 - (x & 0xff) * y)) & 0xff;\n        y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\n        y = (y * (2 - x * y % DV)) % DV;\n        return (y > 0) ? DV - y : -y;\n    }\n\n    // Montgomery reduction\n    var Montgomery = function (m) {\n        this.m = m;\n        this.mp = invDig(m);\n        this.mpl = this.mp & 0x7fff;\n        this.mph = this.mp >> 15;\n        this.um = (1 << (DB - 15)) - 1;\n        this.mt2 = 2 * m.t;\n    };\n\n    extend(Montgomery, {\n        // xR mod m\n        convert: function (x) {\n            var r = nbi(x.t);\n            dshlTo(abs(x), this.m.t, r);\n            divRemTo(r, this.m, null, r);\n            if (x.s < 0 && compare(r, ZERO) > 0)\n                subTo(this.m, r, r);\n            return r;\n        },\n        // x/R mod m\n        revert: function (x) {\n            var r = nbi(x.t);\n            copyTo(x, r);\n            this.reduce(r);\n            return r;\n        },\n        // x = x/R mod m (HAC 14.32)\n        reduce: function (x) {\n            while (x.t <= this.mt2)\n                x[x.t++] = 0;\n            for (var i = 0; i < this.m.t; ++i) {\n                var j = x[i] & 0x7fff;\n                var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & DM;\n                j = i + this.m.t;\n                x[j] += am(this.m, 0, u0, x, i, 0, this.m.t);\n                while (x[j] >= DV) {\n                    x[j] -= DV;\n                    x[++j]++;\n                }\n            }\n            clamp(x);\n            dshrTo(x, this.m.t, x);\n            if (compare(x, this.m) >= 0)\n                subTo(x, this.m, x);\n        },\n        // r = \"x^2/R mod m\"; x != r\n        sqrTo: function (x, r) {\n            sqrTo(x, r);\n            this.reduce(r);\n        },\n        // r = \"xy/R mod m\"; x,y != r\n        mulTo: function (x, y, r) {\n            mulTo(x, y, r);\n            this.reduce(r);\n        }\n    });\n\n    function dAddOffset(x, n, w) {\n        if (n === 0)\n            return;\n        while (x.t <= w)\n            x[x.t++] = 0;\n        x[w] += n;\n        while (x[w] >= DV) {\n            x[w] -= DV;\n            if (++w >= x.t)\n                x[x.t++] = 0;\n            ++x[w];\n        }\n    }\n\n    function mulLowerTo(x, a, n, r) {\n        var i = Math.min(x.t + a.t, n);\n        r.s = 0; // assumes a,x >= 0\n        r.t = i;\n        while (i > 0)\n            r[--i] = 0;\n        var j;\n        for (j = r.t - x.t; i < j; ++i)\n            r[i + x.t] = am(x, 0, a[i], r, i, 0, x.t);\n        for (j = Math.min(a.t, n); i < j; ++i)\n            am(x, 0, a[i], r, i, 0, n - i);\n        return clamp(r);\n    }\n\n    function mulUpperTo(x, a, n, r) {\n        --n;\n        var i = r.t = x.t + a.t - n;\n        r.s = 0; // assumes a,x >= 0\n        while (--i >= 0)\n            r[i] = 0;\n        for (i = Math.max(n - x.t, 0); i < a.t; ++i)\n            r[x.t + i - n] = am(x, n - i, a[i], r, 0, 0, x.t + i - n);\n        clamp(r);\n        return dshrTo(r, 1, r);\n    }\n\n    // Barrett modular reduction\n    function Barrett(m) {\n        // setup Barrett\n        this.r2 = nbi(2 * m.t);\n        this.q3 = nbi(2 * m.t);\n        dshlTo(ONE, 2 * m.t, this.r2);\n        this.mu = div(this.r2, m);\n        this.m = m;\n    }\n\n    extend(Barrett, {\n        convert: function (x) {\n            if (x.s < 0 || x.t > 2 * this.m.t)\n                return mod(x, this.m);\n            else if (compare(x, this.m) < 0)\n                return x;\n            else {\n                var r = nbi(x.t);\n                copyTo(x, r);\n                this.reduce(r);\n                return r;\n            }\n        },\n        revert: function (x) {\n            return x;\n        },\n        // x = x mod m (HAC 14.42)\n        reduce: function (x) {\n            dshrTo(x, this.m.t - 1, this.r2);\n            if (x.t > this.m.t + 1) {\n                x.t = this.m.t + 1;\n                clamp(x);\n            }\n            mulUpperTo(this.mu, this.r2, this.m.t + 1, this.q3);\n            mulLowerTo(this.m, this.q3, this.m.t + 1, this.r2);\n            while (compare(x, this.r2) < 0)\n                dAddOffset(x, 1, this.m.t + 1);\n            subTo(x, this.r2, x);\n            while (compare(x, this.m) >= 0)\n                subTo(x, this.m, x);\n        },\n        // r = x^2 mod m; x != r\n        sqrTo: function (x, r) {\n            sqrTo(x, r);\n            this.reduce(r);\n        },\n        // r = x*y mod m; x,y != r\n        mulTo: function (x, y, r) {\n            mulTo(x, y, r);\n            this.reduce(r);\n        }\n\n    });\n\n    // x^e % m (HAC 14.85)\n    function expMod(x, e, m) {\n        var i = bitLength(e), k, r = nbv(1), z;\n        if (i <= 0)\n            return r;\n        else if (i < 18)\n            k = 1;\n        else if (i < 48)\n            k = 3;\n        else if (i < 144)\n            k = 4;\n        else if (i < 768)\n            k = 5;\n        else\n            k = 6;\n        if (i < 8)\n            z = new Classic(m);\n        else if (isEven(m))\n            z = new Barrett(m);\n        else\n            z = new Montgomery(m);\n\n        // precomputation\n        var g = new Array(), n = 3, k1 = k - 1, km = (1 << k) - 1;\n        g[1] = z.convert(x);\n        if (k > 1) {\n            var g2 = nbi(m.t * 2);\n            z.sqrTo(g[1], g2);\n            while (n <= km) {\n                g[n] = nbi(m.t * 2);\n                z.mulTo(g2, g[n - 2], g[n]);\n                n += 2;\n            }\n        }\n\n        var j = e.t - 1, w, is1 = true, r2 = nbi(m.t * 2), t;\n        i = nbits(e[j]) - 1;\n        while (j >= 0) {\n            if (i >= k1)\n                w = (e[j] >> (i - k1)) & km;\n            else {\n                w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n                if (j > 0)\n                    w |= e[j - 1] >> (DB + i - k1);\n            }\n\n            n = k;\n            while ((w & 1) == 0) {\n                w >>= 1;\n                --n;\n            }\n            if ((i -= n) < 0) {\n                i += DB;\n                --j;\n            }\n            if (is1) {\t// ret == 1, don't bother squaring or multiplying it\n                copyTo(g[w], r);\n                is1 = false;\n            }\n            else {\n                while (n > 1) {\n                    z.sqrTo(r, r2);\n                    z.sqrTo(r2, r);\n                    n -= 2;\n                }\n                if (n > 0)\n                    z.sqrTo(r, r2);\n                else {\n                    t = r;\n                    r = r2;\n                    r2 = t;\n                }\n                z.mulTo(r2, g[w], r);\n            }\n            while (j >= 0 && (e[j] & (1 << i)) == 0) {\n                z.sqrTo(r, r2);\n                t = r;\n                r = r2;\n                r2 = t;\n                if (--i < 0) {\n                    i = DB - 1;\n                    --j;\n                }\n            }\n        }\n        return z.revert(r);\n    }\n\n    /*\n     * EC Field Elements, Points, Curves\n     * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/ec.js\n     * \n     */\n\n    // EC Field Elemets\n    function newFE(a, x) {\n        a.r.reduce(x);\n        x.q = a.q;\n        x.r = a.r;\n        return x;\n    }\n\n    function copyFE(a, x) {\n        x.q = a.q;\n        x.r = a.r;\n        return x;\n    }\n\n    function negFE(a) {\n        return copyFE(a, sub(a.q, a));\n    }\n\n    function addFE(a, b) {\n        var r = add(a, b);\n        if (compare(r, a.q) > 0)\n            subTo(r, a.q, r);\n        return copyFE(a, r);\n    }\n\n    function subFE(a, b) {\n        var r = sub(a, b);\n        if (r.s < 0)\n            addTo(a.q, r, r);\n        return copyFE(a, r);\n    }\n\n    function mulFE(a, b) {\n        return newFE(a, mul(a, b));\n    }\n\n    function sqrFE(a) {\n        return newFE(a, sqr(a));\n    }\n\n    function shlFE(a, i) {\n        return newFE(a, shl(a, i));\n    }\n\n    function invFE(a) {\n        return copyFE(a, invMod(a, a.q));\n    }\n\n    // EC Points\n    function newEC(curve, x, y, z) {\n        return {\n            curve: curve,\n            x: x,\n            y: y,\n            z: z || newFE(curve, ONE)\n        };\n    }\n\n    function getX(point) {\n        if (!point.zinv)\n            point.zinv = invFE(point.z);\n        return mulFE(point.x, point.zinv);\n    }\n\n    function getY(point) {\n        if (!point.zinv)\n            point.zinv = invFE(point.z);\n        return mulFE(point.y, point.zinv);\n    }\n\n    function isInfinity(a) {\n        if ((!a.x) && (!a.y))\n            return true;\n        return isZero(a.z) && !isZero(a.y);\n    }\n\n    function getInfinity(a) {\n        return a.curve.infinity;\n    }\n\n    function equalsEC(a, b) {\n        if (a === b)\n            return true;\n        if (isInfinity(a))\n            return isInfinity(b);\n        if (isInfinity(b))\n            return isInfinity(a);\n        var u, v;\n        // u = Y2 * Z1 - Y1 * Z2\n        u = subFE(mulFE(b.y, a.z), mulFE(a.y, b.z));\n        if (!isZero(u))\n            return false;\n        // v = X2 * Z1 - X1 * Z2\n        v = subFE(mulFE(b.x, a.z), mulFE(a.x, b.z));\n        return isZero(v);\n    }\n\n    function negEC(a) {\n        return newEC(a.curve, a.x, negFE(a.y), a.z);\n    }\n\n    function addEC(a, b) {\n        if (isInfinity(a))\n            return b;\n        if (isInfinity(b))\n            return a;\n\n        // u = Y2 * Z1 - Y1 * Z2\n        var u = subFE(mulFE(b.y, a.z), mulFE(a.y, b.z));\n        // v = X2 * Z1 - X1 * Z2\n        var v = subFE(mulFE(b.x, a.z), mulFE(a.x, b.z));\n\n        if (isZero(v)) {\n            if (isZero(u)) {\n                return twiceEC(a); // a == b, so double\n            }\n            return getInfinity(a); // a = -b, so infinity\n        }\n\n        var x1 = a.x;\n        var y1 = a.y;\n\n        var v2 = sqrFE(v);\n        var v3 = mulFE(v2, v);\n        var x1v2 = mulFE(x1, v2);\n        var zu2 = mulFE(sqrFE(u), a.z);\n\n        // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\n        var x3 = mulFE(subFE(mulFE(subFE(zu2, shlFE(x1v2, 1)), b.z), v3), v);\n        // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\n        var y3 = addFE(mulFE(subFE(subFE(mulFE(mulFE(x1v2, THREE), u), mulFE(y1, v3)), mulFE(zu2, u)), b.z), mulFE(u, v3));\n        // z3 = v^3 * z1 * z2\n        var z3 = mulFE(mulFE(v3, a.z), b.z);\n\n        return newEC(a.curve, x3, y3, z3);\n    }\n\n    function twiceEC(b) {\n        if (isInfinity(b))\n            return b;\n        if (sig(b.y) === 0)\n            return getInfinity(b);\n\n        var x1 = b.x;\n        var y1 = b.y;\n\n        var y1z1 = mulFE(y1, b.z);\n        var y1sqz1 = mulFE(y1z1, y1);\n        var a = b.curve.a;\n\n        // w = 3 * x1^2 + a * z1^2\n        var w = mulFE(sqrFE(x1), THREE);\n        if (!isZero(a)) {\n            w = addFE(w, mulFE(sqrFE(b.z), a));\n        }\n\n        // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\n        var x3 = mulFE(shlFE(subFE(sqrFE(w), mulFE(shlFE(x1, 3), y1sqz1)), 1), y1z1);\n        // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\n        var y3 = subFE(mulFE(shlFE(subFE(mulFE(mulFE(w, THREE), x1), shlFE(y1sqz1, 1)), 2), y1sqz1), mulFE(sqrFE(w), w));\n        // z3 = 8 * (y1 * z1)^3\n        var z3 = shlFE(mulFE(sqrFE(y1z1), y1z1), 3);\n\n        return newEC(b.curve, x3, y3, z3);\n    }\n\n    // Simple NAF (Non-Adjacent Form) multiplication algorithm\n    function mulEC(a, k) {\n        if (isInfinity(a))\n            return a;\n        if (sig(k) === 0)\n            return getInfinity(a);\n\n        var e = k;\n        var h = mul(e, THREE);\n\n        var neg = negEC(a);\n        var R = a;\n\n        var i;\n        for (i = bitLength(h) - 2; i > 0; --i) {\n            R = twiceEC(R);\n\n            var hBit = testBit(h, i);\n            var eBit = testBit(e, i);\n\n            if (hBit !== eBit) {\n                R = addEC(R, hBit ? a : neg);\n            }\n        }\n\n        return R;\n    }\n\n    function mul2AndAddEC(a, k) {\n        var nbits = bitLength(k);\n        var R = a,\n                Q = getInfinity(a);\n\n        for (var i = 0; i < nbits - 1; i++) {\n            if (testBit(k, i) === 1)\n                Q = addEC(Q, R);\n\n            R = twiceEC(R);\n        }\n\n        if (testBit(k, nbits - 1) === 1)\n            Q = addEC(Q, R);\n\n        return Q;\n    }\n\n    // Compute a*j + x*k (simultaneous multiplication)\n    function mulTwoEC(a, j, x, k) {\n        var i;\n        if (bitLength(j) > bitLength(k))\n            i = bitLength(j) - 1;\n        else\n            i = bitLength(k) - 1;\n\n        var R = getInfinity(a);\n        var both = addEC(a, x);\n        while (i >= 0) {\n            R = twiceEC(R);\n            if (testBit(j, i)) {\n                if (testBit(k, i)) {\n                    R = addEC(R, both);\n                }\n                else {\n                    R = addEC(R, a);\n                }\n            }\n            else {\n                if (testBit(k, i)) {\n                    R = addEC(R, x);\n                }\n            }\n            --i;\n        }\n\n        return R;\n    }\n\n    // EC Curve\n    function newCurve(q, a, b) {\n        var curve = {};\n        curve.q = q;\n        curve.r = new Barrett(q);\n        curve.a = newFE(curve, a);\n        curve.b = newFE(curve, b);\n        curve.infinity = newEC(curve);\n        return curve;\n    }\n\n    /*\n     * Converion tools (hex, binary)\n     * \n     */\n\n    function atobi(d) {\n        var k = 8;\n        var a = new Uint8Array(d);\n        var r = nbi(a.length * 8 / DB);\n        r.t = 0;\n        r.s = 0;\n        var sh = 0;\n        for (var i = 0, n = a.length; i < n; i++) {\n            var x = a[i];\n            if (sh === 0)\n                r[r.t++] = x;\n            else if (sh + k > DB) {\n                r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\n                r[r.t++] = (x >> (DB - sh));\n            }\n            else\n                r[r.t - 1] |= x << sh;\n            sh += k;\n            if (sh >= DB)\n                sh -= DB;\n        }\n        return clamp(r);\n    }\n\n    function bitoa(s, bitLength) {\n        var k = 8;\n        var km = (1 << k) - 1, d, m = false, r = [], i = s.t;\n        var p = DB - (i * DB) % k;\n        if (i-- > 0) {\n            if (p < DB && (d = s[i] >> p) > 0) {\n                m = true;\n                r.push(d);\n            }\n            while (i >= 0) {\n                if (p < k) {\n                    d = (s[i] & ((1 << p) - 1)) << (k - p);\n                    d |= s[--i] >> (p += DB - k);\n                }\n                else {\n                    d = (s[i] >> (p -= k)) & km;\n                    if (p <= 0) {\n                        p += DB;\n                        --i;\n                    }\n                }\n                if (d > 0)\n                    m = true;\n                if (m)\n                    r.push(d);\n            }\n        }\n        var r8 = new Uint8Array(bitLength ? bitLength / 8 : r.length);\n        if (m)\n            r8.set(r.reverse());\n        return r8.buffer;\n    }\n\n\n    function htobi(s) {\n        if (typeof s === 'number' || s instanceof Number)\n            return nbv(s);\n        s = s.replace(/[^\\-A-Fa-f0-9]/g, '');\n        if (!s)\n            s = '0';\n        var k = 4;\n        var r = nbi(s.length / 7);\n        var i = s.length, mi = false, sh = 0;\n        while (--i >= 0) {\n            var c = s.charAt(i);\n            if (c === '-') {\n                mi = true;\n                continue;\n            }\n            var x = parseInt(s.charAt(i), 16);\n            mi = false;\n            if (sh === 0)\n                r[r.t++] = x;\n            else if (sh + k > DB) {\n                r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\n                r[r.t++] = (x >> (DB - sh));\n            }\n            else\n                r[r.t - 1] |= x << sh;\n            sh += k;\n            if (sh >= DB)\n                sh -= DB;\n        }\n        if (mi)\n            subTo(ZERO, r, r);\n        return clamp(r);\n    }\n\n    function bitoh(x) {\n        if (x.s < 0)\n            return \"-\" + bitoh(negTo(x, nbi(x.t)));\n        var k = 4;\n        var km = (1 << k) - 1, d, m = false, r = \"\", i = x.t;\n        var p = DB - (i * DB) % k;\n        if (i-- > 0) {\n            if (p < DB && (d = x[i] >> p) > 0) {\n                m = true;\n                r = d.toString(16);\n            }\n            while (i >= 0) {\n                if (p < k) {\n                    d = (x[i] & ((1 << p) - 1)) << (k - p);\n                    d |= x[--i] >> (p += DB - k);\n                }\n                else {\n                    d = (x[i] >> (p -= k)) & km;\n                    if (p <= 0) {\n                        p += DB;\n                        --i;\n                    }\n                }\n                if (d > 0)\n                    m = true;\n                if (m)\n                    r += d.toString(16);\n            }\n        }\n        return \"0x\" + (m ? r : \"0\");\n    }\n\n    // biginteger to big-endian integer bytearray\n    function bitoi(s) {\n        var i = s.t, r = [];\n        r[0] = s.s;\n        var p = DB - (i * DB) % 8, d, k = 0;\n        if (i-- > 0) {\n            if (p < DB && (d = s[i] >> p) !== (s.s & DM) >> p)\n                r[k++] = d | (s.s << (DB - p));\n            while (i >= 0) {\n                if (p < 8) {\n                    d = (s[i] & ((1 << p) - 1)) << (8 - p);\n                    d |= s[--i] >> (p += DB - 8);\n                }\n                else {\n                    d = (s[i] >> (p -= 8)) & 0xff;\n                    if (p <= 0) {\n                        p += DB;\n                        --i;\n                    }\n                }\n                if ((d & 0x80) !== 0)\n                    d |= -256;\n                if (k === 0 && (s.s & 0x80) !== (d & 0x80))\n                    ++k;\n                if (k > 0 || d !== s.s)\n                    r[k++] = d;\n            }\n        }\n        return new Uint8Array(r).buffer;\n    }\n\n    // big-endian integer bytearray to biginteger\n    function itobi(d) {\n        var k = 8, s = new Uint8Array(d),\n                r = nbi(s.length / 7);\n        r.t = 0;\n        r.s = 0;\n        var i = s.length, sh = 0;\n        while (--i >= 0) {\n            var x = s[i] & 0xff;\n            if (sh === 0)\n                r[r.t++] = x;\n            else if (sh + k > DB) {\n                r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\n                r[r.t++] = (x >> (DB - sh));\n            }\n            else\n                r[r.t - 1] |= x << sh;\n            sh += k;\n            if (sh >= DB)\n                sh -= DB;\n        }\n        if ((s[0] & 0x80) !== 0) {\n            r.s = -1;\n            if (sh > 0)\n                r[r.t - 1] |= ((1 << (DB - sh)) - 1) << sh;\n        }\n        return clamp(r);\n    }\n\n\n    // Swap bytes in buffer\n    function swap(s) {\n        var src = new Uint8Array(s),\n                dst = new Uint8Array(src.length);\n        for (var i = 0, n = src.length; i < n; i++)\n            dst[n - i - 1] = src[i];\n        return dst.buffer;\n    }\n\n    // Calculate hash of data\n    function hash(d) {\n        if (this.hash)\n            d = this.hash.digest(d);\n        // Swap hash for SignalCom\n        if (this.procreator === 'SC' ||\n                (this.procreator === 'VN' && this.hash.version === 2012))\n            d = swap(d);\n        return d;\n    }\n\n    // Check buffer\n    function buffer(d) {\n        if (d instanceof CryptoOperationData)\n            return d;\n        else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\n            return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\n                    d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\n        else\n            throw new DataError('CryptoOperationData or CryptoOperationDataView required');\n    }\n\n    // Check double buffer\n    function to2(d) {\n        var b = buffer(d);\n        if (b.byteLength % 2 > 0)\n            throw new DataError('Buffer length must be even');\n        var n = b.byteLength / 2;\n        return [atobi(new Uint8Array(b, 0, n)), atobi(new Uint8Array(b, n, n))];\n    }\n\n    function from2(x, y, bitLength) {\n        var a = bitoa(x, bitLength),\n                b = bitoa(y, bitLength),\n                d = new Uint8Array(a.byteLength + b.byteLength);\n        d.set(new Uint8Array(a));\n        d.set(new Uint8Array(b), a.byteLength);\n        return d.buffer;\n    }\n\n    function getSeed(length) {\n        var randomSource = new GostRandom();\n        if (randomSource.getRandomValues) {\n            var d = new Uint8Array(Math.ceil(length / 8));\n            randomSource.getRandomValues(d);\n            return d;\n        } else\n            throw new NotSupportedError('Random generator not found');\n    }\n\n    /**\n     * Algorithm name GOST R 34.10<br><br>\n     * \n     * The sign method returns sign data generated with the supplied privateKey.<br>\n     * \n     * @memberOf GostSign\n     * @method sign\n     * @instance\n     * @param {(CryptoOperationData|TypedArray)} privateKey Private key\n     * @param {(CryptoOperationData|TypedArray)} data Data\n     * @returns {CryptoOperationData} Signature\n     */\n    function sign(privateKey, data)\n    {\n\n        // Stage 1\n        var b = buffer(data);\n        var alpha = atobi(hash.call(this, b));\n\n        var q = this.q;\n        var x = mod(atobi(buffer(privateKey)), q);\n\n        // Stage 2\n        var e = mod(alpha, q);\n        if (isZero(e))\n            e = ONE;\n\n        var s = ZERO;\n        while (isZero(s)) {\n            var r = ZERO;\n            while (isZero(r)) {\n\n                // Stage 3\n                var k = mod(atobi(this.ukm ||\n                        getSeed(this.bitLength)), q); // pseudo random 0 < k < q\n                // Stage 4\n                if (this.curve) {\n                    // Gost R 34.10-2001 || Gost R 34.10-2012 \n                    var P = this.P;\n                    var C = mulEC(P, k);\n                    r = mod(getX(C), q);\n                } else {\n                    // Gost R 34.10-94\n                    var p = this.p, a = this.a;\n                    r = mod(expMod(a, k, p), q);\n                }\n            }\n            // Stage 5\n            s = mod(add(mul(r, x), mul(k, e)), q);\n        }\n        // Stage 6\n        // console.log('s', bitoh(s));\n        // console.log('r', bitoh(r));\n        var zetta;\n        // Integer structure for SignalCom algorithm\n        if (this.procreator === 'SC') {\n            zetta = {\n                r: bitoh(r),\n                s: bitoh(s)\n            };\n        } else {\n            zetta = from2(r, s, this.bitLength);\n            // Swap bytes for CryptoPro algorithm\n            if (this.procreator === 'CP' || this.procreator === 'VN')\n                zetta = swap(zetta);\n        }\n        return zetta;\n    }\n\n    /**\n     * Algorithm name GOST R 34.10<br><br>\n     * \n     * The verify method returns signature verification for the supplied publicKey.<br>\n     * \n     * @memberOf GostSign\n     * @method sign\n     * @instance\n     * @param {(CryptoOperationData|TypedArray)} publicKey Public key\n     * @param {(CryptoOperationData|TypedArray)} signature Signature\n     * @param {(CryptoOperationData|TypedArray)} data Data\n     * @returns {boolean} Signature verified = true\n     */\n    function verify(publicKey, signature, data)\n    {\n\n        // Stage 1\n        var q = this.q;\n        var r, s;\n        // Ready int for SignalCom algorithm\n        if (this.procreator === 'SC') {\n            r = htobi(signature.r);\n            s = htobi(signature.s);\n        } else {\n            if (this.procreator === 'CP' || this.procreator === 'VN')\n                signature = swap(signature);\n            var zetta = to2(signature);\n            // Swap bytes for CryptoPro algorithm\n            s = zetta[1]; //  first 32 octets contain the big-endian representation of s \n            r = zetta[0]; //  and second 32 octets contain the big-endian representation of r\n        }\n        if (compare(r, q) >= 0 || compare(s, q) >= 0)\n            return false;\n        // Stage 2\n        var b = buffer(data);\n        var alpha = atobi(hash.call(this, b));\n        // Stage 3\n        var e = mod(alpha, q);\n        if (isZero(e) === 0)\n            e = ONE;\n        // Stage 4\n        var v = invMod(e, q);\n        // Stage 5\n        var z1 = mod(mul(s, v), q);\n        var z2 = sub(q, mod(mul(r, v), q));\n        // Stage 6\n        if (this.curve) {\n            // Gost R 34.10-2001 || Gost R 34.10-2012 \n            var k2 = to2(publicKey),\n                    curve = this.curve,\n                    P = this.P,\n                    x = newFE(curve, k2[0]), // first 32 octets contain the little-endian representation of x\n                    y = newFE(curve, k2[1]), // and second 32 octets contain the little-endian representation of y.\n                    Q = new newEC(curve, x, y); // This corresponds to the binary representation of (<y>256||<x>256) \n            var C = mulTwoEC(P, z1, Q, z2);\n            var R = mod(getX(C), q);\n        } else {\n            // Gost R 34.10-94\n            var p = this.p, a = this.a;\n            var y = atobi(publicKey);\n            var R = mod(mod(mul(expMod(a, z1, p), expMod(y, z2, p)), p), q);\n        }\n        // Stage 7\n        return (compare(R, r) === 0);\n    }\n\n    /**\n     * Algorithm name GOST R 34.10<br><br>\n     * \n     * The generateKey method returns a new generated key pair using the specified \n     * AlgorithmIdentifier.\n     * \n     * @memberOf GostSign\n     * @method generateKey\n     * @instance\n     * @returns {Object} Object with two CryptoOperationData members: privateKey and publicKey\n     */\n    function generateKey()\n    {\n        var curve = this.curve;\n        if (curve) {\n\n            var Q = curve.infinity;\n            while (isInfinity(Q)) {\n\n                // Generate random private key\n                var d = ZERO;\n                if (this.ukm) {\n                    d = atobi(this.ukm);\n                } else {\n                    while (isZero(d))\n                        d = mod(atobi(getSeed(this.bitLength)), this.q); // 0 < d < q\n                }\n\n                // Calculate public key\n                Q = mulEC(this.P, d);\n                var x = getX(Q), y = getY(Q);\n                // console.log('d', bitoh(d));\n                // console.log('x', bitoh(x));\n                // console.log('y', bitoh(y));\n            }\n\n            // Return result\n            return {\n                privateKey: bitoa(d, this.bitLength),\n                publicKey: from2(x, y, this.bitLength) // This corresponds to the binary representation of (<y>256||<x>256)\n            };\n\n        } else\n            throw new NotSupportedError('Key generation for GOST R 34.10-94 not supported');\n    }\n\n    /**\n     * Algorithm name GOST R 34.10 mode MASK<br><br>\n     * \n     * The generateMaskKey method returns a new generated key mask using for wrapping.\n     * \n     * @memberOf GostSign\n     * @method generateMaskKey\n     * @instance\n     * @returns {Object} Object with two CryptoOperationData members: privateKey and publicKey\n     */\n    function generateMaskKey()\n    {\n        var curve = this.curve;\n        if (curve) {\n            // Generate random private key\n            var d = ZERO;\n            while (isZero(d))\n                d = mod(atobi(getSeed(this.bitLength)), this.q); // 0 < d < q\n\n            // Return result\n            return bitoa(d, this.bitLength);\n        } else\n            throw new NotSupportedError('Key generation for GOST R 34.10-94 not supported');\n    }\n\n    /**\n     * Algorithm name GOST R 34.10<br><br>\n     * \n     * Unwrap private key from private key and ukm (mask)\n     * \n     * @memberOf GostSign\n     * @method unwrap\n     * @instance\n     * @param {(CryptoOperationData|TypedArray)} baseKey Unwrapping key\n     * @param {(CryptoOperationData|TypedArray)} data Wrapped key\n     * @returns {Object} CryptoOperationData unwrapped privateKey\n     */\n    function unwrapKey(baseKey, data)\n    {\n        var curve = this.curve;\n        if (curve) {\n            var q = this.q;\n            var x = mod(atobi(buffer(data)), q);\n            var y = mod(atobi(buffer(baseKey)), q);\n            var z = this.procreator === 'VN' ? mod(mul(x, y), q) : mod(mul(x, invMod(y, q)), q);\n            return bitoa(z);\n        } else\n            throw new NotSupportedError('Key wrapping GOST R 34.10-94 not supported');\n    }\n\n    /**\n     * Algorithm name GOST R 34.10<br><br>\n     * \n     * Wrap private key with private key and ukm (mask)\n     * \n     * @memberOf GostSign\n     * @method unwrap\n     * @instance\n     * @param {(CryptoOperationData|TypedArray)} baseKey Wrapping key\n     * @param {(CryptoOperationData|TypedArray)} data Key\n     * @returns {Object} CryptoOperationData unwrapped privateKey\n     */\n    function wrapKey(baseKey, data)\n    {\n        var curve = this.curve;\n        if (curve) {\n            var q = this.q;\n            var x = mod(atobi(buffer(data)), q);\n            var y = mod(atobi(buffer(baseKey)), q);\n            var z = this.procreator === 'VN' ? mod(mul(x, invMod(y, q)), q) : mod(mul(x, y), q);\n            return bitoa(z);\n        } else\n            throw new NotSupportedError('Key wrapping GOST R 34.10-94 not supported');\n    }\n\n    /**\n     * Algorithm name GOST R 34.10<br><br>\n     * \n     * @memberOf GostSign\n     * @method derive\n     * @instance\n     * @private\n     * @param {CryptoOperationData} baseKey Key for deriviation\n     * @returns {CryptoOperationData}\n     */\n    function derive(baseKey)\n    {\n\n        var k, ukm = atobi(this.ukm);\n        var q = this.q;\n        var x = mod(atobi(buffer(baseKey)), q);\n\n        if (this.curve) {\n            // 1) Let K(x,y,UKM) = ((UKM*x)(mod q)) . (y.P) (512 bit), where      \n            // x - sender’s private key (256 bit)      \n            // x.P - sender’s public key (512 bit)      \n            // y - recipient’s private key (256 bit)      \n            // y.P - recipient’s public key (512 bit)      \n            // UKM - non-zero integer, produced as in step 2 p. 6.1 [GOSTR341001]      \n            // P - base point on the elliptic curve (two 256-bit coordinates)      \n            // UKM*x - x multiplied by UKM as integers      \n            // x.P - a multiple point   \n            var K = mulEC(this.peer_Q, mod(mul(ukm, x), q));\n            k = from2(getX(K), getY(K), // This corresponds to the binary representation of (<y>256||<x>256)\n                    this.bitLength);\n        } else {\n            // 1) Let K(x,y) = a^(x*y) (mod p), where      \n            // x - sender’s private key, a^x - sender’s public key      \n            // y - recipient’s private key, a^y - recipient’s public key      \n            // a, p - parameters\n            var p = this.p, a = this.a;\n            k = bitoa(expMod(this.peer_y, x, p));\n        }\n        // 2) Calculate a 256-bit hash of K(x,y,UKM):      \n        // KEK(x,y,UKM) = gostSign (K(x,y,UKM)\n        return hash.call(this, k);\n    }\n\n    /**\n     * Algorithm name GOST R 34.10<br><br>\n     * \n     * The deriveBits method returns length bits on baseKey.\n     * \n     * @memberOf GostSign\n     * @method deriveBits\n     * @instance\n     * @param {(CryptoOperationData|TypedArray)} baseKey Key for deriviation\n     * @param {number} length output bit-length\n     * @returns {CryptoOperationData} result\n     */\n    function deriveBits(baseKey, length)\n    {\n        if (length < 8 || length > this.bitLength || length % 8 > 0)\n            throw new DataError('Length must be no more than ' + this.bitLength + ' bits and multiple of 8');\n        var n = length / 8,\n                b = derive.call(this, baseKey),\n                r = new Uint8Array(n);\n\n        r.set(new Uint8Array(b, 0, n));\n        return r.buffer;\n    }\n\n    /**\n     * Algorithm name GOST R 34.10<br><br>\n     * \n     * The deriveKey method returns 256 bit Key encryption key on baseKey.\n     * \n     * This algorithm creates a key encryption key (KEK) using 64 bit UKM,   \n     * the sender’s private key, and the recipient’s public key (or the   \n     * reverse of the latter pair\n     * \n     * @memberOf GostSign\n     * @method deriveKey\n     * @instance\n     * @param {(CryptoOperationData|TypedArray)} baseKey Key for deriviation\n     * @returns {CryptoOperationData} result\n     */\n    function deriveKey(baseKey)\n    {\n        var b = derive.call(this, baseKey),\n                r = new Uint8Array(32);\n\n        r.set(new Uint8Array(b, 0, 32));\n        return r.buffer;\n    }\n\n\n    /**\n     * Gost R 34.10 universal object<br><br>\n     * \n     * References: {@link http://tools.ietf.org/html/rfc6986} and {@link http://tools.ietf.org/html/rfc5831}<br><br>\n     * \n     * Normalized algorithm identifier common parameters:\n     * \n     *  <ul>\n     *      <li><b>name</b> Algorithm name 'GOST R 34.10'</li>\n     *      <li><b>version</b> Algorithm version\n     *          <ul>\n     *              <li><b>1994</b> - Old-style GOST R 34.10-94 ExpMod algorithm with GOST R 34.11-94 hash</li>\n     *              <li><b>2001</b> - GOST R 34.10-2001 Eliptic curve algorithm with old GOST R 34.11-94 hash</li>\n     *              <li><b>2012</b> - GOST R 34.10-2012 Eliptic curve algorithm with GOST R 34.11-12 hash, default mode</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>length</b> Length of hash and signature. Key length == hash length for EC algorithms and 2 * hash length for ExpMod algorithm\n     *          <ul>\n     *              <li><b>GOST R 34.10-256</b> - 256 bits digest, default mode</li>\n     *              <li><b>GOST R 34.10-512</b> - 512 bits digest only for GOST R 34.11-2012 hash</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>mode</b> Algorithm mode\n     *          <ul>\n     *              <li><b>SIGN</b> Digital signature mode (default)</li>\n     *              <li><b>DH</b> Diffie-Hellman key generation and key agreement mode</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>sBox</b> Paramset sBox for GOST 34.11-94. Used only if version = 1994 or 2001</li>\n     *  </ul>\n     *  \n     * Supported algorithms, modes and parameters:\n     * \n     *  <ul>\n     *      <li>Sign/Verify mode (SIGN)</li>\n     *      <li>DeriveKey/DeriveBits mode (DH)\n     *          <ul>\n     *              <li>{@link CryptoOperationData} <b>ukm</b> User key material. Default - random generated value</li>\n     *              <li>{@link CryptoOperationData} <b>public</b> The peer's EC public key data</li>\n     *          </ul>\n     *      </li>\n     *      <li>GenerateKey mode (SIGN and DH) version = 1994\n     *          <ul>\n     *              <li><b>namedParam</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\n     *          </ul>\n     *          Additional parameters, if namedParam not specified\n     *          <ul>\n     *              <li><b>modulusLength</b> Bit length of p (512 or 1024 bits). Default = 1024</li>\n     *              <li><b>p</b> {@link CryptoOperationData} Modulus, prime number, 2^(t-1)<p<2^t</li>\n     *              <li><b>q</b> {@link CryptoOperationData} Order of cyclic group, prime number, 2^254<q<2^256, q is a factor of p-1</li>\n     *              <li><b>a</b> {@link CryptoOperationData} Generator, integer, 1<a<p-1, at that aq (mod p) = 1</li>\n     *          </ul>\n     *      </li>\n     *      <li>GenerateKey mode (SIGN and DH) version = 2001 or 2012\n     *          <ul>\n     *              <li><b>namedCurve</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\n     *          </ul>\n     *          Additional EC parameters, if namedCurve not specified\n     *          <ul>\n     *              <li><b>p</b> {@link CryptoOperationData} Prime number - elliptic curve modulus</li>\n     *              <li><b>a</b> {@link CryptoOperationData} Coefficients a of the elliptic curve E</li>\n     *              <li><b>b</b> {@link CryptoOperationData} Coefficients b of the elliptic curve E</li>\n     *              <li><b>q</b> {@link CryptoOperationData} Prime number - order of cyclic group</li>\n     *              <li><b>x</b> {@link CryptoOperationData} Base point p x-coordinate</li>\n     *              <li><b>y</b> {@link CryptoOperationData} Base point p y-coordinate</li>\n     *          </ul>\n     *      </li>\n     *  </ul>\n     *  \n     * @class GostSign\n     * @param {AlgorithmIndentifier} algorithm\n     */\n    function GostSign(algorithm)\n    {\n        algorithm = algorithm || {};\n        this.name = (algorithm.name || 'GOST R 34.10') + '-' +\n                ((algorithm.version || 2012) % 100) + '-' + (algorithm.length || 256) +\n                (((algorithm.mode || 'SIGN') !== 'SIGN') ? '-' + algorithm.mode : '') +\n                (typeof algorithm.namedParam === 'string' ? '/' + algorithm.namedParam : '') +\n                (typeof algorithm.namedCurve === 'string' ? '/' + algorithm.namedCurve : '') +\n                (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\n\n        var version = algorithm.version || 2012;\n\n        // Functions\n        switch (algorithm.mode || 'SIGN') {\n            case 'SIGN':\n                this.sign = sign;\n                this.verify = verify;\n                this.generateKey = generateKey;\n                break;\n            case 'DH':\n                this.deriveBits = deriveBits;\n                this.deriveKey = deriveKey;\n                this.generateKey = generateKey;\n                break;\n            case 'MASK':\n                this.wrapKey = wrapKey;\n                this.unwrapKey = unwrapKey;\n                this.generateKey = generateMaskKey;\n                break;\n        }\n\n        // Define parameters\n        if (version === 1994) {\n            // Named or parameters algorithm\n            var param = algorithm.param;\n            if (!param)\n                param = GostParams[this.namedParam = (algorithm.namedParam || 'S-A').toUpperCase()];\n            this.modulusLength = algorithm.modulusLength || param.modulusLength || 1024;\n            this.p = htobi(param.p);\n            this.q = htobi(param.q);\n            this.a = htobi(param.a);\n            // Public key for derive\n            if (algorithm['public'])\n                this.peer_y = atobi(algorithm['public']);\n        } else {\n            // Named or parameters algorithm\n            var param = algorithm.curve;\n            if (!param)\n                param = ECGostParams[this.namedCurve = (algorithm.namedCurve || 'S-256-A').toUpperCase()];\n            var curve = this.curve = newCurve(htobi(param.p), htobi(param.a), htobi(param.b));\n            this.P = newEC(curve,\n                    newFE(curve, htobi(param.x)),\n                    newFE(curve, htobi(param.y)));\n            this.q = htobi(param.q);\n            // Public key for derive\n            if (algorithm['public']) {\n                var k2 = to2(algorithm['public']);\n                this.peer_Q = new newEC(this.curve, // This corresponds to the binary representation of (<y>256||<x>256)\n                        newFE(this.curve, k2[0]), // first 32 octets contain the little-endian representation of x\n                        newFE(this.curve, k2[1])); // and second 32 octets contain the little-endian representation of y.\n            }\n        }\n\n        // Check bit length\n        var hashLen, keyLen;\n        if (this.curve) {\n            keyLen = algorithm.length || bitLength(this.q);\n            if (keyLen > 508 && keyLen <= 512)\n                keyLen = 512;\n            else if (keyLen > 254 && keyLen <= 256)\n                keyLen = 256;\n            else\n                throw new NotSupportedError('Support keys only 256 or 512 bits length');\n            hashLen = keyLen;\n        } else {\n            keyLen = algorithm.modulusLength || bitLength(this.p);\n            if (keyLen > 1016 && keyLen <= 1024)\n                keyLen = 1024;\n            else if (keyLen > 508 && keyLen <= 512)\n                keyLen = 512;\n            else\n                throw new NotSupportedError('Support keys only 512 or 1024 bits length');\n            hashLen = 256;\n        }\n        this.bitLength = hashLen;\n        this.keyLength = keyLen;\n\n        // Algorithm proceator for result conversion\n        this.procreator = algorithm.procreator;\n\n        // Hash function definition\n        var hash = algorithm.hash;\n        if (hash) {\n            if (typeof hash === 'string' || hash instanceof String)\n                hash = {name: hash};\n            if (algorithm.version === 1994 || algorithm.version === 2001) {\n                hash.version = 1994;\n                hash.length = 256;\n                hash.sBox = algorithm.sBox || hash.sBox;\n            } else {\n                hash.version = 2012;\n                hash.length = hashLen;\n            }\n            hash.procreator = hash.procreator || algorithm.procreator;\n\n            if (!GostDigest)\n                throw new NotSupportedError('Object GostDigest not found');\n\n            this.hash = new GostDigest(hash);\n        }\n\n        // Pregenerated seed for key exchange algorithms\n        if (algorithm.ukm) // Now don't check size \n            this.ukm = algorithm.ukm;\n\n    }\n\nmodule.exports = GostSign;\n\n","const gostCrypto = require('./gostCrypto');\nconst gostEngine = require('./gostEngine');\n\nrequire('./gostSecurity');\nrequire('./gostCoding');\nrequire('./gostASN1');\nrequire('./gostCMS');\nrequire('./gostCert');\nrequire('./gostCipher');\nrequire('./gostDigest');\nrequire('./gostKeys');\nrequire('./gostRandom');\nrequire('./gostSign');\n\nmodule.exports = {\n    gostCrypto,\n    gostEngine,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","import * as CryptoJS from \"crypto-js\";\n\nexport class Encryption implements EncryptionInterface {\n  private password: string;\n  private keyId: string;\n\n  constructor(hash: string, keyId: string) {\n    this.password = hash;\n    this.keyId = keyId;\n  }\n\n  getEncryptedString(data: string): string {\n    if (!this.password) {\n      return data;\n    } else {\n      return CryptoJS.AES.encrypt(data, this.password).toString();\n    }\n  }\n\n  decryptSecretString(secret: string) {\n    try {\n      const decryptedSecret = CryptoJS.AES.decrypt(\n        secret,\n        this.password\n      ).toString(CryptoJS.enc.Utf8);\n\n      if (!decryptedSecret) {\n        return null;\n      }\n\n      if (decryptedSecret.length < 8) {\n        return null;\n      }\n\n      if (\n        !/^[a-z2-7]+=*$/i.test(decryptedSecret) &&\n        !/^[0-9a-f]+$/i.test(decryptedSecret) &&\n        !/^blz-/.test(decryptedSecret) &&\n        !/^bliz-/.test(decryptedSecret) &&\n        !/^stm-/.test(decryptedSecret)\n      ) {\n        return null;\n      }\n\n      return decryptedSecret;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  decryptEncSecret(entry: OTPEntryInterface) {\n    try {\n      if (!entry.encData) {\n        return null;\n      }\n\n      const decryptedData = CryptoJS.AES.decrypt(\n        entry.encData,\n        this.password\n      ).toString(CryptoJS.enc.Utf8);\n\n      if (!decryptedData) {\n        return null;\n      }\n\n      return JSON.parse(decryptedData);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  getEncryptionStatus(): boolean {\n    return this.password ? true : false;\n  }\n\n  updateEncryptionPassword(password: string) {\n    this.password = password;\n  }\n\n  setEncryptionKeyId(id: string): void {\n    this.keyId = id;\n  }\n\n  getEncryptionKeyId(): string {\n    return this.keyId;\n  }\n}\n","import { OTPType, OTPAlgorithm, OTPUtil } from \"./otp\";\nimport * as CryptoJS from \"crypto-js\";\nimport {\n  gostEngine as GostEngine,\n  GostDigest,\n  AlgorithmIndentifier,\n} from \"node-gost-crypto\";\n\n// Originally based on the JavaScript implementation as provided by Russell\n// Sayers on his Tin Isles blog:\n// http://blog.tinisles.com/2011/10/google-authenticator-one-time-password-algorithm-in-javascript/\n\n// Rewrite with TypeScript by Sneezry https://github.com/Sneezry\n\nexport class KeyUtilities {\n  private static dec2hex(s: number): string {\n    return (s < 15.5 ? \"0\" : \"\") + Math.round(s).toString(16);\n  }\n\n  private static hex2dec(s: string): number {\n    return Number(`0x${s}`);\n  }\n\n  private static hex2str(hex: string) {\n    let str = \"\";\n    for (let i = 0; i < hex.length; i += 2) {\n      str += String.fromCharCode(this.hex2dec(hex.substr(i, 2)));\n    }\n    return str;\n  }\n\n  private static leftpad(str: string, len: number, pad: string): string {\n    if (len + 1 >= str.length) {\n      str = new Array(len + 1 - str.length).join(pad) + str;\n    }\n    return str;\n  }\n\n  private static base32tohex(base32: string): string {\n    const base32chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n    let bits = \"\";\n    let hex = \"\";\n    let padding = 0;\n\n    for (let i = 0; i < base32.length; i++) {\n      if (base32.charAt(i) === \"=\") {\n        bits += \"00000\";\n        padding++;\n      } else {\n        const val = base32chars.indexOf(base32.charAt(i).toUpperCase());\n        bits += this.leftpad(val.toString(2), 5, \"0\");\n      }\n    }\n\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + Number(`0b${chunk}`).toString(16);\n    }\n\n    // if (hex.length % 2 && hex[hex.length - 1] === '0') {\n    //   hex = hex.substr(0, hex.length - 1);\n    // }\n    switch (padding) {\n      case 0:\n        break;\n      case 6:\n        hex = hex.substr(0, hex.length - 8);\n        break;\n      case 4:\n        hex = hex.substr(0, hex.length - 6);\n        break;\n      case 3:\n        hex = hex.substr(0, hex.length - 4);\n        break;\n      case 1:\n        hex = hex.substr(0, hex.length - 2);\n        break;\n      default:\n        throw new Error(\"Invalid Base32 string\");\n    }\n\n    return hex;\n  }\n\n  private static base26(num: number) {\n    const chars = \"23456789BCDFGHJKMNPQRTVWXY\";\n    let output = \"\";\n    const len = 5;\n    for (let i = 0; i < len; i++) {\n      output += chars[num % chars.length];\n      num = Math.floor(num / chars.length);\n    }\n    if (output.length < len) {\n      output = new Array(len - output.length + 1).join(chars[0]) + output;\n    }\n    return output;\n  }\n\n  private static cryptoJsWordArrayToUint8Array(\n    wordArray: CryptoJS.lib.WordArray\n  ) {\n    const l = wordArray.sigBytes;\n    const words = wordArray.words;\n    const result = new Uint8Array(l);\n    let i = 0 /*dst*/,\n      j = 0; /*src*/\n    while (i < l) {\n      // here i is a multiple of 4\n      const w = words[j++];\n      result[i++] = (w & 0xff000000) >>> 24;\n      if (i === l) break;\n      result[i++] = (w & 0x00ff0000) >>> 16;\n      if (i === l) break;\n      result[i++] = (w & 0x0000ff00) >>> 8;\n      if (i === l) break;\n      result[i++] = w & 0x000000ff;\n    }\n    return result;\n  }\n\n  static generate(\n    type: OTPType,\n    secret: string,\n    counter: number,\n    period: number,\n    len?: number,\n    algorithm?: OTPAlgorithm,\n    clockOffset?: number\n  ) {\n    secret = secret.replace(/\\s/g, \"\");\n    if (!len) {\n      len = 6;\n    }\n    let b26 = false;\n    let key: string;\n    switch (type) {\n      case OTPType.totp:\n      case OTPType.hotp:\n        key = this.base32tohex(secret);\n        break;\n      case OTPType.hex:\n      case OTPType.hhex:\n        key = secret;\n        break;\n      case OTPType.battle:\n        key = this.base32tohex(secret);\n        len = 8;\n        break;\n      case OTPType.steam:\n        key = this.base32tohex(secret);\n        len = 10;\n        b26 = true;\n        break;\n      default:\n        key = this.base32tohex(secret);\n    }\n\n    if (!key) {\n      throw new Error(\"Invalid secret key\");\n    }\n\n    if (type !== OTPType.hotp && type !== OTPType.hhex) {\n      let epoch = Math.round(new Date().getTime() / 1000.0);\n      if (clockOffset) {\n        epoch = epoch + Number(clockOffset);\n      }\n      counter = Math.floor(epoch / period);\n    }\n\n    const time = this.leftpad(this.dec2hex(counter), 16, \"0\");\n\n    if (key.length % 2 === 1) {\n      if (key.substr(-1) === \"0\") {\n        key = key.substr(0, key.length - 1);\n      } else {\n        key += \"0\";\n      }\n    }\n\n    let alg: AlgorithmIndentifier;\n    let gostCipher: GostDigest;\n\n    let hmacObj: CryptoJS.lib.WordArray;\n    switch (algorithm) {\n      case OTPAlgorithm.SHA256:\n        hmacObj = CryptoJS.HmacSHA256(\n          CryptoJS.enc.Hex.parse(time),\n          CryptoJS.enc.Hex.parse(key)\n        );\n        break;\n      case OTPAlgorithm.SHA512:\n        hmacObj = CryptoJS.HmacSHA512(\n          CryptoJS.enc.Hex.parse(time),\n          CryptoJS.enc.Hex.parse(key)\n        );\n        break;\n      case OTPAlgorithm.GOST3411_2012_256:\n      case OTPAlgorithm.GOST3411_2012_512:\n        alg = {\n          mode: \"HMAC\",\n          name: \"GOST R 34.11\",\n          version: 2012,\n          length: OTPUtil.getOTPAlgorithmSpec(algorithm).length,\n        };\n        gostCipher = GostEngine.getGostDigest(alg);\n        hmacObj = CryptoJS.lib.WordArray.create(\n          gostCipher.sign(\n            this.cryptoJsWordArrayToUint8Array(CryptoJS.enc.Hex.parse(key)),\n            this.cryptoJsWordArrayToUint8Array(CryptoJS.enc.Hex.parse(time))\n          )\n        );\n        break;\n      default:\n        hmacObj = CryptoJS.HmacSHA1(\n          CryptoJS.enc.Hex.parse(time),\n          CryptoJS.enc.Hex.parse(key)\n        );\n        break;\n    }\n\n    const hmac = CryptoJS.enc.Hex.stringify(hmacObj);\n\n    const offset = this.hex2dec(hmac.substring(hmac.length - 1));\n\n    let otp =\n      (this.hex2dec(hmac.substr(offset * 2, 8)) & this.hex2dec(\"7fffffff\")) +\n      \"\";\n\n    if (b26) {\n      return this.base26(Number(otp));\n    }\n\n    if (otp.length < len) {\n      otp = new Array(len - otp.length + 1).join(\"0\") + otp;\n    }\n    return otp.substr(otp.length - len, len).toString();\n  }\n}\n","export enum StorageLocation {\n  Sync = \"sync\",\n  Local = \"local\",\n}\n\ninterface UserSettingsData {\n  // local settings\n  driveEncrypted?: boolean;\n  driveFolder?: string;\n  driveRefreshToken?: string;\n  driveRevoked?: boolean;\n  driveToken?: string;\n  dropboxEncrypted?: boolean;\n  dropboxRevoked?: boolean;\n  dropboxToken?: string;\n  lastRemindingBackupTime?: number;\n  offset?: number;\n  oneDriveBusiness?: boolean;\n  oneDriveEncrypted?: boolean;\n  oneDriveRevoked?: boolean;\n  oneDriveRefreshToken?: string;\n  oneDriveToken?: string;\n  storageLocation?: StorageLocation;\n\n  // syncable settings\n  advisorIgnoreList?: string[];\n  autofill?: boolean;\n  autolock?: number;\n  enableContextMenu?: boolean;\n  encodedPhrase?: string;\n  smartFilter?: boolean;\n  theme?: string;\n  zoom?: number;\n}\n\n// Maybe we can have a better way to define this\nconst LocalUserSettingsDataKeys = [\n  \"driveEncrypted\",\n  \"driveFolder\",\n  \"driveRefreshToken\",\n  \"driveRevoked\",\n  \"driveToken\",\n  \"dropboxEncrypted\",\n  \"dropboxRevoked\",\n  \"dropboxToken\",\n  \"lastRemindingBackupTime\",\n  \"offset\",\n  \"oneDriveBusiness\",\n  \"oneDriveEncrypted\",\n  \"oneDriveRevoked\",\n  \"oneDriveRefreshToken\",\n  \"oneDriveToken\",\n  \"storageLocation\",\n];\n\nexport class UserSettings {\n  static items: UserSettingsData = {};\n\n  static async updateItems() {\n    UserSettings.items = await UserSettings.getAllItems();\n  }\n\n  static async convertFromLocalStorage(\n    data: Storage,\n    location: StorageLocation\n  ) {\n    const settings: UserSettingsData = {};\n\n    for (const key in data) {\n      if (isBooleanOption(key)) {\n        settings[key] = data[key] === \"true\";\n      } else if (isNumberOption(key)) {\n        settings[key] = Number(data[key]);\n      } else if (isJSONOption(key)) {\n        settings[key] = JSON.parse(data[key]);\n      } else {\n        settings[key as keyof UserSettingsData] = data[key];\n      }\n    }\n\n    settings.storageLocation = location;\n    UserSettings.items = settings;\n    await UserSettings.commitItems();\n  }\n\n  static async commitItems() {\n    const storageLocation =\n      UserSettings.items.storageLocation || StorageLocation.Local;\n\n    if (storageLocation === StorageLocation.Local) {\n      await chrome.storage[storageLocation].set({\n        // JSON.parse(JSON.stringify()) strips functions (e.g. getItem, setItem, ...) which may have been added to the object.\n        // Without this, a crash may occur as chrome.storage throws an error when trying to serialize a function.\n        UserSettings: JSON.parse(JSON.stringify(UserSettings.items)),\n      });\n    } else {\n      const { syncableSettings, localSettings } = UserSettings.splitSettings(\n        UserSettings.items\n      );\n\n      await Promise.all([\n        chrome.storage[StorageLocation.Local].set({\n          UserSettings: JSON.parse(JSON.stringify(localSettings)),\n        }),\n        chrome.storage[StorageLocation.Sync].set({\n          UserSettings: JSON.parse(JSON.stringify(syncableSettings)),\n        }),\n      ]);\n    }\n\n    await UserSettings.updateItems();\n  }\n\n  static async removeItem(key: keyof UserSettingsData) {\n    const localSettings = await UserSettings.getStorageData(\n      StorageLocation.Local\n    );\n    const storageLocation =\n      localSettings.storageLocation || StorageLocation.Local;\n\n    const location = LocalUserSettingsDataKeys.includes(key)\n      ? StorageLocation.Local\n      : storageLocation;\n    const storageData: UserSettingsData =\n      (await chrome.storage[location].get(\"UserSettings\"))?.UserSettings || {};\n    delete storageData[key];\n\n    UserSettings.items = storageData;\n\n    await UserSettings.commitItems();\n  }\n\n  private static async getStorageData(location: StorageLocation) {\n    const storageData: UserSettingsData =\n      (await chrome.storage[location].get(\"UserSettings\"))?.UserSettings || {};\n\n    return storageData;\n  }\n\n  private static splitSettings(storageData: UserSettingsData) {\n    const syncableSettings: UserSettingsData = Object.assign({}, storageData);\n    const localSettings: UserSettingsData = Object.assign({}, storageData);\n\n    let key: keyof UserSettingsData;\n    for (key in storageData) {\n      if (LocalUserSettingsDataKeys.includes(key)) {\n        delete syncableSettings[key];\n      } else {\n        delete localSettings[key];\n      }\n    }\n\n    return {\n      syncableSettings,\n      localSettings,\n    };\n  }\n\n  private static async getAllItems() {\n    const localSettings = await UserSettings.getStorageData(\n      StorageLocation.Local\n    );\n    const storageLocation =\n      localSettings.storageLocation || StorageLocation.Local;\n\n    if (storageLocation === StorageLocation.Local) {\n      return localSettings;\n    }\n\n    const syncableSettings = await UserSettings.getStorageData(\n      StorageLocation.Sync\n    );\n    return { ...syncableSettings, ...localSettings };\n  }\n}\n\ntype BooleanOption =\n  | \"autofill\"\n  | \"driveEncrypted\"\n  | \"driveRevoked\"\n  | \"dropboxEncrypted\"\n  | \"dropboxRevoked\"\n  | \"enableContextMenu\"\n  | \"oneDriveBusiness\"\n  | \"oneDriveEncrypted\"\n  | \"oneDriveRevoked\"\n  | \"smartFilter\";\n\ntype NumberOption = \"autolock\" | \"lastRemindingBackupTime\" | \"offset\" | \"zoom\";\n\ntype JSONOption = \"advisorIgnoreList\";\n\nfunction isBooleanOption(key: string): key is BooleanOption {\n  return [\n    \"autofill\",\n    \"driveEncrypted\",\n    \"driveRevoked\",\n    \"dropboxEncrypted\",\n    \"dropboxRevoked\",\n    \"enableContextMenu\",\n    \"oneDriveBusiness\",\n    \"oneDriveEncrypted\",\n    \"oneDriveRevoked\",\n    \"smartFilter\",\n  ].includes(key);\n}\n\nfunction isNumberOption(key: string): key is NumberOption {\n  return [\"autolock\", \"lastRemindingBackupTime\", \"offset\", \"zoom\"].includes(\n    key\n  );\n}\n\nfunction isJSONOption(key: string): key is JSONOption {\n  return [\"advisorIgnoreList\"].includes(key);\n}\n","import { KeyUtilities } from \"./key-utilities\";\nimport { UserSettings } from \"./settings\";\nimport { EntryStorage } from \"./storage\";\n\nexport enum OTPType {\n  totp = 1,\n  hotp,\n  battle,\n  steam,\n  hex,\n  hhex,\n}\n\nexport enum CodeState {\n  Invalid = \"-1\",\n  Encrypted = \"-2\",\n}\n\nexport enum OTPAlgorithm {\n  SHA1 = 1,\n  SHA256,\n  SHA512,\n  GOST3411_2012_256,\n  GOST3411_2012_512,\n}\n\nexport enum DataType {\n  OTPStorage = \"OTPStorage\",\n  EncOTPStorage = \"EncOTPStorage\",\n  Key = \"Key\",\n}\n\nexport interface OTPAlgorithmSpec {\n  length: number;\n}\n\nexport class OTPUtil {\n  static getOTPAlgorithmSpec(otpAlgorithm: OTPAlgorithm): OTPAlgorithmSpec {\n    switch (otpAlgorithm) {\n      case OTPAlgorithm.GOST3411_2012_256:\n        return { length: 256 };\n      case OTPAlgorithm.GOST3411_2012_512:\n        return { length: 512 };\n      default:\n        return { length: 0 };\n    }\n  }\n}\n\nexport class OTPEntry implements OTPEntryInterface {\n  type: OTPType;\n  index: number;\n  issuer: string;\n  secret: string | null;\n  account: string;\n  hash: string;\n  counter: number;\n  period: number;\n  digits: number;\n  algorithm: OTPAlgorithm;\n  pinned: boolean;\n  encryption?: EncryptionInterface;\n  encData?: string;\n  encSecret?: string;\n  keyId?: string;\n  code = \"&bull;&bull;&bull;&bull;&bull;&bull;\";\n\n  constructor(\n    entry:\n      | {\n          account?: string;\n          encrypted: boolean;\n          index: number;\n          issuer?: string;\n          secret: string;\n          type: OTPType;\n          counter?: number;\n          period?: number;\n          hash?: string;\n          digits?: number;\n          algorithm?: OTPAlgorithm;\n          pinned?: boolean;\n        }\n      | {\n          encrypted: true;\n          keyId: string;\n          encData: string;\n          hash: string;\n          index: number;\n        },\n    encryption?: EncryptionInterface\n  ) {\n    this.encryption = encryption;\n    this.index = entry.index;\n\n    if (\"keyId\" in entry) {\n      this.encData = entry.encData;\n      this.secret = null;\n      this.hash = entry.hash;\n      this.keyId = entry.keyId;\n\n      // defaults\n      this.type = OTPType.totp;\n      this.issuer = \"\";\n      this.account = \"\";\n      this.counter = 0;\n      this.period = 30;\n      this.digits = 6;\n      this.algorithm = OTPAlgorithm.SHA1;\n      this.pinned = false;\n      return;\n    } else if (entry.encrypted) {\n      // v2 encryption backwards compat logic\n      this.secret = null;\n      this.encSecret = entry.secret;\n    } else {\n      this.secret = entry.secret;\n    }\n\n    this.type = entry.type;\n    if (entry.issuer) {\n      this.issuer = entry.issuer;\n    } else {\n      this.issuer = \"\";\n    }\n    if (entry.account) {\n      this.account = entry.account;\n    } else {\n      this.account = \"\";\n    }\n    if (entry.hash) {\n      this.hash = entry.hash;\n    } else {\n      this.hash = crypto.randomUUID();\n    }\n    if (entry.counter) {\n      this.counter = entry.counter;\n    } else {\n      this.counter = 0;\n    }\n    if (entry.digits) {\n      this.digits = entry.digits;\n    } else {\n      this.digits = 6;\n    }\n    if (entry.algorithm) {\n      this.algorithm = entry.algorithm;\n    } else {\n      this.algorithm = OTPAlgorithm.SHA1;\n    }\n    if (entry.pinned) {\n      this.pinned = entry.pinned;\n    } else {\n      this.pinned = false;\n    }\n    if (this.type === OTPType.totp && entry.period) {\n      this.period = entry.period;\n    } else {\n      this.period = 30;\n    }\n    if (this.type !== OTPType.hotp && this.type !== OTPType.hhex) {\n      this.generate();\n    }\n  }\n\n  async create() {\n    await EntryStorage.add(this);\n    return;\n  }\n\n  async update() {\n    await EntryStorage.update(this);\n    return;\n  }\n\n  changeEncryption(encryption: EncryptionInterface) {\n    if (!this.secret) {\n      return;\n    }\n\n    this.encryption = encryption;\n    return;\n  }\n\n  applyEncryption(encryption: EncryptionInterface) {\n    if (!encryption || !encryption.getEncryptionStatus()) {\n      return;\n    }\n\n    if (this.encSecret) {\n      // v2 encryption\n      this.secret = encryption.decryptSecretString(this.encSecret);\n      if (this.secret) {\n        this.encSecret = \"\";\n      }\n      return;\n    }\n\n    // check if its a rawotpstorage\n    const decryptedData = encryption.decryptEncSecret(this);\n    if (decryptedData === null) {\n      return;\n    }\n\n    if (decryptedData?.dataType !== \"OTPStorage\") {\n      console.warn(\"Decrypt successful, but malformed encData!\", this.hash);\n    }\n\n    if (decryptedData.hash !== this.hash) {\n      console.warn(\n        \"Decrypt successful, but hash mismatch!\",\n        this.hash,\n        decryptedData.hash\n      );\n    }\n\n    this.account = decryptedData.account || \"\";\n    // @ts-expect-error need a better way to do this\n    this.algorithm = OTPAlgorithm[decryptedData.algorithm] || OTPAlgorithm.SHA1;\n    this.counter = decryptedData.counter || 0;\n    this.digits = decryptedData.digits || 6;\n    this.issuer = decryptedData.issuer || \"\";\n    this.period = decryptedData.period || 30;\n    this.pinned = decryptedData.pinned || false;\n    this.secret = decryptedData.secret;\n    // @ts-expect-error need a better way to do this\n    this.type = OTPType[decryptedData.type] || OTPType.totp;\n\n    if (this.type !== OTPType.hotp && this.type !== OTPType.hhex) {\n      this.generate();\n    }\n\n    this.encryption = encryption;\n    this.encData = \"\";\n  }\n\n  async delete() {\n    await EntryStorage.delete(this);\n    return;\n  }\n\n  async next() {\n    if (this.type !== OTPType.hotp && this.type !== OTPType.hhex) {\n      return;\n    }\n    this.generate();\n    if (this.secret !== null) {\n      this.counter++;\n      await this.update();\n    }\n    return;\n  }\n\n  genUUID() {\n    this.hash = crypto.randomUUID();\n  }\n\n  generate() {\n    const offset = UserSettings.items ? UserSettings.items.offset : 0;\n    if (!UserSettings.items) {\n      // browser storage is async, so we need to wait for it to load\n      // and re-generate the code\n      // don't change the code to async, it will break the mutation\n      // for Accounts store to export data\n      UserSettings.updateItems().then(() => {\n        this.generate();\n      });\n    }\n\n    if (!this.secret && !this.encData) {\n      this.code = CodeState.Invalid;\n    } else if (!this.secret) {\n      this.code = CodeState.Encrypted;\n    } else {\n      try {\n        this.code = KeyUtilities.generate(\n          this.type,\n          this.secret,\n          this.counter,\n          this.period,\n          this.digits,\n          this.algorithm,\n          offset\n        );\n      } catch (error) {\n        this.code = CodeState.Invalid;\n        console.warn(\"Invalid secret.\", error);\n      }\n    }\n  }\n}\n","import { Encryption } from \"./encryption\";\nimport { OTPEntry, OTPType, OTPAlgorithm, CodeState } from \"./otp\";\nimport { StorageLocation, UserSettings } from \"./settings\";\nimport { DataType } from \"./otp\";\nexport class BrowserStorage {\n  private static async getStorageLocation(): Promise<StorageLocation> {\n    await UserSettings.updateItems();\n    const managedLocation = await ManagedStorage.get<StorageLocation>(\n      \"storageArea\"\n    );\n    if (\n      managedLocation === StorageLocation.Sync ||\n      managedLocation === StorageLocation.Local\n    ) {\n      return new Promise((resolve) => {\n        if (UserSettings.items.storageLocation !== managedLocation) {\n          UserSettings.items.storageLocation = managedLocation;\n          UserSettings.commitItems();\n        }\n        resolve(managedLocation);\n        return;\n      });\n    } else if (\n      UserSettings.items.storageLocation !== StorageLocation.Sync &&\n      UserSettings.items.storageLocation !== StorageLocation.Local\n    ) {\n      return new Promise((resolve, reject) => {\n        let amountSync: number;\n        let amountLocal: number;\n        chrome.storage.local.get((local) => {\n          amountLocal = Object.keys(local).length;\n          if (local.LocalStorage) {\n            amountLocal--;\n          }\n          try {\n            chrome.storage.sync.get((sync) => {\n              amountSync = Object.keys(sync).length;\n              // If storage location can't be found try to auto-detect storage\n              // location\n              if (amountLocal > amountSync && amountSync === 0) {\n                UserSettings.items.storageLocation = StorageLocation.Local;\n              } else if (amountLocal < amountSync && amountLocal === 0) {\n                UserSettings.items.storageLocation = StorageLocation.Sync;\n              } else {\n                // Use default\n                UserSettings.items.storageLocation = StorageLocation.Sync;\n              }\n              UserSettings.commitItems();\n              resolve(UserSettings.items.storageLocation);\n              return;\n            });\n          } catch (error) {\n            reject(error);\n            return;\n          }\n        });\n      });\n    } else {\n      return new Promise((resolve) => {\n        resolve(UserSettings.items.storageLocation || StorageLocation.Sync);\n        return;\n      });\n    }\n  }\n\n  // TODO: promise this\n  static async get() {\n    const storageLocation = await this.getStorageLocation();\n    const removeOtherData = function (items: Record<string, unknown>): void {\n      delete items.key;\n      delete items.LocalStorage;\n\n      for (const itemId in items) {\n        const item = items[itemId];\n\n        if (\n          item !== null &&\n          typeof item === \"object\" &&\n          \"dataType\" in item &&\n          item.dataType === \"Key\"\n        ) {\n          delete items[itemId];\n        }\n      }\n    };\n\n    let items = {} as { [key: string]: OTPStorage };\n\n    if (storageLocation === \"local\") {\n      items = await chrome.storage.local.get();\n    } else if (storageLocation === \"sync\") {\n      items = await chrome.storage.sync.get();\n    }\n\n    removeOtherData(items);\n\n    return items;\n  }\n\n  static async getKeys(): Promise<OldKey | Key[]> {\n    const storageLocation = await this.getStorageLocation();\n\n    const data = (await chrome.storage[storageLocation].get()) as Record<\n      string,\n      unknown\n    >;\n\n    // Return old key first, so we know to run a migration\n    if (data && typeof data === \"object\" && \"key\" in data) {\n      if (isOldKey(data.key)) {\n        return data.key;\n      } else {\n        console.error(\"'key' is malformed!\");\n      }\n    }\n\n    const keys: Key[] = [];\n    if (data && typeof data === \"object\") {\n      for (const record in data) {\n        const key = data[record];\n        if (isKey(key)) {\n          keys.push(key);\n        }\n      }\n    }\n\n    return keys;\n  }\n\n  static async set(data: object) {\n    const storageLocation = await this.getStorageLocation();\n    if (storageLocation === StorageLocation.Local) {\n      await chrome.storage.local.set(data);\n    } else if (storageLocation === StorageLocation.Sync) {\n      await chrome.storage.sync.set(data);\n    }\n    return;\n  }\n\n  static async remove(data: string | string[]) {\n    const storageLocation = await this.getStorageLocation();\n    if (storageLocation === \"local\") {\n      await chrome.storage.local.remove(data);\n    } else if (storageLocation === \"sync\") {\n      await chrome.storage.sync.remove(data);\n    }\n    return;\n  }\n\n  // Use for Chrome only.\n  // https://github.com/Authenticator-Extension/Authenticator/issues/412\n  static async clearLogs() {\n    const storageLocation = await this.getStorageLocation();\n    if (storageLocation === \"local\") {\n      const data = await chrome.storage.local.get();\n      await chrome.storage.local.clear();\n      await chrome.storage.local.set(data);\n    } else if (storageLocation === \"sync\") {\n      const data = await chrome.storage.sync.get();\n      await chrome.storage.sync.clear();\n      await chrome.storage.sync.set(data);\n    }\n  }\n}\n\nexport function isOldKey(key: unknown): key is OldKey {\n  return Boolean(\n    key &&\n      typeof key === \"object\" &&\n      \"enc\" in key &&\n      \"hash\" in key &&\n      key.enc &&\n      key.hash &&\n      typeof key.enc === \"string\" &&\n      typeof key.hash === \"string\"\n  );\n}\n\nfunction isKey(key: unknown): key is Key {\n  return Boolean(\n    key &&\n      typeof key === \"object\" &&\n      \"dataType\" in key &&\n      \"id\" in key &&\n      \"salt\" in key &&\n      key.dataType === \"Key\" &&\n      key.id &&\n      key.salt &&\n      typeof key.id === \"string\" &&\n      typeof key.salt === \"string\"\n  );\n}\n\nexport class EntryStorage {\n  private static getOTPStorageFromEntry(\n    entry: OTPEntry,\n    unencrypted?: boolean\n  ): OTPStorage {\n    let secret: string;\n    if (!entry.secret && entry.encData && entry.keyId) {\n      return {\n        dataType: DataType.EncOTPStorage,\n        keyId: entry.keyId,\n        data: entry.encData,\n        index: entry.index,\n      };\n    } else if (entry.secret) {\n      secret = entry.secret;\n    } else {\n      secret = \"\";\n      console.warn(\"Invalid entry\", entry);\n    }\n\n    let encrypted = entry.encryption?.getEncryptionStatus() || false;\n\n    if (unencrypted && entry.secret) {\n      secret = entry.secret;\n      encrypted = false;\n    }\n\n    const storageItem: RawOTPStorage = {\n      encrypted,\n      hash: entry.hash,\n      index: entry.index,\n      type: OTPType[entry.type],\n      secret,\n    };\n\n    if (entry.pinned) {\n      storageItem.pinned = true;\n    }\n\n    if (entry.type === OTPType.hotp || entry.type === OTPType.hhex) {\n      storageItem.counter = entry.counter;\n    }\n\n    if (entry.period && entry.period !== 30) {\n      storageItem.period = entry.period;\n    }\n\n    if (entry.issuer) {\n      storageItem.issuer = entry.issuer;\n    }\n\n    if (entry.account) {\n      storageItem.account = entry.account;\n    }\n\n    if (entry.digits && entry.digits !== 6) {\n      storageItem.digits = entry.digits;\n    }\n\n    if (entry.algorithm && entry.algorithm !== OTPAlgorithm.SHA1) {\n      storageItem.algorithm = OTPAlgorithm[entry.algorithm];\n    }\n\n    if (entry.encryption?.getEncryptionKeyId()) {\n      storageItem.keyId = entry.encryption.getEncryptionKeyId();\n    }\n\n    storageItem.dataType = DataType.OTPStorage;\n\n    if (\n      !unencrypted &&\n      encrypted &&\n      entry.encryption?.getEncryptionStatus() &&\n      entry.encryption.getEncryptionKeyId()\n    ) {\n      const encData = entry.encryption.getEncryptedString(\n        JSON.stringify(storageItem)\n      );\n      return {\n        dataType: DataType.EncOTPStorage,\n        data: encData,\n        keyId: entry.encryption.getEncryptionKeyId(),\n        index: entry.index,\n      };\n    } else if (encrypted) {\n      console.error(\"Could not encrypt malformed entry: \", entry);\n    }\n\n    return storageItem;\n  }\n\n  private static ensureUniqueIndex(data: { [hash: string]: OTPStorage }) {\n    const tempEntryArray: [hash: string, storage: OTPStorage][] = [];\n\n    for (const hash of Object.keys(data)) {\n      if (\n        hash === \"UserSettings\" ||\n        (data[hash] as { dataType: string }).dataType === \"Key\" ||\n        !this.isValidEntry(data, hash)\n      ) {\n        continue;\n      }\n      tempEntryArray.push([hash, data[hash]]);\n    }\n\n    tempEntryArray.sort((a, b) => {\n      return a[1].index - b[1].index;\n    });\n\n    let i = 0;\n    const newData: { [hash: string]: OTPStorage } = tempEntryArray.reduce(\n      (previous: { [hash: string]: OTPStorage }, entry) => {\n        const mergedData = {\n          ...previous,\n          [entry[0]]: { ...entry[1], index: i },\n        };\n\n        i += 1;\n\n        return mergedData;\n      },\n      {}\n    );\n\n    return newData;\n  }\n\n  private static isOTPStorage(entry: unknown) {\n    if (typeof entry !== \"object\") {\n      return false;\n    }\n\n    if (!entry || !(\"secret\" in entry || \"data\" in entry)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private static isValidEntry(\n    _data: { [hash: string]: OTPStorage },\n    hash: string\n  ) {\n    if (typeof _data[hash] !== \"object\") {\n      console.log('Key \"' + hash + '\" is not an object');\n      return false;\n    } else {\n      if (!this.isOTPStorage(_data[hash])) {\n        console.log('Key \"' + hash + '\" is not OTPStorage');\n        return false;\n      }\n      return true;\n    }\n  }\n\n  static async hasEncryptionKey(): Promise<boolean> {\n    const keys = await BrowserStorage.getKeys();\n    if (isOldKey(keys)) {\n      return true;\n    } else {\n      return keys.length !== 0;\n    }\n  }\n\n  static getExport(data: OTPEntryInterface[], encrypted?: boolean) {\n    try {\n      const exportData: { [hash: string]: OTPStorage } = {};\n      for (const entry of data) {\n        // Skip unable-decrypted data\n        if (entry.code === CodeState.Encrypted || !entry.secret) {\n          continue;\n        }\n\n        exportData[entry.hash] = this.getOTPStorageFromEntry(entry, !encrypted);\n      }\n      return exportData;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  static async backupGetExport(encryption: Encryption, encrypted?: boolean) {\n    const _data = await BrowserStorage.get();\n    for (const hash of Object.keys(_data)) {\n      if (\n        hash === \"UserSettings\" ||\n        (_data[hash] as { dataType: string }).dataType === \"Key\" ||\n        !this.isValidEntry(_data, hash)\n      ) {\n        delete _data[hash];\n        continue;\n      }\n\n      const entry = _data[hash];\n\n      // TODO: fix this\n      if (entry.dataType === \"EncOTPStorage\") {\n        continue;\n      }\n\n      // remove unnecessary fields\n      if (\n        !(entry.type === OTPType[OTPType.hotp]) &&\n        !(entry.type === OTPType[OTPType.hhex])\n      ) {\n        delete entry.counter;\n      }\n\n      if (entry.period === 30) {\n        delete entry.period;\n      }\n\n      if (!entry.issuer) {\n        delete entry.issuer;\n      }\n\n      if (!entry.account) {\n        delete entry.account;\n      }\n\n      if (entry.digits === 6) {\n        delete entry.digits;\n      }\n\n      if (entry.algorithm === OTPAlgorithm[OTPAlgorithm.SHA1]) {\n        delete entry.algorithm;\n      }\n\n      delete entry.pinned;\n\n      if (!encrypted) {\n        // decrypt the data to export\n        if (entry.encrypted) {\n          const decryptedSecret = encryption.decryptSecretString(entry.secret);\n          if (decryptedSecret !== entry.secret && decryptedSecret !== null) {\n            entry.secret = decryptedSecret;\n            entry.encrypted = false;\n          }\n        }\n        // we need correct hash\n        if (hash !== entry.hash) {\n          _data[entry.hash] = entry;\n          delete _data[hash];\n        }\n      }\n    }\n    if (encryption.getEncryptionStatus()) {\n      const keys = await BrowserStorage.getKeys();\n      if (isOldKey(keys)) {\n        Object.assign(_data, { key: keys });\n      } else {\n        for (const key of keys) {\n          Object.assign(_data, { [key.id]: key });\n        }\n      }\n    }\n    return _data;\n  }\n\n  static async import(\n    encryption: Encryption,\n    data: { [hash: string]: RawOTPStorage }\n  ) {\n    let _data = await BrowserStorage.get();\n    for (const hash of Object.keys(data)) {\n      // never trust data import from user\n      // data must be decrypted before calling this method\n      if (!data[hash].secret || data[hash].encrypted) {\n        // TODO: we need give a failed warning\n        continue;\n      }\n\n      const rawAlgorithm = data[hash].algorithm;\n      const entryData: {\n        account: string;\n        encrypted: false;\n        index: number;\n        issuer: string;\n        secret: string;\n        type: OTPType;\n        counter: number;\n        period: number;\n        hash: string;\n        digits: number;\n        algorithm: OTPAlgorithm;\n        pinned: boolean;\n      } = {\n        type: (parseInt(data[hash].type) as OTPType) || OTPType[OTPType.totp],\n        index: data[hash].index || 0,\n        issuer: data[hash].issuer || \"\",\n        account: data[hash].account || \"\",\n        encrypted: false,\n        secret: data[hash].secret,\n        counter: data[hash].counter || 0,\n        period: data[hash].period || 30,\n        digits: data[hash].digits || 6,\n        algorithm: rawAlgorithm\n          ? (parseInt(rawAlgorithm) as OTPAlgorithm)\n          : OTPAlgorithm.SHA1,\n        pinned: data[hash].pinned || false,\n        hash: data[hash].hash || hash,\n      };\n\n      if (isNaN(entryData.period) || entryData.period <= 0) {\n        entryData.period = 30;\n      }\n\n      // If invalid digits, then use default.\n      if (entryData.digits > 10 || entryData.digits < 1) {\n        entryData.digits = 6;\n      }\n\n      // If invalid algorithm, then use default\n      if (!OTPAlgorithm[entryData.algorithm]) {\n        entryData.algorithm = OTPAlgorithm.SHA1;\n      }\n\n      if (/^(blz-|bliz-)/.test(entryData.secret)) {\n        const secretMatches = entryData.secret.match(/^(blz-|bliz-)(.*)/);\n        if (secretMatches && secretMatches.length >= 3) {\n          entryData.secret = secretMatches[2];\n          entryData.type = OTPType.battle;\n        }\n      }\n\n      if (/^stm-/.test(entryData.secret)) {\n        const secretMatches = entryData.secret.match(/^stm-(.*)/);\n        if (secretMatches && secretMatches.length >= 2) {\n          entryData.secret = secretMatches[1];\n          entryData.type = OTPType.steam;\n        }\n      }\n\n      if (\n        !/^[a-z2-7]+=*$/i.test(entryData.secret) &&\n        /^[0-9a-f]+$/i.test(entryData.secret) &&\n        entryData.type === OTPType.totp\n      ) {\n        entryData.type = OTPType.hex;\n      }\n\n      if (\n        !/^[a-z2-7]+=*$/i.test(entryData.secret) &&\n        /^[0-9a-f]+$/i.test(entryData.secret) &&\n        entryData.type === OTPType.hotp\n      ) {\n        entryData.type = OTPType.hhex;\n      }\n\n      // not a valid / old hash\n      if (\n        !/^[a-f0-9]{8}-?[a-f0-9]{4}-?4[a-f0-9]{3}-?[89ab][a-f0-9]{3}-?[a-f0-9]{12}$/.test(\n          hash\n        )\n      ) {\n        entryData.hash = crypto.randomUUID();\n        delete data[hash];\n      }\n\n      const entry = new OTPEntry(entryData, encryption);\n      _data[entryData.hash] = this.getOTPStorageFromEntry(entry);\n    }\n    _data = this.ensureUniqueIndex(_data);\n    await BrowserStorage.set(_data);\n  }\n\n  static async add(entry: OTPEntry) {\n    await BrowserStorage.set({\n      [entry.hash]: this.getOTPStorageFromEntry(entry),\n    });\n  }\n\n  static async update(entry: OTPEntry) {\n    let _data = await BrowserStorage.get();\n    if (!Object.prototype.hasOwnProperty.call(_data, entry.hash)) {\n      throw new Error(\"Entry to change does not exist.\");\n    }\n    const storageItem = this.getOTPStorageFromEntry(entry);\n    _data[entry.hash] = storageItem;\n    _data = this.ensureUniqueIndex(_data);\n    await BrowserStorage.set(_data);\n  }\n\n  static async set(entries: OTPEntry[]) {\n    let _data = await BrowserStorage.get();\n    entries.forEach((entry) => {\n      const storageItem = this.getOTPStorageFromEntry(entry);\n      _data[entry.hash] = storageItem;\n    });\n    _data = this.ensureUniqueIndex(_data);\n    await BrowserStorage.set(_data);\n  }\n\n  static async get() {\n    const _data = await BrowserStorage.get();\n    const data: OTPEntry[] = [];\n\n    for (const hash of Object.keys(_data)) {\n      if (\n        hash === \"UserSettings\" ||\n        (_data[hash] as { dataType: string }).dataType === \"Key\" ||\n        !this.isValidEntry(_data, hash)\n      ) {\n        continue;\n      }\n\n      const entryData = _data[hash];\n\n      if (entryData.dataType === \"EncOTPStorage\") {\n        data.push(\n          new OTPEntry({\n            encrypted: true,\n            encData: entryData.data,\n            keyId: entryData.keyId,\n            hash,\n            index: entryData.index,\n          })\n        );\n        continue;\n      }\n\n      if (!entryData.hash) {\n        entryData.hash = hash;\n      }\n\n      if (!entryData.type) {\n        entryData.type = OTPType[OTPType.totp];\n      }\n\n      let type: OTPType;\n      switch (entryData.type) {\n        case \"totp\":\n        case \"hotp\":\n        case \"battle\":\n        case \"steam\":\n        case \"hex\":\n        case \"hhex\":\n          type = OTPType[entryData.type];\n          break;\n        default:\n          // we need correct the type here\n          // and save it\n          type = OTPType.totp;\n          entryData.type = OTPType[OTPType.totp];\n      }\n\n      let period: number | undefined;\n      if (\n        entryData.type === OTPType[OTPType.totp] &&\n        entryData.period &&\n        entryData.period > 0\n      ) {\n        period = entryData.period;\n      }\n\n      const entry = new OTPEntry({\n        account: entryData.account,\n        encrypted: entryData.encrypted,\n        hash: entryData.hash,\n        index: entryData.index,\n        issuer: entryData.issuer,\n        secret: entryData.secret,\n        type,\n        counter: entryData.counter,\n        period,\n        digits: entryData.digits ? Number(entryData.digits) : undefined,\n        // @ts-expect-error - it's fine if this ends up undefined\n        algorithm: OTPAlgorithm[entryData.algorithm],\n        pinned: entryData.pinned,\n      });\n\n      data.push(entry);\n    }\n\n    data.sort((a, b) => {\n      return a.index - b.index;\n    });\n\n    return data;\n  }\n\n  static async remove(hash: string) {\n    await BrowserStorage.remove(hash);\n  }\n\n  static async delete(entry: OTPEntry) {\n    let _data = await BrowserStorage.get();\n    if (Object.prototype.hasOwnProperty.call(_data, entry.hash)) {\n      delete _data[entry.hash];\n    }\n    _data = this.ensureUniqueIndex(_data);\n    await BrowserStorage.remove(entry.hash);\n    await BrowserStorage.set(_data);\n  }\n}\n\nexport class ManagedStorage {\n  static get<T>(key: string): T | undefined;\n  static get<T>(key: string, defaultValue: T): T;\n  static get<T>(key: string, defaultValue?: T) {\n    const managedStoragePromise = new Promise(\n      (resolve: (result: T | undefined) => void) => {\n        if (chrome.storage.managed) {\n          chrome.storage.managed.get((data) => {\n            if (chrome.runtime.lastError) {\n              return resolve(defaultValue);\n            }\n            if (data) {\n              if (data[key]) {\n                return resolve(data[key]);\n              }\n            }\n            return resolve(defaultValue);\n          });\n        } else {\n          // no available in Safari\n          resolve(defaultValue);\n        }\n      }\n    );\n\n    const timeoutPromise = new Promise((resolve) => {\n      setTimeout(() => resolve(defaultValue), 10);\n    });\n\n    return Promise.race([managedStoragePromise, timeoutPromise]);\n  }\n}\n","import { getCredentials } from \"./credentials\";\nimport { Encryption } from \"./encryption\";\nimport { UserSettings } from \"./settings\";\nimport { EntryStorage } from \"./storage\";\n\nexport class Dropbox implements BackupProvider {\n  private async getToken() {\n    await UserSettings.updateItems();\n    return UserSettings.items.dropboxToken || \"\";\n  }\n\n  async upload(encryption: Encryption) {\n    await UserSettings.updateItems();\n\n    if (UserSettings.items.dropboxEncrypted === undefined) {\n      // Encrypt by default if user hasn't set yet\n      UserSettings.items.dropboxEncrypted = true;\n      UserSettings.commitItems();\n    }\n    const exportData = await EntryStorage.backupGetExport(\n      encryption,\n      UserSettings.items.dropboxEncrypted === true\n    );\n    const backup = JSON.stringify(exportData, null, 2);\n\n    const url = \"https://content.dropboxapi.com/2/files/upload\";\n    const token = await this.getToken();\n    return new Promise(\n      (resolve: (value: boolean) => void, reject: (reason: Error) => void) => {\n        if (!token) {\n          return resolve(false);\n        }\n        try {\n          const xhr = new XMLHttpRequest();\n          const now = new Date().toISOString().slice(0, 10).replace(/-/g, \"\");\n          const apiArg = {\n            path: `/${now}.json`,\n            mode: \"add\",\n            autorename: true,\n          };\n          xhr.open(\"POST\", url);\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n          xhr.setRequestHeader(\"Content-type\", \"application/octet-stream\");\n          xhr.setRequestHeader(\"Dropbox-API-Arg\", JSON.stringify(apiArg));\n          xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n              if (xhr.status === 401) {\n                UserSettings.items.dropboxToken = undefined;\n                UserSettings.items.dropboxRevoked = true;\n                UserSettings.commitItems();\n                return resolve(false);\n              }\n              try {\n                const res = JSON.parse(xhr.responseText);\n                if (res.name) {\n                  resolve(true);\n                } else {\n                  resolve(false);\n                }\n              } catch (error) {\n                reject(error as Error);\n              }\n            }\n            return;\n          };\n          xhr.send(backup);\n        } catch (error) {\n          return reject(error as Error);\n        }\n      }\n    );\n  }\n  async getUser() {\n    await UserSettings.updateItems();\n    const url = \"https://api.dropboxapi.com/2/users/get_current_account\";\n    const token = await this.getToken();\n    return new Promise((resolve: (value: string) => void) => {\n      if (!token) {\n        return resolve(\"Error: No token\");\n      }\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", url);\n      xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 401) {\n            UserSettings.items.dropboxToken = undefined;\n            UserSettings.items.dropboxRevoked = true;\n            UserSettings.commitItems();\n            resolve(\n              \"Error: Response was 401. You will be logged out the next time you open Authenticator.\"\n            );\n          }\n          try {\n            const res = JSON.parse(xhr.responseText);\n            if (res.email) {\n              resolve(res.email);\n            } else {\n              console.error(\"Could not find email in response.\", res);\n              resolve(\"Error: res.email was undefined.\");\n            }\n          } catch (e) {\n            console.error(e);\n            resolve(\"Error\");\n          }\n        }\n        return;\n      };\n      xhr.send(null);\n    });\n  }\n}\n\nexport class Drive implements BackupProvider {\n  private async getToken() {\n    await UserSettings.updateItems();\n    if (\n      !UserSettings.items.driveToken ||\n      (await new Promise(\n        (\n          resolve: (value: boolean) => void,\n          reject: (reason: Error) => void\n        ) => {\n          const xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", \"https://www.googleapis.com/drive/v3/files\");\n          xhr.setRequestHeader(\n            \"Authorization\",\n            \"Bearer \" + UserSettings.items.driveToken\n          );\n          xhr.onreadystatechange = async () => {\n            if (xhr.readyState === 4) {\n              try {\n                const res = JSON.parse(xhr.responseText);\n                if (res.error) {\n                  if (res.error.code === 401) {\n                    if (\n                      navigator.userAgent.indexOf(\"Chrome\") !== -1 &&\n                      navigator.userAgent.indexOf(\"OPR\") === -1 &&\n                      navigator.userAgent.indexOf(\"Edg\") === -1\n                    ) {\n                      // Clear invalid token from\n                      // chrome://identity-internals/\n                      await chrome.identity.removeCachedAuthToken({\n                        token: UserSettings.items.driveToken as string,\n                      });\n                    }\n                    UserSettings.items.driveToken = undefined;\n                    UserSettings.commitItems();\n                    resolve(true);\n                  }\n                } else {\n                  resolve(false);\n                }\n              } catch (error) {\n                console.error(error);\n                reject(error as Error);\n              }\n            }\n            return;\n          };\n          xhr.send();\n        }\n      ))\n    ) {\n      await this.refreshToken();\n    }\n    return UserSettings.items.driveToken;\n  }\n\n  private async refreshToken() {\n    await UserSettings.updateItems();\n\n    if (\n      navigator.userAgent.indexOf(\"Chrome\") !== -1 &&\n      navigator.userAgent.indexOf(\"OPR\") === -1 &&\n      navigator.userAgent.indexOf(\"Edg\") === -1\n    ) {\n      return new Promise((resolve: (value: boolean) => void) => {\n        return chrome.identity.getAuthToken(\n          {\n            interactive: false,\n            scopes: [\"https://www.googleapis.com/auth/drive.file\"],\n          },\n          (token) => {\n            UserSettings.items.driveToken = token;\n            if (!token) {\n              UserSettings.items.driveRevoked = true;\n            }\n            UserSettings.commitItems();\n            resolve(Boolean(token));\n          }\n        );\n      });\n    } else {\n      return new Promise(\n        (\n          resolve: (value: boolean) => void,\n          reject: (reason: Error) => void\n        ) => {\n          const xhr = new XMLHttpRequest();\n          xhr.open(\n            \"POST\",\n            \"https://www.googleapis.com/oauth2/v4/token?client_id=\" +\n              getCredentials().drive.client_id +\n              \"&client_secret=\" +\n              getCredentials().drive.client_secret +\n              \"&refresh_token=\" +\n              UserSettings.items.driveRefreshToken +\n              \"&grant_type=refresh_token\"\n          );\n          xhr.setRequestHeader(\"Accept\", \"application/json\");\n          xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n              if (xhr.status === 401) {\n                UserSettings.items.driveRefreshToken = undefined;\n                UserSettings.items.driveRevoked = true;\n                UserSettings.commitItems();\n                return resolve(false);\n              }\n              try {\n                const res = JSON.parse(xhr.responseText);\n                if (res.error) {\n                  if (res.error === \"invalid_grant\") {\n                    UserSettings.items.driveRefreshToken = undefined;\n                    UserSettings.items.driveRevoked = true;\n                    UserSettings.commitItems();\n                  }\n                  console.error(res.error_description);\n                  resolve(false);\n                } else {\n                  UserSettings.items.driveToken = res.access_token;\n                  UserSettings.commitItems();\n                  resolve(true);\n                }\n              } catch (error) {\n                console.error(error);\n                reject(error as Error);\n              }\n            }\n            return;\n          };\n          xhr.send();\n        }\n      );\n    }\n  }\n\n  private async getFolder() {\n    const token = await this.getToken();\n    if (!token) {\n      return false;\n    }\n    await UserSettings.updateItems();\n    if (UserSettings.items.driveFolder) {\n      await new Promise(\n        (\n          resolve: (value: boolean) => void,\n          reject: (reason: Error) => void\n        ) => {\n          const xhr = new XMLHttpRequest();\n          xhr.open(\n            \"GET\",\n            \"https://www.googleapis.com/drive/v3/files/\" +\n              UserSettings.items.driveFolder +\n              \"?fields=trashed\"\n          );\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n          xhr.setRequestHeader(\"Accept\", \"application/json\");\n          xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n              if (xhr.status === 401) {\n                UserSettings.items.driveToken = undefined;\n                UserSettings.commitItems();\n                return resolve(false);\n              }\n              try {\n                const res = JSON.parse(xhr.responseText);\n                if (res.error) {\n                  if (res.error.code === 404) {\n                    UserSettings.items.driveFolder = undefined;\n                    UserSettings.commitItems();\n                    resolve(true);\n                  } else {\n                    console.error(res.error.message);\n                    resolve(false);\n                  }\n                } else if (res.trashed) {\n                  UserSettings.items.driveFolder = undefined;\n                  UserSettings.commitItems();\n                  resolve(true);\n                } else {\n                  resolve(true);\n                }\n              } catch (error) {\n                console.error(error);\n                reject(error as Error);\n              }\n            }\n            return;\n          };\n          xhr.send();\n        }\n      );\n    }\n    if (!UserSettings.items.driveFolder) {\n      await new Promise(\n        (\n          resolve: (value: boolean) => void,\n          reject: (reason: Error) => void\n        ) => {\n          // create folder\n          const xhr = new XMLHttpRequest();\n          xhr.open(\"POST\", \"https://www.googleapis.com/drive/v3/files/\");\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n          xhr.setRequestHeader(\"Accept\", \"application/json\");\n          xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n          xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n              if (xhr.status === 401) {\n                UserSettings.items.driveToken = undefined;\n                UserSettings.commitItems();\n                return resolve(false);\n              }\n              try {\n                const res = JSON.parse(xhr.responseText);\n                if (!res.error) {\n                  UserSettings.items.driveFolder = res.id;\n                  UserSettings.commitItems();\n                  resolve(true);\n                } else {\n                  console.error(res.error.message);\n                  resolve(false);\n                }\n              } catch (error) {\n                console.error(error);\n                reject(error as Error);\n              }\n            }\n            return;\n          };\n          xhr.send(\n            JSON.stringify({\n              name: \"Authenticator Backups\",\n              mimeType: \"application/vnd.google-apps.folder\",\n            })\n          );\n        }\n      );\n    }\n    return UserSettings.items.driveFolder;\n  }\n\n  async upload(encryption: Encryption) {\n    await UserSettings.updateItems();\n    if (UserSettings.items.driveEncrypted === undefined) {\n      UserSettings.items.driveEncrypted = true;\n      UserSettings.commitItems();\n    }\n    const exportData = await EntryStorage.backupGetExport(\n      encryption,\n      UserSettings.items.driveEncrypted === true\n    );\n    const backup = JSON.stringify(exportData, null, 2);\n\n    const token = await this.getToken();\n    if (!token) {\n      return false;\n    }\n    const folderId = await this.getFolder();\n    return new Promise(\n      (resolve: (value: boolean) => void, reject: (reason: Error) => void) => {\n        if (!token || !folderId) {\n          return resolve(false);\n        }\n        try {\n          const xhr = new XMLHttpRequest();\n          const now = new Date().toISOString().slice(0, 10).replace(/-/g, \"\");\n          xhr.open(\n            \"POST\",\n            \"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart\"\n          );\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n          xhr.setRequestHeader(\n            \"Content-type\",\n            \"multipart/related; boundary=segment_marker\"\n          );\n          xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n              if (xhr.status === 401) {\n                UserSettings.items.driveToken = undefined;\n                UserSettings.commitItems();\n                return resolve(false);\n              }\n              try {\n                const res = JSON.parse(xhr.responseText);\n                if (!res.error) {\n                  resolve(true);\n                } else {\n                  console.error(res.error.message);\n                  resolve(false);\n                }\n              } catch (error) {\n                reject(error as Error);\n              }\n            }\n            return;\n          };\n          const requestDataPrototype = [\n            \"--segment_marker\",\n            \"Content-Type: application/json; charset=UTF-8\",\n            \"\",\n            JSON.stringify({\n              name: `${now}.json`,\n              parents: [UserSettings.items.driveFolder],\n            }),\n            \"\",\n            \"--segment_marker\",\n            \"Content-Type: application/octet-stream\",\n            \"\",\n            backup,\n            \"--segment_marker--\",\n          ];\n          let requestData = \"\";\n          requestDataPrototype.forEach((line) => {\n            requestData = requestData + line + \"\\n\";\n          });\n          xhr.send(requestData);\n        } catch (error) {\n          return reject(error as Error);\n        }\n      }\n    );\n  }\n\n  async getUser() {\n    const token = await this.getToken();\n    if (!token) {\n      return \"Error: Access revoked or expired.\";\n    }\n\n    await UserSettings.updateItems();\n    return new Promise((resolve: (value: string) => void) => {\n      if (!token) {\n        resolve(\"Error: Access revoked or expired.\");\n      }\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", \"https://www.googleapis.com/drive/v2/about?fields=user\");\n      xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 401) {\n            UserSettings.items.driveToken = undefined;\n            UserSettings.commitItems();\n            resolve(\n              \"Error: Response was 401. You will be logged out the next time you open Authenticator.\"\n            );\n          }\n          try {\n            const res = JSON.parse(xhr.responseText);\n            if (!res.error) {\n              resolve(res.user.emailAddress);\n            } else {\n              console.error(res.error.message);\n              resolve(\"Error\");\n            }\n          } catch (e) {\n            console.error(e);\n            resolve(\"Error\");\n          }\n        }\n        return;\n      };\n      xhr.send();\n    });\n  }\n}\n\nexport class OneDrive implements BackupProvider {\n  private async getToken() {\n    await UserSettings.updateItems();\n    if (\n      !UserSettings.items.oneDriveToken ||\n      (await new Promise(\n        (\n          resolve: (value: boolean) => void,\n          reject: (reason: Error) => void\n        ) => {\n          const xhr = new XMLHttpRequest();\n          xhr.open(\n            \"GET\",\n            \"https://graph.microsoft.com/v1.0/me/drive/special/approot\"\n          );\n          xhr.setRequestHeader(\n            \"Authorization\",\n            \"Bearer \" + UserSettings.items.oneDriveToken\n          );\n          xhr.onreadystatechange = async () => {\n            if (xhr.readyState === 4) {\n              try {\n                const res = JSON.parse(xhr.responseText);\n                if (res.error) {\n                  if (res.error.code === 401) {\n                    UserSettings.items.oneDriveToken = undefined;\n                    UserSettings.commitItems();\n                    resolve(true);\n                  }\n                } else {\n                  resolve(false);\n                }\n              } catch (error) {\n                console.error(error);\n                reject(error as Error);\n              }\n            }\n            return;\n          };\n          xhr.send();\n        }\n      ))\n    ) {\n      await this.refreshToken();\n    }\n    return UserSettings.items.oneDriveToken;\n  }\n\n  private async refreshToken() {\n    await UserSettings.updateItems();\n    return new Promise(\n      (resolve: (value: boolean) => void, reject: (reason: Error) => void) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\n          \"POST\",\n          \"https://login.microsoftonline.com/common/oauth2/v2.0/token\"\n        );\n        xhr.setRequestHeader(\n          \"Content-Type\",\n          \"application/x-www-form-urlencoded\"\n        );\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState === 4) {\n            if (xhr.status === 401) {\n              UserSettings.items.oneDriveRefreshToken = undefined;\n              UserSettings.items.oneDriveRevoked = true;\n              UserSettings.commitItems();\n              return resolve(false);\n            }\n            try {\n              const res = JSON.parse(xhr.responseText);\n              if (res.error) {\n                if (res.error === \"invalid_grant\") {\n                  UserSettings.items.oneDriveRefreshToken = undefined;\n                  UserSettings.items.oneDriveRevoked = true;\n                  UserSettings.commitItems();\n                }\n                console.error(res.error_description);\n                resolve(false);\n              } else {\n                UserSettings.items.oneDriveToken = res.access_token;\n                UserSettings.commitItems();\n                resolve(true);\n              }\n            } catch (error) {\n              console.error(error);\n              reject(error as Error);\n            }\n          }\n          return;\n        };\n        xhr.send(\n          `client_id=${getCredentials().onedrive.client_id}&refresh_token=${\n            UserSettings.items.oneDriveRefreshToken\n          }&client_secret=${encodeURIComponent(\n            getCredentials().onedrive.client_secret\n          )}&grant_type=refresh_token&scope=https%3A%2F%2Fgraph.microsoft.com%2FFiles.ReadWrite${\n            UserSettings.items.oneDriveBusiness !== true ? \".AppFolder\" : \"\"\n          }%20https%3A%2F%2Fgraph.microsoft.com%2FUser.Read%20offline_access`\n        );\n      }\n    );\n  }\n\n  async upload(encryption: Encryption) {\n    await UserSettings.updateItems();\n    if (UserSettings.items.oneDriveEncrypted === undefined) {\n      UserSettings.items.oneDriveEncrypted = true;\n    }\n    const exportData = await EntryStorage.backupGetExport(\n      encryption,\n      UserSettings.items.oneDriveEncrypted === true\n    );\n    const backup = JSON.stringify(exportData, null, 2);\n\n    const token = await this.getToken();\n    if (!token) {\n      return false;\n    }\n\n    return new Promise(\n      (resolve: (value: boolean) => void, reject: (reason: Error) => void) => {\n        if (!token) {\n          return resolve(false);\n        }\n        try {\n          const xhr = new XMLHttpRequest();\n          const now = new Date().toISOString().slice(0, 10).replace(/-/g, \"\");\n          xhr.open(\n            \"PUT\",\n            `https://graph.microsoft.com/v1.0/me/drive/special/approot:/${now}.json:/content`\n          );\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n          xhr.setRequestHeader(\"Content-type\", \"application/octet-stream\");\n          xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n              if (xhr.status === 401) {\n                UserSettings.removeItem(\"oneDriveToken\");\n                return resolve(false);\n              }\n              try {\n                const res = JSON.parse(xhr.responseText);\n                if (!res.error) {\n                  resolve(true);\n                } else {\n                  console.error(res.error.message);\n                  resolve(false);\n                }\n              } catch (error) {\n                reject(error as Error);\n              }\n            }\n            return;\n          };\n          xhr.send(backup);\n        } catch (error) {\n          return reject(error as Error);\n        }\n      }\n    );\n  }\n\n  async getUser() {\n    const token = await this.getToken();\n    if (!token) {\n      return \"Error: Access revoked or expired.\";\n    }\n\n    await UserSettings.updateItems();\n\n    return new Promise((resolve: (value: string) => void) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", \"https://graph.microsoft.com/v1.0/me/\");\n      xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 401) {\n            UserSettings.items.oneDriveToken = undefined;\n            UserSettings.commitItems();\n            resolve(\n              \"Error: Response was 401. You will be logged out the next time you open Authenticator.\"\n            );\n          }\n          try {\n            const res = JSON.parse(xhr.responseText);\n            if (!res.error) {\n              resolve(res.userPrincipalName);\n            } else {\n              console.error(res.error.message);\n              resolve(\"Error\");\n            }\n          } catch (e) {\n            console.error(e);\n            resolve(\"Error\");\n          }\n        }\n        return;\n      };\n      xhr.send();\n    });\n  }\n}\n","export function getCredentials() {\n  return {\n    drive: {\n      client_id:\n        \"292457304165-v92d8om5dckuu0hk1s4ki3r94muisvsg.apps.googleusercontent.com\", // Google client ID\n      client_secret: \"3tRd4462fbfKjgzHS4CEI_Hh\", // Google client secret\n    },\n    dropbox: {\n      client_id: \"mmx38seexw3tvps\", // Dropbox client ID\n    },\n    onedrive: {\n      client_id: \"60f5b580-663b-42b2-9026-1862182b5582\", // Microsoft Identity client ID\n      client_secret: \"X:OIXk[aGn]BOaBES=7nxCYY2LjlE3s6\", // Microsoft Identity client secret\n    },\n  };\n}\n","export async function getSiteName() {\n  const tab = await getCurrentTab();\n  const query = new URLSearchParams(document.location.search.substring(1));\n\n  let title: string | null;\n  let url: string | null;\n  const titleFromQuery = query.get(\"title\");\n  const urlFromQuery = query.get(\"url\");\n\n  if (titleFromQuery && urlFromQuery) {\n    title = decodeURIComponent(titleFromQuery);\n    url = decodeURIComponent(urlFromQuery);\n  } else {\n    if (!tab) {\n      return [null, null];\n    }\n\n    title = tab.title?.replace(/[^a-z0-9]/gi, \"\").toLowerCase() ?? null;\n    url = tab.url ?? null;\n  }\n\n  if (!url) {\n    return [title, null];\n  }\n\n  const urlParser = new URL(url);\n  const hostname = urlParser.hostname; // it's always lower case\n\n  // try to parse name from hostname\n  // i.e. hostname is www.example.com\n  // name should be example\n  let nameFromDomain = \"\";\n\n  // ip address\n  if (/^\\d+\\.\\d+\\.\\d+\\.\\d+$/.test(hostname)) {\n    nameFromDomain = hostname;\n  }\n\n  // local network\n  if (hostname.indexOf(\".\") === -1) {\n    nameFromDomain = hostname;\n  }\n\n  const hostLevelUnits = hostname.split(\".\");\n\n  if (hostLevelUnits.length === 2) {\n    nameFromDomain = hostLevelUnits[0];\n  }\n\n  // www.example.com\n  // example.com.cn\n  if (hostLevelUnits.length > 2) {\n    // example.com.cn\n    if (\n      [\"com\", \"net\", \"org\", \"edu\", \"gov\", \"co\"].indexOf(\n        hostLevelUnits[hostLevelUnits.length - 2]\n      ) !== -1\n    ) {\n      nameFromDomain = hostLevelUnits[hostLevelUnits.length - 3];\n    } else {\n      // www.example.com\n      nameFromDomain = hostLevelUnits[hostLevelUnits.length - 2];\n    }\n  }\n\n  nameFromDomain = nameFromDomain.replace(/-/g, \"\").toLowerCase();\n\n  return [title, nameFromDomain, hostname];\n}\n\nexport function getMatchedEntries(\n  siteName: Array<string | null>,\n  entries: OTPEntryInterface[]\n) {\n  if (siteName.length < 2) {\n    return false;\n  }\n\n  const matched = [];\n\n  for (const entry of entries) {\n    if (isMatchedEntry(siteName, entry)) {\n      matched.push(entry);\n    }\n  }\n\n  return matched;\n}\n\nexport function getMatchedEntriesHash(\n  siteName: Array<string | null>,\n  entries: OTPEntryInterface[]\n) {\n  const matchedEnteries = getMatchedEntries(siteName, entries);\n  if (matchedEnteries) {\n    return matchedEnteries.map((entry) => entry.hash);\n  }\n\n  return false;\n}\n\nfunction isMatchedEntry(\n  siteName: Array<string | null>,\n  entry: OTPEntryInterface\n) {\n  if (!entry.issuer) {\n    return false;\n  }\n\n  const issuerHostMatches = entry.issuer.split(\"::\");\n  const issuer = issuerHostMatches[0].replace(/[^0-9a-z]/gi, \"\").toLowerCase();\n\n  if (!issuer) {\n    return false;\n  }\n\n  const siteTitle = siteName[0] || \"\";\n  const siteNameFromHost = siteName[1] || \"\";\n  const siteHost = siteName[2] || \"\";\n\n  if (issuerHostMatches.length > 1) {\n    if (siteHost && siteHost.indexOf(issuerHostMatches[1]) !== -1) {\n      return true;\n    }\n  }\n  // site title should be more detailed\n  // so we use siteTitle.indexOf(issuer)\n  if (siteTitle && siteTitle.indexOf(issuer) !== -1) {\n    return true;\n  }\n\n  if (siteNameFromHost && issuer.indexOf(siteNameFromHost) !== -1) {\n    return true;\n  }\n\n  return false;\n}\n\nexport async function getCurrentTab() {\n  const currentWindow = await chrome.windows.getCurrent();\n  const queryOptions = { active: true, windowId: currentWindow.id };\n  // `tab` will either be a `tabs.Tab` instance or `undefined`.\n  const [tab] = await chrome.tabs.query(queryOptions);\n  return tab;\n}\n\ninterface TabWithIdAndURL extends chrome.tabs.Tab {\n  id: number;\n  url: string;\n}\n\nexport function okToInjectContentScript(\n  tab: chrome.tabs.Tab\n): tab is TabWithIdAndURL {\n  return (\n    tab.id !== undefined &&\n    tab.url !== undefined &&\n    (tab.url.startsWith(\"https://\") ||\n      tab.url.startsWith(\"http://\") ||\n      tab.url.startsWith(\"file://\"))\n  );\n}\n","import * as CryptoJS from \"crypto-js\";\n\nfunction byteArray2Base32(bytes: number[]) {\n  const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n  const len = bytes.length;\n  let result = \"\";\n  let high = 0,\n    low = 0,\n    sh = 0,\n    hasDataInLow = false;\n  for (let i = 0; i < len; i += 5) {\n    hasDataInLow = true;\n    high = 0xf8 & bytes[i];\n    result += chars.charAt(high >> 3);\n    low = 0x07 & bytes[i];\n    sh = 2;\n\n    if (i + 1 < len) {\n      high = 0xc0 & bytes[i + 1];\n      result += chars.charAt((low << 2) + (high >> 6));\n      result += chars.charAt((0x3e & bytes[i + 1]) >> 1);\n      low = bytes[i + 1] & 0x01;\n      sh = 4;\n    }\n\n    if (i + 2 < len) {\n      high = 0xf0 & bytes[i + 2];\n      result += chars.charAt((low << 4) + (high >> 4));\n      low = 0x0f & bytes[i + 2];\n      sh = 1;\n    }\n\n    if (i + 3 < len) {\n      high = 0x80 & bytes[i + 3];\n      result += chars.charAt((low << 1) + (high >> 7));\n      result += chars.charAt((0x7c & bytes[i + 3]) >> 2);\n      low = 0x03 & bytes[i + 3];\n      sh = 3;\n    }\n\n    if (i + 4 < len) {\n      hasDataInLow = false;\n      high = 0xe0 & bytes[i + 4];\n      result += chars.charAt((low << 3) + (high >> 5));\n      result += chars.charAt(0x1f & bytes[i + 4]);\n      low = 0;\n      sh = 0;\n    }\n  }\n\n  if (hasDataInLow) {\n    result += chars.charAt(low << sh);\n  }\n\n  const padlen = 8 - (result.length % 8);\n  return result + (padlen < 8 ? Array(padlen + 1).join(\"=\") : \"\");\n}\n\nfunction wordArrayToByteArray(wordArray: CryptoJS.lib.WordArray) {\n  const byteArray: number[] = [];\n  for (let i = 0; i < wordArray.words.length; ++i) {\n    const word = wordArray.words[i];\n    for (let j = 3; j >= 0; --j) {\n      byteArray.push((word >> (8 * j)) & 0xff);\n    }\n  }\n  byteArray.length = wordArray.sigBytes;\n  return byteArray;\n}\n\nfunction byteArray2String(bytes: number[]) {\n  return String.fromCharCode.apply(null, bytes);\n}\n\nfunction subBytesArray(bytes: number[], start: number, length: number) {\n  const subBytes: number[] = [];\n  for (let i = 0; i < length; i++) {\n    subBytes.push(bytes[start + i]);\n  }\n  return subBytes;\n}\n\nexport function getOTPAuthPerLineFromOPTAuthMigration(migrationUri: string) {\n  if (!migrationUri.startsWith(\"otpauth-migration:\")) {\n    return [];\n  }\n\n  const base64Data = decodeURIComponent(migrationUri.split(\"data=\")[1]);\n  const wordArrayData = CryptoJS.enc.Base64.parse(base64Data);\n  const byteData = wordArrayToByteArray(wordArrayData);\n  const lines: string[] = [];\n  let offset = 0;\n  while (offset < byteData.length) {\n    if (byteData[offset] !== 10) {\n      break;\n    }\n    const lineLength = byteData[offset + 1];\n    const secretStart = offset + 4;\n    const secretLength = byteData[offset + 3];\n    const secretBytes = subBytesArray(byteData, secretStart, secretLength);\n    const secret = byteArray2Base32(secretBytes);\n    const accountStart = secretStart + secretLength + 2;\n    const accountLength = byteData[secretStart + secretLength + 1];\n    const accountBytes = subBytesArray(byteData, accountStart, accountLength);\n    const account = byteArray2String(accountBytes);\n    const isserStart = accountStart + accountLength + 2;\n    const isserLength = byteData[accountStart + accountLength + 1];\n    const issuerBytes = subBytesArray(byteData, isserStart, isserLength);\n    const issuer = byteArray2String(issuerBytes);\n    const algorithm = [\"SHA1\", \"SHA1\", \"SHA256\", \"SHA512\", \"MD5\"][\n      byteData[isserStart + isserLength + 1]\n    ];\n    const digits = [6, 6, 8][byteData[isserStart + isserLength + 3]];\n    const type = [\"totp\", \"hotp\", \"totp\"][\n      byteData[isserStart + isserLength + 5]\n    ];\n    let line = `otpauth://${type}/${account}?secret=${secret}&issuer=${issuer}&algorithm=${algorithm}&digits=${digits}`;\n    if (type === \"hotp\") {\n      let counter = 1;\n      if (isserStart + isserLength + 7 <= lineLength) {\n        counter = byteData[isserStart + isserLength + 7];\n      }\n      line += `&counter=${counter}`;\n    }\n    lines.push(line);\n    offset += lineLength + 2;\n  }\n  return lines;\n}\n","export const isFirefox = navigator.userAgent.indexOf(\"Firefox\") >= 0;\nexport const isWebKit = navigator.userAgent.indexOf(\"AppleWebKit\") >= 0;\nexport const isEdge = navigator.userAgent.indexOf(\"Edg\") >= 0;\nexport const isChromium = navigator.userAgent.indexOf(\"Chrome\") >= 0;\nexport const isSafari =\n  !isChromium && navigator.userAgent.indexOf(\"Safari\") >= 0;\nexport const isChrome =\n  navigator.userAgent.indexOf(\"Chrome\") !== -1 &&\n  navigator.userAgent.indexOf(\"Edg\") === -1;\n","import { getCredentials } from \"./models/credentials\";\nimport { Encryption } from \"./models/encryption\";\nimport { EntryStorage, ManagedStorage } from \"./models/storage\";\nimport { Dropbox, Drive, OneDrive } from \"./models/backup\";\nimport {\n  getSiteName,\n  getMatchedEntries,\n  getCurrentTab,\n  okToInjectContentScript,\n} from \"./utils\";\nimport { CodeState } from \"./models/otp\";\n\nimport { getOTPAuthPerLineFromOPTAuthMigration } from \"./models/migration\";\nimport { isChrome, isFirefox } from \"./browser\";\nimport { UserSettings } from \"./models/settings\";\n\nlet contentTab: chrome.tabs.Tab | undefined;\n\nchrome.runtime.onMessage.addListener(async (message, sender) => {\n  await UserSettings.updateItems();\n\n  if (message.action === \"getCapture\") {\n    if (!sender.tab) {\n      return;\n    }\n    const url = await getCapture(sender.tab);\n    if (contentTab && contentTab.id) {\n      message.info.url = url;\n      chrome.tabs.sendMessage(contentTab.id, {\n        action: \"sendCaptureUrl\",\n        info: message.info,\n      });\n    }\n  } else if (message.action === \"getTotp\") {\n    getTotp(message.info);\n  } else if (message.action === \"cachePassphrase\") {\n    chrome.storage.session.set({\n      cachedPassphrase: message.value,\n      cachedKeyId: message.keyId,\n    });\n    chrome.alarms.clear(\"autolock\");\n    setAutolock();\n  } else if ([\"dropbox\", \"drive\", \"onedrive\"].indexOf(message.action) > -1) {\n    getBackupToken(message.action);\n  } else if (message.action === \"lock\") {\n    chrome.storage.session.set({ cachedPassphrase: null, cachedKeyId: null });\n  } else if (message.action === \"resetAutolock\") {\n    chrome.alarms.clear(\"autolock\");\n    setAutolock();\n  } else if (message.action === \"updateContentTab\") {\n    contentTab = message.data;\n  } else if (message.action === \"updateContextMenu\") {\n    updateContextMenu();\n  }\n\n  // https://stackoverflow.com/a/56483156\n  return true;\n});\n\nchrome.alarms.onAlarm.addListener(() => {\n  chrome.storage.session.set({ cachedPassphrase: null, cachedKeyId: null });\n  if (contentTab && contentTab.id) {\n    chrome.tabs.sendMessage(contentTab.id, { action: \"stopCapture\" });\n  }\n  chrome.runtime.sendMessage({ action: \"stopImport\" });\n\n  // https://stackoverflow.com/a/56483156\n  return true;\n});\n\nasync function getCapture(tab: chrome.tabs.Tab) {\n  const dataUrl = await chrome.tabs.captureVisibleTab(tab.windowId, {\n    format: \"png\",\n  });\n\n  return dataUrl;\n}\n\nasync function getTotp(text: string, silent = false) {\n  if (!contentTab || !contentTab.id || !text) {\n    return false;\n  }\n  const id = contentTab.id;\n\n  if (text.indexOf(\"otpauth://\") !== 0) {\n    if (text.indexOf(\"otpauth-migration://\") === 0) {\n      const otpUrls = getOTPAuthPerLineFromOPTAuthMigration(text);\n      if (otpUrls.length === 0) {\n        !silent && chrome.tabs.sendMessage(id, { action: \"errorenc\" });\n        return false;\n      }\n\n      const getTotpPromises: Array<Promise<boolean>> = [];\n      for (const otpUrl of otpUrls) {\n        getTotpPromises.push(getTotp(otpUrl, true));\n      }\n\n      const getTotpResults = await Promise.allSettled(getTotpPromises);\n      const failedCount = getTotpResults.filter((res) => !res).length;\n      if (failedCount === otpUrls.length) {\n        !silent && chrome.tabs.sendMessage(id, { action: \"migrationfail\" });\n        return false;\n      }\n\n      if (failedCount > 0) {\n        !silent &&\n          chrome.tabs.sendMessage(id, { action: \"migrationpartlyfail\" });\n        return true;\n      }\n\n      !silent && chrome.tabs.sendMessage(id, { action: \"migrationsuccess\" });\n      return true;\n    } else if (text === \"error decoding QR Code\") {\n      !silent && chrome.tabs.sendMessage(id, { action: \"errorqr\" });\n      return false;\n    } else {\n      !silent && chrome.tabs.sendMessage(id, { action: \"text\", text });\n      return true;\n    }\n  } else {\n    let uri = text.split(\"otpauth://\")[1];\n    let type = uri.substr(0, 4).toLowerCase();\n    uri = uri.substr(5);\n    let label = uri.split(\"?\")[0];\n    const parameterPart = uri.split(\"?\")[1];\n    if (!label || !parameterPart) {\n      !silent && chrome.tabs.sendMessage(id, { action: \"errorqr\" });\n      return false;\n    } else {\n      let secret = \"\";\n      let account: string | undefined;\n      let issuer: string | undefined;\n      let algorithm: string | undefined;\n      let period: number | undefined;\n      let digits: number | undefined;\n\n      try {\n        label = decodeURIComponent(label);\n      } catch (error) {\n        console.error(error);\n      }\n      if (label.indexOf(\":\") !== -1) {\n        issuer = label.split(\":\")[0];\n        account = label.split(\":\")[1];\n      } else {\n        account = label;\n      }\n      const parameters = parameterPart.split(\"&\");\n      const {\n        cachedPassphrase,\n        cachedKeyId,\n      } = await chrome.storage.session.get();\n      parameters.forEach((item) => {\n        const parameter = item.split(\"=\");\n        if (parameter[0].toLowerCase() === \"secret\") {\n          secret = parameter[1];\n        } else if (parameter[0].toLowerCase() === \"issuer\") {\n          try {\n            issuer = decodeURIComponent(parameter[1]);\n          } catch {\n            issuer = parameter[1];\n          }\n          issuer = issuer.replace(/\\+/g, \" \");\n        } else if (parameter[0].toLowerCase() === \"counter\") {\n          // let counter = Number(parameter[1]);\n          // counter = isNaN(counter) || counter < 0 ? 0 : counter;\n        } else if (parameter[0].toLowerCase() === \"period\") {\n          period = Number(parameter[1]);\n          period =\n            isNaN(period) || period < 0 || period > 60 || 60 % period !== 0\n              ? undefined\n              : period;\n        } else if (parameter[0].toLowerCase() === \"digits\") {\n          digits = Number(parameter[1]);\n          digits = isNaN(digits) || digits === 0 ? 6 : digits;\n        } else if (parameter[0].toLowerCase() === \"algorithm\") {\n          algorithm = parameter[1];\n        }\n      });\n\n      if (!secret) {\n        !silent && chrome.tabs.sendMessage(id, { action: \"errorqr\" });\n        return false;\n      } else if (\n        !/^[0-9a-f]+$/i.test(secret) &&\n        !/^[2-7a-z]+=*$/i.test(secret)\n      ) {\n        !silent && chrome.tabs.sendMessage(id, { action: \"secretqr\", secret });\n        return false;\n      } else {\n        const encryption = new Encryption(cachedPassphrase, cachedKeyId);\n        const hash = crypto.randomUUID();\n        if (\n          !/^[2-7a-z]+=*$/i.test(secret) &&\n          /^[0-9a-f]+$/i.test(secret) &&\n          type === \"totp\"\n        ) {\n          type = \"hex\";\n        } else if (\n          !/^[2-7a-z]+=*$/i.test(secret) &&\n          /^[0-9a-f]+$/i.test(secret) &&\n          type === \"hotp\"\n        ) {\n          type = \"hhex\";\n        }\n        const entryData: { [hash: string]: RawOTPStorage } = {};\n        entryData[hash] = {\n          account,\n          hash,\n          issuer,\n          secret,\n          type,\n          encrypted: false,\n          index: 0,\n          counter: 0,\n          pinned: false,\n        };\n        if (period) {\n          entryData[hash].period = period;\n        }\n        if (digits) {\n          entryData[hash].digits = digits;\n        }\n        if (algorithm) {\n          entryData[hash].algorithm = algorithm;\n        }\n        if (\n          // If the entries are encrypted and we aren't unlocked, error.\n          (await EntryStorage.hasEncryptionKey()) !==\n          encryption.getEncryptionStatus()\n        ) {\n          !silent && chrome.tabs.sendMessage(id, { action: \"errorenc\" });\n          return false;\n        }\n        await EntryStorage.import(encryption, entryData);\n        !silent && chrome.tabs.sendMessage(id, { action: \"added\", account });\n        return true;\n      }\n    }\n  }\n}\n\nfunction getBackupToken(service: string) {\n  if (isChrome && service === \"drive\") {\n    chrome.identity.getAuthToken(\n      {\n        interactive: true,\n        scopes: [\"https://www.googleapis.com/auth/drive.file\"],\n      },\n      (value) => {\n        if (!value) {\n          return false;\n        }\n        UserSettings.items.driveToken = value;\n        UserSettings.commitItems();\n        chrome.runtime.sendMessage({ action: \"drivetoken\", value });\n        return true;\n      }\n    );\n  } else {\n    let authUrl = \"\";\n    let redirUrl = \"\";\n    if (service === \"dropbox\") {\n      redirUrl = encodeURIComponent(chrome.identity.getRedirectURL());\n      authUrl =\n        \"https://www.dropbox.com/oauth2/authorize?response_type=token&client_id=\" +\n        getCredentials().dropbox.client_id +\n        \"&redirect_uri=\" +\n        redirUrl;\n    } else if (service === \"drive\") {\n      if (navigator.userAgent.indexOf(\"Edg\") !== -1) {\n        redirUrl = encodeURIComponent(\"https://authenticator.cc/oauth-edge\");\n      } else if (isFirefox) {\n        redirUrl = encodeURIComponent(chrome.identity.getRedirectURL());\n      } else {\n        redirUrl = encodeURIComponent(\"https://authenticator.cc/oauth\");\n      }\n\n      authUrl =\n        \"https://accounts.google.com/o/oauth2/v2/auth?response_type=code&access_type=offline&client_id=\" +\n        getCredentials().drive.client_id +\n        \"&scope=https%3A//www.googleapis.com/auth/drive.file&prompt=consent&redirect_uri=\" +\n        redirUrl;\n    } else if (service === \"onedrive\") {\n      redirUrl = encodeURIComponent(chrome.identity.getRedirectURL());\n      authUrl = `https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=${\n        getCredentials().onedrive.client_id\n      }&response_type=code&redirect_uri=${redirUrl}&scope=https%3A%2F%2Fgraph.microsoft.com%2FFiles.ReadWrite${\n        UserSettings.items.oneDriveBusiness !== true ? \".AppFolder\" : \"\"\n      }%20https%3A%2F%2Fgraph.microsoft.com%2FUser.Read%20offline_access&response_mode=query&prompt=consent`;\n    }\n    chrome.identity.launchWebAuthFlow(\n      { url: authUrl, interactive: true },\n      async (url) => {\n        if (!url) {\n          return;\n        }\n        let hashMatches = url.split(\"#\");\n        if (service === \"drive\") {\n          hashMatches = url.slice(0, -1).split(\"?\");\n        } else if (service === \"onedrive\") {\n          hashMatches = url.split(\"?\");\n        }\n\n        if (hashMatches.length < 2) {\n          return;\n        }\n\n        const hash = hashMatches[1];\n\n        const resData = hash.split(\"&\");\n        for (let i = 0; i < resData.length; i++) {\n          const kv = resData[i];\n          if (/^(.*?)=(.*?)$/.test(kv)) {\n            const kvMatches = kv.match(/^(.*?)=(.*?)$/);\n            if (!kvMatches) {\n              continue;\n            }\n            const key = kvMatches[1];\n            const value = kvMatches[2];\n            if (key === \"access_token\") {\n              if (service === \"dropbox\") {\n                UserSettings.items.dropboxToken = value;\n                UserSettings.commitItems();\n                uploadBackup(\"dropbox\");\n                return;\n              }\n            } else if (key === \"code\") {\n              if (service === \"drive\") {\n                let success = false;\n\n                const response = await fetch(\n                  \"https://www.googleapis.com/oauth2/v4/token?client_id=\" +\n                    getCredentials().drive.client_id +\n                    \"&client_secret=\" +\n                    getCredentials().drive.client_secret +\n                    \"&code=\" +\n                    value +\n                    \"&redirect_uri=\" +\n                    redirUrl +\n                    \"&grant_type=authorization_code\",\n                  {\n                    method: \"POST\",\n                    headers: {\n                      Accept: \"application/json\",\n                      \"Content-Type\": \"application/x-www-form-urlencoded\",\n                    },\n                  }\n                );\n\n                try {\n                  const res = await response.json();\n\n                  if (res.error) {\n                    console.error(res.error_description);\n                  } else {\n                    UserSettings.items.driveToken = res.access_token;\n                    UserSettings.items.driveRefreshToken = res.refresh_token;\n                    UserSettings.commitItems();\n                    success = true;\n                  }\n                } catch (error) {\n                  console.error(error);\n                  throw error;\n                }\n\n                uploadBackup(\"drive\");\n                return success;\n              } else if (service === \"onedrive\") {\n                // Need to trade code we got from launchWebAuthFlow for a\n                // token & refresh token\n                let success = false;\n\n                const response = await fetch(\n                  \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n                  {\n                    method: \"POST\",\n                    headers: {\n                      Accept: \"application/json\",\n                      \"Content-Type\": \"application/x-www-form-urlencoded\",\n                    },\n                  }\n                );\n\n                try {\n                  const res = await response.json();\n                  if (res.error) {\n                    console.error(res.error_description);\n                  } else {\n                    UserSettings.items.oneDriveToken = res.access_token;\n                    UserSettings.items.oneDriveRefreshToken = res.refresh_token;\n                    UserSettings.commitItems();\n                    success = true;\n                  }\n                } catch (error) {\n                  console.error(error);\n                  throw error;\n                }\n\n                uploadBackup(\"onedrive\");\n                return success;\n              }\n            }\n          }\n        }\n\n        return;\n      }\n    );\n  }\n}\n\nasync function uploadBackup(service: string) {\n  const { cachedPassphrase, cachedKeyId } = await chrome.storage.session.get();\n  const encryption = new Encryption(cachedPassphrase, cachedKeyId);\n\n  switch (service) {\n    case \"dropbox\":\n      await new Dropbox().upload(encryption);\n      break;\n\n    case \"drive\":\n      await new Drive().upload(encryption);\n      break;\n\n    case \"onedrive\":\n      await new OneDrive().upload(encryption);\n      break;\n\n    default:\n      break;\n  }\n}\n\n// Show issue page after first install\nchrome.runtime.onInstalled.addListener(async (details) => {\n  if (details.reason !== \"install\") {\n    return;\n  } else if (await ManagedStorage.get(\"disableInstallHelp\", false)) {\n    return;\n  }\n\n  let url: string | null = null;\n\n  if (isChrome) {\n    url = \"https://otp.ee/chromeissues\";\n  }\n\n  if (url) {\n    chrome.tabs.create({ url, active: true });\n  }\n\n  // https://stackoverflow.com/a/56483156\n  return true;\n});\n\nchrome.commands.onCommand.addListener(async (command: string) => {\n  const { cachedPassphrase, cachedKeyId } = await chrome.storage.session.get();\n\n  let tab: chrome.tabs.Tab | undefined;\n\n  switch (command) {\n    case \"scan-qr\":\n      if (cachedPassphrase === null || cachedPassphrase === undefined) {\n        return;\n      }\n\n      tab = await getCurrentTab();\n      if (okToInjectContentScript(tab)) {\n        await chrome.scripting.executeScript({\n          target: { tabId: tab.id },\n          files: [\"/dist/content.js\"],\n        });\n        await chrome.scripting.insertCSS({\n          target: { tabId: tab.id },\n          files: [\"/css/content.css\"],\n        });\n\n        contentTab = tab;\n        chrome.tabs.sendMessage(tab.id, { action: \"capture\" });\n      }\n      break;\n\n    case \"autofill\":\n      tab = await getCurrentTab();\n      if (okToInjectContentScript(tab)) {\n        await chrome.scripting.executeScript({\n          target: { tabId: tab.id },\n          files: [\"/dist/content.js\"],\n        });\n        await chrome.scripting.insertCSS({\n          target: { tabId: tab.id },\n          files: [\"/css/content.css\"],\n        });\n\n        contentTab = tab;\n\n        const siteName = await getSiteName();\n        const entries = await EntryStorage.get();\n        const matchedEntries = getMatchedEntries(siteName, entries);\n\n        if (matchedEntries && matchedEntries.length === 1) {\n          const entry = matchedEntries[0];\n          const encryption = new Encryption(cachedPassphrase, cachedKeyId);\n          entry.applyEncryption(encryption);\n\n          if (\n            entry.code !== CodeState.Encrypted &&\n            entry.code !== CodeState.Invalid\n          ) {\n            chrome.tabs.sendMessage(tab.id, {\n              action: \"pastecode\",\n              code: matchedEntries[0].code,\n            });\n          }\n        }\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  // https://stackoverflow.com/a/56483156\n  return true;\n});\n\nasync function setAutolock() {\n  const enforcedAutolock = Number(\n    await ManagedStorage.get(\"enforceAutolock\", false)\n  );\n\n  if (enforcedAutolock && enforcedAutolock > 0) {\n    chrome.alarms.create(\"autolock\", { delayInMinutes: enforcedAutolock });\n    return;\n  }\n\n  // Set default autolock value\n  if (UserSettings.items.autolock === undefined) {\n    UserSettings.items.autolock = 30;\n  }\n\n  if (Number(UserSettings.items.autolock) > 0) {\n    chrome.alarms.create(\"autolock\", {\n      delayInMinutes: Number(UserSettings.items.autolock),\n    });\n  }\n}\n\nasync function updateContextMenu() {\n  chrome.permissions.contains(\n    {\n      permissions: [\"contextMenus\"],\n    },\n    (result) => {\n      if (result) {\n        if (UserSettings.items.enableContextMenu === true) {\n          chrome.contextMenus.removeAll();\n          chrome.contextMenus.create({\n            id: \"otpContextMenu\",\n            title: chrome.i18n.getMessage(\"extName\"),\n            contexts: [\"all\"],\n          });\n          chrome.contextMenus.onClicked.addListener((info, tab) => {\n            let popupUrl = \"view/popup.html?popup=true\";\n            if (tab && tab.url && tab.title) {\n              popupUrl +=\n                \"&url=\" +\n                encodeURIComponent(tab.url) +\n                \"&title=\" +\n                encodeURIComponent(tab.title);\n            }\n            let windowType;\n            if (isFirefox) {\n              windowType = \"detached_panel\";\n            } else {\n              windowType = \"panel\";\n            }\n            chrome.windows.create({\n              url: chrome.runtime.getURL(popupUrl),\n              type: windowType as chrome.windows.createTypeEnum,\n              height: 400,\n              width: 320,\n            });\n\n            // https://stackoverflow.com/a/56483156\n            return true;\n          });\n        } else {\n          chrome.contextMenus.removeAll();\n        }\n      }\n    }\n  );\n}\n\nupdateContextMenu();\n"],"names":["CryptoJS","module","exports","C","BlockCipher","lib","C_algo","algo","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","d","i","x","xi","sx","x2","x4","x8","t","RCON","AES","extend","_doReset","this","_nRounds","_keyPriorReset","_key","key","keyWords","words","keySize","sigBytes","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","encryptBlock","M","offset","_doCryptBlock","decryptBlock","nRounds","s0","s1","s2","s3","round","t0","t1","t2","t3","_createHelper","N","ORIG_P","ORIG_S","BLOWFISH_CTX","pbox","sbox","F","ctx","a","b","c","y","BlowFish_Encrypt","left","right","temp","Xl","Xr","Blowfish","keysize","Row","Col","keyIndex","index","Data1","Data2","res","j","BlowFishInit","BlowFish_Decrypt","blockSize","ivSize","C_lib","Base","WordArray","BufferedBlockAlgorithm","C_enc","Base64","EvpKDF","Cipher","C_mode","BlockCipherMode","CBC","Pkcs7","CipherParams","OpenSSLFormatter","SerializableCipher","OpenSSLKdf","PasswordBasedCipher","enc","Utf8","cfg","createEncryptor","create","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","init","xformMode","_xformMode","reset","call","process","dataUpdate","_append","_process","finalize","_doFinalize","selectCipherStrategy","cipher","encrypt","message","decrypt","ciphertext","StreamCipher","mode","iv","Encryptor","Decryptor","_cipher","_iv","xorBlock","block","_prevBlock","processBlock","slice","thisBlock","pad","data","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","push","padding","concat","unpad","modeCreator","_minBufferSize","_mode","__creator","_doProcessBlock","finalProcessedBlocks","_data","cipherParams","mixIn","toString","formatter","stringify","format","OpenSSL","salt","parse","openSSLStr","ciphertextWords","splice","encryptor","cipherCfg","algorithm","_parse","kdf","execute","password","hasher","random","compute","derivedParams","Math","crypto","window","self","globalThis","msCrypto","g","err","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","Error","Object","obj","subtype","prototype","overrides","hasOwnProperty","$super","apply","arguments","instance","properties","propertyName","clone","length","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","ceil","nBytes","hexChars","bite","join","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","decodeURIComponent","escape","e","utf8Str","unescape","encodeURIComponent","_nDataBytes","doFlush","processedWords","dataWords","dataSigBytes","nBlocksReady","nWordsReady","max","nBytesReady","min","Hasher","update","messageUpdate","_createHmacHelper","HMAC","map","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","indexOf","bitsCombined","parseLoop","Base64url","urlSafe","undefined","_safe_map","swapEndian","word","Utf16","Utf16BE","utf16Chars","codePoint","utf16Str","utf16StrLength","Utf16LE","MD5","iterations","derivedKey","derivedKeyWords","input","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","ArrayBuffer","superInit","subInit","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Float32Array","Float64Array","buffer","byteOffset","byteLength","typedArrayByteLength","T","abs","sin","_hash","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","hash","H_i","s","n","HmacMD5","CFB","generateKeystreamAndEncrypt","keystream","CTRGladman","incWord","b1","b2","b3","counter","_counter","incCounter","CTR","ECB","OFB","_keystream","AnsiX923","lastBytePos","Ansix923","Iso10126","Iso97971","ZeroPadding","NoPadding","SHA256","PBKDF2","hmac","blockIndex","blockIndexWords","blockWords","blockWordsLength","intermediate","intermediateWords","S","C_","G","RabbitLegacy","K","X","_X","_C","_b","nextState","IV","IV_0","IV_1","i0","i2","i1","i3","gx","ga","gb","gh","gl","Rabbit","RC4","keySigBytes","_S","keyByteIndex","keyByte","_i","_j","generateKeystreamWord","keystreamWord","RC4Drop","drop","_zl","_zr","_sl","_sr","_hl","_hr","RIPEMD160","al","bl","cl","dl","el","ar","br","cr","dr","er","hl","hr","zl","zr","sl","sr","f1","f2","f3","f4","f5","rotl","z","HmacRIPEMD160","W","SHA1","HmacSHA1","SHA224","HmacSHA224","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","pow","f","h","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","HmacSHA256","X64Word","x64","Word","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","SHA3","outputLength","state","_state","nBlockSizeLanes","M2i","M2i1","lane","high","low","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","C_x64","X64WordArray","SHA512","SHA384","HmacSHA384","X64Word_create","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","ah","bh","ch","dh","eh","fh","fl","hh","Wil","Wih","Wi","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","t1l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kih","Kil","t1h","t2l","toX32","HmacSHA512","PC1","PC2","BIT_SHIFTS","SBOX_P","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","_lBlock","_rBlock","exchangeLR","exchangeRL","lBlock","rBlock","mask","TripleDES","key1","key2","key3","_des1","_des2","_des3","X32WordArray","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","gostCrypto","root","CryptoOperationData","algorithms","Date","security","names","identifiers","attributes","parameters","BER","coding","PEM","Chars","Int16","expand","r","item","name","swapBytes","src","dst","isBinary","value","npw2","SInt","endian","encode","len","width","replace","decode","Array","assert","defineProperty","object","descriptor","enumerable","defineProperties","getOwnPropertyDescriptor","tagNumber","tagClass","tagConstructed","uniformTitle","source","Super","Class","propertiesObject","propertiesClass","constructor","superclass","super","PKTypes","typeSet","ASN1Object","_set","propName","property","set","_get","get","_call","methodName","args","method","hasProperty","proto","PRIMITIVE","ANY","BOOLEAN","IA5String","NumericString","PrintableString","TeletexString","UTF8String","UTCTime","GeneralizedTime","UniversalString","BMPString","NULL","PRIMITIVE_CODE","structure","id","INTEGER","ENUMERATED","OCTET_STRING","WrappedClass","BIT_STRING","numbits","COMBINE","combine","owner","valueName","configurable","SEQUENCE","check","writable","items","ItemClass","getItemClass","encoded","result","ATTRIBUTE","typeName","ownerDafaultType","uniformName","BaseClass","DEFINE","defaultType","type","typeId","OBJECT_IDENTIFIER","test","IMPLICIT","header","content","EXPLICIT","CTX","number","ContentClass","ARRAY_OF","ItemClassDef","typeAndValue","read","createItem","getItemValue","setItemValue","isItemType","isNaN","ArrayClass","values","SEQUENCE_OF","SET_OF","ENCLOSURE","modifier","SET_OF_SINGLE","CHOICE","define","ENCAPSULATES","DEFAULT","optional","OPTIONAL","DirectoryString","teletexString","printableString","universalString","utf8String","bmpString","numericString","Time","utcTime","generalTime","getYear","AttributeType","AttributeValue","AttributeTypeAndValue","RelativeDistinguishedName","serialName","countryName","dnQualifier","emailAddress","domainComponent","SNILS","OGRN","INN","RDNSequence","Name","rdnSequence","Validity","notBefore","notAfter","Version","Attribute","Attributes","AttributeSequence","FieldElement","Curve","seed","ECPoint","FieldID","fieldType","ECParameters","version","fieldID","curve","base","order","cofactor","GostR3410Parameters","publicKeyParamSet","digestParamSet","encryptionParamSet","GostR3411Parameters","DEFAULT_NULL","ECDHParameters","namedParameters","ecParameters","implicitly","Algorithm","paramType","AlgorithmIdentifier","DefaultAlgorithm","algorithmSet","ECDHKeyAlgorithm","params","namedCurve","p","q","DataError","GostKeyAlgorithm","paramName","sBox","encParams","AlgorithmWithNoParam","AlgorithmWithNullParam","Gost341194DigestAlgorithm","parameter","KeyAlgorithmIdentifier","ecdsa","noSignature","rsaEncryption","SignatureAlgorithmIdentifier","sha1withRSAEncryption","sha256withRSAEncryption","sha384withRSAEncryption","sha512withRSAEncryption","DigestAlgorithmIdentifier","sha1","sha256","sha384","sha512","Gost2814789Key","Gost2814789MAC","Gost2814789ParamSet","Gost2814789IV","Gost2814789Parameters","Gost2814789KeyWrapParameters","ukm","Gost2814789Algorithm","SCGostAlgorithm","GostKeyWrapAlgorithm","KeyWrapAlgorithmIdentifier","GostKeyAgreementAlgorithm","wrapping","BaseEncryptionAlgorithmIdentifier","MessageAuthenticationCodeAlgorithm","PBKDF2params","specified","otherSource","iterationCount","keyLength","prf","PBKDF2Algorithm","KeyDerivationAlgorithmIdentifier","PBEParameter","PBES1Algorithm","derivation","PBES2params","keyDerivationFunc","encryptionScheme","PBES2Algorithm","encryption","KeyEncryptionAlgorithmIdentifier","PBMAC1params","messageAuthScheme","PasswordMACAlgorithm","ContentEncryptionAlgorithmIdentifier","KeyData","DHPublicKey","ECDHPublicKey","GostR3410PublicKey","SubjectPublicKeyInfo","subjectPublicKey","GostSubjectPublicKeyInfo","extractable","usages","PrivateKey","DHPrivateKey","GostR3410KeyValueMask","GostR3410KeyValueInfo","keyValueMask","keyValyePublicKey","GostR3410PrivateKey","privateKey","keyValueInfo","enclosed","GostWrappedPrivateKey","privateKeyAlgorithm","privateKeyWrapped","keyData","keyMac","size","mac","PrivateKeyInfo","PrivateKeyAlgorithmIdentifier","PublicKey","OneAsymmetricKey","publicKey","AsymmetricKeyPackage","GostPrivateKeyInfo","KeyEncryptedData","EncryptedPrivateKeyInfo","encryptionAlgorithm","encryptedData","UniqueIdentifier","CertificateSerialNumber","BasicConstraints","cA","pathLenConstraint","KeyUsage","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","KeyPurposeId","ExtKeyUsageSyntax","KeyIdentifier","OtherName","EDIPartyName","nameAssigner","partyName","ORAddress","GeneralName","otherName","rfc822Name","dNSName","x400Address","directoryName","ediPartyName","uniformResourceIdentifier","iPAddress","registeredID","GeneralNames","AuthorityKeyIdentifier","keyIdentifier","authorityCertIssuer","authorityCertSerialNumber","PrivateKeyUsagePeriod","CertPolicyId","PolicyQualifierInfo","policyQualifierId","qualifier","PolicyInformation","policyIdentifier","policyQualifiers","PolicyMapping","issuerDomainPolicy","subjectDomainPolicy","BaseDistance","GeneralSubtrees","minimum","maximum","NameConstraints","permittedSubtrees","excludedSubtrees","SkipCerts","PolicyConstraints","requireExplicitPolicy","inhibitPolicyMapping","ReasonFlags","unused","keyCompromise","cACompromise","affiliationChanged","superseded","cessationOfOperation","certificateHold","privilegeWithdrawn","aACompromise","DistributionPointName","fullName","nameRelativeToCRLIssuer","CRLDistributionPoints","distributionPoint","reasons","cRLIssuer","FreshestCRL","AccessDescription","accessMethod","accessLocation","Extension","defaultCritical","extnID","critical","extnValue","defineValue","IssuerSignTool","signTool","cATool","signToolCert","cAToolCert","Extensions","CertExtensions","authorityKeyIdentifier","subjectKeyIdentifier","keyUsage","privateKeyUsagePeriod","certificatePolicies","policyMappings","subjectAltName","issuerAltName","subjectDirectoryAttributes","basicConstraints","nameConstraints","policyConstraints","extKeyUsage","cRLDistributionPoints","inhibitAnyPolicy","freshestCRL","authorityInfoAccess","subjectInfoAccess","subjectSignTool","issuerSignTool","GostSignature","TBSCertificate","serialNumber","signature","issuer","validity","subject","subjectPublicKeyInfo","issuerUniqueID","subjectUniqueID","extensions","Certificate","tbsCertificate","signatureAlgorithm","signatureValue","ExtensionRequest","CRIAttributes","challengePassword","extensionRequest","msCertExtensions","extendedCertificateAttributes","CertificationRequestInfo","CertificationRequest","requestInfo","CRLNumber","CRLReason","unspecified","removeFromCRL","CLRExtensions","cRLNumber","deltaCRLIndicator","issuingDistributionPoint","onlyContainsUserCerts","onlyContainsCACerts","onlySomeReasons","indirectCRL","onlyContainsAttributeCerts","CLREntryExtensions","cRLReason","instructionCode","invalidityDate","certificateIssuer","TBSCertList","thisUpdate","nextUpdate","revokedCertificates","userCertificate","revocationDate","crlEntryExtensions","crlExtensions","CertificateList","tbsCertList","AttCertVersion","ObjectDigestInfo","digestedObjectType","publicKeyCert","otherObjectTypes","otherObjectTypeID","digestAlgorithm","objectDigest","IssuerSerial","serial","issuerUID","V2Form","issuerName","baseCertificateID","objectDigestInfo","TargetCert","targetCertificate","targetName","certDigestInfo","Targets","targetGroup","targetCert","AttCertExtensions","auditIdentity","targetInformation","noRevAvail","Holder","entityName","AttCertIssuer","v1Form","v2Form","AttCertValidityPeriod","notBeforeTime","notAfterTime","SvceAuthInfo","service","ident","authInfo","RoleSyntax","roleAuthority","roleName","ClassList","unmarked","unclassified","restricted","confidential","secret","topSecret","SecurityCategory","Clearance","policyId","classList","securityCategories","IetfAttrSyntax","policyAuthority","octets","oid","string","getIdentifier","AttributeCertificateInfo","holder","attrCertValidityPeriod","authenticationInfo","accessIdentity","chargingIdentity","group","role","clearance","AttributeCertificate","acinfo","EncryptedKey","EncryptedContent","UserKeyingMaterial","Gost2814789EncryptedKey","keyInfo","entityUInfo","suppPubInfo","encryptedKey","maskKey","macKey","m","k","l","GostR3410TransportParameters","ephemeralPublicKey","GostR3410KeyTransport","sessionEncryptedKey","transportParameters","SCGostKeyTransport","addedukm","GostEncryptedKey","GostKeyContainerContentAttributes","kccaSoftPassword","kccaReservePrimary","kccaPrimaryKeyAbsent","kccaFKCShared","GostPrivateKeyAttributes","pkaExportable","pkaUserProtect","pkaExchange","pkaEphemeral","pkaNonCachable","pkaDhAllowed","GostPrivateKeyParameters","CertificateLink","path","PasswordPolicy","GostKeyContainerContent","containerAlgoritmIdentifier","containerName","primaryPrivateKeyParameters","hmacPassword","secondaryEncryptedPrivateKey","secondaryPrivateKeyParameters","primaryCertificate","secondaryCertificate","encryptionContainerName","primaryCertificateLink","secondaryCertificateLink","primaryFP","secondaryFP","passwordPolicy","containerSecurityLevel","keyValidity","secondaryEncryptionContainerName","GostKeyContainer","keyContainerContent","hmacKeyContainerContent","GostKeyContainerName","extElem1","GostPrivateKeys","primaryKey","secondaryKey","hmacKey","GostPrivateMasks","randomStatus","hmacRandom","ViPNetKeyInfo","keyClass","keyType","addSerialNumber","certSerialNumber","subjectUID","recipientUID","keyUID","flags","ViPNetInfo","defenceKeyInfo","certificate","CMSVersion","ContentType","SigningTime","SubjectKeyIdentifier","Digest","MessageAuthenticationCode","BodyPartID","BodyPartPath","CMCUnsignedData","bodyPartPath","identifier","SignedAttributes","contentType","signingTime","messageDigest","UnsignedAttributes","countersignature","Countersignature","unsignedData","AuthAttributes","UnauthAttributes","UnprotectedAttributes","IssuerAndSerialNumber","SignerIdentifier","issuerAndSerialNumber","SignerInfo","sid","signedAttrs","unsignedAttrs","SignerInfos","DigestAlgorithmIdentifiers","AttributeCertificateV2","ExtendedCertificateInfo","ExtendedCertificate","extendedCertificateInfo","OtherCertificateFormat","otherCertFormat","otherCert","AttributeCertificateInfoV1","subjectName","attCertValidityPeriod","AttributeCertificateV1","acInfo","EncapsulatedContentInfo","eContentType","eContent","CertificateChoices","extendedCertificate","v1AttrCert","v2AttrCert","other","OtherRevocationInfoFormat","otherRevInfoFormat","otherRevInfo","RevocationInfoChoice","crl","CertificateSet","RevocationInfoChoices","SignedData","digestAlgorithms","encapContentInfo","certificates","crls","signerInfos","RecipientIdentifier","KeyTransRecipientInfo","rid","keyEncryptionAlgorithm","OtherKeyAttribute","keyAttrId","keyAttr","RecipientKeyIdentifier","date","KeyAgreeRecipientIdentifier","rKeyId","RecipientEncryptedKeys","OriginatorPublicKey","OriginatorIdentifierOrKey","originatorKey","KeyAgreeRecipientInfo","originator","recipientEncryptedKeys","KEKIdentifier","KEKRecipientInfo","kekid","PasswordRecipientInfo","friendlyName","OtherRecipientInfo","oriType","oriValue","RecipientInfo","ktri","kari","kekri","pwri","ori","OriginatorInfo","certs","RecipientInfos","EncryptedContentInfo","contentEncryptionAlgorithm","encryptedContent","EnvelopedData","originatorInfo","recipientInfos","encryptedContentInfo","unprotectedAttrs","DigestedData","digest","EncryptedData","AuthenticatedData","macAlgorithm","authAttrs","unauthAttrs","AuthEnvelopedData","authEncryptedContentInfo","EncryptedKeyPackage","encrypted","enveloped","authEnveloped","ContentInfo","signedData","envelopedData","digestedData","authData","encryptedKeyPkg","aKeyPackage","DigestInfo","PKCS12Attributes","keyProviderNameAttr","localKeyId","certKeyIdentifierPropId","SafeBagType","CRLType","SecretType","KeyBag","PKCS8ShroudedKeyBag","CertBag","certId","certValue","x509Certificate","sdsiCertificate","CRLBag","crlId","crlValue","x509CRL","SecretBag","secretTypeId","secretValue","SafeContents","bagId","bagValue","bagAttributes","keyBag","pkcs8ShroudedKeyBag","certBag","crlBag","secretBag","safeContentsBag","AuthenticatedSafe","MacData","macSalt","PFX","authSafe","macData","RegToken","Authenticator","OldCertId","ProtocolEncrKey","EncryptedValue","intendedAlg","symmAlg","encSymmKey","keyAlg","valueHint","encValue","KeyGenParameters","PKIArchiveOptions","encryptedValue","encryptedPrivKey","keyGenParameters","archiveRemGenPrivKey","SinglePubInfo","pubMethod","dontCare","x500","web","ldap","pubLocation","PKIPublicationInfo","action","dontPublish","pleasePublish","pubInfos","SubsequentMessage","encrCert","challengeResp","POPOPrivKey","thisMessage","subsequentMessage","dhMAC","agreeMAC","PKMACValue","owf","algId","POPOSigningKeyInput","sender","publicKeyMAC","POPOSigningKey","poposkInput","algorithmIdentifier","ProofOfPossession","raVerified","Controls","regToken","authenticator","pkiPublicationInfo","pkiArchiveOptions","oldCertID","protocolEncrKey","OptionalValidity","CertTemplate","signingAlg","CertRequest","certReqId","certTemplate","controls","UTF8Pairs","CertReq","EncKeyWithID","generalName","CertReqMsg","certReq","popo","regInfo","utf8Pairs","encKeyWithID","PendInfo","pendToken","pendTime","CMCStatus","success","failed","pending","noSupport","confirmRequired","popRequired","partial","CMCFailInfo","badAlg","badMessageCheck","badRequest","badTime","badCertId","unsupportedExt","mustArchiveKeys","badIdentity","popFailed","noKeyReuse","internalCAError","tryLater","authDataFail","CMCStatusInfo","cMCStatus","bodyList","statusString","otherInfo","failInfo","pendInfo","AddExtensions","pkiDataReference","certReferences","LraPopWitness","pkiDataBodyid","bodyIds","GetCert","GetCRL","cRLName","time","RevokeRequest","reason","passphrase","comment","DecryptedPOP","bodyPartID","thePOPAlgID","thePOP","CMCCertId","BodyPartReference","CMCStatusInfoV2","extendedFailInfo","failInfoOID","failInfoValue","PublishTrustAnchors","seqNumber","hashAlgorithm","anchorHashes","AuthPublish","BodyPartList","CMCPublicationInfo","hashAlg","certHashes","pubInfo","ModCertTemplate","ControlsProcessed","IdentifyProofV2","proofAlgID","macAlgId","witness","PopLinkWitnessV2","keyGenAlgorithm","TaggedCertificationRequest","certificationRequest","TaggedContentInfo","contentInfo","OtherMsg","otherMsgType","otherMsgValue","TaggedRequest","tcr","crm","orm","requestMessageType","requestMessageValue","EncryptedPOP","request","cms","witnessAlgID","TaggedAttribute","attrType","attrValues","statusInfo","identification","identityProof","dataReturn","transactionId","senderNonce","recipientNonce","addExtensions","encryptedPOP","decryptedPOP","lraPOPWitness","getCert","getCRL","revokeRequest","responseInfo","queryPending","popLinkRandom","popLinkWitness","confirmCertAcceptance","statusInfoV2","trustedAnchors","authPublish","batchRequests","batchResponses","publishCert","modCertTemplate","controlProcessed","popLinkWitnessV2","identityProofV2","PKIData","controlSequence","reqSequence","cmsSequence","otherMsgSequence","PKIResponse","GostASN1","asn1","Promise","subtle","cert","providers","callback","equalBuffers","r1","r2","hex","lpad","equalNumbers","Number","toLowerCase","equalNames","name1","name2","addUnique","array","comparator","found","setContentData","getContentData","encap","checkContentInfo","e1","createContentInfo","DataContentInfo","DigestedDataContentInfo","SignedDataContentInfo","EncryptedDataContentInfo","EnvelopedDataContentInfo","matchCert","getSeed","passwordData","GostCMS","options","providerName","autoAddCert","useKeyIdentifier","defaultSet","isDetached","writeDetached","createDetached","encloseContent","then","setEnclosed","getEnclosed","digestProvider","verify","addSignature","signerKey","signerCert","signerInfo","dataToSign","signerCertChain","provider","getProvider","importKey","sign","algorithm1","algorithm2","cert1","cert2","isDegenerate","trustPolicy","all","selector","getValidCertificate","catch","verifiers","forEach","verifySignature","dataToVerify","dataDigest","contentEncryptionKey","integrityKey","saltSize","diversifier","deriveBits","deriveKey","encryptionKey","decryptionKey","decryptedContent","generateKey","addRecipient","recipientCert","senderKey","senderCert","encryptionProvider","X509","senderCertChain","agreement","keyPair","wrappingKey","wrapKey","wrappedKey","recipientInfo","spki","recipientKey","originatorCert","transportKey","keys","unwrappingKey","unwrapKey","today","setHours","setDate","getDate","matchCertificate","skid","getTime","authoritySelector","akid","selectCertificates","matchCRL","selectCRLs","keyProvider","GostCert","commonName","caKeyUsage","caExtKeyUsage","userKeyUsage","userExtKeyUsage","days","issuerPrivateKey","issuerCertificate","exts","ae","checkUsage","pathLen","generate","keyAlgorithm","exportKey","pkcs8","getPublicKey","keyUsages","issuerCRL","isRevoked","operation","CRL","Request","req","CertStore","CertPath","certStore","CertificateTrustPolicy","TrustedCAPolicy","trustedCACerts","requireCRL","requireCA","rc","getCertificates","getCRLs","load","store","info","build","current","certPath","foundCRLs","founds","next","results","GostRandom","SyntaxError","NotSupportedError","littleEndian","DataView","setInt16","defaultIV","sBoxes","signed","unsigned","randomSeed","randomSource","byteArray","cloneArray","swap32","defaultIV128","multTable","gmul","carry","kB","funcR","sum","funcReverseR","tmp","kPi","kReversePi","funcX","funcL","funcLSX","funcS","funcC","keySchedule128","inputKey","inputKeySecond","iterationConst","j0","j1","process128","ofs","funcReverseL","funcReverseS","cm","om","process89","process15","keySchedule89","sch","keySchedule15","PITABLE","keyScheduleRC2","T1","effectiveLength","T8","TM","L","processRC2","reverse","R","mix","ror","rol","mash","perform","count","encryptECB","decryptECB","encryptCFB","shiftBits","cb","keyMeshing","decryptCFB","processOFB","processCTR89","syn","processCTR15","encryptCBC","decryptCBC","processMAC89","zeroPad","processKeyMAC15","processMAC15","bitPad","signMAC","macLength","processMAC","verifyMAC","wrapKeyGOST","kek","cek","unwrapKeyGOST","diversifyKEK","wrapKeyCP","dek","unwrapKeyCP","packKeySC","unpacked","mcount","zero32","unpackKeySC","packed","wrapKeySC","unwrapKeySC","generateWrappingKeySC","inverse","m32","k32","r32","wrapKeyMask","procreator","unwrapKeyMask","keyMeshingCP","noKeyMeshing","noPad","pkcs5Pad","nb","pkcs5Unpad","bitUnpad","randomPad","blockLength","keyWrapping","sBoxName","toUpperCase","GostCoding","m3","m4","u24","_win1251_","_win1251back_","from","charset","first","second","endean","neg","substring","v","encodeBER","onlyContent","bytelen","ba","sort","unusedBits","match","original","setMinutes","getMinutes","getTimezoneOffset","ms","getMilliseconds","getFullYear","getMonth","getHours","getSeconds","Unit8Array","ha","ha1","l2","ha2","decodeBER","sub","pos","start","buf","end","subarray","skip","bits","shortYear","exec","dt","tz","deep","valid","RegExp","out","gostEngine","rootCrypto","OperationError","InvalidStateError","InvalidAccessError","normalize","modes","split","na","namedParam","label","contex","context","checkNative","checkKey","gostCipher","gostDigest","gostSign","md","extractKey","convertKey","resolve","reject","error","mswrap","oncomplete","onerror","executor","resolveQueue","rejectQueue","onFulfilled","onRejected","asyncOnFulfilled","asyncOnRejected","promises","asyncResolve","asyncReject","SubtleCrypto","privateAlgorithm","publicAlgorithm","publicBuffer","privateBuffer","publicUsages","filter","privateUsages","convertKeyPair","baseKey","derivedKeyType","dataLen","chain","pop","raw","wrapAlgorithm","unwrapAlgorithm","unwrappedKeyAlgorithm","GostCipher","arraycopy","sOfs","dOfs","swap","b64decode","digest2012","buffer0","buffer512","sigma","Ax","get8","add512","w0","w1","CF","get512","copy512","new512","xor512","XLPS","z0","z1","stage2","stage3","b0","m0","bitLength","digest94","Sum","P","A","fw","wS","wS15","sOff","dOff","U","V","tmpA","summing","C2","n8","digestSHA1","common","w","cycle","fn","dlen","o","signHMAC","k0","verifyHMAC","deriveBitsPFXKDF","u","ID","D","S0","slen","P0","plen","I","B","cf","deriveBitsKDF","rlen","blen","deriveBitsPBKDF2","hLen","dkLen","DK","Z","rLen","deriveBitsCP","GostDigest","GostSign","engine","defineEngine","getGostCipher","getGostDigest","getGostSign","now","get32","set32","int","GostKeys","PKCS8","PKCS8Encrypted","SignalComKeyContainer","container","SignalComPrivateKeyInfo","CryptoProKeyContainer","primary","masks","primary2","masks2","ViPNetContainerEntry","entry","ViPNetContainer","fileType","fileVersion","applicationHeader","entries","PKCS12","KeyStore","setEntry","getPrivateKey","setPrivateKey","getKey","keyPassword","setKey","getEncryptionKey","mk","digested","decrypedMasks","mkm","generateContainer","publicKeyData","wrappedData","changePassword","oldKeyPassword","newKeyPassword","derivePasswordKey","isVersion2012","computePasswordMAC","computeContainerMAC","computeMaskMAC","status","computeFP","fp","computedFP","decryptKey","secondary","getCertificate","getContainerName","keyParameters","absent","generateMasks","maskname","encryptKey","FP","softPassword","setCertificate","setContainerName","needPassword","getKeyPassword","secodeData","keyPart","encodedKeyInfo","wrapped","encyption","entrySize","headerSize","keyPartSize","entriesSize","calcHMAC","passwordKey","aliases","containsAlias","alias","deleteEntry","getEntry","contents","bag","keyId","generateUUID","digestAlgortihm","encryptionAlgortihm","pbes","bags","keyContents","TypeMismatchError","QuotaExceededError","randomRing","getIndex","setIndex","u8","ecDH","dhKeyAgreement","PBES2","PBMAC1","hmacWithSHA1","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512","title","modulusLength","param","publicExponent","GostSecurity","pbmac","secp256r1","secp384r","secp521r","ECGostParams","GostParams","DB","DM","DV","FV","F1","F2","am","xl","xh","nbi","copyTo","copy","setInt","nbv","ZERO","ONE","THREE","subTo","addTo","add","negTo","compare","nbits","dshlTo","dshrTo","shlTo","bs","cbs","bm","ds","shrTo","mulTo","mul","sqrTo","divRemTo","pm","pt","ts","nsh","ys","y0","yt","d1","d2","qd","modTo","mod","isEven","isZero","equals","sig","invMod","ac","subtract","testBit","Classic","convert","revert","reduce","Montgomery","mp","invDig","mpl","mph","um","mt2","dAddOffset","Barrett","q3","mu","expMod","k1","km","g2","is1","newFE","copyFE","addFE","subFE","mulFE","sqrFE","sqr","shlFE","invFE","newEC","getX","point","zinv","getY","isInfinity","getInfinity","infinity","addEC","twiceEC","x1","y1","v2","v3","x1v2","zu2","x3","y3","z3","y1z1","y1sqz1","mulEC","negFE","negEC","hBit","atobi","sh","bitoa","r8","htobi","mi","bitoh","to2","from2","alpha","zetta","z2","k2","both","mulTwoEC","Q","generateMaskKey","derive","peer_Q","peer_y","u0","mulUpperTo","mulLowerTo","hashLen","keyLen","newCurve","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Function","Encryption","getEncryptedString","decryptSecretString","decryptedSecret","decryptEncSecret","encData","decryptedData","JSON","getEncryptionStatus","updateEncryptionPassword","setEncryptionKeyId","getEncryptionKeyId","KeyUtilities","dec2hex","hex2dec","hex2str","str","leftpad","base32tohex","base32","val","chunk","base26","num","chars","output","cryptoJsWordArrayToUint8Array","period","clockOffset","b26","OTPType","totp","hotp","hhex","battle","steam","epoch","alg","hmacObj","OTPAlgorithm","GOST3411_2012_256","GOST3411_2012_512","OTPUtil","getOTPAlgorithmSpec","otp","StorageLocation","LocalUserSettingsDataKeys","UserSettings","updateItems","getAllItems","convertFromLocalStorage","location","settings","isBooleanOption","isNumberOption","isJSONOption","storageLocation","commitItems","Local","chrome","storage","syncableSettings","localSettings","splitSettings","Sync","removeItem","getStorageData","includes","storageData","assign","CodeState","DataType","otpAlgorithm","OTPEntry","code","account","digits","pinned","encSecret","randomUUID","EntryStorage","changeEncryption","applyEncryption","dataType","console","warn","delete","genUUID","Invalid","Encrypted","BrowserStorage","getStorageLocation","managedLocation","ManagedStorage","amountSync","amountLocal","local","LocalStorage","sync","itemId","removeOtherData","getKeys","isOldKey","record","isKey","remove","clearLogs","clear","Boolean","getOTPStorageFromEntry","unencrypted","EncOTPStorage","storageItem","OTPStorage","ensureUniqueIndex","tempEntryArray","isValidEntry","previous","mergedData","isOTPStorage","log","hasEncryptionKey","getExport","exportData","backupGetExport","import","rawAlgorithm","entryData","secretMatches","defaultValue","managedStoragePromise","managed","runtime","lastError","timeoutPromise","setTimeout","race","Dropbox","getToken","dropboxToken","upload","dropboxEncrypted","backup","token","xhr","XMLHttpRequest","apiArg","toISOString","autorename","open","setRequestHeader","onreadystatechange","readyState","dropboxRevoked","responseText","send","getUser","email","Drive","driveToken","navigator","userAgent","identity","removeCachedAuthToken","refreshToken","getAuthToken","interactive","scopes","driveRevoked","driveRefreshToken","error_description","access_token","getFolder","driveFolder","trashed","mimeType","driveEncrypted","folderId","requestDataPrototype","parents","requestData","line","user","OneDrive","oneDriveToken","oneDriveRefreshToken","oneDriveRevoked","oneDriveBusiness","oneDriveEncrypted","userPrincipalName","isMatchedEntry","siteName","issuerHostMatches","siteTitle","siteNameFromHost","siteHost","getCurrentTab","queryOptions","active","windowId","windows","getCurrent","tab","tabs","query","okToInjectContentScript","url","startsWith","byteArray2Base32","bytes","hasDataInLow","padlen","byteArray2String","subBytesArray","subBytes","isFirefox","isChrome","contentTab","getTotp","text","silent","otpUrls","migrationUri","base64Data","byteData","wordArrayToByteArray","lines","lineLength","secretStart","secretLength","accountStart","accountLength","isserStart","isserLength","getOTPAuthPerLineFromOPTAuthMigration","sendMessage","getTotpPromises","otpUrl","failedCount","allSettled","uri","parameterPart","cachedPassphrase","cachedKeyId","session","uploadBackup","setAutolock","enforcedAutolock","alarms","delayInMinutes","autolock","updateContextMenu","permissions","contains","enableContextMenu","contextMenus","removeAll","i18n","getMessage","contexts","onClicked","addListener","windowType","popupUrl","getURL","height","onMessage","captureVisibleTab","getCapture","authUrl","redirUrl","getRedirectURL","launchWebAuthFlow","hashMatches","resData","kv","kvMatches","response","fetch","headers","Accept","json","refresh_token","getBackupToken","onAlarm","onInstalled","details","commands","onCommand","command","scripting","executeScript","target","tabId","files","insertCSS","URLSearchParams","document","search","titleFromQuery","urlFromQuery","hostname","URL","nameFromDomain","hostLevelUnits","getSiteName","matchedEntries","matched","getMatchedEntries"],"sourceRoot":""}