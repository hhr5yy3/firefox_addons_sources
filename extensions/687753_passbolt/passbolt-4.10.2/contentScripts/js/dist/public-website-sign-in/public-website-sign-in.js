/*! For license information please see public-website-sign-in.js.LICENSE.txt */
(()=>{var t,e={946:(t,e,s)=>{const n=s(815),r=s(207),i=s(627);n.scripting||(n.scripting=new r(n)),n.storage.session||(n.storage.session=new i),n.action||(n.action=n.browserAction),t.exports=n},207:t=>{t.exports=class{constructor(t){this.browser=t}async executeScript(t){return t.func?await this._insertJsFunc(t):this._insertJsFiles(t)}insertCSS(t){let e=null;const s=t.files;for(let n=s.length-1;n>=0;--n){const r={file:s[n],runAt:"document_end",frameId:t.target?.frameIds[0]};e=this._createCssCallback(t.target.tabId,r,e)}e&&e()}_createJsCallback(t,e,s){return()=>chrome.tabs.executeScript(t,e,s)}_createCssCallback(t,e,s){return()=>chrome.tabs.insertCSS(t,e,s)}_insertJsFiles(t){let e=null;const s=t.files;for(let n=s.length-1;n>=0;--n){const r={file:s[n],runAt:"document_end",frameId:t.target?.frameIds[0]};e=this._createJsCallback(t.target.tabId,r,e)}e&&e()}async _insertJsFunc(t){const e=JSON.stringify(t.args),s=`;${t.func.name}.apply(window, ${e});`,n={code:t.func.toString()+s,runAt:"document_end",frameId:t.target?.frameIds[0]},r=await this.browser.tabs.executeScript(t.target.tabId,n);return r?.map((t=>({result:t})))}}},627:t=>{t.exports=class{constructor(){this._storedData={}}async get(t){const e=typeof t;if("string"!==e&&"undefined"!==e)throw new Error(`Expected keys type of "string" but received an unsopprted type: ${e}`);return t?this._storedData[t]?{[t]:this._storedData[t]}:{}:this._storedData}async set(t){if("object"!=typeof t)throw new Error('Expected keys type of "object" but received an unsopprted type: '+typeof t);for(const e in t)this._storedData[e]=JSON.parse(JSON.stringify(t[e]))}async remove(t){delete this._storedData[t]}async clear(){this._storedData={}}}},951:(t,e,s)=>{"use strict";const n=new class{constructor(){this.bindCallbacks()}initialize(){this.addClassToDomElement(),this.handlePortDestroyEvent(),this.handlePublicWebsiteClickEvent()}bindCallbacks(){this.handlePublicWebsiteClickEvent=this.handlePublicWebsiteClickEvent.bind(this),this.destroy=this.destroy.bind(this)}addClassToDomElement(){document.documentElement.classList.add("passbolt-extension")}async handlePublicWebsiteClickEvent(){document.documentElement.addEventListener("click",this.redirectToSignIn,!0)}redirectToSignIn(t){"extension-sign-in"===t.target.id&&port.request("passbolt.extension.sign-in-url")}destroy(){document.documentElement.removeEventListener("click",this.redirectToSignIn,!0),document.documentElement.classList.remove("passbolt-extension")}handlePortDestroyEvent(){port.on("passbolt.content-script.destroy",this.destroy),port.onConnectError(this.destroy)}},r=async function(){n.initialize()};var i=s(11);const o=class{constructor(){this._locked=!1,this._queue=[]}acquire(){return this._locked?new Promise((t=>this._queue.push(t))):(this._locked=!0,Promise.resolve())}release(){const t=this._queue.shift();t?t():this._locked=!1}};var c=s(946);const a=class{constructor(t){if(this._listeners={},this.lock=new o,this.onConnectErrorHandler={},void 0===t)throw Error("A port name is required.");if("string"!=typeof t)throw Error("The port name should be a valid string.");this._name=t}connect(){let t;const e=new Promise((e=>{t=e}));try{this._port=c.runtime.connect({name:this._name})}catch(t){throw this.onConnectErrorHandler.callback(),t}return this._connected=!0,this.initListener(),this.once("passbolt.port.ready",t),e}initListener(){this._port.onDisconnect.addListener((()=>{console.warn(`port disconnected from addon code: ${this._name}`),this._connected=!1})),this._port.onMessage.addListener((t=>{this._onMessage(t)}))}_onMessage(t){const e=JSON.parse(t),s=e[0];if(Array.isArray(this._listeners[s])){const t=this._listeners[s];for(let n=0;n<t.length;n++){const r=t[n],i=Array.prototype.slice.call(e,1);r.callback.apply(this,i),r.once&&(this._listeners[s].splice(n,1),0===this._listeners[s].length&&delete this._listeners[s],n--)}}}_addListener(t,e,s){Array.isArray(this._listeners[t])||(this._listeners[t]=[]),this._listeners[t].push({name:t,callback:e,once:s})}on(t,e){this._addListener(t,e,!1)}once(t,e){this._addListener(t,e,!0)}async emit(...t){const e=JSON.stringify(t);await this.connectIfDisconnected(),this._port.postMessage(e)}request(t,...e){const s=(0,i.A)(),n=[t,s].concat(e);return new Promise(((t,e)=>{this.once(s,((s,...n)=>{"SUCCESS"===s?t.apply(null,n):"ERROR"===s&&e.apply(null,n)})),this.emit.apply(this,n)}))}async connectIfDisconnected(){try{await this.lock.acquire(),this._connected||await this.connect()}finally{this.lock.release()}}onConnectError(t){this.onConnectErrorHandler.callback=t}};!async function(){self.port=new a(self.portname),port.on("passbolt.port.check",(t=>self.port.emit(t,"SUCCESS"))),await self.port.connect(),r()}()}},s={};function n(t){var r=s[t];if(void 0!==r)return r.exports;var i=s[t]={exports:{}};return e[t].call(i.exports,i,i.exports,n),i.exports}n.m=e,t=[],n.O=(e,s,r,i)=>{if(!s){var o=1/0;for(d=0;d<t.length;d++){for(var[s,r,i]=t[d],c=!0,a=0;a<s.length;a++)(!1&i||o>=i)&&Object.keys(n.O).every((t=>n.O[t](s[a])))?s.splice(a--,1):(c=!1,i<o&&(o=i));if(c){t.splice(d--,1);var l=r();void 0!==l&&(e=l)}}return e}i=i||0;for(var d=t.length;d>0&&t[d-1][2]>i;d--)t[d]=t[d-1];t[d]=[s,r,i]},n.d=(t,e)=>{for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t={854:0};n.O.j=e=>0===t[e];var e=(e,s)=>{var r,i,[o,c,a]=s,l=0;if(o.some((e=>0!==t[e]))){for(r in c)n.o(c,r)&&(n.m[r]=c[r]);if(a)var d=a(n)}for(e&&e(s);l<o.length;l++)i=o[l],n.o(t,i)&&t[i]&&t[i][0](),t[i]=0;return n.O(d)},s=self.contentScriptBrowserIntegrationChunkLoadingGlobal=self.contentScriptBrowserIntegrationChunkLoadingGlobal||[];s.forEach(e.bind(null,0)),s.push=e.bind(null,s.push.bind(s))})();var r=n.O(void 0,[96],(()=>n(951)));r=n.O(r)})();