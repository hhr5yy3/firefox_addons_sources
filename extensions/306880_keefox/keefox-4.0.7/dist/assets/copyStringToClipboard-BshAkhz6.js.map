{"version":3,"file":"copyStringToClipboard-BshAkhz6.js","sources":["../../../src/common/copyStringToClipboard.ts"],"sourcesContent":["import { KeeLog } from \"./Logger\";\nimport { isChrome, isExtensionContext } from \"webext-detect-page\";\n\n// https://issues.chromium.org/issues/40738001\n// https://developer.chrome.com/docs/extensions/reference/api/offscreen\n// https://issues.chromium.org/issues/40252021\n\nexport async function copyStringToClipboard(value: string) {\n    if (isChrome && isExtensionContext) {\n        try {\n            await mv3ClipboardWorkaround(value);\n            return;\n        } catch (e) {\n            KeeLog.error(\"Failed to write to clipboard using MV3 offscreen workaround\");\n        }\n    }\n    try {\n        // Actually I think isExtensionContext is true for the popup and that this operation\n        // will work within that context because the user has focus but hopefully the MV3\n        // workaround works fine in that situation too.\n        await navigator.clipboard.writeText(value);\n    } catch (e) {\n        try {\n            // Fallback to old textarea hack if required.\n            // See https://github.com/kee-org/browser-addon/issues/273\n            // and https://bugs.chromium.org/p/chromium/issues/detail?id=874848\n            const copyFrom = document.createElement(\"textarea\");\n            copyFrom.textContent = value;\n            const body = document.getElementsByTagName(\"body\")[0];\n            body.appendChild(copyFrom);\n            copyFrom.select();\n            document.execCommand(\"copy\");\n            body.removeChild(copyFrom);\n            KeeLog.info(\"Failed to write to clipboard using modern API so used the fallback hack\");\n        } catch (e2) {\n            KeeLog.error(\"Failed to write to clipboard using modern API and fallback hack\");\n        }\n    }\n}\n\nasync function mv3ClipboardWorkaround(value: string) {\n    await chrome.offscreen.createDocument({\n        url: chrome.runtime.getURL(\"lib/copyToClipboard.html\"),\n        reasons: [chrome.offscreen.Reason.CLIPBOARD],\n        justification: \"Required by Chromium to copy text.\"\n    });\n    chrome.runtime.sendMessage({\n        type: \"copy-data-to-clipboard\",\n        target: \"offscreen-doc\",\n        data: value\n    });\n}\n"],"names":[],"mappings":";;AAOA,eAAsB,sBAAsB,OAAe;AACvD,MAAI,YAAY,oBAAoB;AAC5B,QAAA;AACA,YAAM,uBAAuB,KAAK;AAClC;AAAA,aACK,GAAG;AACR,aAAO,MAAM,6DAA6D;AAAA,IAC9E;AAAA,EACJ;AACI,MAAA;AAIM,UAAA,UAAU,UAAU,UAAU,KAAK;AAAA,WACpC,GAAG;AACJ,QAAA;AAIM,YAAA,WAAW,SAAS,cAAc,UAAU;AAClD,eAAS,cAAc;AACvB,YAAM,OAAO,SAAS,qBAAqB,MAAM,EAAE,CAAC;AACpD,WAAK,YAAY,QAAQ;AACzB,eAAS,OAAO;AAChB,eAAS,YAAY,MAAM;AAC3B,WAAK,YAAY,QAAQ;AACzB,aAAO,KAAK,yEAAyE;AAAA,aAChF,IAAI;AACT,aAAO,MAAM,iEAAiE;AAAA,IAClF;AAAA,EACJ;AACJ;AAEA,eAAe,uBAAuB,OAAe;AAC3C,QAAA,OAAO,UAAU,eAAe;AAAA,IAClC,KAAK,OAAO,QAAQ,OAAO,0BAA0B;AAAA,IACrD,SAAS,CAAC,OAAO,UAAU,OAAO,SAAS;AAAA,IAC3C,eAAe;AAAA,EAAA,CAClB;AACD,SAAO,QAAQ,YAAY;AAAA,IACvB,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,MAAM;AAAA,EAAA,CACT;AACL;"}