(()=>{"use strict";var e,t={6162:(e,t,a)=>{a(3416);var n=a(4272),r=(a(2269),a(2028)),o=(a(1886),a(5777)),i=(a(9522),a(6520)),l=(a(4239),a(9676)),s=(a(4852),a(2530)),c=(a(8032),a(4041)),d=a(7294),h=a(3935),u=a(1795),p=a.n(u),g=a(5893);function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function v(e,t,a){return(t=b(t))in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function m(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,b(n.key),n)}}function b(e){var t=function(e,t){if("object"!=f(e)||!e)return e;var a=e[Symbol.toPrimitive];if(void 0!==a){var n=a.call(e,t||"default");if("object"!=f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==f(t)?t:String(t)}function y(e,t){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},y(e,t)}function S(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=k(e);if(t){var r=k(this).constructor;a=Reflect.construct(n,arguments,r)}else a=n.apply(this,arguments);return function(e,t){if(t&&("object"===f(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return x(e)}(this,a)}}function x(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var j=c.Z.Option,w=s.ZP.Group,C="0123456789abcdefghijklmnopqrstuvwxyz".toUpperCase().split(""),O=JSON.parse(localStorage.msObj),A=["slack","trello","github","jira"],N=function(e){return(0,g.jsxs)("div",{className:"shortcut-section",children:[(0,g.jsx)("div",{className:"shortcut-title",children:(0,g.jsx)(l.Z,{checked:e.checked,value:e.id,onChange:e.handleCheckBoxChange,children:e.name})}),(0,g.jsxs)("div",{className:"shortcut-option",children:["Ctrl + ",e.isWin?"Alt":"Shift"," + ",(0,g.jsx)(c.Z,{size:"small",defaultValue:e.dValue,onChange:e.handleSelectChange.bind(null,e.id),children:e.optionArray.map((function(t){return(0,g.jsx)(j,{value:t,disabled:-1!==e.disableKey.indexOf(t),children:t},t)}))})]})]})},P=function(e){return(0,g.jsxs)("div",{className:"section",children:[(0,g.jsx)("div",{className:"section-title",children:e.title}),(0,g.jsx)("div",{className:"section-content",children:e.children})]})},R=function(e){var t=e.desc?"hasDesc":"";return(0,g.jsxs)("div",{className:"section-option horizontal ".concat(t),children:[(0,g.jsxs)("div",{className:"label",children:[e.label,(0,g.jsx)("div",{className:"desc",children:e.desc})]}),(0,g.jsx)("div",{className:"action-area",children:e.children}),(0,g.jsx)("div",{className:"more",children:e.more})]})},D=function(e){return(0,g.jsxs)("div",{className:"section-option vertical",children:[(0,g.jsx)("div",{className:"label",children:e.label}),(0,g.jsx)("div",{className:"action-area",children:e.children})]})},Z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&y(e,t)}(h,e);var t,a,c,d=S(h);function h(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,h),(t=d.call(this,e)).state={format:localStorage.format,delaySec:localStorage.delay_sec,isGmailBtn:"true"===localStorage["gmail-btn"],isGoogleDriveShare:"true"===localStorage["is-google-drive-share"],isDarkMode:"true"===localStorage["dark-mode"],isSkipAnnotate:"true"===localStorage["skip-annotate"],isResizeForRetina:"true"===localStorage["resize-for-retina"],isSaveAs:"true"===localStorage["save-as"],visible:O.visible.enable,selected:O.selected.enable,entire:O.entire.enable,visibleKey:O.visible.key,selectedKey:O.selected.key,entireKey:O.entire.key,removePrintWatermark:"true"===localStorage["remove-print-watermark"],downloadDirectory:localStorage.download_directory||"",popupTab:localStorage.popupTab||"screenshot",isAddUrl:"true"===localStorage["add-url"],expandLink:"true"===localStorage["expand-link"],slackExpandLink:"true"===localStorage["expand-link-slack"],trelloExpandLink:"true"===localStorage["expand-link-trello"],asanaExpandLink:"true"===localStorage["expand-link-asana"],githubExpandLink:"true"===localStorage["expand-link-github"],jiraExpandLink:"true"===localStorage["expand-link-jira"],gmailExpandLink:"true"===localStorage["expand-link-gmail"]},t.handleRadioChange=t.handleRadioChange.bind(x(t)),t.handleCheckBoxChange=t.handleCheckBoxChange.bind(x(t)),t.handleSwitchChange=t.handleSwitchChange.bind(x(t)),t.handleSelectChange=t.handleSelectChange.bind(x(t)),t.handleInputChange=t.handleInputChange.bind(x(t)),t}return t=h,(a=[{key:"handleSelectChange",value:function(e,t){if("visible"===e||"selected"===e||"entire"===e){O[e].key=t;var a="".concat(e,"Key");this.setState(v({},a,t)),localStorage.msObj=JSON.stringify(O),chrome.runtime.sendMessage({action:"update_shortcuts"})}}},{key:"handleRadioChange",value:function(e){var t=e.target.name;"format"===t?(this.setState({format:e.target.value}),localStorage.format=e.target.value):"delay_sec"===t?(this.setState({delaySec:e.target.value}),localStorage.delay_sec=e.target.value):"popupTab"===t&&(this.setState({popupTab:e.target.value}),localStorage.popupTab=e.target.value)}},{key:"handleInputChange",value:function(e,t){var a=t.target.value;this.setState(v({},e,a)),localStorage.download_directory=a}},{key:"handleSwitchChange",value:function(e,t){var a=t.target.value;"gmailBtn"===a?(localStorage["gmail-btn"]=e,this.setState({isGmailBtn:e})):"visible"===a||"selected"===a||"entire"===a?(O[a].enable=e,this.setState(v({},a,e)),localStorage.msObj=JSON.stringify(O)):"darkMode"===a?(localStorage["dark-mode"]=e,this.setState({isDarkMode:e})):"removePrintWatermark"===a?(localStorage["remove-print-watermark"]=e,this.setState({removePrintWatermark:e})):"googleDriveShare"===a?(localStorage["is-google-drive-share"]=e,this.setState({isGoogleDriveShare:e})):"skipAnnotate"===a?(localStorage["skip-annotate"]=e,this.setState({isSkipAnnotate:e})):"saveAs"===a?(localStorage["save-as"]=e,this.setState({isSaveAs:e})):"resizeForRetina"===a?(localStorage["resize-for-retina"]=e,this.setState({isResizeForRetina:e})):"addUrl"===a?(localStorage["add-url"]=e,this.setState({isAddUrl:e})):"expandLink"===a&&(localStorage["expand-link"]=e,this.setState({expandLink:e}))}},{key:"handleCheckBoxChange",value:function(e){var t=e.target.value,a=e.target.checked;if("visible"===t||"selected"===t||"entire"===t)O[t].enable=a,this.setState(v({},t,a)),localStorage.msObj=JSON.stringify(O);else if(/expand-link-/.test(t)){var n=t.match(/expand-link-(.*)/)[1];this.setState(v({},"".concat(n,"ExpandLink"),a)),localStorage[t]=a}}},{key:"render",value:function(){var e=this,t=this.state,a=t.format,c=t.delaySec,d=(t.isGmailBtn,t.visible),h=t.selected,u=t.entire,f=t.visibleKey,v=t.selectedKey,m=t.entireKey,b=t.downloadDirectory,y=t.isDarkMode,S=t.isSkipAnnotate,x=t.isGoogleDriveShare,k=t.isSaveAs,j=t.isResizeForRetina,O=(t.popupTab,t.isAddUrl),Z=t.expandLink,E=[{id:"visible",name:"Capture Visible",checked:d,dValue:f,disableKey:[v,m],optionArray:C},{id:"selected",name:"Capture Selected Area",checked:h,dValue:v,disableKey:[f,m],optionArray:C},{id:"entire",name:"Capture Entire",checked:u,dValue:m,disableKey:[v,f],optionArray:C}];return g.Fragment,o.Z,i.Z,(0,g.jsxs)("div",{className:"main",children:[(0,g.jsx)("div",{className:"top",children:(0,g.jsx)("div",{className:"logo",children:(0,g.jsx)("a",{href:"https://www.awesomescreenshot.com"})})}),(0,g.jsxs)("div",{className:"options-container",children:[(0,g.jsxs)(P,{title:"Capture Preferences",children:[(0,g.jsx)(D,{label:"Customize Shortcuts",children:E.map((function(t){return(0,g.jsx)(N,{name:t.name,id:t.id,isWin:p().os&&p().os.family&&p().os.family.includes("Windows"),checked:t.checked,dValue:t.dValue,disableKey:t.disableKey,optionArray:t.optionArray,handleCheckBoxChange:e.handleCheckBoxChange,handleSelectChange:e.handleSelectChange},t.name)}))}),(0,g.jsx)(R,{label:"Countdown Timer Set to",children:(0,g.jsxs)(w,{name:"delay_sec",value:c,onChange:this.handleRadioChange,children:[(0,g.jsx)(s.ZP,{value:"3",children:"3s"}),(0,g.jsx)(s.ZP,{value:"5",children:"5s"})]})})]}),(0,g.jsxs)(P,{title:"Saving Preferences",children:[(0,g.jsx)(R,{label:"Default Image Format",children:(0,g.jsxs)(w,{value:a,name:"format",onChange:this.handleRadioChange,children:[(0,g.jsx)(s.ZP,{value:"png",children:"PNG"}),(0,g.jsx)(s.ZP,{value:"jpg",children:"JPG"})]})}),(0,g.jsx)(R,{label:"Skip editing when capturing entire page",children:(0,g.jsx)(r.Z,{value:"skipAnnotate",checked:S,onChange:this.handleSwitchChange})}),(0,g.jsx)(R,{label:"Always get shareable links for images uploaded to Google Drive",children:(0,g.jsx)(r.Z,{value:"googleDriveShare",checked:x,onChange:this.handleSwitchChange})}),(0,g.jsx)(R,{label:"Show Save-As window to choose location for downloads",desc:"Note: to use this feature, you need to Allow Awesome Screenshot to manage Downloads when permission request window pops up. And only when this option is turned on, can you specify default subfolder to save screenshots to your local disk. Defaults to the Downloads folder if you don’t specify a subfolder.",more:(0,g.jsx)(g.Fragment,{children:(0,g.jsx)(o.Z,{trigger:["focus"],title:"Only letters, numbers, dashes, underscores, and slashes are allowable.  Invalid characters will be removed.",placement:"top",children:(0,g.jsx)(n.Z,{defaultValue:b,onChange:this.handleInputChange.bind(null,"downloadDirectory"),placeholder:"e.g., AwesomeScreenshot",addonBefore:"Downloads/"})})}),children:(0,g.jsx)(r.Z,{value:"saveAs",checked:k,onChange:this.handleSwitchChange})}),(0,g.jsx)(R,{label:"Add Date and URL to a screenshot after clicking Done",children:(0,g.jsx)(r.Z,{value:"addUrl",checked:O,onChange:this.handleSwitchChange})})]}),(0,g.jsxs)(P,{title:"More Options",children:[(0,g.jsx)(R,{label:"Enable dark mode for extension's popup menu",children:(0,g.jsx)(r.Z,{value:"darkMode",checked:y,onChange:this.handleSwitchChange})}),(0,g.jsx)(R,{label:"Resize a screenshot to 50% of its original size for Retina screen",children:(0,g.jsx)(r.Z,{value:"resizeForRetina",checked:j,onChange:this.handleSwitchChange})}),(0,g.jsx)(R,{label:"Play video on the page",desc:"Turning on this option allows you to watch any Awesome Screenshot video with a shareable link right on the page you are on, in any of the following platforms, without jumping to a new tab. You can manage your preferences for these platforms by selecting or deselecting the checkbox besides their names.",more:(0,g.jsx)(g.Fragment,{children:Z&&(0,g.jsx)("div",{className:"link-expanding-support",children:A.map((function(t){return(0,g.jsx)("div",{className:"support-item ".concat(t),children:(0,g.jsx)(l.Z,{checked:e.state["".concat(t,"ExpandLink")],value:"expand-link-".concat(t),onChange:e.handleCheckBoxChange,children:(0,g.jsx)("div",{className:"support-item-inner ".concat(t)})})},t)}))})}),children:(0,g.jsx)(r.Z,{value:"expandLink",checked:Z,onChange:this.handleSwitchChange})})]})]})]})}}])&&m(t.prototype,a),c&&m(t,c),Object.defineProperty(t,"prototype",{writable:!1}),h}(d.Component);h.render((0,g.jsx)(Z,{}),document.getElementById("option-page"))}},a={};function n(e){var r=a[e];if(void 0!==r)return r.exports;var o=a[e]={id:e,loaded:!1,exports:{}};return t[e].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}n.m=t,e=[],n.O=(t,a,r,o)=>{if(!a){var i=1/0;for(d=0;d<e.length;d++){for(var[a,r,o]=e[d],l=!0,s=0;s<a.length;s++)(!1&o||i>=o)&&Object.keys(n.O).every((e=>n.O[e](a[s])))?a.splice(s--,1):(l=!1,o<i&&(i=o));if(l){e.splice(d--,1);var c=r();void 0!==c&&(t=c)}}return t}o=o||0;for(var d=e.length;d>0&&e[d-1][2]>o;d--)e[d]=e[d-1];e[d]=[a,r,o]},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={728:0};n.O.j=t=>0===e[t];var t=(t,a)=>{var r,o,[i,l,s]=a,c=0;if(i.some((t=>0!==e[t]))){for(r in l)n.o(l,r)&&(n.m[r]=l[r]);if(s)var d=s(n)}for(t&&t(a);c<i.length;c++)o=i[c],n.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return n.O(d)},a=self.webpackChunkAwesomeScreenshot=self.webpackChunkAwesomeScreenshot||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),n.O(void 0,[700,733,402,259],(()=>n(2082)));var r=n.O(void 0,[700,733,402,259],(()=>n(6162)));r=n.O(r)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,