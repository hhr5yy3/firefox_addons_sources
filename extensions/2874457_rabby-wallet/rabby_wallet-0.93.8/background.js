(()=>{var e,t,s,a,n,r={855944:(e,t,s)=>{"use strict";s.d(t,{Z:()=>a});s(667294);const a=s.p+"generated/svgs/063dcdf359d1cd6ae04e8b51047c16fa.svg"},572875:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>l});var n=s(150361),r=s.n(n),i=s(737820),o=s(330122),c=e([i]);i=(c.then?(await c)():c)[0];var d=function(e,t,s,a){var n,r=arguments.length,i=r<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,s):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,s,a);else for(var o=e.length-1;o>=0;o--)(n=e[o])&&(i=(r<3?n(i):r>3?n(t,s,i):n(t,s))||i);return r>3&&i&&Object.defineProperty(t,s,i),i},h=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class u{constructor(){this.getCurrentAccount=async()=>{let e=i.$8.getCurrentAccount();if(e){(await this.getAccounts()).find((t=>(0,o.Wr)(e.address,t.address)))||(e=void 0)}if(!e){if([e]=await this.getAccounts(),!e)return null;i.$8.setCurrentAccount(e)}return r()(e)},this.syncGetCurrentAccount=()=>i.$8.getCurrentAccount()||null,this.getAccounts=()=>i.fh.getAllVisibleAccountsArray()}}d([Reflect.metadata("PRIVATE",!0),h("design:type",Object)],u.prototype,"getCurrentAccount",void 0),d([Reflect.metadata("PRIVATE",!0),h("design:type",Object)],u.prototype,"syncGetCurrentAccount",void 0),d([Reflect.metadata("PRIVATE",!0),h("design:type",Object)],u.prototype,"getAccounts",void 0);const l=u;a()}catch(e){a(e)}}))},649778:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{G:()=>n.Z,d:()=>r.Z});var n=s(752974),r=s(666935),i=e([n,r]);[n,r]=i.then?(await i)():i,a()}catch(e){a(e)}}))},71523:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>W});var n=s(625284),r=s(539666),i=s(2832),o=s.n(i),c=s(866052),d=s(771210),h=s(222751),u=s(118269),l=s(179826),p=s(350144),g=s(150361),y=s.n(g),m=s(737820),w=s(244093),T=s(666935),f=s(177447),A=s(836612),C=s(572875),S=s(350792),v=s(625399),b=s(244431),P=s.n(b),I=s(365432),E=s(969007),k=s(478051),x=s(638591),L=s(496486),N=s(878170),D=e([n,m,T,A,C,x,N]);[n,m,T,A,C,x,N]=D.then?(await D)():D;var _=function(e,t,s,a){var n,r=arguments.length,i=r<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,s):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,s,a);else for(var o=e.length-1;o>=0;o--)(n=e[o])&&(i=(r<3?n(i):r>3?n(t,s,i):n(t,s))||i);return r>3&&i&&Object.defineProperty(t,s,i),i},O=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};const R=e=>{const{method:t,account:s,success:a}=e;(0,n.m)({category:"SignText",action:"completeSignText",label:[f.tH[s.type],s.brandName,a].join("|")}),v.Z.report("completeSignText",{type:s.brandName,category:f.tH[s.type],method:t,success:a})},B=({data:{params:[e,t]}})=>{const s=m.$8.getCurrentAccount()?.address.toLowerCase();if(t.toLowerCase()!==s)throw l.ethErrors.rpc.invalidParams("from should be same as current address")},M=({data:{params:[e,t]},session:s})=>{let a;try{a=JSON.parse(t)}catch(e){throw l.ethErrors.rpc.invalidParams("data is not a validate JSON string")}const n=m.Pv.isInternalOrigin(s.origin)?(0,E.Ed)({id:a.domain.chainId})?.enum:m.Pv.getConnectedSite(s.origin)?.chain;if(a.domain.chainId){const e=(0,E.Xj)(n);if(!n||e&&Number(a.domain.chainId)!==e.id)throw l.ethErrors.rpc.invalidParams("chainId should be same as current chainId")}const r=m.$8.getCurrentAccount()?.address.toLowerCase();if(e.toLowerCase()!==r)throw l.ethErrors.rpc.invalidParams("from should be same as current address")};class K extends C.Z{constructor(){super(...arguments),this.ethRpc=(e,t)=>{const{data:{method:s,params:a},session:{origin:n}}=e;let r=n;if(!m.Pv.hasPermission(r)&&!f.$c.includes(s))throw l.ethErrors.provider.unauthorized();const i=m.Pv.getSite(r);if("net_version"===s){if(!i?.isConnected)return Promise.resolve("1");r=f.NI}let o=f.zG[f.h.ETH].serverId;i&&(o=(0,E.Ed)({enum:i.chain})?.serverId||f.zG[f.h.ETH].serverId),t&&(o=t);const c=m.$8.getCurrentAccount()?.address.toLowerCase()||"0x",d=w.Z.get(c,{method:s,params:a,chainId:o});if(d)return d;const h=(0,E.Ed)({serverId:o});if(h.isTestnet){const e=(0,E.Ed)({serverId:o});return x.j.getClient(e.id).request({method:s,params:a})}if(m.q3.hasCustomRPC(h.enum)){const e=m.q3.requestCustomRPC(h.enum,s,a).then((e=>(w.Z.set(c,{method:s,params:a,result:e,chainId:o}),e)));return w.Z.set(c,{method:s,params:a,result:e,chainId:o}),e}{const e=m.hs.ethRpc(o,{origin:encodeURIComponent(r),method:s,params:a}).then((e=>(w.Z.set(c,{method:s,params:a,result:e,chainId:o}),e)));return w.Z.set(c,{method:s,params:a,result:e,chainId:o}),e}},this.ethRequestAccounts=async({session:{origin:e}})=>{if(!m.Pv.hasPermission(e))throw l.ethErrors.provider.unauthorized();const t=await this.getCurrentAccount(),s=t?[t.address.toLowerCase()]:[];m.Fc.broadcastEvent("accountsChanged",s);const a=m.Pv.getConnectedSite(e);if(a){const t=(0,E.Ed)({enum:a.chain});t&&(0,N.Lr)({origin:e,chain:t})}return s},this.ethAccounts=async({session:{origin:e}})=>{if(!m.Pv.hasPermission(e)||!T.Z.isUnlocked())return[];const t=await this.getCurrentAccount();return t?[t.address.toLowerCase()]:[]},this.ethCoinbase=async({session:{origin:e}})=>{if(!m.Pv.hasPermission(e))return null;const t=await this.getCurrentAccount();return t?t.address.toLowerCase():null},this.ethChainId=({session:e})=>{const t=e.origin,s=m.Pv.getWithoutUpdate(t);return(0,E.Xj)(s?.chain,{fallback:f.h.ETH}).hex},this.ethSendTransaction=async e=>{if(e.pushed)return e.result;const{data:{params:[t]},session:{origin:s},approvalRes:a}=y()(e),n=await this._checkAddress(t.from),u=!!t.isSend,l=!!t.isSpeedUp,p=!!t.isCancel,g=a.extra,w=a.signingTxId,T=!!t.isCoboSafe,C=a.pushType||"default",b=a.lowGasDeadline,P=a.reqId,I=a.isGasLess||!1,L=a.logId||"",N=a.isGasAccount||!1;let D=!1;delete t.isSend,delete t.isSwap,delete t.swapPreferMEVGuarded,delete a.isSend,delete a.isSwap,delete a.address,delete a.type,delete a.uiRequestComponent,delete a.traceId,delete a.extra,delete a.$ctx,delete a.signingTxId,delete a.pushType,delete a.lowGasDeadline,delete a.reqId,delete t.isCoboSafe,delete a.isGasLess,delete a.logId,delete a.isGasAccount;let _=(0,S.BI)(a);_&&a.maxFeePerGas===a.maxPriorityFeePerGas&&(a.gasPrice=a.maxFeePerGas,delete a.maxFeePerGas,delete a.maxPriorityFeePerGas,_=!1);const O=o().custom({chainId:a.chainId},{hardfork:i.Hardfork.London}),R={...a,gasLimit:a.gas};_&&(R.type="0x2");const B=c.TransactionFactory.fromTxData(R,{common:O}),M=m.$8.getCurrentAccount();let K;if(K=g,M.type===f.pY.GnosisKeyring){A.Z.currentProvider.currentAccount=a.account.address,A.Z.currentProvider.currentAccountType=a.account.type,A.Z.currentProvider.currentAccountBrand=a.account.brandName;try{K={provider:new d.Q(A.Z.currentProvider)}}catch(e){}}const W=m.Pv.isInternalOrigin(s)?(0,E.Ed)({id:a.chainId})?.enum:m.Pv.getConnectedSite(s).chain,F=m.Lh.getSigningTx(w);if(!F?.rawTx)throw new Error(`approvingTx not found: ${w}`);m.Lh.updateSigningTx(w,{isSubmitted:!0});const{explain:H,rawTx:Z,action:U}=F,G=(0,E.Xj)(W),$={signed:!1,signedSuccess:!1,submit:!1,submitSuccess:!1,type:M.brandName,chainId:G?.serverId||"",category:f.tH[M.type],preExecSuccess:!H||H.pre_exec.success&&H.calcSuccess,createdBy:e?.data?.$ctx?.ga?"rabby":"dapp",source:e?.data?.$ctx?.ga?.source||"",trigger:e?.data?.$ctx?.ga?.trigger||"",networkType:G?.isTestnet?"Custom Network":"Integrated Network",reported:!1};let j;try{j=await m.fh.signTransaction(n,B,t.from,K)}catch(e){const t="object"==typeof e?{message:e.message}:{message:e};throw t.method=f.FP.COMMON_HARDWARE.REJECTED,t}try{if(M.type===f.pY.GnosisKeyring||M.type===f.pY.CoboArgusKeyring)return D=!0,$.signed=!0,void($.signedSuccess=!0);const i=n=>{const{hash:r,reqId:i,pushType:o="default"}=n;e?.data?.$ctx?.stats?.afterSign?.length&&Array.isArray(e?.data?.$ctx?.stats?.afterSign)&&e.data.$ctx.stats.afterSign.forEach((({name:e,params:t})=>{e&&t&&v.Z.report(e,t)}));const{r:c,s:d,v:l,...p}=a;r&&(m.wj.postSwap(W,r,p),m.zn.postBridge(W,r,p)),$.submit=!0,$.submitSuccess=!0,u&&m.dh.clear();const g={...Z,...a,r:(0,h.bufferToHex)(j.r),s:(0,h.bufferToHex)(j.s),v:(0,h.bufferToHex)(j.v)};_?delete g.gasPrice:(delete g.maxPriorityFeePerGas,delete g.maxFeePerGas),m.Lh.addTx({tx:{rawTx:g,createdAt:Date.now(),isCompleted:!1,hash:r,failed:!1,reqId:i,pushType:o},explain:H,actionData:U,origin:s,$ctx:e?.data?.$ctx,isDropFailed:!0}),m.Lh.removeSigningTx(w),r&&m.Hx.addTx(`${t.from}_${a.nonce}_${W}`,{nonce:a.nonce,hash:r,chain:W}),i&&!r&&m.dV.addTx(i,{reqId:i,address:t.from,chainId:(0,E.Ed)({enum:W}).id,nonce:a.nonce}),T&&m.$8.resetCurrentCoboSafeAddress()},o=t=>{e?.data?.$ctx?.stats?.afterSign?.length&&Array.isArray(e?.data?.$ctx?.stats?.afterSign)&&e.data.$ctx.stats.afterSign.forEach((({name:e,params:t})=>{e&&t&&v.Z.report(e,t)})),v.Z.report("submitTransaction",{type:M.brandName,chainId:G?.serverId||"",category:f.tH[M.type],success:!1,preExecSuccess:!H||H.pre_exec.success&&H.calcSuccess,createdBy:e?.data?.$ctx?.ga?"rabby":"dapp",source:e?.data?.$ctx?.ga?.source||"",trigger:e?.data?.$ctx?.ga?.trigger||"",networkType:G?.isTestnet?"Custom Network":"Integrated Network"}),l||p||m.Lh.addSubmitFailedTransaction({tx:{rawTx:a,createdAt:Date.now(),isCompleted:!0,hash:"",failed:!1,isSubmitFailed:!0},explain:H,origin:s});const n=t.details||t.message||JSON.stringify(t);throw m.BF.statsData?.signMethod&&($.signMethod=m.BF.statsData?.signMethod),m.BF.setStatsData($),new Error(n)};if("string"==typeof j)return i({hash:j,pushType:"default"}),M.type!==f.pY.WalletConnectKeyring&&M.type!==f.pY.CoinbaseKeyring||($.signed=!0,$.signedSuccess=!0),m.BF.statsData?.signMethod&&($.signMethod=m.BF.statsData?.signMethod),m.BF.setStatsData($),j;const d=c.TransactionFactory.fromTxData({...a,r:(0,h.addHexPrefix)(j.r),s:(0,h.addHexPrefix)(j.s),v:(0,h.addHexPrefix)(j.v),type:_?"0x2":"0x0"});d.verifySignature()||(d.v?d.s?d.r?r.Tb(new Error(`invalid signature, ${n.type}`)):r.Tb(new Error(`r missed, ${n.type}`)):r.Tb(new Error(`s missed, ${n.type}`)):r.Tb(new Error(`v missed, ${n.type}`))),D=!0,$.signed=!0,$.signedSuccess=!0,k.Z.emit(f.FP.broadcastToUI,{method:f.FP.TX_SUBMITTING});try{let e,t;if((0,S.zZ)(a),(0,E.Ed)({enum:W})?.isTestnet){const s=(0,E.Ed)({enum:W}),n={...a,gasLimit:a.gas,r:(0,h.addHexPrefix)(j.r),s:(0,h.addHexPrefix)(j.s),v:(0,h.addHexPrefix)(j.v)};_&&(n.type="0x2");const r=c.TransactionFactory.fromTxData(n),o=(0,h.bufferToHex)(r.serialize()),d=x.j.getClient(s.id);e=await d.request({method:"eth_sendRawTransaction",params:[o]}),i({hash:e,reqId:t,pushType:C}),m.BF.setStatsData($)}else if(m.q3.hasCustomRPC(W)){const s={...a,gasLimit:a.gas,r:(0,h.addHexPrefix)(j.r),s:(0,h.addHexPrefix)(j.s),v:(0,h.addHexPrefix)(j.v)};_&&(s.type="0x2");const n=c.TransactionFactory.fromTxData(s),r=(0,h.bufferToHex)(n.serialize());try{e=await m.q3.requestCustomRPC(W,"eth_sendRawTransaction",[r])}catch(e){let t="object"==typeof e?e.message:e;m.q3.hasCustomRPC(W)&&(t=`[From Custom RPC] ${t}`),o({...e,message:t})}i({hash:e,reqId:t,pushType:C}),m.BF.setStatsData($)}else{const n=await m.hs.submitTx({tx:{...a,r:(0,h.bufferToHex)(j.r),s:(0,h.bufferToHex)(j.s),v:(0,h.bufferToHex)(j.v),value:a.value||"0x0"},push_type:C,low_gas_deadline:b,req_id:P||"",origin:s,is_gasless:I,is_gas_account:N,log_id:L});e=n.req.tx_id||void 0,t=n.req.id||void 0,"failed"===n.req.push_status?o(new Error("Submit tx failed")):(i({hash:e,reqId:t,pushType:C}),m.BF.statsData?.signMethod&&($.signMethod=m.BF.statsData?.signMethod),m.BF.setStatsData($))}return e}catch(e){o(e)}}catch(e){throw D||($.signed=!0,$.signedSuccess=!1),m.BF.statsData?.signMethod&&($.signMethod=m.BF.statsData?.signMethod),m.BF.setStatsData($),"object"==typeof e?e:new Error(e)}},this.netVersion=e=>this.ethRpc({...e,data:{method:"net_version",params:[]}}),this.web3ClientVersion=()=>"Rabby/0.93.8",this.ethSign=()=>{throw new Error("Signing with 'eth_sign' can lead to asset loss. For your safety, Rabby does not support this method.")},this.personalSign=async({data:e,approvalRes:t,session:s})=>{if(!e.params)return;const a=m.$8.getCurrentAccount();if(a.type===f.pY.GnosisKeyring&&(0,L.isString)(t))return t;try{const[n,r]=e.params,i=(0,h.isHexString)(n)?n:(0,u.stringToHex)(n),o=await this._checkAddress(r),c=await m.fh.signPersonalMessage(o,{data:i,from:r},t?.extra);return m.$C.createHistory({address:r,text:n,origin:s.origin,type:"personalSign"}),R({account:a,method:"personalSign",success:!0}),c}catch(e){throw R({account:a,method:"personalSign",success:!1}),e}},this._signTypedData=async(e,t,s,a)=>{const n=await this._checkAddress(e);let r=t;return"V1"!==s&&"string"==typeof t&&(r=JSON.parse(t)),m.fh.signTypedMessage(n,{from:e,data:r},{version:s,...a||{}})},this.ethSignTypedData=async({data:{params:[e,t]},session:s,approvalRes:a})=>{const n=m.$8.getCurrentAccount();if(n.type===f.pY.GnosisKeyring&&(0,L.isString)(a))return a;try{const r=await this._signTypedData(t,e,"V1",a?.extra);return m.$C.createHistory({address:t,text:e,origin:s.origin,type:"ethSignTypedData"}),R({account:n,method:"ethSignTypedData",success:!0}),r}catch(e){throw R({account:n,method:"ethSignTypedData",success:!1}),e}},this.ethSignTypedDataV1=async({data:{params:[e,t]},session:s,approvalRes:a})=>{const n=m.$8.getCurrentAccount();if(n.type===f.pY.GnosisKeyring&&(0,L.isString)(a))return a;try{const r=await this._signTypedData(t,e,"V1",a?.extra);return m.$C.createHistory({address:t,text:e,origin:s.origin,type:"ethSignTypedDataV1"}),R({account:n,method:"ethSignTypedDataV1",success:!0}),r}catch(e){throw R({account:n,method:"ethSignTypedDataV1",success:!1}),e}},this.ethSignTypedDataV3=async({data:{params:[e,t]},session:s,approvalRes:a})=>{const n=m.$8.getCurrentAccount();if(n.type===f.pY.GnosisKeyring&&(0,L.isString)(a))return a;try{const r=await this._signTypedData(e,t,"V3",a?.extra);return m.$C.createHistory({address:e,text:t,origin:s.origin,type:"ethSignTypedDataV3"}),R({account:n,method:"ethSignTypedDataV3",success:!0}),r}catch(e){throw R({account:n,method:"ethSignTypedDataV3",success:!1}),e}},this.ethSignTypedDataV4=async({data:{params:[e,t]},session:s,approvalRes:a})=>{const n=m.$8.getCurrentAccount();if(n.type===f.pY.GnosisKeyring&&(0,L.isString)(a))return a;try{const r=await this._signTypedData(e,t,"V4",a?.extra);return m.$C.createHistory({address:e,text:t,origin:s.origin,type:"ethSignTypedDataV4"}),R({account:n,method:"ethSignTypedDataV4",success:!0}),r}catch(e){throw R({account:n,method:"ethSignTypedDataV4",success:!1}),e}},this.walletAddEthereumChain=({data:{params:[e]},session:{origin:t},approvalRes:s})=>{let a=e.chainId;a="number"==typeof a?(0,h.intToHex)(a).toLowerCase():`0x${new(P())(a).toString(16).toLowerCase()}`;const n=(0,E.Ed)({hex:a});if(!n)throw new Error("This chain is not supported by Rabby yet.");return s&&m.q3.setRPC(s.chain,s.rpcUrl),m.Pv.updateConnectSite(t,{chain:n.enum},!0),(0,N.Lr)({origin:t,chain:n}),null},this.walletSwitchEthereumChain=({data:{params:[e]},session:{origin:t}})=>{let s=e.chainId;s="number"==typeof s?(0,h.intToHex)(s).toLowerCase():`0x${new(P())(s).toString(16).toLowerCase()}`;const a=(0,E.Ed)({hex:s});if(!a)throw l.ethErrors.provider.custom({code:4902,message:`Unrecognized chain ID "${s}". Try adding the chain using wallet_switchEthereumChain first.`});return m.Pv.updateConnectSite(t,{chain:a.enum},!0),(0,N.Lr)({origin:t,chain:a}),null},this.walletWatchAsset=({approvalRes:e})=>{const{id:t,chain:s,chainId:a,symbol:n,decimals:r}=e,i=(0,E.Ed)({serverId:s});i?.isTestnet?x.j.addToken({chainId:a,symbol:n,decimals:r,id:t}):m.$8.addCustomizedToken({address:t,chain:s})},this.walletRequestPermissions=({data:{params:e}})=>{const t=[];return e&&"eth_accounts"in e[0]&&t.push({parentCapability:"eth_accounts"}),t},this.walletGetPermissions=({session:{origin:e}})=>{const t=[];return T.Z.isUnlocked()&&T.Z.getConnectedSite(e)&&t.push({parentCapability:"eth_accounts"}),t},this.walletRevokePermissions=({session:{origin:e},data:{params:t}})=>(T.Z.isUnlocked()&&T.Z.getConnectedSite(e)&&t?.[0]&&"eth_accounts"in t[0]&&T.Z.removeConnectedSite(e),null),this.personalEcRecover=({data:{params:[e,t,s={}]}})=>(0,p.recoverPersonalSignature)({...s,data:e,sig:t}),this.netListening=()=>!0,this._checkAddress=async e=>{let{address:t,type:s}=await this.getCurrentAccount()||{};if(t=t?.toLowerCase(),!t||t!==(0,p.normalize)(e).toLowerCase())throw l.ethErrors.rpc.invalidParams({message:"Invalid parameters: must use the current user address to sign"});return await m.fh.getKeyringForAccount(t,s)},this.ethGetEncryptionPublicKey=async({data:{params:[e]},session:{origin:t},approvalRes:s})=>s?.data,this.ethDecrypt=async({data:{params:[e,t]},session:{origin:s},approvalRes:a})=>a.data,this.ethGetTransactionByHash=async e=>{const{data:{params:[t]}}=e,s=m.Lh.getPendingTxByHash(t);return s?(0,I.c)(s):this.ethRpc({...e,data:{method:"eth_getTransactionByHash",params:[t]}})},this.walletImportAddress=async()=>null}}_([Reflect.metadata("PRIVATE",!0),O("design:type",Object)],K.prototype,"ethRpc",void 0),_([Reflect.metadata("SAFE",!0),O("design:type",Object)],K.prototype,"ethAccounts",void 0),_([Reflect.metadata("SAFE",!0),O("design:type",Object)],K.prototype,"ethChainId",void 0),_([Reflect.metadata("APPROVAL",["SignTx",({data:{params:[e]},session:t})=>{const s=m.$8.getCurrentAccount()?.address.toLowerCase(),a=m.Pv.isInternalOrigin(t.origin)?(0,E.Ed)({id:e.chainId}).enum:m.Pv.getConnectedSite(t.origin)?.chain;if(e.from.toLowerCase()!==s)throw l.ethErrors.rpc.invalidParams("from should be same as current address");if("chainId"in e&&(!a||Number(e.chainId)!==(0,E.Ed)({enum:a})?.id))throw l.ethErrors.rpc.invalidParams("chainId should be same as current chainId")}]),O("design:type",Object)],K.prototype,"ethSendTransaction",void 0),_([Reflect.metadata("SAFE",!0),O("design:type",Object)],K.prototype,"netVersion",void 0),_([Reflect.metadata("SAFE",!0),O("design:type",Object)],K.prototype,"web3ClientVersion",void 0),_([Reflect.metadata("APPROVAL",["ETHSign",()=>null,{height:390}]),O("design:type",Object)],K.prototype,"ethSign",void 0),_([Reflect.metadata("APPROVAL",["SignText",({data:{params:[e,t]}})=>{const s=m.$8.getCurrentAccount()?.address.toLowerCase();if(t.toLowerCase()!==s)throw l.ethErrors.rpc.invalidParams("from should be same as current address")}]),O("design:type",Object)],K.prototype,"personalSign",void 0),_([Reflect.metadata("PRIVATE",!0),O("design:type",Object)],K.prototype,"_signTypedData",void 0),_([Reflect.metadata("APPROVAL",["SignTypedData",B]),O("design:type",Object)],K.prototype,"ethSignTypedData",void 0),_([Reflect.metadata("APPROVAL",["SignTypedData",B]),O("design:type",Object)],K.prototype,"ethSignTypedDataV1",void 0),_([Reflect.metadata("APPROVAL",["SignTypedData",M]),O("design:type",Object)],K.prototype,"ethSignTypedDataV3",void 0),_([Reflect.metadata("APPROVAL",["SignTypedData",M]),O("design:type",Object)],K.prototype,"ethSignTypedDataV4",void 0),_([Reflect.metadata("APPROVAL",["AddChain",({data:{params:[e]},session:t})=>{if(!e)throw l.ethErrors.rpc.invalidParams("params is required but got []");if(!e.chainId)throw l.ethErrors.rpc.invalidParams("chainId is required");if(m.Pv.getConnectedSite(t.origin)&&(0,E.Ed)({id:e.chainId}))return!0},{height:650}]),O("design:type",Object)],K.prototype,"walletAddEthereumChain",void 0),_([Reflect.metadata("APPROVAL",["SwitchChain",({data:e,session:t})=>{if(!e.params[0])throw l.ethErrors.rpc.invalidParams("params is required but got []");if(!e.params[0]?.chainId)throw l.ethErrors.rpc.invalidParams("chainId is required");if(m.Pv.getConnectedSite(t.origin)){const{chainId:t}=e.params[0];if((0,E.Ed)({id:t}))return!0;throw l.ethErrors.provider.custom({code:4902,message:`Unrecognized chain ID "${t}". Try adding the chain using wallet_switchEthereumChain first.`})}},{height:650}]),O("design:type",Object)],K.prototype,"walletSwitchEthereumChain",void 0),_([Reflect.metadata("APPROVAL",["AddAsset",()=>null,{height:600}]),O("design:type",Object)],K.prototype,"walletWatchAsset",void 0),_([Reflect.metadata("SAFE",!0),O("design:type",Object)],K.prototype,"walletGetPermissions",void 0),_([Reflect.metadata("SAFE",!0),O("design:type",Object)],K.prototype,"walletRevokePermissions",void 0),_([Reflect.metadata("SAFE",!0),O("design:type",Object)],K.prototype,"netListening",void 0),_([Reflect.metadata("PRIVATE",!0),O("design:type",Object)],K.prototype,"_checkAddress",void 0),_([Reflect.metadata("APPROVAL",["GetPublicKey",({data:{params:[e]},session:{origin:t}})=>{const s=m.$8.getCurrentAccount();if(e?.toLowerCase()!==s?.address?.toLowerCase())throw l.ethErrors.rpc.invalidParams({message:"Invalid parameters: must use the current user address to sign"})},{height:390}]),O("design:type",Object)],K.prototype,"ethGetEncryptionPublicKey",void 0),_([Reflect.metadata("APPROVAL",["Decrypt",({data:{params:[e,t]},session:{origin:s}})=>null]),O("design:type",Object)],K.prototype,"ethDecrypt",void 0),_([Reflect.metadata("APPROVAL",["ImportAddress",({data:e})=>{if(!e.params[0])throw l.ethErrors.rpc.invalidParams("params is required but got []");if(!e.params[0]?.chainId)throw l.ethErrors.rpc.invalidParams("chainId is required")},{height:628}]),O("design:type",Object)],K.prototype,"walletImportAddress",void 0);const W=new K;a()}catch(e){a(e)}}))},573835:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{E:()=>o});var n=s(70533),r=s(201494),i=e([n]);n=(i.then?(await i)():i)[0];const o={watchMessage:async({address:e,chainId:t,safeMessageHash:s,pollingInterval:a=1e4})=>{const i=await(0,n.U)({address:e,networkId:String(t)}),o=await i.getThreshold();return new Promise(((e,t)=>{(0,r.$)((async({unpoll:t})=>{const a=await i.apiKit.getMessage(s);a.confirmations.length>=o&&(e(a.preparedSignature),t())}),{interval:a,emitOnBegin:!0})}))}};a()}catch(e){a(e)}}))},752974:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>u});var n=s(179826),r=s(144820),i=s(737820),o=s(145412),c=s(321955),d=e([i,o,c]);[i,o,c]=d.then?(await d)():d;const h=["wallet_importAddress"];r.n2.on("tabRemove",(e=>{i.Fc.deleteSessionsByTabId(e)}));const u=async e=>{const{data:{method:t}}=e;if(c.Z[t])return c.Z[t](e);if(!h.includes(t)){if(!i.fh.hasVault())throw n.ethErrors.provider.userRejectedRequest({message:"wallet must has at least one account"})}return(0,o.Z)(e)};a()}catch(e){a(e)}}))},321955:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>p});var n=s(330122),r=s(177447),i=s(737820),o=s(71523),c=s(969007),d=s(171417),h=s(666935),u=e([i,o,h]);[i,o,h]=u.then?(await u)():u;const l={},p={tabCheckin:({data:{params:{name:e,icon:t}},session:s,origin:a})=>{s.setProp({origin:a,name:e,icon:t}),i.VS.createOrUpdate(a);const n=i.Pv.getSite(a);n&&i.Pv.updateConnectSite(a,{...n,icon:t,name:e},!0)},getProviderState:async e=>{const{session:{origin:t}}=e,s=i.Pv.getWithoutUpdate(t)?.chain||r.h.ETH,a=i.fh.memStore.getState().isUnlocked;let n="1";l[s]?n=l[s]:(n=await o.Z.netVersion(e),l[s]=n);let h=(0,c.Xj)(s);if(!h){if(d.nn)throw new Error(`[internalMethod::getProviderState] chain ${s} not found`);console.warn(`[internalMethod::getProviderState] chain ${s} not found`),h=r.zG.ETH}return{chainId:h.hex,isUnlocked:a,accounts:a?await o.Z.ethAccounts(e):[],networkVersion:n}},providerOverwrite:({data:{params:[e]}})=>(i.$8.setHasOtherProvider(e),!0),hasOtherProvider:()=>{const e=i.$8.getHasOtherProvider();i.$8.setHasOtherProvider(!0);const t=i.$8.getIsDefaultWallet();return e||i.VS.init(),h.Z.isUnlocked()&&(0,n.U3)(t?"rabby":"metamask"),!0},isDefaultWallet:({origin:e})=>i.$8.getIsDefaultWallet(e)};a()}catch(e){a(e)}}))},145412:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>P});var n=s(179826),r=s(737820),i=s(330122),o=s(177447),c=s(71523),d=s(478051),h=s(875864),u=s(539666),l=s(625399),p=s(222751),g=s(969007),y=s(171575),m=s(573835),w=e([r,c,m]);[r,c,m]=w.then?(await w)():w;const T=e=>["SignText","SignTypedData","SignTx"].includes(e),f=new Set,A=new Set,C=async()=>1e3,S=new i.O7,v=S.use((async(e,t)=>{const{data:{method:s}}=e.request;if(e.mapMethod=(0,i.do)(s),Reflect.getMetadata("PRIVATE",c.Z,e.mapMethod))throw n.ethErrors.rpc.methodNotFound({message:`method [${s}] doesn't has corresponding handler`,data:e.request.data});if(!c.Z[e.mapMethod]){if(s.startsWith("eth_")||"net_version"===s)return c.Z.ethRpc(e.request);throw n.ethErrors.rpc.methodNotFound({message:`method [${s}] doesn't has corresponding handler`,data:e.request.data})}return t()})).use((async(e,t)=>{const{mapMethod:s,request:{session:{origin:a}}}=e;if(!Reflect.getMetadata("SAFE",c.Z,s)){if(!r.fh.memStore.getState().isUnlocked){if(f.has(a))throw n.ethErrors.rpc.resourceNotFound("Already processing unlock. Please wait.");e.request.requestedApproval=!0,f.add(a);try{await r.BF.requestApproval({lock:!0},{height:628}),f.delete(a)}catch(e){throw f.delete(a),e}}}return t()})).use((async(e,t)=>{const{request:{session:{origin:s,name:a,icon:i}},mapMethod:o}=e;if(!Reflect.getMetadata("SAFE",c.Z,o)&&!r.Pv.hasPermission(s)){if(A.has(s))throw n.ethErrors.rpc.resourceNotFound("Already processing connect. Please wait.");e.request.requestedApproval=!0,A.add(s);try{const{defaultChain:e}=await r.BF.requestApproval({params:{origin:s,name:a,icon:i},approvalComponent:"Connect"},{height:800});A.delete(s),r.Pv.addConnectedSiteV2({origin:s,name:a,icon:i,defaultChain:e})}catch(e){throw A.delete(s),e}}return t()})).use((async(e,t)=>{const{request:{data:{params:s,method:a},session:{origin:n,name:i,icon:o}},mapMethod:d}=e,[u,l,y={}]=Reflect.getMetadata("APPROVAL",c.Z,d)||[];let m=800;if("height"in y)m=y.height;else{const e=500,t=await C();t<880&&(m=t),m<e&&(m=e)}if("SignText"===u){let t,a;const[n,r]=s;(0,h.l9)(n)&&!(0,h.l9)(r)?(t=n,a=r):(t=r,a=n);const i=/^[0-9A-Fa-f]+$/gu,o=(0,p.stripHexPrefix)(a);o.match(i)&&(a=(0,p.addHexPrefix)(o)),e.request.data.params[0]=a,e.request.data.params[1]=t}if(u&&(!l||!l(e.request))){if(e.request.requestedApproval=!0,"SignTx"===u&&!("chainId"in s[0])){const e=r.Pv.getConnectedSite(n);if(e){const t=(0,g.Ed)({enum:e.chain});t&&(s[0].chainId=t.id)}}e.approvalRes=await r.BF.requestApproval({approvalComponent:u,params:{$ctx:e?.request?.data?.$ctx,method:a,data:e.request.data.params,session:{origin:n,name:i,icon:o}},origin:n},{height:m}),T(u)?r.Pv.updateConnectSite(n,{isSigned:!0},!0):r.Pv.touchConnectedSite(n)}return t()})).use((async e=>{const{approvalRes:t,mapMethod:s,request:a}=e,[n]=Reflect.getMetadata("APPROVAL",c.Z,s)||[],{uiRequestComponent:i,...h}=t||{},{session:{origin:l}}=a,p=()=>new Promise(((e,r)=>{let h=Promise.resolve();return T(n)&&i&&(h=(0,y.E)()),t?.isGnosis?e(void 0):h.then((()=>Promise.resolve(c.Z[s]({...a,approvalRes:t})).then((e=>(T(n)&&d.Z.emit(o.FP.broadcastToUI,{method:o.FP.SIGN_FINISHED,params:{success:!0,data:e}}),e))).then(e).catch((e=>{const t={method:o.FP.SIGN_FINISHED,params:{success:!1,errorMsg:e?.message||JSON.stringify(e)}};e.method&&(t.method=e.method,t.params=e.message),u.Tb(e),T(n)&&d.Z.emit(o.FP.broadcastToUI,t)}))))}));t?.isGnosis||r.BF.setCurrentRequestDeferFn(p);const g=p();if(i){e.request.requestedApproval=!0;const t=await async function t({uiRequestComponent:s,...a}){e.request.requestedApproval=!0;const i=await r.BF.requestApproval({approvalComponent:s,params:a,origin:l,approvalType:n,isUnshift:!0});return i?.uiRequestComponent?await t(i):i}({uiRequestComponent:i,...h});if(b(),h?.safeMessage){const t=h.safeMessage;return e.request.requestedApproval&&(S.requestedApproval=!1,r.BF.unLock()),m.E.watchMessage({address:t.safeAddress,chainId:t.chainId,safeMessageHash:t.safeMessageHash})}return t}return g})).callback();function b(){const e=r.BF.getStatsData();if(e&&!e.reported){if(e?.signed){const t={type:e?.type,chainId:e?.chainId,category:e?.category,success:e?.signedSuccess,preExecSuccess:e?.preExecSuccess,createdBy:e?.createdBy,source:e?.source,trigger:e?.trigger,networkType:e?.networkType};e.signMethod&&(t.signMethod=e.signMethod),l.Z.report("signedTransaction",t)}e?.submit&&l.Z.report("submitTransaction",{type:e?.type,chainId:e?.chainId,category:e?.category,success:e?.submitSuccess,preExecSuccess:e?.preExecSuccess,createdBy:e?.createdBy,source:e?.source,trigger:e?.trigger,networkType:e?.networkType||""}),e.reported=!0,r.BF.setStatsData(e)}}const P=e=>{const t={request:{...e,requestedApproval:!1}};return r.BF.setStatsData(),v(t).finally((()=>{b(),t.request.requestedApproval&&(S.requestedApproval=!1,r.BF.unLock())}))};a()}catch(I){a(I)}}))},464154:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>l});var n=s(737820),r=s(836612),i=s(478051),o=s(969007),c=s(819920),d=s(189851),h=s.n(d),u=e([n,r]);[n,r]=u.then?(await u)():u;const l=e=>{const t=(0,o.Ed)({enum:n.Pv.getConnectedSite(e)?.chain}),s=new r.G,a=t=>{t.origin===e&&(s.chainId=t.chain.network)};i.Z.addEventListener("rabby:chainChanged",a),s.chainId=t?.network||"1";const d=new c.PollingBlockTracker({provider:s}),{events:u,middleware:l}=h()({provider:s,blockTracker:d}),{destroy:p}=l,g=async e=>{const{data:t}=e||{},s={};let a=null;if(await l(t,s,(()=>null),(e=>{a=e})),a)throw a;return s.result};return{events:u,methods:{eth_subscribe:g,eth_unsubscribe:g},destroy:()=>{p(),d.destroy(),i.Z.removeEventListener("rabby:chainChanged",a)}}};a()}catch(e){a(e)}}))},878170:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Lr:()=>y,UJ:()=>g,es:()=>p});var n=s(969007),r=s(771210),i=s(936609),o=s(893338),c=s.n(o),d=s(737820),h=s(836612),u=s(478051),l=e([d,h]);[d,h]=l.then?(await l)():l;const p=c(),g=async({chainServerId:e,account:t})=>{if(t||(t=await d.$8.getCurrentAccount()),!t)throw new Error((0,i.t)("background.error.noCurrentAccount"));const s=(0,n.Ed)({serverId:e})?.id.toString();if(!s)throw new Error((0,i.t)("background.error.invalidChainId"));h.Z.currentProvider.currentAccount=t.address,h.Z.currentProvider.currentAccountType=t.type,h.Z.currentProvider.currentAccountBrand=t.brandName,h.Z.currentProvider.chainId=s;return new r.Q(h.Z.currentProvider)},y=({origin:e,chain:t})=>{d.Pv.getConnectedSite(e)?.isConnected&&(d.Fc.broadcastEvent("rabby:chainChanged",{...t},e),d.Fc.broadcastEvent("chainChanged",{chain:t.hex,networkVersion:t.network},e),u.Z.emit("rabby:chainChanged",{chain:t,origin:e}))};a()}catch(e){a(e)}}))},666935:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>ue});var n=s(222751),r=s(179826),i=s(771210),o=s(936136),c=s(496486),d=s(893338),h=s.n(d),u=s(737820),l=s(836612),p=s(405869),g=s(71523),y=s(572875),m=s(177447),w=s(239742),T=s(652449),f=s(350420),A=s(752974),C=s(478051),S=s(330122),v=s(888227),b=s(927799),P=s(625399),I=s(174261),E=s(244431),k=s.n(E),x=s(539666),L=s(642562),N=s(870893),D=s(863409),_=s(118269),O=s(969007),R=s(153023),B=s(70533),M=s(111211),K=s(936609),W=s(878170),F=s(554122),H=s(697574),Z=s(336420),U=s(617014),G=s.n(U),$=s(638591),j=s(156685),q=s(961096),V=s(625284),z=s(939353),Y=s(89307),X=s(417645),J=s(171417),Q=s(773105),ee=s(171575),te=s(326209),se=s(693150),ae=s.n(se),ne=s(497858),re=s(162529),ie=s(348764).Buffer,oe=e([u,l,g,y,A,N,B,M,W,F,$,q,V,Q]);[u,l,g,y,A,N,B,M,W,F,$,q,V,Q]=oe.then?(await oe)():oe;const ce={};new(k())(2).pow(256).minus(1).toString(10);class de extends y.Z{constructor(){super(...arguments),this.openapi=u.hs,this.testnetOpenapi=T.d,this.boot=async e=>{await u.fh.boot(e),re.T.destroy();const t=u.$8.getHasOtherProvider(),s=u.$8.getIsDefaultWallet();t?(0,S.U3)(s?"rabby":"metamask"):(0,S.U3)("default")},this.isBooted=()=>u.fh.isBooted(),this.verifyPassword=e=>u.fh.verifyPassword(e),this.setWhitelist=async(e,t)=>{await this.verifyPassword(e),u.j2.setWhitelist(t)},this.addWhitelist=async(e,t)=>{await this.verifyPassword(e),u.j2.addWhitelist(t)},this.removeWhitelist=async(e,t)=>{await this.verifyPassword(e),u.j2.removeWhitelist(t)},this.toggleWhitelist=async(e,t)=>{await this.verifyPassword(e),t?u.j2.enableWhitelist():u.j2.disableWhiteList()},this.getWhitelist=()=>u.j2.getWhitelist(),this.isWhitelistEnabled=()=>u.j2.isWhitelistEnabled(),this.requestETHRpc=(e,t)=>g.Z.ethRpc({data:e,session:m.r},t),this.sendRequest=(e,t=!1)=>t?Promise.resolve(e):(0,A.Z)({data:e,session:m.r}),this.resendSign=()=>{u.BF.callCurrentRequestDeferFn()},this.getApproval=u.BF.getApproval,this.resolveApproval=u.BF.resolveApproval,this.rejectApproval=(e,t=!1,s=!1)=>u.BF.rejectApproval(e,t,s),this.rejectAllApprovals=()=>{u.BF.rejectAllApprovals(),u.BF.clear()},this.getERC20Allowance=async(e,t,s)=>{const a=await u.$8.getCurrentAccount();if(!a)throw new Error((0,K.t)("background.error.noCurrentAccount"));const n=(0,O.Ed)({serverId:e})?.id.toString();if(!n)throw new Error((0,K.t)("background.error.invalidChainId"));l.Z.currentProvider.currentAccount=a.address,l.Z.currentProvider.currentAccountType=a.type,l.Z.currentProvider.currentAccountBrand=a.brandName,l.Z.currentProvider.chainId=n;const r=new i.Q(l.Z.currentProvider),c=new o.CH(t,w.YV,r);return(await c.allowance(a.address,s)).toString()},this.sendToken=async({to:e,chainServerId:t,tokenId:s,rawAmount:a,$ctx:r})=>{const i=await u.$8.getCurrentAccount();if(!i)throw new Error((0,K.t)("background.error.noCurrentAccount"));const o=(0,O.Ed)({serverId:t}),c=o?.id;if(!c)throw new Error((0,K.t)("background.error.invalidChainId"));const d={chainId:o.id,from:i.address,to:s,value:"0x0",data:h().encodeFunctionCall({name:"transfer",type:"function",inputs:[{type:"address",name:"to"},{type:"uint256",name:"value"}]},[e,a]),isSend:!0};return s===o.nativeTokenAddress&&(d.to=e,delete d.data,d.value=(0,n.addHexPrefix)((0,n.unpadHexString)(h().encodeParameter("uint256",a)))),await this.sendRequest({method:"eth_sendTransaction",params:[d],$ctx:r})},this.getSafeVersion=async({address:e,networkId:t})=>{const s=await u.$8.getCurrentAccount();if(!s)throw new Error((0,K.t)("background.error.noCurrentAccount"));const a=new l.G;return a.currentAccount=s.address,a.currentAccountType=s.type,a.currentAccountBrand=s.brandName,a.chainId=t,D.Z.getSafeVersion({address:e,provider:new i.Q(a)})},this.getBasicSafeInfo=async({address:e,networkId:t})=>(await(0,B.U)({address:e,networkId:t})).getBasicSafeInfo(),this.gasTopUp=async e=>{const{gasTokenSymbol:t,paymentTokenSymbol:s,fromUsdValue:a,toChainId:n,fromTokenAmount:r,toTokenAmount:i,...o}=e;P.Z.report("gasTopUpConfirm",{topUpChain:n,topUpAmount:a,topUpToken:t,paymentChain:o.chainServerId,paymentToken:s});const c=await u.$8.getCurrentAccount();if(!c)throw new Error((0,K.t)("background.error.noCurrentAccount"));const d=await this.sendToken(o);P.Z.report("gasTopUpTxFinished",{topUpChain:n,topUpAmount:a,paymentChain:o.chainServerId,paymentToken:s});const h=async()=>await this.openapi.postGasStationOrder({userAddr:c.address,fromChainId:o.chainServerId,fromTxId:d,toChainId:n,toTokenAmount:i,fromTokenId:o.tokenId,fromTokenAmount:r,fromUsdValue:a}),l=()=>P.Z.report("gasTopUpPostGasStationOrder",{topUpChain:n,topUpAmount:a,paymentChain:o.chainServerId,paymentToken:s});try{await h(),l()}catch(e){try{await h(),l()}catch(e){x.Tb(new Error("postGasStationOrder failed, params: "+JSON.stringify({userAddr:c.address,fromChainId:o.chainServerId,fromTxId:d,toChainId:n,toTokenAmount:i,fromTokenId:o.tokenId,fromTokenAmount:r,fromUsdValue:a})))}}},this.dexSwap=async({chain:e,quote:t,needApprove:s,spender:a,pay_token_id:n,unlimited:r,gasPrice:i,shouldTwoStepApprove:o,postSwapParams:c,swapPreferMEVGuarded:d},h)=>{if(!await u.$8.getCurrentAccount())throw new Error((0,K.t)("background.error.noCurrentAccount"));const l=(0,O.Xj)(e);if(!l)throw new Error((0,K.t)("background.error.notFindChain",{chain:e}));try{o&&(u.NW.increase(3),await this.approveToken(l.serverId,n,a,0,{ga:{...h?.ga,source:"approvalAndSwap|tokenApproval"}},i,{isSwap:!0,swapPreferMEVGuarded:d}),u.NW.decrease()),s&&(o||u.NW.increase(2),await this.approveToken(l.serverId,n,a,t.fromTokenAmount,{ga:{...h?.ga,source:"approvalAndSwap|tokenApproval"}},i,{isSwap:!0,swapPreferMEVGuarded:d}),u.NW.decrease()),c&&u.wj.addTx(e,t.tx.data,c),await this.sendRequest({$ctx:s&&n!==l.nativeTokenAddress?{ga:{...h?.ga,source:"approvalAndSwap|swap"}}:h,method:"eth_sendTransaction",params:[{from:t.tx.from,to:t.tx.to,data:t.tx.data||"0x",value:`0x${new(k())(t.tx.value||"0").toString(16)}`,chainId:l.id,gasPrice:i?`0x${new(k())(i).toString(16)}`:void 0,isSwap:!0,swapPreferMEVGuarded:d}]}),u.NW.decrease()}catch(e){u.NW.reset()}},this.buildDexSwap=async({chain:e,quote:t,needApprove:s,spender:a,pay_token_id:n,unlimited:r,gasPrice:i,shouldTwoStepApprove:o,postSwapParams:c,swapPreferMEVGuarded:d},h)=>{if(!await u.$8.getCurrentAccount())throw new Error((0,K.t)("background.error.noCurrentAccount"));const l=(0,O.Xj)(e);if(!l)throw new Error((0,K.t)("background.error.notFindChain",{chain:e}));const p=[];try{if(o){u.NW.increase(3);const e=await this.approveToken(l.serverId,n,a,0,{ga:{...h?.ga,source:"approvalAndSwap|tokenApproval"}},i,{isSwap:!0,swapPreferMEVGuarded:d},!0);p.push(e.params[0]),u.NW.decrease()}if(s){o||u.NW.increase(2);const e=await this.approveToken(l.serverId,n,a,t.fromTokenAmount,{ga:{...h?.ga,source:"approvalAndSwap|tokenApproval"}},i,{isSwap:!0,swapPreferMEVGuarded:d},!0);p.push(e.params[0]),u.NW.decrease()}c&&u.wj.addTx(e,t.tx.data,c);const r=await this.sendRequest({$ctx:s&&n!==l.nativeTokenAddress?{ga:{...h?.ga,source:"approvalAndSwap|swap"}}:h,method:"eth_sendTransaction",params:[{from:t.tx.from,to:t.tx.to,data:t.tx.data||"0x",value:`0x${new(k())(t.tx.value||"0").toString(16)}`,chainId:l.id,gasPrice:i?`0x${new(k())(i).toString(16)}`:void 0,isSwap:!0,swapPreferMEVGuarded:d}]},!0);p.push(r.params[0]),u.NW.decrease()}catch(e){u.NW.reset()}return p},this.bridgeToken=async({to:e,data:t,payTokenRawAmount:s,payTokenId:a,payTokenChainServerId:n,shouldApprove:r,shouldTwoStepApprove:i,gasPrice:o,info:c,value:d},h)=>{const l=await u.$8.getCurrentAccount();if(!l)throw new Error((0,K.t)("background.error.noCurrentAccount"));const p=(0,O.Ed)({serverId:n});if(!p)throw new Error((0,K.t)("background.error.notFindChain",{payTokenChainServerId:n}));try{i&&(u.NW.increase(3),await this.approveToken(n,a,e,0,{ga:{...h?.ga,source:"approvalAndBridge|tokenApproval"}},o,{isBridge:!0}),u.NW.decrease()),r&&(i||u.NW.increase(2),await this.approveToken(n,a,e,s,{ga:{...h?.ga,source:"approvalAndBridge|tokenApproval"}},o,{isBridge:!0}),u.NW.decrease()),c&&u.zn.addTx(p.enum,t,c),await this.sendRequest({$ctx:r&&a!==p.nativeTokenAddress?{ga:{...h?.ga,source:"approvalAndBridge|bridge"}}:h,method:"eth_sendTransaction",params:[{from:l.address,to:e,data:t||"0x",value:`0x${new(k())(d||"0").toString(16)}`,chainId:p.id,gasPrice:o?`0x${new(k())(o).toString(16)}`:void 0,isBridge:!0}]}),u.NW.decrease()}catch(e){u.NW.reset()}},this.buildBridgeToken=async({to:e,data:t,payTokenRawAmount:s,payTokenId:a,payTokenChainServerId:n,shouldApprove:r,shouldTwoStepApprove:i,gasPrice:o,info:c,value:d},h)=>{const l=await u.$8.getCurrentAccount();if(!l)throw new Error((0,K.t)("background.error.noCurrentAccount"));const p=(0,O.Ed)({serverId:n});if(!p)throw new Error((0,K.t)("background.error.notFindChain",{payTokenChainServerId:n}));const g=[];try{if(i){u.NW.increase(3);const t=await this.approveToken(n,a,e,0,{ga:{...h?.ga,source:"approvalAndBridge|tokenApproval"}},o,{isBridge:!0},!0);g.push(t.params[0]),u.NW.decrease()}if(r){i||u.NW.increase(2);const t=await this.approveToken(n,a,e,s,{ga:{...h?.ga,source:"approvalAndBridge|tokenApproval"}},o,{isBridge:!0},!0);g.push(t.params[0]),u.NW.decrease()}c&&u.zn.addTx(p.enum,t,c);const y=await this.sendRequest({$ctx:r&&a!==p.nativeTokenAddress?{ga:{...h?.ga,source:"approvalAndBridge|bridge"}}:h,method:"eth_sendTransaction",params:[{from:l.address,to:e,data:t||"0x",value:`0x${new(k())(d||"0").toString(16)}`,chainId:p.id,gasPrice:o?`0x${new(k())(o).toString(16)}`:void 0,isBridge:!0}]},!0);g.push(y.params[0]),u.NW.decrease()}catch(e){u.NW.reset()}return g},this.getUnTriggerTxCount=()=>u.NW.count,this.generateApproveTokenTx=({from:e,to:t,chainId:s,spender:a,amount:n})=>({from:e,to:t,chainId:s,value:"0x",data:h().encodeFunctionCall({constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},[a,n])}),this.approveToken=async(e,t,s,a,n,r,i,o=!1)=>{const c=await u.$8.getCurrentAccount();if(!c)throw new Error((0,K.t)("background.error.noCurrentAccount"));const d=(0,O.Ed)({serverId:e})?.id;if(!d)throw new Error((0,K.t)("background.error.invalidChainId"));let l={from:c.address,to:t,chainId:d,data:h().encodeFunctionCall({constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},[s,a])};return r&&(l.gasPrice=r),i&&(l={...l,...i}),await this.sendRequest({$ctx:n,method:"eth_sendTransaction",params:[l]},o)},this.lockdownPermit2=async(e,t=!1)=>{const{chainServerId:s,id:a,tokenSpenders:n,$ctx:r,gasPrice:i}=e,o=JSON.parse(JSON.stringify(n)),c=await u.$8.getCurrentAccount();if(!c)throw new Error((0,K.t)("background.error.noCurrentAccount"));const d=(0,O.Ed)({serverId:s})?.id;if(!d)throw new Error((0,K.t)("background.error.invalidChainId"));const h={from:c.address,to:a,chainId:d,data:W.es.encodeFunctionCall({constant:!1,inputs:[{name:"approvals",type:"tuple[]",internalType:"tuple[]",components:[{type:"address",name:"token"},{type:"address",name:"spender"}]}],name:"lockdown",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},[o])};return i&&(h.gasPrice=i),await this.sendRequest({$ctx:r,method:"eth_sendTransaction",params:[h]},t)},this.fetchEstimatedL1Fee=async(e,t=m.h.OP)=>{const s=await u.$8.getCurrentAccount();if(!s)throw new Error((0,K.t)("background.error.noCurrentAccount"));l.Z.currentProvider.currentAccount=s.address,l.Z.currentProvider.currentAccountType=s.type,l.Z.currentProvider.currentAccountBrand=s.brandName,l.Z.currentProvider.chainId=(0,O.Ed)({enum:t}).network;const a=new i.Q(l.Z.currentProvider);return await(0,Z.mw)({txParams:e.txParams,chain:t,provider:a})},this.mintDBKChainNFT=async()=>{const e=await u.$8.getCurrentAccount();if(!e)throw new Error((0,K.t)("background.error.noCurrentAccount"));await this.sendRequest({method:"eth_sendTransaction",params:[{from:e.address,to:m.v_,chainId:m.x0,data:h().encodeFunctionCall({name:"mint",inputs:[],outputs:[],stateMutability:"nonpayable",type:"function"},[])}]})},this.transferNFT=async({to:e,chainServerId:t,contractId:s,abi:a,tokenId:n,amount:r},i)=>{const o=await u.$8.getCurrentAccount();if(!o)throw new Error((0,K.t)("background.error.noCurrentAccount"));const c=(0,O.Ed)({serverId:t})?.id;if(!c)throw new Error((0,K.t)("background.error.invalidChainId"));if("ERC721"===a)await this.sendRequest({$ctx:i,method:"eth_sendTransaction",params:[{from:o.address,to:s,chainId:c,data:h().encodeFunctionCall({constant:!1,inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},[o.address,e,n])}]});else{if("ERC1155"!==a)throw new Error((0,K.t)("background.error.unknownAbi"));await this.sendRequest({$ctx:i,method:"eth_sendTransaction",params:[{from:o.address,to:s,chainId:c,data:h().encodeFunctionCall({inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},[o.address,e,n,r,[]])}]})}},this.revokeNFTApprove=async({chainServerId:e,contractId:t,spender:s,abi:a,nftTokenId:n,isApprovedForAll:r},i,o=!1)=>{const c=await u.$8.getCurrentAccount();if(!c)throw new Error((0,K.t)("background.error.noCurrentAccount"));const d=(0,O.Ed)({serverId:e})?.id;if(!d)throw new Error((0,K.t)("background.error.invalidChainId"));if("ERC721"===a)return r?await this.sendRequest({$ctx:i,method:"eth_sendTransaction",params:[{from:c.address,to:t,chainId:d,data:h().encodeFunctionCall({inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},[s,!1])}]},o):await this.sendRequest({$ctx:i,method:"eth_sendTransaction",params:[{from:c.address,to:t,chainId:d,data:h().encodeFunctionCall({constant:!1,inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},["0x0000000000000000000000000000000000000000",n])}]},o);if("ERC1155"===a)return await this.sendRequest({$ctx:i,method:"eth_sendTransaction",params:[{from:c.address,to:t,data:h().encodeFunctionCall({constant:!1,inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},[s,!1]),chainId:d}]},o);throw new Error((0,K.t)("background.error.unknownAbi"))},this.initAlianNames=async()=>{await u.$8.changeInitAlianNameStatus();const e=await this.listContact(),t=await u.fh.getAllTypedAccounts(),s=t.filter((e=>"WalletConnect"===e.type)),a=t.map((e=>({type:e.type,accounts:e.accounts})));let n=[];for(let e=0;e<s.length;e++){const t=s[e];n=[...n,...t.accounts]}const r=(0,c.groupBy)(n,"brandName");if(t.length>0){Object.keys(r).forEach((t=>{r[t].map(((t,s)=>{e.find((e=>(0,S.Wr)(e.address,t.address)))||this.updateAlianName(t?.address,`${m.$9[t?.brandName]} ${s+1}`)}))}));const t=(0,c.groupBy)(a.filter((e=>"WalletConnect"!==e.type)),"type");Object.keys(t).map((e=>t[e].map((t=>t.accounts.map((t=>({address:t.address,type:e}))))))).map((e=>e.flat(1))).forEach((e=>e.forEach(((e,t)=>{this.updateAlianName(e?.address,`${m.zp[e?.type]} ${t+1}`)}))))}if(0!==e.length&&0!==t.length){const s=t.map((e=>e.accounts)).flat(),a=e.filter((e=>s.find((t=>(0,S.Wr)(t.address,e.address)))));a.length>0&&a.forEach((e=>this.updateAlianName(e.address,e.name)))}},this.getPendingApprovalCount=()=>u.BF.approvals.length,this.activeFirstApproval=()=>{u.BF.activeFirstApproval()},this.unlock=async e=>{const t=await u.$8.getInitAlianNameStatus(),s=u.b3.listAlias();await u.fh.submitPassword(e),u.Fc.broadcastEvent("unlock"),t||0!==s.length||this.initAlianNames();const a=u.$8.getHasOtherProvider(),n=u.$8.getIsDefaultWallet();a?(0,S.U3)(n?"rabby":"metamask"):(0,S.U3)("default"),u.iv.syncStatus()},this.isUnlocked=()=>u.fh.isUnlocked(),this.lockWallet=async()=>{await u.fh.setLocked(),J.AU&&await ae().storage.session.clear(),u.Fc.broadcastEvent("accountsChanged",[]),u.Fc.broadcastEvent("lock"),(0,S.U3)("locked")},this.setAutoLockTime=e=>M.q.setAutoLockTime(e),this.setLastActiveTime=()=>M.q.setLastActiveTime(),this.setHiddenBalance=e=>u.$8.setHiddenBalance(e),this.getIsShowTestnet=()=>u.$8.getIsShowTestnet(),this.setIsShowTestnet=e=>u.$8.setIsShowTestnet(e),this.setPopupOpen=e=>{u.$8.setPopupOpen(e)},this.openIndexPage=p.nh,this.hasPageStateCache=()=>u.dh.has(),this.getPageStateCache=()=>this.isUnlocked()?u.dh.get():null,this.clearPageStateCache=()=>u.dh.clear(),this.setPageStateCache=e=>u.dh.set(e),this.getIndexByAddress=(e,t)=>{if(!m.Vi.includes(t))return null;const s=u.fh.getKeyringByType(t);if(!s)return null;switch(t){case m.Cr.HARDWARE.LEDGER:return s.getIndexFromAddress(e);case m.Cr.HARDWARE.GRIDPLUS:{const t=s.accountIndices,a=s.accounts.findIndex((t=>t.toLowerCase()===e.toLowerCase()));return-1===a||t.length-1<a?null:t[a]}default:return null}},this.getTotalBalanceCached=(0,R.H)("getTotalBalanceCached",(async e=>{let t=!1;(await u.fh.getAllAdresses()).filter((t=>(0,S.Wr)(t.address,e))).some((e=>m.AY.includes(e.type)))&&(t=!0);const s=await u.hs.getTotalBalance(e,t);return u.$8.updateBalanceAboutCache(e,{totalBalance:s}),s}),{timeout:z.u.TIMEOUT,maxSize:z.u.CACHE_LIMIT}),this.getTestnetTotalBalanceCached=(0,R.H)("getTestnetTotalBalanceCached",(async e=>{const t=await T.d.getTotalBalance(e);return u.$8.updateTestnetAddressBalance(e,t),t}),{timeout:z.u.TIMEOUT,maxSize:z.u.CACHE_LIMIT}),this.getInMemoryAddressBalance=async(e,t=!1,s=!1)=>{const a=e?.toLowerCase()||"";return s?this.getTestnetTotalBalanceCached.fn([a],a,t):this.getTotalBalanceCached.fn([a],a,t)},this.forceExpireInMemoryAddressBalance=(e,t=!1)=>t?this.getTestnetTotalBalanceCached.forceExpire(e):this.getTotalBalanceCached.forceExpire(e),this.isInMemoryAddressBalanceExpired=(e,t=!1)=>t?this.getTestnetTotalBalanceCached.isExpired(e):this.getTotalBalanceCached.isExpired(e),this.getAddressCacheBalance=(e,t=!1)=>e?t?null:u.$8.getBalanceAboutCacheByAddress(e)?.totalBalance??null:null,this.getPersistedBalanceAboutCacheMap=()=>u.$8.getBalanceAboutCacheMap(),this.getNetCurveCached=(0,R.H)("getNetCurveCached",(async e=>{const t=await u.hs.getNetCurve(e);return u.$8.updateBalanceAboutCache(e,{curvePoints:t}),t}),{timeout:z.u.TIMEOUT,maxSize:z.u.CACHE_LIMIT}),this.getInMemoryNetCurve=(e,t=!1)=>this.getNetCurveCached.fn([e],e,t),this.forceExpireInMemoryNetCurve=e=>this.getNetCurveCached.forceExpire(e),this.isInMemoryNetCurveExpired=e=>this.getNetCurveCached.isExpired(e),this.setHasOtherProvider=e=>u.$8.setHasOtherProvider(e),this.getHasOtherProvider=()=>u.$8.getHasOtherProvider(),this.getExternalLinkAck=()=>u.$8.getExternalLinkAck(),this.setExternalLinkAck=e=>u.$8.setExternalLinkAck(e),this.getLocale=()=>u.$8.getLocale(),this.setLocale=e=>u.$8.setLocale(e),this.getThemeMode=()=>u.$8.getThemeMode(),this.setThemeMode=e=>u.$8.setThemeMode(e),this.isReserveGasOnSendToken=()=>u.$8.isReserveGasOnSendToken(),this.setReserveGasOnSendToken=e=>u.$8.setPreferencePartials({reserveGasOnSendToken:e}),this.getLastTimeSendToken=e=>u.$8.getLastTimeSendToken(e),this.setLastTimeSendToken=(e,t)=>u.$8.setLastTimeSendToken(e,t),this.getTokenApprovalChain=e=>u.$8.getTokenApprovalChain(e),this.setTokenApprovalChain=(e,t)=>{u.$8.setTokenApprovalChain(e,t)},this.getNFTApprovalChain=e=>u.$8.getNFTApprovalChain(e),this.setNFTApprovalChain=(e,t)=>{u.$8.setNFTApprovalChain(e,t)},this.getLastSelectedSwapPayToken=u.$8.getLastSelectedSwapPayToken,this.setLastSelectedSwapPayToken=u.$8.setLastSelectedSwapPayToken,this.getLastSelectedGasTopUpChain=u.$8.getLastSelectedGasTopUpChain,this.setLastSelectedGasTopUpChain=u.$8.setLastSelectedGasTopUpChain,this.getAddressSortStoreValue=u.$8.getAddressSortStoreValue,this.setAddressSortStoreValue=u.$8.setAddressSortStoreValue,this.getLastSelectedSwapChain=u.wj.getSelectedChain,this.setLastSelectedSwapChain=u.wj.setSelectedChain,this.getSelectedFromToken=u.wj.getSelectedFromToken,this.getSelectedToToken=u.wj.getSelectedToToken,this.setSelectedFromToken=u.wj.setSelectedFromToken,this.setSelectedToToken=u.wj.setSelectedToToken,this.getSwap=u.wj.getSwap,this.getSwapGasCache=u.wj.getLastTimeGasSelection,this.updateSwapGasCache=u.wj.updateLastTimeGasSelection,this.getSwapDexId=u.wj.getSelectedDex,this.setSwapDexId=u.wj.setSelectedDex,this.getUnlimitedAllowance=u.wj.getUnlimitedAllowance,this.setUnlimitedAllowance=u.wj.setUnlimitedAllowance,this.setSwapView=u.wj.setSwapView,this.setSwapTrade=u.wj.setSwapTrade,this.getSwapViewList=u.wj.getSwapViewList,this.getSwapTradeList=u.wj.getSwapTradeList,this.getSwapSortIncludeGasFee=u.wj.getSwapSortIncludeGasFee,this.setSwapSortIncludeGasFee=u.wj.setSwapSortIncludeGasFee,this.getSwapPreferMEVGuarded=u.wj.getSwapPreferMEVGuarded,this.setSwapPreferMEVGuarded=u.wj.setSwapPreferMEVGuarded,this.setAutoSlippage=u.wj.setAutoSlippage,this.setIsCustomSlippage=u.wj.setIsCustomSlippage,this.setSlippage=u.wj.setSlippage,this.getRecentSwapToTokens=u.wj.getRecentSwapToTokens,this.setRecentSwapToToken=u.wj.setRecentSwapToToken,this.setRedirect2Points=u.ll.setRedirect2Points,this.setRabbyPointsSignature=u.ll.setSignature,this.getRabbyPointsSignature=u.ll.getSignature,this.clearRabbyPointsSignature=u.ll.clearSignature,this.addHDKeyRingLastAddAddrTime=u.Sb.addUnixRecord,this.getHDKeyRingLastAddAddrTimeStore=u.Sb.getStore,this.getBridgeData=u.zn.getBridgeData,this.getBridgeAggregators=u.zn.getBridgeAggregators,this.setBridgeAggregators=u.zn.setBridgeAggregators,this.getBridgeUnlimitedAllowance=u.zn.getUnlimitedAllowance,this.setBridgeUnlimitedAllowance=u.zn.setUnlimitedAllowance,this.setBridgeSelectedChain=u.zn.setSelectedChain,this.setBridgeSelectedFromToken=u.zn.setSelectedFromToken,this.setBridgeSelectedToToken=u.zn.setSelectedToToken,this.getBridgeSortIncludeGasFee=u.zn.getBridgeSortIncludeGasFee,this.setBridgeSortIncludeGasFee=u.zn.setBridgeSortIncludeGasFee,this.setBridgeSettingFirstOpen=u.zn.setBridgeSettingFirstOpen,this.getGasAccountData=u.nZ.getGasAccountData,this.getGasAccountSig=u.nZ.getGasAccountSig,this.setGasAccountSig=u.nZ.setGasAccountSig,this.setCustomRPC=(e,t)=>{u.q3.setRPC(e,t);const s=(0,O.Ed)({enum:e});s?.isTestnet&&u.q3.hasCustomRPC(e)&&$.j.setCustomRPC({chainId:s.id,url:t})},this.removeCustomRPC=e=>{u.q3.removeCustomRPC(e);const t=(0,O.Ed)({enum:e});t?.isTestnet&&$.j.removeCustomRPC(t.id)},this.getAllCustomRPC=u.q3.getAllRPC,this.getCustomRpcByChain=u.q3.getRPCByChain,this.pingCustomRPC=u.q3.ping,this.setRPCEnable=(e,t)=>{u.q3.setRPCEnable(e,t);const s=(0,O.Ed)({enum:e});s?.isTestnet&&(t?$.j.setCustomRPC({chainId:s.id,url:u.q3.getRPCByChain(e).url}):$.j.removeCustomRPC(s.id))},this.validateRPC=async(e,t)=>{const s=(0,O.Ed)({id:t});if(!s)throw new Error(`ChainId ${t} is not supported`);const[a,n]=await Promise.all([u.q3.ping(s.enum),u.q3.request(e,"eth_chainId",[])]);return t===Number(n)},this.hasCustomRPC=u.q3.hasCustomRPC,this.getSavedChains=()=>u.$8.getSavedChains(),this.saveChain=e=>u.$8.saveChain(e),this.updateChain=e=>u.$8.updateChain(e),this.getConnectedSite=u.Pv.getConnectedSite,this.getSite=u.Pv.getSite,this.getConnectedSites=u.Pv.getConnectedSites,this.getSites=u.Pv.getSites,this.setRecentConnectedSites=e=>{u.Pv.setRecentConnectedSites(e)},this.getRecentConnectedSites=()=>u.Pv.getRecentConnectedSites(),this.getCurrentSite=(e,t)=>{const{origin:s,name:a,icon:n}=u.Fc.getSession(`${e}-${t}`)||{};if(!s)return null;const r=u.Pv.getSite(s);return r||{origin:s,name:a,icon:n,chain:m.h.ETH,isConnected:!1,isSigned:!1,isTop:!1}},this.getCurrentConnectedSite=(e,t)=>{const s=u.Fc.getSession(`${e}-${t}`);return s?u.Pv.getWithoutUpdate(s.origin):null},this.setSite=e=>{const t=(0,O.Ed)({enum:e.chain});if(!t)throw new Error(`[wallet::setSite] Chain ${e.chain} is not supported`);u.Pv.setSite(e),(0,W.Lr)({origin:e.origin,chain:t})},this.updateSiteBasicInfo=async e=>{if(!e?.length)return[];const t=Array.isArray(e)?e:[e],s=await this.openapi.getDappsInfo({ids:t.map((e=>e.replace(/^https?:\/\//,"")))});return t.map((e=>{const t=u.Pv.getSite(e),a=e.replace(/^https?:\/\//,""),n=s.find((e=>e.id===a))||{id:a,name:t?.name||"",logo_url:t?.icon||"",description:"",user_range:"",tags:[],chain_ids:[]};if(t){const e={...t,info:n};return he.setSite(e),e}})).filter((e=>!!e))},this.removePreferMetamask=e=>{const t=u.Pv.getSite(e);if(!t?.preferMetamask)return;const s=u.$8.getIsDefaultWallet(t?.origin);t.preferMetamask=!1,u.Pv.setSite(t),u.VS.createOrUpdate(t.origin);const a=u.$8.getIsDefaultWallet(e),n=u.$8.getHasOtherProvider();s!==a&&n&&u.Fc.broadcastEvent("defaultWalletChanged",a?"rabby":"metamask",t.origin)},this.updateConnectSite=(e,t)=>{const s=(0,O.Ed)({enum:t.chain});if(!s)throw new Error(`[wallet::updateConnectSite] Chain ${t.chain} is not supported`);u.Pv.updateConnectSite(e,t),(0,W.Lr)({origin:t.origin,chain:s})},this.addConnectedSiteV2=u.Pv.addConnectedSiteV2,this.removeAllRecentConnectedSites=()=>{u.Pv.getRecentConnectedSites().filter((e=>!e.isTop)).forEach((e=>{this.removeConnectedSite(e.origin)}))},this.removeConnectedSite=e=>{u.Fc.broadcastEvent("accountsChanged",[],e),u.Pv.removeConnectedSite(e)},this.getSitesByDefaultChain=u.Pv.getSitesByDefaultChain,this.getPreferMetamaskSites=u.Pv.getPreferMetamaskSites,this.topConnectedSite=e=>u.Pv.topConnectedSite(e),this.unpinConnectedSite=e=>u.Pv.unpinConnectedSite(e),this.favoriteWebsite=e=>u.Pv.favoriteWebsite(e),this.unFavoriteWebsite=e=>u.Pv.unFavoriteWebsite(e),this.clearKeyrings=()=>u.fh.clearKeyrings(),this.importGnosisAddress=async(e,t)=>{let s,a;const n=m.Cr.GNOSIS;try{s=this._getKeyringByType(n)}catch{const e=u.fh.getKeyringClassForType(n);s=new e({}),a=!0}return s.setAccountToAdd(e),s.setNetworkIds(e,t),await u.fh.addNewAccount(s),a&&await u.fh.addKeyring(s),s.on(v.NI,(e=>{C.Z.emit(m.FP.broadcastToUI,{method:v.NI,params:e}),s.on(v.Q_,(e=>{C.Z.emit(m.FP.broadcastToUI,{method:v.Q_,params:e})}))})),this._setCurrentAccountFromKeyring(s,-1)},this.fetchGnosisChainList=e=>(0,_.isAddress)(e)?Promise.all((0,O.Hj)(m.OQ).map((async t=>{const s=(0,O.Ed)({enum:t});try{const t=await(0,B.U)({address:e,networkId:s.network});if(await t.getOwners())return s}catch(e){return console.error(e),null}}))).then((e=>e.filter((e=>!!e)))):Promise.reject(new Error((0,K.t)("background.error.invalidAddress"))),this.syncAllGnosisNetworks=()=>{const e=this._getKeyringByType(m.Cr.GNOSIS);e&&Object.entries(e.networkIdsMap).forEach((async([t,s])=>{const a=await this.fetchGnosisChainList(t);e.setNetworkIds(t,(0,c.uniq)((s||[]).concat(a.map((e=>e.network)))))}))},this.syncGnosisNetworks=async e=>{const t=this._getKeyringByType(m.Cr.GNOSIS);if(!t)return;const s=t.networkIdsMap[e],a=await this.fetchGnosisChainList(e),n=(0,c.uniq)((s||[]).concat(a.map((e=>e.network))));(0,c.isEqual)((0,c.sortBy)(s),(0,c.sortBy)(n))||(t.setNetworkIds(e,n),await u.fh.persistAllKeyrings())},this.clearGnosisTransaction=()=>{const e=this._getKeyringByType(m.Cr.GNOSIS);(e.currentTransaction||e.safeInstance)&&(e.currentTransaction=null,e.safeInstance=null)},this.clearGnosisMessage=()=>{const e=this._getKeyringByType(m.Cr.GNOSIS);(e.currentSafeMessage||e.safeInstance)&&(e.currentSafeMessage=null,e.safeInstance=null)},this.getGnosisNetworkId=e=>{const t=this._getKeyringByType(m.Cr.GNOSIS).networkIdMap[e.toLowerCase()];if(void 0===t)throw new Error(`Address ${e} is not in keyring"`);return t},this.getGnosisNetworkIds=e=>{const t=this._getKeyringByType(m.Cr.GNOSIS).networkIdsMap[e.toLowerCase()];if(void 0===t)throw new Error(`Address ${e} is not in keyring"`);return t},this.getGnosisTransactionHash=()=>{const e=this._getKeyringByType(m.Cr.GNOSIS);return e.currentTransaction?e.getTransactionHash():null},this.getGnosisTransactionSignatures=()=>{const e=this._getKeyringByType(m.Cr.GNOSIS);if(e.currentTransaction){return Array.from(e.currentTransaction.signatures.values()).map((e=>({data:e.data,signer:e.signer})))}return[]},this.setGnosisTransactionHash=e=>{this._getKeyringByType(m.Cr.GNOSIS).currentTransactionHash=e},this.buildGnosisTransaction=async(e,t,s,a,n)=>{const r=this._getKeyringByType(m.Cr.GNOSIS);if(!r)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));{const o=new l.G;o.currentAccount=t.address,o.currentAccountType=t.type,o.currentAccountBrand=t.brandName,o.chainId=n,await r.buildTransaction(e,s,new i.Q(o),a,n)}},this.validateGnosisTransaction=async({account:e,tx:t,version:s,networkId:a},n)=>{const r=this._getKeyringByType(m.Cr.GNOSIS);if(r)return l.Z.currentProvider.currentAccount=e.address,l.Z.currentProvider.currentAccountType=e.type,l.Z.currentProvider.currentAccountBrand=e.brandName,l.Z.currentProvider.chainId=a,r.validateTransaction({address:e.address,transaction:t,provider:new i.Q(l.Z.currentProvider),version:s,networkId:a},n);throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"))},this.postGnosisTransaction=()=>{const e=this._getKeyringByType(m.Cr.GNOSIS);if(!e||!e.currentTransaction)throw new Error((0,K.t)("background.error.notFoundTxGnosisKeyring"));return e.postTransaction()},this.getGnosisAllPendingTxs=async e=>{const t=this._getKeyringByType(m.Cr.GNOSIS);if(!t)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));const s=t.networkIdsMap[e];if(!s||!s.length)return null;const a=await Promise.all(s.map((async t=>{try{const s=await(0,B.U)({networkId:t,address:e}),{results:a}=await s.getPendingTransactions();return{networkId:t,txs:a}}catch(e){return console.error(e),{networkId:t,txs:[]}}})));return{total:a.reduce(((e,t)=>e+t.txs.length),0),results:a}},this.getGnosisAllPendingMessages=async e=>{const t=this._getKeyringByType(m.Cr.GNOSIS);if(!t)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));const s=t.networkIdsMap[e.toLowerCase()];if(!s||!s.length)return null;const a=(0,n.toChecksumAddress)(e),r=await Promise.all(s.map((async e=>{try{const t=await(0,B.U)({networkId:e,address:a}),s=await t.getThreshold(),{results:n}=await t.apiKit.getMessages(a);return{networkId:e,messages:n.filter((e=>e.confirmations.length<s))}}catch(t){return console.error(t),{networkId:e,messages:[]}}})));return{total:r.reduce(((e,t)=>e+t.messages.length),0),results:r}},this.getGnosisPendingTxs=async(e,t)=>{if(!t)return[];const s=await(0,B.U)({networkId:t,address:e}),{results:a}=await s.getPendingTransactions();return a},this.getGnosisOwners=async(e,t,s,a)=>{const n=this._getKeyringByType(m.Cr.GNOSIS);if(!n)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));const r=new l.G;r.currentAccount=e.address,r.currentAccountType=e.type,r.currentAccountBrand=e.brandName,r.chainId=a;return await n.getOwners(t,s,new i.Q(r),a)},this.signGnosisTransaction=e=>{const t=this._getKeyringByType(m.Cr.GNOSIS);if(t.currentTransaction&&t.safeInstance)return l.Z.currentProvider.currentAccount=e.address,l.Z.currentProvider.currentAccountType=e.type,l.Z.currentProvider.currentAccountBrand=e.brandName,t.confirmTransaction({safeAddress:t.safeInstance.safeAddress,transaction:t.currentTransaction,networkId:t.safeInstance.network,provider:new i.Q(l.Z.currentProvider)})},this.checkGnosisTransactionCanExec=async()=>{const e=this._getKeyringByType(m.Cr.GNOSIS);if(e.currentTransaction&&e.safeInstance){const t=await e.safeInstance.getThreshold();return e.currentTransaction.signatures.size>=t}return!1},this.execGnosisTransaction=async e=>{const t=this._getKeyringByType(m.Cr.GNOSIS);t.currentTransaction&&t.safeInstance&&(l.Z.currentProvider.currentAccount=e.address,l.Z.currentProvider.currentAccountType=e.type,l.Z.currentProvider.currentAccountBrand=e.brandName,await t.execTransaction({safeAddress:t.safeInstance.safeAddress,transaction:t.currentTransaction,networkId:t.safeInstance.network,provider:new i.Q(l.Z.currentProvider)}))},this.gnosisGenerateTypedData=()=>{const e=this._getKeyringByType(m.Cr.GNOSIS);if(!e)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));if(!e.currentTransaction)throw new Error((0,K.t)("background.error.notFoundTxGnosisKeyring"));return e.generateTypedData()},this.gnosisAddConfirmation=async(e,t)=>{const s=this._getKeyringByType(m.Cr.GNOSIS);if(!s)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));if(!s.currentTransaction)throw new Error((0,K.t)("background.error.notFoundTxGnosisKeyring"));await s.addConfirmation(e,t)},this.gnosisAddPureSignature=async(e,t)=>{const s=this._getKeyringByType(m.Cr.GNOSIS);if(!s)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));if(!s.currentTransaction)throw new Error((0,K.t)("background.error.notFoundTxGnosisKeyring"));await s.addPureSignature(e,t)},this.gnosisAddSignature=async(e,t)=>{const s=this._getKeyringByType(m.Cr.GNOSIS);if(!s)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));if(!s.currentTransaction)throw new Error((0,K.t)("background.error.notFoundTxGnosisKeyring"));await s.addSignature(e,t)},this.buildGnosisMessage=async({account:e,safeAddress:t,networkId:s,version:a,message:n})=>{const r=this._getKeyringByType(m.Cr.GNOSIS);if(r){const o=new l.G;return o.currentAccount=e.address,o.currentAccountType=e.type,o.currentAccountBrand=e.brandName,o.chainId=s,r.buildMessage({address:t,provider:new i.Q(o),version:a,networkId:s,message:n})}throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"))},this.getGnosisSafeMessageInfo=()=>{const e=this._getKeyringByType(m.Cr.GNOSIS);if(!e)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));return e.getMessageInfo()},this.addGnosisMessage=async({signerAddress:e,signature:t})=>{const s=this._getKeyringByType(m.Cr.GNOSIS);if(!s)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));return s.addMessage({signerAddress:e,signature:t})},this.addGnosisMessageSignature=async({signerAddress:e,signature:t})=>{const s=this._getKeyringByType(m.Cr.GNOSIS);if(!s)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));return s.addMessageSignature({signerAddress:e,signature:t})},this.handleGnosisMessage=async({signerAddress:e,signature:t})=>{(await this.getGnosisMessageSignatures()).length>0?await he.addGnosisMessageSignature({signature:t,signerAddress:e}):await he.addGnosisMessage({signature:t,signerAddress:e})},this.addPureGnosisMessageSignature=async({signerAddress:e,signature:t})=>{const s=this._getKeyringByType(m.Cr.GNOSIS);if(!s)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));return s.addPureMessageSignature({signerAddress:e,signature:t})},this.getGnosisMessage=async({chainId:e,messageHash:t})=>D.Z.createSafeApiKit(String(e)).getMessage(t),this.getGnosisMessageHash=async({safeAddress:e,chainId:t,message:s})=>(await(0,B.U)({address:e,networkId:String(t)})).getSafeMessageHash((0,ne.hashSafeMessage)(s)),this.getGnosisMessageSignatures=()=>{const e=this._getKeyringByType(m.Cr.GNOSIS);if(e.currentSafeMessage){return Array.from(e.currentSafeMessage.signatures.values()).map((e=>({data:e.data,signer:e.signer})))}return[]},this.validateGnosisMessage=async({address:e,chainId:t,message:s},a)=>{const r=this._getKeyringByType(m.Cr.GNOSIS);if(!r)throw new Error((0,K.t)("background.error.notFoundGnosisKeyring"));if(!r.accounts.find((t=>t.toLowerCase()===e.toLowerCase())))throw new Error("Can not find this address");const i=(0,n.toChecksumAddress)(e),o=await(0,B.U)({address:i,networkId:String(t)});return await o.getSafeMessageHash((0,ne.hashSafeMessage)(s))===a},this.addWatchAddressOnly=async e=>{let t,s;const a=m.Cr.WATCH;try{t=this._getKeyringByType(a)}catch{t=new(u.fh.getKeyringClassForType(a)),s=!0}return t.setAccountToAdd(e),await u.fh.addNewAccount(t),s&&await u.fh.addKeyring(t),t},this.importWatchAddress=async e=>{try{const t=await this.addWatchAddressOnly(e);return this._setCurrentAccountFromKeyring(t,-1)}catch(t){throw t.message?.includes?.("duplicate")?new Error(JSON.stringify({address:e,anchor:"DuplicateAccountError"})):t}},this.getWalletConnectStatus=(e,t)=>{const s=m.Cr.WALLETCONNECT;try{const a=this._getKeyringByType(s);if(a)return a.getConnectorStatus(e,t)}catch(e){}return null},this.getWalletConnectSessionStatus=(e,t)=>{const s=t===m.Cr.Coinbase?m.Cr.Coinbase:m.Cr.WALLETCONNECT;try{const a=this._getKeyringByType(s);if(a)return a.getSessionStatus(e,t)}catch(e){}return null},this.getWalletConnectSessionNetworkDelay=(e,t)=>{const s=m.Cr.WALLETCONNECT,a=this._getKeyringByType(s);return a?a.getSessionNetworkDelay(e,t):null},this.getWalletConnectSessionAccount=(e,t)=>{const s=t===m.Cr.Coinbase?m.Cr.Coinbase:m.Cr.WALLETCONNECT;try{const a=this._getKeyringByType(s);if(a)return a.getSessionAccount(e,t)}catch(e){}return null},this.walletConnectSwitchChain=async(e,t)=>{const s=e.brandName===m.Cr.Coinbase?m.Cr.Coinbase:m.Cr.WALLETCONNECT;try{const a=this._getKeyringByType(s);a&&await a.switchEthereumChain(e.brandName,t,e.address)}catch(t){this.killWalletConnectConnector(e.address,e.brandName,!0)}return null},this.initWalletConnect=async(e,t,s=1)=>{let a,n;!t&&this._currentWalletConnectStashId&&(t=this._currentWalletConnectStashId);const r=m.Cr.WALLETCONNECT;try{null!=t?(a=ce[t],n=!1):a=this._getKeyringByType(r)}catch{const e=u.fh.getKeyringClassForType(r);a=new e((0,H.K)()),n=!0}a.initConnector(e,(0,O.aO)("mainnet").map((e=>e.id)));let i=t;return n&&(i=this.addKeyringToStash(a),C.Z.addEventListener(m.FP.WALLETCONNECT.INIT,(({address:e,brandName:t,type:s})=>{s===m.Cr.WALLETCONNECT&&a.init(e,t,H.l)})),a.on("inited",(e=>{C.Z.emit(m.FP.broadcastToUI,{method:m.FP.WALLETCONNECT.INITED,params:{uri:e}})})),a.on("transport_error",(e=>{x.Tb(new Error("Transport error: "+JSON.stringify(e)))})),a.on("statusChange",(e=>{C.Z.emit(m.FP.broadcastToUI,{method:m.FP.WALLETCONNECT.STATUS_CHANGED,params:e}),u.$8.getPopupOpen()||(0,S.LA)(e)})),a.on("sessionStatusChange",(e=>{C.Z.emit(m.FP.broadcastToUI,{method:m.FP.WALLETCONNECT.SESSION_STATUS_CHANGED,params:e})})),a.on("sessionAccountChange",(e=>{C.Z.emit(m.FP.broadcastToUI,{method:m.FP.WALLETCONNECT.SESSION_ACCOUNT_CHANGED,params:e})})),a.on("sessionNetworkDelay",(e=>{C.Z.emit(m.FP.broadcastToUI,{method:m.FP.WALLETCONNECT.SESSION_NETWORK_DELAY,params:e})})),a.on("error",(e=>{console.error(e),x.Tb(e)}))),this._currentWalletConnectStashId=i,{stashId:i}},this.killWalletConnectConnector=async(e,t,s,a)=>{try{const s=t===m.Cr.Coinbase?m.Cr.Coinbase:m.Cr.WALLETCONNECT,n=this._getKeyringByType(s);n&&await n.closeConnector({address:e,brandName:t},a)}catch(e){}},this.getCommonWalletConnectInfo=e=>{const t=m.Cr.WALLETCONNECT,s=this._getKeyringByType(t);if(s)return s.getCommonWalletConnectInfo(e)},this.importWalletConnect=async(e,t,s,a,n,r)=>{try{let s,i;const o=m.Cr.WALLETCONNECT;try{s=this._getKeyringByType(o)}catch{if(null!=a)s=ce[a];else{s=new(u.fh.getKeyringClassForType(o))((0,H.K)())}i=!0}return s.setAccountToAdd({address:e,brandName:t,realBrandName:n,realBrandUrl:r}),i&&await u.fh.addKeyring(s),await u.fh.addNewAccount(s),this.clearPageStateCache(),this._setCurrentAccountFromKeyring(s,-1)}catch(t){throw t.message?.includes?.("duplicate")?new Error(JSON.stringify({address:e,anchor:"DuplicateAccountError"})):t}},this.gridPlusIsConnect=()=>{const e=m.Cr.HARDWARE.GRIDPLUS,t=this._getKeyringByType(e);return t?t.isUnlocked():null},this.getPrivateKey=async(e,{address:t,type:s})=>{await this.verifyPassword(e);const a=await u.fh.getKeyringForAccount(t,s);return a?await a.exportAccount(t):null},this.getMnemonics=async(e,t)=>{await this.verifyPassword(e);const s=await u.fh.getKeyringForAccount(t,m.Cr.MNEMONIC);return(await s.serialize()).mnemonic},this.clearAddressPendingTransactions=(e,t)=>{u.Lh.clearPendingTransactions(e,t),N.Z.clearPendingTx(e,t),u.dV.clearPendingTx(e,t)},this.clearAddressTransactions=e=>{u.Lh.removeList(e)},this.validatePrivateKey=async e=>{const t=n.stripHexPrefix(e),s=ie.from(t,"hex"),a=new Error((0,K.t)("background.error.invalidPrivateKey"));try{if(!n.isValidPrivate(s))throw a}catch{throw a}},this.importPrivateKey=async e=>{const t=n.stripHexPrefix(e),s=ie.from(t,"hex"),a=new Error((0,K.t)("background.error.invalidPrivateKey"));try{if(!n.isValidPrivate(s))throw a}catch{throw a}const r=await u.fh.importPrivateKey(t);return this._setCurrentAccountFromKeyring(r)},this.importJson=async(e,t)=>{try{JSON.parse(e)}catch{throw new Error((0,K.t)("background.error.invalidJson"))}let s;try{s=await Y.xu.fromEtherWallet(e,t)}catch(a){s=await Y.w5.fromV3(e,t,!0)}const a=s.getPrivateKeyString(),r=await u.fh.importPrivateKey(n.stripHexPrefix(a));return this._setCurrentAccountFromKeyring(r)},this.generateMnemonic=()=>u.fh.generateMnemonic(),this.getPreMnemonics=()=>u.fh.getPreMnemonics(),this.generatePreMnemonic=()=>u.fh.generatePreMnemonic(),this.removePreMnemonics=()=>u.fh.removePreMnemonics(),this.createKeyringWithMnemonics=async e=>{await u.fh.createKeyringWithMnemonics(e);u.fh.removePreMnemonics()},this.getHiddenAddresses=()=>u.$8.getHiddenAddresses(),this.showAddress=(e,t)=>u.$8.showAddress(e,t),this.hideAddress=(e,t,s)=>{u.$8.hideAddress(e,t,s);const a=u.$8.getCurrentAccount();a?.address===t&&a.type===e&&this.resetCurrentAccount()},this.clearWatchMode=async()=>{const e=await u.fh.getKeyringsByType(m.Cr.WATCH);let t=[];for(let s=0;s<e.length;s++){const a=e[s],n=await a.getAccounts();t=[...t,...n]}await Promise.all(t.map((e=>this.removeAddress(e,m.Cr.WATCH))))},this.getAccountByAddress=async e=>(await u.fh.getAllAdresses()).find((t=>(0,S.Wr)(t.address,e))),this.hasAddress=e=>u.fh.hasAddress(e),this.removeAddress=async(e,t,s,a)=>{if(await this.killWalletConnectConnector(e,s||t,!0,!0),a){const s=await u.fh.getKeyringForAccount(e,t);this.removeMnemonicKeyringFromStash(s)}await u.fh.removeAccount(e,t,s,a),await u.fh.hasAddress(e)||(u.b3.removeAlias(e),u.j2.removeWhitelist(e),u.Lh.removeList(e),u.$C.removeList(e),u.$8.removeHighlightedAddress({address:e,brandName:s||t})),u.$8.removeAddressBalance(e),u.$8.removeCurvePoints(e);const n=u.$8.getCurrentAccount();n?.address===e&&n.type===t&&n.brandName===s&&this.resetCurrentAccount()},this.resetCurrentAccount=async()=>{const[e]=await this.getAccounts();e?u.$8.setCurrentAccount(e):u.$8.setCurrentAccount(null)},this.getKeyringByMnemonic=(e,t="")=>{const s=u.fh.keyrings.find((s=>s.type===m.Cr.MNEMONIC&&s.mnemonic===e&&s.checkPassphrase(t)));return s?.setPassphrase(t),s},this._getMnemonicKeyringByAddress=e=>u.fh.keyrings.find((t=>t.type===m.Cr.MNEMONIC&&t.mnemonic&&t.accounts.includes(e))),this.removeMnemonicsKeyRingByPublicKey=async e=>{this.removePublicKeyFromStash(e),u.fh.removeKeyringByPublicKey(e)},this.getMnemonicKeyRingFromPublicKey=e=>{const t=u.fh.keyrings?.find((t=>!(t.type!==m.Cr.MNEMONIC||!t.mnemonic||t.publicKey!==e)));return t},this.getMnemonicFromPublicKey=e=>{const t=this.getMnemonicKeyRingFromPublicKey(e);return t?.mnemonic},this.getMnemonicKeyRingIdFromPublicKey=e=>{const t=this.getMnemonicKeyRingFromPublicKey(e);let s;return t&&(s=this.updateKeyringInStash(t)),s},this.getMnemonicByAddress=e=>{const t=this._getMnemonicKeyringByAddress(e);if(!t)throw new Error((0,K.t)("background.error.notFoundKeyringByAddress"));return t.mnemonic},this.getMnemonicKeyring=async(e,t)=>{let s;if(s="address"===e?await this._getMnemonicKeyringByAddress(t):await this.getMnemonicKeyRingFromPublicKey(t),!s)throw new Error((0,K.t)("background.error.notFoundKeyringByAddress"));return s},this.getMnemonicKeyringIfNeedPassphrase=async(e,t)=>(await this.getMnemonicKeyring(e,t)).needPassphrase,this.getMnemonicKeyringPassphrase=async(e,t)=>(await this.getMnemonicKeyring(e,t)).passphrase,this.checkPassphraseBelongToMnemonic=async(e,t,s)=>{const a=await this.getMnemonicKeyring(e,t),n=a.checkPassphrase(s);return n&&a.setPassphrase(s),n},this.getMnemonicAddressInfo=async e=>{const t=this._getMnemonicKeyringByAddress(e);if(!t)throw new Error((0,K.t)("background.error.notFoundKeyringByAddress"));return await t.getInfoByAddress(e)},this.validateMnemonic=e=>G().validateMnemonic(e),this.generateKeyringWithMnemonic=async(e,t)=>{if(t=t||"",!G().validateMnemonic(e))throw new Error((0,K.t)("background.error.invalidMnemonic"));let s=this.getKeyringByMnemonic(e,t);const a={keyringId:null,isExistedKR:!1};if(s)a.isExistedKR=!0,a.keyringId=this.updateKeyringInStash(s);else{s=new(u.fh.getKeyringClassForType(m.Cr.MNEMONIC))({mnemonic:e,passphrase:t}),u.fh.updateHdKeyringIndex(s),a.keyringId=this.addKeyringToStash(s),u.fh.addKeyring(s)}return a},this.slip39GetThreshold=e=>G().slip39GetThreshold(e),this.slip39DecodeMnemonic=e=>G().slip39DecodeMnemonic(e),this.addKeyringToStash=e=>{const t=Object.values(ce).length+1;return ce[t]=e,t},this.updateKeyringInStash=e=>{let t=Object.keys(ce).find((t=>ce[t].mnemonic===e.mnemonic&&ce[t].publicKey===e.publicKey));return t||(t=this.addKeyringToStash(e)),Number(t)},this.removeMnemonicKeyringFromStash=e=>{const t=Object.keys(ce).find((t=>ce[t]?.mnemonic&&ce[t].mnemonic===e.mnemonic));t&&delete ce[t]},this.removePublicKeyFromStash=e=>{const t=this.getMnemonicKeyRingFromPublicKey(e);t&&this.removeMnemonicKeyringFromStash(t)},this.addKeyring=async(e,t=!0)=>{const s=ce[e];if(!s)throw new Error((0,K.t)("background.error.addKeyring404"));s.byImport=t,u.fh.keyrings.find((e=>e===s))?await u.fh.persistAllKeyrings():await u.fh.addKeyring(s),this._setCurrentAccountFromKeyring(s,-1)},this.getKeyringByType=e=>u.fh.getKeyringByType(e),this.checkHasMnemonic=()=>{try{return!!this._getKeyringByType(m.Cr.MNEMONIC).mnemonic}catch(e){return!1}},this.deriveNewAccountFromMnemonic=async()=>{const e=this._getKeyringByType(m.Cr.MNEMONIC),t=await u.fh.addNewAccount(e);return this._setCurrentAccountFromKeyring(e,-1),t},this.getAccountsCount=async()=>(await u.fh.getAccounts()).filter((e=>e)).length,this.getTypedAccounts=async e=>Promise.all(u.fh.keyrings.map((e=>new f.Z(e))).filter((t=>!e||t.type===e)).map((e=>u.fh.displayForKeyring(e)))),this.getAllVisibleAccounts=async()=>(await u.fh.getAllTypedVisibleAccounts()).map((e=>({...e,keyring:new f.Z(e.keyring)}))),this.getAllVisibleAccountsArray=()=>u.fh.getAllVisibleAccountsArray(),this.getAllClassAccounts=async()=>(await u.fh.getAllTypedAccounts()).map((e=>({...e,keyring:new f.Z(e.keyring)}))),this.changeAccount=e=>{u.$8.setCurrentAccount(e),u.BF.currentApproval&&(u.BF.rejectAllApprovals(),u.BF.clear())},this.authorizeLedgerHIDPermission=async()=>{const e=u.fh.getKeyringByType(m.Cr.HARDWARE.LEDGER);e&&(await e.authorizeHIDPermission(),await u.fh.persistAllKeyrings())},this.authorizeImKeyHIDPermission=async()=>{const e=u.fh.getKeyringByType(m.Cr.HARDWARE.IMKEY);e&&(await e.authorizeHIDPermission(),await u.fh.persistAllKeyrings())},this.checkLedgerHasHIDPermission=()=>{const e=u.fh.getKeyringByType(m.Cr.HARDWARE.LEDGER);return!!e&&e.hasHIDPermission},this.connectHardware=async({type:e,hdPath:t,needUnlock:s=!1,isWebHID:a=!1})=>{let n,r=null,i=!1;try{n=this._getKeyringByType(e)}catch{const t=u.fh.getKeyringClassForType(e);n=new t((0,j.R)(e)?{bridge:(0,j.S)(e)}:void 0),i=!0}return Object.keys(ce).forEach((e=>{ce[e].type===n.type&&(r=Number(e))})),r?i&&(ce[r]=n):(r=Object.values(ce).length+1,ce[r]=n),t&&n.setHdPath&&n.setHdPath(t),s&&await(n?.unlock?.()),r},this.acquireKeystoneMemStoreData=async()=>{const e=m.Cr.HARDWARE.KEYSTONE,t=this._getKeyringByType(e);t&&(t.getInteraction().on(b.Aq,(e=>{C.Z.emit(m.FP.broadcastToUI,{method:m.FP.QRHARDWARE.ACQUIRE_MEMSTORE_SUCCEED,params:{request:e}})})),t.getInteraction().emit(b.SL))},this.submitQRHardwareCryptoHDKey=async(e,t)=>{let s,a=null;const n=m.Cr.HARDWARE.KEYSTONE;if(null!=t)s=ce[t];else try{s=this._getKeyringByType(n)}catch{s=new(u.fh.getKeyringClassForType(n))({bridge:(0,j.S)(n)}),a=Object.values(ce).length+1,ce[a]=s}return s.readKeyring(),await s.submitCryptoHDKey(e),t??a},this.submitQRHardwareCryptoAccount=async(e,t)=>{let s,a=null;const n=m.Cr.HARDWARE.KEYSTONE;if(null!=t)s=ce[t];else try{s=this._getKeyringByType(n)}catch{s=new(u.fh.getKeyringClassForType(n))({bridge:(0,j.S)(n)}),a=Object.values(ce).length+1,ce[a]=s}return s.readKeyring(),await s.submitCryptoAccount(e),t??a},this.submitQRHardwareSignature=async(e,t,s)=>{const a=await u.$8.getCurrentAccount(),n=await u.fh.getKeyringForAccount(s||a.address,m.Cr.HARDWARE.KEYSTONE);return await n.submitSignature(e,t)},this.signPersonalMessage=async(e,t,s,a)=>{const n=await u.fh.getKeyringForAccount(t,e),r=await u.fh.signPersonalMessage(n,{from:t,data:s},a);return C.Z.emit(m.FP.broadcastToUI,{method:m.FP.SIGN_FINISHED,params:{success:!0,data:r}}),r},this.signPersonalMessageWithUI=async(e,t,s,a)=>{const n=()=>(0,ee.E)().then((()=>{this.signPersonalMessage(e,t,s,a)}));return u.BF.setCurrentRequestDeferFn(n),n()},this.signTypedData=async(e,t,s,a)=>{const n=await u.fh.getKeyringForAccount(t,e),r=await u.fh.signTypedMessage(n,{from:t,data:s},a);return C.Z.emit(m.FP.broadcastToUI,{method:m.FP.SIGN_FINISHED,params:{success:!0,data:r}}),r},this.signTypedDataWithUI=async(e,t,s,a)=>{const n=()=>(0,ee.E)().then((()=>{this.signTypedData(e,t,s,a)}));return u.BF.setCurrentRequestDeferFn(n),n()},this.signTransaction=async(e,t,s,a)=>{const n=await u.fh.getKeyringForAccount(t,e);return u.fh.signTransaction(n,s,t,a)},this.decryptMessage=async({type:e,from:t,data:s,options:a})=>{if(s.startsWith("0x")){const e=n.stripHexPrefix(s),t=ie.from(e,"hex");s=JSON.parse(t.toString("utf8"))}else s=JSON.parse(s);return(await u.fh.getKeyringForAccount(t,e)).decryptMessage(t,s,a)},this.getEncryptionPublicKey=async({address:e,type:t,options:s})=>(await u.fh.getKeyringForAccount(e,t)).getEncryptionPublicKey(e,s),this.requestKeyring=(e,t,s,...a)=>{let n;if(null!=s)n=ce[s];else try{n=this._getKeyringByType(e)}catch{n=new(u.fh.getKeyringClassForType(e))((0,j.R)(e)?{bridge:(0,j.S)(e)}:void 0)}if(n[t])return n[t].call(n,...a)},this.requestHDKeyringByMnemonics=(e,t,s,...a)=>{const n=this.getKeyringByMnemonic(e,s);if(!n)throw new Error("failed to requestHDKeyringByMnemonics, no keyring found.");if(n[t])return n[t].call(n,...a)},this.activeAndPersistAccountsByMnemonics=async(e,t,s)=>{const a=this.getKeyringByMnemonic(e,t);if(!a)throw new Error("[activeAndPersistAccountsByMnemonics] no keyring found.");await this.requestHDKeyringByMnemonics(e,"activeAccounts",t,s.map((e=>e.index-1))),await u.fh.persistAllKeyrings();await a.getAccounts();const n={address:s[0].address,type:a.type,brandName:a.type};u.$8.setCurrentAccount(n)},this.unlockHardwareAccount=async(e,t,s)=>{let a=null;try{a=this._getKeyringByType(e)}catch(e){}a||null==s||(await u.fh.addKeyring(ce[s]),a=ce[s]);for(let e=0;e<t.length;e++)a.setAccountToUnlock(t[e]),await u.fh.addNewAccount(a);return this._setCurrentAccountFromKeyring(a,-1)},this.getSignTextHistory=e=>u.$C.getHistory(e),this.getTransactionHistory=e=>u.Lh.getList(e),this.loadPendingListQueue=e=>u.Lh.loadPendingListQueue(e),this.addSigningTx=e=>u.Lh.addSigningTx(e),this.updateSigningTx=(...e)=>u.Lh.updateSigningTx(...e),this.removeSigningTx=e=>u.Lh.removeSigningTx(e),this.getSigningTx=e=>u.Lh.getSigningTx(e),this.completedTransaction=e=>u.Lh.completeTx(e),this.getPendingCount=e=>u.Lh.getPendingCount(e),this.getNonceByChain=(e,t)=>u.Lh.getNonceByChain(e,t),this.getPendingTxsByNonce=(e,t,s)=>u.Lh.getPendingTxsByNonce(e,t,s),this.getSkipedTxs=e=>u.Lh.getSkipedTxs(e),this.quickCancelTx=u.Lh.quickCancelTx,this.retryPushTx=u.Lh.retryPushTx,this.getTxGroup=u.Lh.getTxGroup,this.getPreference=e=>u.$8.getPreference(e),this.setIsDefaultWallet=e=>{u.$8.setIsDefaultWallet(e);const t=u.$8.getHasOtherProvider();if(t){u.Pv.getSites().filter((e=>!e.preferMetamask)).forEach((t=>{u.Fc.broadcastEvent("defaultWalletChanged",e?"rabby":"metamask",t.origin)}))}this.isUnlocked()?t?(0,S.U3)(e?"rabby":"metamask"):(0,S.U3)("default"):(0,S.U3)("locked")},this.isDefaultWallet=e=>u.$8.getIsDefaultWallet(e),this.listContact=(e=!0)=>{const t=u.b3.listContacts();return e?t:t.filter((e=>!e.isAlias))},this.getHighlightedAddresses=()=>u.$8.getHighlightedAddresses(),this.updateHighlightedAddresses=e=>u.$8.updateHighlightedAddresses(e),this.getHighlightWalletList=()=>u.$8.getWalletSavedList(),this.updateHighlightWalletList=e=>u.$8.updateWalletSavedList(e),this.getAlianName=e=>{const t=u.b3.getContactByAddress(e);if(t?.isAlias)return t.name},this.updateAlianName=(e,t)=>{u.b3.updateAlias({name:t,address:e})},this.getAllAlianNameByMap=()=>u.b3.listAlias().reduce(((e,t)=>t.address?{...e,[t.address]:t}:e),{}),this.getAllAlianName=()=>u.b3.listAlias(),this.generateCacheAliasNames=async({addresses:e,keyringType:t})=>{if(e.length<=0)throw new Error((0,K.t)("background.error.generateCacheAliasNames"));const s=e[0],a=await this.getTypedAccounts(t);if(!await u.fh.getKeyringForAccount(s,t)){const s=[];for(let n=0;n<e.length;n++){const r=(0,I.fs)({keyringType:t,keyringCount:a.length,addressCount:n});s.push({address:e[n],alias:r})}s.forEach((({address:e,alias:t})=>{u.b3.updateCacheAlias({address:e,name:t})}))}},this.updateCacheAlias=u.b3.updateCacheAlias,this.getCacheAlias=u.b3.getCacheAlias,this.getInitAlianNameStatus=()=>u.$8.getInitAlianNameStatus(),this.updateInitAlianNameStatus=()=>u.$8.changeInitAlianNameStatus(),this.getLastTimeGasSelection=(...[e])=>u.$8.getLastTimeGasSelection(e),this.updateLastTimeGasSelection=(...[e,t])=>u.$8.updateLastTimeGasSelection(e,t),this.getIsFirstOpen=()=>u.$8.getIsFirstOpen(),this.updateIsFirstOpen=()=>u.$8.updateIsFirstOpen(),this.listChainAssets=async e=>await u.hs.listChainAssets(e),this.getAddedToken=e=>u.$8.getCustomizedToken().map((e=>`${e.chain}:${e.address}`)),this.updateAddedToken=(e,t)=>u.$8.updateAddedToken(e,t),this.getCustomizedToken=u.$8.getCustomizedToken,this.addCustomizedToken=u.$8.addCustomizedToken,this.removeCustomizedToken=u.$8.removeCustomizedToken,this.getBlockedToken=u.$8.getBlockedToken,this.addBlockedToken=u.$8.addBlockedToken,this.removeBlockedToken=u.$8.removeBlockedToken,this.getCollectionStarred=u.$8.getCollectionStarred,this.addCollectionStarred=u.$8.addCollectionStarred,this.removeCollectionStarred=u.$8.removeCollectionStarred,this.reportStats=(e,t)=>{P.Z.report(e,t)},this.getNeedSwitchWalletCheck=u.$8.getNeedSwitchWalletCheck,this.updateNeedSwitchWalletCheck=u.$8.updateNeedSwitchWalletCheck,this.revoke=async({list:e})=>{const t=new L.Z({autoStart:!0,concurrency:1,timeout:void 0}),s=new AbortController,a=(0,X.y0)(e),n=[...Object.entries(a.permit2Revokes).map((([e,t])=>async()=>{try{const{chainServerId:s,permit2ContractId:a}=(0,X.$H)(e);if(!a)return;if(s!==t.chainServerId)return void console.warn(`chainServerId ${s} not match`,t);await this.lockdownPermit2({id:a,chainServerId:t.chainServerId,tokenSpenders:t.tokenSpenders})}catch(e){s.abort(),J.og||console.error(e),console.error("batch revoke permit2 error",t)}})),...a.generalRevokes.map((e=>async()=>{try{"nftTokenId"in e?await this.revokeNFTApprove(e):await this.approveToken(e.chainServerId,e.id,e.spender,0,{ga:{category:"Security",source:"tokenApproval"}})}catch(t){s.abort(),J.og||console.error(t),console.error("revoke error",e)}}))],r=new Promise((e=>{const a=()=>{t.clear(),e(),s.signal.removeEventListener("abort",a)};s.signal.addEventListener("abort",a)}));try{await Promise.race([t.addAll(n),r])}catch(e){}},this.getSecurityEngineRules=()=>u.eL.getRules(),this.getSecurityEngineUserData=()=>u.eL.getUserData(),this.executeSecurityEngine=e=>u.eL.execute(e),this.updateUserData=e=>{u.eL.updateUserData(e)},this.addContractWhitelist=e=>{u.eL.removeContractBlacklistFromAllChains(e),u.eL.addContractWhitelist(e)},this.addContractBlacklist=e=>{u.eL.removeContractWhitelist(e),u.eL.addContractBlacklist(e)},this.removeContractWhitelist=e=>{u.eL.removeContractWhitelist(e)},this.removeContractBlacklist=e=>{u.eL.removeContractBlacklistFromAllChains(e)},this.addAddressWhitelist=e=>{u.eL.removeAddressBlacklist(e),u.eL.addAddressWhitelist(e)},this.addAddressBlacklist=e=>{u.eL.removeAddressWhitelist(e),u.eL.addAddressBlacklist(e)},this.removeAddressWhitelist=e=>{u.eL.removeAddressWhitelist(e)},this.removeAddressBlacklist=e=>{u.eL.removeAddressBlacklist(e)},this.addOriginWhitelist=e=>{u.eL.removeOriginBlacklist(e),u.eL.addOriginWhitelist(e)},this.addOriginBlacklist=e=>{u.eL.removeOriginWhitelist(e),u.eL.addOriginBlacklist(e)},this.removeOriginWhitelist=e=>{u.eL.removeOriginWhitelist(e)},this.removeOriginBlacklist=e=>{u.eL.removeOriginBlacklist(e)},this.ruleEnableStatusChange=(e,t)=>{t?u.eL.enableRule(e):u.eL.disableRule(e)},this.initQRHardware=async e=>{let t,s=null;const a=m.Cr.HARDWARE.KEYSTONE;try{t=this._getKeyringByType(a)}catch{t=new(u.fh.getKeyringClassForType(a))({bridge:(0,j.S)(a)}),s=this.addKeyringToStash(t)}return await t.setCurrentBrand(e),s},this.checkQRHardwareAllowImport=async e=>{try{const t=this._getKeyringByType(m.Cr.HARDWARE.KEYSTONE);return t?t.checkAllowImport(e):{allowed:!0}}catch(e){return{allowed:!0}}},this.coboSafeGetAccountAddress=async({chainServerId:e,coboSafeAddress:t})=>{const s=await(0,W.UJ)({chainServerId:e,account:{address:"0x0",type:"coboSafe",brandName:"cobo"}}),a=new F.S(t,s);return await a.getAddress()},this.coboSafeGetAllDelegates=async({chainServerId:e,coboSafeAddress:t})=>{const s=await(0,W.UJ)({chainServerId:e}),a=new F.S(t,s);return await a.getAllDelegates()},this.coboSafeBuildTransaction=async({tx:e,chainServerId:t,coboSafeAddress:s,account:a})=>{await u.$8.saveCurrentCoboSafeAddress(),await u.$8.setCurrentAccount(a);const n=await(0,W.UJ)({chainServerId:t,account:a}),r=new F.S(s,n);return await r.execRawTransaction(e,a.address,t)},this.coboSafeResetCurrentAccount=async()=>{u.$8.resetCurrentCoboSafeAddress()},this.coboSafeImport=async({address:e,safeModuleAddress:t,networkId:s})=>{let a,n;const r=m.Cr.CoboArgus;try{a=this._getKeyringByType(r)}catch{a=new(u.fh.getKeyringClassForType(r))({}),n=!0}return a.setAccountToAdd(e),a.setAccountDetail(e,{address:e,safeModules:[{networkId:s,address:t}]}),await u.fh.addNewAccount(a),n&&await u.fh.addKeyring(a),this._setCurrentAccountFromKeyring(a,-1)},this.coboSafeGetAccountDetail=async e=>{const t=this._getKeyringByType(m.Cr.CoboArgus);if(!t)return;const s=await t.getAccountDetail(e),a=s.safeModules[0].networkId,n=s.safeModules[0].address,r=await(0,W.UJ)({chainServerId:a}),i=new F.S(e,r),o=await i.checkIsModuleEnabled({safeAddress:e,coboSafeAddress:n});return{safeModuleAddress:n,networkId:a,address:s.address,isModuleEnabled:o}},this.updateNotificationWinProps=u.BF.updateNotificationWinProps,this.checkNeedDisplayBlockedRequestApproval=u.BF.checkNeedDisplayBlockedRequestApproval,this.checkNeedDisplayCancelAllApproval=u.BF.checkNeedDisplayCancelAllApproval,this.blockedDapp=()=>{u.BF.blockedDapp(),this.rejectAllApprovals()},this.walletConnectScanAccount=async()=>{let e,t;const s=m.Cr.WALLETCONNECT;try{e=this._getKeyringByType(s)}catch{e=new(u.fh.getKeyringClassForType(s))((0,H.K)()),t=!0}return t&&this.addKeyringToStash(e),e.on("scanAccount",(e=>{C.Z.emit(m.FP.broadcastToUI,{method:m.FP.WALLETCONNECT.SCAN_ACCOUNT,params:e})})),await e.scanAccount()},this.setStatsData=e=>{u.BF.setStatsData(e)},this.getStatsData=()=>u.BF.getStatsData(),this.connectCoinbase=async()=>{let e,t;const s=m.Cr.Coinbase,a=this._currentCoinbaseStashId;try{null!=a?(e=ce[a],t=!1):e=this._getKeyringByType(s)}catch{const a=u.fh.getKeyringClassForType(s);e=new a,t=!0}let n=a;t&&(n=this.addKeyringToStash(e),C.Z.addEventListener(m.FP.WALLETCONNECT.INIT,(({address:t,type:s})=>{if(s!==m.Cr.Coinbase)return;const a=e.connect({address:t});C.Z.emit(m.FP.broadcastToUI,{method:m.FP.WALLETCONNECT.INITED,params:{uri:a}})})),e.on("message",(e=>{"CHAIN_CHANGED"===e.status?C.Z.emit(m.FP.broadcastToUI,{method:m.FP.WALLETCONNECT.SESSION_ACCOUNT_CHANGED,params:{...e,status:"CONNECTED"}}):(C.Z.emit(m.FP.broadcastToUI,{method:m.FP.WALLETCONNECT.SESSION_STATUS_CHANGED,params:e}),C.Z.emit(m.FP.broadcastToUI,{method:m.FP.WALLETCONNECT.SESSION_ACCOUNT_CHANGED,params:e}))})));const r=await e.connect();return this._currentCoinbaseStashId=n,{uri:r}},this.importCoinbase=async e=>{let t,s;const a=m.Cr.Coinbase,n=this._currentCoinbaseStashId;try{t=this._getKeyringByType(a)}catch{if(null!=n)t=ce[n];else{t=new(u.fh.getKeyringClassForType(a))}s=!0}return t.setAccountToAdd(e),s&&await u.fh.addKeyring(t),await u.fh.addNewAccount(t),this._setCurrentAccountFromKeyring(t,-1)},this.getAPIConfig=(0,R.H)("getAPIConfig",(async()=>{try{const e=await fetch("https://static.debank.com/rabby/config.json"),{data:t}=await e.json();return t.level}catch(e){return 0}}),{timeout:1e4,maxSize:0}).fn,this.rabbyPointVerifyAddress=async e=>{const{code:t,claimSnapshot:s}=e||{},a=await u.$8.getCurrentAccount();if(!a)throw new Error((0,K.t)("background.error.noCurrentAccount"));let n="",r="";s?n=(await he.openapi.getRabbyClaimTextV2({id:a?.address,invite_code:t}))?.text:r=(await he.openapi.getRabbySignatureTextV2({id:a?.address}))?.text;const i=`0x${ie.from(s?n:r,"utf-8").toString("hex")}`,o=await this.sendRequest({method:"personal_sign",params:[i,a.address]});if(this.setRabbyPointsSignature(a.address,o),s)try{await he.openapi.claimRabbyPointsSnapshotV2({id:a?.address,invite_code:t,signature:o})}catch(e){console.error(e)}else this.setPageStateCache({path:"/rabby-points",params:{},states:{}});return o},this.signGasAccount=async()=>{const e=await u.$8.getCurrentAccount();if(!e)throw new Error((0,K.t)("background.error.noCurrentAccount"));const{text:t}=await he.openapi.getGasAccountSignText(e.address),s=await this.sendRequest({method:"personal_sign",params:[t,e.address]});if(s){const t=await(0,te.Z)((async()=>he.openapi.loginGasAccount({sig:s,account_id:e.address})),{retries:2});t?.success&&(await u.nZ.setGasAccountSig(s,e),await u.dh.clear(),await u.dh.set({path:"/gas-account",states:{}}))}},this.topUpGasAccount=async({to:e,chainServerId:t,tokenId:s,rawAmount:a,amount:n})=>{const r=await u.$8.getCurrentAccount();if(!r)throw new Error((0,K.t)("background.error.noCurrentAccount"));const{sig:i,accountId:o}=this.getGasAccountSig(),c=await this.sendToken({to:e,chainServerId:t,tokenId:s,rawAmount:a}),d=(0,O.GA)(t),h=await this.getNonceByChain(r.address,d.id);c?this.openapi.rechargeGasAccount({sig:i,account_id:o,tx_id:c,chain_id:t,amount:n,user_addr:r?.address,nonce:h-1}):x.Tb(new Error("topUp GasAccount tx failed, params: "+JSON.stringify({userAddr:r.address,gasAccount:o,chain:t,amount:n})))},this.addCustomTestnet=async(e,t)=>{const s=t?.ga?.source||"setting",a=await $.j.add(e);return"error"in a||(0,V.m)({category:"Custom Network",action:"Success Add Network",label:`${s}_${String(e.id)}`}),a},this.updateCustomTestnet=$.j.update,this.removeCustomTestnet=e=>{const t=(0,O.Ed)({id:e});t?.enum&&u.q3.removeCustomRPC(t.enum),$.j.remove(e)},this.getCustomTestnetList=$.j.getList,this.getCustomTestnetNonce=async({address:e,chainId:t})=>{const s=await $.j.getTransactionCount({address:e,chainId:t,blockTag:"latest"}),a=await he.getNonceByChain(e,t)||0;return k().max(s,a).toNumber()},this.estimateCustomTestnetGas=$.j.estimateGas,this.getCustomTestnetGasPrice=$.j.getGasPrice,this.getCustomTestnetGasMarket=$.j.getGasMarket,this.getCustomTestnetToken=$.j.getToken,this.removeCustomTestnetToken=$.j.removeToken,this.addCustomTestnetToken=$.j.addToken,this.getCustomTestnetTokenList=$.j.getTokenList,this.isAddedCustomTestnetToken=$.j.hasToken,this.getCustomTestnetTx=$.j.getTx,this.getCustomTestnetTxReceipt=$.j.getTransactionReceipt,this.getCustomTestnetLogos=$.j.fetchLogos,this.getUsedCustomTestnetChainList=async()=>{const e=new Set;Object.values(u.Lh.store.transactions).forEach((t=>{Object.values(t).forEach((t=>{e.add(t.chainId)}))}));const t=Array.from(e).filter((e=>!(0,O.Ed)({id:e})));return await u.hs.getChainListByIds({ids:t.join(",")})},this.hasPrivateKeyInWallet=async e=>{let t=null;try{t=await u.fh.getKeyringForAccount(e,m.pY.SimpleKeyring)}catch(e){}let s=null;try{s=await u.fh.getKeyringForAccount(e,m.pY.HdKeyring)}catch(e){}return!(!t&&!s)&&(t?.type||s?.type)},this.syncMainnetChainList=q.d.syncMainnetChainList,this.tryUnlock=async()=>{await u.fh.tryUnlock(),this.syncPopupIcon()},this.syncPopupIcon=()=>{if(this.isBooted())if(this.isUnlocked()){const e=u.$8.getHasOtherProvider(),t=u.$8.getIsDefaultWallet();e?(0,S.U3)(t?"rabby":"metamask"):(0,S.U3)("default")}else(0,S.U3)("locked");else(0,S.U3)("default")},this.setIsHideEcologyNoticeDict=u.$8.setIsHideEcologyNoticeDict,this.getRecommendGas=Q.l,this.getRecommendNonce=Q.e,this.ethSendTransaction=async(...e)=>{try{return await g.Z.ethSendTransaction(...e)}catch(t){const s=e?.[0]?.approvalRes?.signingTxId;throw null!=s&&this.removeSigningTx(s),t}},this.tryOpenOrActiveUserGuide=async()=>!this.isBooted()&&(await re.T.activeUserGuide(),!0),this.uninstalledSyncStatus=u.iv.syncStatus,this.gasMarketV2=async e=>{let t,s;return"tx"in e?(void 0===e.tx.nonce&&(e.tx.nonce=await this.getRecommendNonce({from:e.tx.from,chainId:e.chain.id})),void 0!==e.tx.gasPrice&&""!==e.tx.gasPrice||(e.tx.gasPrice="0x0"),void 0!==e.tx.gas&&""!==e.tx.gas||(e.tx.gas="0x0"),void 0!==e.tx.data&&""!==e.tx.data||(e.tx.data="0x"),t=e.chain.serverId,s={chainId:e.tx.chainId,data:e.tx.data,from:e.tx.from,gas:e.tx.gas,nonce:e.tx.nonce,to:e.tx.to,value:e.tx.value,gasPrice:e.tx.gasPrice}):t=e.chainId,u.hs.gasMarketV2({customGas:e.customGas,chainId:t,tx:s})},this.savedUnencryptedKeyringData=async()=>u.fh.savedUnencryptedKeyringData(),this.hasEncryptedKeyringData=async()=>u.fh.hasEncryptedKeyringData(),this.hasUnencryptedKeyringData=async()=>u.fh.hasUnencryptedKeyringData(),this.resetPassword=async e=>u.fh.resetPassword(e),this.resetBooted=async()=>u.fh.resetBooted(),this.getUnencryptedKeyringTypes=async()=>u.fh.getUnencryptedKeyringTypes()}_getKeyringByType(e){const t=u.fh.getKeyringsByType(e)[0];if(t)return t;throw r.ethErrors.rpc.internal(`No ${e} keyring found`)}getContactsByMap(){return u.b3.getContactsByMap()}async _setCurrentAccountFromKeyring(e,t=0){const s=e.getAccountsWithBrand?await e.getAccountsWithBrand():await e.getAccounts(),a=s[t<0?t+s.length:t];if(!a)throw new Error((0,K.t)("background.error.emptyAccount"));const n={address:"string"==typeof a?a:a.address,type:e.type,brandName:"string"==typeof a?e.type:a.brandName};return u.$8.setCurrentAccount(n),[n]}async generateAliasCacheForFreshMnemonic(e,t){const s=ce[e];if(!s)throw new Error("failed to generateAliasCacheForFreshMnemonic, no keyring found.");const a=(await s.getAccounts()).length??0;return t.sort(((e,t)=>e-t)).map(((e,t)=>{const n=s._addressFromIndex(e)[0],r=(0,I.fs)({keyringType:m.pY.HdKeyring,keyringCount:s.index,addressCount:a+t});return u.b3.updateCacheAlias({address:n,name:r}),{address:n,id:e,alias:r}}))}async generateAliasCacheForExistedMnemonic(e,t){const s=u.fh.keyrings.find((t=>t.type===m.Cr.MNEMONIC&&t.mnemonic===e));if(!s)throw new Error("failed to generateAliasCacheForExistedMnemonic, no keyring found.");const a=(await s.getAccounts()).length;for(let e=0;e<t.length;e++){const n=(0,I.fs)({keyringType:m.Cr.MNEMONIC,keyringCount:s.index,addressCount:a+e});u.b3.updateCacheAlias({address:t[e],name:n})}}}const he=new de;M.q.onAutoLock=async()=>{await he.lockWallet(),C.Z.emit(m.FP.broadcastToUI,{method:m.FP.LOCK_WALLET})},M.q.syncAutoLockAt();const ue=he;a()}catch(e){a(e)}}))},773105:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{e:()=>p,l:()=>l});var n=s(969007),r=s(244431),i=s.n(r),o=s(71523),c=s(737820),d=s(936609),h=s(177447),u=e([o,c]);[o,c]=u.then?(await u)():u;const l=async({gas:e,tx:t,gasUsed:s})=>{if(e>0)return{needRatio:!0,gas:new(i())(e),gasUsed:s};const a=t.gasLimit||t.gas;if(a&&new(i())(a).gt(0))return{needRatio:!0,gas:new(i())(a),gasUsed:Number(a)};try{const e=await c.hs.historyGasUsed({tx:{...t,nonce:t.nonce||"0x1",data:t.data,value:t.value||"0x0",gas:t.gas||""},user_addr:t.from});if(e.gas_used>0)return{needRatio:!0,gas:new(i())(e.gas_used),gasUsed:e.gas_used}}catch(e){}return{needRatio:!1,gas:new(i())(1e6),gasUsed:1e6}},p=async({from:e,chainId:t})=>{const s=(0,n.Ed)({id:t});if(!s)throw new Error((0,d.t)("background.error.invalidChainId"));const a=await o.Z.ethRpc({data:{method:"eth_getTransactionCount",params:[e,"latest"]},session:h.r},s.serverId),r=await c.Lh.getNonceByChain(e,t)||0;return`0x${i().max(a,r).toString(16)}`};a()}catch(e){a(e)}}))},651065:(e,t,s)=>{"use strict";s.a(e,(async(e,t)=>{try{var a=s(478051),n=s(76245),r=s(875864),i=s(171417),o=s(625284),c=s(850918),d=s(863409),h=s(812074),u=s(568917),l=s(177447),p=s(727484),g=s.n(p),y=s(370178),m=s.n(y),w=s(179826),T=s(496486),f=(s(928660),s(693150)),A=s.n(f),C=s(649778),S=s(464154),v=s(737820),b=s(638591),P=s(652449),I=s(961096),E=s(162529),k=s(330122),x=s(244093),L=s(144820),N=e([o,C,S,v,b,I]);[o,C,S,v,b,I]=N.then?(await N)():N,d.Z.adapter=u.Z,g().extend(m());const{PortMessage:D}=c.v;let _=!1;async function O(){await B();const e=await L.tO.get("keyringState");v.fh.loadStore(e),v.fh.store.subscribe((e=>L.tO.set("keyringState",e))),await v.hs.init(),await P.d.init(),await(0,n.Z)(),await b.j.init(),await v.Pv.init(),await v.$8.init(),await v.Hx.init(),await v.dV.init(),await v.dh.init(),await v.Lh.init(),await v.b3.init(),await v.$C.init(),await v.j2.init(),await v.wj.init(),await v.q3.init(),await v.eL.init(),await v.ll.init(),await v.Sb.init(),await v.zn.init(),await v.nZ.init(),await v.iv.init(),await C.d.tryUnlock(),x.Z.start(),_=!0,I.d.roll(),v.Hx.roll(),v.dV.roll(),R(),C.d.syncMainnetChainList(),v.fh.isBooted()||E.T.init(),a.Z.addEventListener(l.EK.ON_TX_COMPLETED,(({address:e})=>{e&&(C.d.forceExpireInMemoryAddressBalance(e),C.d.forceExpireInMemoryNetCurve(e))})),i.nn&&(globalThis._forceExpireBalanceAboutData=e=>{a.Z.emit(l.EK.ON_TX_COMPLETED,{address:e})}),await(0,c.w)(),chrome.runtime.onMessage.addListener(((e,t,s)=>{"getBackgroundReady"===e.type&&s({data:{ready:!0}})})),v.iv.setUninstalled()}h.S1({dsn:"https://a864fbae7ba680ce68816ff1f6ef2c4e@o4507018303438848.ingest.us.sentry.io/4507018389749760",release:"0.93.8",environment:(0,i.EV)(),ignoreErrors:['Transport error: {"event":"transport_error","params":["Websocket connection failed"]}',"Failed to fetch","TransportOpenUserCancelled","Non-Error promise rejection captured with keys: message, stack"]}),O();{let M;v.fh.on("unlock",(()=>{C.d.syncMainnetChainList(),M&&clearInterval(M);const e=async()=>{const e=v.$8.getSendLogTime();if(g()(e).utc().isSame(g()().utc(),"day"))return;const t=b.j.getList()?.length;t&&(0,o.m)({category:"Custom Network",action:"Custom Network Status",value:t});const s=v.$8.getSavedChains();(0,o.m)({category:"User",action:"pinnedChains",label:s.join(",")});const a=(await C.d.getAccounts()).map((e=>({category:l.tH[e.type],action:e.brandName,label:(C.d.getAddressCacheBalance(e.address)?.total_usd_value||0)<=0?"empty":"notEmpty"}))),n=(0,T.groupBy)(a,(e=>`${e.category}_${e.action}_${e.label}`));Object.values(n).forEach((e=>{(0,o.m)({category:"UserAddress",action:e[0].category,label:[e[0].action,e[0].label,e.length].join("|"),value:e.length})})),v.$8.updateSendLogTime(Date.now())};e(),M=setInterval(e,3e5)})),v.fh.on("lock",(()=>{M&&(clearInterval(M),M=null)})),v.fh.on("removedAccount",(async(e,t,s)=>{if(t!==l.pY.WatchAddressKeyring){const t=await v.fh.getAllAdresses(),s=v.nZ.getGasAccountData();if(!s?.account?.address)return;!t.some((e=>(0,k.Wr)(e.address,s.account.address)&&e.type!==l.pY.WatchAddressKeyring))&&(0,k.Wr)(e,s.account.address)&&(v.nZ.setGasAccountSig(),a.Z.emit(l.FP.broadcastToUI,{method:l.FP.GAS_ACCOUNT.LOG_OUT}))}}))}function R(){const e=v.$8.getSendEnableTime();g()(e).utc().isSame(g()().utc(),"day")||((0,o.m)({category:"User",action:"enable"}),v.$8.updateSendEnableTime(Date.now()))}async function B(){await E.T.isStorageExisted()||await E.T.openUserGuide()}v.fh.on("resetPassword",(async()=>{const e=v.nZ.getGasAccountData();e?.account?.type!==l.pY.SimpleKeyring&&e?.account?.type!==l.pY.HdKeyring||(v.nZ.setGasAccountSig(),a.Z.emit(l.FP.broadcastToUI,{method:l.FP.GAS_ACCOUNT.LOG_OUT}))})),A().runtime.onConnect.addListener((e=>{if("popup"===e.name||"notification"===e.name||"tab"===e.name){const t=new D(e);t.listen((e=>{if(e?.type)switch(e.type){case"broadcast":a.Z.emit(e.method,e.params);break;case"openapi":if(C.d.openapi[e.method])return C.d.openapi[e.method].apply(null,e.params);break;case"testnetOpenapi":if(C.d.testnetOpenapi[e.method])return C.d.testnetOpenapi[e.method].apply(null,e.params);break;default:if(e.method){const t=C.d[e.method].apply(null,e.params);return l.D1?"function"==typeof t?.then?t.then((e=>"object"!=typeof e||(0,T.isNull)(e)?e:(0,r.EN)(e))):"object"!=typeof t||(0,T.isNull)(t)?t:(0,r.EN)(t):t}}}));const s=e=>{t.send("message",{event:"broadcast",data:{type:e.method,data:e.params}})};return"popup"===e.name&&(v.$8.setPopupOpen(!0),e.onDisconnect.addListener((()=>{v.$8.setPopupOpen(!1)}))),A().runtime.sendMessage({type:"pageOpened"}),a.Z.addEventListener(l.FP.broadcastToUI,s),void e.onDisconnect.addListener((()=>{A().runtime.sendMessage({type:"pageClosed"}),a.Z.removeEventListener(l.FP.broadcastToUI,s)}))}if(!e.sender?.tab)return;const t=new D(e),s=(0,S.Z)(origin);s.events.on("notification",(e=>{t.send("message",{event:"message",data:{type:e.method,data:e.params}}),t.send("message",{event:"data",data:e})})),t.listen((async a=>{if(!_)throw w.ethErrors.provider.disconnected();const n=e.sender?.tab?.id;if(void 0===n||!e.sender?.url)return;const i=(0,r.ir)(e.sender.url),o=v.Fc.getOrCreateSession(n,i),c={data:a,session:o,origin:i};if(!o?.origin){const e=await A().tabs.get(n);o?.setProp({origin:i,name:e.title||"",icon:e.favIconUrl||""})}return c.session.setPortMessage(t),s.methods[a?.method]&&v.Pv.getConnectedSite(o.origin)?.isConnected?s.methods[a.method].call(null,c):(0,C.G)(c)})),e.onDisconnect.addListener((e=>{s.destroy()}))})),t()}catch(K){t(K)}}))},858920:(e,t,s)=>{"use strict";s.d(t,{Z:()=>i});var a=s(330122),n=s(727484),r=s.n(n);const i=new class{constructor(){this.init=async()=>{this.store=await(0,a.D0)({name:"HDKeyRingLastAddAddrTime",template:{}})},this.addUnixRecord=e=>{this.store[e]=r()().unix()},this.getStore=()=>this.store}}},111211:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{q:()=>u});var n=s(171417),r=s(693693),i=s(693150),o=s.n(i),c=e([r]);r=(c.then?(await c)():c)[0];const d="autoLockAt";class h{constructor({onAutoLock:e}={}){this.timer=null,this.autoLockAt=null,this.onAutoLock=e}async syncAutoLockAt(){if(!n.AU)return;const e=(await o().storage.session.get(d))[d];e&&(Date.now()>=e?this.onAutoLock?.():(this.autoLockAt=e,this.timer=setTimeout((()=>this.onAutoLock?.()),e-Date.now())))}async resetTimer(){const e=r.Z.getPreference("autoLockTime");if(null!==this.timer&&clearTimeout(this.timer),!e)return;const t=60*e*1e3;this.autoLockAt=Date.now()+t,n.AU&&await o().storage.session.set({[d]:this.autoLockAt}),this.timer=setTimeout((()=>this.onAutoLock?.()),t)}setLastActiveTime(){this.resetTimer()}setAutoLockTime(e){r.Z.setAutoLockTime(e),this.resetTimer()}}const u=new h;a()}catch(e){a(e)}}))},896769:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>c});var n=s(330122),r=s(737820),i=e([r]);r=(i.then?(await i)():i)[0];class o{constructor(){this.store={selectedChain:null,selectedFromToken:void 0,selectedToToken:void 0,selectedAggregators:void 0,unlimitedAllowance:!1,sortIncludeGasFee:!0,firstOpen:!0},this.init=async()=>{const e=await(0,n.D0)({name:"bridge",template:{selectedChain:null,unlimitedAllowance:!1,sortIncludeGasFee:!0,txQuotes:{},firstOpen:!0}});this.store=e||this.store},this.getBridgeData=e=>e?this.store[e]:{...this.store},this.getBridgeAggregators=()=>this.store.selectedAggregators,this.setBridgeAggregators=e=>{this.store.selectedAggregators=[...e]},this.getSelectedChain=()=>this.store.selectedChain,this.setSelectedChain=e=>{this.store.selectedChain=e},this.getSelectedFromToken=()=>this.store.selectedFromToken,this.getSelectedToToken=()=>this.store.selectedToToken,this.setSelectedFromToken=e=>{this.store.selectedFromToken=e},this.setSelectedToToken=e=>{this.store.selectedToToken=e},this.getUnlimitedAllowance=()=>this.store.unlimitedAllowance,this.setUnlimitedAllowance=e=>{this.store.unlimitedAllowance=e},this.getBridgeSortIncludeGasFee=()=>this.store.sortIncludeGasFee,this.setBridgeSortIncludeGasFee=e=>{this.store.sortIncludeGasFee=e},this.setBridgeSettingFirstOpen=e=>{this.store.firstOpen=e},this.txQuotes={},this.addTx=(e,t,s)=>{this.txQuotes[`${e}-${t}`]=s},this.postBridge=(e,t,s)=>{const{postBridgeHistory:a}=r.hs,n=`${e}-${s.data}`,i={...this.txQuotes},o=i[n];if(o)return delete i[n],this.txQuotes=i,a({...o,tx:s,tx_id:t})}}}const c=new o;a()}catch(e){a(e)}}))},622400:(e,t,s)=>{"use strict";s.d(t,{Z:()=>n});var a=s(330122);const n=new class{constructor(){this.cache={},this.init=async()=>{this.store=await(0,a.D0)({name:"contactBook",template:{}})},this.getContactByAddress=e=>{const t=this.store[e.toLowerCase()];return t?{...t,address:t.address.toLowerCase()}:t},this.listContacts=()=>Object.values(this.store).map((e=>({...e,address:e?.address.toLowerCase()}))).filter((e=>!!e?.isContact))||[],this.listAlias=()=>Object.values(this.store).map((e=>({...e,address:e?.address.toLowerCase()}))).filter((e=>e?.isAlias)),this.updateAlias=e=>{const t=e.address.toLowerCase();this.store[t]?this.store[t]=Object.assign({},this.store[t],{name:e.name,address:t,isAlias:!0}):this.store[t]={name:e.name,address:t,isAlias:!0,isContact:!1}},this.addAlias=this.updateAlias,this.removeAlias=e=>{const t=e.toLowerCase();this.store[t]&&(this.store[t].isContact?this.store[t]=Object.assign({},this.store[t],{isAlias:!1}):delete this.store[t])},this.getContactsByMap=()=>this.store,this.getCacheAlias=e=>this.cache[e.toLowerCase()],this.updateCacheAlias=e=>{const t=e.address.toLowerCase();this.cache[t]={name:e.name,address:e.address.toLowerCase(),isAlias:!0,isContact:!1}},this.removeCacheAlias=e=>{const t=e.toLowerCase();delete this.cache[t]}}}},17982:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{V:()=>l});var n=s(960398),r=s(737820),i=s(693150),o=s.n(i),c=e([r]);r=(c.then?(await c)():c)[0];const d=()=>{const e=[];for(const t of r.Fc.getSessionMap().values())t?.origin&&e.push(t.origin);return e},h=e=>{const t=r.Pv.getSite(e);return t?.preferMetamask?"Do not prefer to use MetaMask on this dapp":"Prefer to use MetaMask on this dapp"};class u{constructor(){this.store=new Set,this.listener=(e,t)=>{if(!e.menuItemId)return;let s=r.Pv.getSite(e.menuItemId);if(!s&&t&&(s={origin:e.menuItemId.toString(),icon:t.favIconUrl||"",name:t.title||"",isSigned:!1,isConnected:!1,isTop:!1,chain:n.h.ETH}),!s)return;const a=r.$8.getIsDefaultWallet(s.origin);s.preferMetamask=!s.preferMetamask,r.Pv.setSite(s),this.update(e.menuItemId);const i=r.$8.getIsDefaultWallet(s.origin);a!==i&&r.$8.getHasOtherProvider()&&r.Fc.broadcastEvent("defaultWalletChanged",i?"rabby":"metamask",s.origin)},o().contextMenus.onClicked.addListener(this.listener)}create(e){!this.store.has(e)&&r.$8.getHasOtherProvider()&&(o().contextMenus.create({id:e,title:h(e),documentUrlPatterns:[`${e}/*`]},(()=>{})),this.store.add(e))}createOrUpdate(e){this.store.has(e)?this.update(e):this.create(e)}update(e){const t=e.toString();this.store.has(t)&&o().contextMenus.update(e,{title:h(e)})}remove(e){this.store.has(e)&&o().contextMenus.remove(e).then((()=>{this.store.delete(e)}))}removeAll(){this.store.clear(),o().contextMenus.removeAll()}async sync(){const e=await d();this.store.forEach((t=>{e.includes(t)||this.remove(t)})),e.forEach((e=>{this.store.has(e)||this.create(e)}))}async init(){this.removeAll();(await d()).forEach((e=>{this.create(e)}))}}const l=new u;a()}catch(e){a(e)}}))},638591:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{j:()=>L});var n=s(674018),r=s(969007),i=s(330122),o=s(244431),c=s(222751),d=s(496486),h=s(516693),u=s(349321),l=s(394898),p=s(986164),g=s(871506),y=s(481855),m=s(586162),w=s(425884),T=s(324453),f=s(788930),A=s(988819),C=s(273392),S=s(625284),v=s(762158),b=s(144820),P=e([S]);S=(P.then?(await P)():P)[0];const I=8e3,E=4294967295;let k=Math.floor(Math.random()*E);class x{constructor(){this.store={customTestnet:{},customTokenList:[]},this.chains={},this.logos={},this.init=async()=>{const e=await(0,i.D0)({name:"customTestnet",template:{customTestnet:{},customTokenList:[]}});this.store=e||this.store;const t=await b.tO.get("rpc");Object.values(this.store.customTestnet).forEach((e=>{const s=t.customRPC[e.enum]&&t.customRPC[e.enum]?.enable?{...e,rpcUrl:t.customRPC[e.enum].url}:e,a=N(s);this.chains[e.id]=a})),this.syncChainList(),this.fetchLogos().then((()=>{this.syncChainList()}))},this.add=async e=>this._update(e,!0),this.update=async e=>this._update(e),this._update=async(e,t)=>{const s=(0,r.Ed)({id:+e.id});if(t&&s)return s.isTestnet?{error:{key:"id",message:"You've already added this chain",status:"alreadyAdded"}}:{error:{key:"id",message:"Chain already integrated by Rabby Wallet",status:"alreadySupported"}};try{const{data:t}=await C.d.post(e.rpcUrl,{jsonrpc:"2.0",id:(k=(k+1)%E,k),method:"eth_chainId"},{timeout:6e3});if(+t.result!=+e.id)return{error:{key:"rpcUrl",message:"RPC does not match the chainID"}}}catch(e){return{error:{key:"rpcUrl",message:"RPC invalid or currently unavailable"}}}const a=D(e);return this.store.customTestnet={...this.store.customTestnet,[e.id]:a},v.Z.hasCustomRPC(a.enum)||(this.chains[e.id]=N(e)),this.syncChainList(),this.getList().length&&(0,S.m)({category:"Custom Network",action:"Custom Network Status",value:this.getList().length}),this.store.customTestnet[e.id]},this.remove=e=>{this.store.customTestnet=(0,d.omit)(this.store.customTestnet,e),this.store.customTokenList=this.store.customTokenList.filter((t=>t.chainId!==e)),delete this.chains[e],this.syncChainList(),this.getList().length&&(0,S.m)({category:"Custom Network",action:"Custom Network Status",value:this.getList().length})},this.getClient=e=>this.chains[e],this.getList=()=>Object.values(this.store.customTestnet).map((e=>{const t=D(e);return this.logos?.[t.id]&&(t.logo=this.logos[t.id].chain_logo_url,t.nativeTokenLogo=this.logos[t.id].token_logo_url||""),t})),this.getTransactionReceipt=async({chainId:e,hash:t})=>{const s=this.getClient(+e);if(!s)throw new Error(`Invalid chainId: ${e}`);const a=await(0,y.a)(s,{hash:t});return{...a,status:"success"===a.status?"0x1":"0x0"}},this.getTx=({hash:e,chainId:t})=>{const s=(0,r.Ed)({id:t});if(!s)throw new Error(`Invalid chainId: ${t}`);return L.getTransactionReceipt({chainId:s.id,hash:e}).then((e=>({...e,hash:e.transactionHash,code:0,status:1,gas_used:Number(e.gasUsed),token:(0,n.gV)({amount:0,symbol:s.nativeTokenSymbol,decimals:s.nativeTokenDecimals,id:s.nativeTokenAddress,chainId:s.id,rawAmount:"0",logo:this.logos?.[s.id]?.token_logo_url})}))).catch((t=>({hash:e,code:-1,status:0,gas_used:0,token:(0,n.gV)({amount:0,symbol:s.nativeTokenSymbol,decimals:s.nativeTokenDecimals,id:s.nativeTokenAddress,chainId:s.id,rawAmount:"0",logo:this.logos?.[s.id]?.token_logo_url})})))},this.getTransactionCount=({address:e,blockTag:t,chainId:s})=>{const a=this.getClient(+s);if(!a)throw new Error(`Invalid chainId: ${s}`);return(0,m.K)(a,{address:e,blockTag:t})},this.estimateGas=async({address:e,tx:t,chainId:s})=>{const a=this.getClient(+s);if(!a)throw new Error(`Invalid chainId: ${s}`);return(await(0,w.Q)(a,{account:e,...t})).toString()},this.getGasPrice=async e=>{const t=this.getClient(+e);if(!t)throw new Error(`Invalid chainId: ${e}`);return(await(0,T.o)(t)).toString()},this.getGasMarket=async({chainId:e,custom:t})=>{const s=await this.getGasPrice(e);return[{level:"slow",baseFeePercentageMultiplier:110,priorityFeePercentageMultiplier:94},{level:"normal",baseFeePercentageMultiplier:120,priorityFeePercentageMultiplier:97},{level:"fast",baseFeePercentageMultiplier:125,priorityFeePercentageMultiplier:98}].map((e=>({level:e.level,price:new o.BigNumber(s).multipliedBy(e.baseFeePercentageMultiplier).div(100).integerValue().toNumber(),priority_price:Math.round(new o.BigNumber(s).multipliedBy(e.priorityFeePercentageMultiplier).div(100).integerValue().toNumber()),front_tx_count:0,estimated_seconds:0}))).concat([{level:"custom",price:t||0,priority_price:t||0,front_tx_count:0,estimated_seconds:0}])},this.addToken=e=>{if(this.hasToken(e))throw new Error("Token already added");this.store.customTokenList=[...this.store.customTokenList,e]},this.removeToken=e=>{this.store.customTokenList=this.store.customTokenList.filter((t=>!(0,r.Wz)(t,e)))},this.hasToken=e=>!!this.store.customTokenList.find((t=>(0,r.Wz)(e,t))),this.getToken=async({chainId:e,address:t,tokenId:s})=>{const[a,n]=await Promise.all([this.getBalance({chainId:e,address:t,tokenId:s}),this.getTokenInfo({chainId:e,tokenId:s})]),{decimals:r}=n;return{...n,amount:new o.BigNumber(a.toString()).div(10**r).toNumber(),rawAmount:a.toString(),logo:s&&s?.replace("custom_","")!==String(e)?void 0:this.logos?.[e]?.token_logo_url}},this.getBalance=async({chainId:e,address:t,tokenId:s})=>{const a=this.getClient(+e),n=(0,r.Ed)({id:+e});if(!a||!n)throw new Error(`Invalid chainId: ${e}`);if(!s||s===n.nativeTokenAddress){return await(0,f.s)(a,{address:t})}return await(0,A.L)(a,{address:s,abi:h.Wo,functionName:"balanceOf",args:[t]})},this.getTokenInfo=async({chainId:e,tokenId:t})=>{const s=this.getClient(+e),a=(0,r.Ed)({id:+e});if(!s||!a)throw new Error(`Invalid chainId: ${e}`);if(!t||t===a.nativeTokenAddress)return{id:a.nativeTokenAddress,symbol:a.nativeTokenSymbol,chainId:e,decimals:a.nativeTokenDecimals};const n=this.store.customTokenList?.find((s=>(0,r.Wz)(s,{id:t,chainId:e})));if(n)return n;const[i,o]=await Promise.all([(0,A.L)(s,{address:t,abi:h.Wo,functionName:"symbol"}),(0,A.L)(s,{address:t,abi:h.Wo,functionName:"decimals"})]);return{id:t,symbol:i,chainId:e,decimals:o}},this.getTokenList=async({address:e,chainId:t,q:s,isRemote:a})=>{let n=[...Object.values(this.store.customTestnet).map((e=>({id:null,chainId:e.id,symbol:e.nativeTokenSymbol,logo:this.logos?.[e.id]?.token_logo_url}))),...this.store.customTokenList||[]];t&&(n=n.filter((e=>e.chainId===t))),s&&(n=n.filter((e=>e.id===s||e.symbol.toLowerCase().includes(s.toLowerCase()))));let r=n.map((t=>({tokenId:t.id,chainId:t.chainId,address:e})));if(s&&(0,u.U)(s)&&a){r=(t?[t]:Object.values(this.store.customTestnet).map((e=>e.id))).map((t=>({tokenId:s,chainId:t,address:e})))}const o=await Promise.all(r.map((e=>(0,i.Fb)(this.getToken(e),I).catch((e=>(console.error(e),null))))));return(0,d.sortBy)(o.filter((e=>!!e)),(e=>!e.id),(e=>-e.amount))},this.getTokenWithBalance=this.getTokenList,this.syncChainList=()=>{const e=this.getList();(0,r.Vm)({testnetList:e})},this.fetchLogos=async()=>{try{const{data:e}=await C.d.get("https://static.debank.com/supported_testnet_chains.json");return this.logos=e,e}catch(e){return console.error(e),{}}},this.setCustomRPC=({chainId:e,url:t})=>{this.getClient(e)&&(this.chains[e]=N({...this.store.customTestnet[e],rpcUrl:t}))},this.removeCustomRPC=e=>{this.getClient(e)&&(this.chains[e]=N(this.store.customTestnet[e]))}}}const L=new x,N=e=>(0,l.e)({chain:(0,p.a)({id:e.id,name:e.name,nativeCurrency:{symbol:e.nativeTokenSymbol,name:e.nativeTokenSymbol,decimals:18},rpcUrls:{default:{http:[e.rpcUrl]}}}),transport:(0,g.d)(e.rpcUrl,{timeout:3e5})}),D=e=>({...e,id:+e.id,hex:(0,c.intToHex)(+e.id),network:""+e.id,enum:`CUSTOM_${e.id}`,serverId:`custom_${e.id}`,nativeTokenAddress:`custom_${e.id}`,nativeTokenDecimals:18,nativeTokenLogo:"",scanLink:e.scanLink||"",logo:`data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 28 28'><circle cx='14' cy='14' r='14' fill='%236A7587'></circle><text x='14' y='15' dominant-baseline='middle' text-anchor='middle' fill='white' font-size='16' font-weight='500'>${encodeURIComponent(e.name.trim().substring(0,1).toUpperCase())}</text></svg>`,eip:{1559:!1},isTestnet:!0,severity:0});a()}catch(e){a(e)}}))},962689:(e,t,s)=>{"use strict";s.d(t,{Z:()=>n});var a=s(330122);const n=new class{constructor(){this.store={sig:void 0,accountId:void 0},this.init=async()=>{const e=await(0,a.D0)({name:"gasAccount",template:{}});this.store=e||this.store},this.getGasAccountData=e=>e?this.store[e]:{...this.store},this.getGasAccountSig=()=>({sig:this.store.sig,accountId:this.store.accountId}),this.setGasAccountSig=(e,t)=>{e&&t?(this.store.sig=e,this.store.accountId=t?.address,this.store.account={...t}):(this.store.sig=void 0,this.store.accountId=void 0,this.store.account=void 0)}}}},173520:(e,t,s)=>{"use strict";s.d(t,{ZP:()=>r});var a=s(936609);a.ZP.init({fallbackLng:"en",defaultNS:"translations",interpolation:{escapeValue:!1},returnNull:!1,returnEmptyString:!1});const n=async e=>{if(a.ZP.hasResourceBundle(e,"translations"))return;const t=await(async e=>{const t=await fetch(`./locales/${e}/messages.json`);return await t.json()})(e);a.ZP.addResourceBundle(e,"translations",t)};n("en"),a.ZP.on("languageChanged",(function(e){n(e)}));const r=a.ZP},737820:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{$8:()=>o.Z,$C:()=>g.Z,BF:()=>n.Z,Fc:()=>c.Z,Hx:()=>h.Z,Lh:()=>l.Z,NW:()=>f.Z,Pv:()=>i.Z,Sb:()=>b.Z,VS:()=>A.V,ag:()=>T.ZP,b3:()=>p.Z,dV:()=>S.d,dh:()=>u.Z,eL:()=>C.Z,fh:()=>r.ZP,hs:()=>d.Z,iv:()=>E.Z,j2:()=>y.Z,ll:()=>v.Z,nZ:()=>I.Z,q3:()=>w.Z,wj:()=>m.Z,zn:()=>P.Z});var n=s(178124),r=s(800229),i=s(905368),o=s(693693),c=s(749518),d=s(652449),h=s(870893),u=s(46577),l=s(764289),p=s(622400),g=s(852130),y=s(695140),m=s(54485),w=s(762158),T=s(173520),f=s(682395),A=s(17982),C=s(446590),S=s(427552),v=s(152839),b=s(858920),P=s(896769),I=s(962689),E=s(186429),k=e([n,r,o,c,h,l,m,A,S,P,E]);[n,r,o,c,h,l,m,A,S,P,E]=k.then?(await k)():k,a()}catch(e){a(e)}}))},156685:(e,t,s)=>{"use strict";s.d(t,{R:()=>h,S:()=>d});var a=s(177447),n=s(171417);const r=n.AU?s(733380):s(38513),i=n.AU?s(471120):s(266042),o=n.AU?s(938793):s(934867),c=n.AU?s(486156):s(269756);function d(e){return e===a.Cr.HARDWARE.IMKEY?new r.default:e===a.Cr.HARDWARE.ONEKEY?new i.default:e===a.Cr.HARDWARE.TREZOR?new o.default:e===a.Cr.HARDWARE.BITBOX02?new c.default:void 0}const h=e=>!!d(e)},350420:(e,t,s)=>{"use strict";s.d(t,{Z:()=>a});const a=class{constructor(e){this.type="",this.getAccounts=e.getAccounts?.bind(e),this.activeAccounts=e.activeAccounts?.bind(e),this.getFirstPage=e.getFirstPage?.bind(e),this.getNextPage=e.getNextPage?.bind(e),this.unlock=e.unlock?.bind(e),this.getAccountsWithBrand=e.getAccountsWithBrand?.bind(e),this.type=e.type}}},269756:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.r(t),s.d(t,{default:()=>h});var n=s(655099),r=s(693150),i=s.n(r),o=s(249840),c=s(222751),d=e([n]);n=(d.then?(await d)():d)[0];class h{constructor(){this.isDeviceConnected=!1,this.app=null,this.hdk=new o,this.init=async e=>{try{const t=()=>{this.maybeClosePopup()},s=await n.Dv(t),a=await s.unlockAndPair(),r=a.getPairingCode();r&&await this.openPopup(`vendor/bitbox02/bitbox02-pairing.html?code=${encodeURIComponent(r)}`),this.app=await a.waitConfirm(),this.maybeClosePopup(),this.isDeviceConnected=!0;const i=await this.app.ethXpub(e);if(this.hdk=o.fromExtendedKey(i),!this.app.ethSupported())throw new Error("Unsupported device")}catch(e){throw console.error(e),this.app&&this.app.close(),e}},this.ethSignTransaction=async(e,t,s)=>{if(!this.app)throw new Error("Device not initialized");const a={nonce:c.toBuffer(s.nonce),gasPrice:c.toBuffer(s.gasPrice),gasLimit:c.toBuffer(s.gasLimit),recipient:c.toBuffer(s.to),value:c.toBuffer(s.value),data:c.toBuffer(s.data)};return this.app.ethSignTransaction(BigInt(e),t,a)},this.ethSign1559Transaction=async(e,t)=>{if(!this.app)throw new Error("Device not initialized");const s={chainId:Number(t.chainId),nonce:c.toBuffer(t.nonce),maxPriorityFeePerGas:c.toBuffer(t.maxPriorityFeePerGas),maxFeePerGas:c.toBuffer(t.maxFeePerGas),gasLimit:c.toBuffer(t.gasLimit),recipient:c.toBuffer(t.to),value:c.toBuffer(t.value),data:c.toBuffer(t.data)};return this.app.ethSign1559Transaction(e,s)},this.ethSignMessage=async(e,t,s)=>{if(!this.app)throw new Error("Device not initialized");return this.app.ethSignMessage(BigInt(e),t,c.toBuffer(s))},this.ethSignTypedMessage=async(e,t,s)=>{if(!this.app)throw new Error("Device not initialized");return this.app.ethSignTypedMessage(BigInt(e),t,s)}}async openPopup(e){await i().windows.create({url:e,type:"popup",width:320,height:175})}maybeClosePopup(){i().runtime.sendMessage({type:"bitbox02",action:"popup-close"})}}a()}catch(e){a(e)}}))},486156:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>o});var a=s(693150),n=s.n(a),r=s(219571),i=s(249840);class o{constructor(){this.isDeviceConnected=!1,this.hdk=new i,this.init=async e=>(n().runtime.onMessage.addListener(((e,t,s)=>{if(e.target===r.n_.extension&&e.event===r.uB.bitbox02DeviceConnect){const t=e.payload;"open-popup"===t.name&&this.openPopup(`vendor/bitbox02/bitbox02-pairing.html?code=${encodeURIComponent(t.pairingCode)}`).then(s),"close-popup"===t.name&&(this.maybeClosePopup(),s()),"pub-key"===t.name&&(this.hdk=i.fromExtendedKey(t.pubKey),s())}return!0})),new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.bitbox02Offscreen,action:r.w5.init,params:[e]}).then((e=>{e?.error?s(e.error):(this.isDeviceConnected=!0,t(e))}))}))),this.ethSign1559Transaction=async(...e)=>new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.bitbox02Offscreen,action:r.w5.ethSign1559Transaction,params:e}).then((e=>{e?.error?s(e.error):t(e)}))})),this.ethSignMessage=async(...e)=>new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.bitbox02Offscreen,action:r.w5.ethSignMessage,params:e}).then((e=>{e?.error?s(e.error):t(e)}))})),this.ethSignTransaction=async(...e)=>new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.bitbox02Offscreen,action:r.w5.ethSignTransaction,params:e}).then((e=>{e?.error?s(e.error):t(e)}))})),this.ethSignTypedMessage=async(...e)=>new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.bitbox02Offscreen,action:r.w5.ethSignTypedMessage,params:e}).then((e=>{e?.error?s(e.error):t(e)}))}))}async openPopup(e){await n().windows.create({url:e,type:"popup",width:320,height:175})}maybeClosePopup(){n().runtime.sendMessage({type:"bitbox02",action:"popup-close"})}}},919430:(e,t,s)=>{"use strict";s.d(t,{Z:()=>l});s(535666);var a=s(717187),n=s.n(a),r=s(222751),i=s(273278),o=s(866052),c=s(348764).Buffer;const d="BitBox02 Hardware",h="m";class u extends(n()){constructor(e={}){if(super(),this.type=d,this.accounts=[],this.page=0,this.perPage=5,this.unlockedAccount=0,this.paths={},this.hdPath="",!e.bridge)throw new Error("Bridge is required");this.bridge=e.bridge,this.deserialize(e)}serialize(){return Promise.resolve({hdPath:this.hdPath,accounts:this.accounts,page:this.page,paths:this.paths,perPage:this.perPage,unlockedAccount:this.unlockedAccount})}deserialize(e={}){return this.hdPath=e.hdPath||"m/44'/60'/0'/0",this.accounts=e.accounts||[],this.page=e.page||0,this.perPage=5,Promise.resolve()}async init(){await this.bridge.init(this.hdPath)}isUnlocked(){return Boolean(this.bridge.isDeviceConnected)}setAccountToUnlock(e){this.unlockedAccount=parseInt(e,10)}async addAccounts(e=1){await this.init();const t=this.unlockedAccount,s=t+e;for(let e=t;e<s;e++){const t=this._addressFromIndex(h,e);this.accounts.includes(t)||this.accounts.push(t),this.page=0}return this.accounts}getFirstPage(){return this.page=0,this.__getPage(1)}getNextPage(){return this.__getPage(1)}getPreviousPage(){return this.__getPage(-1)}async __getPage(e){this.page+=e,this.page<=0&&(this.page=1),await this.init();const t=(this.page-1)*this.perPage,s=t+this.perPage,a=[];for(let e=t;e<s;e++){if(e>=100)return a;const t=this._addressFromIndex(h,e);a.push({address:t,balance:null,index:e+1}),this.paths[r.toChecksumAddress(t)]=e}return a}async getAddresses(e,t){const s=e,a=t,n=[];await this.init();for(let e=s;e<a;e++){if(e>=100)return n;const t=this._addressFromIndex(h,e);n.push({address:t,balance:null,index:e+1}),this.paths[r.toChecksumAddress(t)]=e}return n}getAccounts(){return Promise.resolve(this.accounts.slice())}removeAccount(e){if(!this.accounts.map((e=>e.toLowerCase())).includes(e.toLowerCase()))throw new Error(`Address ${e} not found in this keyring`);this.accounts=this.accounts.filter((t=>t.toLowerCase()!==e.toLowerCase()))}async signTransaction(e,t){let s;await this.init();const a={to:t.to.toString(),value:`0x${t.value.toString("hex")}`,data:this._normalize(t.data),nonce:`0x${t.nonce.toString("hex")}`,gasLimit:`0x${t.gasLimit.toString("hex")}`};t instanceof o.FeeMarketEIP1559Transaction?(s=await this.bridge.ethSign1559Transaction(this._pathFromAddress(e),t.toJSON()),a.type="0x02",a.maxPriorityFeePerGas=`0x${t.maxPriorityFeePerGas.toString("hex")}`,a.maxFeePerGas=`0x${t.maxFeePerGas.toString("hex")}`):(t instanceof o.Transaction||t instanceof o.AccessListEIP2930Transaction)&&(s=await this.bridge.ethSignTransaction(t.common.chainIdBN().toNumber(),this._pathFromAddress(e),t.toJSON()),a.gasPrice=`0x${t.gasPrice.toString("hex")}`),a.chainId=`0x${t.common.chainIdBN().toString("hex")}`,a.r=s.r,a.s=s.s,a.v=s.v;const n=o.TransactionFactory.fromTxData(a);if(r.toChecksumAddress(n.getSenderAddress().toString())!==r.toChecksumAddress(e))throw new Error("signature doesnt match the right address");return n}signMessage(e,t){return this.signPersonalMessage(e,t)}async signPersonalMessage(e,t){await this.init();const s=await this.bridge.ethSignMessage(1,this._pathFromAddress(e),t);return`0x${c.concat([c.from(s.r),c.from(s.s),c.from(s.v)]).toString("hex")}`}async signTypedData(e,t,s={}){if("V4"!==s.version)throw new Error(`Only version 4 of typed data signing is supported. Provided version: ${s.version}`);await this.init();const a=await this.bridge.ethSignTypedMessage(t.domain.chainId||1,this._pathFromAddress(e),t),n=`0x${c.concat([c.from(a.r),c.from(a.s),c.from(a.v)]).toString("hex")}`,o=i.recoverTypedSignature({data:t,signature:n,version:s.version});if(r.toChecksumAddress(o)!==r.toChecksumAddress(e))throw new Error("The signature doesnt match the right address");return n}exportAccount(){return Promise.reject(new Error("Not supported on this device"))}forgetDevice(){this.accounts=[],this.page=0,this.unlockedAccount=0,this.paths={}}_normalize(e){return r.bufferToHex(e).toString()}_addressFromIndex(e,t){const s=this.bridge.hdk.derive(`${e}/${t}`),a=r.publicToAddress(s.publicKey,!0).toString("hex");return r.toChecksumAddress(`0x${a}`)}_pathFromAddress(e){const t=r.toChecksumAddress(e);let s=this.paths[t];if(void 0===s)for(let e=0;e<100;e++)if(t===this._addressFromIndex(h,e)){s=e;break}if(void 0===s)throw new Error("Unknown address");return`${this.hdPath}/${s}`}async getCurrentAccounts(){await this.init();return(await this.getAccounts()).map((e=>{const t=r.toChecksumAddress(e);return{address:e,index:this.paths[t]+1}}))}}u.type=d;const l=u},114219:(e,t,s)=>{"use strict";s.d(t,{Z:()=>d});var a=s(222751),n=s(717187),r=s.n(n),i=s(118269);const o="CoboArgus";class c extends(r()){constructor(e={}){super(),this.type=o,this.accounts=[],this.accountDetails={},this.accountToAdd=null,this.setAccountToAdd=e=>{this.accountToAdd=e},this.setAccountDetail=(e,t)=>{this.accountDetails={...this.accountDetails,[e.toLowerCase()]:t}},this.getAccountDetail=e=>this.accountDetails[e.toLowerCase()],this.addAccounts=async()=>{if(!this.accountToAdd)throw new Error("There is no address to add");if(!(0,i.isAddress)(this.accountToAdd))throw new Error("The address you're are trying to import is invalid");const e=(0,a.addHexPrefix)(this.accountToAdd);if(this.accounts.find((t=>t.toLowerCase()===e.toLowerCase()))){throw new Error(JSON.stringify({address:e,anchor:"DuplicateAccountError"}))}return this.accounts.push(e.toLowerCase()),[e]},this.deserialize(e)}deserialize(e){e.accounts&&(this.accounts=e.accounts),e.accountDetails&&(this.accountDetails=e.accountDetails)}serialize(){return Promise.resolve({accounts:this.accounts,accountDetails:this.accountDetails})}async getAccounts(){return this.accounts}removeAccount(e){this.accounts=this.accounts.filter((t=>t.toLowerCase()!==e.toLowerCase()))}async signTransaction(e,t,s){}signTypedData(){throw new Error("not support in Cobo Safe")}signPersonalMessage(){throw new Error("not support in Cobo Safe")}}c.type=o;const d=c},888227:(e,t,s)=>{"use strict";s.d(t,{NI:()=>y,Q_:()=>m,ZP:()=>C});var a=s(717187),n=s(118269),r=s(222751),i=s(863409),o=s(745712),c=s.n(o),d=s(358654),h=s(138680),u=s(791692),l=s(497858),p=s(169200);const g="Gnosis",y="TransactionBuilt",m="TransactionConfirmed";var w;!function(e){e.CALL="0",e.DELEGATE="1"}(w||(w={}));const T=[{type:"address",name:"verifyingContract"}],f=[{type:"uint256",name:"chainId"},{type:"address",name:"verifyingContract"}];class A extends a.EventEmitter{constructor(e={}){super(),this.type=g,this.accounts=[],this.accountToAdd=null,this.networkIdMap={},this.networkIdsMap={},this.currentTransaction=null,this.currentTransactionHash=null,this.currentSafeMessage=null,this.currentSafeMessageHash=null,this.onExecedTransaction=null,this.safeInstance=null,this.setNetworkId=(e,t)=>{this.networkIdMap={...this.networkIdMap,[e.toLowerCase()]:t}},this.setNetworkIds=(e,t)=>{this.networkIdsMap={...this.networkIdsMap,[e.toLowerCase()]:Array.isArray(t)?t:[t]},this.setNetworkId(e,Array.isArray(t)?t[0]:t)},this.setAccountToAdd=e=>{this.accountToAdd=e},this.generateTypedData=()=>{if(!this.safeInstance||!this.currentTransaction)return;const e=this.safeInstance,{version:t}=e,{data:s,value:a,to:n,gasPrice:r,safeTxGas:i,baseGas:o,nonce:d,refundReceiver:h,operation:u,gasToken:l}=this.currentTransaction.data;return(({safeAddress:e,safeVersion:t,baseGas:s,data:a,gasPrice:n,gasToken:r,nonce:i,operation:o,refundReceiver:d,safeTxGas:h,to:u,valueInWei:l,networkId:p})=>{const g=c()(t,">=1.3.0");var y;return{types:(y=t,{EIP712Domain:c()(y,">=1.3.0")?f:T,SafeTx:[{type:"address",name:"to"},{type:"uint256",name:"value"},{type:"bytes",name:"data"},{type:"uint8",name:"operation"},{type:"uint256",name:"safeTxGas"},{type:"uint256",name:"baseGas"},{type:"uint256",name:"gasPrice"},{type:"address",name:"gasToken"},{type:"address",name:"refundReceiver"},{type:"uint256",name:"nonce"}]}),domain:{chainId:g?p:void 0,verifyingContract:e},primaryType:"SafeTx",message:{to:u,value:l,data:a,operation:o,safeTxGas:h,baseGas:s,gasPrice:n,gasToken:r,refundReceiver:d,nonce:Number(i)}}})({safeAddress:e.safeAddress,data:s,valueInWei:a,safeVersion:t,to:n,gasPrice:r.toString(),gasToken:l,refundReceiver:h,nonce:d,baseGas:o.toString(),safeTxGas:i.toString(),operation:u,networkId:e.network})},this.addAccounts=async()=>{if(!this.accountToAdd)throw new Error("There is no address to add");if(!(0,n.isAddress)(this.accountToAdd))throw new Error("The address you're are trying to import is invalid");const e=(0,r.addHexPrefix)(this.accountToAdd);if(this.accounts.find((t=>t.toLowerCase()===e.toLowerCase()))){throw new Error(JSON.stringify({address:e,anchor:"DuplicateAccountError"}))}return this.accounts.push(e.toLowerCase()),[e]},this.deserialize(e)}deserialize(e){e.accounts&&(this.accounts=e.accounts),e.networkIdMap&&(this.networkIdMap=e.networkIdMap),e.networkIdsMap?this.networkIdsMap=e.networkIdsMap:this.networkIdsMap=Object.entries(e.networkIdMap||{}).reduce(((e,[t,s])=>(e[t]=Array.isArray(s)?s:[s],e)),{}),this.accounts=this.accounts.filter((e=>e.toLowerCase()in this.networkIdsMap))}serialize(){return Promise.resolve({accounts:this.accounts,networkIdMap:this.networkIdMap,networkIdsMap:this.networkIdsMap})}async getAccounts(){return this.accounts}async getTransactionHash(){if(this.currentTransactionHash)return this.currentTransactionHash;if(!this.safeInstance||!this.currentTransaction)return;const e=this.safeInstance,t=await e.getTransactionHash(this.currentTransaction);return this.currentTransactionHash=t,t}removeAccount(e){this.accounts=this.accounts.filter((t=>t.toLowerCase()!==e.toLowerCase()))}async confirmTransaction({safeAddress:e,transaction:t,networkId:s,provider:a}){let r=!1;if(t||(t=this.currentTransaction,r=!0),!t)throw new Error("No available transaction");const o=(0,n.toChecksumAddress)(e);let c=this.safeInstance;if(!r){const e=await i.Z.getSafeVersion({provider:a,address:o});c=new i.Z(o,e,a,s)}await c.confirmTransaction(t);const d=await c.getThreshold();this.emit(m,{safeAddress:e,data:{signatures:Array.from(t.signatures.values()).map((e=>({data:e.data,signer:e.signer}))),threshold:d}})}async addConfirmation(e,t){if(!this.currentTransaction||!this.safeInstance)throw new Error("No transaction in Gnosis keyring");const s=this.safeInstance;this.addSignature(e,t);const a=await this.getTransactionHash(),n=this.currentTransaction.signatures.get(e.toLowerCase());n&&await s.request.confirmTransaction(a,{signature:n.data})}async addPureSignature(e,t){if(!this.currentTransaction||!this.safeInstance)throw new Error("No transaction in Gnosis keyring");const s=new d.Z(e,t);this.currentTransaction.addSignature(s)}async addSignature(e,t){if(!this.currentTransaction||!this.safeInstance)throw new Error("No transaction in Gnosis keyring");const s=new d.Z(e,t);this.currentTransaction.addSignature(s)}async getOwners(e,t,s,a){const n=new i.Z(e,t,s,a);return await n.getOwners()}async execTransaction({safeAddress:e,transaction:t,networkId:s,provider:a}){let r=!1;if(t||(t=this.currentTransaction,r=!0),!t)throw new Error("No available transaction");const o=(0,n.toChecksumAddress)(e);let c=this.safeInstance;if(!r){const e=await i.Z.getSafeVersion({provider:a,address:o});c=new i.Z(o,e,a,s)}const d=await c.executeTransaction(t);return this.onExecedTransaction&&this.onExecedTransaction(d.hash),d.hash}async postTransaction(){const e=this.safeInstance,t=this.currentTransaction;if(!e||!t)return;const s=await e.getTransactionHash(t);try{await e.postTransaction(t,s)}catch(e){let t="Post transaction to Gnosis Server failed";if(e?.response?.data){const s=Object.keys(e.response.data);Array.isArray(e.response.data[s[0]])&&(t=e.response.data[s[0]][0])}else t=e.message;throw new Error(t)}}async buildTransaction(e,t,s,a,r){if(!this.accounts.find((t=>t.toLowerCase()===e.toLowerCase())))throw new Error("Can not find this address");const o=(0,n.toChecksumAddress)(e),c={data:t.data,from:e,to:this._normalize(t.to),value:this._normalize(t.value)||"0x0",safeTxGas:t.safeTxGas,nonce:t.nonce?Number(t.nonce):void 0,baseGas:t.baseGas,operation:t.operation},d=new i.Z(o,a,s,r);this.safeInstance=d;const h=await d.buildTransaction(c);return this.currentTransaction=h,this.currentTransactionHash=await d.getTransactionHash(h),h}async validateTransaction({address:e,transaction:t,provider:s,version:a,networkId:r},o){if(!this.accounts.find((t=>t.toLowerCase()===e.toLowerCase())))throw new Error("Can not find this address");const c=(0,n.toChecksumAddress)(e),d={data:t.data,from:e,to:this._normalize(t.to),value:this._normalize(t.value)||"0x0",safeTxGas:t.safeTxGas,nonce:t.nonce?Number(t.nonce):void 0,baseGas:t.baseGas,operation:t.operation},h=new i.Z(c,a,s,r),u=await h.buildTransaction(d);return await h.getTransactionHash(u)===o}async signTransaction(e,t,s){if(!this.accounts.find((t=>t.toLowerCase()===e.toLowerCase())))throw new Error("Can not find this address");let a,r;const o=t?.chainId?.toString(),c=(0,n.toChecksumAddress)(e),d=await i.Z.getSafeVersion({provider:s.provider,address:c}),h=new i.Z(c,d,s.provider,o);if(this.currentTransaction)a=this.currentTransaction,r=await this.getTransactionHash();else{const s={data:this._normalize(t.data)||"0x",from:e,to:this._normalize(t.to),value:this._normalize(t.value)||"0x0"};a=await h.buildTransaction(s),this.currentTransaction=a,r=await this.getTransactionHash()}await h.signTransaction(a),this.safeInstance=h,this.emit(y,{safeAddress:e,data:{hash:r}})}async buildMessage({address:e,provider:t,version:s,networkId:a,message:r}){if(!this.accounts.find((t=>t.toLowerCase()===e.toLowerCase())))throw new Error("Can not find this address");const o=(0,n.toChecksumAddress)(e),c=new i.Z(o,s,t,a),d=new h.default(r);return this.safeInstance=c,this.currentSafeMessage=d,this.currentSafeMessageHash=await c.getSafeMessageHash((0,u.hashSafeMessage)(d.data)),{safeMessageHash:this.currentSafeMessageHash}}async getMessageInfo(){if(!this.currentSafeMessage||!this.safeInstance||!this.currentSafeMessageHash)throw new Error("No message in Gnosis keyring");try{const e=await this.safeInstance.apiKit.getMessage(this.currentSafeMessageHash);return{safeAddress:this.safeInstance.safeAddress,status:e.confirmations.length===await this.safeInstance.getThreshold()?p.SafeClientTxStatus.MESSAGE_CONFIRMED:p.SafeClientTxStatus.MESSAGE_PENDING_SIGNATURES,safeMessageHash:this.currentSafeMessageHash,message:e}}catch(e){return console.error(e),null}}async addMessage({signerAddress:e,signature:t}){if(!this.currentSafeMessage||!this.safeInstance)throw new Error("No message in Gnosis keyring");t=await(0,u.adjustVInSignature)(l.SigningMethod.ETH_SIGN_TYPED_DATA,t);const s=new u.EthSafeSignature(e,t);return this.currentSafeMessage.addSignature(s),this.safeInstance.addMessage({safeMessage:this.currentSafeMessage})}async addMessageSignature({signerAddress:e,signature:t}){if(!this.currentSafeMessage||!this.safeInstance||!this.currentSafeMessageHash)throw new Error("No message in Gnosis keyring");const s=i.Z.createSafeApiKit(this.safeInstance.network);t=await(0,u.adjustVInSignature)(l.SigningMethod.ETH_SIGN_TYPED_DATA,t);const a=new u.EthSafeSignature(e,t);return this.currentSafeMessage.addSignature(a),s.addMessageSignature(this.currentSafeMessageHash,(0,u.buildSignatureBytes)([a]))}async addPureMessageSignature({signerAddress:e,signature:t}){if(!this.currentSafeMessage||!this.safeInstance||!this.currentSafeMessageHash)throw new Error("No message in Gnosis keyring");t=await(0,u.adjustVInSignature)(l.SigningMethod.ETH_SIGN_TYPED_DATA,t);const s=new u.EthSafeSignature(e,t);this.currentSafeMessage.addSignature(s)}signTypedData(){throw new Error("Gnosis address not support signTypedData")}signPersonalMessage(){throw new Error("Gnosis address not support signPersonalMessage")}_normalize(e){return""===(t="0x"===(t=(0,r.bufferToHex)(e).toString()).substring(0,2)?t.substring(2):t)?"":"0x"+(t=t.length%2!=0?"0"+t:t);var t}}A.type=g;const C=A},826149:(e,t,s)=>{"use strict";s.d(t,{X:()=>m});var a=s(717187),n=s.n(a),r=s(222751),i=s(866052),o=s(350792),c=s(118269),d=s(350144),h=s(348764).Buffer;const u="imKey Hardware",l=e=>"bigint"==typeof e?`0x${e.toString(16)}`:`0x${e.toString("hex")}`;var p;!function(e){e.LedgerLive="LedgerLive",e.Legacy="Legacy",e.BIP44="BIP44"}(p||(p={}));var g=p;const y={[g.BIP44]:"m/44'/60'/0'/0",[g.Legacy]:"m/44'/60'/0'",[g.LedgerLive]:"m/44'/60'/0'/0/0"};class m extends(n()){constructor(e={}){if(super(),this.type=u,this.accounts=[],this.page=0,this.perPage=5,this.unlockedAccount=0,this.paths={},this.hdPathType=g.BIP44,this.usedHDPathTypeList={},this.hasHIDPermission=!1,this.invokeApp=(e,t)=>this.bridge.invokeApp(e,t),!e.bridge)throw new Error("Bridge is required");this.bridge=e.bridge,this.accountDetails={},this.usedHDPathTypeList={},this.deserialize(e)}serialize(){return Promise.resolve({hdPathType:this.hdPathType,accounts:this.accounts,page:this.page,paths:this.paths,perPage:this.perPage,unlockedAccount:this.unlockedAccount,accountDetails:this.accountDetails})}deserialize(e={}){return this.hdPathType=e.hdPathType??g.BIP44,this.accounts=e.accounts||[],this.page=e.page||0,this.perPage=5,this.paths=e.paths||{},this.accountDetails=e.accountDetails||{},Promise.resolve()}authorizeHIDPermission(){this.hasHIDPermission=!0}async cleanUp(){return await this.bridge.cleanUp()}async unlock(){return await this.bridge.unlock()}setAccountToUnlock(e){this.unlockedAccount=parseInt(e,10)}addAccounts(e=1){return new Promise(((t,s)=>{this.unlock().then((async s=>{const a=this.unlockedAccount,n=a+e;for(let e=a;e<n;e++){const t=await this.addressFromIndex(e);this.accounts.includes(t)||(this.accounts.push(t),this.accountDetails[r.toChecksumAddress(t)]={hdPath:this.getPathForIndex(e),hdPathType:this.hdPathType,hdPathBasePublicKey:await this.getPathBasePublicKey(this.hdPathType),index:e}),this.page=0}t(this.accounts)})).catch((e=>{s(e)}))}))}getFirstPage(){return this.page=0,this.__getPage(1)}getNextPage(){return this.__getPage(1)}getPreviousPage(){return this.__getPage(-1)}getAddresses(e,t){return new Promise(((s,a)=>{this.unlock().then((async a=>{const n=t,i=[];for(let t=e;t<n;t++){const e=await this.addressFromIndex(t);i.push({address:e,balance:null,index:t+1}),this.paths[r.toChecksumAddress(e)]=t}s(i)})).catch((e=>{a(e)}))}))}__getPage(e){return this.page+=e,this.page<=0&&(this.page=1),new Promise(((e,t)=>{this.unlock().then((async t=>{const s=(this.page-1)*this.perPage,a=s+this.perPage,n=[];for(let e=s;e<a;e++){const t=await this.addressFromIndex(e);n.push({address:t,balance:null,index:e+1}),this.paths[r.toChecksumAddress(t)]=e}e(n)})).catch((e=>{t(e)}))}))}getAccounts(){return Promise.resolve(this.accounts.slice())}removeAccount(e){if(!this.accounts.map((e=>e.toLowerCase())).includes(e.toLowerCase()))throw new Error(`Address ${e} not found in this keyring`);this.accounts=this.accounts.filter((t=>t.toLowerCase()!==e.toLowerCase()));const t=r.toChecksumAddress(e);delete this.accountDetails[t],delete this.paths[t]}async signTransaction(e,t){await this.unlock();const s=r.toChecksumAddress(e),a=this.accountDetails[s],n=void 0!==(d=t.common).chainIdBN?d.chainIdBN().toNumber():parseInt(d.chainId());var d;const h=t.data.toString("hex"),u=t.toJSON(),p=(0,o.BI)(u),g=p?{data:""===h?"":`0x${h}`,gasLimit:l(t.gasLimit),type:l(t.type.toString()),accessList:t.accessList,maxFeePerGas:l(t.maxFeePerGas),maxPriorityFeePerGas:l(t.maxPriorityFeePerGas),nonce:l(t.nonce),to:t.to.toString(),value:l(t.value),chainId:n,path:a.hdPath}:{to:t.to.toString(),value:l(t.value),data:""===h?"":`0x${h}`,nonce:l(t.nonce),gasLimit:l(t.gasLimit),gasPrice:void 0!==t.gasPrice?l(t.gasPrice):l(t.maxFeePerGas),chainId:n,path:a.hdPath},{signature:y,txHash:m}=await this.invokeApp("signTransaction",[g]);let w;return p?(w=r.rlp.decode("0x"+y.substring(4),!0),u.r=(0,c.bytesToHex)(w.data[10]),u.s=(0,c.bytesToHex)(w.data[11]),u.v=(0,c.bytesToHex)(w.data[9]),u.hash=m,i.FeeMarketEIP1559Transaction.fromTxData(u)):(w=r.rlp.decode(y,!0),u.r=(0,c.bytesToHex)(w.data[7]),u.s=(0,c.bytesToHex)(w.data[8]),u.v=(0,c.bytesToHex)(w.data[6]),u.hash=m,i.Transaction.fromTxData(u))}signMessage(e,t){return this.signPersonalMessage(e,t)}async signPersonalMessage(e,t){await this.unlock();const s=r.toChecksumAddress(e),a=this.accountDetails[s],n=await this.invokeApp("signMessage",[a.hdPath,t,s,!0]);return n?.signature}async signTypedData(e,t,s){await this.unlock();const a=r.toChecksumAddress(e),n=this.accountDetails[a],i="V4"===s.version;if("V4"!==s.version&&"V3"!==s.version)throw new Error("ImKey only supports V3 and V4 of typed data");const o=function(e,t=!0){const s=d.TypedDataUtils.sanitizeData(e),a=[h.from("1901","hex")];return a.push(d.TypedDataUtils.hashStruct("EIP712Domain",s.domain,s.types,t)),"EIP712Domain"!==s.primaryType&&a.push(d.TypedDataUtils.hashStruct(s.primaryType,s.message,s.types,t)),r.bufferToHex(h.concat(a))}(t,i),c=await this.invokeApp("signMessage",[n.hdPath,o,a,!1]);return c?.signature}exportAccount(){return Promise.reject(new Error("Not supported on this device"))}forgetDevice(){this.accounts=[],this.page=0,this.unlockedAccount=0,this.paths={}}_normalize(e){return r.bufferToHex(e).toString()}getPathForIndex(e){let t=this.getHDPathBase(this.hdPathType);return t=this.hdPathType===g.LedgerLive?`m/44'/60'/${e}'/0/0`:`${t}/${e}`,t}async addressFromIndex(e){const t=this.getPathForIndex(e),{address:s}=await this.invokeApp("getAddress",[t]);return s}async pathFromAddress(e){const t=await this.indexFromAddress(e);return this.getPathForIndex(t)}async indexFromAddress(e){const t=r.toChecksumAddress(e);let s=this.paths[t]||this.accountDetails[t]?.index;if(void 0===s)for(let e=0;e<1e3;e++)if(t===await this.addressFromIndex(e)){s=e;break}if(void 0===s)throw new Error("Unknown address");return s}async getCurrentAccounts(){await this.unlock();const e=await this.getAccounts(),t=await this.getPathBasePublicKey(this.hdPathType),s=[];for(let a=0;a<e.length;a++){const n=e[a],i=this.accountDetails[r.toChecksumAddress(n)];if(i?.hdPathBasePublicKey===t)try{const e={address:n,index:await this.indexFromAddress(n)+1};s.push(e)}catch(e){}}return s}async getPathBasePublicKey(e){const t=this.getHDPathBase(e);return(await this.invokeApp("getAddress",[t])).pubkey}getHDPathBase(e){return y[e]}async setHDPathType(e){e&&(this.hdPathType=e)}async setCurrentUsedHDPathType(){const e=await this.getPathBasePublicKey(g.Legacy);this.usedHDPathTypeList[e]=this.hdPathType}async getCurrentUsedHDPathType(){await this.unlock();const e=await this.getPathBasePublicKey(g.Legacy);return this.usedHDPathTypeList[e]}getMaxAccountLimit(){return 1}}m.type=u},38513:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>n});var a=s(587611);class n{constructor(){this.app=null,this.loopCount=0,this.invokeApp=async(e,t)=>{this.app||await this.makeApp();try{return await this.app[e](...t)}catch(s){if(s.message.includes("Cannot read properties of undefined")||s.message.includes("The device was disconnected")){if(this.loopCount++,this.loopCount>5)throw this.loopCount=0,new Error("device disconnected");return await this.cleanUp(),this.invokeApp(e,t)}throw s}}}async makeApp(){const e=await a.ETHSingleton.getInstance();await e.init(),this.app=e}isUnlocked(){return!!this.app}unlock(){return this.isUnlocked()?Promise.resolve("already unlocked"):this.makeApp()}async cleanUp(){try{await(this.app?.close())}catch(e){console.error(e)}this.app=null}}},733380:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>i});var a=s(693150),n=s.n(a),r=s(219571);class i{constructor(){this.unlock=()=>new Promise(((e,t)=>{n().runtime.sendMessage({target:r.n_.imkeyOffscreen,action:r.$t.unlock}).then((s=>{s?.error?t(s.error):e(s)}))})),this.cleanUp=()=>new Promise(((e,t)=>{n().runtime.sendMessage({target:r.n_.imkeyOffscreen,action:r.$t.cleanUp}).then((s=>{s?.error?t(s.error):e()}))})),this.invokeApp=(...e)=>new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.imkeyOffscreen,action:r.$t.invokeApp,params:e}).then((e=>{e?.error?s(e.error):t(e)}))}))}}},927799:(e,t,s)=>{"use strict";s.d(t,{SL:()=>m,Aq:()=>w,ZP:()=>f});var a,n=s(348056),r=s(222751),i=s(459444),o=s.n(i),c=s(469265),d=s(563366),h=s(348764).Buffer;!function(e){e.LedgerLive="LedgerLive",e.Legacy="Legacy",e.BIP44="BIP44"}(a||(a={}));const u={[a.BIP44]:"account.standard",[a.Legacy]:"account.ledger_legacy",[a.LedgerLive]:"account.ledger_live"},l=[{keyringType:u[a.BIP44],type:a.BIP44,hdpath:"m/44'/60'/0'"},{keyringType:u[a.LedgerLive],type:a.LedgerLive,hdpath:"m/44'/60'/x'/0/0"},{keyringType:u[a.Legacy],type:a.Legacy,hdpath:"m/44'/60'/0'"}],p=e=>[new d.PathComponent({index:44,hardened:!0}),new d.PathComponent({index:60,hardened:!0}),new d.PathComponent({index:e,hardened:!0}),new d.PathComponent({index:0,hardened:!1}),new d.PathComponent({index:0,hardened:!1})],g=(e,t=a.BIP44,s=0)=>new d.CryptoHDKey({isMaster:!1,isPrivateKey:!1,key:h.from(e.publicKey,"hex"),chainCode:h.from(e.chainCode,"hex"),useInfo:new d.CryptoCoinInfo(60,0),origin:new d.CryptoKeypath(t===a.LedgerLive?p(s):[new d.PathComponent({index:44,hardened:!0}),new d.PathComponent({index:60,hardened:!0}),new d.PathComponent({index:0,hardened:!0})],h.from(e.mfp,"hex")),children:t===a.LedgerLive?void 0:new d.CryptoKeypath(t===a.Legacy?[new d.PathComponent({hardened:!1})]:[new d.PathComponent({index:0,hardened:!1}),new d.PathComponent({hardened:!1})].filter((e=>!!e)),h.from(e.mfp,"hex")),parentFingerprint:h.from(e.mfp,"hex"),name:"Keystone",note:u[t]});var y=s(348764).Buffer;const m="AcquireMemeStoreData",w="MemStoreDataReady",T="Keystone";class f extends n.MetaMaskKeyring{constructor(){super(),this.perPage=5,this.brandsMap={},this.currentBrand=T,this.getKeystoneDevice=async(e=!1)=>{const t=await c.TransportWebUSB.connect({timeout:1e5});return await t.close(),e?new(o())(t):new i.Eth(t)},this.removeAccount=e=>{super.removeAccount(e),delete this.brandsMap[e.toLowerCase()]},this.getCurrentAccounts=async()=>(await this.getAccounts()).map((e=>{const t=(0,r.toChecksumAddress)(e);return{address:e,index:this.indexes[t]+1}})),this.isReady=async()=>this.initialized,this.getCurrentBrand=async()=>this.currentBrand,this.checkAllowImport=async e=>{const[t]=await this.getAccountsWithBrand();return t?{brand:t.brandName,allowed:t.brandName===e}:(await this.forgetDevice(),{allowed:!0})},this.getInteraction().on(m,(()=>{const e=this.getMemStore().getState().sign?.request;e&&this.getInteraction().emit(w,e)}))}async getAddressesViaUSB(e=a.BIP44){const t=await this.getKeystoneDevice(),s=l.find((t=>t.type===e)).hdpath;if(e===a.LedgerLive){const n=[];let r=y.from("","hex");for(let e=0;e<10;e++){const a=await t.getAddress(s.replace("x",e.toString()),!0,!0);n.push(a),r=y.from(a.mfp,"hex")}return this.syncKeyring(((e,t=a.BIP44,s)=>new d.CryptoAccount(s,e.map(((e,s)=>new d.CryptoOutput([],g(e,t,s))))))(n,e,r)),Promise.resolve()}const n=await t.getAddress(s,!0,!0);return this.syncKeyring(g(n,e)),Promise.resolve()}async exportCurrentSignRequestIdIfExist(){return this.getMemStore().getState().sign?.request?.requestId??null}async signTransactionUrViaUSB(e){const t=await this.getKeystoneDevice(!0);return await t.signTransactionFromUr(e)}async getAccountInfo(e){const t=(await this.getCurrentAccounts()).find((t=>t.address?.toUpperCase()===e?.toUpperCase()));return{address:e,index:t?.index,balance:null,hdPathType:await this.getCurrentUsedHDPathType(),hdPathBasePublicKey:this.xpub}}async getCurrentUsedHDPathType(){return l.find((e=>e.keyringType===this.keyringAccount))?.type}async serialize(){return{...await super.serialize(),brandsMap:this.brandsMap}}deserialize(e){super.deserialize(e),e?.brandsMap&&(this.brandsMap=e.brandsMap),this.accounts.forEach((e=>{this.brandsMap[e.toLowerCase()]||(this.brandsMap[e.toLowerCase()]=T)}))}async getMaxAccountLimit(){if(this.initialized||await this.readKeyring(),"pubkey"===this.keyringMode)return Object.keys(this.paths).length}async getAddresses(e,t){this.initialized||await this.readKeyring(),"pubkey"===this.keyringMode&&(t=Math.min(t,Object.keys(this.paths).length),e=Math.min(e,t));const s=[];for(let a=e;a<t;a++){const e=await this.__addressFromIndex("m",a);s.push({address:e,balance:null,index:a+1}),this.indexes[(0,r.toChecksumAddress)(e)]=a}return s}async getAccountsWithBrand(){return(await this.getAccounts()).map((e=>({address:e,brandName:this.brandsMap[e.toLowerCase()]||T})))}async getFirstPage(){const e=await super.getFirstPage();return e.forEach((e=>e.index+=1)),e}async getNextPage(){const e=await super.getNextPage();return e.forEach((e=>e.index+=1)),e}setCurrentBrand(e){this.currentBrand=e}async addAccounts(e=1){const t=await super.addAccounts(e);return t.forEach((e=>{this.brandsMap[e.toLowerCase()]||(this.brandsMap[e.toLowerCase()]=this.currentBrand)})),t}}},153515:(e,t,s)=>{"use strict";s.d(t,{Z:()=>m});var a=s(236419),n=s(771508),r=s(330122),i=s(171417),o=s(219571),c=s(693150),d=s.n(c);const h="GridPlus Hardware";var u=n.G;const l={[u.BIP44]:"m/44'/60'/0'/0/x",[u.Legacy]:"m/44'/60'/0'/x",[u.LedgerLive]:"m/44'/60'/x'/0/0"},p={[l[u.BIP44]]:u.BIP44,[l[u.Legacy]]:u.Legacy,[l[u.LedgerLive]]:u.LedgerLive};let g=0;class y extends a.Z{constructor(){super(...arguments),this.appName="Rabby",this.type=h}async _getCreds(){if(!i.AU)return super._getCreds();if(!this._hasCreds())try{const e=this.appName?this.appName:"Unknown",t=`${o.Td.lattice}?keyring=${e}&forceLogin=true`,s=await d().runtime.sendMessage({target:o.n_.latticeOffscreen,params:{url:t}});if(s.error)throw new Error(s.error);return s.result}catch(e){throw new Error(e)}}async getCurrentAccounts(){const e=await this.getAccounts(),t=this.hdPath;return e.map(((e,t)=>({address:e,index:this.accountIndices[t]+1,hdPath:this.accountOpts[t]?.hdPath}))).filter((e=>e.hdPath===t))}async getAddresses(e,t){try{const s=t-e;await this.unlock();const a=(await this._fetchAddresses(s,e)).map(((t,s)=>({address:t,balance:null,index:e+s+1})));return g=0,a}catch(s){try{if(g>20)throw new Error("Max call stacks");return g++,await this._connect(),this.getAddresses(e,t)}catch(e){throw new Error("Failed to get accounts. Please forget the device and try again. Make sure you do not have a locked SafeCard inserted.")}}}getHDPathBase(e){return l[e]}async getInitialAccounts(){await this.unlock();const e=this.hdPath;this.setHdPath(this.getHDPathBase(u.LedgerLive));const t=await this.getAddresses(0,3);this.setHdPath(this.getHDPathBase(u.BIP44));const s=await this.getAddresses(0,3);this.setHdPath(this.getHDPathBase(u.Legacy));const a=await this.getAddresses(0,3);return this.setHdPath(e),{[u.LedgerLive]:t,[u.BIP44]:s,[u.Legacy]:a}}async setHDPathType(e){const t=this.getHDPathBase(e);this.setHdPath(t)}async getCurrentUsedHDPathType(){return p[this.hdPath]}async getAccountInfo(e){const t=(await this.getAccounts()).map(((e,t)=>({address:e,index:this.accountIndices[t]+1,hdPath:this.accountOpts[t]?.hdPath}))),s=t.find((t=>(0,r.Wr)(t.address,e)));return{...s,hdPathType:p[s.hdPath]}}}y.type=h;const m=y},257241:(e,t,s)=>{"use strict";s.d(t,{Z:()=>C});var a=s(222751),n=s(350144),r=s(236746),i=s(947498),o=s(350792),c=s(866052),d=s(330122),h=s(771508),u=s(693150),l=s.n(u),p=s(219571),g=s(171417),y=s(348764).Buffer;const m="Ledger Hardware";var w=h.G;const T={[w.BIP44]:"m/44'/60'/0'/0",[w.Legacy]:"m/44'/60'/0'",[w.LedgerLive]:"m/44'/60'/0'/0/0"},f={[T.Legacy]:w.Legacy,[T.BIP44]:w.BIP44,[T.LedgerLive]:w.LedgerLive};class A{constructor(e={}){this.type=m,this.usedHDPathTypeList={},this.openEthApp=()=>{if(!this.transport)throw new Error("Ledger transport is not initialized. You must call setTransport first.");return this.transport.send(224,216,0,0,y.from("Ethereum","ascii"))},this.quitApp=()=>{if(!this.transport)throw new Error("Ledger transport is not initialized. You must call setTransport first.");return this.transport.send(176,167,0,0)},this.getAppAndVersion=async()=>{if(await this.makeApp(),!this.transport)throw new Error("Ledger transport is not initialized. You must call setTransport first.");const e=await this.transport.send(176,1,0,0);let t=0;if(1!==e[t++])throw new Error("getAppAndVersion: format not supported");const s=e[t++],a=e.slice(t,t+=s).toString("ascii"),n=e[t++];return{appName:a,version:e.slice(t,t+=n).toString("ascii")}},this.accountDetails={},this.page=0,this.perPage=5,this.unlockedAccount=0,this.paths={},this.hasHIDPermission=null,this.transport=null,this.app=null,this.usedHDPathTypeList={},this.deserialize(e),g.AU&&l().runtime.onMessage.addListener((e=>{e.target===p.n_.extension&&e.event===p.We.ledgerDeviceDisconnect&&this.cleanUp()}))}serialize(){return Promise.resolve({hdPath:this.hdPath,accounts:this.accounts,accountDetails:this.accountDetails,hasHIDPermission:this.hasHIDPermission,usedHDPathTypeList:this.usedHDPathTypeList})}deserialize(e={}){return this.hdPath=e.hdPath||T.Legacy,this.accounts=e.accounts||[],this.accountDetails=e.accountDetails||{},void 0!==e.hasHIDPermission&&(this.hasHIDPermission=e.hasHIDPermission),e.accountDetails||this._migrateAccountDetails(e),e.usedHDPathTypeList&&(this.usedHDPathTypeList=e.usedHDPathTypeList),this.accounts=this.accounts.filter((e=>Object.keys(this.accountDetails).includes(a.toChecksumAddress(e)))),Promise.resolve()}_migrateAccountDetails(e){if(e.accountIndexes)for(const t of Object.keys(e.accountIndexes))this.accountDetails[t]={hdPath:this._getPathForIndex(e.accountIndexes[t])}}isUnlocked(){return!!this.app}setAccountToUnlock(e){this.unlockedAccount=parseInt(e,10)}setHdPath(e){this.hdPath=e}async makeApp(e=!1){if(!this.app)try{this.transport=await r.Z.create(),this.app=new i.ZP(this.transport)}catch(e){e.message?.includes("The device is already open")||console.error(e)}}async cleanUp(){this.app=null,this.transport&&await this.transport.close(),this.transport=null}async unlock(e,t){if(t&&(e=this.hdPath),this.isUnlocked()&&!e)return"already unlocked";const s=e?this._toLedgerPath(e):this.hdPath;let a;await this.makeApp();try{a=await this.app.getAddress(s,!1,!0)}catch(s){if("DisconnectedDeviceDuringOperation"===s.name)return await this.cleanUp(),this.unlock(e,t);throw s}return a?.address}addAccounts(e=1){return new Promise(((t,s)=>{this.unlock().then((async s=>{const n=this.unlockedAccount,r=n+e;for(let e=n;e<r;e++){const t=this._getPathForIndex(e);let s;s=await this.unlock(t);const n=this.getHDPathType(t);this.accountDetails[a.toChecksumAddress(s)]={hdPath:t,hdPathBasePublicKey:await this.getPathBasePublicKey(n),hdPathType:n},s=s.toLowerCase(),this.accounts.includes(s)||this.accounts.push(s),this.page=0}t(this.accounts)})).catch(s)}))}getFirstPage(){return this.page=0,this.__getPage(1)}getNextPage(){return this.__getPage(1)}getPreviousPage(){return this.__getPage(-1)}getAccounts(){return Promise.resolve(this.accounts.slice())}removeAccount(e){if(!this.accounts.map((e=>e.toLowerCase())).includes(e.toLowerCase()))throw new Error(`Address ${e} not found in this keyring`);this.accounts=this.accounts.filter((t=>t.toLowerCase()!==e.toLowerCase()));const t=a.toChecksumAddress(e);delete this.accountDetails[t],delete this.paths[t]}signTransaction(e,t){if("function"==typeof t.getChainId){t.v=a.bufferToHex(t.getChainId()),t.r="0x00",t.s="0x00";const s=t.serialize().toString("hex");return this._signTransaction(e,s,(e=>(t.v=y.from(e.v,"hex"),t.r=y.from(e.r,"hex"),t.s=y.from(e.s,"hex"),t)))}const s=t.getMessageToSign(!1),n=y.isBuffer(s)?s.toString("hex"):a.rlp.encode(s).toString("hex");return this._signTransaction(e,n,(e=>{const s=t.toJSON();return s.v=a.addHexPrefix(e.v),s.r=a.addHexPrefix(e.r),s.s=a.addHexPrefix(e.s),(0,o.BI)(s)?c.FeeMarketEIP1559Transaction.fromTxData(s):c.TransactionFactory.fromTxData(s,{common:t.common,freeze:Object.isFrozen(t)})}))}async _signTransaction(e,t,s){const a=await this.unlockAccountByAddress(e);await this.makeApp(!0);try{const e=await i.Jb.resolveTransaction(t,{},{}),n=s(await this.app.signTransaction(a,t,e));if(n.verifySignature())return n;throw new Error("Ledger: The transaction signature is not valid")}catch(e){throw new Error(e.toString()||"Ledger: Unknown error while signing transaction")}}signMessage(e,t){return this.signPersonalMessage(e,t)}async signPersonalMessage(e,t){try{await this.makeApp(!0);const s=await this.unlockAccountByAddress(e),r=await this.app.signPersonalMessage(s,a.stripHexPrefix(t));let i=r.v.toString(16);i.length<2&&(i=`0${i}`);const o=`0x${r.r}${r.s}${i}`,c=n.recoverPersonalSignature({data:t,sig:o});if(a.toChecksumAddress(c)!==a.toChecksumAddress(e))throw new Error("Ledger: The signature doesn't match the right address");return o}catch(e){throw new Error(e.toString()||"Ledger: Unknown error while signing message")}}async unlockAccountByAddress(e){const t=a.toChecksumAddress(e);if(!Object.keys(this.accountDetails).includes(t))throw new Error(`Ledger: Account for address '${t}' not found`);const{hdPath:s}=this.accountDetails[t];if((await this.unlock(s)).toLowerCase()!==e.toLowerCase())throw new Error(`Ledger: Account ${e} does not belong to the connected device`);return s}async signTypedData(e,t,s={}){const r="V4"===s.version;if(!r)throw new Error("Ledger: Only version 4 of typed data signing is supported");const i=await this.unlockAccountByAddress(e);try{await this.makeApp(!0);const{domain:s,types:o,primaryType:c,message:d}=n.TypedDataUtils.sanitizeData(t),h=n.TypedDataUtils.hashStruct("EIP712Domain",s,o,r).toString("hex"),u=n.TypedDataUtils.hashStruct(c,d,o,r).toString("hex"),l=await this.app.signEIP712HashedMessage(i,h,u);let p=l.v.toString(16);p.length<2&&(p=`0${p}`);const g=`0x${l.r}${l.s}${p}`,y=n.recoverTypedSignature_v4({data:t,sig:g});if(a.toChecksumAddress(y)!==a.toChecksumAddress(e))throw new Error("Ledger: The signature doesnt match the right address");return g}catch(e){throw new Error(e.toString()||"Ledger: Unknown error while signing message")}}exportAccount(){throw new Error("Not supported on this device")}forgetDevice(){this.accounts=[],this.page=0,this.unlockedAccount=0,this.paths={},this.accountDetails={}}async __getPage(e){this.page+=e,this.page<=0&&(this.page=1);const t=(this.page-1)*this.perPage,s=t+this.perPage;await this.unlock();return await this._getAccountsBIP44(t,s)}async getAddresses(e,t){const s=e,a=t;await this.unlock();return await this._getAccountsBIP44(s,a)}getIndexFromAddress(e){const t=a.toChecksumAddress(e);if(!this.accountDetails[t])throw new Error(`Address ${e} not found`);let s=null;const{hdPath:n}=this.accountDetails[t];if(/m\/44'\/60'\/(\d+)'\/0\/0/.test(n)){const e=n.match(/m\/44'\/60'\/(\d+)'\/0\/0/);e&&e[1]&&(s=parseInt(e[1],10))}else{const t=a.toChecksumAddress(e),n=this.accountDetails[t].hdPath.split("/");s=Number(n[n.length-1])}return s}authorizeHIDPermission(){this.hasHIDPermission=!0}async _getAccountsBIP44(e,t){const s=[];for(let a=e;a<t;a++){const e=this._getPathForIndex(a),t=await this.unlock(e);s.push({address:t,balance:null,index:a+1})}return s}_getPathForIndex(e){return this._isLedgerLiveHdPath()?`m/44'/60'/${e}'/0/0`:`${this.hdPath}/${e}`}_isLedgerLiveHdPath(){return"m/44'/60'/0'/0/0"===this.hdPath}_toLedgerPath(e){return e.toString().replace("m/","")}getHDPathType(e){if(/^m\/44'\/60'\/(\d+)'\/0\/0$/.test(e))return w.LedgerLive;if(/^m\/44'\/60'\/0'\/0\/(\d+)$/.test(e))return w.BIP44;if(/^m\/44'\/60'\/0'\/(\d+)$/.test(e))return w.Legacy;throw new Error("Invalid path")}async getPathBasePublicKey(e){const t=this.getHDPathBase(e);return(await this.app.getAddress(t,!1,!0)).publicKey}getHDPathBase(e){return T[e]}getHDPathTypeFromPath(e){return f[e]}async _fixAccountDetail(e){const t=a.toChecksumAddress(e),s=this.accountDetails[t];if(s.hdPathBasePublicKey)return;const n=this.getHDPathType(s.hdPath),r=(await this.app.getAddress(s.hdPath,!1,!0)).address;(0,d.Wr)(r,e)&&(s.hdPathType=n,s.hdPathBasePublicKey=await this.getPathBasePublicKey(n))}async getInitialAccounts(){await this.unlock();const e=this.hdPath;this.setHdPath(this.getHDPathBase(w.LedgerLive));const t=await this.getAddresses(0,3);this.setHdPath(this.getHDPathBase(w.BIP44));const s=await this.getAddresses(0,3);this.setHdPath(this.getHDPathBase(w.Legacy));const a=await this.getAddresses(0,3);return this.setHdPath(e),{[w.LedgerLive]:t,[w.BIP44]:s,[w.Legacy]:a}}async getCurrentAccounts(){await this.unlock();const e=await this.getAccounts(),t=this.hdPath,{publicKey:s}=await this.app.getAddress(t,!1,!0),n=this.getHDPathTypeFromPath(t),r=[];for(let t=0;t<e.length;t++){const i=e[t];await this._fixAccountDetail(i);const o=this.accountDetails[a.toChecksumAddress(i)];if(o.hdPathBasePublicKey!==s){if(n!==w.Legacy&&(o.hdPathType===w.LedgerLive||o.hdPathType===w.BIP44)){const e=this.getAccountInfo(i);if(1===e?.index){const t=await this.app.getAddress(o.hdPath,!1,!0);(0,d.Wr)(t.address,i)&&r.push(e)}}}else{const e=this.getAccountInfo(i);e&&r.push(e)}}return r}getAccountInfo(e){const t=this.accountDetails[a.toChecksumAddress(e)];if(t){const{hdPath:s,hdPathType:a,hdPathBasePublicKey:n}=t;return{address:e,index:this.getIndexFromPath(s,a)+1,balance:null,hdPathType:a,hdPathBasePublicKey:n}}}getIndexFromPath(e,t){switch(t){case w.BIP44:return parseInt(e.split("/")[5]);case w.Legacy:return parseInt(e.split("/")[4]);case w.LedgerLive:return parseInt(e.split("/")[3]);default:throw new Error("Invalid path")}}async setHDPathType(e){const t=this.getHDPathBase(e);this.setHdPath(t)}async setCurrentUsedHDPathType(){const e=await this.getPathBasePublicKey(w.Legacy);this.usedHDPathTypeList[e]=this.getHDPathTypeFromPath(this.hdPath)}async getCurrentUsedHDPathType(){const e=await this.getPathBasePublicKey(w.Legacy);return this.usedHDPathTypeList[e]}}A.type=m;const C=A},986803:(e,t,s)=>{"use strict";s.d(t,{Z:()=>v});var a=s(717187),n=s.n(a),r=s(222751),i=s(350144),o=s(866052),c=s(249840),d=s.n(c),h=s(330122),u=s(171417),l=s(693150),p=s.n(l),g=s(348764).Buffer;const y="Onekey Hardware",m="m/44'/60'/0'/0",w="m",T=1e3,f="onekeySessionState";var A;function C(e){return"function"==typeof e.getChainId}!function(e){e.LedgerLive="LedgerLive",e.Legacy="Legacy",e.BIP44="BIP44"}(A||(A={}));class S extends(n()){constructor(e={}){if(super(),this.type=y,this.accounts=[],this.hdk=new(d()),this.page=0,this.perPage=5,this.unlockedAccount=0,this.paths={},this.hdPath="",this.deviceId=null,this.connectId=null,this.passphraseState=void 0,!e.bridge)throw new Error("Bridge is required");this.bridge=e.bridge,this.accountDetails={},this.deserialize(e),this.init()}async init(){if(this.bridge.init(),u.AU){const e=(await p().storage.session.get(f))[f];e&&(this.passphraseState=e.passphraseState,this.deviceId=e.deviceId,this.connectId=e.connectId,this.hdk.publicKey=g.from(e.publicKey,"hex"),this.hdk.chainCode=g.from(e.chainCode,"hex"))}}serialize(){return Promise.resolve({hdPath:this.hdPath,accounts:this.accounts,page:this.page,paths:this.paths,perPage:this.perPage,unlockedAccount:this.unlockedAccount,accountDetails:this.accountDetails})}deserialize(e={}){return this.hdPath=e.hdPath||m,this.accounts=e.accounts||[],this.page=e.page||0,this.perPage=5,this.paths=e.paths||{},this.accountDetails=e.accountDetails||{},Promise.resolve()}isUnlocked(){return Boolean(this.hdk&&this.hdk.publicKey)}cleanUp(){this.hdk=new(d())}unlock(){return new Promise(((e,t)=>{this.bridge.searchDevices().then((async s=>{if(s.success){s.payload.length<=0&&t("No OneKey Device found");const a=s.payload[0],{deviceId:n,connectId:r}=a;if(!n||!r)return void t("no deviceId or connectId");if(this.deviceId&&this.connectId&&this.isUnlocked()&&this.deviceId===n&&this.connectId===r)return void e("already unlocked");this.deviceId=n,this.connectId=r;const i=await this.bridge.getPassphraseState(r);if(!i.success)return void t("getPassphraseState failed");this.passphraseState=i.payload,this.bridge.evmGetPublicKey(r,n,{showOnOneKey:!1,chainId:1,path:m,passphraseState:i.payload}).then((async s=>{if(s.success){if(this.hdk.publicKey=g.from(s.payload.publicKey,"hex"),this.hdk.chainCode=g.from(s.payload.node.chain_code,"hex"),u.AU){const e={passphraseState:i.payload,publicKey:s.payload.publicKey,chainCode:s.payload.node.chain_code,deviceId:n,connectId:r};await p().storage.session.set({[f]:e})}e("just unlocked")}else t("getPublicKey failed")}))}else t("searchDevices failed")})).catch((e=>{t(new Error(e&&e.toString()||"Unknown error"))}))}))}setAccountToUnlock(e){this.unlockedAccount=parseInt(e,10)}addAccounts(e=1){return new Promise(((t,s)=>{this.unlock().then((s=>{const a=this.unlockedAccount,n=a+e;for(let e=a;e<n;e++){const t=this._addressFromIndex(w,e);this.accounts.includes(t)||(this.accounts.push(t),this.accountDetails[r.toChecksumAddress(t)]={hdPath:this._pathFromAddress(t),hdPathType:A.BIP44,hdPathBasePublicKey:this.getPathBasePublicKey(),index:e}),this.page=0}t(this.accounts)})).catch((e=>{s(e)}))}))}getFirstPage(){return this.page=0,this.__getPage(1)}getNextPage(){return this.__getPage(1)}getPreviousPage(){return this.__getPage(-1)}getAddresses(e,t){return new Promise(((s,a)=>{this.unlock().then((a=>{const n=t,i=[];for(let t=e;t<n;t++){const e=this._addressFromIndex(w,t);i.push({address:e,balance:null,index:t+1}),this.paths[r.toChecksumAddress(e)]=t}s(i)})).catch((e=>{a(e)}))}))}__getPage(e){return this.page+=e,this.page<=0&&(this.page=1),new Promise(((e,t)=>{this.unlock().then((t=>{const s=(this.page-1)*this.perPage,a=s+this.perPage,n=[];for(let e=s;e<a;e++){const t=this._addressFromIndex(w,e);n.push({address:t,balance:null,index:e+1}),this.paths[r.toChecksumAddress(t)]=e}e(n)})).catch((e=>{t(e)}))}))}getAccounts(){return Promise.resolve(this.accounts.slice())}removeAccount(e){if(!this.accounts.map((e=>e.toLowerCase())).includes(e.toLowerCase()))throw new Error(`Address ${e} not found in this keyring`);this.accounts=this.accounts.filter((t=>t.toLowerCase()!==e.toLowerCase()));const t=r.toChecksumAddress(e);delete this.accountDetails[t],delete this.paths[t]}signTransaction(e,t){return new Promise(((s,a)=>{this.unlock().then((n=>{setTimeout((n=>{C(t)?this._signTransaction(e,t.getChainId(),t,(e=>(t.v=g.from(e.v,"hex"),t.r=g.from(e.r,"hex"),t.s=g.from(e.s,"hex"),t))).then(s).catch(a):this._signTransaction(e,Number(t.common.chainId()),t,(e=>{const s=t.toJSON();return s.type=t.type,s.v=r.addHexPrefix(e.v),s.r=r.addHexPrefix(e.r),s.s=r.addHexPrefix(e.s),o.TransactionFactory.fromTxData(s,{common:t.common,freeze:Object.isFrozen(t)})})).then(s).catch(a)}),"just unlocked"===n?T:0)})).catch((e=>{a(new Error(e&&e.toString()||"Unknown error"))}))}))}async _signTransaction(e,t,s,a){let n;return n=C(s)?{to:this._normalize(s.to),value:this._normalize(s.value),data:this._normalize(s.data),chainId:t,nonce:this._normalize(s.nonce),gasLimit:this._normalize(s.gasLimit),gasPrice:this._normalize(s.gasPrice)}:{...s.toJSON(),chainId:t,to:this._normalize(s.to)},this.bridge.evmSignTransaction(this.connectId,this.deviceId,{path:this._pathFromAddress(e),passphraseState:this.passphraseState,transaction:n}).then((t=>{if(t.success){const s=a(t.payload);if(r.toChecksumAddress(r.addHexPrefix(s.getSenderAddress().toString("hex")))!==r.toChecksumAddress(e))throw new Error("signature doesnt match the right address");return s}throw new Error(t.payload&&t.payload.error||"Unknown error")}))}signMessage(e,t){return this.signPersonalMessage(e,t)}signPersonalMessage(e,t){return new Promise(((s,a)=>{this.unlock().then((n=>{setTimeout((n=>{this.bridge.evmSignMessage(this.connectId,this.deviceId,{path:this._pathFromAddress(e),messageHex:r.stripHexPrefix(t),passphraseState:this.passphraseState}).then((t=>{if(t.success){t.payload.address!==r.toChecksumAddress(e)&&a(new Error("signature doesnt match the right address"));const n=`0x${t.payload.signature}`;s(n)}else a(new Error(t.payload&&t.payload.error||"Unknown error"))})).catch((e=>{a(new Error(e&&e.toString()||"Unknown error"))}))}),"just unlocked"===n?T:0)})).catch((e=>{a(new Error(e&&e.toString()||"Unknown error"))}))}))}async signTypedData(e,t,s){switch(s.version){case"V1":default:return this.signTypedData_v1(e,t,s);case"V3":case"V4":return this.signTypedData_v3_v4(e,t,s)}}signTypedData_v1(e,t,s={}){throw new Error("Not supported on this device")}signTypedData_v3_v4(e,t,s={}){return new Promise(((a,n)=>{const o="V4"===s.version,{domain:c,types:d,primaryType:h,message:u}=i.TypedDataUtils.sanitizeData(t),l=i.TypedDataUtils.hashStruct("EIP712Domain",c,d,o).toString("hex"),p=i.TypedDataUtils.hashStruct(h,u,d,o).toString("hex");this.unlock().then((s=>{setTimeout((s=>{try{this.bridge.evmSignTypedData(this.connectId,this.deviceId,{path:this._pathFromAddress(e),data:t,passphraseState:this.passphraseState,metamaskV4Compat:o,domainHash:l,messageHash:p,chainId:c.chainId?Number(c.chainId):void 0}).then((t=>{if(t.success){t.payload.address!==r.toChecksumAddress(e)&&n(new Error("signature doesnt match the right address"));const s=`0x${t.payload.signature}`;a(s)}else{let e=t.payload&&t.payload.code||"";const s=t.payload&&t.payload.error||"";let a=t.payload&&t.payload.error||"Unknown error",r="";s.includes("EIP712Domain")?e="EIP712_DOMAIN_NOT_SUPPORT":s.includes("EIP712")&&(e="EIP712_BLIND_SIGN_DISABLED",r="https://help.onekey.so/hc/zh-cn/articles/4406637762959"),"Failure_UnexpectedMessage"===e&&(e="EIP712_FIRMWARE_NOT_SUPPORT",a="Not supported on this device");const i=new Error(JSON.stringify({code:e,errorMsg:a}));n(i)}})).catch((e=>{n(new Error(e&&e.toString()||"Unknown error"))}))}catch(e){n(new Error(e&&e.toString()||"Unknown error"))}}),"just unlocked"===s?T:0)})).catch((e=>{n(new Error(e&&e.toString()||"Unknown error"))}))}))}exportAccount(){return Promise.reject(new Error("Not supported on this device"))}forgetDevice(){this.accounts=[],this.hdk=new(d()),this.page=0,this.unlockedAccount=0,this.paths={}}_normalize(e){return r.bufferToHex(e).toString()}_addressFromIndex(e,t){const s=this.hdk.derive(`${e}/${t}`),a=r.publicToAddress(s.publicKey,!0).toString("hex");return r.toChecksumAddress(`0x${a}`)}_pathFromAddress(e){return`${this.hdPath}/${this.indexFromAddress(e)}`}indexFromAddress(e){const t=r.toChecksumAddress(e);let s=this.paths[t]||this.accountDetails[t]?.index;if(void 0===s)for(let e=0;e<1e3;e++)if(t===this._addressFromIndex(w,e)){s=e;break}if(void 0===s)throw new Error("Unknown address");return s}async getCurrentAccounts(){await this.unlock();const e=await this.getAccounts(),t=this.getPathBasePublicKey(),s=[];for(let a=0;a<e.length;a++){const n=e[a];await this._fixAccountDetail(n);const i=this.accountDetails[r.toChecksumAddress(n)];if(i?.hdPathBasePublicKey===t)try{const e={address:n,index:this.indexFromAddress(n)+1};s.push(e)}catch(e){}}return s}getPathBasePublicKey(){return this.hdk.publicKey.toString("hex")}async _fixAccountDetail(e){const t=r.toChecksumAddress(e),s=this.accountDetails[t];if(s?.hdPathBasePublicKey&&s.hdPath)return;let a,n;try{n=this.indexFromAddress(e),a=this._addressFromIndex(w,n)}catch(e){}a&&(0,h.Wr)(e,a)&&(this.accountDetails[t]={...s,index:n,hdPath:this._pathFromAddress(e),hdPathType:A.BIP44,hdPathBasePublicKey:this.getPathBasePublicKey()})}}S.type=y;const v=S},266042:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>o});var a=s(1364),n=s(310959),r=s.n(n);const{HardwareWebSdk:i}=r();class o{constructor(){this.init=async()=>{i.init({debug:!1,connectSrc:"https://jssdk.onekey.so/0.3.48/"}),i.on(a.rF,(e=>{switch(e.type){case a.zG.REQUEST_PIN:i.uiResponse({type:a.Sy.RECEIVE_PIN,payload:"@@ONEKEY_INPUT_PIN_IN_DEVICE"});break;case a.zG.REQUEST_PASSPHRASE:i.uiResponse({type:a.Sy.RECEIVE_PASSPHRASE,payload:{value:"",passphraseOnDevice:!0,save:!0}})}}))},this.evmSignTransaction=i.evmSignTransaction,this.evmSignMessage=i.evmSignMessage,this.evmSignTypedData=i.evmSignTypedData,this.searchDevices=i.searchDevices,this.getPassphraseState=i.getPassphraseState,this.evmGetPublicKey=i.evmGetPublicKey}}},471120:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>i});var a=s(693150),n=s.n(a),r=s(219571);class i{constructor(){this.init=async()=>new Promise(((e,t)=>{n().runtime.sendMessage({target:r.n_.onekeyOffscreen,action:r.DU.init}).then((s=>{s?.error?t(s.error):e(s)}))})),this.searchDevices=()=>new Promise(((e,t)=>{n().runtime.sendMessage({target:r.n_.onekeyOffscreen,action:r.DU.searchDevices}).then((s=>{s?.error?t(s.error):e(s)}))})),this.evmGetPublicKey=(...e)=>new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.onekeyOffscreen,action:r.DU.evmGetPublicKey,params:e}).then((e=>{e?.error?s(e.error):t(e)}))})),this.evmSignMessage=(...e)=>new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.onekeyOffscreen,action:r.DU.evmSignMessage,params:e}).then((e=>{e?.error?s(e.error):t(e)}))})),this.evmSignTransaction=(...e)=>new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.onekeyOffscreen,action:r.DU.evmSignTransaction,params:e}).then((e=>{e?.error?s(e.error):t(e)}))})),this.evmSignTypedData=(...e)=>new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.onekeyOffscreen,action:r.DU.evmSignTypedData,params:e}).then((e=>{e?.error?s(e.error):t(e)}))})),this.getPassphraseState=(...e)=>new Promise(((t,s)=>{n().runtime.sendMessage({target:r.n_.onekeyOffscreen,action:r.DU.getPassphraseState,params:e}).then((e=>{e?.error?s(e.error):t(e)}))}))}}},938793:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>r});var a=s(717187),n=s.n(a);class r{constructor(){this.isDeviceConnected=!1,this.model="",this.connectDevices=new Set,this.event=new(n()),this.init=async e=>{globalThis.TrezorConnect.on("DEVICE_EVENT",(e=>{e&&e.payload&&e.payload.features&&(this.model=e.payload.features.model);const t=e.payload?.id;"device-connect"===e.type&&(this.connectDevices.add(t),this.event.emit("cleanUp",!0)),"device-disconnect"===e.type&&(this.connectDevices.delete(t),this.event.emit("cleanUp",!0))})),this.isDeviceConnected||(globalThis.TrezorConnect.init({...e,transports:["BridgeTransport","WebUsbTransport"],connectSrc:"https://connect.trezor.io/9/"}),this.isDeviceConnected=!0)},this.dispose=globalThis.TrezorConnect.dispose,this.getPublicKey=globalThis.TrezorConnect.getPublicKey,this.ethereumSignTransaction=globalThis.TrezorConnect.ethereumSignTransaction,this.ethereumSignMessage=globalThis.TrezorConnect.ethereumSignMessage,this.ethereumSignTypedData=globalThis.TrezorConnect.ethereumSignTypedData}}},771508:(e,t,s)=>{"use strict";var a;s.d(t,{G:()=>a}),function(e){e.LedgerLive="LedgerLive",e.Legacy="Legacy",e.BIP44="BIP44"}(a||(a={}))},800229:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{ZP:()=>q});var n=s(717187),r=s(902043),i=s.n(r),o=s(222751),c=s(56292),d=s(625957),h=s(612724),u=s(330122),l=s(396525),p=s.n(l),g=s(617014),y=s.n(g),m=s(558200),w=s.n(m),T=s(919430),f=s(257241),A=s(639059),C=s(993962),S=s.n(C),v=s(185909),b=s.n(v),P=s(986803),I=s(153515),E=s(927799),k=s(114219),x=s(888227),L=s(693693),N=s(173520),D=s(177447),_=s(478051),O=s(622400),R=s(174261),B=s(539666),M=s(697574),K=s(826149),W=s(156685),F=s(969007),H=s(659814),Z=s(186429),U=e([L,Z]);[L,Z]=U.then?(await U)():U;const G=[D.pY.SimpleKeyring,D.pY.HdKeyring],$={SimpleKeyring:p(),HdKeyring:y(),BitBox02Keyring:T.Z,TrezorKeyring:b(),LedgerBridgeKeyring:f.Z,OnekeyKeyring:P.Z,WatchKeyring:w(),WalletConnectKeyring:A.WalletConnectKeyring,GnosisKeyring:x.ZP,LatticeKeyring:I.Z,KeystoneKeyring:E.ZP,CoboArgusKeyring:k.Z,CoinbaseKeyring:S(),EthImKeyKeyring:K.X};class j extends n.EventEmitter{constructor(){super(),this.password=null,this.keyringTypes=Object.values($),this.memStore=new h.ObservableStore({isUnlocked:!1,keyringTypes:this.keyringTypes.map((e=>e.type)),keyrings:[],preMnemonics:""}),this.keyrings=[]}loadStore(e){this.store=new h.ObservableStore(e)}async boot(e){if(this.isBooted())throw new Error("is booted");this.password=e;const t=await(0,H.b1)({data:"true",password:e});this.store.updateState({booted:t}),this.memStore.updateState({isUnlocked:!0})}isBooted(){return!!this.store.getState().booted}hasVault(){return!!this.store.getState().vault}fullUpdate(){return this.emit("update",this.memStore.getState()),this.memStore.getState()}importPrivateKey(e){let t;return this.persistAllKeyrings().then(this.addNewKeyring.bind(this,"Simple Key Pair",[e])).then((async e=>{t=e;const[s]=await t.getAccounts(),a=await this.getAllTypedAccounts();if(!O.Z.getContactByAddress(s)){const e=(0,R.fs)({keyringType:D.pY.SimpleKeyring,keyringCount:a.filter((e=>e.type===D.pY.SimpleKeyring)).length-1});O.Z.addAlias({address:s,name:e})}return Z.Z.setWalletByKeyringType(D.pY.SimpleKeyring),this.persistAllKeyrings.bind(this)})).then(this.setUnlocked.bind(this)).then(this.fullUpdate.bind(this)).then((()=>t))}generateMnemonic(){return c.OF(d.U)}async generatePreMnemonic(){if(!this.isUnlocked())throw new Error(N.ZP.t("background.error.unlock"));const e=this.generateMnemonic(),t=await(0,H.b1)({data:e,password:this.password});return this.memStore.updateState({preMnemonics:t}),e}getKeyringByType(e){return this.keyrings.find((t=>t.type===e))}removePreMnemonics(){this.memStore.updateState({preMnemonics:""})}async getPreMnemonics(){if(!this.memStore.getState().preMnemonics)return"";if(!this.isUnlocked())throw new Error(N.ZP.t("background.error.unlock"));return await(0,H.qP)({password:this.password,encryptedData:this.memStore.getState().preMnemonics})}createKeyringWithMnemonics(e){if(!c._I(e,d.U))return Promise.reject(new Error(N.ZP.t("background.error.invalidMnemonic")));let t;return this.persistAllKeyrings().then((()=>this.addNewKeyring("HD Key Tree",{mnemonic:e,activeIndexes:[]}))).then((e=>(t=e,e.getAccounts()))).then(this.persistAllKeyrings.bind(this)).then(this.setUnlocked.bind(this)).then(this.fullUpdate.bind(this)).then((()=>t))}addKeyring(e){return e.getAccounts().then((t=>this.checkForDuplicate(e.type,t))).then((()=>(this.keyrings.push(e),this.persistAllKeyrings()))).then((()=>this._updateMemStoreKeyrings())).then((()=>this.fullUpdate())).then((()=>e))}updateHdKeyringIndex(e){if(e.type!==D.pY.HdKeyring)return;if(this.keyrings.find((t=>t===e)))return;const t=this.keyrings.filter((e=>e.type===D.pY.HdKeyring));e.index=Math.max(...t.map((e=>e.index)),t.length-1)+1}async setLocked(){return this.keyrings.forEach((e=>{e.cleanUp&&e.cleanUp()})),this.password=null,(0,H.iF)(),this.memStore.updateState({isUnlocked:!1}),this.keyrings=[],await this._updateMemStoreKeyrings(),this.emit("lock"),this.fullUpdate()}async submitPassword(e){await this.verifyPassword(e),this.password=e;try{this.keyrings=await this.unlockKeyrings(e)}catch{}finally{this.setUnlocked()}return this.store.getState().unencryptedKeyringData||await this.persistAllKeyrings(),this.fullUpdate()}async tryUnlock(){if(!this.password&&!this.isUnlocked())try{this.keyrings=await this.unlockKeyrings(),this.setUnlocked(),this.fullUpdate()}catch(e){e.message}}async verifyPassword(e){const t=this.store.getState().booted;if(!t)throw new Error(N.ZP.t("background.error.canNotUnlock"));await(0,H.qP)({password:e,encryptedData:t})}addNewKeyring(e,t){const s=new(this.getKeyringClassForType(e))((0,W.R)(e)?{bridge:(0,W.S)(e),...t??{}}:t);return this.updateHdKeyringIndex(s),this.addKeyring(s)}async removeEmptyKeyrings(){const e=[];await Promise.all(this.keyrings.map((async t=>{(await t.getAccounts()).length>0&&e.push(t)}))),this.keyrings=e}async checkForDuplicate(e,t){const s=this.getKeyringsByType(e),a=(await Promise.all(s.map((e=>e.getAccounts())))).reduce(((e,t)=>e.concat(t)),[]).map((e=>(0,u.f0)(e).toLowerCase())),n=t.find((e=>a.find((t=>t===e.toLowerCase()||t===o.stripHexPrefix(e))))),r=new Error(JSON.stringify({address:n,anchor:"DuplicateAccountError"}));return n?Promise.reject(r):Promise.resolve(t)}addNewAccount(e){let t;return e.addAccounts(1).then((()=>(Z.Z.setWalletByKeyringType(e.type),e.getAccountsWithBrand?e.getAccountsWithBrand():e.getAccounts()))).then((s=>{s.map((t=>({address:(0,u.f0)("string"==typeof t?t:t.address),brandName:"string"==typeof t?e.type:t?.realBrandName||t.brandName}))).forEach((t=>{this.setAddressAlias(t.address,e,t.brandName),this.emit("newAccount",t.address)})),t=s})).then(this.persistAllKeyrings.bind(this)).then(this._updateMemStoreKeyrings.bind(this)).then(this.fullUpdate.bind(this)).then((()=>t))}async setAddressAlias(e,t,s){const a=O.Z.getCacheAlias(e),n=O.Z.getContactByAddress(e);if(n)n.isAlias||O.Z.updateAlias(n);else if(a)O.Z.removeCacheAlias(e),O.Z.addAlias(a);else{let a=(await t.getAccounts()).length-1;if(t.type===D.Cr.WALLETCONNECT){a=(await t.getAccountsWithBrand()).filter((e=>e.brandName===s||e.realBrandName===s)).length-1}const n=(0,R.fs)({brandName:s,keyringType:t.type,addressCount:a});O.Z.addAlias({address:e,name:n})}}exportAccount(e){try{return this.getKeyringForAccount(e).then((t=>t.exportAccount((0,u.f0)(e))))}catch(e){return Promise.reject(e)}}removeAccount(e,t,s,a=!0){return this.getKeyringForAccount(e,t).then((async a=>{if("function"==typeof a.removeAccount){a.removeAccount(e,s),this.emit("removedAccount",e,t,s);const n=a;return[await a.getAccounts(),n]}return Promise.reject(new Error(`Keyring ${a.type} doesn't support account removal operations`))})).then((([e,t])=>{0===e.length&&a&&(t.forgetDevice?.(),this.keyrings=this.keyrings.filter((e=>e!==t)))})).then(this.persistAllKeyrings.bind(this)).then(this._updateMemStoreKeyrings.bind(this)).then(this.fullUpdate.bind(this)).catch((e=>Promise.reject(e)))}removeKeyringByPublicKey(e){const t=[];return this.keyrings=this.keyrings.filter((s=>!s.publicKey||(s.publicKey===e&&t.push(s),s.publicKey!==e))),t.forEach((e=>{const t=e.getAddresses(),s=e.type;t.forEach((e=>{this.emit("removedAccount",e,s)}))})),this.persistAllKeyrings().then(this._updateMemStoreKeyrings.bind(this)).then(this.fullUpdate.bind(this)).catch((e=>Promise.reject(e)))}signTransaction(e,t,s,a={}){const n=(0,u.f0)(s);return e.signTransaction(n,t,a)}signMessage(e,t={}){const s=(0,u.f0)(e.from);return this.getKeyringForAccount(s).then((a=>a.signMessage(s,e.data,t)))}signPersonalMessage(e,t,s={}){const a=(0,u.f0)(t.from);return e.signPersonalMessage(a,t.data,s)}signTypedMessage(e,t,s={version:"V1"}){const a=(0,u.f0)(t.from);return e.signTypedData(a,t.data,s)}getEncryptionPublicKey(e,t={}){const s=(0,u.f0)(e);return this.getKeyringForAccount(s).then((e=>e.getEncryptionPublicKey(s,t)))}decryptMessage(e,t={}){const s=(0,u.f0)(e.from);return this.getKeyringForAccount(s).then((a=>a.decryptMessage(s,e.data,t)))}async getAppKeyAddress(e,t){const s=(0,u.f0)(e);return(await this.getKeyringForAccount(s)).getAppKeyAddress(s,t)}async exportAppKeyForAddress(e,t){const s=(0,u.f0)(e),a=await this.getKeyringForAccount(s);if(!("exportAccount"in a))throw new Error(`The keyring for address ${e} does not support exporting.`);return a.exportAccount(s,{withAppKeyOrigin:t})}async persistAllKeyrings(){if(!this.isUnlocked())return Promise.reject(new Error("KeyringController - password is not a string"));const e=await Promise.all(this.keyrings.map((e=>Promise.all([e.type,e.serialize()]).then((e=>({type:e[0],data:e[1]}))))));let t=!1;const s=e.map((({type:e,data:s})=>{if(!G.includes(e))return{type:e,data:s};(e!==D.pY.SimpleKeyring||s.length)&&(t=!0)})).filter(Boolean),a=await(0,H.b1)({data:e,password:this.password});return this.store.updateState({vault:a,unencryptedKeyringData:s,hasEncryptedKeyringData:t}),!0}async unlockKeyrings(e){const t=this.store.getState().vault;if(!t)throw new Error(N.ZP.t("background.error.canNotUnlock"));await this.clearKeyrings();const s=await(0,H.qP)({password:e,encryptedData:t});return await Promise.all(Array.from(s).map(this._restoreKeyring.bind(this))),await this._updateMemStoreKeyrings(),this.keyrings}async restoreKeyring(e){const t=await this._restoreKeyring(e);return await this._updateMemStoreKeyrings(),t}async _restoreKeyring(e){const{type:t,data:s}=e,a=this.getKeyringClassForType(t),n=a?.type===D.Cr.WALLETCONNECT?new a((0,M.K)()):new a((0,W.R)(t)?{bridge:(0,W.S)(t)}:void 0);if(await n.deserialize(s),n.type===D.Cr.WALLETCONNECT&&(_.Z.addEventListener(D.FP.WALLETCONNECT.INIT,(e=>{const{address:t,brandName:s,type:a}=e;a===D.Cr.WALLETCONNECT&&n.init(t,s,(0,F.aO)("mainnet").map((e=>e.id)))})),n.on("inited",(e=>{_.Z.emit(D.FP.broadcastToUI,{method:D.FP.WALLETCONNECT.INITED,params:{uri:e}})})),n.on("transport_error",(e=>{B.Tb(new Error("Transport error: "+JSON.stringify(e))),_.Z.emit(D.FP.broadcastToUI,{method:D.FP.WALLETCONNECT.TRANSPORT_ERROR,params:e})})),n.on("statusChange",(e=>{!L.Z.getPopupOpen()&&(0,u.sV)()&&(0,u.LA)(e),_.Z.emit(D.FP.broadcastToUI,{method:D.FP.WALLETCONNECT.STATUS_CHANGED,params:e})})),n.on("sessionStatusChange",(e=>{_.Z.emit(D.FP.broadcastToUI,{method:D.FP.WALLETCONNECT.SESSION_STATUS_CHANGED,params:e})})),n.on("sessionAccountChange",(e=>{_.Z.emit(D.FP.broadcastToUI,{method:D.FP.WALLETCONNECT.SESSION_ACCOUNT_CHANGED,params:e})})),n.on("sessionNetworkDelay",(e=>{_.Z.emit(D.FP.broadcastToUI,{method:D.FP.WALLETCONNECT.SESSION_NETWORK_DELAY,params:e})})),n.on("error",(e=>{console.error(e),B.Tb(e)}))),n.type===D.Cr.Coinbase){const e=n;_.Z.addEventListener(D.FP.WALLETCONNECT.INIT,(({address:t,type:s})=>{if(s!==D.Cr.Coinbase)return;const a=e.connect({address:t});_.Z.emit(D.FP.broadcastToUI,{method:D.FP.WALLETCONNECT.INITED,params:{uri:a}})})),e.on("message",(e=>{"CHAIN_CHANGED"===e.status?_.Z.emit(D.FP.broadcastToUI,{method:D.FP.WALLETCONNECT.SESSION_ACCOUNT_CHANGED,params:{...e,status:"CONNECTED"}}):(_.Z.emit(D.FP.broadcastToUI,{method:D.FP.WALLETCONNECT.SESSION_STATUS_CHANGED,params:e}),_.Z.emit(D.FP.broadcastToUI,{method:D.FP.WALLETCONNECT.SESSION_ACCOUNT_CHANGED,params:e}))}))}return n.type===D.Cr.GNOSIS&&n.on(x.NI,(e=>{_.Z.emit(D.FP.broadcastToUI,{method:x.NI,params:e}),n.on(x.Q_,(e=>{_.Z.emit(D.FP.broadcastToUI,{method:x.Q_,params:e})}))})),await n.getAccounts(),this.keyrings.push(n),n}getKeyringClassForType(e){return this.keyringTypes.find((t=>t.type===e))}getKeyringsByType(e){return this.keyrings.filter((t=>t.type===e))}async getAccounts(){const e=this.keyrings||[];return(await Promise.all(e.map((e=>e.getAccounts()))).then((e=>e.reduce(((e,t)=>e.concat(t)),[])))).map(u.f0)}getKeyringForAccount(e,t,s,a,n=!0){const r=(0,u.f0)(e).toLowerCase();i().debug(`KeyringController - getKeyringForAccount: ${r}`);let o=t?this.keyrings.filter((e=>e.type===t)):this.keyrings;return n||(o=o.filter((e=>e.type!==D.pY.WatchAddressKeyring))),Promise.all(o.map((e=>Promise.all([e,e.getAccounts()])))).then((e=>{const t=e.filter((e=>e[1].map((e=>(0,u.f0)(e).toLowerCase())).includes(r)));if(t&&t.length>0)return t[0][0];throw new Error("No keyring found for the requested account.")}))}displayForKeyring(e,t=!0){const s=L.Z.getHiddenAddresses();return(e.getAccountsWithBrand?e.getAccountsWithBrand():e.getAccounts()).then((a=>{const n=a.map((t=>({address:(0,u.f0)("string"==typeof t?t:t.address),brandName:"string"==typeof t?e.type:t.brandName})));return{type:e.type,accounts:t?n:n.filter((t=>!s.find((s=>s.type===e.type&&s.address.toLowerCase()===t.address.toLowerCase())))),keyring:e,byImport:e.byImport,publicKey:e.publicKey}}))}getAllTypedAccounts(){return Promise.all(this.keyrings.map((e=>this.displayForKeyring(e))))}async getAllTypedVisibleAccounts(){return(await Promise.all(this.keyrings.map((e=>this.displayForKeyring(e,!1))))).filter((e=>e.accounts.length>0))}async getAllVisibleAccountsArray(){const e=await this.getAllTypedVisibleAccounts(),t=[];return e.forEach((e=>{t.push(...e.accounts.map((t=>({address:t.address,brandName:t.brandName,type:e.type}))))})),t}async getAllAdresses(){const e=await this.getAllTypedAccounts(),t=[];return e.forEach((e=>{t.push(...e.accounts.map((t=>({address:t.address,brandName:t.brandName,type:e.type}))))})),t}async hasAddress(e){return!!(await this.getAllAdresses()).find((t=>(0,u.Wr)(t.address,e)))}async clearKeyrings(){this.keyrings=[],this.memStore.updateState({keyrings:[]})}async _updateMemStoreKeyrings(){const e=await Promise.all(this.keyrings.map((e=>this.displayForKeyring(e))));return this.memStore.updateState({keyrings:e})}setUnlocked(){this.memStore.updateState({isUnlocked:!0}),this.emit("unlock")}isUnlocked(){return this.memStore.getState().isUnlocked}savedUnencryptedKeyringData(){return"unencryptedKeyringData"in this.store.getState()}hasEncryptedKeyringData(){return this.store.getState().hasEncryptedKeyringData}hasUnencryptedKeyringData(){return this.store.getState().unencryptedKeyringData?.length>0}async resetPassword(e){const t=this.store.getState().unencryptedKeyringData,s=await(0,H.b1)({data:"true",password:e}),a=await(0,H.b1)({data:t,password:e});this.store.updateState({vault:a,booted:s,hasEncryptedKeyringData:!1}),this.emit("resetPassword"),this.setLocked()}async resetBooted(){this.store.updateState({booted:void 0})}async getUnencryptedKeyringTypes(){return this.store.getState().unencryptedKeyringData?.map((e=>e.type))??[]}}const q=new j;a()}catch(e){a(e)}}))},178124:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>S});var n=s(693150),r=s.n(n),i=s(717187),o=s.n(i),c=s(179826),d=s(172045),h=s(539666),u=s(12294),l=s(144820),p=s(177447),g=s(764289),y=s(693693),m=s(625399),w=s(969007),T=s(171417),f=e([g,y]);[g,y]=f.then?(await f)():f;const A=["SignTx","SignText","SignTypedData","LedgerHardwareWaiting","QRHardWareWaiting","WatchAddressWaiting","CommonWaiting","PrivatekeyWaiting","CoinbaseWaiting","ImKeyHardwareWaiting"];class C extends(o()){get approvals(){return this._approvals}set approvals(e){this._approvals=e;const t=T.AU?r().action:r().browserAction;e.length<=0?t.setBadgeText({text:T.AU?"":null}):(t.setBadgeText({text:e.length+""}),t.setBadgeBackgroundColor({color:"#FE815F"}))}constructor(){super(),this.currentApproval=null,this.dappManager=new Map,this._approvals=[],this.notifiWindowId=null,this.isLocked=!1,this.activeFirstApproval=async()=>{try{const e=(await r().windows.getAll()).find((e=>e.id===this.notifiWindowId));if(null!==this.notifiWindowId&&e)return void r().windows.update(this.notifiWindowId,{focused:!0});if(this.approvals.length<0)return;const t=this.approvals[0];this.currentApproval=t,this.openNotification(t.winProps,!0)}catch(e){h.Tb("activeFirstApproval failed: "+JSON.stringify(e)),this.clear()}},this.deleteApproval=e=>{e&&this.approvals.length>1?this.approvals=this.approvals.filter((t=>e.id!==t.id)):(this.currentApproval=null,this.approvals=[])},this.getApproval=()=>this.currentApproval,this.resolveApproval=async(e,t=!1,s)=>{if(s&&s!==this.currentApproval?.id)return;t?this.currentApproval?.reject&&this.currentApproval?.reject(new u.EthereumProviderError(4001,"User Cancel")):this.currentApproval?.resolve&&this.currentApproval?.resolve(e);const a=this.currentApproval;this.clearLastRejectDapp(),this.deleteApproval(a),this.approvals.length>0?this.currentApproval=this.approvals[0]:this.currentApproval=null,this.emit("resolve",e)},this.rejectApproval=async(e,t=!1,s=!1)=>{this.addLastRejectDapp();const a=this.currentApproval;this.approvals.length<=1&&await this.clear(t),s?a?.reject&&a?.reject(c.ethErrors.rpc.internal(e)):a?.reject&&a?.reject(c.ethErrors.provider.userRejectedRequest(e)),a?.signingTxId&&g.Z.removeSigningTx(a.signingTxId),a&&this.approvals.length>1?(this.deleteApproval(a),this.currentApproval=this.approvals[0]):await this.clear(t),this.emit("reject",e)},this.requestApproval=async(e,t)=>{const s=this.getOrigin(e);if(s){const e=this.dappManager.get(s);if(e?.isBlocked&&Date.now()-e.blockedTimestamp<6e4)throw c.ethErrors.provider.userRejectedRequest("User rejected the request.")}const a=y.Z.getCurrentAccount(),n=t=>{const s=t?g.Z.getSigningTx(t):null,n=s?.explain,r=(0,w.Ed)({id:s?.rawTx.chainId});(n||r?.isTestnet)&&a&&m.Z.report("preExecTransaction",{type:a.brandName,category:p.tH[a.type],chainId:r?.serverId||"",success:!n||n.calcSuccess&&n.pre_exec.success,createdBy:e?.params.$ctx?.ga?"rabby":"dapp",source:e?.params.$ctx?.ga?.source||"",trigger:e?.params.$ctx?.ga.trigger||"",networkType:r?.isTestnet?"Custom Network":"Integrated Network"})};return new Promise(((s,a)=>{const i=(0,d.Z)();let o;o="SignTx"===e.approvalComponent?g.Z.addSigningTx(e.params.data[0]):e?.params?.signingTxId;const h={taskId:i,id:i,signingTxId:o,data:e,winProps:t,resolve(e){"SignTx"===this.data.approvalComponent&&n(this.signingTxId),s(e)},reject(e){"SignTx"===this.data.approvalComponent&&n(this.signingTxId),a(e)}};if(A.includes(e.approvalComponent)){if(this.currentApproval&&!A.includes(this.currentApproval.data.approvalComponent))throw c.ethErrors.provider.userRejectedRequest("please request after current approval resolve")}else if(this.currentApproval)throw c.ethErrors.provider.userRejectedRequest("please request after current approval resolve");e.isUnshift?(this.approvals=[h,...this.approvals],this.currentApproval=h):(this.approvals=[...this.approvals,h],this.currentApproval||(this.currentApproval=h)),null!==this.notifiWindowId&&A.includes(e.approvalComponent)?r().windows.update(this.notifiWindowId,{focused:!0}):this.openNotification(h.winProps)}))},this.clear=async(e=!1)=>{if(this.approvals=[],this.currentApproval=null,null!==this.notifiWindowId&&!e){try{await l.DS.remove(this.notifiWindowId)}catch(e){}this.notifiWindowId=null}},this.rejectAllApprovals=()=>{this.addLastRejectDapp(),this.approvals.forEach((e=>{e.reject&&e.reject(new u.EthereumProviderError(4001,"User rejected the request."))})),this.approvals=[],this.currentApproval=null,g.Z.removeAllSigningTx()},this.unLock=()=>{this.isLocked=!1},this.lock=()=>{this.isLocked=!0},this.openNotification=(e,t=!1)=>{if(!t){if(this.isLocked)return;this.lock()}null!==this.notifiWindowId&&(l.DS.remove(this.notifiWindowId),this.notifiWindowId=null),l.DS.openNotification(e).then((e=>{this.notifiWindowId=e}))},this.updateNotificationWinProps=e=>{null!==this.notifiWindowId&&r().windows.update(this.notifiWindowId,e)},this.setCurrentRequestDeferFn=e=>{this.currentRequestDeferFn=e},this.callCurrentRequestDeferFn=()=>this.currentRequestDeferFn?.(),this.setStatsData=e=>{this.statsData=e},this.getStatsData=()=>this.statsData,this.checkNeedDisplayBlockedRequestApproval=()=>{const e=this.getOrigin();if(!e)return!1;const t=this.dappManager.get(e);return!!t&&(Date.now()-t.lastRejectTimestamp<6e4&&t.lastRejectCount>=2)},this.checkNeedDisplayCancelAllApproval=()=>this.approvals.length>1,this.blockedDapp=()=>{const e=this.getOrigin();if(!e)return;const t=this.dappManager.get(e);t&&(t.isBlocked=!0,t.blockedTimestamp=Date.now())},l.DS.event.on("closeNotification",(()=>{this.notifiWindowId=null})),l.DS.event.on("windowRemoved",((e,t)=>{e===this.notifiWindowId&&(this.notifiWindowId=null,t&&this.rejectAllApprovals())})),l.DS.event.on("windowFocusChange",(e=>{p.D||p.G9&&e===r().windows.WINDOW_ID_NONE&&(p.m2||p.qB)||null!==this.notifiWindowId&&e!==this.notifiWindowId&&this.currentApproval&&!A.includes(this.currentApproval.data.approvalComponent)&&this.rejectApproval()}))}addLastRejectDapp(){if(this.currentApproval?.data?.params?.$ctx)return;const e=this.getOrigin();if(!e)return;const t=this.dappManager.get(e);t&&Date.now()-t.lastRejectTimestamp<6e4?(t.lastRejectCount=t.lastRejectCount+1,t.lastRejectTimestamp=Date.now()):this.dappManager.set(e,{lastRejectTimestamp:Date.now(),lastRejectCount:1,blockedTimestamp:0,isBlocked:!1})}clearLastRejectDapp(){const e=this.getOrigin();e&&this.dappManager.delete(e)}getOrigin(e=this.currentApproval?.data){return e?.params?.origin||e?.origin}}const S=new C;a()}catch(e){a(e)}}))},652449:(e,t,s)=>{"use strict";s.d(t,{Z:()=>g,d:()=>p});var a=s(177447),n=s(38151),r=s(330122),i=s(976547),o=s(568917),c=s(734155);class d{constructor(){this.store={host:a.NN,testnetHost:a.P4},(0,r.D0)({name:"openapi",template:{host:a.NN,testnetHost:a.P4}}).then((e=>{this.store=e}))}}const h=new class extends d{constructor(){super()}get host(){return this.store.testnetHost}set host(e){this.store.testnetHost=e}},u=new class extends d{constructor(){super()}get host(){return this.store.host}set host(e){this.store.host=e}get testnetHost(){return this.store.testnetHost}set testnetHost(e){this.store.testnetHost=e}},l=new n.P({plugin:i.u,adapter:o.Z,store:c.env.DEBUG?u:{host:a.NN,testnetHost:a.P4}}),p=new n.P({plugin:i.u,adapter:o.Z,store:c.env.DEBUG?h:{host:a.P4,testnetHost:a.P4}}),g=l},46577:(e,t,s)=>{"use strict";s.d(t,{Z:()=>r});var a=s(693150),n=s.n(a);const r=new class{constructor(){this.store=null,this.init=async()=>{const e={cache:{path:"",params:{},states:{}},hasCache:!1};await n().storage.session.set({pageStateCache:e}),this.store=e},this.has=()=>this.store?this.store.hasCache:null,this.get=()=>this.store&&this.has()?this.store.cache:null,this.set=async e=>{this.store&&(this.store.cache=e,this.store.hasCache=!0,this.syncData())},this.clear=()=>{this.store&&(this.store.cache={path:"",params:{},states:{}},this.store.hasCache=!1,this.syncData())},this.syncData=async()=>{await n().storage.session.set({pageStateCache:this.store})}}}},905368:(e,t,s)=>{"use strict";s.d(t,{Z:()=>d});var a=s(39593),n=s.n(a),r=s(330122),i=s(177447),o=s(496486),c=s(969007);const d=new class{constructor(){this.store={dumpCache:[]},this.init=async()=>{const e=await(0,r.D0)({name:"permission"});this.store=e||this.store,this.lruCache=new(n());let t=!1;const s=(this.store.dumpCache||[]).filter((e=>{const s=e?.v?.chain&&(0,c.Xj)(e.v.chain);return t||s||(t=!0),s})).map((e=>({k:e.k,v:e.v,e:0})));this.lruCache.load(s),t&&this.sync()},this.sync=()=>{this.lruCache&&(this.store.dumpCache=this.lruCache.dump())},this.getWithoutUpdate=e=>{if(this.lruCache)return this.lruCache.peek(e)},this._getSite=e=>{const t=this.lruCache?.get(e);if(!t)return t;return(0,c.Ed)({enum:t.chain})?t:{...t,chain:i.h.ETH,isConnected:!1}},this.getSite=e=>{const t=e.toString();return this._getSite(t)},this.setSite=e=>{this.lruCache&&(this.lruCache.set(e.origin,e),this.sync())},this.addConnectedSite=(e,t,s,a,n=!1)=>{this.lruCache&&(this.lruCache.set(e,{origin:e,name:t,icon:s,chain:a,isSigned:n,isTop:!1,isConnected:!0}),this.sync())},this.addConnectedSiteV2=({origin:e,name:t,icon:s,defaultChain:a,isSigned:n=!1})=>{if(!this.lruCache)return;const r=this._getSite(e);this.lruCache.set(e,{...r,origin:e,name:t,icon:s,isSigned:n,isTop:!1,chain:a,isConnected:!0}),this.sync()},this.touchConnectedSite=e=>{this.lruCache&&e!==i.NI&&(this.lruCache.get(e),this.sync())},this.updateConnectSite=(e,t,s)=>{if(this.lruCache&&this.lruCache.has(e)&&e!==i.NI&&(!t.chain||(0,c.Ed)({enum:t.chain}))){if(s){const s=this._getSite(e);this.lruCache.set(e,{...s,...t})}else this.lruCache.set(e,t);this.sync()}},this.hasPermission=e=>{if(!this.lruCache)return;if(e===i.NI)return!0;const t=this._getSite(e);return t&&t.isConnected},this.setRecentConnectedSites=e=>{this.lruCache?.load(e.map((e=>({e:0,k:e.origin,v:e}))).concat((this.lruCache?.values()||[]).filter((e=>!e.isConnected)).map((e=>({e:0,k:e.origin,v:e}))))),this.sync()},this.getRecentConnectedSites=()=>{const e=(this.lruCache?.values()||[]).filter((e=>e.isConnected));return[...e.filter((e=>e?.isTop)).sort(((e,t)=>(e.order||0)-(t.order||0))),...e.filter((e=>!e.isTop))]},this.getConnectedSites=()=>(this.lruCache?.values()||[]).filter((e=>e.isConnected)),this.getSites=()=>this.lruCache?.values()||[],this.getPreferMetamaskSites=()=>(this.lruCache?.values()||[]).filter((e=>e.preferMetamask)),this.getConnectedSite=e=>{const t=this._getSite(e);if(t&&t.isConnected)return t},this.topConnectedSite=(e,t)=>{const s=this.getConnectedSite(e);s&&this.lruCache&&(t=t??((0,o.max)(this.getRecentConnectedSites().map((e=>e.order)))||0)+1,this.updateConnectSite(e,{...s,order:t,isTop:!0}))},this.favoriteWebsite=(e,t)=>{const s=this.getConnectedSite(e);s&&this.lruCache&&(t=t??((0,o.max)(this.getRecentConnectedSites().map((e=>e.order)))||0)+1,this.updateConnectSite(e,{...s,order:t,isFavorite:!0}))},this.unFavoriteWebsite=e=>{const t=this.getConnectedSite(e);t&&this.lruCache&&this.updateConnectSite(e,{...t,isFavorite:!1})},this.unpinConnectedSite=e=>{const t=this.getConnectedSite(e);t&&this.lruCache&&this.updateConnectSite(e,{...t,isTop:!1})},this.removeConnectedSite=e=>{if(!this.lruCache)return;const t=this.getConnectedSite(e);t&&(this.setSite({...t,isConnected:!1}),this.sync())},this.getSitesByDefaultChain=e=>this.lruCache?this.lruCache.values().filter((t=>t.chain===e)):[],this.isInternalOrigin=e=>e===i.NI}}},693693:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>S});var n=s(150361),r=s.n(n),i=s(478051),o=s(330122),c=s(737820),d=s(177447),h=s(693150),u=s.n(h),l=s(229140),p=s.n(l),g=s(172919),y=s(727484),m=s.n(y),w=s(734155),T=e([c]);c=(T.then?(await T)():T)[0];const f="0.93.8",A={search:"",sortType:"usd"};class C{constructor(){this.popupOpen=!1,this.hasOtherProvider=!1,this.init=async()=>{this.store=await(0,o.D0)({name:"preference",template:{currentAccount:void 0,externalLinkAck:!1,hiddenAddresses:[],balanceMap:{},curvePointsMap:{},testnetBalanceMap:{},useLedgerLive:!1,locale:"en",watchAddressPreference:{},isDefaultWallet:!1,lastTimeSendToken:{},highligtedAddresses:[],walletSavedList:[],alianNames:{},initAlianNames:!1,gasCache:{},currentVersion:"0",firstOpen:!1,pinnedChain:[],addedToken:{},tokenApprovalChain:{},nftApprovalChain:{},sendLogTime:0,needSwitchWalletCheck:!0,sendEnableTime:0,customizedToken:[],blockedToken:[],collectionStarred:[],hiddenBalance:!1,isShowTestnet:!1,themeMode:d.jw.light,addressSortStore:{...A},reserveGasOnSendToken:!0,isHideEcologyNoticeDict:{}}}),this.store.locale&&d.ih.find((e=>e.code===this.store.locale))||(this.store.locale="en"),c.ag.changeLanguage(this.store.locale),void 0!==this.store.isDefaultWallet&&null!==this.store.isDefaultWallet||(this.store.isDefaultWallet=!1),this.store.lastTimeSendToken||(this.store.lastTimeSendToken={}),this.store.initAlianNames||(this.store.initAlianNames=!1),this.store.gasCache||(this.store.gasCache={}),this.store.pinnedChain||(this.store.pinnedChain=[]),this.store.addedToken||(this.store.addedToken={}),this.store.externalLinkAck||(this.store.externalLinkAck=!1),this.store.hiddenAddresses||(this.store.hiddenAddresses=[]),this.store.balanceMap||(this.store.balanceMap={}),this.store.testnetBalanceMap||(this.store.testnetBalanceMap={}),this.store.highligtedAddresses||(this.store.highligtedAddresses=[]),this.store.walletSavedList||(this.store.walletSavedList=[]),this.store.tokenApprovalChain||(this.store.tokenApprovalChain={}),this.store.nftApprovalChain||(this.store.nftApprovalChain={}),this.store.sendLogTime||(this.store.sendLogTime=0),null==this.store.needSwitchWalletCheck&&(this.store.needSwitchWalletCheck=!0),this.store.sendEnableTime||(this.store.sendEnableTime=0),this.store.customizedToken||(this.store.customizedToken=[]),this.store.blockedToken||(this.store.blockedToken=[]),this.store.collectionStarred||(this.store.collectionStarred=[]),this.store.autoLockTime||(this.store.autoLockTime=0),this.store.hiddenBalance||(this.store.hiddenBalance=!1),this.store.isShowTestnet||(this.store.isShowTestnet=!1),this.store.addressSortStore||(this.store.addressSortStore={...A}),this.store.isHideEcologyNoticeDict||(this.store.isHideEcologyNoticeDict={})},this.getPreference=e=>(e&&!["search","lastCurrent"].includes(e)||this.resetAddressSortStoreExpiredValue(),"isShowTestnet"===e||(e?this.store[e]:{...this.store,isShowTestnet:!0})),this.setPreferencePartials=e=>{Object.keys(e).forEach((t=>{if(t in this.store)this.store[t]=e[t];else{const e=`Preference key ${t} not found`;if(w.env.DEBUG)throw new Error(e);console.error(e)}}))},this.getTokenApprovalChain=e=>{const t=e.toLowerCase();return this.store.tokenApprovalChain[t]||d.h.ETH},this.setTokenApprovalChain=(e,t)=>{const s=e.toLowerCase();this.store.tokenApprovalChain={...this.store.tokenApprovalChain,[s]:t}},this.getNFTApprovalChain=e=>{const t=e.toLowerCase();return this.store.nftApprovalChain[t]||d.h.ETH},this.setNFTApprovalChain=(e,t)=>{const s=e.toLowerCase();this.store.nftApprovalChain={...this.store.nftApprovalChain,[s]:t}},this.getLastTimeSendToken=e=>{const t=e.toLowerCase();return this.store.lastTimeSendToken[t]},this.setLastTimeSendToken=(e,t)=>{const s=e.toLowerCase();this.store.lastTimeSendToken={...this.store.lastTimeSendToken,[s]:t}},this.getLastSelectedSwapPayToken=e=>{const t=e.toLowerCase();return this.store.lastSelectedSwapPayToken?.[t]},this.setLastSelectedSwapPayToken=(e,t)=>{const s=e.toLowerCase();this.store.lastSelectedSwapPayToken={...this.store.lastSelectedSwapPayToken,[s]:t}},this.getLastSelectedGasTopUpChain=e=>{const t=e.toLowerCase();return this.store.lastSelectedGasTopUpChain?.[t]},this.setLastSelectedGasTopUpChain=(e,t)=>{const s=e.toLowerCase();this.store.lastSelectedGasTopUpChain={...this.store.lastSelectedGasTopUpChain,[s]:t}},this.setIsDefaultWallet=e=>{this.store.isDefaultWallet=e,i.Z.emit(d.FP.broadcastToUI,{method:"isDefaultWalletChanged",params:e})},this.getIsDefaultWallet=e=>(!e||!c.Pv.getSite(e)?.preferMetamask)&&this.store.isDefaultWallet,this.getHasOtherProvider=()=>this.hasOtherProvider,this.setHasOtherProvider=e=>{this.hasOtherProvider=e},this.getAcceptLanguages=async()=>{let e=await u().i18n.getAcceptLanguages();return e||(e=[]),e.map((e=>e.replace(/-/g,"_"))).filter((e=>d.ih.find((t=>t.code===e))))},this.getHiddenAddresses=()=>[],this.hideAddress=(e,t,s)=>{this.store.hiddenAddresses=[...this.store.hiddenAddresses,{type:e,address:t,brandName:s}],e===this.store.currentAccount?.type&&t===this.store.currentAccount.address&&s===this.store.currentAccount.brandName&&this.resetCurrentAccount()},this.resetCurrentAccount=async()=>{const[e]=await c.fh.getAllVisibleAccountsArray();this.setCurrentAccount(e)},this.showAddress=(e,t)=>{this.store.hiddenAddresses=this.store.hiddenAddresses.filter((s=>s.type!==e||s.address!==t))},this.getCurrentAccount=()=>{const e=r()(this.store.currentAccount);return e?{...e,address:e.address.toLowerCase()}:e},this.setCurrentAccount=e=>{this.store.currentAccount=e,e&&(c.Fc.broadcastEvent("accountsChanged",[e.address.toLowerCase()]),(0,g.Y)("accountsChanged",e))},this.setPopupOpen=e=>{this.popupOpen=e},this.getPopupOpen=()=>this.popupOpen,this.updateTestnetAddressBalance=(e,t)=>{const s=this.store.testnetBalanceMap||{};this.store.testnetBalanceMap={...s,[e.toLowerCase()]:t}},this.removeTestnetAddressBalance=e=>{const t=e.toLowerCase();if(t in this.store.testnetBalanceMap){const e=this.store.testnetBalanceMap;delete e[t],this.store.testnetBalanceMap=e}},this.removeAddressBalance=e=>{const t=e.toLowerCase();if(t in this.store.balanceMap){const e=this.store.balanceMap;delete e[t],this.store.balanceMap=e}},this.updateBalanceAboutCache=(e,t)=>{const s=e.toLowerCase();if(t.totalBalance){const e=this.store.balanceMap||{};this.store.balanceMap={...e,[s]:t.totalBalance}}if(t.curvePoints){const e=this.store.curvePointsMap||{};this.store.curvePointsMap={...e,[s]:t.curvePoints}}},this.getBalanceAboutCacheByAddress=e=>{const t=e.toLowerCase(),s=this.store.balanceMap||{},a=this.store.curvePointsMap||{};return{totalBalance:s[t]||null,curvePoints:a[t]||null}},this.getBalanceAboutCacheMap=()=>({balanceMap:this.store.balanceMap||{},curvePointsMap:this.store.curvePointsMap||{}}),this.removeCurvePoints=e=>{const t=e.toLowerCase();if(t in this.store.curvePointsMap){const e=this.store.curvePointsMap;delete e[t],this.store.curvePointsMap=e}},this.getExternalLinkAck=()=>this.store.externalLinkAck,this.setExternalLinkAck=(e=!1)=>{this.store.externalLinkAck=e},this.getLocale=()=>this.store.locale,this.setLocale=e=>{this.store.locale=e,c.ag.changeLanguage(e)},this.getThemeMode=()=>this.store.themeMode,this.setThemeMode=e=>{this.store.themeMode=e},this.isReserveGasOnSendToken=()=>this.store.reserveGasOnSendToken,this.getHighlightedAddresses=()=>(this.store.highligtedAddresses||[]).filter((e=>!!e.brandName&&!!e.address)),this.updateHighlightedAddresses=e=>{this.store.highligtedAddresses=e},this.removeHighlightedAddress=e=>{this.store.highligtedAddresses=this.store.highligtedAddresses.filter((t=>!((0,o.Wr)(t.address,e.address)&&t.brandName===e.brandName)))},this.getWalletSavedList=()=>this.store.walletSavedList||[],this.updateWalletSavedList=e=>{this.store.walletSavedList=e},this.getInitAlianNameStatus=()=>this.store.initAlianNames,this.changeInitAlianNameStatus=()=>{this.store.initAlianNames=!0},this.getLastTimeGasSelection=e=>{const t=this.store.gasCache[e];return t&&"gasPrice"===t.lastTimeSelect?Date.now()<=(t.expireAt||0)?t:t.gasLevel?{lastTimeSelect:"gasLevel",gasLevel:t.gasLevel}:null:t},this.updateLastTimeGasSelection=(e,t)=>{"gasPrice"===t.lastTimeSelect?this.store.gasCache={...this.store.gasCache,[e]:{...this.store.gasCache[e],...t,expireAt:Date.now()+36e5}}:this.store.gasCache={...this.store.gasCache,[e]:{...this.store.gasCache[e],...t}}},this.getIsFirstOpen=()=>((!this.store.currentVersion||p()(f,this.store.currentVersion)>0)&&(this.store.currentVersion=f,this.store.firstOpen=!0),this.store.firstOpen),this.updateIsFirstOpen=()=>{this.store.firstOpen=!1},this.getSavedChains=()=>this.store.pinnedChain,this.saveChain=e=>{this.store.pinnedChain=[...this.store.pinnedChain,e]},this.updateChain=e=>this.store.pinnedChain=e,this.getAddedToken=e=>{const t=e.toLowerCase();return this.store.addedToken[t]||[]},this.updateAddedToken=(e,t)=>{const s=e.toLowerCase();this.store.addedToken[s]=t},this.getCustomizedToken=()=>this.store.customizedToken||[],this.hasCustomizedToken=e=>!!this.store.customizedToken?.find((t=>(0,o.Wr)(t.address,e.address)&&t.chain===e.chain)),this.addCustomizedToken=e=>{if(this.hasCustomizedToken(e))throw new Error("Token already added");this.store.customizedToken=[...this.store.customizedToken||[],e]},this.removeCustomizedToken=e=>{this.store.customizedToken=this.store.customizedToken?.filter((t=>!((0,o.Wr)(t.address,e.address)&&t.chain===e.chain)))},this.getBlockedToken=()=>this.store.blockedToken||[],this.addBlockedToken=e=>{this.store.blockedToken?.find((t=>(0,o.Wr)(t.address,e.address)&&t.chain===e.chain))||(this.store.blockedToken=[...this.store.blockedToken||[],e])},this.removeBlockedToken=e=>{this.store.blockedToken=this.store.blockedToken?.filter((t=>!((0,o.Wr)(t.address,e.address)&&t.chain===e.chain)))},this.getCollectionStarred=()=>this.store.collectionStarred||[],this.addCollectionStarred=e=>{this.store.collectionStarred?.find((t=>(0,o.Wr)(t.address,e.address)&&t.chain===e.chain))||(this.store.collectionStarred=[...this.store.collectionStarred||[],e])},this.removeCollectionStarred=e=>{this.store.collectionStarred=this.store.collectionStarred?.filter((t=>!((0,o.Wr)(t.address,e.address)&&t.chain===e.chain)))},this.getSendLogTime=()=>this.store.sendLogTime||0,this.updateSendLogTime=e=>{this.store.sendLogTime=e},this.getSendEnableTime=()=>this.store.sendEnableTime||0,this.updateSendEnableTime=e=>{this.store.sendEnableTime=e},this.getNeedSwitchWalletCheck=()=>null==this.store.needSwitchWalletCheck||this.store.needSwitchWalletCheck,this.updateNeedSwitchWalletCheck=e=>{this.store.needSwitchWalletCheck=e},this.setAutoLockTime=e=>{this.store.autoLockTime=e},this.setHiddenBalance=e=>{this.store.hiddenBalance=e},this.getIsShowTestnet=()=>!0,this.setIsShowTestnet=e=>{this.store.isShowTestnet=e},this.saveCurrentCoboSafeAddress=async()=>{this.currentCoboSafeAddress=await this.getCurrentAccount()},this.resetCurrentCoboSafeAddress=async()=>{this.setCurrentAccount(this.currentCoboSafeAddress??null)},this.resetAddressSortStoreExpiredValue=()=>{(!this.store.addressSortStore.lastCurrentRecordTime||this.store.addressSortStore.lastCurrentRecordTime&&m()().isAfter(m().unix(this.store.addressSortStore.lastCurrentRecordTime).add(15,"minute")))&&(this.store.addressSortStore={...this.store.addressSortStore,search:"",lastScrollOffset:void 0,lastCurrentRecordTime:void 0})},this.getAddressSortStoreValue=e=>(["search","lastScrollOffset"].includes(e)&&this.resetAddressSortStoreExpiredValue(),this.store.addressSortStore[e]),this.setAddressSortStoreValue=(e,t)=>{["search","lastCurrent"].includes(e)&&(this.store.addressSortStore={...this.store.addressSortStore,lastCurrentRecordTime:m()().unix()}),this.store.addressSortStore={...this.store.addressSortStore,[e]:t}},this.setIsHideEcologyNoticeDict=e=>{this.store.isHideEcologyNoticeDict=e}}}const S=new C;a()}catch(e){a(e)}}))},152839:(e,t,s)=>{"use strict";s.d(t,{Z:()=>n});var a=s(330122);const n=new class{constructor(){this.store={signatures:{},redirect2Points:!1},this.init=async()=>{const e=await(0,a.D0)({name:"RabbyPoints",template:{signatures:{},redirect2Points:!1}});this.store=e||this.store},this.setRedirect2Points=e=>{this.store.redirect2Points=e},this.setSignature=(e,t)=>{this.store.signatures={...this.store.signatures,[e.toLowerCase()]:t}},this.getSignature=e=>this.store.signatures[e.toLowerCase()],this.clearSignatureByAddr=e=>{delete this.store.signatures[e],this.store.signatures={...this.store.signatures}},this.clearSignature=()=>{this.store.signatures={}}}}},762158:(e,t,s)=>{"use strict";s.d(t,{Z:()=>c});var a=s(330122),n=s(969007),r=s(273392);const i=4294967295;let o=Math.floor(Math.random()*i);const c=new class{constructor(){this.store={customRPC:{}},this.rpcStatus={},this.init=async()=>{const e=await(0,a.D0)({name:"rpc",template:{customRPC:{}}});this.store=e||this.store;{let e=!1;Object.keys({...this.store.customRPC}).forEach((t=>{(0,n.Xj)(t)||(e=!0,delete this.store.customRPC[t])})),e&&(this.store.customRPC={...this.store.customRPC})}},this.hasCustomRPC=e=>this.store.customRPC[e]&&this.store.customRPC[e].enable,this.getRPCByChain=e=>this.store.customRPC[e],this.getAllRPC=()=>this.store.customRPC,this.setRPC=(e,t)=>{const s=this.store.customRPC[e]?{...this.store.customRPC[e],url:t}:{url:t,enable:!0};this.store.customRPC={...this.store.customRPC,[e]:s},this.rpcStatus[e]&&delete this.rpcStatus[e]},this.setRPCEnable=(e,t)=>{this.store.customRPC={...this.store.customRPC,[e]:{...this.store.customRPC[e],enable:t}}},this.removeCustomRPC=e=>{const t=this.store.customRPC;delete t[e],this.store.customRPC=t,this.rpcStatus[e]&&delete this.rpcStatus[e]},this.requestCustomRPC=async(e,t,s)=>{const a=this.store.customRPC[e]?.url;if(!a)throw new Error(`No customRPC set for ${e}`);return this.request(a,t,s)},this.request=async(e,t,s,a=5e3)=>{const{data:n}=await r.d.post(e,{jsonrpc:"2.0",id:(o=(o+1)%i,o),params:s,method:t},{timeout:a});if(n?.error)throw n.error;return n?.result?n.result:n},this.ping=async e=>{if(this.rpcStatus[e]?.expireAt>Date.now())return this.rpcStatus[e].available;const t=this.store.customRPC[e]?.url;if(!t)return!1;try{return await this.request(t,"eth_blockNumber",[],2e3),this.rpcStatus={...this.rpcStatus,[e]:{...this.rpcStatus[e],expireAt:Date.now()+6e4,available:!0}},!0}catch(t){return this.rpcStatus={...this.rpcStatus,[e]:{...this.rpcStatus[e],expireAt:Date.now()+6e4,available:!1}},!1}}}}},446590:(e,t,s)=>{"use strict";s.d(t,{Z:()=>o});var a=s(572212),n=s(60318),r=s(330122),i=s(652449);const o=new class{constructor(){this.store={userData:{originBlacklist:[],originWhitelist:[],contractBlacklist:[],contractWhitelist:[],addressBlacklist:[],addressWhitelist:[]},rules:[]},this.rules=[],this.engine=null,this.init=async()=>{const e=await(0,r.D0)({name:"securityEngine",template:{userData:{originBlacklist:[],originWhitelist:[],contractBlacklist:[],contractWhitelist:[],addressBlacklist:[],addressWhitelist:[]},rules:(t=a.I,t.map((e=>({id:e.id,enable:e.enable,customThreshold:e.customThreshold}))))}});var t;this.rules=a.I,this.store=e||this.store,this.store.rules=this.rules,this.store.userData.contractBlacklist||(this.store.userData={...this.store.userData,contractBlacklist:[]}),this.store.userData.contractWhitelist||(this.store.userData={...this.store.userData,contractWhitelist:[]}),this.store.userData.addressBlacklist||(this.store.userData={...this.store.userData,addressBlacklist:[]}),this.store.userData.addressWhitelist||(this.store.userData={...this.store.userData,addressWhitelist:[]}),this.engine=new n.Z(this.rules,i.Z)},this.execute=async e=>{if(!this.engine)throw new Error("Security Engine not init");return await this.engine.run({...e,userData:this.store.userData})},this.getRules=()=>this.rules,this.getUserData=()=>this.store.userData,this.updateUserData=e=>{this.store.userData=e},this.getOriginWhitelist=()=>this.store.userData.originWhitelist,this.addOriginWhitelist=e=>{this.store.userData.originWhitelist.includes(e)||(this.store.userData={...this.store.userData,originWhitelist:[...this.store.userData.originWhitelist,e.toLowerCase()]})},this.removeOriginWhitelist=e=>{this.store.userData.originWhitelist.includes(e.toLowerCase())&&(this.store.userData={...this.store.userData,originWhitelist:this.store.userData.originWhitelist.filter((t=>t.toLowerCase()!==e.toLowerCase()))})},this.getOriginBlacklist=()=>this.store.userData.originBlacklist,this.addContractBlacklist=e=>{this.store.userData.contractBlacklist.find((t=>(0,r.Wr)(e.address,t.address)&&e.chainId===t.chainId))||(this.store.userData={...this.store.userData,contractBlacklist:[...this.store.userData.contractBlacklist,{...e,address:e.address.toLowerCase()}]})},this.addContractWhitelist=e=>{this.store.userData.contractWhitelist.find((t=>(0,r.Wr)(e.address,t.address)&&e.chainId===t.chainId))||(this.store.userData={...this.store.userData,contractWhitelist:[...this.store.userData.contractWhitelist,{...e,address:e.address.toLowerCase()}]})},this.removeContractWhitelist=e=>{this.store.userData.contractWhitelist.find((t=>(0,r.Wr)(e.address,t.address)&&e.chainId===t.chainId))&&(this.store.userData={...this.store.userData,contractWhitelist:this.store.userData.contractWhitelist.filter((t=>!((0,r.Wr)(t.address,e.address)&&t.chainId===e.chainId)))})},this.removeContractBlacklistFromAllChains=e=>{this.store.userData.contractBlacklist.find((t=>(0,r.Wr)(e.address,t.address)))&&(this.store.userData={...this.store.userData,contractBlacklist:this.store.userData.contractBlacklist.filter((t=>!(0,r.Wr)(t.address,e.address)))})},this.removeContractBlacklist=e=>{this.store.userData.contractBlacklist.find((t=>(0,r.Wr)(e.address,t.address)&&e.chainId===t.chainId))&&(this.store.userData={...this.store.userData,contractBlacklist:this.store.userData.contractBlacklist.filter((t=>!((0,r.Wr)(t.address,e.address)&&t.chainId===e.chainId)))})},this.addAddressWhitelist=e=>{this.store.userData.addressWhitelist.includes(e)||(this.store.userData={...this.store.userData,addressWhitelist:[...this.store.userData.addressWhitelist,e.toLowerCase()]})},this.removeAddressWhitelist=e=>{this.store.userData.addressWhitelist.includes(e.toLowerCase())&&(this.store.userData={...this.store.userData,addressWhitelist:this.store.userData.addressWhitelist.filter((t=>t.toLowerCase()!==e.toLowerCase()))})},this.addAddressBlacklist=e=>{this.store.userData.addressBlacklist.includes(e)||(this.store.userData={...this.store.userData,addressBlacklist:[...this.store.userData.addressBlacklist,e.toLowerCase()]})},this.removeAddressBlacklist=e=>{this.store.userData.addressBlacklist.includes(e.toLowerCase())&&(this.store.userData={...this.store.userData,addressBlacklist:this.store.userData.addressBlacklist.filter((t=>t.toLowerCase()!==e.toLowerCase()))})},this.addOriginBlacklist=e=>{this.store.userData.originBlacklist.includes(e)||(this.store.userData={...this.store.userData,originBlacklist:[...this.store.userData.originBlacklist,e.toLowerCase()]})},this.removeOriginBlacklist=e=>{this.store.userData.originBlacklist.includes(e.toLowerCase())&&(this.store.userData={...this.store.userData,originBlacklist:this.store.userData.originBlacklist.filter((t=>t.toLowerCase()!==e.toLowerCase()))})},this.enableRule=e=>{this.store.rules=this.store.rules.map((t=>t.id===e?{...t,enable:!0}:t)),this.reloadRules(this.store.rules)},this.disableRule=e=>{this.store.rules=this.store.rules.map((t=>t.id===e?{...t,enable:!1}:t)),this.reloadRules(this.store.rules)},this.reloadRules=e=>{this.rules=function(e,t){return e.map((e=>{const s=t.find((t=>t.id===e.id));return s?{...e,enable:s.enable,customThreshold:s.customThreshold}:e}))}(a.I,e),this.engine?.reloadRules(this.rules)}}}},749518:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>g});var n=s(737820),r=e([n]);n=(r.then?(await r)():r)[0];class i{pushMessage(e,t){this.pms.forEach((s=>{s.send("message",{event:e,data:t})}))}constructor(e){this.origin="",this.icon="",this.name="",this.pms=[],e&&this.setProp(e)}setPortMessage(e){this.pms.push(e)}setProp({origin:e,icon:t,name:s}){this.origin=e,this.icon=t,this.name=s}}const o=new Map,c=e=>o.get(e),d=(e,t)=>o.has(`${e}-${t}`)?c(`${e}-${t}`):h(`${e}-${t}`,null),h=(e,t)=>{const s=new i(t);return o.set(e,s),s},u=e=>{for(const t of o.keys()){const[s]=t.split("-");s===e.toString()&&l(t)}},l=e=>{o.delete(e)},p=(e,t,s)=>{let a=[];o.forEach(((e,t)=>{e&&n.Pv.hasPermission(e.origin)&&a.push({key:t,data:e})})),s&&(a=a.filter((e=>e.data.origin===s))),a.forEach((s=>{try{s.data.pushMessage?.(e,t)}catch(e){o.has(s.key)&&l(s.key)}}))},g={getSessionMap:()=>o,getSession:c,getOrCreateSession:d,deleteSession:l,deleteSessionsByTabId:u,broadcastEvent:p};a()}catch(e){a(e)}}))},852130:(e,t,s)=>{"use strict";s.d(t,{Z:()=>o});var a=s(330122),n=s(905368),r=s(496486),i=s(177447);const o=new class{constructor(){this.store={history:{}},this._txHistoryLimit=100,this.init=async()=>{const e=await(0,a.D0)({name:"signTextHistory",template:{history:{}}});this.store=e||this.store},this.createHistory=({address:e,origin:t,text:s,type:a})=>{let r=n.Z.getConnectedSite(t);if(t===i.NI&&(r={origin:i.NI,icon:"",name:"Rabby Wallet",chain:i.h.ETH,isSigned:!1,isTop:!1,isConnected:!0}),!r)return;const o=this.store.history[e.toLowerCase()]||[];this.store.history={...this.store.history,[e.toLowerCase()]:[...o,{site:r,createAt:Date.now(),text:"string"==typeof s?s:JSON.stringify(s),type:a}]},this.clearAllExpiredHistory()},this.getHistory=e=>(this.store.history[e.toLowerCase()]||[]).sort(((e,t)=>e.createAt-t.createAt>0?-1:1)),this.removeList=e=>{delete this.store.history[e.toLowerCase()]},this.clearAllExpiredHistory=()=>{const e=[];Object.entries(this.store.history).forEach((([t,s])=>{e.push(...s.map((e=>({address:t,data:e}))))}));(0,r.sortBy)(e,(e=>e.data.createAt)).reverse().slice(this._txHistoryLimit).forEach((({address:e,data:t})=>{const s=this.store.history[e];if(!s)return;const a=s.findIndex((e=>e===t));-1!==a&&s.splice(a,1)})),this.store.history={...this.store.history}}}}},54485:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>h});var n=s(360493),r=s(330122),i=s(737820),o=s(539666),c=e([i]);i=(c.then?(await c)():c)[0];class d{constructor(){this.store={gasPriceCache:{},selectedChain:null,selectedFromToken:void 0,selectedToToken:void 0,selectedDex:null,unlimitedAllowance:!1,viewList:{},tradeList:{},sortIncludeGasFee:!1,preferMEVGuarded:!1,autoSlippage:!0,slippage:"0.1",recentToTokens:[]},this.init=async()=>{const e=await(0,r.D0)({name:"swap",template:{gasPriceCache:{},selectedChain:null,selectedDex:null,unlimitedAllowance:!1,viewList:{},tradeList:{},preferMEVGuarded:!1,sortIncludeGasFee:!0,autoSlippage:!0,slippage:"0.1",recentToTokens:[]}});if(e){const t=Object.values(n.Wq);e.selectedDex&&!t.includes(e.selectedDex)&&(e.selectedDex=null)}this.store=e||this.store},this.getSwap=e=>e?this.store[e]:this.store,this.getLastTimeGasSelection=e=>{const t=this.store.gasPriceCache[e];return t&&"gasPrice"===t.lastTimeSelect?Date.now()<=(t.expireAt||0)?t:t.gasLevel?{lastTimeSelect:"gasLevel",gasLevel:t.gasLevel}:null:t},this.updateLastTimeGasSelection=(e,t)=>{"gasPrice"===t.lastTimeSelect?this.store.gasPriceCache={...this.store.gasPriceCache,[e]:{...this.store.gasPriceCache[e],...t,expireAt:Date.now()+36e5}}:this.store.gasPriceCache={...this.store.gasPriceCache,[e]:{...this.store.gasPriceCache[e],...t}}},this.getSelectedDex=()=>this.store.selectedDex,this.setSelectedDex=e=>{this.store.selectedDex=e},this.getSelectedChain=()=>this.store.selectedChain,this.setSelectedChain=e=>{this.store.selectedChain=e},this.getSelectedFromToken=()=>this.store.selectedFromToken,this.getSelectedToToken=()=>this.store.selectedToToken,this.setSelectedFromToken=e=>{this.store.selectedFromToken=e},this.setSelectedToToken=e=>{this.store.selectedToToken=e},this.getUnlimitedAllowance=()=>this.store.unlimitedAllowance,this.setUnlimitedAllowance=e=>{this.store.unlimitedAllowance=e},this.getSwapViewList=()=>this.store.viewList,this.setSwapView=(e,t)=>{this.store.viewList||(this.store.viewList={}),this.store.viewList={...this.store.viewList,[e]:t}},this.getSwapTradeList=()=>this.store.tradeList,this.setSwapTrade=(e,t)=>{this.store.tradeList||(this.store.tradeList={}),this.store.tradeList={...this.store.tradeList,[e]:t}},this.getSwapSortIncludeGasFee=()=>this.store.sortIncludeGasFee??!0,this.setSwapSortIncludeGasFee=e=>{this.store.sortIncludeGasFee=e},this.txQuotes={},this.addTx=(e,t,s)=>{this.txQuotes[`${e}-${t}`]=s},this.postSwap=(e,t,s)=>{const{postSwap:a}=i.hs,{txQuotes:n}=this,r=`${e}-${s.data}`,c=n[r];if(c)return delete n[r],a({...c,tx:s,tx_id:t}).catch((e=>{o.Tb(`postSwap error: ${JSON.stringify(e)}| ${JSON.stringify(c)}`)}))},this.getSwapPreferMEVGuarded=()=>this.store.preferMEVGuarded??!1,this.setSwapPreferMEVGuarded=e=>{this.store.preferMEVGuarded=e},this.setAutoSlippage=e=>{this.store.autoSlippage=e},this.setIsCustomSlippage=e=>{this.store.isCustomSlippage=e},this.setSlippage=e=>{this.store.slippage=e},this.getRecentSwapToTokens=()=>this.store.recentToTokens||[],this.setRecentSwapToToken=e=>{const t=this.store.recentToTokens||[];this.store.recentToTokens=[e,...t.filter((t=>t.id!==e.id||t.chain!==e.chain))].slice(0,5)}}}const h=new d;a()}catch(e){a(e)}}))},961096:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{d:()=>g});var n=s(969007),r=s(171417),i=s(693150),o=s.n(i),c=s(542161),d=s(273392),h=s(737820),u=s(734155),l=e([h]);h=(l.then?(await l)():l)[0];class p{constructor(){this.timer=null,this.syncMainnetChainList=async()=>{try{const e=(u.env.DEBUG?await h.hs.getSupportedChains():await d.d.get("https://static.debank.com/supported_chains.json").then((e=>e.data))).filter((e=>!e.is_disabled)).map((e=>(0,n.t8)(e)));(0,n.Vm)({mainnetList:e}),o().storage.local.set({rabbyMainnetChainList:e})}catch(e){console.error("fetch chain list error: ",e)}},this.resetTimer=()=>{this.timer?clearInterval(this.timer):r.AU&&o().alarms.clear(c.G),r.AU?(o().alarms.create(c.G,{delayInMinutes:60,periodInMinutes:60}),o().alarms.onAlarm.addListener((e=>{e.name===c.G&&this.syncMainnetChainList()}))):this.timer=setInterval((()=>{this.syncMainnetChainList()}),36e5)},this.roll=()=>{this.resetTimer()}}}const g=new p;a()}catch(e){a(e)}}))},427552:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{d:()=>y});var n=s(969007),r=s(737820),i=s(330122),o=s(98254),c=s.n(o),d=s(496486),h=s(764289),u=s(478051),l=s(177447),p=e([r,h]);[r,h]=p.then?(await p)():p;class g{constructor(){this.timers={},this.init=async()=>{this.store=await(0,i.D0)({name:"transactionBroadcastWatcher",template:{pendingTx:{}}})},this.addTx=(e,t)=>{this.store.pendingTx={...this.store.pendingTx,[e]:t}},this.updateTx=(e,t)=>{const s=this.store.pendingTx[e];s&&(Object.assign(s,t),this.store.pendingTx={...this.store.pendingTx,[e]:s})},this.queryTxRequests=async()=>{const e=Object.values(this.store.pendingTx);if(e.length<=0)return;const{testnetList:t,mainnetList:s}=e.reduce(((e,t)=>{const s=(0,n.lY)(t.chainId);return s?.isTestnet?e.testnetList.push(t):e.mainnetList.push(t),e}),{testnetList:[],mainnetList:[]}),a=await Promise.all([[],s?.length?r.hs.getTxRequests(s.map((e=>e.reqId))).catch((()=>[])):[]]),i=[];(0,d.flatten)(a).forEach((e=>{if((e.is_finished||e.is_withdraw||"failed"===e.push_status&&e.is_finished||e.tx_id)&&(this.removeTx(e.id),h.Z.updateTxByTxRequest(e),i.push(e.signed_tx.from),e.tx_id)){const t=(0,n.lY)(e.signed_tx.chainId);t&&(r.wj.postSwap(t?.enum,e.tx_id,e.signed_tx),r.zn.postBridge(t?.enum,e.tx_id,e.signed_tx))}if(e.tx_id){const t=(0,n.lY)(e.signed_tx.chainId);if(!t)return void console.error("chain not found");r.Hx.addTx(`${e.signed_tx.from}_${e.signed_tx.nonce}_${t.enum}`,{nonce:e.signed_tx.nonce,hash:e.tx_id,chain:t.enum})}i.length&&u.Z.emit(l.FP.broadcastToUI,{method:l.FP.RELOAD_TX,params:{addressList:i}})}))},this.removeTx=e=>{const t={...this.store.pendingTx};delete t[e],this.store.pendingTx={...t}},this.roll=()=>{c()((async()=>{this.queryTxRequests()}),5e3)},this.clearPendingTx=(e,t)=>{this.store.pendingTx=Object.entries(this.store.pendingTx).reduce(((s,[a,n])=>{if(!n)return s;const r=(0,i.Wr)(e,n.address);return(t?+t===n.chainId&&r:r)||n&&(s[a]=n),s}),{})}}}const y=new g;a()}catch(e){a(e)}}))},764289:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>v});var n=s(330122),r=s(84753),i=s.n(r),o=s(150361),c=s.n(o),d=s(652449),h=s(177447),u=s(625399),l=s(905368),p=s(53416),g=s(969007),y=s(350792),m=s(496486),w=s(373180),T=s(478051),f=s(638591),A=s(737820),C=e([f,A]);[f,A]=C.then?(await C)():C;class S{constructor(){this._signingTxList=[],this._availableTxs={},this._txHistoryLimit=100,this.updateTxByTxRequest=e=>{const{chainId:t,from:s}=e.signed_tx,a=`${t}-${e.nonce}`,n=s.toLowerCase(),r=this.store.transactions[n][a];if(!this.store.transactions[n]||!r)return;const i=r.txs.find((t=>t.reqId&&t.reqId===e.id));if(!i)return;const o="failed"===e.push_status&&e.is_finished;this.updateSingleTx({...i,hash:e.tx_id||void 0,isWithdrawed:e.is_withdraw||e.is_finished&&!e.tx_id&&!e.push_status,isSubmitFailed:o});const c=this.store.transactions[s][a];(0,w.gi)(c.txs).isSubmitFailed&&(c.isSubmitFailed=o,this._setStoreTransaction({...this.store.transactions,[s]:{...this.store.transactions[s],[a]:c}}))},this.reloadTxRequest=async({address:e,chainId:t,nonce:s})=>{const a=`${t}-${s}`,n=e.toLowerCase(),r=this.store.transactions[n][a];(0,g.Ed)({id:t});if(!r)return;const{txs:i}=r,o=i.filter((e=>e&&e.reqId&&!e.hash&&!e.isSubmitFailed&&!e.isWithdrawed));o.length&&await d.Z.getTxRequests(o.map((e=>e.reqId))).then((t=>{t.forEach(((t,s)=>{this.updateTxByTxRequest(t),T.Z.emit(h.FP.broadcastToUI,{method:h.FP.RELOAD_TX,params:{addressList:[e]}})}))})).catch((e=>console.error(e)))},this.quickCancelTx=async({address:e,chainId:t,nonce:s,reqId:a})=>{const n=(0,g.lY)(t),r=n?.isTestnet?d.d:d.Z;let i=null;try{await r.withdrawTx(a)}catch(e){i=e}if(this.reloadTxRequest({address:e,chainId:t,nonce:s}),i)throw i},this.retryPushTx=async({address:e,chainId:t,nonce:s,reqId:a})=>{const n=(0,g.lY)(t),r=n?.isTestnet?d.d:d.Z;try{await r.retryPushTx(a),this.reloadTxRequest({address:e,chainId:t,nonce:s})}catch(a){throw this.reloadTxRequest({address:e,chainId:t,nonce:s}),a}},this.getTxGroup=({address:e,chainId:t,nonce:s})=>{const a=`${t}-${s}`,n=e.toLowerCase(),r=this.store.transactions[n][a];return r||null}}addSigningTx(e){A.iv.setTx();const t=(0,p.x0)();return this._signingTxList.push({rawTx:e,id:t}),t}getSigningTx(e){return this._signingTxList.find((t=>t.id===e))}removeSigningTx(e){this._signingTxList=this._signingTxList.filter((t=>t.id!==e))}removeAllSigningTx(){this._signingTxList=[]}updateSigningTx(e,t){const s=this._signingTxList.find((t=>t.id===e));s&&(s.rawTx={...s.rawTx,...t.rawTx},(s.explain||t.explain)&&(s.explain={...s.explain,...t.explain}),t.action&&(s.action=t.action),s.isSubmitted=t.isSubmitted)}async init(){this.store=await(0,n.D0)({name:"txHistory",template:{transactions:{}}}),this.store.transactions||(this.store.transactions={}),this._populateAvailableTxs()}_populateAvailableTxs(){const{actualTxs:e}=this.filterOutTxDataOnBootstrap();this._availableTxs=e}_setStoreTransaction(e){this.store.transactions=e,this._populateAvailableTxs()}filterOutTxDataOnBootstrap(){const e={},t=c()({...this.store.transactions}),s=[];return Object.entries({...t}).forEach((([t,s])=>{const a={...e[t]};let n=!1;Object.entries(s).forEach((([e,t])=>{(0,g.lY)(t.chainId)||(n=!0,a[e]=t,delete s[e])})),n&&(e[t]=a)})),Object.entries(e).forEach((([e,t])=>{Object.values(t).forEach((t=>{const a=t.txs.find((e=>e.site?.chain))?.site?.chain;a&&s.push((0,y.vp)(e,t.nonce,a))}))})),{actualTxs:t,deprecatedTransactions:e,pendingTxIdsToRemove:s}}getPendingCount(e){const t=e.toLowerCase();return Object.values(this._availableTxs[t]||{}).filter((e=>(0,w.RN)(e))).length}getPendingTxsByNonce(e,t,s){const a=e.toLowerCase();return Object.values(this.store.transactions[a]||{}).filter((e=>(0,w.RN)(e))).filter((e=>e.nonce===s&&e.chainId===t))}addSubmitFailedTransaction({tx:e,explain:t,origin:s}){const a=Number(e.rawTx.nonce),n=`${e.rawTx.chainId}-${a}`,r=e.rawTx.from.toLowerCase();if(s===h.NI){const t={origin:h.NI,icon:"",name:"Rabby Wallet",chain:h.h.ETH,isSigned:!1,isTop:!1,isConnected:!0};e.site=t}else{const t=l.Z.getConnectedSite(s);e.site=t}if(t&&(e.explain=t),this.store.transactions[r]||(this.store.transactions[r]={}),this.store.transactions[r][n]){const t=this.store.transactions[r][n];t.txs.push(e),this._setStoreTransaction({...this.store.transactions,[r]:{...this.store.transactions[r],[n]:t}})}else this._setStoreTransaction({...this.store.transactions,[r]:{...this.store.transactions[r],[n]:{chainId:e.rawTx.chainId,nonce:a,txs:[e],createdAt:e.createdAt,isPending:!0,explain:t,isFailed:!1,isSubmitFailed:!0}}})}addTx({tx:e,explain:t,actionData:s,origin:a,$ctx:n,isDropFailed:r=!0}){const i=Number(e.rawTx.nonce),o=`${e.rawTx.chainId}-${i}`,c=e.rawTx.from.toLowerCase();if(a===h.NI){const t={origin:h.NI,icon:"",name:"Rabby Wallet",chain:h.h.ETH,isSigned:!1,isTop:!1,isConnected:!0};e.site=t}else{const t=l.Z.getConnectedSite(a);e.site=t}t&&(e.explain=t),s&&(e.action=s),this.store.transactions[c]||(this.store.transactions[c]={});const d=()=>{this._setStoreTransaction({...this.store.transactions,[c]:{...this.store.transactions[c],[o]:{chainId:e.rawTx.chainId,nonce:i,txs:[e],createdAt:e.createdAt,isPending:!0,explain:t,action:s,isFailed:!1,$ctx:n}}})};if(this.store.transactions[c][o]){const t=this.store.transactions[c][o],s=(0,w.gi)(t.txs),a=t.isSubmitFailed||s?.isWithdrawed;r&&a?d():(t.txs.push(e),t.isSubmitFailed&&(t.isSubmitFailed=!1),this._setStoreTransaction({...this.store.transactions,[c]:{...this.store.transactions[c],[o]:t}}))}else d();this.clearAllExpiredTxs()}updateSingleTx(e){const t=Number(e.rawTx.nonce),s=`${e.rawTx.chainId}-${t}`,a=e.rawTx.from.toLowerCase(),n=this.store.transactions[a][s];if(!this.store.transactions[a]||!n)return;const r=n.txs.findIndex((t=>t.hash&&t.hash===e.hash||t.reqId&&t.reqId===e.reqId));-1!==r&&(n.txs[r]=e,this._setStoreTransaction({...this.store.transactions,[a]:{...this.store.transactions[a],[s]:n}}))}async reloadTx({address:e,chainId:t,nonce:s},a=0){const n=`${t}-${s}`,r=e.toLowerCase(),i=this.store.transactions[r]?.[n],o=(0,g.Ed)({id:t});if(!o)return;if(!i)return;const{txs:c}=i,u=c.filter((e=>e&&e.hash&&!e.isSubmitFailed&&!e.isWithdrawed));try{const n=(await Promise.all(u.map((e=>o.isTestnet?f.j.getTx({chainId:o.id,hash:e.hash}):d.Z.getTx(o.serverId,e.hash,Number(e.rawTx.gasPrice||e.rawTx.maxFeePerGas||0)))))).find((e=>0===e.code&&0!==e.status));if(!n){if(!1!==a&&+a<15e3){const n=Number(a)+1e3;setTimeout((()=>{this.reloadTx({address:e,chainId:t,nonce:s})}),n)}return}const r=c.find((e=>e.hash===n.hash));return this.updateSingleTx({...r,gasUsed:n.gas_used}),this.completeTx({address:e,chainId:t,nonce:s,hash:r.hash,success:1===n.status,reqId:r.reqId}),T.Z.emit(h.FP.broadcastToUI,{method:h.FP.RELOAD_TX,params:{addressList:[e]}}),n.gas_used}catch(n){if(!1!==a&&+a<15e3){const n=Number(a)+1e3;setTimeout((()=>{this.reloadTx({address:e,chainId:t,nonce:s})}),n)}}}async loadPendingListQueue(e){const{pendings:t}=await this.getList(e),s=t.reduce(((e,t)=>{const s=t.chainId;return e[s]||(e[s]=[]),e[s].push(t),e}),{});return await Promise.all(Object.keys(s).map((async t=>{const a=s[Number(t)].reverse();for(const t of a)try{await this.reloadTx({address:e,chainId:t.chainId,nonce:t.nonce},!1)}catch(e){console.error(e)}}))),(await this.getList(e)).pendings}getList(e){const t=Object.values(this._availableTxs[e.toLowerCase()]||{}),s=[],a=[];if(!t)return{pendings:[],completeds:[]};for(let e=0;e<t.length;e++)(0,w.RN)(t[e])?s.push(t[e]):a.push(t[e]);return{pendings:s.sort(((e,t)=>e.chainId===t.chainId?t.nonce-e.nonce:e.chainId-t.chainId)),completeds:a.sort(((e,t)=>t.createdAt-e.createdAt))}}removeList(e){const t=e.toLowerCase();delete this.store.transactions[t],this._setStoreTransaction({...this.store.transactions})}completeTx({address:e,chainId:t,nonce:s,hash:a,success:n=!0,gasUsed:r,reqId:i}){const o=`${t}-${s}`,c=e.toLowerCase(),d=this.store.transactions[c][o];if(!d.isPending)return;d.isPending=!1,d.isFailed=!n;const h=d.txs.findIndex((e=>e.hash&&e.hash===a||e.reqId&&e.reqId===i));-1!==h&&(d.txs[h].isCompleted=!0,d.txs[h].failed=!n,r&&(d.txs[h].gasUsed=r)),this._setStoreTransaction({...this.store.transactions,[c]:{...this.store.transactions[c],[o]:d}});const l=(0,g.Ed)({id:+d.chainId});l&&u.Z.report("completeTransaction",{chainId:l.serverId,success:n,preExecSuccess:!d?.explain||d.explain?.pre_exec.success&&d.explain?.calcSuccess,createdBy:d?.$ctx?.ga?"rabby":"dapp",source:d?.$ctx?.ga?.source||"",trigger:d?.$ctx?.ga?.trigger||"",networkType:l?.isTestnet?"Custom Network":"Integrated Network"}),this.clearBefore({address:e,chainId:t,nonce:s})}clearExpiredTxs(e){const t=e.toLowerCase();if(this.store.transactions[t]){const e=Object.values(this.store.transactions[t]);if(e.length<=20)return;e.sort(((e,t)=>e.createdAt-t.createdAt>0?-1:1)),this.store.transactions[t]=e.slice(0,20).reduce(((e,t)=>({...e,[`${t.chainId}-${t.nonce}`]:t})),{})}}clearAllExpiredTxs(){const e=[];Object.entries(this.store.transactions).map((([t,s])=>{Object.entries(s).map((([s,a])=>{(0,w.RN)(a)||e.push({address:t,key:s,value:a})}))}));const t=(0,m.sortBy)(e,(e=>e.value.createdAt)).reverse().slice(this._txHistoryLimit),s=this.store.transactions;t.forEach((e=>{delete s[e.address][e.key]})),this._setStoreTransaction(s)}clearBefore({address:e,chainId:t,nonce:s}){const a=e.toLowerCase(),n=this.store.transactions[a];for(const e in n){const a=n[e];a.chainId===t&&a.nonce<s&&a.isPending&&delete n[e]}this._setStoreTransaction({...this.store.transactions,[a]:n}),this._populateAvailableTxs()}clearPendingTransactions(e,t){const s=this.store.transactions[e.toLowerCase()];s&&this._setStoreTransaction({...this.store.transactions,[e.toLowerCase()]:Object.values(s).filter((e=>t?!(e.isPending&&+t==+e.chainId):!e.isPending)).reduce(((e,t)=>({...e,[`${t.chainId}-${t.nonce}`]:t})),{})})}getPendingTxByHash(e){for(const t in this.store.transactions){const s=this.store.transactions[t];for(const t in s){const a=s[t];if(a.isPending){const t=a.txs.find((t=>t.hash===e));if(t)return t}}}return null}getNonceByChain(e,t){const s=Object.values(this.store.transactions[e.toLowerCase()]||{}),a=i()(s.filter((e=>{const s=(0,w.gi)(e.txs);return e.chainId===t&&!e.isSubmitFailed&&!s?.isWithdrawed})),(e=>e.nonce)),r=this._signingTxList.find((s=>s.rawTx.chainId===t&&!s.isSubmitted&&(0,n.Wr)(s.rawTx.from,e))),o=this._signingTxList.find((s=>s.rawTx.chainId===t&&s.isSubmitted&&(0,n.Wr)(s.rawTx.from,e)));if(!a)return null;const c=a.nonce,d=parseInt(r?.rawTx.nonce??"0",0)??0,h=parseInt(o?.rawTx.nonce??"0",0)??0,u=Math.max(c,h);return u<d?d:u+1}getSkipedTxs(e){const t=(0,m.groupBy)(Object.values(this.store.transactions[e.toLowerCase()]||{}),(e=>e.chainId));return Object.entries(t).reduce(((e,[t,s])=>{const a=i()(s.filter((e=>{const t=(0,w.gi)(e.txs);return!e.isSubmitFailed&&!t?.isWithdrawed})),(e=>e.nonce))?.nonce||0;return e[t]=(0,m.sortBy)(s.filter((e=>e.nonce<a&&(0,w.gi)(e.txs)?.isWithdrawed)),(e=>-e.nonce)),e}),{})}}const v=new S;a()}catch(e){a(e)}}))},870893:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>w});var n=s(737820),r=s(330122),i=s(144820),o=s(177447),c=s(875864),d=s(478051),h=s(98254),u=s.n(h),l=s(969007),p=s(638591),g=e([n,p]);[n,p]=g.then?(await g)():g;class y{constructor(e,t,s){this.nonce=e,this.hash=t,this.chain=s,this.createdTime=0,this.createdTime=+new Date}}class m{constructor(){this.timers={},this.init=async()=>{this.store=await(0,r.D0)({name:"transactions",template:{pendingTx:{}}})},this.addTx=(e,{hash:t,chain:s,nonce:a})=>{this.store.pendingTx={...this.store.pendingTx,[e]:new y(a,t,s)};const n=(0,l.Xj)(s);if(!n)throw new Error(`[transactionWatcher::addTx] chain ${s} not found`);(0,c.bU)(n.scanLink,t)},this.checkStatus=async e=>{if(!this.store.pendingTx[e])return;const{hash:t,chain:s}=this.store.pendingTx[e],a=(0,l.Ed)({enum:s});return a?a.isTestnet?p.j.getTransactionReceipt({chainId:a.id,hash:t}).catch((()=>null)):n.hs.ethRpc(a.serverId,{method:"eth_getTransactionReceipt",params:[t]}).catch((()=>null)):void 0},this.notify=async(e,t)=>{if(!this.store.pendingTx[e])return;const{hash:s,chain:a,nonce:r}=this.store.pendingTx[e],h=(0,l.Ed)({enum:a});if(!h)throw new Error(`[transactionWatcher::notify] chain ${a} not found`);const u=(0,c.bU)(h.scanLink,s),[p]=e.split("_");let g;t&&(g=await n.Lh.reloadTx({address:p,nonce:Number(r),chainId:h.id}));const y="0x1"===t.status?n.ag.t("background.transactionWatcher.completed"):n.ag.t("background.transactionWatcher.failed"),m="0x1"===t.status?n.ag.t("background.transactionWatcher.txCompleteMoreContent",{chain:h.name,nonce:Number(r)}):n.ag.t("background.transactionWatcher.txFailedMoreContent",{chain:h.name,nonce:Number(r)});i.t6.create(u,y,m,2),d.Z.emit(o.FP.broadcastToUI,{method:o.FP.TX_COMPLETED,params:{address:p,hash:s,gasUsed:g}}),d.Z.emit(o.EK.ON_TX_COMPLETED,{address:p,hash:s,status:t.status})},this.roll=()=>{u()((async()=>{const e=Object.keys(this.store.pendingTx).sort(((e,t)=>{const[s,a,n]=e.split("_"),[r,i,o]=t.split("_"),c=Number(a),d=Number(i);return s!==r?s>r?1:-1:n!==o?n>o?1:-1:c>d?1:-1}));return this._queryList(e)}),5e3)},this._queryList=async e=>{for(const t of e)try{const e=await this.checkStatus(t);e&&(this.notify(t,e),this._removeTx(t))}catch(e){console.error(e)}},this._removeTx=e=>{delete this.timers[e],this.store.pendingTx=Object.entries(this.store.pendingTx).reduce(((t,[s,a])=>(s!==e&&a&&(t[s]=a),t)),{}),this._clearBefore(e)},this.clearPendingTx=(e,t)=>{this.store.pendingTx=Object.entries(this.store.pendingTx).reduce(((s,[a,n])=>{const[i]=a.split("_"),o=(0,l.Xj)(n.chain),c=(0,r.Wr)(e,i);return(t?+t===o?.id&&c:c)||n&&(s[a]=n),s}),{})},this._clearBefore=e=>{const[t,s,a]=e.split("_"),n=Number(s),i={...this.store.pendingTx};for(const e in i){const[s,o,c]=e.split("_");(0,r.Wr)(s,t)&&c===a&&Number(o)<n&&i[e]&&delete i[e]}this.store.pendingTx=i}}}const w=new m;a()}catch(e){a(e)}}))},682395:(e,t,s)=>{"use strict";s.d(t,{Z:()=>a});const a=new class{constructor(){this.count=0,this.increase=(e=1)=>{this.count+=e},this.reset=()=>{this.count=0},this.decrease=(e=1)=>{this.count>=e&&(this.count-=e)}}}},186429:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{Z:()=>u});var n=s(330122),r=s(737820),i=s(177447),o=s(693150),c=s.n(o),d=e([r]);r=(d.then?(await d)():d)[0];class h{constructor(){this.store={imported:!1,tx:!1,wallet:!1,local:!1},this.init=async()=>{const e=await(0,n.D0)({name:"UninstalledMetric",template:{imported:!1,tx:!1,wallet:!1,local:!1}});this.store=e||this.store},this.syncStatus=async()=>{if(!this.store.tx&&r.Lh.store.transactions&&Object.keys(r.Lh.store.transactions).length&&(this.setTx(),this.setImported()),this.store.wallet)return;const e=await r.fh.getAllTypedAccounts();e.length&&e.forEach((e=>{this.setWalletByKeyringType(e.type)}))},this.setImported=()=>{this.store.imported=!0,this.setUninstalled()},this.setWallet=()=>{this.store.wallet=!0,this.setUninstalled()},this.setTx=()=>{this.store.tx=!0,this.setUninstalled()},this.setLocal=()=>{this.store.local=!0,this.setUninstalled()},this.setWalletByKeyringType=e=>{if(this.store.imported&&this.store.wallet&&this.store.local)return;this.setImported();let t=!1,s=!1;t=[i.Cr.PRIVATE_KEY,i.Cr.MNEMONIC].includes(e),s=[...Object.values(i.Cr.HARDWARE)].includes(e),t&&this.setLocal(),(t||s)&&this.setWallet()},this.setUninstalled=()=>{let e="";this.store.imported&&(e="i"),this.store.wallet&&(e+="w"),this.store.tx&&(e+="t"),this.store.local&&(e+="l"),c().runtime.setUninstallURL(`https://rabby.io/uninstalled?r=${encodeURIComponent(e)}`)}}}const u=new h;a()}catch(e){a(e)}}))},162529:(e,t,s)=>{"use strict";s.d(t,{T:()=>r});var a=s(693150),n=s.n(a);const r=new class{constructor(){this.currentTabId=void 0,this.init=()=>{n().tabs.onRemoved.addListener(this.onTabRemoved)},this.isStorageExisted=async()=>Boolean(Object.keys(await n().storage.local.get(null)).filter((e=>!["extensionId","openapi"].includes(e))).length),this.openUserGuide=async()=>{const e=await n().tabs.create({active:!0,url:"./index.html#/new-user/guide"});this.currentTabId=e.id},this.activeUserGuide=async()=>{if(this.currentTabId)try{const e=await n().tabs.get(this.currentTabId);e.url&&0!==e.url.indexOf(n().runtime.getURL("index.html#/new-user/"))?this.openUserGuide():await n().tabs.update(this.currentTabId,{active:!0})}catch(e){this.openUserGuide()}else this.openUserGuide()},this.onTabRemoved=e=>{e===this.currentTabId&&(this.currentTabId=void 0)},this.destroy=()=>{n().tabs.onRemoved.removeListener(this.onTabRemoved),this.currentTabId=void 0}}}},695140:(e,t,s)=>{"use strict";s.d(t,{Z:()=>n});var a=s(330122);const n=new class{constructor(){this.store={enabled:!0,whitelists:[]},this.init=async()=>{const e=await(0,a.D0)({name:"whitelist",template:{enabled:!0,whitelists:[]}});this.store=e||this.store},this.getWhitelist=()=>this.store.whitelists,this.enableWhitelist=()=>{this.store.enabled=!0},this.disableWhiteList=()=>{this.store.enabled=!1},this.setWhitelist=e=>{this.store.whitelists=e.map((e=>e.toLowerCase()))},this.removeWhitelist=e=>{this.store.whitelists.find((t=>(0,a.Wr)(t,e)))&&(this.store.whitelists=this.store.whitelists.filter((t=>!(0,a.Wr)(t,e))))},this.addWhitelist=e=>{e&&(this.store.whitelists.find((t=>(0,a.Wr)(t,e)))||(this.store.whitelists=[...this.store.whitelists,e.toLowerCase()]))},this.isWhitelistEnabled=()=>this.store.enabled,this.isInWhiteList=e=>this.store.whitelists.some((t=>(0,a.Wr)(t,e)))}}},542161:(e,t,s)=>{"use strict";s.d(t,{G:()=>a});const a="ALARMS_SYNC_CHAINS"},172919:(e,t,s)=>{"use strict";s.d(t,{Y:()=>r});var a=s(177447),n=s(478051);function r(e,t){n.Z.emit(a.FP.broadcastToUI,{method:e,params:t})}},836612:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{G:()=>p,Z:()=>y});var n=s(717187),r=s(71523),i=s(693693),o=s(178124),c=s(666935),d=s(177447),h=s(330122),u=s(969007),l=e([r,i,o,c]);[r,i,o,c]=l.then?(await l)():l;class p extends n.EventEmitter{constructor(){super(),this.currentAccount="",this.currentAccountType="",this.currentAccountBrand="",this.chainId=null,this.selectedAddress=null,this.networkVersion=null,this.isRabby=!0,this.isMetaMask=!0,this._isConnected=!0,this._initialized=!0,this._isUnlocked=!0,this._state={accounts:null,isConnected:!0,isUnlocked:!0,initialized:!0,isPermanentlyDisconnected:!1},this._metamask={isUnlocked:()=>new Promise((e=>{e(this._isUnlocked)}))},this.initialize=async()=>{this._initialized=!0,this._state.initialized=!0,this.emit("_initialized")},this.isConnected=()=>!0,this.request=async e=>{const{method:t}=e,s={data:e,session:d.r},a=(0,h.do)(t),n=i.Z.getCurrentAccount(),l=this.chainId||d.zG[d.h.ETH].id.toString(),p=(0,u.Ed)({networkId:l});if(!p)throw new Error("chain not found");if(!r.Z[a]&&(t.startsWith("eth_")||"net_version"===t))return r.Z.ethRpc(s,p.serverId);switch(e.method){case"eth_accounts":case"eth_requestAccounts":return[this.currentAccount];case"personal_sign":return new Promise(((e,t)=>{o.Z.on("resolve",(t=>{t.uiRequestComponent||e(t)})),o.Z.on("reject",(e=>{t(e)}))}));case"eth_sendTransaction":{const t={...e.params[0],chainId:Number(l)};return i.Z.setCurrentAccount({address:this.currentAccount,type:this.currentAccountType,brandName:this.currentAccountBrand}),t.gas&&delete t.gas,c.Z.sendRequest({$ctx:this.$ctx,method:"eth_sendTransaction",params:[t]}).finally((()=>{i.Z.setCurrentAccount(n)}))}case"eth_chainId":return p.hex;default:return r.Z[a](s)}},this.sendAsync=(e,t)=>{if(Array.isArray(e))return Promise.all(e.map((e=>new Promise((t=>{this.sendAsync(e,((e,s)=>{t(s)}))}))))).then((e=>t(null,e)));const{method:s,params:a,...n}=e;this.request({method:s,params:a}).then((e=>t(null,{...n,method:s,result:e}))).catch((e=>t(e,{...n,method:s,error:e})))},this.send=(e,t)=>{if("string"==typeof e&&(!t||Array.isArray(t)))return this.request({method:e,params:t}).then((e=>({id:void 0,jsonrpc:"2.0",result:e})));if("object"==typeof e&&"function"==typeof t)return this.sendAsync(e,t);let s;switch(e.method){case"eth_accounts":s=this.selectedAddress?[this.selectedAddress]:[];break;case"eth_coinbase":s=this.selectedAddress||null;break;default:throw new Error("sync method doesnt support")}return{id:e.id,jsonrpc:e.jsonrpc,result:s}},this.shimLegacy=()=>{const e=[["enable","eth_requestAccounts"],["net_version","net_version"]];for(const[t,s]of e)this[t]=()=>this.request({method:s})},this.initialize(),this.shimLegacy()}}const g=new p,y={currentProvider:new Proxy(g,{deleteProperty:()=>!0})};a()}catch(e){a(e)}}))},153023:(e,t,s)=>{"use strict";s.d(t,{H:()=>n});var a=s(171417);const n=(e,t,s)=>{const n="number"==typeof s?{timeout:s}:s,{timeout:r=18e4,maxSize:i=0}=n||{},o={};a.nn&&(globalThis[`${e}_cache`]=o);return{fn:async(e,s,a)=>{const n=Date.now();if(!a&&o[s]&&o[s].expire>n)return o[s].value;const c=await t(...e),d={expire:n+r,value:c};if(o[s]=d,i&&Object.keys(o).length>i){const e=Object.keys(o).reduce(((e,t)=>!e||o[t].expire<o[e].expire?t:e),"");delete o[e]}return c},isExpired:e=>!o[e]||o[e].expire<Date.now(),forceExpire:e=>{delete o[e]}}}},273392:(e,t,s)=>{"use strict";s.d(t,{d:()=>i});var a=s(409669),n=s.n(a),r=s(568917);const i=n().create({adapter:r.Z})},330122:(e,t,s)=>{"use strict";s.d(t,{O7:()=>g,D0:()=>u,sV:()=>T,Wr:()=>f,f0:()=>m,LA:()=>w,U3:()=>A,do:()=>y,Fb:()=>C});var a=s(222751),n=s(46577),r=s(171417),i=s(693150),o=s.n(i),c=s(144820),d=s(172919);const h=(e,t)=>{c.tO.set(e,t)},u=async({name:e,template:t=Object.create(null),fromStorage:s=!0})=>{let a=t;if(s){const s=await c.tO.get(e);a=Object.assign({},t,s),s||await c.tO.set(e,a)}return new Proxy(a,{set:(t,s,a)=>(t[s]=a,h(e,t),(0,d.Y)("storeChanged",{bgStoreName:e,changedKey:s,changedKeys:[s],partials:{[s]:a}}),!0),deleteProperty:(t,s)=>(Reflect.has(t,s)&&(Reflect.deleteProperty(t,s),h(e,t)),!0)})};var l=s(384127),p=s.n(l);class g{constructor(){this._tasks=[],this._context={},this.requestedApproval=!1}use(e){if("function"!=typeof e)throw new Error("promise need function to handle");return this._tasks.push(e),this}callback(){return p()(this._tasks)}}const y=e=>e.replace(/_(.)/g,((e,t)=>t.toUpperCase()));function m(e){if(!e)return"";if("number"==typeof e){const t=a.toBuffer(e);e=a.bufferToHex(t)}if("string"!=typeof e){let t="eth-sig-util.normalize() requires hex string or integer input.";throw t+=` received ${typeof e}: ${e}`,new Error(t)}return a.addHexPrefix(e)}const w=e=>{const t=n.Z.get();t&&"/import/wallet-connect"===t.path&&n.Z.set({...t,states:{...t.states,data:e}})},T=()=>{const e=n.Z.get();return!(!e||"/import/wallet-connect"!==e.path)},f=(e,t)=>e.toLowerCase()===t.toLowerCase(),A=e=>{const t=[16,19,32,48,128].reduce(((t,s)=>(t[s]="rabby"===e||"metamask"===e?`images/icon-default-${e}-${s}.png`:"locked"===e?`images/icon-lock-${s}.png`:`images/icon-${s}.png`,t)),{});return(r.AU?o().action:o().browserAction).setIcon({path:t})},C=(e,t)=>new Promise(((s,a)=>{const n=setTimeout((()=>a(new Error("Request timed out"))),t);e.then((e=>{clearTimeout(n),s(e)})).catch((e=>{clearTimeout(n),a(e)}))}));s.g.__rb_is=()=>!0},659814:(e,t,s)=>{"use strict";s.d(t,{b1:()=>c,iF:()=>h,qP:()=>d});var a=s(171417),n=s(472367),r=s(496486),i=s(693150),o=s.n(i);const c=async({data:e,password:t})=>{if(!(0,r.isNil)(t)){const{vault:s,exportedKeyString:r}=await(0,n.BI)(t,e),{salt:i}=JSON.parse(s);return a.AU&&o().storage.session.set({exportedKey:r,salt:i}),s}const{exportedKey:s,salt:i}=await o().storage.session.get(["exportedKey","salt"]);if(!s||!i)throw new Error("No exportedKey found in session");const c=await(0,n.uI)(s),d=await(0,n.x7)(c,e);return JSON.stringify({...d,salt:i})},d=async({encryptedData:e,password:t})=>{if(!(0,r.isNil)(t)){const{vault:s,exportedKeyString:r,salt:i}=await(0,n.qt)(t,e);return a.AU&&o().storage.session.set({exportedKey:r,salt:i}),s}if(!a.AU)return;const{exportedKey:s,salt:i}=await o().storage.session.get(["exportedKey","salt"]);if(!s||!i)throw new Error("No exportedKey found in session");const c=await(0,n.uI)(s);return await(0,n.xQ)(c,JSON.parse(e))},h=async()=>{a.AU&&await o().storage.session.remove(["exportedKey","salt"])}},244093:(e,t,s)=>{"use strict";s.d(t,{Z:()=>n});var a=s(969007);const n=new class{constructor(){this.state=new Map,this.latestBlockNumber={}}start(){this.loadBlockNumber(),setInterval((()=>{this.loadBlockNumber()}),1e4)}async loadBlockNumber(){const e=(0,a.aO)("mainnet");this.latestBlockNumber=e.reduce(((e,t)=>({[t.serverId]:Math.floor(1e4*Math.random()),...e})),{})}getLatestBlockNumber(e){return this.latestBlockNumber[e]||Date.now().toString()}set(e,t,s=15e4){if(!this.canCache(t))return;const a=this.getLatestBlockNumber(t.chainId),n=`${e}-${t.method}-${t.chainId}-${a}-${JSON.stringify(t.params)}`;if(this.getIfExist(n)){const{timeoutId:e}=this.state.get(n);clearTimeout(e);const a=setTimeout((()=>{this.state.delete(n)}),s);this.state.set(n,{result:t.result,timeoutId:a,expireTime:s})}else{const e=new Map,a=setTimeout((()=>{e.delete(n)}),s);this.state.set(n,{result:t.result,timeoutId:a,expireTime:s})}}has(e,t){const s=this.getLatestBlockNumber(t.chainId),a=`${e}-${t.method}-${t.chainId}-${s}-${JSON.stringify(t.params)}`;return null!==this.getIfExist(a)}get(e,t){const s=this.getLatestBlockNumber(t.chainId),a=`${e}-${t.method}-${t.chainId}-${s}-${JSON.stringify(t.params)}`,n=this.getIfExist(a);return n?.result}updateExpire(e,t,s=1e4){const a=this.getLatestBlockNumber(t.chainId),n=`${e}-${t.method}-${t.chainId}-${a}-${JSON.stringify(t.params)}`,r=this.getIfExist(n);if(r){const e=setTimeout((()=>{this.state.delete(n)}),s);this.state.set(n,{timeoutId:e,result:r.result,expireTime:r.expireTime})}}canCache(e){switch(e.method){case"web3_clientVersion":case"web3_sha3":case"eth_protocolVersion":case"eth_getBlockTransactionCountByHash":case"eth_getUncleCountByBlockHash":case"eth_getCode":case"eth_getBlockByHash":case"eth_getUncleByBlockHashAndIndex":case"eth_getCompilers":case"eth_compileLLL":case"eth_compileSolidity":case"eth_compileSerpent":case"shh_version":case"eth_getBlockByNumber":case"eth_getBlockTransactionCountByNumber":case"eth_getUncleCountByBlockNumber":case"eth_getTransactionByBlockNumberAndIndex":case"eth_getUncleByBlockNumberAndIndex":case"eth_gasPrice":case"eth_blockNumber":case"eth_getStorageAt":case"eth_call":case"eth_estimateGas":case"eth_getFilterLogs":case"eth_getLogs":return!0;default:return!1}}getIfExist(e){return this.state.has(e)?this.state.get(e):null}}},70533:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{U:()=>d});var n=s(771210),r=s(737820),i=s(836612),o=s(863409),c=e([r,i]);[r,i]=c.then?(await c)():c;const d=async({address:e,networkId:t})=>{const s=await r.$8.getCurrentAccount(),a=new i.G;s&&(a.currentAccount=s.address,a.currentAccountType=s.type,a.currentAccountBrand=s.brandName),a.chainId=t;const c=new n.Q(a),d=await o.Z.getSafeVersion({address:e,provider:c});return new o.Z(e,d,c,t)};a()}catch(e){a(e)}}))},365432:(e,t,s)=>{"use strict";function a(e){const{hash:t,rawTx:s}=e,{to:a,data:n,nonce:r,gas:i,from:o,value:c,gasPrice:d,maxFeePerGas:h,maxPriorityFeePerGas:u,r:l,s:p,v:g}=s,y={to:a,gas:i,from:o,hash:t,nonce:r,input:n||"0x",value:c||"0x0",blockHash:null,blockNumber:null,transactionIndex:null,r:l,s:p,v:g};return h&&u?(y.gasPrice=h,y.maxFeePerGas=h,y.maxPriorityFeePerGas=u,y.type="0x2"):(y.gasPrice=d,y.type="0x0"),y}s.d(t,{c:()=>a})},144820:(e,t,s)=>{"use strict";s.d(t,{t6:()=>m,tO:()=>i,n2:()=>o.ZP,DS:()=>y});var a=s(693150),n=s.n(a);let r;const i={get:async e=>{if(r)return r.get(e);const t=await n().storage.local.get(null);return r=new Map(Object.entries(t??{}).map((([e,t])=>[e,t]))),e?t?.[e]:t},set:async(e,t)=>{await n().storage.local.set({[e]:t}),r.set(e,t)},byteInUse:async()=>new Promise(((e,t)=>{chrome?chrome.storage.local.getBytesInUse((t=>{e(t)})):t("ByteInUse only works in Chrome")}))};var o=s(405869),c=s(539666),d=s(717187),h=s(177447);const u=new d.EventEmitter;n().windows.onFocusChanged.addListener((e=>{u.emit("windowFocusChange",e)}));let l=!0;n().runtime.onMessage.addListener((({type:e})=>{"closeNotification"===e&&(l=!1,u.emit("closeNotification"))})),n().windows.onRemoved.addListener((e=>{u.emit("windowRemoved",e,l),l=!0}));const p={width:400+(h.qB?14:0),height:600},g=async({url:e,...t})=>{const{top:s,left:a,width:r}=await n().windows.getCurrent({windowTypes:["normal"]}),i=s,o=a+r-p.width,d=await n().windows.getCurrent();let h;if("fullscreen"===d.state)h=await(({url:e,...t})=>n().windows.create({focused:!0,url:e,type:"popup",...t,width:void 0,height:void 0,left:void 0,top:void 0,state:"fullscreen"}))({url:e,...t});else try{h=await n().windows.create({focused:!0,url:e,type:"popup",top:i,left:o,...p,...t})}catch(s){s.message&&/Invalid value for bound/i.test(s.message)?h=await n().windows.create({focused:!0,url:e,type:"popup",top:0,left:0,...p,...t}):c.Tb(`tx prompt error: ${JSON.stringify(s)}`)}if(h.left!==o&&"fullscreen"!==d.state)try{await n().windows.update(h.id,{left:o,top:i})}catch(e){}return h.id},y={openNotification:({route:e="",...t}={})=>g({url:`notification.html${e&&`#${e}`}`,...t}),event:u,remove:async e=>n().windows.remove(e)};n().notifications.onClicked.addListener((e=>{e.startsWith("https://")&&(0,o.ZW)(e.split("_randomId_")[0])}));const m={create:(e,t,s,a=0)=>{const r=+new Date;n().notifications.create(e&&`${e}_randomId_=${r}`,{type:"basic",title:t,iconUrl:n().runtime.getURL("./images/icon-64.png"),message:s,priority:a})}}},405869:(e,t,s)=>{"use strict";s.d(t,{ZP:()=>d,ZW:()=>o,nh:()=>c});var a=s(693150),n=s.n(a),r=s(717187);const i=new r.EventEmitter;n().tabs.onUpdated.addListener(((e,t)=>{t.url&&i.emit("tabUrlChanged",e,t.url)})),n().tabs.onRemoved.addListener((e=>{i.emit("tabRemove",e)}));const o=async e=>{const t=await n().tabs.create({active:!0,url:e});return t?.id},c=(e="")=>o(`index.html${e&&`#${e}`}`),d=i},239742:(e,t,s)=>{"use strict";s.d(t,{YV:()=>a});const a=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}]},177447:(e,t,s)=>{"use strict";s.d(t,{zp:()=>qe,zG:()=>n.zG,h:()=>n.h,AY:()=>ue,jw:()=>Xe,x0:()=>Je,v_:()=>Qe,FP:()=>_e,EK:()=>Oe,$h:()=>He,OQ:()=>Ve,NN:()=>Ne,P4:()=>De,NI:()=>xe,r:()=>Le,G9:()=>Ae,D1:()=>Ce,m2:()=>ve,D:()=>Se,qB:()=>Pe,tH:()=>Ue,Cr:()=>he,pY:()=>de,Vi:()=>le,ih:()=>ce,kW:()=>$e,$c:()=>Ie,$9:()=>Me});var a=s(969007),n=s(960398),r=s(572212),i=s(360493),o=s(770483),c=s(152109),d=s(102843),h=s(378539),u=s(78211),l=s(839267),p=s(503073),g=s(635870),y=s(159719),m=s(627240),w=s(740517),T=s(996092),f=s(68757),A=s(489289),C=s(863417),S=s(483618),v=s(190278),b=s(333047),P=s(738272),I=s(662127),E=s(579646),k=s(982138),x=s(562745),L=s(961852),N=s(586443),D=s(271307),_=s(170277),O=s(380950),R=s(547044),B=s(912484),M=s(673295),K=s(407919),W=s(117012),F=s(37456),H=s(989243),Z=s(578738),U=s(744858),G=s(595191),$=s(228789),j=s(182032),q=s(899616),V=s(741440),z=s(547710),Y=s(87616),X=s(22846),J=s(693150),Q=s.n(J),ee=s(811350),te=s(540157),se=s(97966),ae=s(618369),ne=s(794297),re=s(50625),ie=s(176797),oe=s(855944);const ce=JSON.parse('[{"code":"en","name":"English"},{"code":"zh-CN","name":"简体中文"},{"code":"zh-HK","name":"繁體中文（香港）"},{"code":"es","name":"Español"},{"code":"fr-FR","name":"Français"},{"code":"ua-UA","name":"Українська"},{"code":"tr","name":"Türkçe"},{"code":"pt-BR","name":"Português Brasileiro"},{"code":"ru","name":"Русский"},{"code":"de","name":"Deutsch"},{"code":"ja","name":"日本語"}]'),de=(new Map((0,a.aO)("mainnet").map((e=>[e.serverId,{...e,isSupportHistory:!1}]))),{HdKeyring:"HD Key Tree",SimpleKeyring:"Simple Key Pair",HardwareKeyring:"hardware",WatchAddressKeyring:"Watch Address",WalletConnectKeyring:"WalletConnect",GnosisKeyring:"Gnosis",CoboArgusKeyring:"CoboArgus",CoinbaseKeyring:"Coinbase"}),he={PRIVATE_KEY:"Simple Key Pair",MNEMONIC:"HD Key Tree",HARDWARE:{BITBOX02:"BitBox02 Hardware",TREZOR:"Trezor Hardware",LEDGER:"Ledger Hardware",ONEKEY:"Onekey Hardware",GRIDPLUS:"GridPlus Hardware",KEYSTONE:"QR Hardware Wallet Device",IMKEY:"imKey Hardware"},WATCH:"Watch Address",WALLETCONNECT:"WalletConnect",GNOSIS:"Gnosis",CoboArgus:"CoboArgus",Coinbase:"Coinbase"},ue=[he.MNEMONIC,he.PRIVATE_KEY,...Object.values(he.HARDWARE)],le=[he.HARDWARE.LEDGER,he.HARDWARE.GRIDPLUS],pe=(he.HARDWARE.LEDGER,he.HARDWARE.GRIDPLUS,he.PRIVATE_KEY,he.MNEMONIC,he.HARDWARE.KEYSTONE,he.HARDWARE.TREZOR,he.HARDWARE.ONEKEY,he.HARDWARE.BITBOX02,de.HdKeyring,de.SimpleKeyring,de.WatchAddressKeyring,he.HARDWARE.BITBOX02,he.HARDWARE.LEDGER,he.HARDWARE.TREZOR,he.HARDWARE.ONEKEY,he.HARDWARE.GRIDPLUS,he.GNOSIS,he.HARDWARE.KEYSTONE,he.HARDWARE.IMKEY,{type:"BitBox02 Hardware",brandName:"BitBox02"}),ge={type:"Ledger Hardware",brandName:"Ledger"},ye={type:"Trezor Hardware",brandName:"Trezor"},me={type:"Onekey Hardware",brandName:"Onekey"},we={type:"GridPlus Hardware",brandName:"GridPlus"},Te={type:"imKey Hardware",brandName:"imKey"};var fe;!function(e){e[e.SEND=1]="SEND",e[e.APPROVE=2]="APPROVE",e[e.CANCEL_APPROVE=3]="CANCEL_APPROVE",e[e.CANCEL_TX=4]="CANCEL_TX",e[e.SIGN_TX=5]="SIGN_TX"}(fe||(fe={}));const Ae=/Chrome\//i.test(s.g.navigator?.userAgent),Ce=/Firefox\//i.test(s.g.navigator?.userAgent);let Se=!1;Q().tabs.onCreated.addListener((e=>{e&&"vivExtData"in e&&(Se=!0)}));const ve=/linux/i.test(s.g.navigator?.userAgent);let be=null;if(Ae){const e=s.g.navigator?.userAgent.match(/Chrome\/(\d+[^.\s])/);e&&e.length>=2&&(be=Number(e[1]))}const Pe=/windows/i.test(s.g.navigator?.userAgent),Ie=["eth_blockNumber","eth_call","eth_chainId","eth_coinbase","eth_decrypt","eth_estimateGas","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getEncryptionPublicKey","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleByBlockHashAndIndex","eth_getUncleByBlockNumberAndIndex","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_getWork","eth_hashrate","eth_mining","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_protocolVersion","eth_sendRawTransaction","eth_sendTransaction","eth_submitHashrate","eth_submitWork","eth_syncing","eth_uninstallFilter","wallet_requestPermissions","wallet_revokePermissions","wallet_getPermissions","net_version"];var Ee,ke;!function(e){e.WalletConnect="WalletConnect"}(Ee||(Ee={})),function(e){e.WalletConnect="WalletConnect",e.BitBox02Connect="BitBox02Connect",e.LedgerConnect="LedgerConnect",e.OneKeyConnect="OneKeyConnect",e.TrezorConnect="TrezorConnect",e.GnosisConnect="GnosisConnect",e.GridPlusConnect="GridPlusConnect",e.QRCodeBase="QR Hardware Wallet Device",e.CoboArgusConnect="CoboArgusConnect",e.CoinbaseConnect="CoinbaseConnect",e.ImKeyConnect="ImKeyConnect"}(ke||(ke={}));const xe=location.origin,Le={name:"Rabby",origin:xe,icon:ne.Z},Ne="https://api.rabby.io",De="https://api.testnet.rabby.io",_e={broadcastToUI:"broadcastToUI",broadcastToBackground:"broadcastToBackground",TX_COMPLETED:"TX_COMPLETED",SIGN_FINISHED:"SIGN_FINISHED",TX_SUBMITTING:"TX_SUBMITTING",WALLETCONNECT:{STATUS_CHANGED:"WALLETCONNECT_STATUS_CHANGED",SESSION_STATUS_CHANGED:"SESSION_STATUS_CHANGED",SESSION_ACCOUNT_CHANGED:"SESSION_ACCOUNT_CHANGED",SESSION_NETWORK_DELAY:"SESSION_NETWORK_DELAY",INIT:"WALLETCONNECT_INIT",INITED:"WALLETCONNECT_INITED",TRANSPORT_ERROR:"TRANSPORT_ERROR",SCAN_ACCOUNT:"SCAN_ACCOUNT"},GNOSIS:{TX_BUILT:"TransactionBuilt",TX_CONFIRMED:"TransactionConfirmed"},QRHARDWARE:{ACQUIRE_MEMSTORE_SUCCEED:"ACQUIRE_MEMSTORE_SUCCEED"},LEDGER:{REJECTED:"LEDGER_REJECTED",REJECT_APPROVAL:"LEDGER_REJECT_APPROVAL"},COMMON_HARDWARE:{REJECTED:"COMMON_HARDWARE_REJECTED"},LOCK_WALLET:"LOCK_WALLET",RELOAD_TX:"RELOAD_TX",SIGN_BEGIN:"SIGN_BEGIN",SIGN_WAITING_AMOUNTED:"SIGN_WAITING_AMOUNTED",GAS_ACCOUNT:{LOG_OUT:"LOG_OUT"}},Oe={ON_TX_COMPLETED:"ON_TX_COMPLETED"};var Re,Be;!function(e){e.AMBER="AMBER",e.BITBOX02="BITBOX02",e.COBO="COBO",e.FIREBLOCKS="FIREBLOCKS",e.IMTOKEN="IMTOKEN",e.JADE="JADE",e.LEDGER="LEDGER",e.MATHWALLET="MATHWALLET",e.ONEKEY="ONEKEY",e.TP="TP",e.TREZOR="TREZOR",e.TRUSTWALLET="TRUSTWALLET",e.GNOSIS="Gnosis",e.GRIDPLUS="GRIDPLUS",e.METAMASK="MetaMask",e.KEYSTONE="Keystone",e.COOLWALLET="CoolWallet",e.DEFIANT="Defiant",e.WALLETCONNECT="WALLETCONNECT",e.AIRGAP="AirGap",e.IMTOKENOFFLINE="imTokenOffline",e.Rainbow="Rainbow",e.Bitkeep="Bitget",e.Zerion="Zerion",e.CoboArgus="CoboArgus",e.MPCVault="MPCVault",e.Coinbase="Coinbase",e.IMKEY="IMKEY",e.NGRAVEZERO="NGRAVE ZERO",e.Utila="Utila"}(Re||(Re={})),function(e){e.MOBILE="mobile",e.HARDWARE="hardware",e.INSTITUTIONAL="institutional"}(Be||(Be={}));const Me={[Re.AMBER]:{id:0,name:"Amber",brand:Re.AMBER,icon:T.Z,lightIcon:T.Z,image:T.Z,rcSvg:T.r,maybeSvg:T.Z,connectType:ke.WalletConnect,category:Be.INSTITUTIONAL},[Re.BITBOX02]:{id:10,name:"BitBox02",brand:Re.BITBOX02,icon:f.Z,lightIcon:f.Z,image:f.Z,rcSvg:f.r,maybeSvg:f.Z,connectType:ke.BitBox02Connect,category:Be.HARDWARE},[Re.COBO]:{id:1,name:"Cobo Wallet",brand:Re.COBO,icon:C.Z,lightIcon:C.Z,image:C.Z,rcSvg:C.r,maybeSvg:C.Z,connectType:ke.WalletConnect,category:Be.INSTITUTIONAL,hidden:!0},[Re.COOLWALLET]:{id:16,name:"CoolWallet",brand:Re.COOLWALLET,icon:v.Z,lightIcon:v.Z,image:v.Z,rcSvg:v.r,maybeSvg:v.Z,connectType:ke.QRCodeBase,category:Be.HARDWARE},[Re.DEFIANT]:{id:17,name:"Defiant",brand:Re.DEFIANT,icon:b.Z,lightIcon:b.Z,image:b.Z,rcSvg:b.r,maybeSvg:b.Z,connectType:ke.WalletConnect,category:Be.MOBILE,hidden:!0},[Re.WALLETCONNECT]:{id:20,name:"Wallet Connect",brand:Re.WALLETCONNECT,icon:z.Z,lightIcon:z.Z,image:z.Z,rcSvg:z.r,maybeSvg:z.Z,connectType:ke.WalletConnect,category:Be.MOBILE},[Re.FIREBLOCKS]:{id:11,name:"Fireblocks",brand:Re.FIREBLOCKS,icon:P.Z,lightIcon:P.Z,image:P.Z,rcSvg:P.r,maybeSvg:P.Z,connectType:ke.WalletConnect,category:Be.INSTITUTIONAL},[Re.GNOSIS]:{id:13,name:"Safe",brand:Re.GNOSIS,icon:G.Z,lightIcon:G.Z,image:G.Z,rcSvg:G.r,maybeSvg:G.Z,connectType:ke.GnosisConnect,category:Be.INSTITUTIONAL},[Re.GRIDPLUS]:{id:12,name:"GridPlus",brand:Re.GRIDPLUS,icon:I.Z,lightIcon:I.Z,image:I.Z,rcSvg:I.r,maybeSvg:I.Z,connectType:ke.GridPlusConnect,category:Be.HARDWARE},[Re.IMTOKEN]:{id:2,name:"imToken",brand:Re.IMTOKEN,icon:x.Z,lightIcon:x.Z,image:x.Z,rcSvg:x.r,maybeSvg:x.Z,connectType:ke.WalletConnect,category:Be.MOBILE},[Re.JADE]:{id:3,name:"Jade Wallet",brand:Re.JADE,icon:L.Z,lightIcon:L.Z,image:L.Z,rcSvg:L.r,maybeSvg:L.Z,connectType:ke.WalletConnect,category:Be.INSTITUTIONAL},[Re.KEYSTONE]:{id:15,name:"Keystone",brand:Re.KEYSTONE,icon:N.Z,lightIcon:N.Z,image:N.Z,rcSvg:N.r,maybeSvg:N.Z,connectType:ke.QRCodeBase,category:Be.HARDWARE},[Re.AIRGAP]:{id:18,name:"AirGap Vault",brand:Re.AIRGAP,icon:w.Z,lightIcon:w.Z,image:w.Z,rcSvg:w.r,maybeSvg:w.Z,connectType:ke.QRCodeBase,category:Be.HARDWARE},[Re.LEDGER]:{id:4,name:"Ledger",brand:Re.LEDGER,icon:D.Z,lightIcon:D.Z,leftIcon:D.Z,image:Ce?_.Z:D.Z,rcSvg:Ce?_.r:D.r,maybeSvg:D.Z,connectType:ke.LedgerConnect,category:Be.HARDWARE,preventClick:Ce,tipI18nKey:Ce?"page.newAddress.firefoxLedgerDisableTips":""},[Re.MATHWALLET]:{id:5,name:"Math Wallet",brand:Re.MATHWALLET,icon:O.Z,lightIcon:O.Z,image:O.Z,rcSvg:O.r,maybeSvg:O.Z,connectType:ke.WalletConnect,category:Be.MOBILE},[Re.METAMASK]:{id:14,name:"MetaMask Mobile",brand:Re.METAMASK,icon:R.Z,lightIcon:R.Z,image:R.Z,rcSvg:R.r,maybeSvg:R.r,connectType:ke.WalletConnect,category:Be.MOBILE},[Re.ONEKEY]:{id:6,name:"OneKey",brand:Re.ONEKEY,icon:W.Z,lightIcon:W.Z,image:W.Z,rcSvg:W.r,maybeSvg:W.Z,connectType:ke.OneKeyConnect,category:Be.HARDWARE},[Re.TP]:{id:7,name:"TokenPocket",brand:Re.TP,icon:$.Z,lightIcon:$.Z,image:$.Z,rcSvg:$.r,maybeSvg:$.Z,connectType:ke.WalletConnect,category:Be.MOBILE},[Re.TREZOR]:{id:8,name:"Trezor",brand:Re.TREZOR,icon:j.Z,lightIcon:j.Z,image:j.Z,rcSvg:j.r,maybeSvg:j.Z,connectType:ke.TrezorConnect,category:Be.HARDWARE},[Re.TRUSTWALLET]:{id:9,name:"Trust Wallet",brand:Re.TRUSTWALLET,icon:q.Z,lightIcon:q.Z,image:q.Z,rcSvg:q.r,maybeSvg:q.Z,connectType:ke.WalletConnect,category:Be.MOBILE},[Re.Rainbow]:{id:21,name:"Rainbow",brand:Re.Rainbow,icon:U.Z,lightIcon:U.Z,image:U.Z,rcSvg:U.r,maybeSvg:U.Z,connectType:ke.WalletConnect,category:Be.MOBILE},[Re.Bitkeep]:{id:22,name:"Bitget Wallet",brand:Re.Bitkeep,icon:A.Z,lightIcon:A.Z,image:A.Z,rcSvg:A.r,maybeSvg:A.Z,connectType:ke.WalletConnect,category:Be.MOBILE},[Re.Zerion]:{id:23,name:"Zerion Wallet",brand:Re.Zerion,icon:X.Z,lightIcon:X.Z,image:X.Z,rcSvg:X.r,maybeSvg:X.Z,connectType:ke.WalletConnect,category:Be.MOBILE},[Re.CoboArgus]:{id:25,name:"Cobo Argus",brand:Re.CoboArgus,icon:g.Z,lightIcon:g.Z,image:g.Z,rcSvg:g.r,maybeSvg:g.Z,connectType:ke.CoboArgusConnect,category:Be.INSTITUTIONAL},[Re.MPCVault]:{id:26,name:"MPCVault",brand:Re.MPCVault,icon:M.Z,lightIcon:M.Z,image:M.Z,rcSvg:M.r,maybeSvg:M.Z,connectType:ke.WalletConnect,category:Be.INSTITUTIONAL},[Re.IMTOKENOFFLINE]:{id:27,name:"imToken",brand:Re.IMTOKENOFFLINE,icon:E.Z,lightIcon:E.Z,image:E.Z,rcSvg:E.r,maybeSvg:E.Z,connectType:ke.QRCodeBase,category:Be.HARDWARE},[Re.Coinbase]:{id:28,name:"Coinbase",brand:Re.Coinbase,lightIcon:S.Z,icon:S.Z,image:S.Z,rcSvg:S.r,connectType:ke.CoinbaseConnect,category:Be.MOBILE},[Re.IMKEY]:{id:29,name:"imKey",brand:Re.IMKEY,icon:k.Z,lightIcon:k.Z,image:k.Z,rcSvg:k.r,maybeSvg:k.Z,connectType:ke.ImKeyConnect,category:Be.HARDWARE},[Re.Utila]:{id:30,name:"Utila",brand:Re.Utila,icon:V.Z,lightIcon:V.Z,image:V.Z,rcSvg:V.r,connectType:ke.WalletConnect,category:Be.INSTITUTIONAL},[Re.NGRAVEZERO]:{id:31,name:"NGRAVE ZERO",brand:Re.NGRAVEZERO,icon:K.Z,lightIcon:K.Z,image:K.Z,rcSvg:K.r,maybeSvg:K.Z,connectType:ke.QRCodeBase,category:Be.HARDWARE}},Ke={[he.MNEMONIC]:B.Z,[he.PRIVATE_KEY]:H.Z,[he.WATCH]:Y.Z,[pe.type]:f.Z,[ge.type]:D.Z,[me.type]:W.Z,[ye.type]:j.Z,[we.type]:I.Z,[Te.type]:k.Z},We={[he.MNEMONIC]:y.Z,[he.PRIVATE_KEY]:F.Z,[he.WATCH]:m.Z,[pe.type]:f.Z,[ge.type]:D.Z,[me.type]:W.Z,[ye.type]:j.Z,[we.type]:I.Z,[Te.type]:k.Z},Fe=(he.MNEMONIC,B.Z,he.PRIVATE_KEY,H.Z,he.WATCH,Y.Z,he.MNEMONIC,y.Z,he.PRIVATE_KEY,Z.Z,he.WATCH,m.Z,pe.type,f.Z,ge.type,D.Z,me.type,W.Z,ye.type,j.Z,we.type,I.Z,Te.type,k.Z,{[he.MNEMONIC]:{dataLight:We[he.MNEMONIC],dataDark:Ke[he.MNEMONIC],rcLight:y.r,rcDark:B.r},[he.PRIVATE_KEY]:{dataLight:We[he.PRIVATE_KEY],dataDark:Ke[he.PRIVATE_KEY],rcLight:F.r,rcDark:H.r},[he.WATCH]:{dataLight:We[he.WATCH],dataDark:Ke[he.WATCH],rcLight:m.r,rcDark:Y.r},[pe.type]:{dataLight:We[pe.type],dataDark:Ke[pe.type],rcLight:f.r,rcDark:f.r},[ge.type]:{dataLight:We[ge.type],dataDark:Ke[ge.type],rcLight:D.r,rcDark:D.r},[me.type]:{dataLight:We[me.type],dataDark:Ke[me.type],rcLight:W.r,rcDark:W.r},[ye.type]:{dataLight:We[ye.type],dataDark:Ke[ye.type],rcLight:j.r,rcDark:j.r},[we.type]:{dataLight:We[we.type],dataDark:Ke[we.type],rcLight:I.r,rcDark:I.r},[Te.type]:{dataLight:We[Te.type],dataDark:Ke[Te.type],rcLight:k.r,rcDark:k.r}}),He=(Object.entries(Fe).reduce(((e,[t,s])=>(e[t]=s,e)),{}),Re.AMBER,Re.COBO,Re.JADE,de.HdKeyring,de.SimpleKeyring,de.HardwareKeyring,de.WalletConnectKeyring,de.WatchAddressKeyring,(0,a.Jx)({[n.h.ETH]:[0,2e4],[n.h.BOBA]:[0,2e4],[n.h.OP]:[0,2e4],[n.h.BASE]:[0,2e4],[n.h.ZORA]:[0,2e4],[n.h.ERA]:[0,2e4],[n.h.KAVA]:[0,2e4],[n.h.ARBITRUM]:[0,2e4],[n.h.AURORA]:[0,2e4],[n.h.BSC]:[0,2e4],[n.h.AVAX]:[0,4e4],[n.h.POLYGON]:[0,1e5],[n.h.FTM]:[0,1e5],[n.h.GNOSIS]:[0,5e5],[n.h.OKT]:[0,5e4],[n.h.HECO]:[0,1e5],[n.h.CELO]:[0,1e5],[n.h.MOVR]:[0,5e4],[n.h.CRO]:[0,5e5],[n.h.BTT]:[0,2e10],[n.h.METIS]:[0,5e4]}));ge.type;var Ze;!function(e){e.Mnemonic="Mnemonic",e.PrivateKey="PrivateKey",e.WatchMode="WatchMode",e.Contract="Contract",e.Hardware="Hardware",e.WalletConnect="WalletConnect"}(Ze||(Ze={}));const Ue={[he.MNEMONIC]:Ze.Mnemonic,[he.PRIVATE_KEY]:Ze.PrivateKey,[he.WATCH]:Ze.WatchMode,[he.HARDWARE.LEDGER]:Ze.Hardware,[he.HARDWARE.ONEKEY]:Ze.Hardware,[he.HARDWARE.TREZOR]:Ze.Hardware,[he.HARDWARE.BITBOX02]:Ze.Hardware,[he.HARDWARE.KEYSTONE]:Ze.Hardware,[he.HARDWARE.GRIDPLUS]:Ze.Hardware,[he.WALLETCONNECT]:Ze.WalletConnect,[he.Coinbase]:Ze.WalletConnect,[he.GNOSIS]:Ze.Contract,[he.HARDWARE.IMKEY]:Ze.Hardware},Ge=[n.h.ARBITRUM,n.h.AURORA,n.h.NOVA,n.h.BOBA,n.h.MANTLE,n.h.LINEA,n.h.MANTA,n.h.SCRL,n.h.ERA,n.h.PZE,n.h.MANTA,n.h.OP,n.h.BASE,n.h.ZORA,n.h.OPBNB,n.h.BLAST,n.h.MODE,"DBK","MINT","CYBER"],$e=[n.h.OP,n.h.BASE,n.h.ZORA,n.h.OPBNB,n.h.BLAST,n.h.MODE,"DBK","MINT","CYBER"],je=[n.h.ARBITRUM,n.h.AURORA],qe=(n.h.SCRL,n.h.PZE,n.h.ERA,n.h.LINEA,r.a.FORBIDDEN,r.a.DANGER,r.a.WARNING,r.a.SAFE,r.a.ERROR,r.a.SAFE,l.Z,r.a.WARNING,p.Z,r.a.DANGER,c.Z,r.a.FORBIDDEN,h.Z,r.a.ERROR,d.Z,o.Z,u.Z,"undefined"!=typeof window&&window.__is_rd__,{[de.HdKeyring]:"Seed Phrase",[de.SimpleKeyring]:"Private Key",[de.WatchAddressKeyring]:"Contact",[he.HARDWARE.LEDGER]:"Ledger",[he.HARDWARE.TREZOR]:"Trezor",[he.HARDWARE.ONEKEY]:"Onekey",[he.HARDWARE.BITBOX02]:"BitBox02",[he.GNOSIS]:"Safe",[he.HARDWARE.GRIDPLUS]:"GridPlus",[he.HARDWARE.KEYSTONE]:"Keystone",[Re.TP]:Me.TP.name,[Re.METAMASK]:Me.MetaMask.name,[Re.IMTOKEN]:Me.IMTOKEN.name,[Re.MATHWALLET]:Me.MATHWALLET.name,[Re.TRUSTWALLET]:Me.TRUSTWALLET.name,[he.Coinbase]:Me.Coinbase.name,[he.HARDWARE.IMKEY]:"imKey"}),Ve=[n.h.ETH,n.h.BSC,n.h.POLYGON,n.h.GNOSIS,n.h.AVAX,n.h.OP,n.h.ARBITRUM,n.h.AURORA,n.h.BASE,n.h.CELO,n.h.PZE,n.h.ERA,n.h.SCRL,n.h.LINEA,"XLAYER",n.h.MANTLE,"WORLD",n.h.BLAST,"SONIC"];(0,a.Hj)([n.h.ETH,n.h.OP,n.h.BSC,n.h.POLYGON,n.h.ARBITRUM,n.h.AVAX,n.h.BASE,n.h.MANTLE,n.h.GNOSIS,n.h.SCRL,n.h.MANTA,n.h.MODE]),[Re.METAMASK,Re.TRUSTWALLET,Re.TP,Re.IMTOKEN,Re.MATHWALLET,Re.Rainbow,Re.Bitkeep,Re.Zerion,Re.WALLETCONNECT,Re.LEDGER,Re.TREZOR,Re.GRIDPLUS,Re.ONEKEY,Re.KEYSTONE,Re.BITBOX02,Re.COOLWALLET,Re.AIRGAP,Re.IMTOKENOFFLINE,Re.Coinbase,Re.GNOSIS,Re.CoboArgus,Re.AMBER,Re.FIREBLOCKS,Re.JADE,Re.MPCVault].reduce(((e,t,s)=>(e[t]=s+1,e)),{}),i.Wq.ZEROXAPI,i.Wq.ZEROXAPI,ee.Z,i.B8[i.Wq.ZEROXAPI],i.Wq.PARASWAP,i.Wq.PARASWAP,ae.Z,i.B8[i.Wq.PARASWAP],i.Wq.ONEINCH,i.Wq.ONEINCH,te.Z,i.B8[i.Wq.ONEINCH],i.Wq.OPENOCEAN,i.Wq.OPENOCEAN,ie.Z,i.B8[i.Wq.OPENOCEAN],i.Wq.KYBERSWAP,i.Wq.KYBERSWAP,re.Z,i.B8[i.Wq.KYBERSWAP],i.Wq.PARASWAPV6,i.Wq.PARASWAPV6,ae.Z,i.B8[i.Wq.PARASWAPV6],i.Wq.ODOS,i.Wq.ODOS,se.Z,i.B8[i.Wq.ODOS],i.Wq.ZEROXAPIV2,i.Wq.ZEROXAPIV2,ee.Z,i.B8[i.Wq.ZEROXAPIV2],i.Wq.WRAPTOKEN,oe.Z,i.B8.WrapToken,Array.from(new Set(Object.values(i.B8).flat()));var ze;!function(e){e.MAINNET_AND_TESTNET="MAINNET_AND_TESTNET",e.TESTNET="TESTNET"}(ze||(ze={}));ze.MAINNET_AND_TESTNET,ze.TESTNET;var Ye;!function(e){e.QUICK_CANCEL="QUICK_CANCEL",e.ON_CHAIN_CANCEL="ON_CHAIN_CANCEL"}(Ye||(Ye={}));de.CoboArgusKeyring;var Xe;!function(e){e[e.light=0]="light",e[e.dark=1]="dark",e[e.system=2]="system"}(Xe||(Xe={}));Xe.system,Xe.light,Xe.dark;const Je=20240603,Qe="0x633b7472E1641D59334886a7692107D6332B1ff0"},154890:(e,t,s)=>{"use strict";s.d(t,{s:()=>a});const a={CONNECTION_READY:"CONNECTION_READY",READY:"RABBY_EXTENSION_READY"}},628068:(e,t,s)=>{"use strict";var a=s(936609),n=s(129288);a.ZP.use(n.Db).init({fallbackLng:"en",defaultNS:"translations",interpolation:{escapeValue:!1,skipOnVariables:!0},returnNull:!1,returnEmptyString:!1});const r="translations",i=async e=>{if(a.ZP.hasResourceBundle(e,r))return;const t=await(async e=>{const t=await fetch(`./locales/${e}/messages.json`);return await t.json()})(e);a.ZP.addResourceBundle(e,r,t)};i("en"),a.ZP.on("languageChanged",(function(e){i(e)}))},76245:(e,t,s)=>{"use strict";s.d(t,{Z:()=>m});var a={};s.r(a),s.d(a,{connectedSiteMigration:()=>h,contactBookMigration:()=>d,customRPCMigration:()=>u,customTokenMigration:()=>i,customizedTokenMigration:()=>l,daiChainMigration:()=>c,localeMigration:()=>p});var n=s(144820),r=s(652449);const i={version:1,async migrator(e,t){try{if(void 0===e.preference)return;const t={};for(const s in e.preference.addedToken){t[s]=e.preference.addedToken[s];const a=e.preference.addedToken[s]||[];if(a.length<=0)continue;const n=a.filter((e=>!e.includes(":")&&42===e.length&&e.startsWith("0x"))),i=(await Promise.all(n.map((async e=>{const t=await r.Z.searchToken(s,e);return t.length>0?{id:t[0].id,chain:t[0].chain}:null})))).filter((e=>null!==e));t[s]=t[s].map((e=>{const t=i.find((t=>t.id===e));return t?`${t.chain}:${t.id}`:e}))}return{preference:{...e.preference,addedToken:t}}}catch(t){return{preference:{...e.preference,addedToken:{}}}}}};var o=s(177447);const c={version:2,async migrator(e){try{if(!e.permission)return;return e.permission.dumpCache.some((e=>"DAI"===e.v.chain))?{permission:{dumpCache:e.permission.dumpCache.map((e=>"DAI"===e.v.chain?{...e,v:{...e.v,chain:o.h.GNOSIS}}:e))}}:e}catch(t){return e}}},d={version:4,async migrator(e){try{const{preference:t,contactBook:s}=e;if(t&&s){const a=t.alianNames,n={};for(const e in a)n[e]={name:a[e],address:e,isAlias:!0,isContact:!1};for(const e in s)n[e]?(s[e].isAlias=!0,delete n[e]):s[e].isAlias=!1,s[e].isContact=!0;const r=Object.assign({},s,n);return delete t.alianNames,{...e,preference:t,contactBook:r}}return e}catch(t){return e}}},h={version:3,async migrator(e){try{if(!e.permission)return;return e.permission.dumpCache.every((e=>"isConnected"in e.v))?e:{permission:{dumpCache:e.permission.dumpCache.map((e=>"isConnected"in e.v?e:{...e,v:{...e.v,isConnected:!0}}))}}}catch(t){return e}}},u={version:5,async migrator(e){try{if(!e.rpc)return;const t={customRPC:{}};for(const s in e.rpc.customRPC){const a=e.rpc.customRPC[s];t.customRPC[s]={url:a,enable:!0}}return{rpc:t}}catch(t){return e}}},l={version:6,async migrator(e){try{if(void 0===e.preference)return;const t=[];for(const s in e.preference.addedToken){const a=e.preference.addedToken[s]||[];a.length<=0||a.forEach((e=>{const[s,a]=e.split(":");t.some((e=>e.address===a&&e.chain===s))||t.push({address:a,chain:s})}))}return{preference:{...e.preference,customizedToken:t}}}catch(t){return{preference:{...e.preference,customizedToken:[]}}}}},p={version:7,async migrator(e){try{if(void 0===e.preference)return;let t=e.preference.locale||"en";return"jp"===t?t="ja":t.includes("_")&&(t=t.replace(/_/g,"-")),{preference:{...e.preference,locale:t}}}catch(t){return{preference:{...e.preference,locale:"en"}}}}},g=["chains","contactBook","pageStateCache","permission","preference","transactions","txHistory","rpc"],y=Object.values(a).sort(((e,t)=>e.version-t.version));async function m(){let e={};const t=await n.tO.get("dataVersion")||0;let s=t;if(!(y.length<=0||t>y[y.length-1].version)){for(let t=0;t<g.length;t++){const s=g[t],a=await n.tO.get(s);e=Object.assign({},e,{[s]:a})}for(let a=0;a<y.length;a++){const n=y[a];if(n.version>t){const t=await n.migrator(e);e=Object.assign({},e,t),s=n.version}}for(const t in e)await n.tO.set(t,e[t]);await n.tO.set("dataVersion",s)}}},625399:(e,t,s)=>{"use strict";s.d(t,{Z:()=>n});var a=s(227194);const n=new a.Z(a.E.rabby)},674018:(e,t,s)=>{"use strict";s.d(t,{gV:()=>r});var a=s(244431),n=(s(118269),s(969007));s(177447);const r=e=>{const t=(0,n.Ed)({id:e.chainId});return{id:e.id,chain:t?.serverId||"",amount:e.amount,raw_amount:e.rawAmount,raw_amount_hex_str:`0x${new a.BigNumber(e.rawAmount||0).toString(16)}`,decimals:e.decimals,display_symbol:e.symbol,is_core:!1,is_verified:!1,is_wallet:!1,is_scam:!1,is_suspicious:!1,logo_url:e.logo||"",name:e.symbol,optimized_symbol:e.symbol,price:0,symbol:e.symbol,time_at:0,price_24h_change:0}}},850225:(e,t,s)=>{"use strict";s.d(t,{J0:()=>a,XW:()=>n});const a=e=>{const t={};return e.replace(/([^=?#&]*)=([^?#&]*)/g,(function(e,s,a){return t[decodeURIComponent(s)]=decodeURIComponent(a),""})),t},n=e=>Object.keys(e).map((function(t){return encodeURIComponent(t)+"="+encodeURIComponent(e[t])})).join("&")},417645:(e,t,s)=>{"use strict";s.d(t,{$H:()=>n,y0:()=>r});var a=s(850225);function n(e){const{chainServerId:t,permit2ContractId:s}=(0,a.J0)(e)||{};return{chainServerId:t,permit2ContractId:s}}function r(e){const{statics:t,permit2Revokes:s,generalRevokes:n}=e.reduce(((e,t)=>{if(e.statics.spenderCount+=1,"permit2Id"in t&&t.permit2Id){const r=t.permit2Id,i=(s=t.chainServerId,n=r,(0,a.XW)({chainServerId:s,permit2ContractId:n}));e.permit2Revokes[i]||(e.permit2Revokes[i]=e.permit2Revokes[i]||{chainServerId:t.chainServerId,permit2Id:r,tokenSpenders:[]}),"tokenId"in t&&t.tokenId&&e.permit2Revokes[i].tokenSpenders.push({spender:t.spender,token:t.tokenId})}else e.generalRevokes.push(t);var s,n;return e}),{generalRevokes:[],permit2Revokes:{},statics:{txCount:0,spenderCount:0}});return t.txCount=n.length+Object.values(s).filter((e=>e.tokenSpenders.length>0)).length,{statics:t,generalRevokes:n,permit2Revokes:s}}},174261:(e,t,s)=>{"use strict";s.d(t,{fs:()=>r});var a=s(177447),n=s(936609);s(969007);function r({keyringType:e,brandName:t,keyringCount:s=0,addressCount:r=0}){return e===a.Cr.MNEMONIC?`${(0,n.t)("background.alias.HdKeyring")} ${s+1} #${r+1}`:e===a.pY.SimpleKeyring?`${(0,n.t)("background.alias.simpleKeyring")} ${s+1}`:e===a.pY.WatchAddressKeyring||t===a.pY.WatchAddressKeyring?`${(0,n.t)("background.alias.watchAddressKeyring")} ${r+1}`:t?`${a.zp[t]||t} ${r+1}`:`${a.zp[e]||t} ${r+1}`}},969007:(e,t,s)=>{"use strict";s.d(t,{Ed:()=>u,GA:()=>m,Hj:()=>g,Jx:()=>p,Vm:()=>d,Wz:()=>T,Xj:()=>l,aO:()=>h,lY:()=>y,t8:()=>w});var a=s(280104),n=s(478051),r=s(177447),i=s(992106),o=s(693150);s.n(o)().storage.local.get("rabbyMainnetChainList").then((e=>e?.rabbyMainnetChainList||[])).then((e=>{e.length&&d({mainnetList:e})}));const c={mainnetList:a.filter((e=>!e.is_disabled)).map((e=>w(e))),testnetList:[]},d=e=>{Object.assign(c,e),n.Z.emit(r.FP.broadcastToUI,{method:"syncChainList",params:e})},h=e=>"mainnet"===e?c.mainnetList:"testnet"===e?c.testnetList:[...c.mainnetList,...c.testnetList],u=e=>{const{enum:t,id:s,serverId:a,hex:n,networkId:r}=e;if(t&&t.startsWith("CUSTOM_"))return u({id:+t.replace("CUSTOM_","")});return[...c.mainnetList,...c.testnetList].find((e=>e.enum===t||s&&+e.id==+s||e.serverId===a||e.hex===n||e.network===r))};function l(e,t){const s=t?.fallback?"string"==typeof t?.fallback?t?.fallback:"ETH":null,a=s?r.h[s]||r.h.ETH:null,n=a?r.zG[a]:null;return e&&u({enum:e})||n}function p(e){const t={};return Object.entries(e).forEach((([e,s])=>{l(e)&&(t[e]=s)})),t}function g(e){return e.filter((e=>l(e)))}function y(e){return u({id:e})}function m(e){return u({serverId:e})}function w(e){return{id:e.community_id,enum:{eth:"ETH",bsc:"BSC",xdai:"GNOSIS",matic:"POLYGON",ftm:"FTM",okt:"OKT",heco:"HECO",avax:"AVAX",arb:"ARBITRUM",op:"OP",celo:"CELO",movr:"MOVR",cro:"CRO",boba:"BOBA",metis:"METIS",btt:"BTT",aurora:"AURORA",mobm:"MOBM",sbch:"SBCH",hmy:"HMY",fuse:"FUSE",astar:"ASTAR",klay:"KLAY",rsk:"RSK",iotx:"IOTX",kcc:"KCC",wan:"WAN",sgb:"SGB",evmos:"EVMOS",dfk:"DFK",tlos:"TLOS",nova:"NOVA",canto:"CANTO",doge:"DOGE",step:"STEP",kava:"KAVA",mada:"MADA",cfx:"CFX",brise:"BRISE",ckb:"CKB",tomb:"TOMB",pze:"PZE",era:"ERA",eos:"EOS",core:"CORE",flr:"FLR",wemix:"WEMIX",mtr:"METER",etc:"ETC",fsn:"FSN",pls:"PULSE",rose:"ROSE",ron:"RONIN",oas:"OAS",zora:"ZORA",linea:"LINEA",base:"BASE",mnt:"MANTLE",tenet:"TENET",lyx:"LYX",opbnb:"OPBNB",loot:"LOOT",shib:"SHIB",manta:"MANTA",scrl:"SCRL",fx:"FX",beam:"BEAM",pego:"PEGO",zkfair:"ZKFAIR",fon:"FON",bfc:"BFC",alot:"ALOT",xai:"XAI",zeta:"ZETA",rari:"RARI",hubble:"HUBBLE",mode:"MODE",merlin:"MERLIN",dym:"DYM",eon:"EON",blast:"BLAST",sx:"SX",platon:"PLATON",map:"MAP",frax:"FRAX",aze:"AZE",karak:"KARAK"}[e.id]||e.id.toUpperCase(),name:e.name,serverId:e.id,hex:(0,i.NC)(+e.community_id),network:e.community_id+"",nativeTokenSymbol:e.native_token?.symbol,nativeTokenLogo:e.native_token?.logo,nativeTokenDecimals:e.native_token?.decimals,nativeTokenAddress:e.native_token?.id,needEstimateGas:e.need_estimate_gas,scanLink:`${e.explorer_host}/${"heco"===e.id?"transaction":"tx"}/_s_`,logo:e.logo_url,whiteLogo:e.white_logo_url,eip:{1559:e.eip_1559},severity:e.severity}}const T=(e,t)=>!(!e||!t)&&(e.id?.toLowerCase()===t.id?.toLowerCase()&&+e.chainId==+t.chainId)},554122:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{S:()=>l});var n=s(936136),r=s(773869),i=s(758352),o=s(893338),c=s.n(o),d=s(666935),h=e([d]);d=(h.then?(await h)():h)[0];const u={CALL:0,DELEGATE_CALL:1};class l{constructor(e,t){this.provider=t,this.contract=new n.CH(e,r,this.provider),this.address=e}async getAddress(){return this.contract.getAccountAddress()}getAllDelegates(){return this.contract.getAllDelegates()}async safe(){return this.getAddress()}async execTransactionWithHint(e,t="0x",s=0,a=u.CALL,n=!0,r="0x",i=null,o){let h=this.contract;i&&(h=h.connect(i));const l=[a,e,s,t,"0x",r];if(n){const e=c().encodeFunctionCall({inputs:[{components:[{internalType:"uint256",name:"flag",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"hint",type:"bytes"},{internalType:"bytes",name:"extra",type:"bytes"}],internalType:"struct CallData",name:"callData",type:"tuple"}],name:"execTransaction",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"hint",type:"bytes"}],internalType:"struct TransactionResult",name:"result",type:"tuple"}],type:"function"},[l]),t=await d.Z.requestETHRpc({method:"eth_call",params:[{from:i,to:h.address,data:e,value:"0x0"},"latest"]},o),s=c().decodeParameter("tuple(bool,bytes,bytes)",t);l[4]=s[2]}return await h.populateTransaction.execTransaction(l)}async execRawTransaction(e,t=null,s,a=u.CALL,n=!0,r="0x"){const i=e.to,o=e.value,c=e.data;return await this.execTransactionWithHint(i,c,o,a,n,r,t,s)}async checkIsModuleEnabled({safeAddress:e,coboSafeAddress:t}){const s=new n.CH(e,i,this.provider);return await s.isModuleEnabled(t)}}a()}catch(e){a(e)}}))},875864:(e,t,s)=>{"use strict";s.d(t,{EN:()=>i,bU:()=>r,ir:()=>a,l9:()=>n});s(693150),s(969007);const a=e=>new URL(e).origin,n=e=>42===e.length,r=(e,t)=>e.includes("_s_")?e.replace("_s_",t):e.endsWith("/")?`${e}tx/${t}`:`${e}/tx/${t}`,i=e=>{if(Array.isArray(e))return e.map((e=>"function"==typeof e?0:"object"==typeof e&&null!==e?i(e):e));const t={};for(const s in e){const a=e[s];t[s]="function"==typeof a?0:"object"==typeof a&&null!==a?i(a):a}return t}},336420:(e,t,s)=>{"use strict";s.d(t,{mw:()=>p});var a=s(936136),n=s(23034),r=s(88742),i=s(496486),o=s(222751),c=s(2832),d=s.n(c),h=s(866052);function u(e){const t=function(e){return{...(0,i.omit)(e.txParams,"gas"),gasLimit:e.txParams.gas}}(e),s=function(e){return d().forCustomChain(c.Chain.Mainnet,{chainId:new o.BN((0,o.stripHexPrefix)(e.chainId),16),networkId:new o.BN(e.metamaskNetworkId,10),defaultHardfork:c.Hardfork.SpuriousDragon})}(e);return h.TransactionFactory.fromTxData(t,{common:s})}var l=s(177447);const p=({txParams:e,chain:t,provider:s})=>l.kW.includes(t)?(async(e,t)=>{const s=e.getSigner(),i=r.getContractFactory("OVM_GasPriceOracle").attach(r.predeploys.OVM_GasPriceOracle),o=JSON.parse(i.interface.format(n.pc.json)),c=new a.CH(i.address,o,s),d=u({txParams:t}).serialize();return(await c.getL1Fee(d)).toHexString()})(s,e):t===l.h.SCRL?(async(e,t)=>{const s=e.getSigner(),n=new a.CH("0x5300000000000000000000000000000000000002",[{type:"constructor",stateMutability:"nonpayable",inputs:[{type:"address",name:"_owner",internalType:"address"}]},{type:"function",stateMutability:"view",outputs:[{type:"uint256",name:"",internalType:"uint256"}],name:"getL1Fee",inputs:[{type:"bytes",name:"_data",internalType:"bytes"}]}],s),r=u({txParams:t}).serialize();return(await n.getL1Fee(r)).toHexString()})(s,e):Promise.resolve("0x0")},625284:(e,t,s)=>{"use strict";s.a(e,(async(e,a)=>{try{s.d(t,{m:()=>l});var n=s(53416),r=s(693150),i=s.n(r);const o="https://matomo.debank.com/matomo.php",c=(0,n.kP)("1234567890abcdef",16);async function d(e="",t){return await fetch(`${e}?${t.toString()}`,{method:"POST"})}let{extensionId:h}=await i().storage.local.get("extensionId");h||(h=c(),i().storage.local.set({extensionId:h}));const u=async()=>{const e=new URLSearchParams,t=location.hash.substring(2)||"background",s=`https://${location.host}.com/${t}`;return e.append("action_name",t),e.append("idsite","2"),e.append("rec","1"),e.append("url",encodeURI(s)),e.append("_id",h),e.append("rand",(0,n.x0)()),e.append("ca","1"),e.append("h",(new Date).getUTCHours().toString()),e.append("m",(new Date).getUTCMinutes().toString()),e.append("s",(new Date).getUTCSeconds().toString()),e.append("cookie","0"),e.append("send_image","0"),e.append("dimension1","0.93.8"),e},l=async e=>{const t=await u();e.category&&t.append("e_c",e.category),e.action&&t.append("e_a",e.action),e.label&&t.append("e_n",e.label),e.value&&t.append("e_v",e.value.toString()),e.transport&&t.append("e_i",e.transport);try{return d(o,t)}catch(e){}};a()}catch(p){a(p)}}),1)},850918:(e,t,s)=>{"use strict";s.d(t,{v:()=>d,w:()=>h});var a=s(28580),n=s(510431),r=s(693150),i=s.n(r),o=s(539666),c=s(154890);const d={BroadcastChannelMessage:a.Z,PortMessage:n.Z},h=async()=>{const e=await i().tabs.query({url:"<all_urls>",windowType:"normal"}).then((e=>e)).catch((e=>{throw console.error(e),e}));for(const t of e)null!=t.id&&i().tabs.sendMessage(t.id,{name:c.s.READY}).then((()=>{})).catch((e=>{o.Tb(e)}))}},201494:(e,t,s)=>{"use strict";s.d(t,{$:()=>n});const a=e=>new Promise((t=>setTimeout(t,e)));function n(e,{emitOnBegin:t,initialWaitTime:s,interval:n}){let r=!0;const i=()=>r=!1;return(async()=>{let o;t&&(o=await e({unpoll:i}));const c=await(s?.(o))??n;await a(c);const d=async()=>{r&&(await e({unpoll:i}),await a(n),d())};d()})(),i}},171575:(e,t,s)=>{"use strict";s.d(t,{E:()=>r});var a=s(177447),n=s(478051);const r=async()=>new Promise((e=>n.Z.once(a.FP.SIGN_WAITING_AMOUNTED,(()=>{e()}))))},350792:(e,t,s)=>{"use strict";s.d(t,{BI:()=>o,vp:()=>c,zZ:()=>i});var a=s(222751),n=(s(244431),s(177447)),r=s(969007);s(628068);const i=e=>{const t=(0,r.Ed)({id:e.chainId});if(!t)return!0;const s=n.$h[t.enum];if(!s)return!0;const[a,i]=s;if(Number(e.gasPrice||e.maxFeePerGas)/1e9<a)throw new Error("GasPrice too low");if(Number(e.gasPrice||e.maxFeePerGas)/1e9>i)throw new Error("GasPrice too high");return!0},o=e=>"maxFeePerGas"in e&&"maxPriorityFeePerGas"in e&&((0,a.isHexString)(e.maxFeePerGas)&&(0,a.isHexString)(e.maxPriorityFeePerGas));function c(e,t,s){return"number"==typeof t?t=`0x${t.toString(16)}`:"string"==typeof t&&(t=t.startsWith("0x")?t:`0x${t}`),`${e}_${t}_${s}`}},373180:(e,t,s)=>{"use strict";s.d(t,{RN:()=>r,gi:()=>n});var a=s(496486);const n=e=>(0,a.sortBy)(e,(e=>e.isSubmitFailed&&!e.isWithdrawed?2:e.isWithdrawed?1:-1),(e=>-(e=>Number(e.rawTx.gasPrice||e.rawTx.maxFeePerGas||0))(e)))[0],r=e=>{const t=n(e.txs),s=e.isSubmitFailed;return e.isPending&&!s&&!t?.isWithdrawed}},697574:(e,t,s)=>{"use strict";s.d(t,{K:()=>r,l:()=>i});var a=s(936609),n=s(969007);const r=()=>({maxDuration:36e5,clientMeta:{description:(0,a.t)("global.appDescription"),url:"https://rabby.io",icons:["https://static-assets.rabby.io/files/122da969-da58-42e9-ab39-0a8dd38d94b8.png"],name:"Rabby"},projectId:"ed21a1293590bdc995404dff7e033f04",v2Whitelist:["AMBER","Zerion","Bitget","TP","WALLETCONNECT","WalletConnect","FIREBLOCKS","MPCVault","MetaMask","Rainbow","imToken","MATHWALLET","TRUSTWALLET","Utila","IMTOKEN"]}),i=(0,n.aO)("mainnet").map((e=>e.id))},112769:()=>{},690364:()=>{},922764:()=>{},440991:()=>{},281206:()=>{},601049:()=>{},170268:()=>{},896732:()=>{},213263:()=>{},568153:()=>{},42272:()=>{},646211:()=>{},659778:()=>{},735883:()=>{},842480:()=>{},533038:()=>{},19197:()=>{},896424:()=>{},875381:()=>{},824654:()=>{},850522:()=>{},966882:()=>{},588924:()=>{},55024:()=>{},773869:e=>{"use strict";e.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"authorizer","type":"address"}],"name":"AuthorizerSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"}],"name":"DelegateAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"}],"name":"DelegateRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"NewOwnerSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"PendingOwnerSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"roleManager","type":"address"}],"name":"RoleManagerSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes4","name":"selector","type":"bytes4"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"delegate","type":"address"},{"internalType":"uint256","name":"flag","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"hint","type":"bytes"},{"internalType":"bytes","name":"extra","type":"bytes"}],"indexed":false,"internalType":"struct TransactionData","name":"transaction","type":"tuple"}],"name":"TransactionExecuted","type":"event"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"addDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_delegates","type":"address[]"}],"name":"addDelegates","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"authorizer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"flag","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"hint","type":"bytes"},{"internalType":"bytes","name":"extra","type":"bytes"}],"internalType":"struct CallData","name":"callData","type":"tuple"}],"name":"execTransaction","outputs":[{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"hint","type":"bytes"}],"internalType":"struct TransactionResult","name":"result","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"flag","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"hint","type":"bytes"},{"internalType":"bytes","name":"extra","type":"bytes"}],"internalType":"struct CallData[]","name":"callDataList","type":"tuple[]"}],"name":"execTransactions","outputs":[{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"hint","type":"bytes"}],"internalType":"struct TransactionResult[]","name":"resultList","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAccountAddress","outputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllDelegates","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"hasDelegate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_roleManager","type":"address"},{"internalType":"address","name":"_authorizer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"removeDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"roleManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"safe","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_authorizer","type":"address"}],"name":"setAuthorizer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"setPendingOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_roleManager","type":"address"}],"name":"setRoleManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]')},758352:e=>{"use strict";e.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"isModuleEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]')}},i={};function o(e){var t=i[e];if(void 0!==t)return t.exports;var s=i[e]={id:e,loaded:!1,exports:{}};return r[e].call(s.exports,s,s.exports,o),s.loaded=!0,s.exports}o.m=r,o.amdO={},e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",s="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",a=e=>{e&&!e.d&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},o.a=(n,r,i)=>{var o;i&&((o=[]).d=1);var c,d,h,u=new Set,l=n.exports,p=new Promise(((e,t)=>{h=t,d=e}));p[t]=l,p[e]=e=>(o&&e(o),u.forEach(e),p.catch((e=>{}))),n.exports=p,r((n=>{var r;c=(n=>n.map((n=>{if(null!==n&&"object"==typeof n){if(n[e])return n;if(n.then){var r=[];r.d=0,n.then((e=>{i[t]=e,a(r)}),(e=>{i[s]=e,a(r)}));var i={};return i[e]=e=>e(r),i}}var o={};return o[e]=e=>{},o[t]=n,o})))(n);var i=()=>c.map((e=>{if(e[s])throw e[s];return e[t]})),d=new Promise((t=>{(r=()=>t(i)).r=0;var s=e=>e!==o&&!u.has(e)&&(u.add(e),e&&!e.d&&(r.r++,e.push(r)));c.map((t=>t[e](s)))}));return r.r?d:i()}),(e=>(e?h(p[s]=e):d(l),a(o)))),o&&(o.d=0)},n=[],o.O=(e,t,s,a)=>{if(!t){var r=1/0;for(h=0;h<n.length;h++){for(var[t,s,a]=n[h],i=!0,c=0;c<t.length;c++)(!1&a||r>=a)&&Object.keys(o.O).every((e=>o.O[e](t[c])))?t.splice(c--,1):(i=!1,a<r&&(r=a));if(i){n.splice(h--,1);var d=s();void 0!==d&&(e=d)}}return e}a=a||0;for(var h=n.length;h>0&&n[h-1][2]>a;h--)n[h]=n[h-1];n[h]=[t,s,a]},o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var s in t)o.o(t,s)&&!o.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},o.e=()=>Promise.resolve(),o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),o.j=3352,o.v=(e,t,s,a)=>{var n=fetch(o.p+""+s+".module.wasm");return"function"==typeof WebAssembly.instantiateStreaming?WebAssembly.instantiateStreaming(n,a).then((t=>Object.assign(e,t.instance.exports))):n.then((e=>e.arrayBuffer())).then((e=>WebAssembly.instantiate(e,a))).then((t=>Object.assign(e,t.instance.exports)))},o.p="/",(()=>{var e={3352:0};o.O.j=t=>0===e[t];var t=(t,s)=>{var a,n,[r,i,c]=s,d=0;if(r.some((t=>0!==e[t]))){for(a in i)o.o(i,a)&&(o.m[a]=i[a]);if(c)var h=c(o)}for(t&&t(s);d<r.length;d++)n=r[d],o.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return o.O(h)},s=self.webpackChunkrabby=self.webpackChunkrabby||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})(),o.nc=void 0;var c=o.O(void 0,[330,5449,3946,6928,9595,8384,2827,6510,2983,5187,2506,5849,6996,8825,4926,5045,1535,4279,7411,1680,3420,5655,4634,6006,7715,4347,5844,4388,6949,3917,9104,9842,7206,3454,5257,6066,4517,446,66,3923,2167,7171,488],(()=>o(651065)));c=o.O(c)})();