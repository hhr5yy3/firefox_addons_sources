class NotificationService extends ClockifyService{static async getNotificationsForUser(){const i=`${await this.apiEndpoint}/users/${await this.userId}/notifications`;return this.apiCall(i)}static async getVerificationNotificationsForUser(){const i=`${await this.apiEndpoint}/users/${await this.userId}/verification-notifications`;return this.apiCall(i)}static async getNewsForUser(){const i=`${await this.apiEndpoint}/users/${await this.userId}/news`;return this.apiCall(i)}static async readSingleNotificationForUser({notificationId:i}){const t=`${await this.apiEndpoint}/users/${await this.userId}/markAsRead`,s={notificationId:i};return this.apiCall(t,"PUT",s)}static async readSingleOrMultipleVerificationNotificationForUser({idOrIds:i}){const t=`${await this.apiEndpoint}/users/${await this.userId}/verification-notifications/read`,s={notifications:i};return this.apiCall(t,"POST",s)}static async readSingleOrMultipleNewsForUser({newsIds:i}){const t=`${await this.apiEndpoint}/users/${await this.userId}/news`,s={newsIds:i};return this.apiCall(t,"PUT",s)}static async readManyNotificationsForUser({notificationIds:i}){const t=`${await this.apiEndpoint}/users/${await this.userId}/markAsRead`,s={notifications:i};return this.apiCall(t,"POST",s)}}