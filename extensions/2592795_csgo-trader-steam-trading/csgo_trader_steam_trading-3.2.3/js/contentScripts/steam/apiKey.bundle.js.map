{"version":3,"file":"js/contentScripts/steam/apiKey.bundle.js","mappings":"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","sources":["webpack://csgotrader.app-extension/./node_modules/dompurify/dist/purify.js","webpack://csgotrader.app-extension/./node_modules/csgo-fade-percentage-calculator/dist/cjs/index.js","webpack://csgotrader.app-extension/./node_modules/csgo-fade-percentage-calculator/dist/cjs/modules/AcidFadeCalculator.js","webpack://csgotrader.app-extension/./node_modules/csgo-fade-percentage-calculator/dist/cjs/modules/AmberFadeCalculator.js","webpack://csgotrader.app-extension/./node_modules/csgo-fade-percentage-calculator/dist/cjs/modules/BaseCalculator.js","webpack://csgotrader.app-extension/./node_modules/csgo-fade-percentage-calculator/dist/cjs/modules/FadeCalculator.js","webpack://csgotrader.app-extension/./node_modules/csgo-fade-percentage-calculator/dist/cjs/modules/RandomNumberGenerator.js","webpack://csgotrader.app-extension/webpack/bootstrap","webpack://csgotrader.app-extension/webpack/runtime/compat get default export","webpack://csgotrader.app-extension/webpack/runtime/define property getters","webpack://csgotrader.app-extension/webpack/runtime/hasOwnProperty shorthand","webpack://csgotrader.app-extension/./src/utils/static/exteriors.js","webpack://csgotrader.app-extension/./src/utils/static/pricing.js","webpack://csgotrader.app-extension/./src/utils/static/rarities.js","webpack://csgotrader.app-extension/./src/utils/static/qualities.js","webpack://csgotrader.app-extension/./src/utils/simpleUtils.js","webpack://csgotrader.app-extension/./src/utils/static/sortingModes.js","webpack://csgotrader.app-extension/./src/utils/static/friendRequests.js","webpack://csgotrader.app-extension/./src/utils/static/offers.js","webpack://csgotrader.app-extension/./src/utils/injection.js","webpack://csgotrader.app-extension/./src/utils/static/storageKeys.js","webpack://csgotrader.app-extension/./src/utils/utilsModular.js","webpack://csgotrader.app-extension/./src/contentScripts/steam/apiKey.js","webpack://csgotrader.app-extension/./src/utils/steamID.js","webpack://csgotrader.app-extension/./src/utils/tradeOffers.js"],"sourcesContent":["/*! @license DOMPurify 3.0.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.5/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n  /* Add properties to a lookup table */\n\n  function addToSet(set, array, transformCaseFunc) {\n    var _transformCaseFunc;\n\n    transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;\n\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    let l = array.length;\n\n    while (l--) {\n      let element = array[l];\n\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n  /* Shallow clone an object */\n\n  function clone(object) {\n    const newObject = create(null);\n\n    for (const [property, value] of entries(object)) {\n      newObject[property] = value;\n    }\n\n    return newObject;\n  }\n  /* This method automatically checks if the prop is function\n   * or getter and behaves accordingly. */\n\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']); // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  const DOCTYPE_NAME = seal(/^html$/i);\n\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    ERB_EXPR: ERB_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR,\n    DATA_ATTR: DATA_ATTR,\n    ARIA_ATTR: ARIA_ATTR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    DOCTYPE_NAME: DOCTYPE_NAME\n  });\n\n  const getGlobal = () => typeof window === 'undefined' ? null : window;\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */\n\n\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    } // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n\n\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n\n    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n      suffix = purifyHostElement.getAttribute(ATTR_NAME);\n    }\n\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    const DOMPurify = root => createDOMPurify(root);\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n\n\n    DOMPurify.version = '3.0.5';\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n\n    const originalDocument = window.document;\n    const currentScript = originalDocument.currentScript;\n    let {\n      document\n    } = window;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    let trustedTypesPolicy;\n    let emptyHTML = '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = {};\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n    /* Allowed attribute names */\n\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n    let FORBID_TAGS = null;\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n    let FORBID_ATTR = null;\n    /* Decide if ARIA attributes are okay */\n\n    let ALLOW_ARIA_ATTR = true;\n    /* Decide if custom data attributes are okay */\n\n    let ALLOW_DATA_ATTR = true;\n    /* Decide if unknown protocols are okay */\n\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n\n    let SAFE_FOR_TEMPLATES = false;\n    /* Decide if document with <html>... should be returned */\n\n    let WHOLE_DOCUMENT = false;\n    /* Track whether config is already set on this instance of DOMPurify. */\n\n    let SET_CONFIG = false;\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n\n    let FORCE_BODY = false;\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n\n    let RETURN_DOM = false;\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n    let RETURN_DOM_FRAGMENT = false;\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n\n    let RETURN_TRUSTED_TYPE = false;\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n\n    let SANITIZE_DOM = true;\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n    /* Keep element content when removing element? */\n\n    let KEEP_CONTENT = true;\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n\n    let IN_PLACE = false;\n    /* Allow usage of profiles like html, svg and mathMl */\n\n    let USE_PROFILES = {};\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n    /* Tags that are safe for data: URIs */\n\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n    /* Attributes safe for values like \"javascript:\" */\n\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n    /* Allowed XHTML+XML namespaces */\n\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n    /* Parsing of strict XHTML documents */\n\n    let PARSER_MEDIA_TYPE;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc;\n    /* Keep a reference to config to pass to hooks */\n\n    let CONFIG = null;\n    /* Ideally, do not touch anything below this line */\n\n    /* ______________________________________________ */\n\n    const formElement = document.createElement('form');\n\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n\n\n    const _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n      /* Shield configuration object from tampering */\n\n\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n      /* Shield configuration object from prototype pollution */\n\n\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n      /* Set configuration parameters */\n\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n      /* Parse profile info */\n\n\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [...text]);\n        ALLOWED_ATTR = [];\n\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n      /* Merge configuration parameters */\n\n\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n      /* Add #text in case KEEP_CONTENT is set to true */\n\n\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      if (cfg.TRUSTED_TYPES_POLICY) {\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n        }\n\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n        } // Overwrite existing TrustedTypes policy.\n\n\n        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY; // Sign local variables required by `sanitize`.\n\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      } else {\n        // Uninitialized policy, attempt to initialize the internal dompurify policy.\n        if (trustedTypesPolicy === undefined) {\n          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n        } // If creating the internal policy succeeded sign internal variables.\n\n\n        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        }\n      } // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n\n\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n\n    const ALL_SVG_TAGS = addToSet({}, svg$1);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n    const ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n    /**\n     *\n     *\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        } // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n\n\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        } // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n\n\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        } // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n\n\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        } // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n\n\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        } // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n\n\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      } // For XHTML and XML documents that support custom namespaces\n\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      } // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n\n\n      return false;\n    };\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n\n\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.remove();\n      }\n    };\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n\n\n    const _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n\n\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc;\n      let leadingWhitespace;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n      /* Use createHTMLDocument in case DOMParser is not available */\n\n\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {// Syntax error if dirtyPayload is invalid xml\n        }\n      }\n\n      const body = doc.body || doc.documentElement;\n\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n      /* Work on whole document or just its body */\n\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n\n\n    const _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n    };\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n\n\n    const _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n    };\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n\n\n    const _isNode = function _isNode(object) {\n      return typeof Node === 'object' ? object instanceof Node : object && typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n\n\n    const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n\n\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeElements', currentNode, null);\n      /* Check if element is clobbered or can clobber */\n\n\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Now let's check the element's type and name */\n\n\n      const tagName = transformCaseFunc(currentNode.nodeName);\n      /* Execute a hook if present */\n\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n      /* Detect mXSS attempts abusing namespace confusion */\n\n\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Remove element if anything forbids its presence */\n\n\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n        }\n        /* Keep content except for bad-listed elements */\n\n\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n\n            for (let i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Check whether element has a valid namespace */\n\n\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Make sure that older browsers don't get fallback-tag mXSS */\n\n\n      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Sanitize element content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR, ' ');\n        content = stringReplace(content, ERB_EXPR, ' ');\n        content = stringReplace(content, TMPLIT_EXPR, ' ');\n\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n\n\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n\n\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n        return false;\n      } else ;\n\n      return true;\n    };\n    /**\n     * _basicCustomElementCheck\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     * @param {string} tagName name of the tag of the node to sanitize\n     */\n\n\n    const _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n      return tagName.indexOf('-') > 0;\n    };\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n\n\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      let attr;\n      let value;\n      let lcName;\n      let l;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      const {\n        attributes\n      } = currentNode;\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n      /* Go backwards over all attributes; safely remove bad ones */\n\n      while (l--) {\n        attr = attributes[l];\n        const {\n          name,\n          namespaceURI\n        } = attr;\n        value = name === 'value' ? attr.value : stringTrim(attr.value);\n        lcName = transformCaseFunc(name);\n        /* Execute a hook if present */\n\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n        /* Remove attribute */\n\n\n        _removeAttribute(name, currentNode);\n        /* Did the hooks approve of the attribute? */\n\n\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n        /* Work around a security issue in jQuery 3.0 */\n\n\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n\n          continue;\n        }\n        /* Sanitize attribute content to be template-safe */\n\n\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR, ' ');\n          value = stringReplace(value, ERB_EXPR, ' ');\n          value = stringReplace(value, TMPLIT_EXPR, ' ');\n        }\n        /* Is `value` valid for this attribute? */\n\n\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n\n\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n        /* Handle attributes that require Trusted Types */\n\n\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                {\n                  value = trustedTypesPolicy.createHTML(value);\n                  break;\n                }\n\n              case 'TrustedScriptURL':\n                {\n                  value = trustedTypesPolicy.createScriptURL(value);\n                  break;\n                }\n            }\n          }\n        }\n        /* Handle invalid data-* attribute set by try-catching it */\n\n\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n\n\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode;\n\n      const shadowIterator = _createIterator(fragment);\n      /* Execute a hook if present */\n\n\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n        /* Sanitize tags and elements */\n\n\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n        /* Deep shadow DOM detected */\n\n\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(shadowNode);\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n\n\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body;\n      let importedNode;\n      let currentNode;\n      let returnNode;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n\n      IS_EMPTY_INPUT = !dirty;\n\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n      /* Stringify, in case dirty is an object */\n\n\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        if (typeof dirty.toString === 'function') {\n          dirty = dirty.toString();\n\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        } else {\n          throw typeErrorCreate('toString is not a function');\n        }\n      }\n      /* Return dirty HTML if DOMPurify cannot run */\n\n\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n      /* Assign config vars */\n\n\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n      /* Clean up removed elements */\n\n\n      DOMPurify.removed = [];\n      /* Check if dirty is correctly typed for IN_PLACE */\n\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n        /* Initialize the document to work on */\n\n\n        body = _initDocument(dirty);\n        /* Check we have a DOM node from the data */\n\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n      /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n      /* Get node iterator */\n\n\n      const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n      /* Now start iterating over the created document */\n\n\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n        /* Shadow DOM detected, sanitize it */\n\n\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(currentNode);\n      }\n      /* If we sanitized `dirty` in-place, return it. */\n\n\n      if (IN_PLACE) {\n        return dirty;\n      }\n      /* Return sanitized string or DOM */\n\n\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n      /* Serialize doctype if allowed */\n\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n      /* Sanitize final string template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n        serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n\n\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n\n      SET_CONFIG = true;\n    };\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n\n\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n\n\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n\n\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     * @return {Function} removed(popped) hook\n     */\n\n\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n\n\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n\n\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AcidFadeCalculator = exports.AmberFadeCalculator = exports.FadeCalculator = void 0;\nconst FadeCalculator_1 = require(\"./modules/FadeCalculator\");\nconst AmberFadeCalculator_1 = require(\"./modules/AmberFadeCalculator\");\nconst AcidFadeCalculator_1 = require(\"./modules/AcidFadeCalculator\");\nexports.FadeCalculator = new FadeCalculator_1.default();\nexports.AmberFadeCalculator = new AmberFadeCalculator_1.default();\nexports.AcidFadeCalculator = new AcidFadeCalculator_1.default();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseCalculator_1 = require(\"./BaseCalculator\");\nclass AcidFadeCalculator extends BaseCalculator_1.default {\n    constructor() {\n        super(...arguments);\n        this.weapons = [\n            'SSG 08',\n        ];\n        this.reversedWeapons = [\n            'SSG 08',\n        ];\n        this.tradeUpWeapons = [\n            'SSG 08',\n        ];\n        this.configs = {\n            default: {\n                pattern_offset_x_start: -2.4,\n                pattern_offset_x_end: -2.1,\n                pattern_offset_y_start: 0.0,\n                pattern_offset_y_end: 0.0,\n                pattern_rotate_start: -55,\n                pattern_rotate_end: -65,\n            },\n        };\n    }\n}\nexports.default = AcidFadeCalculator;\n//# sourceMappingURL=AcidFadeCalculator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseCalculator_1 = require(\"./BaseCalculator\");\nclass AmberFadeCalculator extends BaseCalculator_1.default {\n    constructor() {\n        super(...arguments);\n        this.weapons = [\n            'AUG',\n            'Galil AR',\n            'MAC-10',\n            'P2000',\n            'R8 Revolver',\n            'Sawed-Off',\n        ];\n        this.reversedWeapons = [];\n        this.tradeUpWeapons = [\n            'AUG',\n            'Galil AR',\n            'MAC-10',\n            'P2000',\n            'R8 Revolver',\n            'Sawed-Off',\n        ];\n        this.configs = {\n            default: {\n                pattern_offset_x_start: -0.7,\n                pattern_offset_x_end: -0.7,\n                pattern_offset_y_start: -0.7,\n                pattern_offset_y_end: -0.7,\n                pattern_rotate_start: -55,\n                pattern_rotate_end: -65,\n            },\n        };\n    }\n}\nexports.default = AmberFadeCalculator;\n//# sourceMappingURL=AmberFadeCalculator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst RandomNumberGenerator_1 = require(\"./RandomNumberGenerator\");\nclass BaseCalculator {\n    constructor() {\n        this.minPercentage = 80;\n    }\n    getSupportedWeapons() {\n        return this.weapons;\n    }\n    getFadePercentage(weapon, seed) {\n        const percentages = this.getFadePercentages(weapon);\n        return percentages[seed];\n    }\n    getAllFadePercentages() {\n        return this.weapons.map((weapon) => ({\n            weapon,\n            percentages: this.getFadePercentages(weapon),\n        }));\n    }\n    getFadePercentages(weapon) {\n        if (!this.weapons.includes(weapon)) {\n            throw new Error(`The weapon \"${weapon}\" is currently not supported.`);\n        }\n        const config = this.configs[weapon] || this.configs.default;\n        const rawResults = [];\n        const maxSeed = this.tradeUpWeapons.includes(weapon)\n            ? 1000\n            : 999;\n        for (let i = 0; i <= maxSeed; i += 1) {\n            const randomNumberGenerator = new RandomNumberGenerator_1.default();\n            randomNumberGenerator.setSeed(i);\n            const xOffset = randomNumberGenerator.randomFloat(config.pattern_offset_x_start, config.pattern_offset_x_end);\n            randomNumberGenerator.randomFloat(config.pattern_offset_y_start, config.pattern_offset_y_end);\n            const rotation = randomNumberGenerator.randomFloat(config.pattern_rotate_start, config.pattern_rotate_end);\n            let rawResult;\n            const usesRotation = config.pattern_rotate_start !== config.pattern_rotate_end;\n            const usesXOffset = config.pattern_offset_x_start !== config.pattern_offset_x_end;\n            if (usesRotation && usesXOffset) {\n                rawResult = rotation * xOffset;\n            }\n            else if (usesRotation) {\n                rawResult = rotation;\n            }\n            else {\n                rawResult = xOffset;\n            }\n            rawResults.push(rawResult);\n        }\n        const isReversed = this.reversedWeapons.includes(weapon);\n        let bestResult;\n        let worstResult;\n        if (isReversed) {\n            bestResult = Math.min(...rawResults);\n            worstResult = Math.max(...rawResults);\n        }\n        else {\n            bestResult = Math.max(...rawResults);\n            worstResult = Math.min(...rawResults);\n        }\n        const resultRange = worstResult - bestResult;\n        const percentageResults = rawResults.map((rawResult) => (worstResult - rawResult) / resultRange);\n        const sortedPercentageResults = [...percentageResults].sort((a, b) => a - b);\n        return percentageResults.map((percentageResult, i) => ({\n            seed: i,\n            percentage: this.minPercentage + (percentageResult * (100 - this.minPercentage)),\n            ranking: Math.min(sortedPercentageResults.indexOf(percentageResult) + 1, sortedPercentageResults.length - sortedPercentageResults.indexOf(percentageResult)),\n        }));\n    }\n}\nexports.default = BaseCalculator;\n//# sourceMappingURL=BaseCalculator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseCalculator_1 = require(\"./BaseCalculator\");\nclass FadeCalculator extends BaseCalculator_1.default {\n    constructor() {\n        super(...arguments);\n        this.weapons = [\n            'AWP',\n            'Bayonet',\n            'Bowie Knife',\n            'Butterfly Knife',\n            'Classic Knife',\n            'Falchion Knife',\n            'Flip Knife',\n            'Glock-18',\n            'Gut Knife',\n            'Huntsman Knife',\n            'Karambit',\n            'Kukri Knife',\n            'M4A1-S',\n            'M9 Bayonet',\n            'MAC-10',\n            'MP7',\n            'Navaja Knife',\n            'Nomad Knife',\n            'Paracord Knife',\n            'R8 Revolver',\n            'Shadow Daggers',\n            'Skeleton Knife',\n            'Stiletto Knife',\n            'Survival Knife',\n            'Talon Knife',\n            'UMP-45',\n            'Ursus Knife',\n        ];\n        this.reversedWeapons = [\n            'AWP',\n            'Karambit',\n            'MP7',\n            'Talon Knife',\n        ];\n        this.tradeUpWeapons = [\n            'AWP',\n            'Glock-18',\n            'M4A1-S',\n            'MAC-10',\n            'MP7',\n            'R8 Revolver',\n            'UMP-45',\n        ];\n        this.configs = {\n            default: {\n                pattern_offset_x_start: -0.7,\n                pattern_offset_x_end: -0.7,\n                pattern_offset_y_start: -0.7,\n                pattern_offset_y_end: -0.7,\n                pattern_rotate_start: -55,\n                pattern_rotate_end: -65,\n            },\n            MP7: {\n                pattern_offset_x_start: -0.9,\n                pattern_offset_x_end: -0.3,\n                pattern_offset_y_start: -0.7,\n                pattern_offset_y_end: -0.5,\n                pattern_rotate_start: -55,\n                pattern_rotate_end: -65,\n            },\n            'M4A1-S': {\n                pattern_offset_x_start: -0.14,\n                pattern_offset_x_end: 0.05,\n                pattern_offset_y_start: 0,\n                pattern_offset_y_end: 0,\n                pattern_rotate_start: -45,\n                pattern_rotate_end: -45,\n            },\n        };\n    }\n}\nexports.default = FadeCalculator;\n//# sourceMappingURL=FadeCalculator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass RandomNumberGenerator {\n    constructor() {\n        this.mIdum = 0;\n        this.mIy = 0;\n        this.mIv = [];\n        this.NTAB = 32;\n        this.IA = 16807;\n        this.IM = 2147483647;\n        this.IQ = 127773;\n        this.IR = 2836;\n        this.NDIV = 1 + (this.IM - 1) / this.NTAB;\n        this.AM = 1.0 / this.IM;\n        this.RNMX = 1.0 - 1.2e-7;\n    }\n    setSeed(seed) {\n        this.mIdum = seed;\n        if (seed >= 0) {\n            this.mIdum = -seed;\n        }\n        this.mIy = 0;\n    }\n    generateRandomNumber() {\n        let k;\n        let j;\n        if (this.mIdum <= 0 || this.mIy === 0) {\n            if (-this.mIdum < 1) {\n                this.mIdum = 1;\n            }\n            else {\n                this.mIdum = -this.mIdum;\n            }\n            for (j = this.NTAB + 7; j >= 0; j -= 1) {\n                k = Math.floor(this.mIdum / this.IQ);\n                this.mIdum = Math.floor(this.IA * (this.mIdum - k * this.IQ) - this.IR * k);\n                if (this.mIdum < 0) {\n                    this.mIdum += this.IM;\n                }\n                if (j < this.NTAB) {\n                    this.mIv[j] = this.mIdum;\n                }\n            }\n            [this.mIy] = this.mIv;\n        }\n        k = Math.floor(this.mIdum / this.IQ);\n        this.mIdum = Math.floor(this.IA * (this.mIdum - k * this.IQ) - this.IR * k);\n        if (this.mIdum < 0) {\n            this.mIdum += this.IM;\n        }\n        j = Math.floor(this.mIy / this.NDIV);\n        this.mIy = Math.floor(this.mIv[j]);\n        this.mIv[j] = this.mIdum;\n        return this.mIy;\n    }\n    randomFloat(low, high) {\n        let float = this.AM * this.generateRandomNumber();\n        if (float > this.RNMX) {\n            float = this.RNMX;\n        }\n        return (float * (high - low)) + low;\n    }\n}\nexports.default = RandomNumberGenerator;\n//# sourceMappingURL=RandomNumberGenerator.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const exteriors = {\n  factory_new: {\n    internal_name: 'WearCategory0',\n    type: 'factory_new',\n    name: 'Factory New',\n    localized_name: chrome.i18n.getMessage('fn_long'),\n    short: 'FN',\n    localized_short: chrome.i18n.getMessage('fn_short'),\n  },\n  minimal_wear: {\n    internal_name: 'WearCategory1',\n    type: 'minimal_wear',\n    name: 'Minimal Wear',\n    localized_name: chrome.i18n.getMessage('mw_long'),\n    short: 'MW',\n    localized_short: chrome.i18n.getMessage('mw_short'),\n  },\n  field_tested: {\n    internal_name: 'WearCategory2',\n    type: 'field_tested',\n    name: 'Field-Tested',\n    localized_name: chrome.i18n.getMessage('ft_long'),\n    short: 'FT',\n    localized_short: chrome.i18n.getMessage('ft_short'),\n  },\n  well_worn: {\n    internal_name: 'WearCategory3',\n    type: 'well_worn',\n    name: 'Well-Worn',\n    localized_name: chrome.i18n.getMessage('ww_long'),\n    short: 'WW',\n    localized_short: chrome.i18n.getMessage('ww_short'),\n  },\n  battle_scarred: {\n    internal_name: 'WearCategory4',\n    type: 'battle_scarred',\n    name: 'Battle-Scarred',\n    localized_name: chrome.i18n.getMessage('bs_long'),\n    short: 'BS',\n    localized_short: chrome.i18n.getMessage('bs_short'),\n  },\n};\n\nexport default exteriors;\n","const currencies = {\n  USD: {\n    short: 'USD',\n    long: 'United States dollar',\n    sign: '$',\n  },\n  EUR: {\n    short: 'EUR',\n    long: 'Euro',\n    sign: '€',\n  },\n  GBP: {\n    short: 'GBP',\n    long: 'Pound sterling',\n    sign: '£',\n  },\n  KEY: {\n    short: 'KEY',\n    long: 'Case Key',\n    sign: 'K',\n  },\n  CNY: {\n    short: 'CNY',\n    long: 'Renminbi',\n    sign: '¥',\n  },\n  JPY: {\n    short: 'JPY',\n    long: 'Japanese yen',\n    sign: '¥',\n  },\n  CAD: {\n    short: 'CAD',\n    long: 'Canadian dollar',\n    sign: 'C$',\n  },\n  AUD: {\n    short: 'AUD',\n    long: 'Australian dollar',\n    sign: 'A$',\n  },\n  HKD: {\n    short: 'HKD',\n    long: 'Hong Kong dollar',\n    sign: 'HK$',\n  },\n  ISK: {\n    short: 'ISK',\n    long: 'Icelandic króna',\n    sign: 'kr',\n  },\n  PHP: {\n    short: 'PHP',\n    long: 'Philippine peso',\n    sign: '₱',\n  },\n  DKK: {\n    short: 'DKK',\n    long: 'Danish krone',\n    sign: 'kr',\n  },\n  HUF: {\n    short: 'HUF',\n    long: 'Hungarian forint',\n    sign: 'Ft',\n  },\n  CZK: {\n    short: 'CZK',\n    long: 'Czech koruna',\n    sign: 'Kč',\n  },\n  RON: {\n    short: 'RON',\n    long: 'Romanian leu',\n    sign: 'L',\n  },\n  SEK: {\n    short: 'SEK',\n    long: 'Swedish krona',\n    sign: 'kr',\n  },\n  IDR: {\n    short: 'IDR',\n    long: 'Indonesian rupiah',\n    sign: 'Rp',\n  },\n  INR: {\n    short: 'INR',\n    long: 'Indian rupee',\n    sign: '₹',\n  },\n  BRL: {\n    short: 'BRL',\n    long: 'Brazilian real',\n    sign: 'R$',\n  },\n  RUB: {\n    short: 'RUB',\n    long: 'Russian ruble',\n    sign: '₽',\n  },\n  HRK: {\n    short: 'HRK',\n    long: 'Croatian kuna',\n    sign: 'kn',\n  },\n  THB: {\n    short: 'THB',\n    long: 'Thai baht',\n    sign: '฿',\n  },\n  CHF: {\n    short: 'CHF',\n    long: 'Swiss franc',\n    sign: 'CHF',\n  },\n  MYR: {\n    short: 'MYR',\n    long: 'Malaysian ringgit',\n    sign: 'RM',\n  },\n  BGN: {\n    short: 'BGN',\n    long: 'Bulgarian lev',\n    sign: 'лв',\n  },\n  TRY: {\n    short: 'TRY',\n    long: 'Turkish lira',\n    sign: '₺',\n  },\n  NOK: {\n    short: 'NOK',\n    long: 'Norwegian krone',\n    sign: 'kr',\n  },\n  NZD: {\n    short: 'NZD',\n    long: 'New Zealand dollar',\n    sign: 'NZ$',\n  },\n  ZAR: {\n    short: 'ZAR',\n    long: 'South African rand',\n    sign: 'R',\n  },\n  MXN: {\n    short: 'MXN',\n    long: 'Mexican peso',\n    sign: 'Mex$',\n  },\n  SGD: {\n    short: 'SGD',\n    long: 'Singapore dollar',\n    sign: 'S$',\n  },\n  ILS: {\n    short: 'ILS',\n    long: 'Israeli new shekel',\n    sign: '₪',\n  },\n  KRW: {\n    short: 'KRW',\n    long: 'South Korean won',\n    sign: '₩',\n  },\n  PLN: {\n    short: 'PLN',\n    long: 'Polish złoty',\n    sign: 'zł',\n  },\n  BTC: {\n    short: 'BTC',\n    long: 'Bitcoin',\n    sign: '₿',\n  },\n  ETH: {\n    short: 'ETH',\n    long: 'Ethereum',\n    sign: 'Ξ',\n  },\n  FET: {\n    short: 'FET',\n    long: 'Finney (0.001 of an Ether)',\n    sign: 'fΞ',\n  },\n  AED: {\n    short: 'AED',\n    long: 'United Arab Emirates Dirham',\n    sign: 'د.إ',\n  },\n  ARS: {\n    short: 'ARS',\n    long: 'Argentine Peso',\n    sign: 'AP$',\n  },\n  CLP: {\n    short: 'CLP',\n    long: 'Chilean Peso',\n    sign: 'CP$',\n  },\n  COP: {\n    short: 'COP',\n    long: 'Colombian Peso',\n    sign: 'COL$',\n  },\n  CRC: {\n    short: 'CRC',\n    long: 'Costa Rican Colón',\n    sign: '₡',\n  },\n  KWD: {\n    short: 'KWD',\n    long: 'Kuwaiti Dinar',\n    sign: 'د.ك',\n  },\n  KZT: {\n    short: 'KZT',\n    long: 'Kazakhstani Tenge',\n    sign: '₸',\n  },\n  PEN: {\n    short: 'PEN',\n    long: 'Peruvian Nuevo Sol',\n    sign: 'S/',\n  },\n  QAR: {\n    short: 'QAR',\n    long: 'Qatari Riyal',\n    sign: 'ر.ق',\n  },\n  SAR: {\n    short: 'SAR',\n    long: 'Saudi Riyal',\n    sign: '﷼',\n  },\n  TWD: {\n    short: 'TWD',\n    long: 'New Taiwan Dollar',\n    sign: 'NT$',\n  },\n  UAH: {\n    short: 'UAH',\n    long: 'Ukrainian Hryvnia',\n    sign: '₴',\n  },\n  UYU: {\n    short: 'UYU',\n    long: 'Uruguayan Peso',\n    sign: '$U',\n  },\n  VND: {\n    short: 'VND',\n    long: 'Vietnamese Dong',\n    sign: '₫',\n  },\n  GEL: {\n    short: 'GEL',\n    long: 'Georgian Lari',\n    sign: '₾',\n  },\n};\n\nconst pricingProviders = {\n  csgotrader: {\n    name: 'csgotrader',\n    long: 'CS2 Trader',\n    short: 'CS',\n    url: 'http://csgotrader.app/prices/',\n    description: 'The extension\\'s own pricing, aims to be accurate and to provide some kind of price for every item.',\n    pricing_modes: {\n      csgotrader: {\n        description: 'CS2 Trader price',\n        name: 'csgotrader',\n        long: 'CS2 Trader price',\n      },\n    },\n  },\n  bitskins: {\n    name: 'bitskins',\n    long: 'BITSKINS',\n    short: 'BS',\n    url: 'https://bitskins.com/',\n    description: 'BITSKINS is a \"real money\" marketplace where you can buy and sell skins. They provide sales data through their API.',\n    pricing_modes: {\n      bitskins: {\n        description: 'Standard BITSKINS price, I am not sure how they calculate it',\n        name: 'bitskins',\n        long: 'Standard BITSKINS price',\n      },\n      instant_sale: {\n        description: 'Instant sale - what bitskins pays for your item when they buy it themselves',\n        name: 'instant_sale',\n        long: 'Instant sale price',\n      },\n    },\n  },\n  steam: {\n    name: 'steam',\n    long: 'Steam Market',\n    short: 'SM',\n    url: 'https://steamcommunity.com/market/',\n    description: 'Steam Community Market sales history.',\n    pricing_modes: {\n      last_24h: {\n        description: 'Sales from the past 24 hours',\n        name: 'last_24h',\n        long: 'Last 24 Hours',\n      },\n      last_7d: {\n        description: 'Sales from the past 7 days',\n        name: 'last_7d',\n        long: 'Last 7 days',\n      },\n      last_30d: {\n        description: 'Sales from the past 30 days',\n        name: 'last_30d',\n        long: 'Last 30 days',\n      },\n    },\n  },\n  csmoney: {\n    name: 'csmoney',\n    long: 'CS.MONEY',\n    short: 'CM',\n    url: 'https://cs.money/',\n    description: \"CS.MONEY is a tradebot site that has it's own pricing. They also have different prices for each doppler phase.\",\n    pricing_modes: {\n      csmoney: {\n        description: 'CS.MONEY price',\n        name: 'csmoney',\n        long: 'CS.MONEY Price',\n      },\n    },\n  },\n  csgotm: {\n    name: 'csgotm',\n    long: 'CSGO.TM',\n    short: 'CT',\n    url: 'https://market.csgo.com/',\n    description: \"CSGO.TM or market.csgo.com is a Russian site for real money sales. They also provide pricing, but prices are missing for many items so I don't recommend using it.\",\n    pricing_modes: {\n      csgotm: {\n        description: 'CSGO.TM price',\n        name: 'csgotm',\n        long: 'CSGO.TM Price',\n      },\n    },\n  },\n  lootfarm: {\n    name: 'lootfarm',\n    long: 'LOOT.FARM',\n    short: 'LF',\n    url: 'https://loot.farm/',\n    description: 'LOOT.FARM is a tradebot site with public pricing, they tend to overvalue everything in general, so their prices differ from the others.',\n    pricing_modes: {\n      lootfarm: {\n        description: 'LOOT.FARM price',\n        name: 'lootfarm',\n        long: 'LOOT.FARM Price',\n      },\n    },\n  },\n  skinport: {\n    name: 'skinport',\n    long: 'Skinport.com',\n    short: 'SC',\n    url: 'https://skinport.com/?r=gery',\n    description: 'Skinport is a real money skin marketplace offering good prices and premium service',\n    pricing_modes: {\n      suggested_price: {\n        description: 'Skinport suggested price',\n        name: 'suggested_price',\n        long: 'Skinport suggested price',\n      },\n      starting_at: {\n        description: 'Skinport starting at price',\n        name: 'starting_at',\n        long: 'Skinport starting at',\n      },\n    },\n  },\n  csgoempire: {\n    name: 'csgoempire',\n    long: 'CSGOEmpire',\n    short: 'EM',\n    url: 'https://csgoempire.com/',\n    description: 'CSGOEmpire is a popular gambling site',\n    pricing_modes: {\n      csgoempire: {\n        description: 'CSGOEmpire price',\n        name: 'csgoempire',\n        long: 'CSGOEmpire price (by pricempire.com)',\n      },\n    },\n  },\n  swapgg: {\n    name: 'swapgg',\n    long: 'swap.gg',\n    short: 'SW',\n    url: 'https://swap.gg/',\n    description: 'swap.gg is an automated trade bot site',\n    pricing_modes: {\n      swapgg: {\n        description: 'swap.gg price',\n        name: 'swapgg',\n        long: 'swap.gg price (by pricempire.com)',\n      },\n    },\n  },\n  csgoexo: {\n    name: 'csgoexo',\n    long: 'CSGOEXO.COM',\n    short: 'EX',\n    url: 'https://csgoexo.com/',\n    description: 'CSGOEXO.COM is an automated trade bot site',\n    pricing_modes: {\n      csgoexo: {\n        description: 'CSGOEXO.COM.gg price',\n        name: 'csgoexo',\n        long: 'CSGOEXO.COM price (by pricempire.com)',\n      },\n    },\n  },\n  buff163: {\n    name: 'buff163',\n    long: 'BUFF163',\n    short: 'BF',\n    url: 'https://buff.163.com/',\n    description: 'BUFF is a Chinese peer to peer skin marketplace',\n    pricing_modes: {\n      starting_at: {\n        description: 'BUFF Starting at (lowest listing) price',\n        name: 'starting_at',\n        long: 'BUFF Starting at (by pricempire.com)',\n      },\n      highest_order: {\n        description: 'BUFF Highest order price',\n        name: 'highest_order',\n        long: 'BUFF Highest order (by pricempire.com)',\n      },\n    },\n  },\n  skinwallet: {\n    name: 'skinwallet',\n    long: 'Skinwallet.com',\n    short: 'SW',\n    url: 'https://www.skinwallet.com/',\n    description: 'SkinWallet is a market place and instant cash-for-skin service',\n    pricing_modes: {\n      skinwallet: {\n        description: 'Skinwallet.com price',\n        name: 'skinwallet',\n        long: 'Skinwallet.com price',\n      },\n    },\n  },\n  cstrade: {\n    name: 'cstrade',\n    long: 'CS.TRADE',\n    short: 'CSTR',\n    url: 'https://cs.trade/',\n    description: 'CS.TRADE is a trade is a less-known trade bot site',\n    pricing_modes: {\n      cstrade: {\n        description: 'CS.TRADE price',\n        name: 'cstrade',\n        long: 'CS.TRADE price',\n      },\n    },\n  },\n  csfloat: {\n    name: 'csfloat',\n    long: 'CSFloat.com',\n    short: 'CSFL',\n    url: 'https://csfloat.com/',\n    description: 'CSFloat Database amd p2p market',\n    pricing_modes: {\n      csfloat: {\n        description: 'CSFloat market price',\n        name: 'csfloat',\n        long: 'CSFloat price',\n      },\n    },\n  },\n  youpin: {\n    name: 'youpin',\n    long: 'YOUPIN898',\n    short: 'YP',\n    url: 'https://youpin898.com/',\n    description: 'New, emerging, china focused Buff alternative',\n    pricing_modes: {\n      youpin: {\n        description: 'YOUPIN898 market price',\n        name: 'youpin',\n        long: 'YOUPIN898 price',\n      },\n    },\n  },\n};\n\nconst realTimePricingModes = {\n  bid_price: {\n    key: 'bid_price',\n    name: 'Bid price - Current highest buy order',\n    description: 'Bid price - The value of the current highest buy order / bid for the item, also known as instant sell',\n  },\n  mid_price: {\n    key: 'mid_price',\n    name: 'Mid price - Average of the ask and bid prices',\n    description: 'Mid price - The average of ask and bid prices',\n  },\n  ask_price: {\n    key: 'ask_price',\n    name: 'Ask price - Current lowest listing / starting at',\n    description: 'The asking price, the price of the current lowest listing for the item, also known as the starting at price',\n  },\n};\n\n// Steam stores this data in the g_rgCurrencyData var in global.js\nconst steamCurrencyCodes = {\n  1: 'USD',\n  2: 'GBP',\n  3: 'EUR',\n  4: 'CHF',\n  5: 'RUB',\n  6: 'PLN',\n  7: 'BRL',\n  9: 'NOK',\n  10: 'IDR',\n  11: 'MYR',\n  12: 'PHP',\n  13: 'SGD',\n  14: 'THB',\n  15: 'VND',\n  16: 'KRW',\n  17: 'TRY',\n  18: 'UAH',\n  19: 'MXN',\n  20: 'CAD',\n  21: 'AUD',\n  22: 'NZD',\n  23: 'CNY',\n  24: 'INR',\n  25: 'CLP',\n  26: 'PEN',\n  27: 'COP',\n  28: 'ZAR',\n  29: 'HKD',\n  30: 'TWD',\n  31: 'SAR',\n  32: 'AED',\n  34: 'ARS',\n  35: 'ILS',\n  36: 'BYN',\n  37: 'KZT',\n  38: 'KWD',\n  39: 'QAR',\n  40: 'CRC',\n  41: 'UYU',\n  9000: 'RMB',\n};\n\nexport {\n  currencies, pricingProviders, realTimePricingModes, steamCurrencyCodes,\n};\n","const rarities = {\n  common: {\n    internal_name: 'Rarity_Common',\n    name: 'common',\n    prettyName: 'Common',\n  },\n  common_weapon: {\n    internal_name: 'Rarity_Common_Weapon',\n    name: 'common',\n    prettyName: 'Common Weapon',\n  },\n  uncommon: {\n    internal_name: 'Rarity_Uncommon',\n    name: 'uncommon',\n    prettyName: 'Uncommon',\n  },\n  uncommon_weapon: {\n    internal_name: 'Rarity_Uncommon_Weapon',\n    name: 'uncommon',\n    prettyName: 'Uncommon Weapon',\n  },\n  rare: {\n    internal_name: 'Rarity_Rare',\n    name: 'rare',\n    prettyName: 'Rare',\n  },\n  rare_weapon: {\n    internal_name: 'Rarity_Rare_Weapon',\n    name: 'rare',\n    prettyName: 'Rare Weapon',\n  },\n  rare_character: {\n    internal_name: 'Rarity_Rare_Character',\n    name: 'rare',\n    prettyName: 'Distinguished Agent',\n  },\n  mythical: {\n    internal_name: 'Rarity_Mythical',\n    name: 'mythical',\n    prettyName: 'Mythical',\n  },\n  mythical_weapon: {\n    internal_name: 'Rarity_Mythical_Weapon',\n    name: 'mythical',\n    prettyName: 'Mythical Weapon',\n  },\n  mythical_character: {\n    internal_name: 'Rarity_Mythical_Character',\n    name: 'mythical',\n    prettyName: 'Exceptional Agent',\n  },\n  legendary: {\n    internal_name: 'Rarity_Legendary',\n    name: 'legendary',\n    prettyName: 'Legendary',\n  },\n  legendary_weapon: {\n    internal_name: 'Rarity_Legendary_Weapon',\n    name: 'legendary',\n    prettyName: 'Legendary Weapon',\n  },\n  legendary_character: {\n    internal_name: 'Rarity_Legendary_Character',\n    name: 'legendary',\n    prettyName: 'Superior Agent',\n  },\n  ancient: {\n    internal_name: 'Rarity_Ancient',\n    name: 'ancient',\n    prettyName: 'Ancient',\n  },\n  ancient_weapon: {\n    internal_name: 'Rarity_Ancient_Weapon',\n    name: 'ancient',\n    prettyName: 'Ancient Weapon',\n  },\n  ancient_character: {\n    internal_name: 'Rarity_Ancient_Character',\n    name: 'ancient',\n    prettyName: 'Master Agent',\n  },\n  contraband: {\n    internal_name: 'Rarity_Contraband',\n    name: 'contraband',\n    prettyName: 'Contraband',\n  },\n  contraband_weapon: {\n    internal_name: 'Rarity_Contraband_Weapon',\n    name: 'contraband',\n    prettyName: 'Contraband Weapon',\n  },\n  default: {\n    internal_name: 'Rarity_Default',\n    name: 'stock',\n    prettyName: 'Default',\n  },\n  default_weapon: {\n    internal_name: 'Rarity_Default_Weapon',\n    name: 'stock',\n    prettyName: 'Default Weapon',\n  },\n};\n\nexport default rarities;\n","import rarities from 'utils/static/rarities';\n\nconst qualities = {\n  stock: {\n    name: 'stock',\n    prettyName: 'Stock',\n    color: '#6a6156',\n    backgroundcolor: '#453b30',\n  },\n  base_grade: {\n    name: 'base_grade',\n    prettyName: 'Base Grade',\n    color: '#FFFFFF',\n    backgroundcolor: '#7e7e7e',\n  },\n  consumer_grade: {\n    name: 'consumer_grade',\n    prettyName: 'Consumer Grade',\n    color: '#FFFFFF',\n    backgroundcolor: '#7e7e7e',\n  },\n  common: {\n    name: rarities.common.name,\n    prettyName: rarities.common.prettyName,\n    color: '#FFFFFF',\n    backgroundcolor: '#7e7e7e',\n  },\n  industrial_grade: {\n    name: 'industrial_grade',\n    prettyName: 'Industrial',\n    color: '#5e98d9',\n    backgroundcolor: '#3d6896',\n  },\n  uncommon: {\n    name: rarities.uncommon.name,\n    prettyName: rarities.uncommon.prettyName,\n    color: '#5e98d9',\n    backgroundcolor: '#3d6896',\n  },\n  milspec_grade: {\n    name: 'milspec_grade',\n    prettyName: 'Mil-Spec Grade',\n    color: '#4b69ff',\n    backgroundcolor: '#414e9c',\n  },\n  high_grade: {\n    name: 'high_grade',\n    prettyName: 'High Grade',\n    color: '#4b69ff',\n    backgroundcolor: '#414e9c',\n  },\n  rare: {\n    name: rarities.rare.name,\n    prettyName: rarities.rare.prettyName,\n    color: '#4b69ff',\n    backgroundcolor: '#414e9c',\n  },\n  restricted: {\n    name: 'restricted',\n    prettyName: 'Restricted',\n    color: '#8847ff',\n    backgroundcolor: '#50248e',\n  },\n  remarkable: {\n    name: 'remarkable',\n    prettyName: 'Remarkable',\n    color: '#8847ff',\n    backgroundcolor: '#50248e',\n  },\n  mythical: {\n    name: rarities.mythical.name,\n    prettyName: rarities.mythical.prettyName,\n    color: '#8847ff',\n    backgroundcolor: '#50248e',\n  },\n  classified: {\n    name: 'classified',\n    prettyName: 'Classified',\n    color: '#d32ce6',\n    backgroundcolor: '#6c297f',\n  },\n  legendary: {\n    name: rarities.legendary.name,\n    prettyName: rarities.legendary.prettyName,\n    color: '#d32ce6',\n    backgroundcolor: '#6c297f',\n  },\n  exotic: {\n    name: 'exotic',\n    prettyName: 'Exotic',\n    color: '#d32ce6',\n    backgroundcolor: '#6c297f',\n  },\n  extraordinary: {\n    name: 'extraordinary',\n    prettyName: 'Extraordinary',\n    color: '#eb4b4b',\n    backgroundcolor: '#653232',\n  },\n  covert: {\n    name: 'covert',\n    prettyName: 'Covert',\n    color: '#eb4b4b',\n    backgroundcolor: '#653232',\n  },\n  ancient: {\n    name: rarities.ancient.name,\n    prettyName: rarities.ancient.prettyName,\n    color: '#eb4b4b',\n    backgroundcolor: '#653232',\n  },\n  contraband: {\n    name: rarities.contraband.name,\n    prettyName: rarities.contraband.prettyName,\n    color: '#e4ae39',\n    backgroundcolor: '#b27d36',\n  },\n};\n\nexport default qualities;\n","// this utils module should never have any non-static dependencies\n\nconst getItemMarketLink = (appID, marketHashName) => {\n  return `https://steamcommunity.com/market/listings/${appID}/${marketHashName}`;\n};\n\nconst getItemInventoryLink = (steamID, appID, contextID, assetID) => {\n  return `https://steamcommunity.com/profiles/${steamID}/inventory/#${appID}_${contextID}_${assetID}`;\n};\n\nconst getOfferLink = (offerID) => {\n  return `https://steamcommunity.com/tradeoffer/${offerID}`;\n};\n\n// true when chrome or edge, false on ff\nconst isChromium = () => {\n  return chrome.runtime.getURL('/index.html').includes('chrome-extension');\n};\n\n// Create the offscreen document if it doesn't already exist\nconst createOffscreen = async (reasons, justification) => {\n  if (await chrome.offscreen.hasDocument()) return;\n  await chrome.offscreen.createDocument({\n    url: '/offScreen/offscreen.html',\n    reasons,\n    justification,\n  });\n};\n\n// https://stackoverflow.com/questions/67437180/play-audio-from-background-script-in-chrome-extention-manifest-v3\nconst playAudioChromium = async (source, sourceType, volume) => {\n  const sourceURL = sourceType === 'local'\n    ? chrome.runtime.getURL(source)\n    : source;\n  await createOffscreen([chrome.offscreen.Reason.AUDIO_PLAYBACK], 'to play notification sound in the background');\n  await chrome.runtime.sendMessage({ playAudio: { sourceURL, volume } });\n};\n\nconst playAudioFirefox = (source, sourceType, volume) => {\n  const sourceURL = sourceType === 'local'\n    ? chrome.runtime.getURL(source)\n    : source;\n  const audio = new Audio(sourceURL);\n  audio.volume = volume;\n  audio.play();\n};\n\nconst playAudio = isChromium() ? playAudioChromium : playAudioFirefox;\n\nconst getItemByNameAndGame = (inventory, appID, contextID, itemName) => {\n  return inventory.find((item) => {\n    return (item.market_hash_name === itemName\n      && item.appid === appID && item.contextid === contextID);\n  });\n};\n\nconst closeTab = () => new Promise((resolve, reject) => {\n  if (window.opener) {\n    window.close(); // only tabs opened by js can be closed by js\n    resolve('closed');\n  } else {\n    chrome.runtime.sendMessage({\n      closeTab: window.location.href,\n    }, () => {\n      reject('couldnt_close');\n    });\n  }\n});\n\nconst getFormattedPLPercentage = (giving, receiving) => {\n  return (giving === 0 || receiving === 0)\n    ? ''\n    : `(${(((receiving / giving) - 1) * 100).toFixed(2)}%)`;\n};\n\n// for phase detection we have to know if th item is a doppler\nconst isDopplerInName = (name) => {\n  // english and many other languages, polish iirc, simplified chinese, korean, bulgarian, russian\n  const patterns = ['Doppler', 'doppler', '多普勒', '도플러', 'Доплер', 'Волны'];\n  const dopplerCheckRegex = new RegExp(patterns.join('|'), 'i');\n  return dopplerCheckRegex.test(name);\n};\n\n// tries to parse which collection the item belongs to\n// if it find a collection it return its name as a string\n// otherwise return null\nconst getCollection = (descriptions) => {\n  let collectionName = null;\n\n  if (descriptions) {\n    descriptions.forEach((description) => {\n      if (description.value.slice(description.value.length - 11) === ' Collection') {\n        collectionName = description.value;\n      } else if (description.value.slice(description.value.length - 7) === ' Agents') {\n        collectionName = description.value;\n      }\n    });\n  }\n  return collectionName;\n};\n\n// not used atm\nconst generateInspectCommand = (fullName, fv, paintindex, defindex, paintseed, stickers) => {\n  // glove code starts with different name\n  const isGloves = fullName.includes('Gloves')\n    || fullName.includes('Wrap');\n\n  let stickerInfo = ' ';\n\n  if (stickers && stickers.length > 0) {\n    // parse the sticker array to a string like:\n    // `firstStickerId firstStickerWear secondStickerId secondStickerWear...`\n\n    for (let index = 0; index < 4; index += 1) {\n      const sticker = stickers.filter((stckr) => {\n        return stckr.slot === index;\n      })[0];\n\n      if (sticker) {\n        stickerInfo += `${sticker.stickerId} ${sticker.wear ? parseFloat(sticker.wear) : 0} `;\n      } else stickerInfo += '0 0 ';\n    }\n  }\n\n  // Join all into a string\n  return (\n    `!${isGloves ? 'gengl' : 'gen'} ${defindex} ${paintindex} ${paintseed} ${fv}${stickers ? stickerInfo : ''}`\n  );\n};\n\n// when the extension is updated or reloaded\n// the content scrips lose the ability to comminicate with the background script\n// this function reloads the page to fix that\nconst reloadPageOnExtensionUpdate = () => {\n  setInterval(() => {\n    if (!chrome.runtime?.id) window.location.reload();\n  }, 5000);\n};\n\nexport {\n  getItemMarketLink, getItemInventoryLink, getOfferLink, playAudio, isChromium,\n  getItemByNameAndGame, closeTab, isDopplerInName, getFormattedPLPercentage,\n  getCollection, generateInspectCommand, createOffscreen, reloadPageOnExtensionUpdate,\n};\n","const sortingModes = {\n  default: {\n    key: 'default',\n    name: 'Default (position last to first)',\n  },\n  reverse: {\n    key: 'reverse',\n    name: 'Reverse (position first to last)',\n  },\n  price_desc: {\n    key: 'price_desc',\n    name: 'Price (expensive to cheap)',\n  },\n  price_asc: {\n    key: 'price_asc',\n    name: 'Price (cheap to expensive)',\n  },\n  name_asc: {\n    key: 'name_asc',\n    name: 'Alphabetical (a to z)',\n  },\n  name_desc: {\n    key: 'name_desc',\n    name: 'Alphabetical (z to a)',\n  },\n  tradability_desc: {\n    key: 'tradability_desc',\n    name: 'Tradability (untradable to tradable)',\n  },\n  tradability_asc: {\n    key: 'tradability_asc',\n    name: 'Tradability (tradable to untradable)',\n  },\n  float_asc: {\n    key: 'float_asc',\n    name: 'Float (lowest to highest)',\n  },\n  float_desc: {\n    key: 'float_desc',\n    name: 'Float (highest to lowest)',\n  },\n  sticker_price_asc: {\n    key: 'sticker_price_asc',\n    name: 'Sticker price (cheap to expensive)',\n  },\n  sticker_price_desc: {\n    key: 'sticker_price_desc',\n    name: 'Sticker price (expensive to cheap)',\n  },\n  charm_price_asc: {\n    key: 'charm_price_asc',\n    name: 'Charm price (cheap to expensive)',\n  },\n  charm_price_desc: {\n    key: 'charm_price_desc',\n    name: 'Charm price (expensive to cheap)',\n  },\n};\n\nconst offersSortingModes = {\n  default: {\n    key: 'default',\n    name: 'Default (received last to first)',\n  },\n  reverse: {\n    key: 'reverse',\n    name: 'Reverse (received first to last)',\n  },\n  profit_amount: {\n    key: 'profit_amount',\n    name: 'Profit amount (most profitable to biggest loss)',\n  },\n  loss_amount: {\n    key: 'loss_amount',\n    name: 'Loss amount (biggest loss to most profitable)',\n  },\n  profit_percentage: {\n    key: 'profit_percentage',\n    name: 'Profit percentage (highest to lowest)',\n  },\n  loss_percentage: {\n    key: 'loss_percentage',\n    name: 'Loss percentage (lowest to highest)',\n  },\n  receiving_value: {\n    key: 'receiving_value',\n    name: 'Receiving side total value',\n  },\n  giving_value: {\n    key: 'giving_value',\n    name: 'Giving side total value',\n  },\n};\n\nconst listingsSortingModes = {\n  default: {\n    key: 'default',\n    name: 'Default Steam Order',\n  },\n  price_asc: sortingModes.price_asc,\n  price_desc: sortingModes.price_desc,\n  float_asc: sortingModes.float_asc,\n  float_desc: sortingModes.float_desc,\n  sticker_price_asc: sortingModes.sticker_price_asc,\n  sticker_price_desc: sortingModes.sticker_price_desc,\n  paint_index_asc: {\n    key: 'paint_index_asc',\n    name: 'Paint index (low to high)',\n  },\n  paint_index_desc: {\n    key: 'paint_index_desc',\n    name: 'Paint index (high to low)',\n  },\n  paint_seed_asc: {\n    key: 'paint_seed_asc',\n    name: 'Paint seed (low to high)',\n  },\n  paint_seed_desc: {\n    key: 'paint_seed_desc',\n    name: 'Paint seed (high to low)',\n  },\n};\n\nexport { sortingModes, offersSortingModes, listingsSortingModes };\n","const conditions = {\n  profile_private: {\n    key: 'profile_private',\n    pretty: 'Private profile',\n    description: 'The user has a private Steam profile',\n    with_value: false,\n  },\n  profile_public: {\n    key: 'profile_public',\n    pretty: 'Private public',\n    description: 'The user has a public Steam profile',\n    with_value: false,\n  },\n  steam_level_under: {\n    key: 'steam_level_under',\n    pretty: 'Steam level under',\n    description: 'User\\' Steam profile lever is under or the same as the set number',\n    with_value: true,\n    value_type: 'number',\n    default_value: 5,\n  },\n  steam_level_over: {\n    key: 'steam_level_over',\n    pretty: 'Steam level over',\n    description: 'User\\' Steam profile lever is over the set number',\n    with_value: true,\n    value_type: 'number',\n    default_value: 50,\n  },\n  vac_banned: {\n    key: 'vac_banned',\n    pretty: 'Vac banned',\n    description: 'The user has VAC ban(s) on their account',\n    with_value: false,\n  },\n  community_banned: {\n    key: 'community_banned',\n    pretty: 'Community banned',\n    description: 'The user is community banned on Steam',\n    with_value: false,\n  },\n  game_banned: {\n    key: 'game_banned',\n    pretty: 'Game banned',\n    description: 'The user is banned in some games (for example CS2 Overwatch banned)',\n    with_value: false,\n  },\n  trade_banned: {\n    key: 'trade_banned',\n    pretty: 'Trade banned',\n    description: 'The user is trade banned or on trade ban probation',\n    with_value: false,\n  },\n  csgo_inventory_value_over: {\n    key: 'csgo_inventory_value_over',\n    pretty: 'CS2 Inventory value over',\n    description: 'The user\\'s inventory value is over',\n    with_value: true,\n    value_type: 'number',\n    default_value: 500,\n  },\n  csgo_inventory_value_under: {\n    key: 'csgo_inventory_value_under',\n    pretty: 'CS2 Inventory value under',\n    description: 'The user\\'s inventory value is under or the equal to',\n    with_value: true,\n    value_type: 'number',\n    default_value: 50,\n  },\n  inventory_private: {\n    key: 'inventory_private',\n    pretty: 'Private inventory',\n    description: 'The user\\'s inventory is not publicly viewable',\n    with_value: false,\n  },\n  common_friends_over: {\n    key: 'common_friends_over',\n    pretty: 'Common friends more than',\n    description: 'You have more common friends with the user than this number',\n    with_value: true,\n    value_type: 'number',\n    default_value: 10,\n  },\n  common_friends_under: {\n    key: 'common_friends_under',\n    pretty: 'Common friends same or less than',\n    description: 'You have fewer or the same number of common friends with the user than this number',\n    with_value: true,\n    value_type: 'number',\n    default_value: 5,\n  },\n  name_includes: {\n    key: 'name_includes',\n    pretty: 'Username includes',\n    description: 'The user\\'s Steam username includes the specified string of characters',\n    with_value: true,\n    value_type: 'string',\n    default_value: '',\n  },\n  request_received: {\n    key: 'request_received',\n    pretty: 'Received multiple friend request from',\n    description: 'The user has already sent a friend request in the past week',\n    with_value: false,\n  },\n  from_country: {\n    key: 'from_country',\n    pretty: 'From country',\n    description: 'The user has this country set on their profile',\n    with_value: true,\n    value_type: 'country',\n    default_value: 'US',\n  },\n  all_users: {\n    key: 'all_users',\n    pretty: 'All users',\n    description: 'Matches all users, useful if you want to accept or ignore everyone for example',\n    with_value: false,\n  },\n};\n\nconst actions = {\n  accept: {\n    key: 'accept',\n    pretty: 'Accept',\n    description: 'Accept friend request',\n  },\n  ignore: {\n    key: 'ignore',\n    pretty: 'Ignore',\n    description: 'Ignore friend request',\n  },\n  block: {\n    key: 'block',\n    pretty: 'Block',\n    description: 'Ignore friend request and block user',\n  },\n  no_action: {\n    key: 'no_action',\n    pretty: 'No action',\n    description: 'Do nothing',\n  },\n};\n\nconst eventTypes = {\n  new: {\n    key: 'new',\n    pretty: 'New Invite',\n    description: 'New invite spotted by the extension',\n  },\n  disappeared: {\n    key: 'disappeared',\n    pretty: 'Invite Disappeared',\n    description: 'The invite was either canceled or accepted / ignored / blocked by you',\n  },\n  no_action: {\n    key: 'no_action',\n    pretty: 'No action',\n    description: 'No action taken by the extension',\n  },\n  auto_ignored: {\n    key: 'auto_ignored',\n    pretty: 'Auto-ignored',\n    description: 'Automatically ignored by the extension',\n  },\n  auto_accepted: {\n    key: 'auto_accepted',\n    pretty: 'Auto-accepted',\n    description: 'Automatically accepted by the extension',\n  },\n  auto_blocked: {\n    key: 'auto_blocked',\n    pretty: 'Auto-blocked',\n    description: 'Automatically blocked by the extension',\n  },\n};\n\nexport { conditions, actions, eventTypes };\n","const actions = {\n  accept: {\n    key: 'accept',\n    pretty: 'Accept',\n    description: 'Accept trade offer',\n  },\n  decline: {\n    key: 'decline',\n    pretty: 'Decline',\n    description: 'Decline trade offer',\n  },\n  notify: {\n    key: 'notify',\n    pretty: 'Notify',\n    description: 'Send a browser notification',\n  },\n  notify_discord: {\n    key: 'notify_discord',\n    pretty: 'Notify on Discord',\n    description: 'Send a Discord message.',\n  },\n  no_action: {\n    key: 'no_action',\n    pretty: 'No action',\n    description: 'Do nothing',\n  },\n};\n\nconst eventTypes = {\n  new: {\n    key: 'new',\n    pretty: 'New Trade Offer',\n    description: 'New trade offer spotted by the extension',\n  },\n  notify: {\n    key: 'notify',\n    pretty: 'Notified',\n    description: 'You were notified about this trade offer!',\n  },\n  notify_discord: {\n    key: 'notify_discord',\n    pretty: 'Notified on Discord',\n    description: 'A message was sent to you on Discord!',\n  },\n  decline: {\n    key: 'decline',\n    pretty: 'Declined',\n    description: 'The extension declined this trade offer!',\n  },\n  accept: {\n    key: 'accept',\n    pretty: 'Accepted',\n    description: 'The extension accepted this trade offer!',\n  },\n};\n\nconst conditions = {\n  profit_over: {\n    key: 'profit_over',\n    pretty: 'Profit over',\n    description: 'Projected profit equal or over the specified value',\n    with_value: true,\n    value_type: 'number',\n    default_value: 5,\n  },\n  profit_under: {\n    key: 'profit_under',\n    pretty: 'Profit under',\n    description: 'Projected profit is less than the specified value',\n    with_value: true,\n    value_type: 'number',\n    default_value: -50,\n  },\n  profit_percentage_over: {\n    key: 'profit_percentage_over',\n    pretty: 'Profit percentage over',\n    description: 'Projected profit percentage equal or over the specified value',\n    with_value: true,\n    value_type: 'number',\n    default_value: 10,\n  },\n  profit_percentage_under: {\n    key: 'profit_percentage_under',\n    pretty: 'Profit percentage under',\n    description: 'Projected profit percentage is less than the specified value',\n    with_value: true,\n    value_type: 'number',\n    default_value: -80,\n  },\n  has_message: {\n    key: 'has_message',\n    pretty: 'Has message',\n    description: 'The offer has a message attached',\n    with_value: false,\n  },\n  no_message: {\n    key: 'no_message',\n    pretty: 'Has no message',\n    description: 'The offer has no message attached',\n    with_value: false,\n  },\n  message_includes: {\n    key: 'message_includes',\n    pretty: 'Message includes',\n    description: 'The offer message includes the specified string',\n    with_value: true,\n    value_type: 'string',\n    default_value: 'please',\n  },\n  message_doesnt_include: {\n    key: 'message_doesnt_include',\n    pretty: 'Message does not include',\n    description: 'The offer has a message but it does not include the specified string',\n    with_value: true,\n    value_type: 'string',\n    default_value: 'please',\n  },\n  receiving_items_over: {\n    key: 'receiving_items_over',\n    pretty: 'Receiving x or more items',\n    description: 'Receiving x or more items in the offer',\n    with_value: true,\n    value_type: 'number',\n    default_value: 50,\n  },\n  receiving_items_under: {\n    key: 'receiving_items_under',\n    pretty: 'Receiving fewer than x items',\n    description: 'Receiving fewer than x items in the offer',\n    with_value: true,\n    value_type: 'number',\n    default_value: 1,\n  },\n  receiving_value_over: {\n    key: 'receiving_value_over',\n    pretty: 'Receiving items valued x or more',\n    description: 'Receiving items valued in total x or more in the offer',\n    with_value: true,\n    value_type: 'number',\n    default_value: 1000,\n  },\n  receiving_value_under: {\n    key: 'receiving_value_under',\n    pretty: 'Receiving items valued x or less',\n    description: 'Receiving items valued in total x or less in the offer',\n    with_value: true,\n    value_type: 'number',\n    default_value: 900,\n  },\n  giving_items_over: {\n    key: 'giving_items_over',\n    pretty: 'Giving x or more items',\n    description: 'Giving x or more items in the offer',\n    with_value: true,\n    value_type: 'number',\n    default_value: 50,\n  },\n  giving_items_under: {\n    key: 'giving_items_under',\n    pretty: 'Giving fewer than x items',\n    description: 'Giving fewer than x items in the offer',\n    with_value: true,\n    value_type: 'number',\n    default_value: 1,\n  },\n  giving_value_over: {\n    key: 'giving_value_over',\n    pretty: 'Giving items valued x or more',\n    description: 'Giving items valued in total x or more in the offer',\n    with_value: true,\n    value_type: 'number',\n    default_value: 2000,\n  },\n  giving_value_under: {\n    key: 'giving_value_under',\n    pretty: 'Giving items valued x or less',\n    description: 'Giving items valued in total x or less in the offer',\n    with_value: true,\n    value_type: 'number',\n    default_value: 1800,\n  },\n  receiving_non_csgo_items: {\n    key: 'receiving_non_csgo_items',\n    pretty: 'Receiving non-cs2 items',\n    description: 'The list of items to receive includes one or more non-cs2 items',\n    with_value: false,\n  },\n  giving_non_csgo_items: {\n    key: 'giving_non_csgo_items',\n    pretty: 'Giving non-cs2 items',\n    description: 'The list of items to give includes one or more non-cs2 items',\n    with_value: false,\n  },\n  receiving_no_price_items: {\n    key: 'receiving_no_price_items',\n    pretty: 'Receiving items with no price',\n    description: 'The list of items to receive includes one or more items that does not have extension price',\n    with_value: false,\n  },\n  giving_no_price_items: {\n    key: 'giving_no_price_items',\n    pretty: 'Giving items with no price',\n    description: 'The list of items to give includes one or more items that does not have extension price',\n    with_value: false,\n  },\n};\n\n// from: https://developer.valvesoftware.com/wiki/Steam_Web_API/IEconService\nconst offerStates = {\n  1: {\n    key: 1,\n    short: 'invalid',\n    pretty: 'Invalid',\n    description: 'Invalid',\n  },\n  2: {\n    key: 2,\n    short: 'valid',\n    pretty: 'Valid',\n    description: 'This trade offer has been sent, neither party has acted on it yet. ',\n  },\n  3: {\n    key: 3,\n    short: 'accepted',\n    pretty: 'Accepted',\n    description: 'The trade offer was accepted by the recipient and items were exchanged.',\n  },\n  4: {\n    key: 4,\n    short: 'countered',\n    pretty: 'Countered',\n    description: 'The recipient made a counter offer',\n  },\n  5: {\n    key: 5,\n    short: 'expired',\n    pretty: 'Expired',\n    description: 'The trade offer was not accepted before the expiration date',\n  },\n  6: {\n    key: 6,\n    short: 'canceled',\n    pretty: 'Canceled',\n    description: 'The sender cancelled the offer',\n  },\n  7: {\n    key: 7,\n    short: 'declined',\n    pretty: 'Declined',\n    description: 'The recipient declined the offer',\n  },\n  8: {\n    key: 8,\n    short: 'invalid_items',\n    pretty: 'Some items no longer available',\n    description: 'Some of the items in the offer are no longer available',\n  },\n  9: {\n    key: 9,\n    short: 'needs_confirmation',\n    pretty: 'Awaiting confirmation',\n    description: 'The offer hasn\\'t been sent yet and is awaiting email/mobile confirmation. The offer is only visible to the sender.',\n  },\n  10: {\n    key: 10,\n    short: 'canceled_second_factor',\n    pretty: 'Canceled before mobil confirmation',\n    description: 'Either party canceled the offer via email/mobile. The offer is visible to both parties, even if the sender canceled it before it was sent.',\n  },\n  11: {\n    key: 11,\n    short: 'in_escrow',\n    pretty: 'In trade-hold',\n    description: 'The trade has been placed on hold. The items involved in the trade have all been removed from both parties\\' inventories and will be automatically delivered in the future.',\n  },\n};\n\nconst operators = {\n  or: {\n    key: 'or',\n    pretty: 'OR',\n    description: 'OR operator',\n  },\n  and: {\n    key: 'and',\n    pretty: 'AND',\n    description: 'AND operator',\n  },\n};\n\nexport {\n  actions, eventTypes, offerStates, conditions, operators,\n};\n","// inject scripts from content scripts the the page context\n// usually to access variables or override functionality\n// using method 1 and 3 from https://stackoverflow.com/a/9517879/3862289\n\nconst injectScript = (scriptString, toRemove, id, executeAndReturn) => {\n  const tempEl = document.createElement('div');\n  tempEl.setAttribute('onreset', `${scriptString};`);\n  tempEl.dispatchEvent(new CustomEvent('reset'));\n  tempEl.removeAttribute('onreset');\n  tempEl.remove();\n\n  const simpleAttributeParsing = ['steamidOfLoggedinUser', 'steamidOfProfileOwner', 'tradePartnerSteamID', 'inventoryOwnerID', 'listingsInfo',\n    'inventoryInfo', 'allItemsLoaded', 'offerInventoryInfo', 'steamWalletCurrency', 'steamWallet', 'formattedToInt', 'intToFormatted',\n    'priceAfterFees', 'sessionid', 'offerID', 'partnerName', 'userAppInfo', 'csgoFloat', 'commentExtendedData'];\n\n  const result = simpleAttributeParsing.includes(executeAndReturn)\n    ? document.querySelector('body').getAttribute(executeAndReturn)\n    : null;\n  if (result !== null) document.querySelector('body').removeAttribute(executeAndReturn);\n  return result;\n};\n\n// it appears that this method is asynchronous\n// retrieving on-page data does not work, because the injected script\n// is executed after the code that calls this function\n// working around this would be very ugly, avoid if possible\nconst injectScriptAsFile = (scriptName, id, params) => {\n  // removes previously added instance of the script\n  const elementFromBefore = document.getElementById(id);\n  if (elementFromBefore !== null) elementFromBefore.remove();\n\n  const toInject = document.createElement('script');\n  toInject.id = id;\n\n  if (params) toInject.dataset.params = JSON.stringify(params);\n\n  toInject.src = chrome.runtime.getURL(`js/injectToPage/${scriptName}.js`);\n  (document.head || document.documentElement).appendChild(toInject);\n};\n\nconst injectStyle = (styleString, elementID) => {\n  const existingStyleElement = document.getElementById(elementID);\n  if (existingStyleElement === null) {\n    const styleElement = document.createElement('style');\n    styleElement.id = elementID;\n    styleElement.innerHTML = styleString;\n    document.querySelector('body').appendChild(styleElement);\n  }\n};\n\nexport {\n  injectScript, injectStyle, injectScriptAsFile,\n};\n","import { currencies, pricingProviders, realTimePricingModes } from 'utils/static/pricing';\nimport { listingsSortingModes, offersSortingModes, sortingModes } from 'utils/static/sortingModes';\nimport defaultPopupLinks from 'utils/static/defaultPopupLinks';\nimport { actions, conditions } from 'utils/static/friendRequests';\nimport { actions as offerActions, conditions as offerConditions, operators } from 'utils/static/offers';\nimport { notificationSounds } from 'utils/static/notifications';\n\nconst storageKeys = {\n  quickDeclineOffer: true,\n  openOfferInTab: true,\n  showPlusRepButton: true,\n  reputationMessage: '+rep',\n  showReoccButton: true,\n  reoccuringMessage: 'I don\\'t have other accounts. If someone adds you with my name and picture they are scammers.',\n  nsfwFilter: false,\n  bookmarks: [],\n  steamAPIKey: '',\n  apiKeyValid: false,\n  steamAcessToken: '',\n  steamAcessTokenValid: false,\n  showRealStatus: true,\n  colorfulItems: true,\n  tradersBump: false,\n  markScammers: true,\n  numberOfListings: 10,\n  itemPricing: true,\n  pricingProvider: pricingProviders.csgotrader.name,\n  pricingMode: pricingProviders.csgotrader.pricing_modes.csgotrader.name,\n  prices: null,\n  currency: currencies.USD.short,\n  exchangeRate: 1.0,\n  exchangeRates: null,\n  hideOtherExtensionPrices: true,\n  inventorySortingMode: sortingModes.default.key,\n  notifyOnUpdate: false,\n  offerSortingMode: sortingModes.default.key,\n  switchToOtherInventory: false,\n  popupLinks: defaultPopupLinks,\n  steamIDOfUser: '',\n  nickNameOfUser: '',\n  autoFloatMarket: true,\n  autoFloatOffer: true,\n  autoFloatInventory: true,\n  tradeOffersLargerItems: true,\n  tradeOffersSortingMode: offersSortingModes.default.key,\n  defaultConverterCurrency1: currencies.USD.short,\n  defaultConverterCurrency2: currencies.EUR.short,\n  marketOriginalPrice: true,\n  autoSetSteamAPIKey: true,\n  autoOpenIDLogin: false,\n  csgotradersAutoLogin: false,\n  tradeHistoryLastUpdate: 0,\n  tradeHistoryOffers: true,\n  tradeHistoryInventory: true,\n  tradeOfferHeaderToLeft: true,\n  showStickerPrice: true,\n  activeOffers: {\n    lastFullUpdate: '',\n    items: [],\n    sent: [],\n    received: [],\n    descriptions: [],\n  },\n  itemInOffersInventory: true,\n  itemInOtherOffers: true,\n  showUpdatedRibbon: false,\n  friendRequests: {\n    inviters: [],\n    lastUpdated: Date.now(),\n  },\n  groupInvites: {\n    invitedTo: [],\n    lastUpdated: Date.now(),\n  },\n  steamSessionID: '',\n  friendRequestLogs: [],\n  friendRequestEvalRules: [\n    {\n      active: false,\n      condition: {\n        type: conditions.profile_private.key,\n      },\n      action: actions.ignore.key,\n    },\n    {\n      active: false,\n      condition: {\n        type: conditions.steam_level_under.key,\n        value: 5,\n      },\n      action: actions.ignore.key,\n    },\n    {\n      active: false,\n      condition: {\n        type: conditions.vac_banned.key,\n      },\n      action: actions.ignore.key,\n    },\n    {\n      active: false,\n      condition: {\n        type: conditions.community_banned.key,\n      },\n      action: actions.ignore.key,\n    },\n    {\n      active: false,\n      condition: {\n        type: conditions.trade_banned.key,\n      },\n      action: actions.ignore.key,\n    },\n    {\n      active: false,\n      condition: {\n        type: conditions.inventory_private.key,\n      },\n      action: actions.ignore.key,\n    },\n  ],\n  ignoreGroupInvites: false,\n  floatQueueActivity: {\n    lastUsed: Date.now(),\n    usedAt: '',\n  },\n  removeWebChatHeader: true,\n  discussionsToAutoBump: [],\n  discussionsToAutoBumpToDelete: [],\n  usefulTitles: false,\n  reloadListingOnError: true,\n  monitorFriendRequests: false,\n  showRealMoneySiteLinks: true,\n  realTimePricesFreqSuccess: 3000,\n  realTimePricesFreqFailure: 15000,\n  realTimePricesMode: realTimePricingModes.ask_price.key,\n  realTimePricesAutoLoadOffer: false,\n  realTimePricesAutoLoadInventory: false,\n  priceQueueActivity: {\n    lastUsed: Date.now(),\n    usedAt: '',\n  },\n  userSteamWalletCurrency: currencies.USD.short,\n  linkFilterOff: false,\n  marketListingsInstantBuy: true,\n  inventoryInstantQuickButtons: true,\n  safeInstantQuickSell: false,\n  marketMainPagePricesAutoLoad: true,\n  marketHistoryEventsToShow: 50,\n  marketShowFloatValuesOnly: false,\n  marketListingsDefaultSorting: listingsSortingModes.default.key,\n  marketAlwaysShowFloatTechnical: false,\n  showSelectedItemsTable: true,\n  highlightSeenListings: true,\n  calculatorConversionPlaceholder: 100,\n  calculatorPercentagePercentage: 3,\n  calculatorPercentageOf: 90,\n  calculatorReversePercentage: 30,\n  calculatorReverseValue: 2.7,\n  calculatorIncDecPercentage: 27,\n  calculatorIncDecResult: 1000,\n  monitorIncomingOffers: false,\n  tradeOffersEventLogs: [],\n  offerEvalRules: [\n    {\n      active: false,\n      conditions: [\n        {\n          type: offerConditions.giving_items_under.key,\n          value: 1,\n        },\n        {\n          type: offerConditions.no_message.key,\n        },\n      ],\n      operators: [\n        operators.and.key,\n      ],\n      action: offerActions.notify.key,\n    },\n    {\n      active: false,\n      conditions: [\n        {\n          type: offerConditions.profit_over.key,\n          value: offerConditions.profit_over.default_value,\n        },\n      ],\n      operators: [],\n      action: offerActions.notify.key,\n    },\n    {\n      active: false,\n      conditions: [\n        {\n          type: offerConditions.profit_percentage_over.key,\n          value: offerConditions.profit_percentage_over.default_value,\n        },\n      ],\n      operators: [],\n      action: offerActions.notify.key,\n    },\n    {\n      active: false,\n      conditions: [\n        {\n          type: offerConditions.receiving_items_under.key,\n          value: 1,\n        },\n        {\n          type: offerConditions.no_message.key,\n        },\n      ],\n      operators: [\n        operators.and.key,\n      ],\n      action: offerActions.decline.key,\n    },\n    {\n      active: false,\n      conditions: [\n        {\n          type: offerConditions.receiving_items_under.key,\n          value: 1,\n        },\n        {\n          type: offerConditions.message_includes.key,\n          value: offerConditions.message_includes.default_value,\n        },\n      ],\n      operators: [\n        operators.and.key,\n      ],\n      action: offerActions.accept.key,\n    },\n  ],\n  marketShowBuySellNonCommodity: true,\n  marketShowRecentActivityNonCommodity: true,\n  notificationSoundOn: true,\n  notificationSoundToPlay: notificationSounds['done-for-you'].key,\n  notificationVolume: 50,\n  customNotificationURL: 'https://csgotrader.app/extension/sound/notification/glitch-in-the-matrix.ogg',\n  showNumberOfOfferOnBadge: true,\n  notifyOnFriendRequest: false,\n  sendOfferBasedOnQueryParams: false,\n  showPriceEmpireLinkInInventory: true,\n  selectItemsBasedOnQueryParams: true,\n  discordNotificationHook: '',\n  allowDiscordNotification: false,\n  showBuffLookupInInventory: false,\n  removeAnimatedProfileBackgrounds: false,\n  inventoryShowCopyButtons: true,\n  outBidPercentage: 1,\n  showShortExteriorsInventory: true,\n  showShortExteriorsOffers: true,\n  clickChangeOfferAutomatically: false,\n  offerPresetMessages: [\n    'Feel free to counter!',\n    'That is the max I can do here, sorry!',\n    'Feel free to add me to discuss this further',\n  ],\n  showChatPresetMessages: true,\n  chatPresetMessages: [\n    'Hello! How can I help you today?',\n    'Hi! I have seen you added me but you are offline now. Message me later and tell me what I can do for you.',\n  ],\n  notifyAboutBeingLoggedOut: false,\n  notifyAboutBeingLoggedOutOnDiscord: false,\n  showTradeLockIndicatorInInventories: true,\n  numberOfFloatDigitsToShow: 4,\n  disableCancelEscrowedTrades: false,\n  showPaintSeedOnItems: false,\n  showFloatRankOnItems: false,\n  priceUpdateFreq: 24,\n  contrastingLook: false,\n  showFloatDBLookupInInventory: false,\n  fixTradeURLToken: true,\n  showYearsOnMarketGraphs: true,\n  logOutDetected: false,\n  lastLogoutNotified: new Date('2020-01-01T00:00:00.000Z').getTime(),\n  inventoryShowDuplicateCount: true,\n  legitSiteBotGroup: [\n    'bitskinsbots',\n    'skinportbots',\n    'tradeitggbots',\n    'SkinwalletBotsOfficial',\n    'skinswapbots',\n  ],\n  moveWithArrowKeysInventory: true,\n  showAllExteriorsInventory: false,\n  marketEnhanceStickers: true,\n  tradeOfferPricEmpireAction: true,\n  tradeOfferBuffAction: true,\n};\n\nconst nonSettingStorageKeys = ['bookmarks', 'prices', 'exchangeRates', 'clientID',\n  'tradeHistoryLastUpdate', 'activeOffers', 'showUpdatedRibbon', 'steamSessionID', 'groupInvites',\n  'friendRequests', 'friendRequestLogs', 'friendRequestEvalRules', 'floatQueueActivity',\n  'priceQueueActivity', 'userSteamWalletCurrency', 'tradeOffersEventLogs', 'numberOfNewItems', 'numberOfComments',\n  'recent401Detected', 'acessToken', 'activeOffers'];\n\nexport { storageKeys, nonSettingStorageKeys };\n","import exteriors from 'utils/static/exteriors';\nimport { currencies } from 'utils/static/pricing';\nimport { dopplerPhases, iconToPhaseMapping } from 'utils/static/dopplerPhases';\nimport rarities from 'utils/static/rarities';\nimport qualities from 'utils/static/qualities';\nimport itemTypes from 'utils/static/itemTypes';\nimport patterns from 'utils/static/patterns';\nimport { getPrice } from 'utils/pricing';\nimport collectionsWithSouvenirs from 'utils/static/collectionsWithSouvenirs';\nimport { injectScript } from 'utils/injection';\nimport { getUserSteamID } from 'utils/steamID';\nimport DOMPurify from 'dompurify';\nimport { getIDsFromElement } from 'utils/itemsToElementsToItems';\nimport { createOffscreen } from 'utils/simpleUtils';\nimport buffIds from 'utils/static/buffIds.json';\nimport bluePercentage from 'utils/static/bluepercent.json';\n\nconst { FadeCalculator } = require('csgo-fade-percentage-calculator');\n\n// \"Sticker\" in different languages\n// english, simplified chinese, traditional chinese,\n// japanese, korean, bulgarian, thai, czech, danish,\n// german, spanish, latin spanish, greek, french, italian, indonesian,\n// hungarian, norwegian, polish, portuguese, brazil,\n// romanian, russian, finnish, swedish, turkish,\n// vietnamese, ukrainian\nconst stickerNames = [\n  'Sticker', '印花', '貼紙', 'ステッカー',\n  '스티커', 'Αυτοκόλλητο', 'สติกเกอร์', 'Samolepka', 'Klistermærke',\n  'Aufkleber', 'Pegatina', 'Calcomanía', 'Αυτοκόλλητο', 'Sticker', 'Adesivo',\n  'Stiker', 'Matrica', 'Klistremerke', 'Naklejka', 'Autocolante', 'Adesivo',\n  'Abțibild', 'Наклейка', 'Tarra', 'Klistermärke', 'Çıkartma',\n  'Hình dán', 'Наліпка'];\n\n// \"Charm\" in different languages\n// english, simplified chinese, traditional chinese,\n// japanese, korean, bulgarian, thai, czech, danish,\n// german, spanish, latin spanish, greek, french, italian, indonesian,\n// hungarian, norwegian, polish, portuguese, brazil,\n// romanian, russian, finnish, swedish, turkish,\n// vietnamese, ukrainian\n// const charmNames = [\n//   'Charm', '挂件', '吊飾', 'チャーム', '참 장식',\n//   'Джунджурия', 'พวงกุญแจ', 'Přívěsek', 'Vedhæng',\n//   'Anhänger', 'Colgante', 'Colgante', 'Γούρι',\n//   'Porte-bonheur', 'Ciondolo', 'Gantungan',\n//   'Talizmán', 'Anheng', 'Przywieszka', 'Amuleto',\n//   'Chaveiro', 'Breloc', 'Брелок', 'Riipus', 'Hänge',\n//   'Süs', 'Móc treo', 'Брелок',\n// ];\n\nconst chKnifeNames = [\n  ['M9 Bayonet', 'M9_Bayonet'], // important to put it before normal bayo\n  ['Bayonet', 'Bayonet'],\n  ['Bowie Knife', 'Bowie_Knife'],\n  ['Butterfly Knife', 'Butterfly_Knife'],\n  ['Classic Knife', 'Classic_Knife'],\n  ['Falchion Knife', 'Falchion_Knife'],\n  ['Flip Knife', 'Flip_Knife'],\n  ['Gut Knife', 'Gut_Knife'],\n  ['Huntsman Knife', 'Huntsman_Knife'],\n  ['Karambit', 'Karambit'],\n  ['Kukri Knife', 'Kukri_Knife'],\n  ['Navaja Knife', 'Navaja_Knife'],\n  ['Nomad Knife', 'Nomad_Knife'],\n  ['Paracord Knife', 'Paracord_Knife'],\n  ['Shadow Daggers', 'Shadow_Daggers'],\n  ['Skeleton Knife', 'Skeleton_Knife'],\n  ['Stiletto Knife', 'Stiletto_Knife'],\n  ['Survival Knife', 'Survival_Knife'],\n  ['Talon Knife', 'Talon_Knife'],\n  ['Ursus Knife', 'Ursus_Knife'],\n];\n\n// prints all kinds of numbers without using scientific notation, etc.\n// no idea how this works, from:\n// https://stackoverflow.com/a/61281355/3862289\nconst toPlainString = (num) => {\n  return (`${+num}`).replace(/(-?)(\\d*)\\.?(\\d*)e([+-]\\d+)/,\n    (a, b, c, d, e) => {\n      return e < 0\n        ? `${b}0.${Array(1 - e - c.length).join(0)}${c}${d}`\n        : b + c + d + Array(e - d.length + 1).join(0);\n    });\n};\n\n// only use it with csgo item float values\nconst getFloatAsFormattedString = (float, decimals) => {\n  const decimalsInt = parseInt(decimals);\n  if (float > 0 && float < 1) {\n    const plainFloatString = toPlainString(float);\n    return plainFloatString.substring(0, decimalsInt + 2);\n  } return null;\n};\n\nconst logExtensionPresence = () => {\n  const { version } = chrome.runtime.getManifest();\n  console.log(`CS2 Trader - Steam Trading Enhancer ${version} is running on this page. Changelog at: https://csgotrader.app/changelog/`);\n  console.log('If you see any errors that seem related to the extension please email support@csgotrader.app.');\n};\n\nconst getAppropriateFetchFunc = () => {\n  // works around the different behavior when fetching from chromium or ff\n  // This is accomplished by exposing more privileged XHR and\n  // fetch instances in the content script,\n  // which has the side-effect of not setting the Origin and\n  // Referer headers like a request from the page itself would;\n  // this is often preferable to prevent the request from revealing its cross-orign nature.\n  // In Firefox, extensions that need to perform requests that behave as if they were\n  // sent by the content itself can use  content.XMLHttpRequest and content.fetch() instead.\n  // For cross-browser extensions, the presence of these methods must be feature-detected.\n  // https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#XHR_and_Fetch\n  // const fetchFunction = content !== undefined ? content.fetch : fetch;\n\n  let fetchFunction = fetch;\n\n  try {\n    // eslint-disable-next-line no-undef\n    fetchFunction = content !== undefined ? content.fetch : fetch;\n    // eslint-disable-next-line no-empty\n  } catch (e) { }\n\n  return fetchFunction;\n};\n\nconst validateSteamAPIKey = (apiKey) => new Promise((resolve, reject) => {\n  const getRequest = new Request(`https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002/?key=${apiKey}&steamids=76561198036030455`);\n\n  fetch(getRequest).then((response) => {\n    if (!response.ok) {\n      console.log(`Error code: ${response.status} Status: ${response.statusText}`);\n      reject(response.status);\n    } else return response.json();\n  }).then((body) => {\n    try {\n      if (body.response.players[0].steamid === '76561198036030455') resolve(true);\n      else resolve(false);\n    } catch (e) {\n      console.log(e);\n      reject(e);\n    }\n  }).catch((err) => {\n    console.log(err);\n    reject(err);\n  });\n});\n\nconst setAPIKeyFirstTime = async () => {\n  await createOffscreen([chrome.offscreen.Reason.DOM_PARSER], 'dom parsing');\n  chrome.runtime.sendMessage({ scrapeAPIKey: 'scrapeAPIKey' }, (apiKey) => {\n    if (apiKey !== null) {\n      console.log(apiKey);\n      validateSteamAPIKey(apiKey).then(\n        (apiKeyValid) => {\n          if (apiKeyValid) {\n            console.log('api key valid');\n            chrome.storage.local.set({ steamAPIKey: apiKey, apiKeyValid: true }, () => { });\n          } else console.log('api key invalid');\n        },\n      ).catch((err) => {\n        console.log(err);\n      });\n    } else console.log('Was not able to scrape API key, probably not logged in?');\n  });\n};\n\nconst validateSteamAccessToken = (accessToken) => new Promise((resolve, reject) => {\n  const getRequest = new Request(`https://api.steampowered.com/ISteamEconomy/GetAssetClassInfo/v1/?appid=730&class_count=1&classid0=3608123907&access_token=${accessToken}`);\n\n  fetch(getRequest).then((response) => {\n    if (!response.ok) {\n      console.log(`Error code: ${response.status} Status: ${response.statusText}`);\n      reject(response.status);\n    } else return response.json();\n  }).then((body) => {\n    try {\n      if (body.result.success) resolve(true);\n      else resolve(false);\n    } catch (e) {\n      console.log(e);\n      reject(e);\n    }\n  }).catch((err) => {\n    console.log(err);\n    reject(err);\n  });\n});\n\nconst setAccessTokenFirstTime = async () => {\n  await createOffscreen([chrome.offscreen.Reason.DOM_PARSER], 'dom parsing');\n  chrome.runtime.sendMessage({ scrapeAccessToken: 'scrapeAccessToken' }, (accessToken) => {\n    if (accessToken !== null) {\n      validateSteamAccessToken(accessToken).then(\n        (accessTokenValid) => {\n          if (accessTokenValid) {\n            chrome.storage.local.set({ steamAcessToken: accessToken, steamAcessTokenValid: true }, () => { });\n          }\n        },\n      ).catch((err) => {\n        console.log(err);\n      });\n    } else console.log('Was not able to scrape access token, probably not logged in?');\n  });\n};\n\nconst arrayFromArrayOrNotArray = (arrayOrNotArray) => {\n  if (!Array.isArray(arrayOrNotArray)) return [arrayOrNotArray];\n  return arrayOrNotArray;\n};\n\nconst removeFromArray = (array, arrayIndex) => {\n  const newArray = [];\n\n  array.forEach((element, index) => {\n    if (index !== arrayIndex) newArray.push(element);\n  });\n\n  return newArray;\n};\n\nconst getExteriorFromTags = (tags) => {\n  if (tags !== undefined) {\n    for (const tag of tags) {\n      if (tag.category === 'Exterior') {\n        for (const exterior in exteriors) {\n          if (exteriors[exterior].internal_name === tag.internal_name) return exteriors[exterior];\n        }\n\n        // no exterior\n        return null;\n      }\n    }\n  }\n  return null;\n};\n\nconst getNameTag = (item) => {\n  try {\n    if (item.descriptions !== undefined) {\n      for (const description of item.descriptions) {\n        if (description.value.includes('Name Tag:')) {\n          return description.value.split('Name Tag: \\'\\'')[1].split('\\'\\'')[0];\n        }\n      }\n    }\n  } catch (error) { return null; }\n};\n\nconst getInspectLink = (item, owner, assetID) => {\n  try {\n    if (item.actions !== undefined && item.actions[0] !== undefined) {\n      const beginning = item.actions[0].link.split('%20S')[0];\n      const end = item.actions[0].link.split('%assetid%')[1];\n      return owner !== undefined\n        ? (`${beginning}%20S${owner}A${assetID}${end}`)\n        : (`${beginning}%20S${item.owner}A${item.assetid}${end}`);\n    }\n    // eslint-disable-next-line no-empty\n  } catch (error) { return null; }\n};\n\nconst getDopplerInfo = (icon) => {\n  return iconToPhaseMapping[icon] !== undefined ? iconToPhaseMapping[icon] : dopplerPhases.unk;\n};\n\nconst getQuality = (tags) => {\n  if (tags !== undefined) {\n    for (const tag of tags) {\n      if (tag.category === 'Rarity') {\n        for (const rarity in rarities) {\n          if (rarities[rarity].internal_name === tag.internal_name) {\n            return qualities[rarities[rarity].name];\n          }\n        }\n\n        // if the rarity is unknown to the extension\n        console.log(tag.internal_name);\n        return qualities.stock;\n      }\n    }\n  }\n  return null;\n};\n\nconst getType = (tags) => {\n  if (tags !== undefined) {\n    for (const tag of tags) {\n      if (tag.category === 'Type') {\n        for (const itemType of Object.values(itemTypes)) {\n          if (itemType.internal_name === tag.internal_name) return itemType;\n        }\n\n        // if the category is unknown to the extension - for example a new item type was introduced\n        console.log(tag.internal_name);\n        return itemTypes.unknown_type;\n      }\n    }\n  }\n  return null;\n};\n\nconst getPattern = (name, paintSeed) => {\n  if (name.includes(' Marble Fade ')) {\n    let pattern = null;\n    if (name.includes('Karambit')) pattern = patterns.marble_fades.karambit[paintSeed];\n    else if (name.includes('Butterfly')) pattern = patterns.marble_fades.butterfly[paintSeed];\n    else if (name.includes('M9 Bayonet')) pattern = patterns.marble_fades.m9[paintSeed];\n    else if (name.includes('Bayonet')) pattern = patterns.marble_fades.bayonet[paintSeed];\n    else if (name.includes('Talon')) pattern = patterns.marble_fades.talon[paintSeed];\n    else if (name.includes('Stiletto')) pattern = patterns.marble_fades.stiletto[paintSeed];\n    else if (name.includes('Navaja')) pattern = patterns.marble_fades.navaja[paintSeed];\n    else if (name.includes('Ursus')) pattern = patterns.marble_fades.ursus[paintSeed];\n    else if (name.includes('Huntsman')) pattern = patterns.marble_fades.huntsman[paintSeed];\n    else if (name.includes('Flip')) pattern = patterns.marble_fades.flip[paintSeed];\n    else if (name.includes('Bowie')) pattern = patterns.marble_fades.bowie[paintSeed];\n    else if (name.includes('Daggers')) pattern = patterns.marble_fades.daggers[paintSeed];\n    else if (name.includes('Gut')) pattern = patterns.marble_fades.gut[paintSeed];\n    else if (name.includes('Falchion')) pattern = patterns.marble_fades.falchion[paintSeed];\n    else return null;\n\n    if (pattern !== null && pattern !== undefined) return { type: 'marble_fade', value: pattern };\n    return null;\n  }\n  if (name.includes(' Fade ')) {\n    let percentage = null;\n\n    if (typeof (paintSeed) === 'number') {\n      if (name.includes('Karambit')) percentage = FadeCalculator.getFadePercentage('Karambit', paintSeed).percentage;\n      else if (name.includes('Butterfly Knife')) percentage = FadeCalculator.getFadePercentage('Butterfly Knife', paintSeed).percentage;\n      else if (name.includes('M9 Bayonet')) percentage = FadeCalculator.getFadePercentage('M9 Bayonet', paintSeed).percentage;\n      else if (name.includes('Bayonet')) percentage = FadeCalculator.getFadePercentage('Bayonet', paintSeed).percentage;\n      else if (name.includes('Talon Knife')) percentage = FadeCalculator.getFadePercentage('Talon Knife', paintSeed).percentage;\n      else if (name.includes('Stiletto Knife')) percentage = FadeCalculator.getFadePercentage('Stiletto Knife', paintSeed).percentage;\n      else if (name.includes('Navaja Knife')) percentage = FadeCalculator.getFadePercentage('Navaja Knife', paintSeed).percentage;\n      else if (name.includes('Ursus Knife')) percentage = FadeCalculator.getFadePercentage('Ursus Knife', paintSeed).percentage;\n      else if (name.includes('Huntsman Knife')) percentage = FadeCalculator.getFadePercentage('Huntsman Knife', paintSeed).percentage;\n      else if (name.includes('Flip Knife')) percentage = FadeCalculator.getFadePercentage('Flip Knife', paintSeed).percentage;\n      else if (name.includes('Bowie Knife')) percentage = FadeCalculator.getFadePercentage('Bowie Knife', paintSeed).percentage;\n      else if (name.includes('Shadow Daggers')) percentage = FadeCalculator.getFadePercentage('Shadow Daggers', paintSeed).percentage;\n      else if (name.includes('Gut Knife')) percentage = FadeCalculator.getFadePercentage('Gut Knife', paintSeed).percentage;\n      else if (name.includes('Falchion Knife')) percentage = FadeCalculator.getFadePercentage('Falchion Knife', paintSeed).percentage;\n      else if (name.includes('Classic Knife')) percentage = FadeCalculator.getFadePercentage('Classic Knife', paintSeed).percentage;\n      else if (name.includes('Nomad Knife')) percentage = FadeCalculator.getFadePercentage('Nomad Knife', paintSeed).percentage;\n      else if (name.includes('Paracord Knife')) percentage = FadeCalculator.getFadePercentage('Paracord Knife', paintSeed).percentage;\n      else if (name.includes('Skeleton Knife')) percentage = FadeCalculator.getFadePercentage('Skeleton Knife', paintSeed).percentage;\n      else if (name.includes('Survival Knife')) percentage = FadeCalculator.getFadePercentage('Survival Knife', paintSeed).percentage;\n      else if (name.includes('Kukri Knife')) percentage = FadeCalculator.getFadePercentage('Kukri Knife', paintSeed).percentage;\n      else if (name.includes('Glock-18')) percentage = FadeCalculator.getFadePercentage('Glock-18', paintSeed).percentage;\n      else if (name.includes('AWP')) percentage = FadeCalculator.getFadePercentage('AWP', paintSeed).percentage;\n      else if (name.includes('MAC-10')) percentage = FadeCalculator.getFadePercentage('MAC-10', paintSeed).percentage;\n      else if (name.includes('MP7')) percentage = FadeCalculator.getFadePercentage('MP7', paintSeed).percentage;\n      else if (name.includes('R8 Revolver')) percentage = FadeCalculator.getFadePercentage('R8 Revolver', paintSeed).percentage;\n      else if (name.includes('UMP-45')) percentage = FadeCalculator.getFadePercentage('UMP-45', paintSeed).percentage;\n      else if (name.includes('M4A1-S')) percentage = FadeCalculator.getFadePercentage('M4A1-S', paintSeed).percentage;\n      else return null;\n    }\n\n    if (percentage !== null && percentage !== undefined) {\n      return {\n        type: 'fade',\n        value: `${percentage.toFixed(2)}% Fade`, // value is uniform with other pattern types\n        percentage,\n        short: Math.floor(percentage),\n      };\n    }\n    return null;\n  }\n  // ch blue percentage from\n  // https://csbluegem.com/bluepercentraw\n  if (name.includes(' Case Hardened')) {\n    let pattern = null;\n\n    // exits early if match\n    for (const chName of chKnifeNames) {\n      const knifeName = chName[0];\n\n      // Check if the name starts with the knife name\n      // This will match \"M9 Bayonet\" before it matches \"Bayonet\"\n      if (name.startsWith(`★ ${knifeName} `)\n        || name.startsWith(`★ StatTrak™ ${knifeName} `)) {\n        const key = chName[1];\n        const playside = bluePercentage[key].playside[paintSeed];\n        const backside = bluePercentage[key].backside[paintSeed];\n        pattern = `${playside}%/${backside}%`;\n        break;\n        // some knives have doublesided properties, handle that?\n      }\n    }\n    if (name.includes('AK-47')) pattern = patterns.case_hardeneds.ak[paintSeed];\n    else if (name.includes('/Five-SeveN')) pattern = patterns.case_hardeneds.five_seven[paintSeed];\n\n    if (pattern !== null && pattern !== undefined) return { type: 'case_hardened', value: pattern };\n    return null; // return {type: 'case_hardened', value: 'Not special or not found'};\n  }\n  return null;\n};\n\nconst handleStickerNamesWithCommas = (names) => {\n  const namesModified = [];\n  let nameWithCommaFound = false;\n\n  for (let i = 0; i < names.length; i += 1) {\n    const name = names[i];\n\n    if (name === 'Don\\'t Worry' && names[i + 1] === 'I\\'m Pro') {\n      namesModified.push('Don\\'t Worry, I\\'m Pro');\n      nameWithCommaFound = true;\n      i += 1;\n    } else if (name === 'Hi' && names[i + 1] === 'My Game Is') {\n      namesModified.push('Hi, My Game Is');\n      nameWithCommaFound = true;\n      i += 1;\n    } else if (name === 'Run T' && names[i + 1] === 'Run') {\n      namesModified.push('Run T, Run');\n      nameWithCommaFound = true;\n      i += 1;\n    } else if (name === 'Run CT' && names[i + 1] === 'Run') {\n      namesModified.push('Run CT, Run');\n      nameWithCommaFound = true;\n      i += 1;\n    } else if (names[i + 1] === 'Champion) | Antwerp 2022') {\n      namesModified.push(`${name}, Champion) | Antwerp 2022`);\n      nameWithCommaFound = true;\n      i += 1;\n    } else if (names[i + 1] === 'Champion) | Rio 2022') {\n      namesModified.push(`${name}, Champion) | Rio 2022`);\n      nameWithCommaFound = true;\n      i += 1;\n    } else if (names[i + 1] === 'Champion) | Copenhagen 2024') {\n      namesModified.push(`${name}, Champion) | Copenhagen 2024`);\n      nameWithCommaFound = true;\n      i += 1;\n    } else if (names[i + 1] === 'Champion) | Paris 2023') {\n      namesModified.push(`${name}, Champion) | Paris 2023`);\n      nameWithCommaFound = true;\n      i += 1;\n    } else namesModified.push(name);\n  }\n\n  if (nameWithCommaFound) return handleStickerNamesWithCommas(namesModified);\n  return namesModified;\n};\n\n// also charms\nconst getStickerOrPatchLink = (linkType, name, type) => {\n  return linkType === 'search'\n    ? `https://steamcommunity.com/market/search?q=${name}&appid=730&category_730_Type[]=tag_CSGO_Tool_${type === 'Charm' ? 'Keychain' : type}`\n    : `https://steamcommunity.com/market/listings/730/${type}%20%7C%20${name}`;\n};\n\n// true sticker, false patch or charm\nconst isSticker = (description) => {\n  let matchFound = false;\n\n  stickerNames.forEach((name) => {\n    if (description.includes(`title=\"${name}`)) {\n      matchFound = true;\n    }\n  });\n  return matchFound;\n};\n\n// true charm, false patch or sticker, unused atm\n// const isCharm = (description) => {\n//   let matchFound = false;\n\n//   charmNames.forEach((name) => {\n//     if (description.includes(`title=\"${name}`)) {\n//       matchFound = true;\n//     }\n//   });\n//   return matchFound;\n// };\n\n// also pathces for agents\nconst parseStickerInfo = (\n  descriptions,\n  linkType,\n  prices,\n  pricingProvider,\n  pricingMode,\n  exchangeRate,\n  currency,\n) => {\n  if (descriptions !== undefined && linkType !== undefined) {\n    let stickers = [];\n\n    descriptions.forEach((description) => {\n      if (description.name === 'sticker_info') {\n        const type = isSticker(description.value)\n          ? 'Sticker'\n          : 'Patch';\n        let names = description.value.split('><br>')[1].split(': ')[1].split('</center>')[0].split(', ');\n\n        names = handleStickerNamesWithCommas(names);\n        const iconURLs = description.value.split('src=\"');\n\n        iconURLs.shift();\n        iconURLs.forEach((iconURL, index) => {\n          iconURLs[index] = iconURL.split('><')[0];\n        });\n\n        stickers = stickers.concat(...names.map((name, index) => ({\n          name,\n          fullName: `${type} | ${name}`,\n          price: linkType === 'search' ? null : getPrice(`${type} | ${name}`, null, prices, pricingProvider, pricingMode, exchangeRate, currency),\n          iconURL: iconURLs[index],\n          marketURL: getStickerOrPatchLink(linkType, name, type),\n        })));\n      }\n    });\n    return stickers;\n  }\n  return null;\n};\n\nconst parseCharmInfo = (\n  descriptions,\n  linkType,\n  prices,\n  pricingProvider,\n  pricingMode,\n  exchangeRate,\n  currency,\n) => {\n  if (descriptions !== undefined && linkType !== undefined) {\n    let charms = [];\n\n    descriptions.forEach((description) => {\n      if (description.name === 'keychain_info') {\n        let names = description.value.split('><br>')[1].split(': ')[1].split('</center>')[0].split(', ');\n\n        names = handleStickerNamesWithCommas(names);\n        const iconURLs = description.value.split('src=\"');\n\n        iconURLs.shift();\n        iconURLs.forEach((iconURL, index) => {\n          iconURLs[index] = iconURL.split('><')[0];\n        });\n\n        charms = charms.concat(...names.map((name, index) => ({\n          name,\n          fullName: `Charm | ${name}`,\n          price: linkType === 'search' ? null : getPrice(`Charm | ${name}`, null, prices, pricingProvider, pricingMode, exchangeRate, currency),\n          iconURL: iconURLs[index],\n          marketURL: getStickerOrPatchLink(linkType, name, 'Charm'),\n        })));\n      }\n    });\n    return charms;\n  }\n  return null;\n};\n\nconst goToInternalPage = (targetURL) => {\n  chrome.tabs.query({}, (tabs) => {\n    for (let i = 0; i < tabs.length; i += 1) {\n      const tab = tabs[i];\n      if (tab.url === (`chrome-extension://${chrome.runtime.id}${targetURL}`)) { // TODO make this work in firefox or remove the whole thing\n        chrome.tabs.reload(tab.id, {}, () => { });\n        chrome.tabs.update(tab.id, { active: true });\n        return;\n      }\n    }\n    chrome.tabs.create({ url: targetURL });\n  });\n};\n\nconst listenToLocationChange = (callBackFunction) => {\n  let oldHref = document.location.href;\n\n  const locationObserver = new MutationObserver((mutations) => {\n    mutations.forEach(() => {\n      if (oldHref !== document.location.href) {\n        oldHref = document.location.href;\n        callBackFunction();\n      }\n    });\n  });\n\n  locationObserver.observe(document.querySelector('body'), {\n    subtree: true,\n    childList: true,\n  });\n};\n\nconst getAssetIDFromInspectLink = (inspectLink) => ((inspectLink !== null && inspectLink !== undefined) ? inspectLink.split('A')[1].split('D')[0] : null);\n\nconst getActivePage = (type, getActiveInventory) => {\n  let activePage = null;\n  if (type === 'inventory') {\n    document.querySelectorAll('.inventory_ctn').forEach((inventory) => {\n      if (inventory.style.display !== 'none') {\n        inventory.querySelectorAll('.inventory_page').forEach((page) => {\n          if (page.style.display !== 'none') activePage = page;\n        });\n      }\n    });\n  } else if (type === 'offer') {\n    const activeInventory = getActiveInventory();\n    if (activeInventory !== null) {\n      activeInventory.querySelectorAll('.inventory_page')\n        .forEach((page) => {\n          if (page.style.display !== 'none') activePage = page;\n        });\n    }\n  }\n  return activePage;\n};\n\nconst addPageControlEventListeners = (type, addFloatIndicatorsFunction) => {\n  const pageControls = document.getElementById('inventory_pagecontrols');\n  if (pageControls !== null) {\n    pageControls.addEventListener('click', () => {\n      setTimeout(() => {\n        if (type === 'inventory') addFloatIndicatorsFunction(getActivePage('inventory'));\n        else if (type === 'offer') addFloatIndicatorsFunction('page');\n      }, 100);\n    });\n  } else setTimeout(() => { addPageControlEventListeners(); }, 1000);\n};\n\n// gets the details of an item by matching the passed asset id with the ones from the api call\nconst getItemByAssetID = (items, assetIDToFind) => {\n  if (items === undefined || items.length === 0) return null;\n  return items.filter((item) => item.assetid === assetIDToFind)[0];\n};\n\nconst getAssetIDOfElement = (element) => {\n  const IDs = getIDsFromElement(element);\n  return IDs === null ? null : IDs.assetID;\n};\n\nconst addDopplerPhase = (item, dopplerInfo, showContrastingLook) => {\n  if (dopplerInfo !== null) {\n    const dopplerDiv = document.createElement('div');\n    dopplerDiv.classList.add('dopplerPhase');\n\n    switch (dopplerInfo.short) {\n      case 'SH': dopplerDiv.insertAdjacentHTML('beforeend', DOMPurify.sanitize(dopplerPhases.sh.element)); break;\n      case 'RB': dopplerDiv.insertAdjacentHTML('beforeend', DOMPurify.sanitize(dopplerPhases.rb.element)); break;\n      case 'EM': dopplerDiv.insertAdjacentHTML('beforeend', DOMPurify.sanitize(dopplerPhases.em.element)); break;\n      case 'BP': dopplerDiv.insertAdjacentHTML('beforeend', DOMPurify.sanitize(dopplerPhases.bp.element)); break;\n      default: {\n        dopplerDiv.innerText = dopplerInfo.short;\n        if (showContrastingLook) dopplerDiv.classList.add('contrastingBackground');\n      }\n    }\n\n    item.appendChild(dopplerDiv);\n  }\n};\n\nconst addFadePercentage = (item, patternInfo, showContrastingLook) => {\n  if (patternInfo !== null && patternInfo !== undefined && patternInfo.type === 'fade') {\n    const fadeDiv = document.createElement('div');\n    fadeDiv.classList.add('fadePercentageIndicator');\n    if (showContrastingLook) fadeDiv.classList.add('contrastingBackground');\n    fadeDiv.innerText = patternInfo.short;\n\n    item.appendChild(fadeDiv);\n  }\n};\n\nconst makeItemColorful = (itemElement, item, colorfulItemsEnabled) => {\n  if (colorfulItemsEnabled) {\n    if (item.dopplerInfo !== null) itemElement.setAttribute('style', `background-image: url(); background-color: #${item.dopplerInfo.color}`);\n    else itemElement.setAttribute('style', `background-image: url(); background-color: ${item.quality.backgroundcolor}; border-color: ${item.quality.backgroundcolor}`);\n  }\n};\n\n// adds StatTrak, Souvenir and exterior indicators as well as sticker price when applicable\nconst addSSTandExtIndicators = (\n  itemElement, item, showStickerPrice, showExterior, showContrastingLook,\n) => {\n  const stattrak = item.isStatrack ? 'ST' : '';\n  const souvenir = item.isSouvenir ? 'S' : '';\n  const exterior = item.exterior !== null ? item.exterior.localized_short : '';\n  const addonPrice = item.totalAddonPrice ? item.totalAddonPrice.display : '';\n  const showStickersClass = showStickerPrice ? '' : 'hidden';\n  const showExteriorsClass = showExterior ? '' : 'hidden';\n  const contrastingLookClass = showContrastingLook ? 'contrastingBackground' : '';\n\n  itemElement.insertAdjacentHTML(\n    'beforeend',\n    DOMPurify.sanitize(\n      `<div class='exteriorSTInfo ${contrastingLookClass}'>\n                <span class=\"souvenirYellow ${showExteriorsClass}\">${souvenir}</span>\n                <span class=\"stattrakOrange ${showExteriorsClass}\">${stattrak}</span>\n                <span class=\"exteriorIndicator ${showExteriorsClass}\">${exterior}</span>\n               </div>\n               <div class=\"stickerPrice ${contrastingLookClass} ${showStickersClass}\">${addonPrice}</div>`,\n    ),\n  );\n};\n\nconst addFloatIndicator = (itemElement, floatInfo, digitsToShow, showContrastingLook) => {\n  if (floatInfo !== null && itemElement !== null && floatInfo !== undefined\n    && itemElement.querySelector('div.floatIndicator') === null) {\n    const contrastingLookClass = showContrastingLook ? 'contrastingBackground' : '';\n    itemElement.insertAdjacentHTML(\n      'beforeend',\n      DOMPurify.sanitize(`<div class=\"floatIndicator ${contrastingLookClass}\">${getFloatAsFormattedString(floatInfo.floatvalue, digitsToShow)}</div>`),\n    );\n  }\n};\n\nconst addPaintSeedIndicator = (itemElement, floatInfo, showContrastingLook) => {\n  if (floatInfo !== null && floatInfo !== undefined && itemElement !== null\n    && floatInfo.paintseed !== null && floatInfo.paintseed !== undefined\n    && itemElement.querySelector('div.paintSeedIndicator') === null) {\n    const contrastingLookClass = showContrastingLook ? 'contrastingBackground' : '';\n\n    itemElement.insertAdjacentHTML(\n      'beforeend',\n      DOMPurify.sanitize(`<div class=\"paintSeedIndicator ${contrastingLookClass}\">${floatInfo.paintseed}</div>`),\n    );\n  }\n};\n\nconst addFloatRankIndicator = (itemElement, floatInfo, showContrastingLook) => {\n  if (floatInfo !== null && floatInfo !== undefined && itemElement !== null\n    && ((floatInfo.low_rank !== null && floatInfo.low_rank !== undefined)\n      || (floatInfo.high_rank !== null && floatInfo.high_rank !== undefined))\n    && itemElement.querySelector('div.floatRankIndicator') === null) {\n    let rankToShow = floatInfo.low_rank;\n\n    if ((!floatInfo.low_rank && floatInfo.high_rank)\n      || (floatInfo.low_rank && floatInfo.high_rank && floatInfo.wear_name === 'Battle-Scarred')) {\n      rankToShow = floatInfo.high_rank;\n    }\n\n    const contrastingLookClass = showContrastingLook ? 'contrastingBackground' : '';\n\n    itemElement.insertAdjacentHTML(\n      'beforeend',\n      DOMPurify.sanitize(`<div class=\"floatRankIndicator ${contrastingLookClass}\">#${rankToShow}</div>`),\n    );\n  }\n};\n\nconst addPriceIndicator = (\n  itemElement, priceInfo, currency, showContrastingLook, pricePercentage = 100,\n) => {\n  if (priceInfo !== undefined && priceInfo !== 'null' && priceInfo !== null) {\n    const disPlayPrice = pricePercentage === 100\n      ? priceInfo.display\n      : currencies[currency].sign + (priceInfo.price * (pricePercentage / 100)).toFixed(2);\n    const contrastingLookClass = showContrastingLook ? 'contrastingBackground' : '';\n    itemElement.insertAdjacentHTML(\n      'beforeend', DOMPurify.sanitize(`<div class='priceIndicator ${contrastingLookClass}'>${disPlayPrice}</div>`),\n    );\n  }\n};\n\nconst getDataFilledFloatTechnical = (floatInfo) => {\n  const lowFloatRankLine = (floatInfo.low_rank !== undefined && floatInfo.low_rank !== null) ? `Low Rank: ${floatInfo.low_rank}<br>` : '';\n  const highFloatRankLine = (floatInfo.high_rank !== undefined && floatInfo.high_rank !== null) ? `High Rank: ${floatInfo.high_rank}<br>` : '';\n  return `\n            Technical:<br>\n            Float Value: ${toPlainString(floatInfo.floatvalue)}<br>\n            Paint Index: ${floatInfo.paintindex}<br>\n            Paint Seed: ${floatInfo.paintseed}<br>\n            Origin: ${floatInfo.origin_name}<br>\n            Best Possible Float: ${floatInfo.min}<br>\n            Worst Possible Float: ${floatInfo.max}<br>\n            ${lowFloatRankLine}\n            ${highFloatRankLine}\n            <br>\n            Float info from <a href=\"https://pricempire.com/\" target=\"_blank\">pricempire.com</a>`;\n};\n\nconst souvenirExists = (itemInfo) => {\n  const collectionsWithSouvenirsToCheck = new RegExp(collectionsWithSouvenirs.join('|'), 'i');\n  return collectionsWithSouvenirsToCheck.test(itemInfo);\n};\n\nconst getFloatBarSkeleton = (type) => {\n  const typeClass = type === 'market' ? 'Market' : '';\n  return `<div class=\"floatBar${typeClass}\">\n    <div class=\"floatToolTip\">\n        <div>Float: <span class=\"floatDropTarget\">Waiting for pricempire.com</span></div>\n        <svg class=\"floatPointer\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"></path></svg>\n   </div>\n     <div class=\"progress\">\n        <div class=\"progress-bar floatBarFN\" title=\"${exteriors.factory_new.localized_name}\"></div>\n        <div class=\"progress-bar floatBarMW\" title=\"${exteriors.minimal_wear.localized_name}\"></div>\n        <div class=\"progress-bar floatBarFT\" title=\"${exteriors.field_tested.localized_name}\"></div>\n        <div class=\"progress-bar floatBarWW\" title=\"${exteriors.well_worn.localized_name}\"></div>\n        <div class=\"progress-bar floatBarBS\" title=\"${exteriors.battle_scarred.localized_name}\"></div>\n     </div>\n     <div class=\"showTechnical clickable\" title=\"Show Float Technical Information\">Show Technical</div>\n     <div class=\"floatTechnical hidden\"></div>\n    </div>`;\n};\n\nconst isSIHActive = () => {\n  const SIHSwitch = document.querySelector('.sih_status_container');\n  const SIHSwitchOffers = document.querySelector('.sih_panel_mode');\n  const SIHSwitchPanel = document.getElementById('switchPanel');\n  return (SIHSwitch !== null || SIHSwitchPanel !== null || SIHSwitchOffers !== null);\n};\n\nlet searchListenerTimeout = null;\nconst addSearchListener = (type, addFloatIndicatorsFunction) => {\n  let searchElement;\n  if (type === 'inventory') searchElement = document.getElementById('filter_control');\n  else if (type === 'offer') searchElement = document.querySelector('.filter_search_box');\n\n  if (searchElement !== null) {\n    searchElement.addEventListener('input', () => {\n      if (searchListenerTimeout !== null) clearTimeout(searchListenerTimeout);\n      searchListenerTimeout = setTimeout(() => {\n        if (type === 'inventory') addFloatIndicatorsFunction(getActivePage('inventory'));\n        else if (type === 'offer') addFloatIndicatorsFunction('page');\n        searchListenerTimeout = null;\n      }, 1000);\n    });\n  } else {\n    setTimeout(() => {\n      addSearchListener(type);\n    }, 1000);\n  }\n};\n\nconst getSessionID = () => {\n  const getSessionIDScript = 'document.querySelector(\\'body\\').setAttribute(\\'sessionid\\', g_sessionID);';\n  return injectScript(getSessionIDScript, true, 'getSessionID', 'sessionid');\n};\n\n// updates the SteamID of the extension's user in storage\nconst updateLoggedInUserInfo = () => {\n  const steamID = getUserSteamID();\n  if (steamID !== 'false' && steamID !== false && steamID !== null) {\n    chrome.storage.local.set({\n      steamIDOfUser: steamID,\n      steamSessionID: getSessionID(),\n    }, () => { });\n  }\n};\n\n// updates the nick name (persona name) of the extension's user in storage\nconst updateLoggedInUserName = () => {\n  const pullDownElement = document.getElementById('account_pulldown');\n\n  if (pullDownElement !== null) { // if it's  null then the user is not logged in\n    const nickName = pullDownElement.innerText;\n\n    chrome.storage.local.set({\n      nickNameOfUser: nickName,\n    }, () => { });\n  }\n};\n\nconst jumpToAnchor = (anchor) => {\n  if (anchor !== '') {\n    window.location = `${window.location.origin}${window.location.pathname}${anchor}`;\n  }\n};\n\nconst removeOfferFromActiveOffers = (offerID) => {\n  chrome.storage.local.get(['activeOffers'], ({ activeOffers }) => {\n    const itemsNotInThisOffer = activeOffers.items.filter((item) => {\n      return item.inOffer !== offerID;\n    });\n\n    const sentNotThisOffer = activeOffers.sent.filter((offer) => {\n      return offer.tradeofferid !== offerID;\n    });\n\n    const receivedNotThisOffer = activeOffers.received.filter((offer) => {\n      return offer.tradeofferid !== offerID;\n    });\n\n    chrome.storage.local.set({\n      activeOffers: {\n        lastFullUpdate: activeOffers.lastFullUpdate,\n        items: itemsNotInThisOffer,\n        sent: sentNotThisOffer,\n        received: receivedNotThisOffer,\n        descriptions: activeOffers.descriptions,\n      },\n    }, () => { });\n  });\n};\n\nconst addUpdatedRibbon = () => {\n  chrome.storage.local.get(['showUpdatedRibbon'], ({ showUpdatedRibbon }) => {\n    if (showUpdatedRibbon) {\n      document.querySelector('body').insertAdjacentHTML(\n        'afterbegin',\n        DOMPurify.sanitize(\n          `<div id=\"extensionUpdatedRibbon\">\n                       CS2 Trader Extension was updated to ${chrome.runtime.getManifest().version}. Check out the \n                      <a href=\"https://csgotrader.app/changelog/\" target=\"_blank\" title=\"Open CS2Trader Changelog\">\n                          Changelog\n                      </a>\n                      for details\n                      <span class=\"clickable\" id=\"closeUpdatedRibbon\" title=\"Close ribbon until the next update\">Close</span>\n                    </div>`,\n          { ADD_ATTR: ['target'] },\n        ),\n      );\n      document.getElementById('closeUpdatedRibbon').addEventListener('click', () => {\n        chrome.storage.local.set({ showUpdatedRibbon: false }, () => {\n          document.getElementById('extensionUpdatedRibbon').classList.add('hidden');\n        });\n      });\n    }\n  });\n};\n\nconst copyToClipboard = (text) => {\n  // this is a workaround to only being able to copy text\n  // to the clipboard that is selected in a textbox\n  document.querySelector('body').insertAdjacentHTML(\n    'beforeend',\n    DOMPurify.sanitize(`\n        <textarea id=\"text_area_to_copy_to_clipboard\" class=\"hidden-copy-textarea\" readonly=\"\">${text}</textarea>`),\n  );\n\n  const textAreaElement = document.getElementById('text_area_to_copy_to_clipboard');\n  textAreaElement.select();\n  document.execCommand('copy');\n  textAreaElement.remove();\n};\n\nconst changePageTitle = (type, text) => {\n  chrome.storage.local.get(['usefulTitles'], ({ usefulTitles }) => {\n    if (usefulTitles) {\n      let title = document.title.split(':: ')[1];\n      switch (type) {\n        case 'own_profile': title = 'My profile'; break;\n        case 'profile': title = `${title}'s profile`; break;\n        case 'market_listing': title = `${text} - Market Listings`; break;\n        case 'trade_offer': title = `${text} - Trade Offer`; break;\n        case 'own_inventory': title = 'My Inventory'; break;\n        case 'inventory': title = `${title}'s inventory`; break;\n        case 'trade_offers': title = text; break;\n        default: break;\n      }\n      document.title = title;\n    }\n  });\n};\n\nconst csgoFloatExtPresent = () => {\n  const csgoFloatCheckScript = `\n    document.querySelector('body').setAttribute('csgoFloat', window.CSGOFLOAT_EXTENSION_ID);\n  `;\n  const fromPage = injectScript(csgoFloatCheckScript, true, 'csgoFloatCheckScript', 'csgoFloat');\n  return fromPage !== 'undefined';\n};\n\nconst removeLinkFilterFromLinks = () => {\n  chrome.storage.local.get('linkFilterOff', ({ linkFilterOff }) => {\n    if (linkFilterOff) {\n      document.querySelectorAll('a').forEach((anchor) => {\n        const oldHref = anchor.getAttribute('href');\n        if (oldHref !== null && oldHref.includes('https://steamcommunity.com/linkfilter/?url=')) {\n          anchor.setAttribute(\n            'href',\n            oldHref.split('https://steamcommunity.com/linkfilter/?url=')[1],\n          );\n        }\n      });\n    }\n  });\n};\n\n// chrome only allows notification icons locally\n// or from trusted (by manifest) urls\n// this is a workaround to that because Steam's CDN is not in the manifest\nconst getRemoteImageAsObjectURL = (imageURL) => new Promise((resolve, reject) => {\n  fetch(new Request(imageURL)).then((response) => {\n    if (!response.ok) {\n      reject(response);\n      console.log(`Error code: ${response.status} Status: ${response.statusText}`);\n    } else return response.blob();\n  }).then((body) => {\n    resolve(URL.createObjectURL(body));\n  }).catch((err) => {\n    console.log(err);\n    reject(err);\n  });\n});\n\nconst getFloatDBLink = (item) => {\n  if (item.floatInfo) {\n    const category = item.name.includes('StatTrak™')\n      ? 2\n      : item.name.includes('Souvenir')\n        ? 3\n        : 1;\n    return `https://csfloat.com/db?name=${item.name}&defIndex=${item.floatInfo.defindex}&paintIndex=${item.floatInfo.paintindex}&paintSeed=${item.floatInfo.paintseed}&category=${category}&min=${item.floatInfo.floatvalue - 0.00000000000000001}&max=${item.floatInfo.floatvalue + 0.00000000000000001}`;\n  } return 'https://csfloat.com/db';\n};\n\nconst getBuffLink = (marketHashName) => {\n  const buffId = buffIds[marketHashName];\n  if (buffId) return `https://buff.163.com/goods/${buffId}`;\n  return `https://api.pricempire.com/v1/redirectBuff/${marketHashName}`;\n};\n\nconst getPricempireLink = (itemType, itemName, dopplerType, condition) => {\n  try {\n    switch (itemType) {\n      case 'gloves':\n        return `cs2-items/glove/${\n          itemName\n            .replace('★ ', '')\n            .trim()\n            .replace(/\\s*\\|\\s*/g, '-')\n            .toLowerCase()\n            .replace(/\\s+/g, '-')\n            .replace(/[^\\w-]+/g, '')\n        }/${condition\n          .replace(' ', '-')\n          .toLowerCase()}`;\n      case 'sticker':\n        // Last 4 characters of string are a number -> tournament year -> use tournament-sticker\n        if (/\\d{4}/.test(itemName)) {\n          return `cs2-items/tournament-sticker/sticker-${\n            itemName\n              .replace('Sticker | ', '')\n              .replace(/\\s*\\(\\w+\\)\\s*\\|\\s*/g, '-')\n              .replace(/\\s*\\|\\s*/g, '-')\n              .toLowerCase()\n              .replace(/\\s+/g, '-')\n          }/${\n            (itemName.match(/\\(\\w+\\)/) || [''])[0].replace(/[()]/g, '').toLowerCase()}`;\n        }\n        // Last 4 characters of string are not numbers -> not tournament year -> use sticker\n        return `cs2-items/sticker/sticker-${\n          itemName\n            .replace('Sticker | ', '')\n            .replace(/\\s*\\(\\w+\\)\\s*/g, '-')\n            .replace(/\\s*\\|\\s*/g, '-')\n            .trim()\n            .toLowerCase()\n            .replace(/\\s+/g, '-')\n            .replace(/-+$/, '')\n        }${\n          (itemName.match(/\\(\\w+\\)/) ? `/${itemName.match(/\\(\\w+\\)/)[0].replace(/[()]/g, '').toLowerCase()}` : '')\n        }`;\n      case 'container':\n        // this checks if there are 4 digits again -> year -> tournament\n        if (/\\d{4}/.test(itemName)) {\n          // For autograph capsules I would check if 'autograph' is in itemName here and handle that differently\n          const type = itemName.match(/(\\b\\w+\\b)\\s*\\(/);\n          return `cs2-items/tournament-team-sticker-capsule/${itemName\n            .toLowerCase()\n            .replace(/\\s+/g, '-')\n            .replace(/(\\d{4})-/, '$1/')\n            // no (holo/foil) in itemName still needs to be handled\n            .replace(/\\(([^/]+)\\/([^/]+)\\)/, '$1$2')}`\n            + `-${\n              type[1].toLowerCase()}`;\n        }\n        return `cs2-items/container/${\n          itemName\n            .replace(/\\s+/g, '-')\n            .replace(/[^\\w-]+/g, '')\n            .toLowerCase()}`;\n      case 'custom_player':\n        return `cs2-items/agent/${\n          itemName.toLowerCase()\n            .replace(/\\s*\\|\\s*/g, '-')\n            .replace(/\\s+/g, '-')\n            .replace(/[^\\w-]+/g, '')\n        }`;\n      case 'music_kit':\n        return `cs2-items/music-kit/${\n          itemName\n            .replace('StatTrak™ ', '')\n            .replace(/\\s*\\|\\s*/g, '-')\n            .replace(/\\s+/g, '-')\n            .toLowerCase()\n            .replace(/[^\\w-]+/g, '')\n        }${itemName.includes('StatTrak') ? '/stattrak' : ''}`;\n      case 'graffiti':\n        return `cs2-items/graffiti/${\n          itemName\n            .replace(/\\s*\\|\\s*/g, '-')\n            .toLowerCase()\n            .replace(/ \\(([^)]+)\\)/g, '/$1')\n            .replace(/\\s+/g, '-')}`;\n      case 'charm':\n        return `cs2-items/charm/${\n          itemName\n            .replace(/\\s*\\|\\s*/g, '-')\n            .toLowerCase()\n            .replace(/ \\(([^)]+)\\)/g, '/$1')\n            .replace(/\\s+/g, '-')\n            .replace(/[^\\w-]+/g, '')}`;\n      case 'collectible':\n        if (!(itemName.includes('Service Medal') || itemName.includes('Coin'))) {\n          return `cs2-items/pin/${itemName.toLowerCase().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '')}`;\n        }\n        // Should we return something else for service medals and coins?\n        return '';\n      default:\n        if (itemName.includes('★') && !itemName.includes('|')) {\n          return `cs2-items/skin/${\n            itemName\n              .replace('StatTrak™ ', '')\n              .replace('★ ', '')\n              .replace(/\\s+/g, '-')\n              .toLowerCase()\n          }${itemName.includes('StatTrak') ? '/stattrak' : ''}`;\n        }\n        if (itemName.includes('Souvenir')) {\n          return `cs2-items/skin/${\n            itemName\n              .replace('Souvenir', '')\n              .trim()\n              .replace(/\\s*\\|\\s*/g, '-')\n              .toLowerCase()\n              .replace(/\\s+/g, '-')\n          }/souvenir-${condition\n            .replace(' ', '-')\n            .toLowerCase()}`;\n        }\n        return `cs2-items/skin/${\n          itemName\n            .replace('StatTrak™', '')\n            .replace('★ ', '')\n            .replace('弐', '2')\n            .trim()\n            .replace(/\\s*\\|\\s*/g, '-')\n            .toLowerCase()\n            .replace(/\\s+/g, '-')\n            .replace(/[^\\w-]+/g, '')\n            .replace('--', '-')\n            .replace(/^-+|-+$/g, '')\n        }${dopplerType.toLowerCase().replace(' ', '-')\n        }${itemName.includes('StatTrak') ? '/stattrak-' : '/'\n        }${condition\n          .replace(' ', '-')\n          .toLowerCase()}`;\n    }\n  } catch (error) {\n    console.error('An error occurred:', error.message);\n  }\n  return '';\n};\n\n// runs in content scripts when steam pages are loaded\nconst refreshSteamAccessToken = () => {\n  chrome.storage.local.get(['steamAcessToken', 'steamAcessTokenValid'], ({ steamAcessToken, steamAcessTokenValid }) => {\n    const token = document.getElementById('application_config')\n      ?.getAttribute('data-loyalty_webapi_token')\n      ?.replace('\"', '')\n      .replace('\"', '');\n\n    if (!steamAcessTokenValid || (steamAcessTokenValid && steamAcessToken !== token)) {\n      // validate the token\n      chrome.runtime.sendMessage({ accessTokenToValidate: token }, (response) => {\n        if (response.valid) {\n          chrome.storage.local.set({ steamAcessToken: token, steamAcessTokenValid: true }, () => {\n            console.log('Steam access token updated');\n          });\n        } else console.log('Steam access token could not be validated');\n      });\n    } else console.log('Access token not changed');\n  });\n};\n\n//  unused atm\n// const generateRandomString = (length) => {\n//   let text = '';\n//   const allowedChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n//\n//   for (let i = 0; i < length; i++) {\n//     text += allowedChars.charAt(Math.floor(Math.random() * allowedChars.length));\n//   }\n//\n//   return text;\n// };\n\nexport {\n  logExtensionPresence, setAPIKeyFirstTime, arrayFromArrayOrNotArray,\n  getExteriorFromTags, getDopplerInfo, getQuality, parseStickerInfo,\n  handleStickerNamesWithCommas, removeFromArray, getType, changePageTitle,\n  getPattern, goToInternalPage, jumpToAnchor, copyToClipboard,\n  validateSteamAPIKey, getAssetIDFromInspectLink, updateLoggedInUserInfo,\n  listenToLocationChange, addPageControlEventListeners, getItemByAssetID,\n  getAssetIDOfElement, addDopplerPhase, getActivePage, makeItemColorful,\n  addSSTandExtIndicators, addFloatIndicator, addPriceIndicator, updateLoggedInUserName,\n  getDataFilledFloatTechnical, souvenirExists, removeLinkFilterFromLinks,\n  getFloatBarSkeleton, getInspectLink, csgoFloatExtPresent, setAccessTokenFirstTime,\n  isSIHActive, addSearchListener, getSessionID, validateSteamAccessToken,\n  getFloatAsFormattedString, getNameTag, parseCharmInfo,\n  removeOfferFromActiveOffers, addUpdatedRibbon, getRemoteImageAsObjectURL,\n  addFadePercentage, addPaintSeedIndicator, addFloatRankIndicator,\n  getAppropriateFetchFunc, getFloatDBLink, getBuffLink, refreshSteamAccessToken, getPricempireLink,\n};\n","import { logExtensionPresence, updateLoggedInUserInfo } from 'utils/utilsModular';\nimport { listenToAcceptTrade } from 'utils/tradeOffers';\nimport DOMPurify from 'dompurify';\n\nlogExtensionPresence();\nupdateLoggedInUserInfo();\nlistenToAcceptTrade();\n\nchrome.storage.local.get('autoSetSteamAPIKey', ({ autoSetSteamAPIKey }) => {\n  if (autoSetSteamAPIKey) {\n    if (document.getElementById('editForm').action.includes('registerkey')) { // if no API key registered yet, registers one\n      document.getElementById('domain').value = `registered_${Date.now()}`;\n      document.getElementById('agreeToTerms').checked = true;\n      document.querySelector('input[type=submit]').click();\n    } else { // if API key registered, just parse it and add it to extension\n      const apiKey = document.getElementById('bodyContents_ex').querySelector('p').innerText.split(': ')[1];\n\n      chrome.runtime.sendMessage({ apikeytovalidate: apiKey }, (response) => {\n        if (response.valid) {\n          chrome.storage.local.set({ steamAPIKey: apiKey, apiKeyValid: true }, () => {\n            document.getElementById('editForm').insertAdjacentHTML(\n              'afterend',\n              DOMPurify.sanitize(\n                `<div class=\"apiKeyAdded\" \">\n                        Added API key to CS2Trader Extension, if you don't like this happening, you can go to the options and turn Autoset off.\n                    </div>`,\n              ),\n            );\n          });\n        } else {\n          document.getElementById('editForm').insertAdjacentHTML(\n            'afterend',\n            DOMPurify.sanitize(\n              `<div style=\"color:red; margin-top: 10px;\">\n                    CS2Trader Extension could not validate your API key, please try again.\n                  </div>`,\n            ),\n          );\n          console.log('API key could not be validated');\n        }\n      });\n    }\n  }\n  // adds\n  const contentDiv = document.getElementById('BG_bottom');\n  contentDiv.insertAdjacentHTML(\n    'beforeend',\n    DOMPurify.sanitize(\n      `<div class=\"apiKeyMessage\">\n                <b>CS2 Trader:</b>\n                The Steam API allows you and others to access your Steam account programmatically.\n                You should not give it to people/services that you don't trust.\n                <div style=\"color:red\">\n                  If you see your offers getting canceled without any action on your part or\n                  otherwise suspect that someone else may have access to your account without your consent then\n                  <a href=\"https://steamcommunity.com/sharedfiles/filedetails/?id=1408053055\">Follow this guide to make sure that you are safe.</a>\n                </div>\n            </div>`,\n    ),\n  );\n});\n","import { injectScript } from 'utils/injection';\n\n// converts shitty annoying trade offer style SteamID to proper SteamID64\nconst getProperStyleSteamIDFromOfferStyle = (offerStyleID) => {\n  return `7656${Number(offerStyleID) + Number(1197960265728)}`;\n};\n\n// there are many different kinds of SteamID formats\n// this function converts the 64bit into the ones used in trade offers\nconst getOfferStyleSteamID = (steamID64) => {\n  return Number(steamID64.split('7656')[1]) - Number(1197960265728);\n};\n\n// gets SteamID of the user logged into steam (returns false if there is no user logged in)\nconst getUserSteamID = () => {\n  const getUserSteamIDScript = 'document.querySelector(\\'body\\').setAttribute(\\'steamidOfLoggedinUser\\', g_steamID);';\n  return injectScript(getUserSteamIDScript, true, 'steamidOfLoggedinUser', 'steamidOfLoggedinUser');\n};\n\n// gets the steam id of the user that's profile this script is run on\nconst getProfileOwnerSteamID = () => {\n  const steamIDOfProfileOwnerScript = 'document.querySelector(\\'body\\').setAttribute(\\'steamidOfProfileOwner\\', g_rgProfileData.steamid);';\n  return injectScript(steamIDOfProfileOwnerScript, true, 'steamidOfProfileOwner', 'steamidOfProfileOwner');\n};\n\nconst getGroupID = () => {\n  return document.querySelector('input[name=groupId]').value;\n};\n\nconst getSharedFileIDAndOwner = () => {\n  const pagingElement = document.querySelector('.commentthread_paging');\n\n  const ownerID = pagingElement.id.split('commentthread_PublishedFile_Public_')[1].split('_')[0];\n  const sharedFileID = pagingElement.id.split('_pagecontrols')[0].split('_')[4];\n\n  return { ownerID, sharedFileID };\n};\n\nexport {\n  getProperStyleSteamIDFromOfferStyle, getOfferStyleSteamID,\n  getUserSteamID, getProfileOwnerSteamID, getGroupID,\n  getSharedFileIDAndOwner,\n};\n","// only works on steam pages\n\nimport {\n  actions,\n  conditions,\n  eventTypes,\n  offerStates,\n  operators,\n} from 'utils/static/offers';\nimport {\n  getDopplerInfo,\n  getExteriorFromTags,\n  getInspectLink,\n  getNameTag,\n  getQuality,\n  getRemoteImageAsObjectURL,\n  getType,\n} from 'utils/utilsModular';\nimport { getFormattedPLPercentage, getItemMarketLink, isDopplerInName } from 'utils/simpleUtils';\nimport { notifyOnDiscord, playNotificationSound } from 'utils/notifications';\nimport addPricesAndFloatsToInventory from 'utils/addPricesAndFloats';\nimport { getPlayerSummaries } from 'utils/ISteamUser';\nimport { getProperStyleSteamIDFromOfferStyle } from 'utils/steamID';\nimport { getTradeOffers } from 'utils/IEconService';\nimport { prettyPrintPrice } from 'utils/pricing';\nimport steamApps from 'utils/static/steamApps';\nimport { getItemByIDs } from './itemsToElementsToItems';\n\nconst createTradeOfferJSON = (itemsToGive, itemsToReceive) => {\n  return {\n    newversion: true,\n    version: 2,\n    me: {\n      assets: itemsToGive,\n      currency: [],\n      ready: false,\n    },\n    them: {\n      assets: itemsToReceive,\n      currency: [],\n      ready: false,\n    },\n  };\n};\n\n// only works in content scripts, not in background\nconst acceptOffer = (offerID, partnerID) => {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.get(['steamSessionID'], ({ steamSessionID }) => {\n      const myHeaders = new Headers();\n      myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n\n      const request = new Request(`https://steamcommunity.com/tradeoffer/${offerID}/accept`,\n        {\n          method: 'POST',\n          headers: myHeaders,\n          referrer: `https://steamcommunity.com/tradeoffer/${offerID}/`,\n          body: `sessionid=${steamSessionID}&serverid=1&tradeofferid=${offerID}&partner=${partnerID}&captcha=`,\n        });\n\n      fetch(request).then((response) => {\n        if (!response.ok) {\n          console.log(`Error code: ${response.status} Status: ${response.statusText}`);\n          reject({ status: response.status, statusText: response.statusText });\n        } else return response.json();\n      }).then((body) => {\n        resolve(body);\n      }).catch((err) => {\n        console.log(err);\n        reject(err);\n      });\n    });\n  });\n};\n\n// opens the offer in a new tab where it gets accepted\nconst openAndAcceptOffer = (offerID, partnerID) => {\n  chrome.tabs.create({\n    url: `https://steamcommunity.com/tradeoffer/${offerID}/?csgotrader_accept=true&partner=${partnerID}`,\n  });\n};\n\n// listen to accept trade instruction from background script\n// accept trade offer with retry\nconst listenToAcceptTrade = () => {\n  chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    if (request.acceptOffer) {\n      let acceptTries = 1;\n\n      const acceptInterval = setInterval(() => {\n        if (acceptTries <= 5) {\n          acceptTries += 1;\n          acceptOffer(request.acceptOffer.offerID, request.acceptOffer.partnerID).then(() => {\n            clearInterval(acceptInterval);\n            sendResponse({ success: true });\n          }).catch((err) => {\n            console.log(err);\n            sendResponse({ success: false });\n          });\n        } clearInterval(acceptInterval);\n      }, 5000);\n    }\n    return true; // needed to make the response async\n  });\n};\n\n// trade offers can't be accepted from background scripts because of CORS\n// this function looks for tab that has Steam open and injects the accept script\nconst acceptTradeInBackground = (offerID, partnerID) => {\n  chrome.permissions.contains({ permissions: ['tabs'] }, (permission) => {\n    if (permission) {\n      chrome.tabs.query({ url: 'https://steamcommunity.com/*' }, (tabs) => {\n        if (tabs.length !== 0) {\n          chrome.tabs.sendMessage(tabs[0].id, {\n            acceptOffer: {\n              offerID,\n              partnerID,\n            },\n          }, () => {});\n        } else openAndAcceptOffer(offerID, partnerID);\n      });\n    }\n  });\n};\n\n// works in background pages as well\nconst declineOffer = (offerID) => {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.get(['steamSessionID'], ({ steamSessionID }) => {\n      const myHeaders = new Headers();\n      myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n\n      const request = new Request(`https://steamcommunity.com/tradeoffer/${offerID}/decline`,\n        {\n          method: 'POST',\n          headers: myHeaders,\n          body: `sessionid=${steamSessionID}`,\n        });\n\n      fetch(request).then((response) => {\n        if (!response.ok) {\n          console.log(`Error code: ${response.status} Status: ${response.statusText}`);\n          reject({ status: response.status, statusText: response.statusText });\n        } else return response.json();\n      }).then((body) => {\n        if (body.tradeofferid === offerID) {\n          resolve(body);\n        } else reject(body);\n      }).catch((err) => {\n        console.log(err);\n        reject(err);\n      });\n    });\n  });\n};\n\nconst sendOffer = (partnerID, tradeOfferJSON, token, message) => {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.get(['steamSessionID'], ({ steamSessionID }) => {\n      const myHeaders = new Headers();\n      myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n\n      const request = new Request('https://steamcommunity.com/tradeoffer/new/send',\n        {\n          method: 'POST',\n          headers: myHeaders,\n          body: `sessionid=${steamSessionID}&serverid=1&partner=${getProperStyleSteamIDFromOfferStyle(partnerID)}&tradeoffermessage=${message}&json_tradeoffer=${JSON.stringify(tradeOfferJSON)}&captcha=&trade_offer_create_params=${JSON.stringify({ trade_offer_access_token: token })}`,\n        });\n\n      fetch(request).then((response) => {\n        if (!response.ok) {\n          console.log(`Error code: ${response.status} Status: ${response.statusText}`);\n          reject({ status: response.status, statusText: response.statusText });\n        } else return response.json();\n      }).then((body) => {\n        resolve(body);\n      }).catch((err) => {\n        console.log(err);\n        reject(err);\n      });\n    });\n  });\n};\n\nconst notifyAboutOffer = (offer) => {\n  chrome.storage.local.get('currency', ({ currency }) => {\n    const steamIDOfPartner = getProperStyleSteamIDFromOfferStyle(offer.accountid_other);\n    getPlayerSummaries([steamIDOfPartner]).then((summary) => {\n      const userDetails = summary[steamIDOfPartner];\n\n      let icon = '/images/cstlogo128.png';\n      getRemoteImageAsObjectURL(userDetails.avatar).then((iconURL) => {\n        icon = iconURL;\n      }).catch((e) => {\n        console.log(e);\n      }).finally(() => {\n        chrome.notifications.create(`offer_received_${offer.tradeofferid}`, {\n          type: 'basic',\n          iconUrl: icon,\n          title: `Offer from ${userDetails.personaname} (${prettyPrintPrice(currency, offer.profitOrLoss.toFixed(2))})!`,\n          message: `You just received a new trade offer from ${userDetails.personaname}!`,\n        }, () => {\n          playNotificationSound();\n        });\n      });\n    });\n  });\n};\n\nconst createDiscordSideSummary = (offerSideItems, itemsWithDetails) => {\n  const itemNames = {};\n  let summary = '';\n\n  if (offerSideItems !== null && offerSideItems !== undefined) {\n    offerSideItems.forEach((itemToGive) => {\n      const item = getItemByIDs(\n        itemsWithDetails,\n        itemToGive.appid.toString(),\n        itemToGive.contextid,\n        itemToGive.assetid,\n      );\n      if (item) {\n        let itemName = item.dopplerInfo\n          ? `${item.market_hash_name} (${item.dopplerInfo.name})`\n          : item.market_hash_name;\n        if (item.price) itemName += ` (${item.price.display})`;\n        if (item.floatInfo) itemName += ` (${item.floatInfo.floatvalue.toFixed(4)})`;\n        \n        if (itemName in itemNames) {\n          itemNames[itemName] += 1;\n        } else {\n          itemNames[itemName] = 1;\n        }\n      }\n    });\n\n    for (const [name, amount] of Object.entries(itemNames)) {\n      summary += amount > 1 ? `${name} (x${amount})\\n` : `${name}\\n`;\n    }\n    return summary;\n  }\n  \n  // 1024 is max size of an embed field\n  if (summary.length > 1024) {\n    // cut off all chars after 1024\n    summary = summary.slice(0, 1024);\n    // remove lines until there are 4 chars to spare\n    while (summary.length > 1020) {\n      summary = summary.split('\\n').slice(0, -1).join('\\n');\n    }\n    // add \\n... \n    summary += '\\n...';\n  }\n\n  return summary;\n};\n\nconst notifyAboutOfferOnDiscord = (offer, items) => {\n  chrome.storage.local.get('currency', ({ currency }) => {\n    const steamIDOfPartner = getProperStyleSteamIDFromOfferStyle(offer.accountid_other);\n    getPlayerSummaries([steamIDOfPartner]).then((summary) => {\n      const userDetails = summary[steamIDOfPartner];\n\n      const title = `Trade Offer (${prettyPrintPrice(currency, offer.profitOrLoss.toFixed(2))} ${offer.PLPercentageFormatted})`;\n      const description = offer.message !== '' ? `*${offer.message}*` : '';\n      \n      const giving = createDiscordSideSummary(offer.items_to_give, items);\n      const receiving = createDiscordSideSummary(offer.items_to_receive, items);\n\n      const fields = [];\n      if (giving) fields.push({ name: `Giving (${prettyPrintPrice(currency, offer.yourItemsTotal.toFixed(2))})`, inline: false, value: giving });\n      if (receiving) fields.push({ name: `Receiving (${prettyPrintPrice(currency, offer.theirItemsTotal.toFixed(2))})`, inline: false, value: receiving });\n      \n      const timestamp = new Date(offer.time_updated * 1000).toISOString();\n\n      const embed = {\n        footer: {\n          text: 'CS2 Trader',\n          icon_url: 'https://csgotrader.app/cstlogo48.png',\n        },\n        author: {\n          name: userDetails.personaname,\n          icon_url: userDetails.avatar,\n          url: `https://steamcommunity.com/profiles/${steamIDOfPartner}`,\n        },\n        title,\n        description,\n        // #ff8c00 (taken from csgotrader.app text color)\n        color: 16747520,\n        fields,\n        timestamp,\n        type: 'rich',\n        url: `https://steamcommunity.com/tradeoffer/${offer.tradeofferid}`,\n      };\n\n      notifyOnDiscord(embed);\n    });\n  });\n};\n\n// info about the active offers is kept in storage\n// so we can check if an item is present in another offer\n// also to know when offer loading is necessary when monitoring offers\nconst updateActiveOffers = (offers, items) => {\n  // even though active offers are requested\n  // not all of them has the active state (2)\n  // we need the actual number of active offers to compare with the notification count\n  let receivedActiveCount = 0;\n  if (offers.trade_offers_received) {\n    offers.trade_offers_received.forEach((offer) => {\n      if (offer.trade_offer_state === offerStates['2'].key) receivedActiveCount += 1;\n    });\n  }\n\n  chrome.storage.local.get('showNumberOfOfferOnBadge', ({ showNumberOfOfferOnBadge }) => {\n    if (showNumberOfOfferOnBadge) {\n      chrome.action.setBadgeText({ text: receivedActiveCount.toString() });\n    }\n  });\n\n  let sentActiveCount = 0;\n  if (offers.trade_offers_sent) {\n    offers.trade_offers_sent.forEach((offer) => {\n      if (offer.trade_offer_state === offerStates['2'].key) sentActiveCount += 1;\n    });\n  }\n\n  chrome.storage.local.set({\n    activeOffers: {\n      lastFullUpdate: Math.floor(Date.now() / 1000),\n      items,\n      sent: offers.trade_offers_sent,\n      sentActiveCount,\n      received: offers.trade_offers_received,\n      receivedActiveCount,\n      descriptions: offers.descriptions,\n    },\n  }, () => {});\n};\n\nconst extractItemsFromOffers = (offers, sentOrReceived, userID) => {\n  const itemsToReturn = [];\n  if (offers) {\n    offers.forEach((offer) => {\n      if (offer.items_to_give !== undefined) {\n        offer.items_to_give.forEach((item, index) => {\n          itemsToReturn.push({\n            ...item,\n            owner: userID,\n            position: index,\n            inOffer: offer.tradeofferid,\n            side: 'your',\n            offerOrigin: sentOrReceived,\n          });\n        });\n      }\n      if (offer.items_to_receive !== undefined) {\n        offer.items_to_receive.forEach((item, index) => {\n          itemsToReturn.push({\n            ...item,\n            owner: getProperStyleSteamIDFromOfferStyle(offer.accountid_other),\n            position: index,\n            inOffer: offer.tradeofferid,\n            side: 'their',\n            offerOrigin: sentOrReceived,\n          });\n        });\n      }\n    });\n  }\n\n  return itemsToReturn;\n};\n\nconst matchItemsWithDescriptions = (items) => {\n  const itemsToReturn = [];\n  items.forEach((item) => {\n    // some items don't have descriptions for some reason - will have to be investigated later\n    if (item.market_hash_name !== undefined) {\n      const appID = item.appid.toString();\n      itemsToReturn.push({\n        appid: appID,\n        contextid: item.contextid.toString(),\n        name: item.name,\n        marketable: item.marketable,\n        market_hash_name: item.market_hash_name,\n        name_color: item.name_color,\n        marketlink: getItemMarketLink(item.appid.toString(), item.market_hash_name),\n        classid: item.classid,\n        instanceid: item.instanceid,\n        assetid: item.assetid,\n        position: item.position,\n        side: item.side,\n        dopplerInfo: isDopplerInName(item.name) ? getDopplerInfo(item.icon_url) : null,\n        exterior: getExteriorFromTags(item.tags),\n        iconURL: item.icon_url,\n        inspectLink: getInspectLink(item),\n        quality: getQuality(item.tags),\n        isStatrack: item.name.includes('StatTrak™'),\n        isSouvenir: item.name.includes('Souvenir'),\n        starInName: item.name.includes('★'),\n        nametag: getNameTag(item),\n        owner: item.owner,\n        type: appID === steamApps.CSGO.appID ? getType(item.tags) : null,\n        floatInfo: null,\n        patternInfo: null,\n        descriptions: item.descriptions,\n        inOffer: item.inOffer,\n        offerOrigin: item.offerOrigin,\n      });\n    }\n  });\n\n  return itemsToReturn;\n};\n\nconst matchItemsAndAddDetails = (offers, userID) => {\n  return new Promise((resolve) => {\n    let allItemsInOffer = extractItemsFromOffers(offers.trade_offers_sent, 'sent', userID);\n    allItemsInOffer = allItemsInOffer.concat(\n      extractItemsFromOffers(offers.trade_offers_received, 'received', userID),\n    );\n\n    const itemsWithMoreInfo = [];\n    if (allItemsInOffer) {\n      allItemsInOffer.forEach((item) => {\n        if (offers.descriptions) {\n          const itemDescription = offers.descriptions.find((description) => {\n            return description.classid === item.classid\n              && description.instanceid === item.instanceid;\n          });\n          itemsWithMoreInfo.push({ ...item, ...itemDescription });\n        }\n      });\n    }\n\n    const matchedItems = matchItemsWithDescriptions(itemsWithMoreInfo);\n\n    addPricesAndFloatsToInventory(matchedItems).then(({ items }) => {\n      resolve(items);\n    });\n  });\n};\n\nconst logTradeOfferEvents = (events) => {\n  chrome.storage.local.get(['tradeOffersEventLogs'], ({ tradeOffersEventLogs }) => {\n    chrome.storage.local.set({\n      tradeOffersEventLogs: [...tradeOffersEventLogs, ...events],\n    }, () => {});\n  });\n};\n\nconst createTradeOfferEvent = (offer, type, ruleIndex) => {\n  const eventType = eventTypes[type] !== undefined ? eventTypes[type].key : type;\n  return {\n    type: eventType,\n    rule: ruleIndex + 1,\n    steamID: getProperStyleSteamIDFromOfferStyle(offer.accountid_other),\n    offerID: offer.tradeofferid,\n    timestamp: Date.now(),\n  };\n};\n\nconst executeVerdict = (offer, ruleNumber, verdict, items, offersToAcceptCount) => {\n  logTradeOfferEvents([createTradeOfferEvent(offer, verdict, ruleNumber)]);\n\n  switch (verdict) {\n    case actions.notify.key: notifyAboutOffer(offer); break;\n    case actions.notify_discord.key: notifyAboutOfferOnDiscord(offer, items); break;\n    case actions.decline.key: declineOffer(offer.tradeofferid); break;\n    case actions.accept.key: setTimeout(() => {\n      acceptTradeInBackground(\n        offer.tradeofferid,\n        getProperStyleSteamIDFromOfferStyle(offer.accountid_other),\n      );\n    }, offersToAcceptCount * 2000); break;\n    default: break;\n  }\n};\n\nconst evaluateCondition = (offer, condition) => {\n  // safeguard against corrupted offer data\n  if (!((offer.items_to_receive === undefined || offer.items_to_receive.length === 0)\n    && (offer.items_to_give === undefined || offer.items_to_give.length === 0))) {\n    if (condition.type === conditions.profit_over.key\n      && offer.profitOrLoss >= condition.value) {\n      return true;\n    }\n    if (condition.type === conditions.profit_under.key\n      && offer.profitOrLoss < condition.value) {\n      return true;\n    }\n    if (condition.type === conditions.profit_percentage_over.key\n      && offer.PLPercentage >= (condition.value / 100) + 1) {\n      return true;\n    }\n    if (condition.type === conditions.profit_percentage_under.key\n      && offer.PLPercentage < (condition.value / 100) + 1) {\n      return true;\n    }\n    if (condition.type === conditions.receiving_value_over.key\n      && offer.theirItemsTotal > condition.value) {\n      return true;\n    }\n    if (condition.type === conditions.receiving_value_under.key\n      && offer.theirItemsTotal < condition.value) {\n      return true;\n    }\n    if (condition.type === conditions.giving_value_over.key\n      && offer.yourItemsTotal > condition.value) {\n      return true;\n    }\n    if (condition.type === conditions.giving_value_under.key\n      && offer.yourItemsTotal < condition.value) {\n      return true;\n    }\n    if (condition.type === conditions.has_message.key && offer.message !== '') {\n      return true;\n    } if (condition.type === conditions.no_message.key && offer.message === '') {\n      return true;\n    }\n    if (condition.type === conditions.message_includes.key\n      && offer.message.includes(condition.value)) {\n      return true;\n    }\n    if (condition.type === conditions.message_doesnt_include.key\n      && offer.message !== ''\n      && !offer.message.includes(condition.value)) {\n      return true;\n    }\n    if (condition.type === conditions.receiving_items_over.key\n      && ((offer.items_to_receive !== undefined\n        && offer.items_to_receive.length >= condition.value)\n        || (condition.value <= 0 && offer.items_to_receive === undefined))) {\n      return true;\n    }\n    if (condition.type === conditions.receiving_items_under.key\n      && ((offer.items_to_receive !== undefined\n        && offer.items_to_receive.length < condition.value)\n        || (condition.value <= 1 && offer.items_to_receive === undefined))) {\n      return true;\n    }\n    if (condition.type === conditions.giving_items_over.key\n      && ((offer.items_to_give !== undefined\n        && offer.items_to_give.length >= condition.value)\n        || (condition.value <= 0 && offer.items_to_give === undefined))) {\n      return true;\n    }\n    if (condition.type === conditions.giving_items_under.key\n      && ((offer.items_to_give !== undefined\n        && offer.items_to_give.length < condition.value)\n        || (condition.value <= 1 && offer.items_to_give === undefined))) {\n      return true;\n    }\n    if (condition.type === conditions.receiving_non_csgo_items.key\n      && offer.theirIncludesNonCSGO) {\n      return true;\n    }\n    if (condition.type === conditions.giving_non_csgo_items.key\n      && offer.yourIncludesNonCSGO) {\n      return true;\n    }\n    if (condition.type === conditions.receiving_no_price_items.key\n      && offer.theirIncludesItemWIthNoPrice) {\n      return true;\n    }\n    if (condition.type === conditions.giving_no_price_items.key\n      && offer.yourIncludesItemWIthNoPrice) {\n      return true;\n    }\n    return false;\n  }\n  return false;\n};\n\nconst evaluateRule = (offer, rule) => {\n  for (let i = 0; i < rule.conditions.length; i += 1) {\n    if (evaluateCondition(offer, rule.conditions[i])) {\n      if (rule.operators[i] === undefined || rule.operators[i] === operators.or.key) {\n        return true;\n      }\n    } else if (rule.operators[i] === undefined\n      || rule.operators[i] === operators.and.key) {\n      return false;\n    }\n  }\n  return false;\n};\n\nconst evaluateOffers = (offers, rules, items) => {\n  let offersToAcceptCount = 0;\n\n  offers.forEach((offer) => {\n    for (const [index, rule] of rules.entries()) {\n      if (rule.active) {\n        if (evaluateRule(offer, rule)) {\n          if (rule.action === actions.accept.key) offersToAcceptCount += 1;\n          executeVerdict(offer, index, rule.action, items, offersToAcceptCount);\n          break;\n        }\n      }\n    }\n  });\n};\n\nconst addOfferTotals = (offers, items) => {\n  if (offers) {\n    offers.forEach((offer) => {\n      offer.theirItemsTotal = 0.0;\n      offer.theirIncludesItemWIthNoPrice = false;\n      offer.theirIncludesNonCSGO = false;\n\n      if (offer.items_to_receive) {\n        offer.items_to_receive.forEach((item) => {\n          const itemWithDescription = items.find((description) => {\n            return description.classid === item.classid\n              && description.instanceid === item.instanceid;\n          });\n\n          if (itemWithDescription) {\n            if (itemWithDescription.appid === steamApps.CSGO.appID) {\n              if (itemWithDescription.price && itemWithDescription.price.price) {\n                offer.theirItemsTotal += parseFloat(itemWithDescription.price.price);\n              } else offer.theirIncludesItemWIthNoPrice = true;\n            } else {\n              offer.theirIncludesItemWIthNoPrice = true;\n              offer.theirIncludesNonCSGO = true;\n            }\n          }\n        });\n      }\n\n      offer.yourIncludesItemWIthNoPrice = false;\n      offer.yourItemsTotal = 0.0;\n      offer.yourIncludesNonCSGO = false;\n\n      if (offer.items_to_give) {\n        offer.items_to_give.forEach((item) => {\n          const itemWithDescription = items.find((description) => {\n            return description.classid === item.classid\n              && description.instanceid === item.instanceid;\n          });\n\n          if (itemWithDescription) {\n            if (itemWithDescription.appid === steamApps.CSGO.appID) {\n              if (itemWithDescription.price && itemWithDescription.price.price) {\n                offer.yourItemsTotal += parseFloat(itemWithDescription.price.price);\n              } else offer.yourIncludesItemWIthNoPrice = true;\n            } else {\n              offer.yourIncludesItemWIthNoPrice = true;\n              offer.yourIncludesNonCSGO = true;\n            }\n          }\n        });\n      }\n\n      offer.profitOrLoss = offer.theirItemsTotal - offer.yourItemsTotal;\n      offer.PLPercentage = offer.theirItemsTotal / offer.yourItemsTotal;\n      offer.PLPercentageFormatted = getFormattedPLPercentage(\n        offer.yourItemsTotal,\n        offer.theirItemsTotal,\n      );\n    });\n\n    return offers;\n  }\n  return undefined; // if there are no offers Steam does not include the property at all\n};\n\n// loads active offers, updates active offers in storage\n// checks for new offers and starts evaluation\nconst updateTrades = () => {\n  return new Promise((resolve, reject) => {\n    // active offers has the previously loaded active trade offer info\n    chrome.storage.local.get(['steamIDOfUser', 'activeOffers', 'offerEvalRules'], ({ steamIDOfUser, activeOffers, offerEvalRules }) => {\n      const prevProcessedOffersIDs = [];\n      if (activeOffers.received) {\n        activeOffers.received.forEach((offer) => {\n          prevProcessedOffersIDs.push(offer.tradeofferid);\n        });\n      }\n\n      // requesting the latest active offer info from Steam\n      getTradeOffers(1, 0, 1, 1, 1).then((offersData) => {\n        const newOffers = [];\n        const newOfferEvents = [];\n\n        if (offersData.trade_offers_received) {\n          offersData.trade_offers_received.forEach((offer) => {\n            if (!prevProcessedOffersIDs.includes(offer.tradeofferid)\n              && offer.trade_offer_state === offerStates['2'].key) {\n              newOffers.push(offer);\n              newOfferEvents.push(createTradeOfferEvent(offer, eventTypes.new.key, 0));\n            }\n          });\n        }\n\n        logTradeOfferEvents(newOfferEvents);\n\n        matchItemsAndAddDetails(offersData, steamIDOfUser).then((items) => {\n          offersData.trade_offers_received = addOfferTotals(\n            offersData.trade_offers_received, items,\n          );\n          offersData.trade_offers_sent = addOfferTotals(\n            offersData.trade_offers_sent, items,\n          );\n\n          updateActiveOffers(offersData, items);\n          evaluateOffers(newOffers, offerEvalRules, items);\n          resolve({\n            offersData,\n            items,\n          });\n        });\n      }).catch((err) => {\n        console.log(err);\n        reject(err);\n      });\n    });\n  });\n};\n\nconst removeOldOfferEvents = () => {\n  chrome.storage.local.get(['tradeOffersEventLogs'], ({ tradeOffersEventLogs }) => {\n    const now = Date.now();\n    const recentEvents = tradeOffersEventLogs.filter((event) => {\n      const delta = (now - event.timestamp) / 1000;\n      return delta < 86400 * 7;\n    });\n\n    chrome.storage.local.set({\n      tradeOffersEventLogs: recentEvents,\n    }, () => {});\n  });\n};\n\nexport {\n  acceptOffer, declineOffer, updateActiveOffers, extractItemsFromOffers, sendOffer,\n  matchItemsAndAddDetails, updateTrades, removeOldOfferEvents, acceptTradeInBackground,\n  createTradeOfferJSON, listenToAcceptTrade,\n};\n"],"names":["module","exports","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","fun","thisValue","args","x","Func","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","length","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","_transformCaseFunc","l","element","lcElement","clone","object","newObject","property","value","lookupGetter","prop","desc","get","fallbackValue","console","warn","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","EXPRESSIONS","__proto__","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_","createDOMPurify","undefined","DOMPurify","root","version","removed","document","nodeType","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","i","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","factory","defineProperty","AcidFadeCalculator","AmberFadeCalculator","FadeCalculator","FadeCalculator_1","AmberFadeCalculator_1","AcidFadeCalculator_1","default","BaseCalculator_1","constructor","super","this","weapons","reversedWeapons","tradeUpWeapons","configs","pattern_offset_x_start","pattern_offset_x_end","pattern_offset_y_start","pattern_offset_y_end","pattern_rotate_start","pattern_rotate_end","RandomNumberGenerator_1","minPercentage","getSupportedWeapons","getFadePercentage","weapon","seed","getFadePercentages","getAllFadePercentages","map","percentages","includes","Error","config","rawResults","maxSeed","randomNumberGenerator","setSeed","xOffset","randomFloat","rotation","rawResult","usesRotation","usesXOffset","bestResult","worstResult","Math","min","max","resultRange","percentageResults","sortedPercentageResults","sort","a","b","percentageResult","percentage","ranking","MP7","mIdum","mIy","mIv","NTAB","IA","IM","IQ","IR","NDIV","AM","RNMX","generateRandomNumber","k","j","floor","low","high","float","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","key","o","obj","hasOwnProperty","chrome","i18n","getMessage","currencies","short","long","sign","pricingProviders","url","description","pricing_modes","csgotrader","common","internal_name","prettyName","common_weapon","uncommon","uncommon_weapon","rare","rare_weapon","rare_character","mythical","mythical_weapon","mythical_character","legendary","legendary_weapon","legendary_character","ancient","ancient_weapon","ancient_character","contraband","contraband_weapon","default_weapon","rarities","runtime","getURL","sortingModes","reverse","price_desc","price_asc","name_asc","name_desc","tradability_desc","tradability_asc","float_asc","float_desc","sticker_price_asc","sticker_price_desc","charm_price_asc","charm_price_desc","listingsSortingModes","conditions","pretty","with_value","value_type","default_value","actions","operators","injectScript","Date","now","offerConditions","offerActions","getTime","scriptString","toRemove","id","executeAndReturn","tempEl","dispatchEvent","CustomEvent","result","querySelector","require","logExtensionPresence","getManifest","log","updateLoggedInUserInfo","steamID","storage","local","steamIDOfUser","steamSessionID","onMessage","addListener","request","sender","sendResponse","acceptOffer","acceptTries","acceptInterval","setInterval","offerID","partnerID","Promise","resolve","reject","myHeaders","Headers","append","Request","method","headers","referrer","fetch","then","response","ok","json","status","statusText","catch","err","clearInterval","success","autoSetSteamAPIKey","getElementById","action","checked","click","apiKey","innerText","split","sendMessage","apikeytovalidate","valid","steamAPIKey","apiKeyValid","insertAdjacentHTML"],"sourceRoot":""}