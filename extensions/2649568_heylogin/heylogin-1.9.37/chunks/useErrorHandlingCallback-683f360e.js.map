{"version":3,"file":"useErrorHandlingCallback-683f360e.js","sources":["../../../src/util/react/useErrorHandlingCallback.ts"],"sourcesContent":["import { DependencyList, useCallback } from 'react';\n\nimport { trackError } from 'backend-client-web';\n\n/**\n * Variant of useCallback for functions that are passed into react event handlers or similar. This\n * ensures that sync and async exceptions are passed to trackError.\n */\nexport default function useErrorHandlingCallback<A extends any[]>(\n  callback: (...args: A) => Promise<void>,\n  deps: DependencyList,\n): (...args: A) => void {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback((...args: A) => {\n    (async () => {\n      await callback(...args);\n    })().catch(trackError);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- deps are checked for this function itself, see .eslintrc\n  }, deps);\n}\n"],"names":["useErrorHandlingCallback","callback","deps","useCallback","args","catch","trackError"],"mappings":";;AAQwBA,SAAAA,yBACtBC,UACAC,MACsB;AAEfC,SAAAA,aAAAA,YAAY,IAAIC,SAAY;AACjC,KAAC,YAAY;AACLH,YAAAA,SAAS,GAAGG,IAAI;AAAA,IAAA,KACnBC,MAAMC,UAAU;AAAA,KAEpBJ,IAAI;AACT;"}