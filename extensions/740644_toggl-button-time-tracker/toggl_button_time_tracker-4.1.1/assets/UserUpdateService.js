import{al as p,a as c,am as u,U as w,C as y,W as h,T as _,P as T,R as L,an as k,ao as F,ap as C}from"./constants.js";import{l as o,D as l}from"./errorReport.js";import{T as E,C as A,O as U,S as O,D as S,u as g}from"./ProjectsCreateService.js";import{B as i}from"./browser-polyfill.js";class R extends p{async invoke(e,s={store:!1}){const{data:a}=await c.workspaces.preferences.fetch(e);return s.store&&await this.store(a),a}}const d=new R("FETCH_WS_PREFERENCES_V4"),I=(t=null)=>u(d.storageKey,t),r={name:"FULL_FETCH_ALARM",retryAlarmName:"FULL_FETCH_RETRY",statusKey:"fullFetchStatus",handler:async()=>{var e,s,a;o.debug("Alarm::FullFetchAlarm.handler");const t=await r.updateStatus({loading:!0,error:null,lastRunAt:new Date().toISOString()});try{await w.invoke({store:!0}),await Promise.all([y.invoke({store:!0}),h.invoke(null),_.invoke(null),E.invoke(null),A.invoke(null),T.invoke(null),U.invoke(),d.invoke((e=await O.retrieve())!=null?e:0,{store:!0})]),await r.updateStatus({loading:!1,lastSuccessfulAt:new Date().toISOString(),retryCount:0}),await i.alarms.clear(r.retryAlarmName)}catch(n){const v=await r.updateStatus({loading:!1,error:n.message,retryCount:((s=t.retryCount)!=null?s:0)+1});if(n instanceof L&&((a=n.response)==null?void 0:a.status)!==403){const f=Math.min(Math.pow(2,v.retryCount),30);i.alarms.create(r.retryAlarmName,{when:Date.now()+60*1e3*f})}o.error(n)}},updateStatus:async t=>{const s={...await l.getLocal(r.statusKey),...t};return await l.setLocal(r.statusKey,s),s},configure(){i.alarms.create(r.name,{periodInMinutes:2*60})}},j=()=>u(r.statusKey,k[r.statusKey]),x={storage:"tesListOnboardingStep"},B={check(t,e){var a;if(!e||!t||t.time_entry_constraints_enabled===!1)return[];const s=[];return t.description_present&&!e.description.length&&s.push("description"),t.project_present&&!e.project_id&&s.push("project"),t.tag_present&&!((a=e.tag_ids)!=null&&a.length)&&s.push("tag"),t.task_present&&!e.task_id&&s.push("task"),s}},H=(t,e)=>{const s=S.fromMillis(t),a=S.now().diff(s,"seconds").seconds,n=e-a;return Number.isFinite(n)?n:e};class M extends p{async invoke(){const{data:e}=await c.me.organizations.list();return await this.store(e),e}}const K=new M("FETCH_ORGANIZATIONS_V4"),V=(t=null)=>u(K.storageKey,t),D={create:async(t,e)=>{const{data:s}=await c.tag.create(t,e);return s},dispatch(t){return i.runtime.sendMessage({type:"CREATE_TAG_V4",payload:t})}},z=()=>{const[,t]=F();return g(e=>D.dispatch(e),{onError:e=>o.error(e),onSuccess:e=>{t(s=>({...s,[e.id]:e}))}})},m={eventKey:"UPDATE_USER_V4",invoke:async t=>{await c.me.update(t)},dispatch(t){return i.runtime.sendMessage({type:m.eventKey,payload:t})}},G=()=>{const[,t]=C();return g(e=>m.dispatch(e),{onError:e=>o.error(e),onSuccess:(e,s)=>{t(a=>({...a,...s}))}})};export{r as F,K as O,B as T,m as U,d as W,D as a,V as b,x as c,j as d,z as e,I as f,H as g,G as u};
//# sourceMappingURL=UserUpdateService.js.map
