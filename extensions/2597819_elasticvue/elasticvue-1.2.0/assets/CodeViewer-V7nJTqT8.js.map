{"version":3,"file":"CodeViewer-V7nJTqT8.js","sources":["../../src/components/shared/CodeViewer.vue"],"sourcesContent":["<template>\n  <div class=\"border-2 code-editor\">\n    <div ref=\"editor\" class=\"full-width full-height\" />\n\n    <div class=\"code-editor__actions\">\n      <div class=\"inline-block\">\n        <copy-button round flat dense :custom-handler=\"copyContent\" />\n      </div>\n\n      <div class=\"inline-block\">\n        <q-btn icon=\"settings\" round flat dense>\n          <q-menu style=\"white-space: nowrap\" anchor=\"bottom right\" self=\"top end\">\n            <q-item dense class=\"q-py-sm\">\n              <q-checkbox v-model=\"codeEditorStore.wrapLines\" size=\"32px\"\n                          dense\n                          :label=\"t('shared.code_editor.actions.wrap_lines.label')\"\n                          :title=\"t('shared.code_editor.actions.wrap_lines.title')\" />\n            </q-item>\n          </q-menu>\n        </q-btn>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, toRef, Ref } from 'vue'\n  import { useCodeEditor } from '../../composables/CodeEditor'\n  import { useCodeEditorStore } from '../../store/codeEditor.ts'\n  import CopyButton from './CopyButton.vue'\n  import { useTranslation } from '../../composables/i18n'\n\n  const t = useTranslation()\n  const props = defineProps<{ value: string }>()\n\n  const codeEditorStore = useCodeEditorStore()\n\n  const editor: Ref<HTMLElement | null> = ref(null)\n  const { copyContent } = useCodeEditor(editor, { initialValue: toRef(props, 'value') })\n</script>\n"],"names":["t","useTranslation","props","__props","codeEditorStore","useCodeEditorStore","editor","ref","copyContent","useCodeEditor","toRef"],"mappings":"sWAgCE,MAAMA,EAAIC,EAAe,EACnBC,EAAQC,EAERC,EAAkBC,EAAmB,EAErCC,EAAkCC,EAAI,IAAI,EAC1C,CAAE,YAAAC,GAAgBC,EAAcH,EAAQ,CAAE,aAAcI,EAAMR,EAAO,OAAO,EAAG"}