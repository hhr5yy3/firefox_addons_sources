function isChrome(){return"undefined"!=typeof chrome&&"undefined"==typeof browser}const localStorageEnums={PERMANENT_PREFIX:"permanent_",SELF_HOSTED_PREFIX:"selfhosted_",SUB_DOMAIN_PREFIX:"sub-domain_",ALL:!0};class LocalStorage{constructor(){this.aBrowser=isChrome()?chrome:browser}async get(e){return new Promise(((t,r)=>{try{this.aBrowser.storage.local.get(e,(r=>{if(null===e)t(r||null);else if("object"==typeof e&&e.length){const e=Object.values(r)[0];t(e||null)}else t(r?.[e]??null)}))}catch(e){}}))}async getItem(e,t){const r=Object.values(localStorageEnums).filter((e=>"string"==typeof e)).map((t=>t+e));return r.push(e),await this.get(r)||t||null}async set(e,t){return new Promise(((r,s)=>{try{this.aBrowser.storage.local.set({[e]:t},(e=>r(e)))}catch(e){}}))}async setItem(e,t,r){r&&(e=r+e),this.set(e,t)}async remove(e){return new Promise(((t,r)=>{try{this.aBrowser.storage.local.remove(e,(e=>t(e)))}catch(e){}}))}removeItem(e){const t=Object.values(localStorageEnums).filter((e=>"string"==typeof e)).map((t=>t+e));t.push(e),t&&this.remove(t)}async clear(){return new Promise(((e,t)=>{try{this.aBrowser.storage.local.clear((t=>e(t)))}catch(e){}}))}async clearByPrefixes(e,t=!1){const r=Object.keys(await this.get(null)).filter((r=>{const s=e.filter((e=>r.includes(e))).length>0;return t?!s:s}));return await this.remove(r)}}const localStorage=new LocalStorage;