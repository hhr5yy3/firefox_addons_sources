import{c as u}from"./cplx-CXGk_GMP.js";var i=t=>t.ownerDocument.defaultView||window;function c(t,n){const{type:e="HTMLInputElement",property:o="value"}=n,r=i(t)[e].prototype;return Object.getOwnPropertyDescriptor(r,o)??{}}function d(t,n,e={}){var r;(r=c(t,e).set)==null||r.call(t,n),t.setAttribute("value",n)}function a(t,n){var o;(o=c(t,{type:"HTMLInputElement",property:"checked"}).set)==null||o.call(t,n),n?t.setAttribute("checked",""):t.removeAttribute("checked")}function w(t,n){const{value:e,bubbles:o=!0}=n;if(!t)return;const r=i(t);t instanceof r.HTMLInputElement&&(d(t,`${e}`),t.dispatchEvent(new r.Event("input",{bubbles:o})))}function E(t,n){const{checked:e,bubbles:o=!0}=n;if(!t)return;const r=i(t);t instanceof r.HTMLInputElement&&(a(t,e),t.dispatchEvent(new r.Event("click",{bubbles:o})))}function p(t){return f(t)?t.form:t.closest("form")}function f(t){return t.matches("textarea, input, select, button")}function m(t,n){if(!t)return;const e=p(t);return e==null||e.addEventListener("reset",n,{passive:!0}),()=>{e==null||e.removeEventListener("reset",n)}}function b(t,n){const e=t==null?void 0:t.closest("fieldset");if(!e)return;n(e.disabled);const o=e.ownerDocument.defaultView||window,r=new o.MutationObserver(()=>n(e.disabled));return r.observe(e,{attributes:!0,attributeFilter:["disabled"]}),()=>r.disconnect()}function l(t,n){if(!t)return;const{onFieldsetDisabledChange:e,onFormReset:o}=n,r=[m(t,o),b(t,e)];return()=>{r.forEach(s=>s==null?void 0:s())}}const[h,F]=u({name:"FieldContext",hookName:"useFieldContext",providerName:"<FieldProvider />",strict:!1});export{E as a,w as d,l as t,F as u};
