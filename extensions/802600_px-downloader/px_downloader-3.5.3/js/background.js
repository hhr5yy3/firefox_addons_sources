!function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=6)}([function(e,t){e.exports=browser},function(e){e.exports=JSON.parse('{"singleFilename":"PxDownloader/${userName}(${userId})/${title}(${id})","multiFilename":"PxDownloader/${userName}(${userId})/${title}(${id})/${page2}","novelFilename":"PxDownloader/${userName}(${userId})/${title}(${id})","conflictAction":"uniquify","forceFilename":0,"singleSize":"original","multiSize":"original","ugoiraSize":"original","convertMode":"none","convertQuality":0.9,"ugoiraMode":"gif","ugoiraQuality":0.9}')},function(e,t,r){"use strict";r.d(t,"a",(function(){return s}));var n=r(0),i=r.n(n);class s{constructor(){i.a.storage.hasOwnProperty("sync")?this.storage=i.a.storage.sync:this.storage=i.a.storage.local,navigator.userAgent.includes("Edge")?this.browser="edge":navigator.userAgent.includes("Chrome")?this.browser="chrome":navigator.userAgent.includes("Firefox")?this.browser="firefox":this.browser="unknown",this.listeners=new Map}listen(){i.a.runtime.onMessage.addListener((e,t,r)=>(this.listeners.has(e.type)&&this.listeners.get(e.type)(e.data).then(e=>{r({error:null,data:e})}).catch(e=>{r({error:e.message,data:null})}),!0))}addListener(e,t){return!this.listeners.has(e)&&(this.listeners.set(e,t),!0)}removeListener(e){return!!this.listeners.has(e)&&(this.listeners.delete(e),!0)}message(e){return new Promise((t,r)=>{i.a.runtime.sendMessage({type:e.type,data:e.data},e=>{e.error&&r(new Error(e.error)),t(e.data)})})}getOptions(e){return new Promise(t=>{this.storage.get(e,e=>{t(e)})})}setOptions(e){return new Promise(t=>{this.storage.set(e,()=>{t()})})}initOptions(e){return this.getOptions(Object.keys(e)).then(t=>this.setOptions(Object.assign(e,t)))}}},,,,function(e,t,r){e.exports=r(11)},,,,,function(e,t,r){"use strict";r.r(t);var n=r(0),i=r.n(n),s=r(2),o=r(1);function a(e){return new Promise((t,r)=>{i.a.downloads.download(e,e=>{void 0===e&&r(new Error("Couldn't download file")),t(e)})})}(new class{init(){this.util=new s.a,this.util.addListener("fetch",this.fetch.bind(this)),this.util.addListener("resource",this.resource.bind(this)),this.util.addListener("download",this.download.bind(this)),this.util.listen(),this.util.initOptions(o),i.a.browserAction.onClicked.addListener(()=>{i.a.runtime.openOptionsPage()}),"chrome"===this.util.browser&&(this.util.getOptions("forceFilename").then(e=>{1===e.forceFilename&&(this.downloadItemSuggestions=new Map,i.a.downloads.onDeterminingFilename.addListener((e,t)=>{if(!this.downloadItemSuggestions.has(e.id))return;t(this.downloadItemSuggestions.get(e.id)),this.downloadItemSuggestions.delete(e.id)}))}),i.a.webRequest.onHeadersReceived.addListener(e=>{const t=e.responseHeaders.find(e=>"access-control-allow-origin"===e.name.toLowerCase());return void 0===t?e.responseHeaders.push({name:"Access-Control-Allow-Origin",value:"*"}):t.value="*",{responseHeaders:e.responseHeaders}},{urls:["*://*.pximg.net/*"]},["blocking","responseHeaders","extraHeaders"]))}async fetch({resource:e,init:t}){if("chrome"===this.util.browser){const r=await fetch(e,t),n=await r.blob();return URL.createObjectURL(n)}if("firefox"===this.util.browser){const r=await fetch(e,t);return await r.blob()}{const r=await fetch(e,t),n=await r.blob();return await new Promise((e,t)=>{const r=new FileReader;r.addEventListener("load",()=>{e(r.result)}),r.addEventListener("error",e=>{t(e)}),r.readAsDataURL(n)})}}async resource({path:e}){if("chrome"===this.util.browser){const t=await fetch(i.a.runtime.getURL(e)),r=await t.blob();return URL.createObjectURL(r)}if("firefox"===this.util.browser){const t=await fetch(i.a.runtime.getURL(e));return await t.blob()}{const t=await fetch(i.a.runtime.getURL(e)),r=await t.blob();return await new Promise((e,t)=>{const n=new FileReader;n.addEventListener("load",()=>{e(n.result)}),n.addEventListener("error",e=>{t(e)}),n.readAsDataURL(r)})}}async download(e){if("chrome"===this.util.browser){const t=await a({url:e.blobUrl,filename:e.filename,conflictAction:e.conflictAction,saveAs:!1});return this.hasOwnProperty("downloadItemSuggestions")&&this.downloadItemSuggestions.set(t,{filename:e.filename,conflictAction:e.conflictAction}),t}if("firefox"===this.util.browser){return await a({url:URL.createObjectURL(e.blob),filename:e.filename,conflictAction:e.conflictAction,saveAs:!1})}{const t=await fetch(e.dataUrl),r=await t.blob(),n=URL.createObjectURL(r);return await a({url:n,filename:e.filename,conflictAction:e.conflictAction,saveAs:!1})}}}).init()}]);
//# sourceMappingURL=background.js.map