class TokenService extends ClockifyService{static async urlTokenRefresh(){return`${await this.apiEndpoint}/auth/token/refresh`}static async getToken(){const e=await localStorage.getItem("token");if(this.isTokenValid(e))return e;const t=await localStorage.getItem("refreshToken");if(this.isTokenValid(t)){const{data:e,error:a}=await this.refreshToken(t);return!e||a?null:(aBrowser.storage.local.set({token:e.token,userId:e.userId,refreshToken:e.refreshToken,userEmail:e.userEmail}),await localStorage.setItem("token",e.token),await localStorage.setItem("refreshToken",e.refreshToken),await localStorage.setItem("userId",e.id),await localStorage.setItem("userEmail",e.email),e.token)}return null}static async refreshToken(e){const t=await this.urlTokenRefresh(),a={refreshToken:e};return await this.apiCall(t,"POST",a,!0)}static isTokenValid(e){if(!e)return!1;const t=e.split(".")[1];if(!t)return!1;const a=t.replace(/-/g,"+").replace(/_/g,"/"),r=JSON.parse(atob(a)),s=new Date;return r.exp>s/1e3}static async isLoggedIn(){return null!=await localStorage.getItem("token")}}