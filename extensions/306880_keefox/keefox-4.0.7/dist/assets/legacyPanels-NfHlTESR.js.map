{"version":3,"file":"legacyPanels-NfHlTESR.js","sources":["../../../src/panels/MatchedLoginsPanel.ts","../../../src/store/NonReactiveStore.ts","../../../src/panels/mainLegacy.ts"],"sourcesContent":["import { copyStringToClipboard } from \"../common/copyStringToClipboard\";\nimport { KeeLog } from \"../common/Logger\";\nimport { Action } from \"../common/Action\";\nimport { AddonMessage } from \"../common/AddonMessage\";\nimport { Entry } from \"../common/model/Entry\";\nimport {setup as i18nSetup } from \"../common/i18n\";\n\nexport class MatchedLoginsPanel {\n    constructor(\n        private myPort: chrome.runtime.Port,\n        private closePanel: () => void,\n        private parentFrameId: number\n    ) {}\n\n    public createNearNode(node: HTMLElement, entries: Entry[]) {\n        const container = document.createElement(\"div\");\n        container.id = \"Kee-MatchedLoginsList\";\n        const list = document.createElement(\"ul\");\n        this.setLogins(entries, list);\n        container.appendChild(list);\n        node.parentNode.insertBefore(container, node.nextSibling);\n\n        return container;\n    }\n\n    private setLogins(entries: Entry[], container) {\n        KeeLog.debug(\"setting \" + entries.length + \" matched entries\");\n\n        // add every matched entry to the container(s)\n        for (let i = 0; i < entries.length; i++) {\n            const entry = entries[i];\n            let usernameDisplayValue = \"[\" + $STR(\"noUsername_partial_tip\") + \"]\";\n            const displayGroupPath = entry.database.name + \"/\" + entry.parentGroup.path;\n\n            const usernameField = Entry.getUsernameField(entry);\n            if (usernameField && usernameField.value) {\n                usernameDisplayValue = usernameField.value;\n            }\n\n            const loginItem = document.createElement(\"li\");\n            loginItem.className = \"\";\n            loginItem.style.backgroundImage =\n                \"url(data:image/png;base64,\" + entry.icon.iconImageData + \")\";\n            loginItem.dataset.filename = entry.database.fileName;\n            loginItem.dataset.formIndex = entry.formIndex.toString();\n            loginItem.dataset.entryIndex = entry.entryIndex.toString();\n            loginItem.dataset.uuid = entry.uuid;\n            loginItem.title = $STRF(\"matchedLogin_tip\", [\n                entry.title,\n                displayGroupPath,\n                usernameDisplayValue\n            ]);\n            loginItem.tabIndex = i == 0 ? 0 : -1;\n\n            loginItem.textContent = $STRF(\"matchedLogin_label\", [\n                usernameDisplayValue,\n                entry.title\n            ]);\n\n            const loginContextActions = this.createContextActions(entry);\n            loginItem.appendChild(loginContextActions);\n\n            loginItem.addEventListener(\"keydown\", e => this.keyboardNavHandler(e), false);\n            loginItem.addEventListener(\n                \"click\",\n                function (event) {\n                    event.stopPropagation();\n                    if (event.button == 0 || event.button == 1) {\n                        this.dispatchEvent(new Event(\"keeCommand\"));\n                    }\n                },\n                false\n            );\n            loginItem.addEventListener(\n                \"contextmenu\",\n                event => {\n                    event.stopPropagation();\n                    event.preventDefault();\n                    this.showContextActions(loginContextActions);\n                },\n                false\n            );\n            loginItem.addEventListener(\n                \"keeCommand\",\n                event => {\n                    this.myPort.postMessage({\n                        action: Action.ManualFill,\n                        selectedEntryIndex: (event.currentTarget as any).dataset.entryIndex,\n                        frameId: this.parentFrameId\n                    });\n                },\n                false\n            );\n            loginItem.addEventListener(\"mouseenter\", e => this.onMouseEnterLogin(e), false);\n            loginItem.addEventListener(\"mouseleave\", e => this.onMouseLeaveLogin(e), false);\n\n            container.appendChild(loginItem);\n        }\n    }\n\n    private keyboardNavHandler(event: KeyboardEvent) {\n        const target = event.target as HTMLLIElement;\n\n        switch (event.keyCode) {\n            case 13: // enter\n                event.preventDefault();\n                event.stopPropagation();\n                target.dispatchEvent(new Event(\"keeCommand\"));\n                break;\n            case 40: // down\n                event.preventDefault();\n                event.stopPropagation();\n                if (target.nextElementSibling) {\n                    (target.nextElementSibling as HTMLLIElement).focus();\n                }\n                break;\n            case 38: // up\n                event.preventDefault();\n                event.stopPropagation();\n                if (target.previousElementSibling) {\n                    (target.previousElementSibling as HTMLLIElement).focus();\n                }\n                break;\n            case 27: // esc\n                event.preventDefault();\n                event.stopPropagation();\n                this.closePanel();\n                break;\n            case 93: // context\n                event.preventDefault();\n                event.stopPropagation();\n                target.dispatchEvent(new Event(\"contextmenu\"));\n                break;\n        }\n    }\n\n    public showContextActions(element: Element) {\n        element.classList.remove(\"disabled\");\n        element.classList.add(\"enabled\");\n    }\n\n    private createContextActions(this: MatchedLoginsPanel, entry: Entry) {\n        const loginContextActions = document.createElement(\"div\");\n        loginContextActions.classList.add(\"disabled\");\n\n        const editButton = document.createElement(\"button\");\n        editButton.textContent = $STR(\"Logins_Context_Edit_Login_label\");\n        //\"chrome://kee/skin/pencil.png\"\n        editButton.addEventListener(\n            \"click\",\n            event => {\n                event.stopPropagation();\n                event.preventDefault();\n                this.myPort.postMessage({\n                    loginEditor: {\n                        uuid: entry.uuid,\n                        DBfilename: entry.database.fileName\n                    }\n                } as AddonMessage);\n                this.myPort.postMessage({\n                    action: Action.CloseAllPanels\n                } as AddonMessage);\n            },\n            false\n        );\n        editButton.addEventListener(\"keydown\", event => {\n            if (event.keyCode === 13) editButton.click();\n        });\n        loginContextActions.appendChild(editButton);\n\n        const otherFieldCount = entry.fields.filter(f => f.type !== \"password\").length ?? 0;\n        const usernameField = Entry.getUsernameField(entry);\n        const passwordFieldCount = entry.fields.filter(f => f.type === \"password\").length ?? 0;\n        const passwordField = Entry.getPasswordField(entry);\n\n        if (usernameField != null) {\n            const button = document.createElement(\"button\");\n            button.textContent = $STR(\"copy_username_label\");\n            //\"chrome://kee/skin/copy.png\",\n            button.addEventListener(\n                \"click\",\n                async event => {\n                    event.stopPropagation();\n                    event.preventDefault();\n                    await copyStringToClipboard(usernameField.value);\n                    this.myPort.postMessage({\n                        action: Action.CloseAllPanels\n                    } as AddonMessage);\n                },\n                false\n            );\n            button.addEventListener(\"keydown\", event => {\n                if (event.keyCode === 13) button.click();\n            });\n            loginContextActions.appendChild(button);\n        }\n\n        if (passwordField != null) {\n            const button = document.createElement(\"button\");\n            button.textContent = $STR(\"copy_password_label\");\n            //\"chrome://kee/skin/copy.png\",\n            button.addEventListener(\n                \"click\",\n                async event => {\n                    event.stopPropagation();\n                    event.preventDefault();\n                    await copyStringToClipboard(passwordField.value);\n                    this.myPort.postMessage({\n                        action: Action.CloseAllPanels\n                    } as AddonMessage);\n                },\n                false\n            );\n            button.addEventListener(\"keydown\", event => {\n                if (event.keyCode === 13) button.click();\n            });\n            loginContextActions.appendChild(button);\n        }\n        if (otherFieldCount > 1) {\n            entry.fields\n                .filter(f => f.type !== \"password\")\n                .forEach((o, i) => {\n                    if (i != 0 && o.locators[0].type != \"checkbox\") {\n                        const button = document.createElement(\"button\");\n                        button.textContent =\n                            $STR(\"copy\") + \" \" + o.name + \" (\" + o.locators[0].id + \")\";\n                        //\"chrome://kee/skin/copy.png\",\n                        button.addEventListener(\n                            \"click\",\n                            async event => {\n                                event.stopPropagation();\n                                event.preventDefault();\n                                await copyStringToClipboard(o.value);\n                                this.myPort.postMessage({\n                                    action: Action.CloseAllPanels\n                                } as AddonMessage);\n                            },\n                            false\n                        );\n                        button.addEventListener(\"keydown\", event => {\n                            if (event.keyCode === 13) button.click();\n                        });\n                        loginContextActions.appendChild(button);\n                    }\n                });\n        }\n        if (passwordFieldCount > 1) {\n            entry.fields\n                .filter(f => f.type === \"password\")\n                .forEach((p, i) => {\n                    if (i != 0) {\n                        const button = document.createElement(\"button\");\n                        button.textContent =\n                            $STR(\"copy\") + \" \" + p.name + \" (\" + p.locators[0].id + \")\";\n                        //\"chrome://kee/skin/copy.png\",\n                        button.addEventListener(\n                            \"click\",\n                            async event => {\n                                event.stopPropagation();\n                                event.preventDefault();\n                                await copyStringToClipboard(p.value);\n                                this.myPort.postMessage({\n                                    action: Action.CloseAllPanels\n                                } as AddonMessage);\n                            },\n                            false\n                        );\n                        button.addEventListener(\"keydown\", event => {\n                            if (event.keyCode === 13) button.click();\n                        });\n                        loginContextActions.appendChild(button);\n                    }\n                });\n        }\n        return loginContextActions;\n    }\n\n    public onMouseEnterLogin(event) {\n        const optionsMenuTrigger = document.createElement(\"div\");\n        optionsMenuTrigger.addEventListener(\n            \"click\",\n            evt => {\n                evt.preventDefault();\n                evt.stopPropagation();\n                this.showContextActions(\n                    (evt.currentTarget as any).parentElement.getElementsByTagName(\"div\")[0]\n                );\n            },\n            false\n        );\n        optionsMenuTrigger.setAttribute(\"id\", \"Kee-optionsMenuTrigger\");\n        event.target.appendChild(optionsMenuTrigger);\n    }\n\n    public onMouseLeaveLogin(event) {\n        const optionsMenuTrigger = document.getElementById(\"Kee-optionsMenuTrigger\");\n        event.target.removeChild(optionsMenuTrigger);\n    }\n}\n\ni18nSetup();\n","import * as types from \"./mutation-types\";\nimport { defaults, type KeeState } from \"./KeeState\";\nimport { SaveState } from \"../common/SaveState\";\nimport { Entry } from \"../common/model/Entry\";\nimport { SaveEntryResult } from \"../common/SaveEntryResult\";\nimport { Field } from \"../common/model/Field\";\nimport { Database } from \"../common/model/Database\";\nimport { KeeNotification } from \"../common/KeeNotification\";\nimport { PasswordProfile } from \"../common/model/PasswordProfile\";\nimport type { SubmittedData } from \"../common/SubmittedData\";\nimport { EntrySummary } from \"../common/model/EntrySummary\";\nimport { Mutation } from \"./Mutation\";\n\nfunction undefAbort(payload) {\n    if (payload === undefined) {\n        throw new Error(\n            \"FATAL! undefined value sent to commit that must never set an undefined value. No-one knows what will happen now but Kee is probably broken in some way until a browser restart.\"\n        );\n    }\n}\n\ndeclare type BackgroundDistributor = (mutation: Mutation, excludedPort?: chrome.runtime.Port) => void;\n\nexport default class NonReactiveStore {\n\n    private _state: KeeState = defaults;\n\n    public get state() : KeeState {\n        return this._state;\n    }\n\n    public constructor(protected distributeAction: BackgroundDistributor) {\n\n    }\n\n    public onRemoteMessage(sourcePort: chrome.runtime.Port, mutation: Mutation) {\n        if (mutation.type === types.addNotification) {\n            this.addNotification(mutation.payload, false);\n        } else if (mutation.type === types.removeFieldFromActiveEntry) {\n            this.removeFieldFromActiveEntry(mutation.payload, false);\n        } else if (mutation.type === types.updateActiveKeePassDatabaseIndex) {\n            this.updateActiveKeePassDatabaseIndex(mutation.payload, false);\n        } else if (mutation.type === types.updateConnected) {\n            this.updateConnected(mutation.payload, false);\n        } else if (mutation.type === types.updateConnectedWebsocket) {\n            this.updateConnectedWebsocket(mutation.payload, false);\n        } else if (mutation.type === types.updateCurrentSearchTerm) {\n            this.updateCurrentSearchTerm(mutation.payload, false);\n        } else if (mutation.type === types.updateEntryUpdateStartedAtTimestamp) {\n            this.updateEntryUpdateStartedAtTimestamp(mutation.payload, false);\n        } else if (mutation.type === types.updateGeneratedPassword) {\n            this.updateGeneratedPassword(mutation.payload, false);\n        } else if (mutation.type === types.updateKeePassDatabases) {\n            this.updateKeePassDatabases(mutation.payload, false);\n        } else if (mutation.type === types.updateLastKeePassRPCRefresh) {\n            this.updateLastKeePassRPCRefresh(mutation.payload, false);\n        } else if (mutation.type === types.updateLatestConnectionError) {\n            this.updateLatestConnectionError(mutation.payload, false);\n        } else if (mutation.type === types.updateLoginsFound) {\n            this.updateLoginsFound(mutation.payload, false);\n        } else if (mutation.type === types.updateNotifications) {\n            this.updateNotifications(mutation.payload, false);\n        } else if (mutation.type === types.updatePasswordProfiles) {\n            this.updatePasswordProfiles(mutation.payload, false);\n        } else if (mutation.type === types.updateSaveEntryResult) {\n            this.updateSaveEntryResult(mutation.payload, false);\n        } else if (mutation.type === types.updateSaveState) {\n            this.updateSaveState(mutation.payload, false);\n        } else if (mutation.type === types.updateSearchResultWithFullDetails) {\n            this.updateSearchResultWithFullDetails(mutation.payload, false);\n        } else if (mutation.type === types.updateSearchResults) {\n            this.updateSearchResults(mutation.payload, false);\n        } else if (mutation.type === types.updateSubmittedData) {\n            this.updateSubmittedData(mutation.payload, false);\n        }\n    }\n\n    public resetTo(s: KeeState) {\n        this._state = s;\n    }\n\n    public updateActiveKeePassDatabaseIndex(payload: number, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.ActiveKeePassDatabaseIndex = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateActiveKeePassDatabaseIndex, payload));\n    }\n    public updateConnected(payload: boolean, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.connected = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateConnected, payload));\n    }\n    public updateConnectedWebsocket(payload: boolean, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.connectedWebsocket = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateConnectedWebsocket, payload));\n    }\n    public updateCurrentSearchTerm(payload: string, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.currentSearchTerm = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateCurrentSearchTerm, payload));\n    }\n    public updateKeePassDatabases(payload: Database[], distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.KeePassDatabases = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateKeePassDatabases, payload));\n    }\n    public updateLastKeePassRPCRefresh(payload: number, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.lastKeePassRPCRefresh = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateLastKeePassRPCRefresh, payload));\n    }\n    public updateLatestConnectionError(payload: string, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.latestConnectionError = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateLatestConnectionError, payload));\n    }\n    public updateLoginsFound(payload: boolean, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.loginsFound = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateLoginsFound, payload));\n    }\n    public updateNotifications(payload: KeeNotification[], distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.notifications = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateNotifications, payload));\n    }\n    public updatePasswordProfiles(payload: PasswordProfile[], distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.PasswordProfiles = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updatePasswordProfiles, payload));\n    }\n    public updateGeneratedPassword(payload: string, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.generatedPassword = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateGeneratedPassword, payload));\n    }\n    public updateSubmittedData(payload: SubmittedData, distribute: boolean = true) {\n        undefAbort(payload);\n        if (!this.state.saveState) {\n            this.state.saveState = new SaveState();\n        }\n        this.state.saveState.submittedData = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateSubmittedData, payload));\n    }\n    public updateSaveState(payload: SaveState, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.saveState = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateSaveState, payload));\n    }\n    public updateSearchResults(payload: EntrySummary[], distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.searchResults = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateSearchResults, payload));\n    }\n    public updateSearchResultWithFullDetails(payload: Entry, distribute: boolean = true) {\n        undefAbort(payload);\n        const id = payload.uuid;\n        for (const s of this.state.searchResults) {\n            if (s.uuid === id) {\n                s.fullDetails = payload;\n                break;\n            }\n        }\n        if (distribute) this.distributeAction?.(new Mutation(types.updateSearchResultWithFullDetails, payload));\n    }\n    public addNotification(payload: KeeNotification, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.notifications.push(payload);\n        if (distribute) this.distributeAction?.(new Mutation(types.addNotification, payload));\n    }\n    public updateSaveEntryResult(payload: SaveEntryResult, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.saveEntryResult = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateSaveEntryResult, payload));\n    }\n    public removeFieldFromActiveEntry(payload: string, distribute: boolean = true) {\n        undefAbort(payload);\n\n        const firstTextFieldIndex = this.state.saveState.newEntry.fields.findIndex(\n            f => f.type === \"text\"\n        );\n        const firstPasswordFieldIndex = this.state.saveState.newEntry.fields.findIndex(\n            f => f.type === \"password\"\n        );\n        const originalFieldIndex = this.state.saveState.newEntry.fields.findIndex(\n            f => f.uuid === payload\n        );\n        this.state.saveState.newEntry.fields.splice(originalFieldIndex, 1);\n\n        if (originalFieldIndex === firstTextFieldIndex) {\n            const newUsernameIndex = this.state.saveState.newEntry.fields.findIndex(\n                f => f.type === \"text\"\n            );\n            if (newUsernameIndex >= 0) {\n                const newUsername = this.state.saveState.newEntry.fields.splice(newUsernameIndex, 1)[0];\n                this.state.saveState.newEntry.fields.splice(\n                    originalFieldIndex,\n                    0,\n                    new Field({ ...newUsername, name: \"KeePass username\" })\n                );\n            }\n        } else if (originalFieldIndex === firstPasswordFieldIndex) {\n            const newPasswordIndex = this.state.saveState.newEntry.fields.findIndex(\n                f => f.type === \"password\"\n            );\n            if (newPasswordIndex >= 0) {\n                const newPassword = this.state.saveState.newEntry.fields.splice(newPasswordIndex, 1)[0];\n                this.state.saveState.newEntry.fields.splice(\n                    originalFieldIndex,\n                    0,\n                    new Field({ ...newPassword, name: \"KeePass password\" })\n                );\n            }\n        }\n        if (distribute) this.distributeAction?.(new Mutation(types.removeFieldFromActiveEntry, payload));\n    }\n    public updateEntryUpdateStartedAtTimestamp(payload: number, distribute: boolean = true) {\n        undefAbort(payload);\n        this.state.entryUpdateStartedAtTimestamp = payload;\n        if (distribute) this.distributeAction?.(new Mutation(types.updateEntryUpdateStartedAtTimestamp, payload));\n    }\n};\n","import { MatchedLoginsPanel } from \"./MatchedLoginsPanel\";\nimport { FrameState } from \"../common/FrameState\";\nimport { Action } from \"../common/Action\";\nimport { KeeLog } from \"../common/Logger\";\nimport { configManager } from \"../common/ConfigManager\";\nimport { AddonMessage } from \"../common/AddonMessage\";\nimport { Port } from \"../common/port\";\nimport { setup as i18nSetup } from \"../common/i18n\";\nimport NonReactiveStore from \"../store/NonReactiveStore\";\nimport { Mutation } from \"../store/Mutation\";\n\nlet frameState: FrameState;\n\nfunction updateFrameState(newState: FrameState) {\n    frameState = newState;\n}\n\nfunction closePanel() {\n    //TODO:5: Might want more fine-grained closing in future\n    Port.postMessage({ action: Action.CloseAllPanels });\n}\n\nlet store: NonReactiveStore;\n\nasync function start() {\n    await configManager.load();\n    KeeLog.debug(\"iframe page starting\");\n    KeeLog.attachConfig(configManager.current);\n    Port.startup(\"iframe_\" + parentFrameId);\n\n    let cancelAutoClose: () => void;\n\n    const isLegacy = params[\"panel\"]?.endsWith(\"Legacy\");\n    const darkTheme = params[\"theme\"] === \"dark\";\n\n    switch (params[\"panel\"]) {\n        case \"matchedLoginsLegacy\":\n            matchedLoginsPanel = new MatchedLoginsPanel(Port.raw, closePanel, parentFrameId);\n            store = new NonReactiveStore((mutationPayload: Mutation, _excludedPort) => {\n                KeeLog.debug(\"New legacy panel mutation being distributed.\");\n                Port.postMessage({ mutation: mutationPayload } as AddonMessage);\n            });\n            document.getElementById(\"header\").innerText = $STR(\"matched_logins_label\");\n            Port.raw.onMessage.addListener(function (m: AddonMessage) {\n                KeeLog.debug(\"In iframe script, received message from background script\");\n\n                if (m.initialState) {\n                    store.resetTo(m.initialState);\n                }\n                if (m.mutation) {\n                    store.onRemoteMessage(Port.raw, m.mutation);\n                    return;\n                }\n\n                if (m.frameState) updateFrameState(m.frameState);\n\n                const mainPanel = matchedLoginsPanel.createNearNode(\n                    document.getElementById(\"header\"),\n                    frameState.entries\n                );\n\n                // Focus the window (required in Firefox to get focus onto the new iframe)\n                // and then the first entry item (enables keyboard navigation). Combined,\n                // these operations blur focus from the text box, thereby hiding any\n                // autocomplete popup the browser has displayed)\n                window.focus();\n                (document.getElementById(\"Kee-MatchedLoginsList\").firstChild\n                    .firstChild as any).focus();\n\n                if (cancelAutoClose) mainPanel.addEventListener(\"click\", cancelAutoClose);\n            });\n            break;\n    }\n\n    const closeButton = document.createElement(\"button\");\n    closeButton.textContent = $STR(\"close\");\n    closeButton.addEventListener(\"click\", () => {\n        closePanel();\n    });\n    document.getElementById(\"closeContainer\").appendChild(closeButton);\n\n    if (params[\"autoCloseTime\"]) {\n        const autoCloseTime = parseInt(params[\"autoCloseTime\"]);\n        // eslint-disable-next-line id-blacklist\n        if (!Number.isNaN(autoCloseTime) && autoCloseTime > 0) {\n            cancelAutoClose = () => {\n                clearInterval(autoCloseInterval);\n                autoCloseSetting.style.display = \"none\";\n                autoCloseLabel.textContent = $STR(\"autoclose_cancelled\");\n            };\n\n            const autoCloseTimerEnd = Date.now() + autoCloseTime * 1000;\n            const autoCloseInterval = window.setInterval(() => {\n                const now = Date.now();\n                if (now >= autoCloseTimerEnd) {\n                    clearInterval(autoCloseInterval);\n                    closePanel();\n                }\n                const secondsRemaining = Math.ceil((autoCloseTimerEnd - now) / 1000);\n                document.getElementById(\"autoCloseLabel\").textContent = $STRF(\n                    \"autoclose_countdown\",\n                    secondsRemaining.toString()\n                );\n            }, 1000);\n            const autoClose = document.createElement(\"div\");\n            autoClose.id = \"autoClose\";\n            const autoCloseSetting = document.createElement(\"input\");\n            autoCloseSetting.id = \"autoCloseCheckbox\";\n            autoCloseSetting.type = \"checkbox\";\n            autoCloseSetting.checked = true;\n            autoCloseSetting.addEventListener(\"change\", cancelAutoClose);\n            const autoCloseLabel = document.createElement(\"label\");\n            autoCloseLabel.textContent = $STRF(\"autoclose_countdown\", autoCloseTime.toString());\n            autoCloseLabel.htmlFor = \"autoCloseCheckbox\";\n            autoCloseLabel.id = \"autoCloseLabel\";\n            autoClose.appendChild(autoCloseSetting);\n            autoClose.appendChild(autoCloseLabel);\n            document.getElementById(\"closeContainer\").appendChild(autoClose);\n\n            document\n                .getElementById(\"optionsContainer\")\n                .addEventListener(\"click\", cancelAutoClose);\n        }\n    }\n    KeeLog.info(\"iframe page ready\");\n}\n\nlet matchedLoginsPanel: MatchedLoginsPanel;\n\nconst params: { [key: string]: string } = {};\n\ndocument.location.search\n    .substr(1)\n    .split(\"&\")\n    .forEach(pair => {\n        const [key, value] = pair.split(\"=\");\n        params[key] = value;\n    });\n\nconst parentFrameId = parseInt(params[\"parentFrameId\"]);\n\n\n(async () => {\n    await start();\n})();\n\ni18nSetup();\n"],"names":["closePanel","parentFrameId","i18nSetup","types.addNotification","types.removeFieldFromActiveEntry","types.updateActiveKeePassDatabaseIndex","types.updateConnected","types.updateConnectedWebsocket","types.updateCurrentSearchTerm","types.updateEntryUpdateStartedAtTimestamp","types.updateGeneratedPassword","types.updateKeePassDatabases","types.updateLastKeePassRPCRefresh","types.updateLatestConnectionError","types.updateLoginsFound","types.updateNotifications","types.updatePasswordProfiles","types.updateSaveEntryResult","types.updateSaveState","types.updateSearchResultWithFullDetails","types.updateSearchResults","types.updateSubmittedData"],"mappings":"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"}