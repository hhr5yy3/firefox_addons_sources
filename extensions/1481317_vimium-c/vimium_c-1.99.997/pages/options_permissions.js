import{$ as e,OnEdge as o,browser_ as t,OnFirefox as i,OnChrome as n,nextTick_ as s,CurCVer_ as r,IsEdg_ as l,post_ as m,pageLangs_ as p,prevent_ as a}from"./async_bg.js";import{Option_ as c,oTrans_ as u,bgSettings_ as f,delayBinding_ as d}from"./options_base.js";import{registerClass_ as _,createNewOption_ as h,TextOption_ as g}from"./options_defs.js";let v=t.permissions,P=e=>{if(!v)return function(){return m(25,{module:"permissions",name:e,args:[].slice.call(arguments)})};let o=v[e];return function(){let e=[].slice.call(arguments);return o.apply(v,e).then(e=>[e,void 0],e=>[void 0,e])}},O={contains:P("contains"),request:P("request"),remove:P("remove")},b=null,w="downloads.shelf",x="chrome://new-tab-page/*",y="chrome://*/*",S={"clipboard-read":"opt_clipboardRead",[y]:"opt_chromeUrl",[x]:"opt_cNewtab",[w]:"opt_closeShelf"},j=e("#optionalPermissionsTemplate"),q=j.content.firstElementChild,C=j.parentElement,F=null,N=null,E=[];export const manifest_=t.runtime.getManifest();let U=manifest_.optional_permissions||[],k=[];export class OptionalPermissionsOption_ extends c{R(){d(this.x,"change",this.v)}z(){return E.map(e=>e.x.indeterminate?"1":e.x.checked?"2":"0").join("")}E(){return E.map(e=>e.S).join("")}N(e){for(let o=0;o<E.length;o++){let t=E[o];t.x.checked="2"===e[o],t.x.indeterminate="1"===e[o]}}J(e){let o=[],t=[],i={},n=1;for(let s=0;s<E.length;s++){let r=E[s],l=+e[s];if(r.S===l)continue;let p="";r.S=l,2===r.me||(l?(r.pe===w&&o.push("downloads"),(1===r.me?t:o).push(r.pe),p&&t.push(p),i[r.pe]=r):(n++,O.remove(1===r.me?{origins:p?[r.pe,p]:[r.pe]}:{permissions:r.pe===w?["downloads",r.pe]:[r.pe]}).then(([e,o])=>{let t="Can not remove the permission %o : ",i=o&&o.message||o;(o||!e)&&console.log(t,r.pe,i);let n=r.x.parentElement;g.se(o?t.replace("%o",r.pe)+i:"",void 0,n),m()})))}let r=(e,[o,t])=>{if((t||!o)&&console.log("Can not request permissions of %o :",e,t&&t.message||t),!o){for(let o of e){let e=i[o];if(!e)continue;e.S=0;let n=e.x.parentElement;if(!t)return g.se("",void 0,n);let r=(t&&t.message||JSON.stringify(t))+"";o.startsWith("chrome://")&&r.includes("Only permissions specified in the manifest")&&o.startsWith("chrome:")&&(r=u("optNeedChromeUrlFirst"),r=l?r.replace("chrome","edge"):r),r=u("exc")+r,g.se(r,void 0,n),s(()=>{n.title=r})}this.w()}m()},m=()=>{n--,n>0||Promise.all(E.map(J)).then(()=>{this.w()})};if(n+=(o.length&&1)+(t.length&&1),o.length&&O.request({permissions:o}).then(r.bind(0,o)),t.length&&O.request({origins:t}).then(r.bind(0,t)),[].includes("clipboard-read")){let e=navigator.clipboard;n++,e.readText().catch(()=>{}).then(m)}return m(),Promise.resolve(e)}}_("OptionalPermissions",OptionalPermissionsOption_);let B=()=>{let e=document.createDocumentFragment();for(let o of E){let t=o.pe,i=document.importNode(q,true),n=i.querySelector("input"),s=u(S[t]||`opt_${t}`)||t,r="";n.name=t,i.lastElementChild.textContent=s+r,(1===U.length||2===U.length&&"en"===p)&&i.classList.add("single"),e.append(i),o.x=n}C.append(e),d(C,"input",R,true),N&&d(N,"click",T,true)},J=e=>{let{me:o,pe:t}=e;return(2===o?Promise.resolve([1,void 0]):O.contains(1===o?{origins:[t]}:{permissions:t===w?["downloads",t]:[t]})).then(([o])=>{e.S=o?2===e.me?o:2:0})},R=e=>{let o=e.target;E.find(e=>e.x===o)},T=e=>{a(e),m(15,{u:e.target.href,p:false})};{let e=[w];e.push(/^chrome:/,"contentSettings"),U=U.filter(o=>!e.some(e=>"string"==typeof e?o===e:e.test(o)))}if(U.length||0){for(let e of U)E.push({pe:e,me:e.includes(":")?1:0,S:0,x:null});s(B,9),Promise.all(E.map(J)).then(()=>{s(()=>{C.dataset.model="OptionalPermissions",h(C).w()})})}else s(()=>{e("#optionalPermissionsBox").style.display="none"},9);