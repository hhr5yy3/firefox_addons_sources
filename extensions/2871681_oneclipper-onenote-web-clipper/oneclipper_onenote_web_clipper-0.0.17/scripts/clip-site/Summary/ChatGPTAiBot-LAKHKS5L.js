import{a as d,b as h}from"./chunk-HXUBRHIW.js";import{a as u}from"./chunk-YQBS2XC6.js";import{a as p}from"./chunk-6XQIVOQI.js";import"./chunk-3TXHFKDN.js";var c=class t{constructor(){}static accessToken;static conversionId;static deviceId;chatReqTokenData;async getAccessToken(){let e=(await getStore("ChatGPT")).ChatGPT??{};if(t.deviceId=await p()??crypto.randomUUID(),t.conversionId=e[t.deviceId]?.conversionId,e[t.deviceId]?.expireAt>Date.now())return e[t.deviceId].accessToken;let n="https://chatgpt.com/api/auth/session",a={"Oai-Device-Id":t.deviceId},o=await(await fetch(n,{method:"GET",headers:a})).json();return e[t.deviceId]={accessToken:o.accessToken,expireAt:new Date(o.expires).getTime(),conversionId:t.conversionId},setStore({ChatGPT:e}),o.accessToken}accountCheck(){}async getChatRequireTokenData(){let e="https://chatgpt.com/backend-api/sentinel/chat-requirements",n=await h(),a=new Headers({"Content-Type":"application/json","Oai-Device-Id":t.deviceId});return t.accessToken&&a.set("Authorization","Bearer "+t.accessToken),await(await fetch(e,{method:"POST",headers:a,body:JSON.stringify({p:n})})).json()}async getPayload(e){let n={action:"next",messages:[{id:crypto.randomUUID(),author:{role:"user"},content:{content_type:"text",parts:[e]}}],model:"auto",is_visible:!0,force_nulligen:!1,force_paragen:!1,force_paragen_model_slug:"",force_rate_limit:!1,suggestions:[],conversation_mode:{kind:"primary_assistant"}};return t.conversionId?n.conversation_id=t.conversionId:n.parent_message_id=crypto.randomUUID(),n}async createRequest(e){let n=t.accessToken?"https://chatgpt.com/backend-api/conversation":"https://chatgpt.com/backend-anon/conversation",{seed:a,difficulty:s}=this.chatReqTokenData.proofofwork,o=await d(a,s),i=new Headers({accept:"text/event-stream","Content-Type":"application/json","Oai-Device-Id":t.deviceId,"Openai-Sentinel-Chat-Requirements-Token":this.chatReqTokenData.token,"Openai-Sentinel-Proof-Token":o});t.accessToken&&i.set("Authorization","Bearer "+t.accessToken);let r=await this.getPayload(e);return new Request(n,{method:"POST",headers:i,body:JSON.stringify(r)})}parseTextStream(){let e=new u("parts"),n=0,a,s=[];return new TransformStream({transform(o,i){if(s)return s.length===1&&l(o),s.length===2?s=null:s.push(o);let r=e.parse(o)?.slice(n);if(r){if(r.length<36)return a=r.replaceAll("\\n",`
`);n+=r.length,r&&i.enqueue(r.replaceAll("\\n",`
`).replaceAll("\\u2019","\u2019"))}},flush(o){a&&o.enqueue(a)}})}async streamSummary(e){t.accessToken??=await this.getAccessToken(),this.chatReqTokenData=await this.getChatRequireTokenData();let n=await this.createRequest(e);try{let a=await fetch(n);return a.ok?a.body.pipeThrough(new TextDecoderStream).pipeThrough(this.parseTextStream()):this.handleApiError(a,e)}catch(a){console.error(a)}}async handleApiError(e,n){if(e.status===404){if((await e.json()).detail===`Conversation ${t.conversionId} not found`)return t.conversionId=null,this.streamSummary(n)}else{let a=await e.text();e.status>=400&&notify(a,"error")}}};async function l(t){if(c.conversionId)return;let e=new RegExp(/conversation_id": "([^"]+)/),n=t.match(e);if(!n)return;c.conversionId=n[1];let{ChatGPT:a}=await getStore("ChatGPT");a[c.deviceId].conversionId=n[1],setStore({ChatGPT:a})}export{c as ChatGPTAiBot};
