{"version":3,"file":"qrdebug.js","mappings":"mBAAAA,OAAOC,QAAQC,UAAUC,aAAY,CAACC,EAASC,KAC7C,GAAuB,aAAnBD,EAAQE,OAAuB,CACjC,IAAKD,EAAOE,IACV,OAiBJA,EAdIF,EAAOE,IAeXC,EAdIJ,EAAQK,KAAKD,KAejBE,EAdIN,EAAQK,KAAKC,IAejBC,EAdIP,EAAQK,KAAKE,MAejBC,EAdIR,EAAQK,KAAKG,OAejBC,EAdIT,EAAQK,KAAKI,YAgBjBb,OAAOc,KAAKC,kBAAkBR,EAAIS,SAAU,CAAEC,OAAQ,QAAUC,IAC9D,MAAMC,EAAK,IAAIC,MACfD,EAAGE,IAAMH,EACTC,EAAGG,OAAS,KACV,MAAMC,EAAmBJ,EAAGR,MAAQE,EAC9BW,EAAgBC,SAASC,cAAc,UAC7CF,EAAcb,MAAQA,EAAQY,EAC9BC,EAAcZ,OAASA,EAASW,EAChC,MAAMI,EAAMH,EAAcI,WAAW,MACrC,IAAKD,EACH,OAEFA,EAAIE,UACFV,EACAX,EAAOe,EACPb,EAAMa,EACNZ,EAAQY,EACRX,EAASW,EACT,EACA,EACAZ,EAAQY,EACRX,EAASW,GAEX,MAAMO,EAAMN,EAAcO,YACpBC,EAAUP,SAASQ,eAAe,QACpCD,IACFA,EAAQE,UAGN,gDAAuBrB,eACbF,gBACCC,cACFJ,aACDE,sBACSyB,OAAOC,OAAOzB,2BACbwB,OAAOC,OAAOxB,4BACdO,EAAGR,4BACFQ,EAAGP,iCACCW,OAAsBY,OAAOZ,+BACzChB,EAAI8B,yCAKnB,MAAMC,EAAQb,SAASQ,eAAe,MAClCK,IACFA,EAAMjB,IAAMS,E,CAEf,G,CAxDL,IACEvB,EACAC,EACAE,EACAC,EACAC,EACAC,EATA,OAAO,CAAI,G","sources":["webpack://authenticator-extension/./src/qrdebug.ts"],"sourcesContent":["chrome.runtime.onMessage.addListener((message, sender) => {\n  if (message.action === \"position\") {\n    if (!sender.tab) {\n      return;\n    }\n    getQrDebug(\n      sender.tab,\n      message.info.left,\n      message.info.top,\n      message.info.width,\n      message.info.height,\n      message.info.windowWidth\n    );\n  }\n\n  // https://stackoverflow.com/a/56483156\n  return true;\n});\n\nfunction getQrDebug(\n  tab: chrome.tabs.Tab,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  windowWidth: number\n) {\n  chrome.tabs.captureVisibleTab(tab.windowId, { format: \"png\" }, (dataUrl) => {\n    const qr = new Image();\n    qr.src = dataUrl;\n    qr.onload = () => {\n      const devicePixelRatio = qr.width / windowWidth;\n      const captureCanvas = document.createElement(\"canvas\");\n      captureCanvas.width = width * devicePixelRatio;\n      captureCanvas.height = height * devicePixelRatio;\n      const ctx = captureCanvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      ctx.drawImage(\n        qr,\n        left * devicePixelRatio,\n        top * devicePixelRatio,\n        width * devicePixelRatio,\n        height * devicePixelRatio,\n        0,\n        0,\n        width * devicePixelRatio,\n        height * devicePixelRatio\n      );\n      const url = captureCanvas.toDataURL();\n      const infoDom = document.getElementById(\"info\");\n      if (infoDom) {\n        infoDom.innerHTML =\n          \"<b>Scan Data:</b><br>\" +\n          `<br>` +\n          `Window Inner Width: ${windowWidth}<br>` +\n          `Width: ${width}<br>` +\n          `Height: ${height}<br>` +\n          `Left: ${left}<br>` +\n          `Top: ${top}<br>` +\n          `Screen Width: ${window.screen.width}<br>` +\n          `Screen Height: ${window.screen.height}<br>` +\n          `Capture Width: ${qr.width}<br>` +\n          `Capture Height: ${qr.height}<br>` +\n          `Device Pixel Ratio: ${devicePixelRatio} / ${window.devicePixelRatio}<br>` +\n          `Tab ID: ${tab.id}<br>` +\n          \"<br>\" +\n          \"<b>Captured Screenshot:</b>\";\n      }\n\n      const qrDom = document.getElementById(\"qr\") as HTMLImageElement;\n      if (qrDom) {\n        qrDom.src = url;\n      }\n    };\n  });\n}\n"],"names":["chrome","runtime","onMessage","addListener","message","sender","action","tab","left","info","top","width","height","windowWidth","tabs","captureVisibleTab","windowId","format","dataUrl","qr","Image","src","onload","devicePixelRatio","captureCanvas","document","createElement","ctx","getContext","drawImage","url","toDataURL","infoDom","getElementById","innerHTML","window","screen","id","qrDom"],"sourceRoot":""}