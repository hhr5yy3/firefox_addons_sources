/*
 * background.js 
 *
 * Copyright (c) 2015-2019 by Pulse Secure, LLC. All rights reserved
 *
 */
var csPort=null;var nativePort=0;var upgradeFinished=0;var nativeAppConnected=0;function onMessagePSAL(response){console.log("Received: "+response);console.log("Received: "+response["message"]);if("PSAL_HELLO_WEBPAGE"==response["message"]){console.log("rcvd message from PSAL:PSAL_HELLO_WEBPAGE");var resp=constructRespMsg("HANDSHAKE",response);csPort.postMessage(resp)}if("PSAL_UPGRADE_STARTED"==response["message"]){console.log("rcvd message from PSAL: PSAL_UPGRADE_STARTED");upgradeFinished=1}if("PSAL_UPGRADE_FAILED"==response["message"]){console.log("rcvd message from PSAL: PSAL_UPGRADE_STARTED");upgradeFinished=0}}function connectPSAL(){try{nativePort=browser.runtime.connectNative("psallinux");nativePort.onMessage.addListener(onMessagePSAL);nativePort.onDisconnect.addListener(onDisconnectPSAL)}catch(error){console.log("Error while connecting to native application");if(browser.runtime.lastError){console.log("ERROR",browser.runtime.lastError.message);return}}nativeAppConnected=1}connectPSAL();browser.runtime.onInstalled.addListener(onInstalledExtn);function onInstalledExtn(details){console.log(details.reason);var resp=constructRespMsg("CONTROL",details.reason);browser.tabs.query({currentWindow:true,active:true}).then(sendMessageToCS.bind(null,resp)).catch(onError);console.log("installed")}function onDisconnectPSAL(p){nativeAppConnected=0;console.log("Rcvd message:onDisconnect");if(p.error){console.log("Disconnected due to an error:"+p.error)}nativePort=null;if(upgradeFinished){console.log("Reconnecting");upgradeFinished=0;connectPSAL();var resp={};var resp=constructRespMsg("CONTROL","PSALConnectAfterUpgrade");nativePort.postMessage(resp)}}function constructRespMsg(type,message){var resp={type:type,message:message};return resp}function handleCSMessage(request){if(!nativeAppConnected){connectPSAL()}switch(request.type){case"HANDSHAKE":if("WEBPAGE_HELLO_PSAL"==request.message){upgradeFinished=0;if(nativeAppConnected){console.log("rcvd message from content script");nativePort.postMessage(request)}else{var resp=constructRespMsg("ERROR","NAPP_NOT_CONNECTED");csPort.postMessage(resp)}}break;case"DATA":console.log("Rcvd message:"+request.message);if(nativeAppConnected){console.log("Rcvd message inside");nativePort.postMessage(request)}else{var resp=constructRespMsg("ERROR","NAPP_NOT_CONNECTED");csPort.postMessage(resp)}default:break}}function onError(error){console.log("Error:"+error)}function sendMessageToCS(resp,tabs){for(var i=0;i<tabs.length;i++){browser.tabs.sendMessage(tabs[i].id,resp)}}function onConnect(p){csPort=p;csPort.onMessage.addListener(handleCSMessage)}browser.runtime.onConnect.addListener(onConnect);