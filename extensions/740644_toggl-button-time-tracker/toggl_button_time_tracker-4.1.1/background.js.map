{"version":3,"file":"background.js","sources":["../../src/lib/projectUtils.ts","../../src/background/icon-handler.ts","../../src/pomodoro/PomodoroService.ts","../../node_modules/ramda/es/internal/_isPlaceholder.js","../../node_modules/ramda/es/internal/_curry1.js","../../node_modules/ramda/es/internal/_curry2.js","../../node_modules/ramda/es/internal/_has.js","../../node_modules/ramda/es/internal/_isArguments.js","../../node_modules/ramda/es/keys.js","../../node_modules/ramda/es/type.js","../../node_modules/ramda/es/internal/_identity.js","../../node_modules/ramda/es/identity.js","../../node_modules/ramda/es/internal/_arrayFromIterator.js","../../node_modules/ramda/es/internal/_includesWith.js","../../node_modules/ramda/es/internal/_functionName.js","../../node_modules/ramda/es/internal/_objectIs.js","../../node_modules/ramda/es/internal/_equals.js","../../node_modules/ramda/es/equals.js","../../node_modules/ramda/es/internal/_indexOf.js","../../node_modules/ramda/es/internal/_includes.js","../../node_modules/ramda/es/internal/_Set.js","../../node_modules/ramda/es/uniqBy.js","../../node_modules/ramda/es/uniq.js","../../node_modules/ramda/es/xprod.js","../../node_modules/@toggl/track-util/src/timer.ts","../../src/background/push-event-handlers.ts","../../src/lib/since-fetch.ts","../../src/lib/fetch-handler.ts","../../src/background/websocket.ts","../../src/lib/reminders.ts","../../src/v4/services/NotificationService.ts","../../src/v4/lib/handleTimeEntryEndpointError.ts","../../src/background/_internal/timeEntry.ts","../../src/lib/timeEntries.ts","../../src/lib/stopTimeAtDayEnd.ts","../../src/pomodoro/listener.ts","../../src/background/storage-changes-handler.ts","../../src/lib/idle.ts","../../src/background/notification-actions-handler.ts","../../src/workerProxyBackground.ts","../../src/pomodoro/sounds.ts","../../src/pomodoro/worker.ts","../../src/shared/services/HeapAnalyticsClient.ts","../../src/v4/lib/semver.ts","../../src/v4/migrations/1_pomodoro_settings.ts","../../src/v4/migrations/index.ts","../../src/background/contentScript.ts","../../src/background/contextMenu.ts","../../src/background/tinyButton.ts","../../src/background/windowEvents.ts","../../src/background/index.ts"],"sourcesContent":["import { type Mutable } from '@src/types'\nimport { ProjectsListService } from '@src/v4/services/ProjectsListService'\nimport { TagsListService } from '@src/v4/services/TagsListService'\nimport { type MessageFrom, type MutableTimeEntryV9 } from 'src/typdef'\n\nimport { type TimeEntryRequest, type TimeEntryV9 } from '@toggl/track-types'\n\nimport { Db } from './db'\n\nexport const updateDefaultProjects = async (\n  from: MessageFrom,\n  projectId: number | null | undefined\n) => {\n  const rememberPer = await Db.get('rememberProjectPer')\n\n  if (rememberPer !== 'none') {\n    const defaultProjects = (await Db.getLocal('defaultProjects')) || '{}'\n\n    await Db.setLocal('defaultProjects', {\n      ...defaultProjects,\n      [rememberPer === 'integration' ? from.origin! : from.url!]:\n        projectId ?? undefined,\n    })\n  }\n}\n\n// TODO: This needs attention and possibly a refactor.\nexport const setProject = async (te: TimeEntryRequest, from: MessageFrom) => {\n  const entry = te as Mutable<TimeEntryRequest> & {\n    project_id?: number\n    workspace_id?: number\n    billable: boolean\n  }\n\n  const rememberPer = await Db.get('rememberProjectPer')\n  const defaultProjectId = await Db.get('defaultProject')\n\n  if (from.type === 'contentScript') {\n    if (rememberPer !== 'none' && !entry.project_id) {\n      const defaultProjects = (await Db.getLocal('defaultProjects')) || {}\n\n      const projects = await ProjectsListService.retrieve()\n\n      entry.project_id =\n        rememberPer === 'integration'\n          ? defaultProjects[from.origin!]\n          : defaultProjects[from.url!]\n\n      if (projects) {\n        entry.billable =\n          entry.billable || projects[entry.project_id ?? '']?.billable\n\n        entry.workspace_id =\n          projects[entry.project_id ?? '']?.workspace_id ?? entry.workspace_id\n      }\n    }\n  }\n\n  if (!entry.project_id && defaultProjectId) {\n    const projects = await ProjectsListService.retrieve()\n\n    if (projects) {\n      const defaultProject = projects[defaultProjectId]\n      entry.project_id = defaultProjectId\n      entry.workspace_id = defaultProject.workspace_id\n      entry.billable = entry.billable || projects[defaultProjectId].billable\n    }\n  }\n\n  return entry\n}\n\nexport const ensureSameWorkspace = async (\n  te: TimeEntryV9 | TimeEntryRequest\n) => {\n  const entry = Object.assign({}, te) as MutableTimeEntryV9\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  delete entry.pid\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  delete entry.tid\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  delete entry.wid\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  delete entry.uid\n\n  if (entry.project_id) {\n    const projects = await ProjectsListService.retrieve()\n\n    if (projects) {\n      const project = projects[entry.project_id]\n      entry.workspace_id = project.workspace_id\n    }\n  }\n\n  if (entry.tag_ids?.length) {\n    const tags = await TagsListService.retrieve()\n\n    if (tags) {\n      entry.tags = entry.tag_ids.map((id) => tags[id]?.name)\n    }\n  } else {\n    entry.tags = []\n  }\n\n  delete entry.tag_ids\n\n  return entry as TimeEntryV9\n}\n","import { type StateChangeListener } from '@src/lib/db'\nimport { logger } from '@src/lib/errorReport'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport { UsersService } from '@src/v4/services/UsersService'\nimport Browser from 'webextension-polyfill'\n\nexport async function setInitialIconState() {\n  const currentTE = await CurrentTEService.retrieve()\n  await changeIconState(currentTE && currentTE?.duration < 0)\n\n  const user = await UsersService.retrieve()\n  await setSignedInStatus(!!user?.id)\n}\n\nasync function changeIconState(isActive?: boolean | null) {\n  await Browser.action.setIcon({\n    path: isActive\n      ? { '19': 'images/icon-19.png', '38': 'images/icon-38.png' }\n      : { '19': 'images/inactive-19.png', '38': 'images/inactive-38.png' },\n  })\n}\n\nasync function setSignedInStatus(isSignedIn: boolean) {\n  if (isSignedIn) {\n    await Browser.action.setBadgeText({ text: '' })\n  } else {\n    await Promise.all([\n      Browser.action.setBadgeText({ text: 'x' }),\n      // eslint-disable-next-line @toggl/no-color-literals\n      Browser.action.setBadgeTextColor({ color: '#fff' }),\n      // eslint-disable-next-line @toggl/no-color-literals\n      Browser.action.setBadgeBackgroundColor({ color: '#f00' }),\n    ])\n  }\n}\n\nexport const onIconHandlerStateChangeListener: StateChangeListener = async (\n  changes,\n  areaName\n) => {\n  try {\n    // Handle the color of the icon based on the current time entry state.\n    if (areaName === 'local' && CurrentTEService.storageKey in changes) {\n      const currentTE = changes[CurrentTEService.storageKey].newValue\n      const isActive = currentTE && currentTE?.duration < 0\n\n      await changeIconState(isActive)\n    }\n\n    // Handle the icon badge based on the current user state.\n    if (areaName === 'local' && UsersService.storageKey in changes) {\n      // Can be null | undefined\n      const isSignedIn = changes[UsersService.storageKey].newValue\n\n      await setSignedInStatus(isSignedIn)\n    }\n  } catch (error) {\n    logger.error(error, 'onIconHandlerStateChangeListener')\n  }\n}\n","import Browser from 'webextension-polyfill'\n\nimport { defaultSettings, initialState } from './config'\n\nexport type PomodoroState = {\n  isRunning: number | null\n  isBreak: boolean\n  isLargeBreak: boolean\n  session: number\n  duration: number\n  computed: {\n    isIdle: boolean\n    isIdleBreak: boolean\n    isRunningBreak: boolean\n    isRunningFocus: boolean\n  }\n}\n\nexport type PomodoroSettings = {\n  isEnabled: boolean\n  isTickingEnabled: boolean\n  focusDuration: number\n  breakDuration: number\n  longBreakDuration: number\n  sessions: number\n  autoStartBreak: boolean\n  autoStartFocus: boolean\n  isAlarmEnabled: boolean\n  alarmVolumePercent: number\n}\n\ntype EventCallback = (state: PomodoroState) => void\n\ntype PomodoroEvents =\n  | 'clock:init'\n  | 'clock:start'\n  | 'clock:reset'\n  | 'state:change'\n\nclass Pomodoro {\n  private state: PomodoroState\n  private settings: PomodoroSettings\n  private events: { [key: string]: EventCallback[] } = {}\n\n  constructor() {\n    this.state = initialState\n  }\n\n  async init({ force = false } = {}) {\n    await this.fillSettings()\n\n    if (force) {\n      this.state = {\n        ...initialState,\n        duration: this.settings.focusDuration,\n      }\n    } else {\n      // Check if the state is stored and restore it.\n      const stateFromStorage = await this.getStoredState()\n\n      if (stateFromStorage) {\n        this.state = stateFromStorage\n      } else {\n        this.state = {\n          ...initialState,\n          duration: this.settings.focusDuration,\n        }\n      }\n    }\n\n    this.emit('clock:init', this.getState())\n    this.emit('state:change', this.getState())\n  }\n\n  getStoredSettings() {\n    return Browser.storage.sync.get('Settings.Pomodoro').then((data) => {\n      return data['Settings.Pomodoro'] as PomodoroSettings\n    }) as Promise<PomodoroSettings>\n  }\n\n  setStoredSettings(settings: Partial<PomodoroSettings>) {\n    return Browser.storage.sync.set({ 'Settings.Pomodoro': settings })\n  }\n\n  getStoredState() {\n    return Browser.storage.local.get('Pomodoro.State').then((data) => {\n      return data['Pomodoro.State'] as PomodoroState\n    }) as Promise<PomodoroState>\n  }\n\n  async isSettingsStorageInitialized() {\n    return (await this.getStoredSettings()) !== undefined\n  }\n\n  async fillSettings() {\n    // Initialize if not already done.\n    if (!(await this.isSettingsStorageInitialized())) {\n      await this.setStoredSettings(defaultSettings)\n    }\n\n    this.settings = await this.getStoredSettings()\n  }\n\n  start(startedAt = Date.now()) {\n    if (this.state.isRunning) {\n      return false\n    }\n\n    this.state.isRunning = startedAt\n\n    this.emit('clock:start', this.getState())\n    this.emit('state:change', this.getState())\n  }\n\n  goToBreak(isAutoStartEnabled: boolean) {\n    this.state.isLargeBreak = this.isLargeBreakNeeded()\n    this.state.isBreak = !this.state.isLargeBreak\n\n    this.state.duration = this.state.isLargeBreak\n      ? this.settings.longBreakDuration\n      : this.settings.breakDuration\n\n    this.pause()\n\n    if (isAutoStartEnabled) {\n      this.start()\n    }\n  }\n\n  goToFocus(isAutoStartEnabled: boolean) {\n    this.state.isBreak = false\n    this.state.isLargeBreak = false\n    this.state.duration = this.settings.focusDuration\n\n    if (this.state.session < this.settings.sessions) {\n      this.state.session++\n    } else {\n      return this.reset()\n    }\n\n    this.pause()\n\n    if (isAutoStartEnabled) {\n      this.start()\n    }\n  }\n\n  pause() {\n    if (this.state.isRunning) {\n      this.state.isRunning = null\n    }\n\n    this.emit('state:change', this.getState())\n  }\n\n  reset() {\n    this.state = {\n      ...initialState,\n      duration: this.settings.focusDuration,\n    }\n\n    this.emit('clock:reset', this.getState())\n    this.emit('state:change', this.getState())\n  }\n\n  goToNextState() {\n    if (this.isOnBreak()) {\n      this.goToFocus(false) // Do not auto start focus.\n    } else {\n      this.goToBreak(this.settings.autoStartBreak)\n    }\n\n    this.emit('state:change', this.getState())\n  }\n\n  isLargeBreakNeeded() {\n    return this.state.session === this.settings.sessions\n  }\n\n  isOnBreak() {\n    return this.state.isBreak || this.state.isLargeBreak\n  }\n\n  getState(): PomodoroState {\n    return {\n      ...this.state,\n      computed: this.getComputedState(),\n    }\n  }\n\n  getComputedState(): PomodoroState['computed'] {\n    return {\n      isIdle: !this.state.isRunning && !this.isOnBreak(),\n      isIdleBreak: !this.state.isRunning && this.isOnBreak(),\n      isRunningBreak: !!this.state.isRunning && this.isOnBreak(),\n      isRunningFocus: !!this.state.isRunning && !this.isOnBreak(),\n    }\n  }\n\n  getSettings() {\n    return this.settings\n  }\n\n  on(eventName: PomodoroEvents, callback: EventCallback): void {\n    if (!this.events[eventName]) {\n      this.events[eventName] = []\n    }\n\n    this.events[eventName].push(callback)\n  }\n\n  emit(\n    eventName: PomodoroEvents,\n    ...args: Parameters<typeof this.events[PomodoroEvents][number]>\n  ): void {\n    if (this.events[eventName]) {\n      // eslint-disable-next-line n/no-callback-literal\n      this.events[eventName].forEach((callback) => callback(...args))\n    }\n  }\n}\n\nexport const PomodoroService = new Pomodoro()\n","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","export default function _identity(x) {\n  return x;\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _identity from \"./internal/_identity.js\";\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nexport default identity;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","import _includes from \"./_includes.js\";\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nexport default _Set;","import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default uniqBy;","import identity from \"./identity.js\";\nimport uniqBy from \"./uniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nexport default uniq;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\n\nvar xprod =\n/*#__PURE__*/\n_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default xprod;","import * as datefns from 'date-fns'\nimport { chain, sortBy } from 'lodash'\nimport { DateTime } from 'luxon'\nimport * as R from 'ramda'\n\nimport { secToHhmmImproved } from '@toggl/time-format-utils'\nimport type {\n  TempTimeEntry,\n  TimeEntry,\n  TimeEntryV9,\n  Workspace,\n} from '@toggl/track-types'\n\nconst MAX_DURATION = 3596400 // 999 hours in seconds\nconst HHMMSS_DURATION_REGEX =\n  /^\\s*(\\d+)?[ :;_/-]?([\\d,.]+)?:?([[ :;_/-]+[\\d,.]+)?\\s*$/\nconst HUMAN_DURATION_REGEX =\n  /^\\s*((\\d+(?:\\.|,)?\\d*|\\d*(?:\\.|,)?\\d+)\\s*(((m|min|mins|minute|minutes)?)|((h|hr|hrs|hour|hours)?)|((s|sec|secs|second|seconds)?)|((d|ds|day|days)?)|((w|wk|wks|week|weeks)?))?\\s*)+$/i\nconst LOAD_MORE_RANGE_IN_DAYS = 5\nconst VALID_TIME_FORMATS = (() => {\n  const formats = R.xprod(\n    R.xprod(R.xprod(['h', 'hh', 'H', 'HH', 'k'], ['m', 'mm', '']), [\n      '',\n      ' ',\n      ',',\n      ';',\n      ':',\n      '.',\n    ]),\n    ['', 'aaa', ' aaa']\n  ).reduce((formats: string[], [[[hours, minutes], delimiter], period]) => {\n    let format = ''\n\n    if (minutes) {\n      format += `${hours}${delimiter}${minutes}`\n    } else {\n      format += hours\n    }\n\n    if (!(hours.includes('H') || hours.includes('k'))) {\n      format += period\n    }\n\n    formats.push(format)\n\n    return formats\n  }, [])\n\n  return R.uniq(formats)\n})()\n\n/**\n * Returns a DateTime object give a string (ISO format) / Date\n *\n * @param {string | Date} date\n * @returns {DateTime}\n */\nconst getDateTime = (date: string | Date) =>\n  typeof date === 'string' ? DateTime.fromISO(date) : DateTime.fromJSDate(date)\n\n/**\n * Returns stop date of given time entry\n *\n * @param {object} timeEntry Time entry\n * @returns {string}\n */\n\nexport const getStopDate = (timeEntry: TimeEntry | TimeEntryV9): string =>\n  timeEntry.stop ??\n  getDateTime(timeEntry.start)\n    .plus(getDuration(timeEntry) * 1000)\n    .toISO()\n\nexport const getStartDateSeconds = (\n  timeEntry: TimeEntryV9 | TimeEntry\n): number => getDateTime(timeEntry.start).toUnixInteger()\n\n/**\n * Returns stop date of given time entry as a unix timestamp (seconds)\n *\n * @param {object} timeEntry Time entry\n * @returns {number}\n */\nexport const getStopDateSeconds = (\n  timeEntry: TimeEntry | TimeEntryV9\n): number => DateTime.fromISO(getStopDate(timeEntry)).toUnixInteger()\n\n/**\n * Returns the duration of a time entry. Also running entries.\n *\n * @param {object} timeEntry Time entry\n * @returns {number} Duration in seconds\n */\nexport const getDuration = (timeEntry: TimeEntry | TimeEntryV9): number => {\n  if (timeEntry.duration >= 0) {\n    return timeEntry.duration\n  }\n\n  return calculateDuration(\n    timeEntry.start,\n    timeEntry.stop || DateTime.now().toISO()\n  )\n}\n\n/**\n * Calculates duration from start and stop dates. Will work for running time\n * entries (without stop date), that should have a negative duration.\n *\n * For running time entries, duration is always rounded down to the second to\n * avoid setting stop time in the future (e.g. 1337ms becomes 1s).\n *\n * @param {string} start Time\n * @param {string} stop Time (optional)\n * @returns {number} Duration in seconds\n */\nexport const calculateDuration = (start: string, stop?: string): number => {\n  const startValue = DateTime.fromISO(start).toSeconds()\n  const stopValue = stop ? DateTime.fromISO(stop).toSeconds() : 0\n  return Math.floor(stopValue - startValue)\n}\n\n/**\n * Calculates stop date from start date and duration. Will return null if\n * duration is negative, because that indicates a running time entry (without a\n * stop date).\n *\n * @param {string} start Time\n * @param {number} duration In seconds\n * @returns {string} String\n */\nexport const calculateStopDate = (\n  start: string,\n  duration: number\n): string | null =>\n  duration < 0\n    ? null\n    : DateTime.fromISO(start, { setZone: true })\n        .plus(duration * 1000)\n        .toISO({ includeOffset: true })\n\n/**\n * Returns the earliest start date witin the given TEs\n *\n * @param {Object | Array} timeEntries Time entries\n * @returns {string}\n */\nexport const getGroupStartDate = (\n  timeEntries: ReadonlyArray<TimeEntryV9>\n): string =>\n  timeEntries\n    .map(({ start }) => start)\n    .sort()\n    .shift()!\n\n/**\n * Returns the latest stop date witin the given TEs\n *\n * @param {Object | Array} timeEntries Time entries\n * @returns {string}\n */\nexport const getGroupStopDate = (\n  timeEntries: ReadonlyArray<TimeEntryV9>\n): string =>\n  timeEntries\n    .map(({ stop }) => stop ?? '')\n    .sort()\n    .pop()!\n\n/**\n * Returns total duration in seconds of given TEs\n *\n * @param {Object | Array} timeEntries Time entries to sum\n * @returns {number} Total duration in seconds\n */\nexport const getGroupDuration = <T extends TempTimeEntry | TimeEntryV9>(\n  timeEntries: ReadonlyArray<T>\n): number =>\n  timeEntries.reduce((sum: number, te: T) => {\n    if (!te.duration) return sum\n\n    const duration = getDuration(te)\n    sum += duration\n    return sum\n  }, 0)\n\n/**\n * Returns whether given duration is a valid duration for the Timer components\n *\n * @param {string} duration Duration\n * @returns {Boolean}\n */\nexport const isValidDuration = (duration: string): boolean =>\n  isValidTimeDuration(duration) || isValidHumanDuration(duration)\n\n/**\n * Returns whether given duration is a valid time duration (variants of hh:mm:ss)\n *\n * @param {string} duration Duration\n * @returns {Boolean}\n */\nexport const isValidTimeDuration = (duration: string): boolean =>\n  HHMMSS_DURATION_REGEX.test(duration)\n\n/**\n * Returns whether given duration is a valid human duration (variants of 1h30m,\n * 15m30secs, etc)\n *\n * @param {string} duration Duration\n * @returns {Boolean}\n */\nexport const isValidHumanDuration = (duration: string): boolean =>\n  HUMAN_DURATION_REGEX.test(duration)\n\n/**\n * Returns duration limited by the Max duration value\n *\n * @param {number} duration In seconds\n * @returns {number} Duration\n */\nexport const forceMaxDuration = (duration: number): number =>\n  duration > MAX_DURATION ? MAX_DURATION : duration\n\n/**\n * Returns moment duration object Accepts either 'human' durations (e.g.\n * 1h30minutes) or standard formats (e.g. 10:30:00).\n *\n * @param {string} str Duration string to parse\n * @returns {number | null} Duration in seconds\n */\nexport const parseDuration = (str: string): number => {\n  const duration = isValidHumanDuration(str)\n    ? parseHumanDuration(str)\n    : parseTimeDuration(str)\n  return duration ? forceMaxDuration(duration) : 0\n}\n\n/**\n * Returns duration in seconds of given string Accepts strings like:\n *\n * - 2 (2 min)\n * - 2.5 (2.5 min)\n * - 2:5 (2 min, 5 sec)\n * - 2:5:5 (2h, 5min, 5 sec)\n * - 2;5;5 (2h, 5min, 5 sec)\n * - 2::5 (2h, 0min, 5 sec)\n * - 2.5:5:5 (2h, 35min, 5 sec)\n * - 2,5,5 (2h, 30min, 30 sec)\n * - 2:65:5 (3h, 5min, 5 sec)\n *\n * @param {string} str Duration\n * @returns {number} Duration in seconds, always positive\n */\nexport const parseTimeDuration = (str: string): number => {\n  str = str.replace(/[,.]+/g, '.').replace(/[ :;_/-]+/g, ':') // 2,5;5 => 2.5:5\n  let hms = str.split(':').map((part) => parseFloat(part ?? '0'))\n\n  if (hms.length === 1) {\n    if (hms[0] > 99) hms = [Math.floor(hms[0] / 100), hms[0] % 100, 0]\n    else hms = [0, hms[0], 0]\n  }\n\n  if (hms.length >= 2) hms = [hms[0], hms[1], hms[2] ?? 0]\n\n  return Math.floor(\n    (hms[0] || 0) * 60 * 60 + (hms[1] || 0) * 60 + (hms[2] || 0)\n  )\n}\n\n/**\n * Returns seconds of the given duration. Returns null if invalid duration\n * format. Formats:\n *\n * - `43:22`, `8:15`, `7:2`, `:35`, `62:` -> hh:mm\n * - `3,5`, `74.56`, `,37`, `62.` -> hours\n * - `2`, `62`, 235` -> minutes\n * - `23 unit`, `57.3 unit` -> unit\n *\n * @param {string} inputDuration Input to parse\n * @returns {number | null}\n */\nexport const parseHumanDuration = (inputDuration: string): number | null => {\n  let input = inputDuration\n  let match = HHMMSS_DURATION_REGEX.exec(input)\n  if (match) {\n    return parseTimeDuration(input)\n  }\n\n  let accumulated = 0\n  let value\n  input = input.replace(/[,.]+/g, '.')\n  match = HUMAN_DURATION_REGEX.exec(input)\n\n  // Go through regex matches and accumulate a duration\n  while (match) {\n    value = +match[2]\n\n    // Parse the value according to the group\n    // If there was no group defined then parse the values as minutes\n    // If `,` or `.` is used then parse as hours\n    const hasUnitMinutes = match[5] != null\n    const hasUnitHours = match[7] != null\n    const hasUnitSeconds = match[9] != null\n    const hasUnitDays = match[11] != null\n    const hasUnitWeeks = match[13] != null\n    const isDecimalNoUnit = /^\\d*\\.\\d*$/.exec(match[1])\n\n    if (hasUnitHours) {\n      accumulated += value * 60 * 60\n    } else if (hasUnitSeconds) {\n      accumulated += value\n    } else if (hasUnitMinutes) {\n      accumulated += value * 60\n    } else if (hasUnitDays) {\n      accumulated += value * 24 * 60 * 60\n    } else if (hasUnitWeeks) {\n      accumulated += value * 7 * 24 * 60 * 60\n    } else {\n      // Default to minutes unit\n      accumulated += value * 60\n    }\n\n    // We could just re-run `exec` on the string and it should work, but we'd\n    // have to take the beginning of the line constraint and mess up validation.\n    input = input.replace(match[1], '')\n    match = HUMAN_DURATION_REGEX.exec(input)\n    if (match && input) {\n      if (isDecimalNoUnit) return null\n    } else {\n      return accumulated\n    }\n  }\n\n  return accumulated\n}\n\n/**\n * Formats given string date to Today, Yesterday, or a narrow date format\n *\n * @param {string} date\n * @returns {string}\n */\nexport const formatDay = (date: string): string => {\n  const d = new Date(date)\n\n  if (datefns.isToday(d)) {\n    return 'Today'\n  }\n\n  if (datefns.isYesterday(d)) {\n    return 'Yesterday'\n  }\n\n  return datefns.format(d, 'EEE, dd MMM')\n}\n\nexport const formatDuration = (\n  duration: number,\n  options?: { html: boolean }\n): string => secToHhmmImproved(duration, options)\n\n/**\n * Drops anything after the day period (AM/PM), if anything is present.\n *\n * @param {string} str The input string\n * @returns {string} The input string with anything after the period dropped\n */\n\nconst dropAfterPeriod = (str: string): string =>\n  str.replace(/([ap]m?) .+/gi, '$1')\n\n/**\n * Returns whether given time string is valid\n *\n * @param {string} time The input string\n * @returns {Boolean}\n * @see https://date-fns.org/v2.28.0/docs/parse\n */\n\nexport const isValidTime = (time: string): boolean => {\n  time = dropAfterPeriod(time)\n\n  return VALID_TIME_FORMATS.some(\n    (format) => !isNaN(+datefns.parse(time, format, new Date()))\n  )\n}\n\n/**\n * Parse time input into valid Date objects. Returns an object representing the\n * parsed time in 24h format.\n *\n * @param {string} str Input string\n * @param {Boolean} use24hClock Indicates whether prevDate should be used to\n *   determine if the time should be am or pm if it appears to be earlier than\n *   12pm and there is no info about whether it is actually am or pm\n * @param {string} prevDate If no am/pm specified in string, compare both to\n *   this date and use whatever is closest.\n * @returns {object} {hours: ..., minutes: ...}\n */\nexport const parseTime = (\n  str: string,\n  use24hClock: boolean,\n  prevDate: null | string = null\n): { hours: number; minutes: number } => {\n  str = dropAfterPeriod(str)\n    .toLowerCase()\n    .replace(/[,.:;]+/, ':')\n    .trim()\n\n  /**\n   * Parse hours and minutes from the time string and return the hours minute\n   * components as elements of len-2 array.\n   *\n   * @param {string} str The input string such as '100', '1:00', '1200', '12:00'\n   * @returns {array | undefined} Hh, mm\n   */\n  const getHoursMinutes = (str: string) => {\n    if (str.indexOf(':') > -1) {\n      return str.split(':').map((part) => parseInt(part, 10) || 0)\n    } else {\n      str = str.replace(/[^0-9]/g, '')\n      if (str.length <= 2) {\n        return [parseInt(str, 10), 0] // h and hh\n      } else if (str.length <= 3) {\n        return [parseInt(str[0], 10), parseInt(str.substr(1), 10)] // hmm\n      } else {\n        return [parseInt(str.substr(0, 2), 10), parseInt(str.substr(2), 10)] // hhmm and hhmmmmmm..\n      }\n    }\n  }\n\n  /**\n   * Take an input array of [hh, mm] and add hours to `hh` as necessary if `mm` exceeds 59\n   *\n   * @param {array} hm [hh, mm]\n   * @returns {array | undefined} Hh, mm\n   */\n  const overflowMinutes = (hm: number[] | [number, number]) => {\n    hm = hm.slice() as [number, number]\n    hm[0] += Math.floor(hm[1] / 60)\n    hm[1] = hm[1] % 60\n    return hm\n  }\n\n  let hm = getHoursMinutes(str)\n  hm[0] = hm[0] % 24 // Lose extra days\n  hm = overflowMinutes(hm)\n\n  // If we're in 24h mode or the user inputs more than 12 hours, there's no need to add any more magic\n  if (use24hClock || hm[0] >= 13) {\n    return { hours: hm[0], minutes: hm[1] }\n  }\n\n  const isPM = _isPm(str, hm, use24hClock, prevDate)\n\n  if (hm[0] === 12) hm[0] = 0 // twelvehouranians say 12:00 when they mean 0:00. We need to normalize that\n\n  if (isPM === true) {\n    hm[0] += 12\n  }\n\n  return { hours: hm[0], minutes: hm[1] }\n}\n\n/**\n * Return true if the time should be PM. The time is PM if the string contains\n * 'p' or 'pm' explicitly or, if no am/pm found in string, it should be PM if\n * that time is closer to the time in prevDate\n *\n * @param {string} str The time string like '11:22a', assumed to be in 12h format\n * @returns {boolean} True if PM\n */\nconst _isPm = (\n  str: string,\n  hm: number[],\n  use24hClock: boolean,\n  prevDate: null | string\n) => {\n  let isPM: boolean | null = null // null represents \"we don't know\"\n  const ampmMatch = str.toLowerCase().match(/(a|p)m?$/)\n\n  if (ampmMatch) {\n    str = str.substr(0, str.length - ampmMatch[0].length)\n    isPM = ampmMatch[0] === 'p' || ampmMatch[0] === 'pm'\n  } else if (!use24hClock && prevDate) {\n    // No am/pm found in string but we need *something* => take the closest value to prevDate\n    if (hm[0] === 12) hm = [0, hm[1]] // twelvehouranians say 12:00 when they mean 0:00. We need to normalize that\n    const dt = DateTime.now().set({ hour: hm[0], minute: hm[1] })\n\n    const prevTimeInPrevDay = DateTime.now()\n      .minus({ days: 1 })\n      .set({\n        hour: DateTime.fromISO(prevDate).hour,\n        minute: DateTime.fromISO(prevDate).minute,\n      })\n\n    const prevTimeInCurrentDay = DateTime.now().set({\n      hour: DateTime.fromISO(prevDate).hour,\n      minute: DateTime.fromISO(prevDate).minute,\n    })\n\n    const prevTimeInNextDay = DateTime.now()\n      .plus({ days: 1 })\n      .set({\n        hour: DateTime.fromISO(prevDate).hour,\n        minute: DateTime.fromISO(prevDate).minute,\n      })\n\n    const diffPrevDay = Math.abs(dt.toMillis() - prevTimeInPrevDay.toMillis())\n    const diffCurrentDayAM = Math.abs(\n      dt.toMillis() - prevTimeInCurrentDay.toMillis()\n    )\n    const diffCurrentDayPM = Math.abs(\n      dt.toMillis() + 12 * 60 * 60 * 1000 - prevTimeInCurrentDay.toMillis()\n    )\n    const diffNextDay = Math.abs(\n      dt.toMillis() + 12 * 60 * 60 * 1000 - prevTimeInNextDay.toMillis()\n    )\n    const smallest = Math.min(\n      diffPrevDay,\n      diffCurrentDayAM,\n      diffCurrentDayPM,\n      diffNextDay\n    )\n\n    if (smallest === diffPrevDay) isPM = false\n    else if (smallest === diffCurrentDayAM) isPM = false\n    else if (smallest === diffCurrentDayPM) isPM = true\n    else if (smallest === diffNextDay) isPM = true\n  }\n\n  return isPM\n}\n\n/**\n * Checks if the time entry is running\n *\n * @param {object} timeEntry A time entry object\n * @returns {Boolean}\n */\nexport const isTimeEntryRunning = (\n  timeEntry: TimeEntryV9 | TempTimeEntry\n): boolean => timeEntry.duration < 0\n\n/**\n * Returns a new entry containing only the regular time entry attributes,\n * matching the format used by the time entries API.\n *\n * In detailed reports this is used to prevent leakage of report API attributes\n * to the timer page.\n *\n * @param {object} timeEntry A time entry object\n * @returns {object} The newtime entry\n */\nexport const pickTimeEntryAttributes = (\n  timeEntry: TimeEntryV9\n): Partial<TimeEntryV9> =>\n  R.pick(\n    [\n      'id',\n      'wid',\n      'pid',\n      'tid',\n      'billable',\n      'start',\n      'stop',\n      'duration',\n      'description',\n      'tags',\n      'duronly',\n      'at',\n      'uid',\n    ],\n    timeEntry\n  )\n\n/**\n * Returns true if two entries should be grouped when presented, if grouped mode\n * is active.\n *\n * @param {object} timeEntryA A time entry\n * @param {object} timeEntryA Another time entry @ @return {boolean} true if should group\n */\nexport const shouldGroupTimeEntries = (\n  timeEntryA: TimeEntryV9,\n  timeEntryB: TimeEntryV9\n): boolean => {\n  if (!timeEntryA || !timeEntryB) return false\n  if (\n    (timeEntryA.workspace_id || timeEntryB.workspace_id) &&\n    timeEntryA.workspace_id !== timeEntryB.workspace_id\n  ) {\n    return false\n  }\n  if (\n    (timeEntryA.task_id || timeEntryB.task_id) &&\n    timeEntryA.task_id !== timeEntryB.task_id\n  ) {\n    return false\n  }\n  if (\n    (timeEntryA.project_id || timeEntryB.project_id) &&\n    timeEntryA.project_id !== timeEntryB.project_id\n  ) {\n    return false\n  }\n  if (timeEntryA.billable !== timeEntryB.billable) return false\n  if (R.difference(timeEntryA.tags ?? [], timeEntryB.tags ?? []).length)\n    return false\n  return (timeEntryA.description || '') === (timeEntryB.description || '')\n}\n\nexport const getLoadMoreRangeInDays = (): number => LOAD_MORE_RANGE_IN_DAYS\n\nconst stripMilliseconds = (date: string) => {\n  const dt = DateTime.fromISO(date)\n\n  if (Number.isNaN(dt.toMillis())) {\n    return date\n  }\n\n  return dt.set({ millisecond: 0 }).toUTC().toISO()\n}\n\nexport const sanitizeTimes = (te: TimeEntryV9): TimeEntryV9 => ({\n  ...te,\n  start: stripMilliseconds(te.start),\n  stop: te.stop ? stripMilliseconds(te.stop) : undefined,\n})\n\n// keeping this cache, but not sure if there's benefit\nconst unixTimeCache: Record<string, number> = {}\nconst cacheAndReturn = (key: string, fn: () => number) => {\n  if (unixTimeCache[key]) return unixTimeCache[key]\n  unixTimeCache[key] = fn()\n  return unixTimeCache[key]\n}\nconst unixStart = (te: TempTimeEntry | TimeEntryV9) =>\n  cacheAndReturn(te.start, () => getStartDateSeconds(te))\nconst unixStop = (te: TempTimeEntry | TimeEntryV9) =>\n  te.stop ? cacheAndReturn(te.stop, () => getStopDateSeconds(te)) : null\n\nconst isTEV9 = (te: TimeEntryV9 | TempTimeEntry): te is TimeEntryV9 =>\n  'project_id' in te\nexport const groupSimilarTimeEntries = <T extends TempTimeEntry | TimeEntryV9>(\n  timeEntries: ReadonlyArray<T>\n): ReadonlyArray<T | ReadonlyArray<T>> =>\n  chain(timeEntries)\n    .groupBy((te) =>\n      [\n        te.description ?? '',\n        ...(isTEV9(te)\n          ? [te.project_id ?? '', te.task_id ?? '', te.workspace_id]\n          : [te.pid ?? '', te.tid ?? '', te.wid]),\n        (te.tag_ids ?? te.tags ?? []).join(','),\n        te.billable === true,\n      ].join(' - ')\n    )\n    .values()\n    .map((group) => {\n      if (group.length === 1) {\n        return group[0]\n      }\n\n      return group\n    })\n    .sortBy((tes) => {\n      const item = Array.isArray(tes)\n        ? sortBy(tes, (te) => {\n            if (te.start) return unixStart(te)\n            return unixStop(te) ?? 0\n          }).at(-1)!\n        : tes\n\n      return item.start ? unixStart(item) : unixStop(item) ?? 0\n    })\n    .reverse()\n    .value()\n\nexport const getMinimumAllowedStartDate = (\n  isAdminOfWorkspace: boolean,\n  workspaceLockedAtDate?: string\n) => {\n  if (isAdminOfWorkspace) return null\n  if (!workspaceLockedAtDate) return null\n  // One day is added beacuse the workspace setting may be 2020-01-01, but we want to lock the\n  // entire day in the UI (i.e. up until 2020-01-01T23:59:59 inclusive)\n  return DateTime.fromISO(workspaceLockedAtDate)\n    .startOf('day')\n    .plus({ days: 1 })\n    .toUTC()\n    .toISO()\n}\n\n/**\n * Returns a new entry containing only regular time entry attributes that may be\n * changed by the user. This is used in conjunction with the timeEntryUpdate\n * action for optimistic updates in the calendar to avoid submitting fields that\n * would cause errors, such as a differerent ID being included in the change set\n * due to an optimistic create in progress.\n *\n * N.B. this is a stop-gap solution while much of time entry sync / utils are\n * untyped or unfinished.\n *\n * @param {object} timeEntry A time entry object\n * @returns {object} The new time entry\n */\nexport const pickTimeEntryAttributesForUpdate = (timeEntry: TimeEntryV9) => {\n  return R.omit(['id', 'uid', 'at'], timeEntry)\n}\n\n/**\n * Returns whether this time entry is locked for the user\n *\n * @param {object} timeEntry The time entry to check\n * @param {object} workspacesById Map of workspaces by ID, typically from the store\n * @param {object} lockDatesByWs Map of workspace lock dates by ID, typically\n *   from the store\n * @returns {boolean} Whether the time entry should be locked for the user\n */\nexport const isTimeEntryLocked = (\n  timeEntry: TimeEntryV9,\n  workspacesById: Record<string, Workspace>,\n  lockDatesByWs: Record<string, string>\n) => {\n  // @ts-expect-error: Remove non-v9 attribute fallback\n  const workspaceId = timeEntry.workspace_id || timeEntry.wid\n  const workspace = workspacesById[workspaceId]\n  // TODO: We have logic repeated across packages. Maybe move webapp utils to this package.\n  const isAdmin = workspace\n    ? workspace.role\n      ? workspace.role === 'admin'\n      : workspace.admin\n    : false\n  const lockDate = lockDatesByWs[workspaceId]\n  const minDate = getMinimumAllowedStartDate(isAdmin, lockDate)\n\n  if (!minDate) return false\n\n  return !(\n    getDateTime(timeEntry.start).diff(DateTime.fromISO(minDate)).toMillis() >= 0\n  ) // same or after\n}\n\nexport const sanitizeV9Attributes = (timeEntry: TimeEntryV9) => {\n  return R.omit(\n    ['tag_ids', 'project_id', 'workspace_id', 'task_id', 'client_id'],\n    timeEntry\n  )\n}\n\nexport const sanitizeDuration = (timeEntry: TimeEntryV9) => {\n  if (!timeEntry || !timeEntry.duration) return timeEntry\n  return {\n    ...timeEntry,\n    duration: Math.floor(timeEntry.duration),\n  }\n}\n\nexport const sanitizeTimeEntry = (timeEntry: TimeEntryV9) => {\n  return sanitizeV9Attributes(sanitizeDuration(timeEntry))\n}\n\nexport const sanitizeTimeEntries = (timeEntries: TimeEntryV9[]) => {\n  if (Array.isArray(timeEntries)) {\n    return timeEntries.map(sanitizeV9Attributes)\n  }\n}\n\nexport const teUpdateChecks = (timeEntryParam: TimeEntryV9) => {\n  if (!timeEntryParam.id) throw new Error('Cannot update a TE without an id.')\n  if (!timeEntryParam.stop && timeEntryParam.duration > 0) {\n    throw new Error('A running TE must have negative duration.')\n  }\n  if (!!timeEntryParam.stop && timeEntryParam.duration < 0) {\n    throw new Error('A stopped TE must have a positive duration.')\n  }\n  if (timeEntryParam.id < 0) {\n    throw new Error('Cannot post an entry with a negative id to the API.')\n  }\n\n  const sanitizedTimeEntry = R.omit(\n    ['unsynced', '_tempId', '__created', '__deleted'],\n    sanitizeTimeEntry(timeEntryParam)\n  )\n  const timeEntryToUpdate = {\n    ...sanitizedTimeEntry,\n    // @ts-expect-error: Remove non-v9 attribute fallback\n    pid: timeEntryParam?.pid ?? null,\n    billable: timeEntryParam.billable ?? false, // Api wants a bool value, not null\n    stop: getCorrectedStop(sanitizedTimeEntry),\n  }\n\n  return timeEntryToUpdate\n}\n\n/**\n * Returns a Time Entry with sanitized properties ready to send to the Toggl API.\n *\n * @param timeEntryParam Time Entry.\n * @param clientIdentifier Identifier for the app client making the request,\n *   e.g. 'Snowball' for the webapp.\n * @returns New Time Entry object.\n */\nexport const teCreateChecks = (\n  timeEntryParam: TimeEntryV9,\n  clientIdentifier: string\n) => {\n  const defaultValues = {\n    created_with: clientIdentifier,\n    pid: null,\n    tid: null,\n  }\n  const sanitizedTimeEntry = R.omit(\n    ['unsynced', '_tempId', '__created', '__deleted', 'id'],\n    sanitizeTimeEntry(timeEntryParam)\n  )\n  const timeEntryToSave = {\n    ...defaultValues,\n    ...sanitizedTimeEntry,\n    billable: timeEntryParam.billable ?? false, // Api wants a bool value, not null\n    stop: getCorrectedStop(sanitizedTimeEntry),\n  }\n\n  return timeEntryToSave\n}\n\nconst getCorrectedStop = (\n  timeEntry: Pick<TimeEntryV9, 'duration' | 'start' | 'stop'>\n) => {\n  if (timeEntry.duration >= 0 && timeEntry.stop) {\n    const stop = datefns.addSeconds(\n      new Date(timeEntry.start),\n      timeEntry.duration\n    )\n\n    if (datefns.differenceInSeconds(stop, new Date(timeEntry.stop)) !== 0) {\n      return stop.toISOString()\n    }\n  }\n\n  return timeEntry.stop\n}\n","import { logger } from '@src/lib/errorReport'\nimport { FullFetchAlarm } from '@src/lib/full-fetch'\nimport { PomodoroService } from '@src/pomodoro/PomodoroService'\nimport { ClientsListService } from '@src/v4/services/ClientsListService'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport { ProjectsListService } from '@src/v4/services/ProjectsListService'\nimport { SelectedWorkspaceService } from '@src/v4/services/SelectedWorkspaceService'\nimport { TagsListService } from '@src/v4/services/TagsListService'\nimport { TasksListService } from '@src/v4/services/TasksListService'\nimport { TEListService } from '@src/v4/services/TEListService'\nimport { UsersService } from '@src/v4/services/UsersService'\nimport { WorkspacesListService } from '@src/v4/services/WorkspacesListService'\nimport { WSPreferencesService } from '@src/v4/services/WSPreferencesService'\nimport { debounce } from 'lodash'\n\nimport { type TimeEntryV9 } from '@toggl/track-types'\nimport * as util from '@toggl/track-util'\n\n// Debounced handler to handle burst of events\n\nconst DEBOUNCE_INTERVAL = 1000\n\nconst debouncedFullFetch = debounce(async () => {\n  await FullFetchAlarm.handler()\n}, DEBOUNCE_INTERVAL)\n\nconst debouncedTaskFetch = debounce(async (fullSync?: boolean) => {\n  await TasksListService.invoke(\n    fullSync ? null : await TasksListService.since()\n  )\n}, DEBOUNCE_INTERVAL)\n\nconst debouncedClientFetch = debounce(async () => {\n  await ClientsListService.invoke(await ClientsListService.since())\n}, DEBOUNCE_INTERVAL)\n\nconst debouncedTagsFetch = debounce(async () => {\n  await TagsListService.invoke(await TagsListService.since())\n}, DEBOUNCE_INTERVAL)\n\nconst debouncedProjectFetch = debounce(async () => {\n  const projects = await ProjectsListService.invoke(\n    await ProjectsListService.since()\n  )\n  if (Object.keys(projects ?? {}).length) {\n    await debouncedTaskFetch(true)\n  }\n}, DEBOUNCE_INTERVAL)\n\nconst debouncedWorkspacesFetch = debounce(async () => {\n  await WorkspacesListService.invoke(await WorkspacesListService.since())\n}, DEBOUNCE_INTERVAL)\n\nconst debouncedWSPreferencesFetch = debounce(async (wid: number) => {\n  await WSPreferencesService.invoke(wid, { store: true })\n}, DEBOUNCE_INTERVAL)\n\nconst debouncedPomodoroReset = debounce(async (data: TimeEntryV9) => {\n  const current = await CurrentTEService.retrieve()\n\n  if (current?.id === data.id) {\n    const isDataRunning = util.timer.isTimeEntryRunning(data)\n\n    if (!isDataRunning) {\n      PomodoroService.reset()\n    }\n  }\n}, DEBOUNCE_INTERVAL)\n\n// callbacks from WS and FCM\n\nasync function handleEvent(data: any) {\n  switch (data.model) {\n    case 'time_entry': {\n      const currentTE = await CurrentTEService.retrieve()\n\n      // Needs to be debouced to avoid burst of events\n      debouncedPomodoroReset(data.data)\n      // {\"action\":\"update\",\"data\":{\"id\":3578357098,\"wid\":356965,\"duration\":-1724764671,\"duration_diff\":0,\"pid\":null,\"tid\":null,\"tag_ids\":null,\"tags\":[],\"description\":\"test 12345678910\",\"billable\":false,\"duronly\":true,\"start\":\"2024-08-27T13:17:51Z\",\"stop\":null,\"shared_with\":null,\"at\":\"2024-08-27T13:19:23.196799Z\"},\"model\":\"time_entry\"}\n      if (\n        util.timer.isTimeEntryRunning(data.data as TimeEntryV9) ||\n        currentTE?.id === data.data.id\n      ) {\n        return CurrentTEService.store(\n          Object.assign(data.data, {\n            workspace_id: data.data.wid,\n            project_id: data.data.pid,\n            task_id: data.data.tid,\n          })\n        )\n      }\n\n      if (!util.timer.isTimeEntryRunning(data.data as TimeEntryV9)) {\n        if (data.action === 'delete') {\n          await TEListService.deleteFromStore(data.data.id)\n        } else {\n          await TEListService.updateStore(data.data)\n        }\n      }\n      break\n    }\n    case 'client':\n      return debouncedClientFetch()\n\n    case 'group_entity_roles':\n    case 'user_entity_roles':\n      if (data.data.project_id) {\n        return debouncedProjectFetch()\n      } else {\n        return debouncedFullFetch()\n      }\n\n    case 'workspace': {\n      const wid = data.data.id as number\n      const user = await UsersService.retrieve()\n      const calls = [debouncedWorkspacesFetch()]\n\n      // Fetch just in case the default workspace is updated\n      if (user && (await SelectedWorkspaceService.retrieve()) === wid) {\n        calls.push(debouncedWSPreferencesFetch(wid))\n      }\n\n      return Promise.all(calls)\n    }\n\n    case 'project':\n    case 'project_user':\n      return debouncedProjectFetch()\n\n    case 'tag':\n      return debouncedTagsFetch()\n\n    case 'task':\n      return debouncedTaskFetch()\n\n    default:\n      logger.debug('Unidentified websocket event model: ' + data.model)\n  }\n}\n\nexport async function onWebSocketDataReceived(data: any) {\n  logger.debug('WS::onDataReceived', data)\n  try {\n    await handleEvent(data)\n  } catch (error) {\n    logger.error(error, 'Error in onWebSocketDataReceived')\n  }\n}\n","import { logger } from '@src/lib/errorReport'\nimport { FullFetchAlarm } from '@src/lib/full-fetch'\nimport { ClientsListService } from '@src/v4/services/ClientsListService'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport { ProjectsListService } from '@src/v4/services/ProjectsListService'\nimport { TagsListService } from '@src/v4/services/TagsListService'\nimport { TasksListService } from '@src/v4/services/TasksListService'\nimport { UsersService } from '@src/v4/services/UsersService'\nimport { WorkspacesListService } from '@src/v4/services/WorkspacesListService'\nimport _ from 'lodash'\nimport Browser from 'webextension-polyfill'\n\nimport { RequestError } from '@toggl/track-api'\n\nasync function hasWorkspacesChanged() {\n  const storedWorkspaceIds = Object.keys(\n    (await WorkspacesListService.retrieve()) ?? {}\n  )\n  const workspaces = await WorkspacesListService.invoke(\n    await WorkspacesListService.since()\n  )\n  const newWorkspaceIds = Object.keys(workspaces ?? {})\n  return !_.isEqual(storedWorkspaceIds, newWorkspaceIds)\n}\n\nexport async function doFetchUsingSince() {\n  logger.debug('Lib::doFetchUsingSince')\n  try {\n    await UsersService.invoke({ store: true })\n\n    // Changes in workspaces user is part of should trigger full fetch\n    if (await hasWorkspacesChanged()) {\n      await FullFetchAlarm.handler()\n      return\n    }\n\n    await Promise.all([\n      CurrentTEService.invoke({ store: true }),\n      TagsListService.invoke(await TagsListService.since()),\n      ClientsListService.invoke(await ClientsListService.since()),\n    ])\n    const projects = await ProjectsListService.invoke(\n      await ProjectsListService.since(),\n      // return api data instead of storage\n      { returnApiData: true }\n    )\n    // Perform full task since if user is added or removed from project\n    // We don't get tasks as part of since for this case\n    await TasksListService.invoke(\n      Object.keys(projects ?? {}).length === 0\n        ? await TasksListService.since()\n        : null\n    )\n  } catch (error) {\n    if (error instanceof RequestError && error.response?.status !== 403) {\n      Browser.alarms.create(FullFetchAlarm.retryAlarmName, {\n        when: Date.now() + 5 * 60 * 1000,\n      })\n    }\n    logger.error(error) // TODO: Does this needs to go to Sentry as well? @with-shrey @askides\n  }\n}\n","/**\n * Delay full fetch by 5 seconds to wait for WS authentication to avoid\n * duplicate api calls\n */\nimport { logger } from '@src/lib/errorReport'\nimport { FullFetchAlarm } from '@src/lib/full-fetch'\nimport { doFetchUsingSince } from '@src/lib/since-fetch'\n\nlet timeoutId: null | NodeJS.Timeout\nexport let isWebsocketActive = false\n\nexport function scheduleFullFetch() {\n  // For new users so they see loading instead of login screen\n  FullFetchAlarm.updateStatus({\n    loading: true,\n  })\n  timeoutId = setTimeout(() => {\n    timeoutId = null\n    void FullFetchAlarm.handler()\n  }, 5000)\n}\n\nexport function onWebsocketAuthenticated() {\n  ;(async () => {\n    try {\n      logger.debug('WS::onAuthenticated')\n      if (timeoutId) {\n        clearTimeout(timeoutId)\n        await FullFetchAlarm.handler()\n      } else {\n        await doFetchUsingSince()\n      }\n      isWebsocketActive = true\n    } catch (error) {\n      logger.error(error, 'WS::onAuthenticated')\n    }\n  })()\n}\n\nexport function onWebsocketDisconnected() {\n  logger.debug('WS::onWebsocketDisconnected')\n  isWebsocketActive = false\n}\n","import { onWebSocketDataReceived } from '@src/background/push-event-handlers'\nimport { type StateChangeListener } from '@src/lib/db'\nimport { logger } from '@src/lib/errorReport'\nimport {\n  onWebsocketAuthenticated,\n  onWebsocketDisconnected,\n} from '@src/lib/fetch-handler'\nimport { isServiceWorker } from '@src/lib/utils'\nimport { UsersService } from '@src/v4/services/UsersService'\nimport Browser from 'webextension-polyfill'\n\nexport const WEBSOCKET_ALARM_ID = 'WEBSOCKET_ALARM'\nexport const WEBSOCKET_ALARM_RETRY_ID = 'WEBSOCKET_ALARM_RETRY'\nexport const HEALTH_CHECK_TIMEOUT_IN_MINUTE = 10 / 60\nexport const SILENCE_TIME_LIMIT = 20 * 1000\nexport const SHORT_WAIT_UNTIL_REOPEN = 5 * 1000\nexport const LONG_WAIT_UNTIL_REOPEN = 60 * 1000\n\nconst DEBUG = false\n\nlet socket: WebSocket\nlet lastAliveCheck: number | null = null\n\nfunction updateKeepAlive() {\n  lastAliveCheck = Date.now()\n}\n\nfunction getSessionCookie(): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    chrome.cookies.get(\n      {\n        url: `https://${process.env.TRACK_HOSTNAME}`,\n        name: '__Secure-accounts-session',\n      },\n      (cookie) => {\n        if (chrome.runtime.lastError) {\n          reject(chrome.runtime.lastError)\n        } else {\n          resolve(cookie?.value)\n        }\n      }\n    )\n  })\n}\n\nasync function onSocketOpen(event: MessageEvent) {\n  logger.debug('WS::onSocketOpen', event)\n\n  updateKeepAlive()\n  let data = ''\n  try {\n    if (isServiceWorker()) {\n      const token = await getSessionCookie()\n      const authenticationMessage = {\n        type: 'authenticate',\n        auth_type: 'oauth',\n        token,\n      }\n      data = JSON.stringify(authenticationMessage)\n    } else {\n      const authenticationMessage = {\n        type: 'authenticate',\n        auth_type: 'cookie',\n      }\n      data = JSON.stringify(authenticationMessage)\n    }\n    socket.send(data)\n  } catch (e) {\n    logger.error(e, 'Error authenticating websocket')\n  }\n}\n\nconst pong = () => {\n  const data = JSON.stringify({ type: 'pong' })\n  try {\n    socket.send(data)\n  } catch (e) {\n    logger.error(e, 'Error ponging websocket server')\n  }\n}\n\nfunction onSocketMessage(event: MessageEvent) {\n  DEBUG &&\n    logger.debug(\n      'WebSocket message received:',\n      event.data,\n      Date.now(),\n      new Date().toISOString()\n    )\n\n  updateKeepAlive()\n\n  const data = JSON.parse(event.data)\n\n  const isUsefulIncomingData = !!data.model\n  const isConnectionConfirmation = !!data.session_id\n  const isPing = !isConnectionConfirmation && !isUsefulIncomingData\n\n  if (isUsefulIncomingData) {\n    void onWebSocketDataReceived(data)\n  } else if (isPing) {\n    pong()\n  } else if (isConnectionConfirmation) {\n    onWebsocketAuthenticated()\n  }\n}\n\nconst onSocketError = (event: Event) => {\n  logger.error(new Error(JSON.stringify(event)), 'Websocket unexpected error')\n  onWebsocketDisconnected()\n}\n\nconst onSocketClose = async () => {\n  onWebsocketDisconnected()\n  logger.debug('WS::onSocketClose')\n\n  const retryMiliSeconds = lastAliveCheck\n    ? SHORT_WAIT_UNTIL_REOPEN\n    : LONG_WAIT_UNTIL_REOPEN\n\n  try {\n    // Schedule reconnection of websocket\n    await Browser.alarms.clear(WEBSOCKET_ALARM_RETRY_ID)\n    Browser.alarms.create(WEBSOCKET_ALARM_RETRY_ID, {\n      when: Date.now() + retryMiliSeconds,\n    })\n  } catch (error) {\n    logger.error(error, 'Error setting up retry alarm')\n  }\n}\n\nasync function isAuthenticated() {\n  const user = await UsersService.retrieve()\n  return !!user?.id\n}\n\nasync function setupLongRetryAlarm() {\n  try {\n    await Browser.alarms.clear(WEBSOCKET_ALARM_RETRY_ID)\n    Browser.alarms.create(WEBSOCKET_ALARM_RETRY_ID, {\n      when: Date.now() + LONG_WAIT_UNTIL_REOPEN,\n    })\n  } catch (error) {\n    logger.error(error, 'Error setting up authentication retry alarm')\n  }\n}\n\nexport async function connectWebSocket() {\n  // No need to open new connection if already open\n  if (\n    socket?.readyState === WebSocket.OPEN ||\n    socket?.readyState === WebSocket.CONNECTING\n  )\n    return\n  try {\n    // Don't need to maintain connection if no user is authenticated\n    const isAuthenticatedUser = await isAuthenticated()\n    if (!isAuthenticatedUser) {\n      // Fail safe incase SW sleeps\n      await setupLongRetryAlarm()\n      return\n    }\n\n    lastAliveCheck = null\n    socket = new WebSocket(`wss://${process.env.TRACK_HOSTNAME}/stream`)\n\n    socket.onopen = onSocketOpen\n\n    socket.onmessage = onSocketMessage\n\n    socket.onclose = onSocketClose\n\n    socket.onerror = onSocketError\n\n    await startSocketHealthMonitor()\n  } catch (e) {\n    logger.error(e, 'Error connecting to websocket')\n  }\n}\n\nconst reconnect = async () => {\n  logger.debug('WS::reconnect')\n  socket.close()\n  await stopSocketHealthMonitor()\n}\n\n/**\n * Socket health management\n *\n * 1. Every 15 seconds send a pong which is replied by ping from BE\n * 2. Close socket when connection is not healthy, os it can reconnect\n */\n\nexport const checkSocketHealth = async () => {\n  if (!lastAliveCheck) return\n\n  const socketIsLost = lastAliveCheck < Date.now() - SILENCE_TIME_LIMIT\n  const socketIsOpen = socket.readyState === socket.OPEN\n\n  const shouldReconnect = socketIsLost && socketIsOpen\n  if (shouldReconnect) {\n    await reconnect()\n  }\n}\n\nconst stopSocketHealthMonitor = async () => {\n  await Browser.alarms.clear(WEBSOCKET_ALARM_ID)\n}\nconst startSocketHealthMonitor = async () => {\n  await stopSocketHealthMonitor()\n  Browser.alarms.create(WEBSOCKET_ALARM_ID, {\n    periodInMinutes: HEALTH_CHECK_TIMEOUT_IN_MINUTE,\n  })\n}\n\n/** Listen for change in user and drop/create WS connection */\nexport const onWebsocketStateChangesListener: StateChangeListener = async (\n  changes,\n  areaName\n) => {\n  try {\n    if (areaName === 'local' && UsersService.storageKey in changes) {\n      const newValue = changes[UsersService.storageKey].newValue?.id\n      const oldValue = changes[UsersService.storageKey].oldValue?.id\n\n      if (oldValue !== newValue) {\n        if (socket) {\n          await reconnect()\n        }\n        await connectWebSocket()\n      }\n    }\n  } catch (error) {\n    logger.error(error, 'onWebsocketStateChangesListener')\n  }\n}\n","import { logger } from '@src/lib/errorReport'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport { DateTime, Interval } from 'luxon'\nimport { defineMessages } from 'react-intl'\nimport Browser from 'webextension-polyfill'\n\nimport { Db, type StateChangeListener } from './db'\nimport intl from './intl'\n\nexport const TRACKING_REMINDER_ALARM_ID = 'time-tracking-reminder'\nexport const REMINDER_NOTIFICATION_ID = 'reminder-notification'\n\nconst messages = defineMessages({\n  notification: {\n    id: 'notification.rememberTracking',\n    defaultMessage: \"Don't forget to track your time.\",\n  },\n  disableReminder: {\n    id: 'notification.disableReminder',\n    defaultMessage: 'Disable reminder',\n  },\n})\n\nexport async function configurePeriodicReminder() {\n  const enabled = await Db.get('remindersCheckEnabled')\n\n  await Browser.alarms.clear(TRACKING_REMINDER_ALARM_ID)\n\n  if (!enabled) return\n\n  await createPeriodicReminder()\n}\n\nasync function createPeriodicReminder() {\n  const periodicity = await Db.get('remindersInterval')\n\n  Browser.alarms.create(TRACKING_REMINDER_ALARM_ID, {\n    periodInMinutes: periodicity,\n  })\n}\n\nexport async function handleReminderAlarm() {\n  try {\n    logger.debug('Reminders::handleReminderAlarm')\n    const [from, to] = await Db.get('remindersFromTo')\n    const currentTE = await CurrentTEService.retrieve()\n\n    const interval = Interval.fromDateTimes(\n      DateTime.fromISO(from),\n      DateTime.fromISO(to)\n    )\n\n    if (interval.contains(DateTime.now()) && !currentTE) {\n      void Browser.notifications.create(REMINDER_NOTIFICATION_ID, {\n        type: 'basic',\n        iconUrl: 'images/icon-128.png',\n        title: 'Toggl Track',\n        priority: 2,\n        message: intl.formatMessage(messages.notification),\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        buttons: [\n          {\n            title: intl.formatMessage(messages.disableReminder),\n          },\n        ],\n      })\n    }\n  } catch (e) {\n    logger.error(e)\n  }\n}\n\nexport async function clearPeriodicReminder() {\n  await Browser.alarms.clear(TRACKING_REMINDER_ALARM_ID)\n}\n\nexport async function handleNotificationButtonClick() {\n  await Browser.notifications.clear(REMINDER_NOTIFICATION_ID)\n  await Db.set('remindersCheckEnabled', false)\n}\n\n// Start instantly when setting is enabled\nexport const onRemindersStateChangeListener: StateChangeListener = (\n  changes,\n  area\n) => {\n  try {\n    if (\n      area === 'sync' &&\n      (changes.remindersCheckEnabled || changes.remindersInterval)\n    ) {\n      logger.debug('Reminders::onRemindersStateChangeListener', new Date())\n      void configurePeriodicReminder()\n    }\n\n    if (area === 'local' && changes[CurrentTEService.storageKey]) {\n      if (changes[CurrentTEService.storageKey].newValue) {\n        logger.debug(\n          'Reminders::onRemindersStateChangeListener',\n          'alarm cleared on storage change'\n        )\n\n        void clearPeriodicReminder()\n      } else {\n        logger.debug(\n          'Reminders::onRemindersStateChangeListener',\n          'alarm configuring on storage change',\n          new Date()\n        )\n        void configurePeriodicReminder()\n      }\n    }\n  } catch (error) {\n    logger.error(error, 'onRemindersStateChangeListener')\n  }\n}\n","import Browser from 'webextension-polyfill'\n\nconst NotificationService = {\n  eventKey: 'NOTIFY_USER_V4_E' as const,\n\n  /**\n   * Create a notification\n   *\n   * @param title Title of notification\n   * @param message Message content\n   * @param priority Priority ranges from -2 to 2. -2 is lowest priority. 2 is\n   *   highest. Zero is default.\n   */\n  create(title: string, message: string, priority = 2) {\n    return Browser.notifications.create({\n      type: 'basic',\n      iconUrl: Browser.runtime.getURL('images/icon-128.png'),\n      title,\n      message,\n      priority,\n    })\n  },\n\n  dispatch(title: string, message: string) {\n    return Browser.runtime.sendMessage({\n      type: NotificationService.eventKey,\n      payload: { title, message },\n    })\n  },\n}\n\nexport { NotificationService }\n","import { logger } from '@src/lib/errorReport'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport Browser from 'webextension-polyfill'\n\nimport { type RequestError } from '@toggl/track-api'\nimport { type TimeEntryV9 } from '@toggl/track-types'\n\n/**\n * Handle carious error that can happen while TE creation / update /deletion\n *\n * 403 - Since these endpoints are called independently from others its possible\n * that user has logged out or cleared cache\n *\n * 404 - there is no way to get rid of a running TE that starts giving 404 due\n * to duplicate calls or other client deleting it which is unlikely due to WSS\n * but possible in case of disconnection\n *\n * This needs to be invoked within SW/Background the error object is missing\n * additional context when it is transmitted to content script\n *\n * @param error - Error object from api call\n * @param timeEntry - Time entry on which op is being performed\n */\nexport async function handleTimeEntryEndpointError(\n  error: RequestError,\n  timeEntry?: TimeEntryV9\n) {\n  try {\n    if (error.response?.status === 401 || error.response?.status === 403) {\n      await Browser.storage.local.clear()\n    } else if (error.response?.status === 404 && timeEntry) {\n      const currentTE = await CurrentTEService.retrieve()\n      if (currentTE?.id === timeEntry.id) {\n        // Performing operation on a TE deleted using other client\n        await CurrentTEService.clear()\n      }\n    }\n  } catch (error) {\n    logger.error(error, 'handleTimeEntryEndpointError')\n  }\n}\n","import { Db } from '@src/lib/db'\nimport { logger } from '@src/lib/errorReport'\nimport { isWebsocketActive } from '@src/lib/fetch-handler'\nimport {\n  ensureSameWorkspace,\n  setProject,\n  updateDefaultProjects,\n} from '@src/lib/projectUtils'\nimport { stopRunningTimeEntry } from '@src/lib/timeEntries'\nimport { config as onboardingConfig } from '@src/onboarding/config'\nimport { PomodoroService } from '@src/pomodoro/PomodoroService'\nimport { handleTimeEntryEndpointError } from '@src/v4/lib/handleTimeEntryEndpointError'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport { type MessageFrom, type MutableTimeEntryV9 } from 'src/typdef'\n\nimport { type TimeEntryRequest, type TimeEntryV9 } from '@toggl/track-types'\n\nimport apiClient from './_api'\n\ntype MutableTimeEntryRequest = {\n  -readonly [K in keyof Omit<\n    TimeEntryRequest,\n    'created_with'\n  >]: TimeEntryRequest[K]\n}\n\nconst create = async (\n  entry: Omit<TimeEntryRequest, 'created_with'>,\n  from?: MessageFrom\n) => {\n  try {\n    const current = isWebsocketActive\n      ? await CurrentTEService.retrieve()\n      : await CurrentTEService.invoke()\n\n    if (current) {\n      await stopRunningTimeEntry(current, null)\n    }\n\n    const te = Object.assign({}, entry) as MutableTimeEntryRequest\n    delete te.stop\n    const { data } = await apiClient.workspaces.timeEntries.create({\n      ...te,\n      created_with: `TrackExtension/${process.env.VERSION}${\n        from?.source ? `-${from.source}` : ''\n      }`,\n    })\n\n    return data\n  } catch (e) {\n    logger.error(e)\n    throw e\n  }\n}\n\nexport const start = async (entry: TimeEntryRequest, from: MessageFrom) => {\n  try {\n    let _entry = (await setProject(entry, from)) as unknown as TimeEntryRequest\n    _entry = (await ensureSameWorkspace(_entry)) as unknown as TimeEntryRequest\n\n    Db.set(onboardingConfig.storage, 'finished')\n\n    const data = await create(_entry, from)\n\n    // Start the pomodoro timer\n    const settings = PomodoroService.getSettings()\n\n    if (settings.isEnabled) {\n      PomodoroService.start(new Date(data.start).getTime())\n    }\n\n    // Update storage with running TE.\n    await CurrentTEService.store(data)\n\n    return data\n  } catch (error) {\n    await handleTimeEntryEndpointError(error)\n    throw error\n  }\n}\n\nexport const update = async (\n  entry: TimeEntryV9,\n  from: MessageFrom,\n  opts = { isManuallyStopped: true }\n) => {\n  try {\n    if (from.type === 'contentScript')\n      updateDefaultProjects(from, entry.project_id)\n    const _entry = await ensureSameWorkspace(entry)\n\n    // TODO: Here there is not constraint management so the TINYBUTTON will not stop the TE.\n\n    delete (_entry as MutableTimeEntryV9).stop\n    const { data } = await apiClient.workspaces.timeEntries.update(_entry)\n\n    const running = data.duration < 0 ? data : null\n    await CurrentTEService.store(running)\n\n    // Start the pomodoro timer\n    const settings = PomodoroService.getSettings()\n\n    // Reset the pomodoro timer if the entry is stopped.\n    if (settings.isEnabled && opts.isManuallyStopped && running === null) {\n      PomodoroService.reset()\n    }\n\n    return data\n  } catch (e) {\n    logger.error(e)\n    await handleTimeEntryEndpointError(e, entry)\n    throw e\n  }\n}\n\nexport const remove = async (timeEntry: TimeEntryV9) => {\n  try {\n    const current = await CurrentTEService.retrieve()\n\n    await apiClient.workspaces.timeEntries.delete(timeEntry.workspace_id, [\n      timeEntry.id,\n    ])\n\n    if (current?.id === timeEntry.id) {\n      PomodoroService.reset()\n    }\n  } catch (e) {\n    logger.error(e)\n    await handleTimeEntryEndpointError(e, timeEntry)\n    throw e\n  }\n}\n","import * as timeEntriesApi from '@src/background/_internal/timeEntry'\nimport { TEConstraintsService } from '@src/v4/services/TEConstraintsService'\nimport { WorkspacesListService } from '@src/v4/services/WorkspacesListService'\nimport { DateTime } from 'luxon'\nimport { defineMessages } from 'react-intl'\n\nimport { type TimeEntryV9 } from '@toggl/track-types'\n\nimport intl from './intl'\n\nconst messages = defineMessages({\n  timeEntryConstraints: {\n    id: 'timeEntries.notifications.timeEntryConstraints',\n    defaultMessage: `To stop the timer, add required {fields} field(s).`,\n  },\n  requiredField: {\n    id: 'timeEntries.notifications.requiredFields',\n    defaultMessage:\n      '{field, select, description {description} tag {tag} project {project} task {task} other {Unknown}}',\n  },\n})\n\n// TODO: This needs attention, also there's the constraint management and the notification.\nexport async function stopRunningTimeEntry(\n  timeEntry: TimeEntryV9,\n  stop: string | null,\n  opts = { isManuallyStopped: true }\n) {\n  const stopTime = stop ? DateTime.fromISO(stop) : DateTime.now()\n  const startTime = DateTime.fromISO(timeEntry.start)\n\n  if (stopTime < startTime) {\n    await timeEntriesApi.remove(timeEntry)\n  }\n\n  const wss = await WorkspacesListService.retrieve()\n\n  let errors: string[] = []\n\n  if (wss && timeEntry.workspace_id in wss) {\n    errors = TEConstraintsService.check(\n      wss[timeEntry.workspace_id].te_constraints ?? null,\n      timeEntry\n    )\n  }\n\n  if (errors.length === 0) {\n    return timeEntriesApi.update(\n      {\n        ...timeEntry,\n        tag_ids: timeEntry.tag_ids ?? [],\n        stop: stopTime.toISO(),\n        duration: Math.floor(stopTime.diff(startTime).as('seconds')),\n      },\n      {\n        type: 'popup',\n      },\n      opts\n    )\n  } else {\n    // TODO: This error will not be bubbled up to the mutation level.\n    // We need to check how this fn is used and how to handle the error.\n    throw new Error(\n      intl.formatMessage(messages.timeEntryConstraints, {\n        fields: intl.formatList(\n          errors.map((field) =>\n            intl.formatMessage(messages.requiredField, { field })\n          )\n        ),\n      })\n    )\n  }\n}\n","import { Db, type StateChangeListener } from '@src/lib/db'\nimport { logger } from '@src/lib/errorReport'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport { NotificationService } from '@src/v4/services/NotificationService'\nimport { DateTime } from 'luxon'\nimport * as Browser from 'webextension-polyfill'\n\nimport { stopRunningTimeEntry } from './timeEntries'\n\nconst handleAlarm = async () => {\n  const current = await CurrentTEService.invoke()\n\n  if (current) {\n    await stopRunningTimeEntry(current, null)\n  }\n}\n\nexport const configureStopAtDayEnd = async (time: string) => {\n  logger.debug('stopTimeAtDayEnd::configureStopAtDayEnd:', time)\n  let stopTime = DateTime.fromISO(time).set({ second: 0 })\n\n  if (stopTime < DateTime.now()) stopTime = stopTime.plus({ days: 1 })\n\n  await Browser.alarms.clear(StopAtDayEndAlarm.name)\n  Browser.alarms.create(StopAtDayEndAlarm.name, {\n    when: stopTime.toMillis(),\n    periodInMinutes: 60 * 24,\n  })\n}\n\nexport const clearStopAtDayEndAlarm = async () => {\n  logger.debug('stopTimeAtDayEnd::clearStopAtDayEndAlarm')\n\n  await Browser.alarms.clear(StopAtDayEndAlarm.name)\n}\n\nexport const StopAtDayEndAlarm = {\n  name: 'STOP_AT_DAY_END',\n\n  handler: async () => {\n    try {\n      await handleAlarm()\n    } catch (error) {\n      logger.error(error)\n      await NotificationService.create('Something went wrong', error.message)\n    }\n  },\n\n  async configure() {\n    const stopAtDayEnd = await Db.get('stopAtDayEnd')\n    const dayEndTime = await Db.get('dayEndTime')\n    if (stopAtDayEnd) await configureStopAtDayEnd(dayEndTime)\n    else await StopAtDayEndAlarm.clear()\n  },\n\n  async clear() {\n    await Browser.alarms.clear(StopAtDayEndAlarm.name)\n  },\n}\n\nexport const onStopAtDayEndStateChangesListener: StateChangeListener = async (\n  changes,\n  areaName\n) => {\n  try {\n    if (areaName === 'sync' && (changes.stopAtDayEnd || changes.dayEndTime)) {\n      await StopAtDayEndAlarm.configure()\n    }\n  } catch (error) {\n    logger.error(error, 'onStopAtDayEndStateChangesListener')\n  }\n}\n","import { type StateChangeListener } from '@src/lib/db'\nimport { logger } from '@src/lib/errorReport'\nimport { stopRunningTimeEntry } from '@src/lib/timeEntries'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\n\nimport { PomodoroService } from './PomodoroService'\n\nexport const onPomodoroV2StateChangesListener: StateChangeListener = async (\n  changes,\n  areaName\n) => {\n  try {\n    if (areaName === 'local' && CurrentTEService.storageKey in changes) {\n      const oldValue = changes[CurrentTEService.storageKey].oldValue\n      const newValue = changes[CurrentTEService.storageKey].newValue\n      const pomodoroState = PomodoroService.getState()\n      // TEs -> Same, Duration -> Different -> Stop the TE and reset the pomodoro.\n      if (oldValue?.id === newValue?.id) {\n        const isDurationDifferent = oldValue?.duration !== newValue?.duration\n\n        if (isDurationDifferent && pomodoroState?.isRunning) {\n          await stopRunningTimeEntry(newValue, newValue.stop)\n        }\n      }\n    }\n\n    if ('Settings.Pomodoro' in changes && areaName === 'sync') {\n      PomodoroService.reset()\n      await PomodoroService.init({ force: true })\n    }\n  } catch (error) {\n    logger.error(error, 'onPomodoroV2StateChangesListener')\n  }\n}\n","import { onIconHandlerStateChangeListener } from '@src/background/icon-handler'\nimport { onWebsocketStateChangesListener } from '@src/background/websocket'\nimport { Db } from '@src/lib/db'\nimport { onRemindersStateChangeListener } from '@src/lib/reminders'\nimport { onStopAtDayEndStateChangesListener } from '@src/lib/stopTimeAtDayEnd'\nimport { onPomodoroV2StateChangesListener } from '@src/pomodoro/listener'\nimport { onWorkspaceListStateChangeListener } from '@src/v4/services/SelectedWorkspaceService'\n\nDb.addStateChangeListener((changes, areaName) => {\n  void onIconHandlerStateChangeListener(changes, areaName)\n  void onRemindersStateChangeListener(changes, areaName)\n  void onWebsocketStateChangesListener(changes, areaName)\n  void onStopAtDayEndStateChangesListener(changes, areaName)\n  void onWorkspaceListStateChangeListener(changes, areaName)\n  void onPomodoroV2StateChangesListener(changes, areaName)\n})\n","import { type DateTimeDuration } from '@internationalized/date'\nimport * as timeEntryService from '@src/background/_internal/timeEntry'\nimport { logger } from '@src/lib/errorReport'\nimport intl from '@src/lib/intl'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport { NotificationService } from '@src/v4/services/NotificationService'\nimport { UsersService } from '@src/v4/services/UsersService'\nimport { DateTime } from 'luxon'\nimport { defineMessages } from 'react-intl'\nimport Browser from 'webextension-polyfill'\n\nimport { type TimeEntryRequest, type TimeEntryV9 } from '@toggl/track-types'\n\nimport { Db } from './db'\nimport { stopRunningTimeEntry } from './timeEntries'\n\nconst messages = defineMessages({\n  idleFor: {\n    id: 'idle.notifications.idleFor',\n    defaultMessage: `You have been idle for {time} while tracking \"{description}\"`,\n  },\n  discardIdleButton: {\n    id: 'idle.notifications.discardIdleButton',\n    defaultMessage: 'Stop timer and discard idle time',\n  },\n  continue: {\n    id: 'idle.notifications.keepIdleButton',\n    defaultMessage: 'Discard idle time and continue',\n  },\n  timeEntryConstraints: {\n    id: 'idle.notifications.timeEntryConstraints',\n    defaultMessage: `To stop the timer, add required {fields} field(s).`,\n  },\n  requiredField: {\n    id: 'idle.notifications.requiredFields',\n    defaultMessage:\n      '{field, select, description {description} tag {tag} project {project} task {task} other {Unknown}}',\n  },\n})\n\ntype LastIdleTimeEntry = {\n  since: string\n  timeEntryId: TimeEntryV9['id']\n  alertTriggered?: boolean\n}\n\nexport const IDLE_NOTIFICATION_ID = 'idle-notification'\n\nexport async function idleListener(state: Browser.Idle.IdleState) {\n  try {\n    logger.debug('idleListener', state, DateTime.now().toISO())\n    const isIdleEnabled = await Db.get('idleDetectionEnabled')\n    const user = await UsersService.retrieve()\n    if (!isIdleEnabled || !user) {\n      return\n    }\n\n    const current = await CurrentTEService.retrieve()\n\n    if (!current) {\n      await Db.setLocal('lastIdleTimeEntry', null)\n      return\n    }\n\n    const lastIdleTimeEntry = await Db.getLocal('lastIdleTimeEntry')\n\n    if (\n      (state === 'idle' || state === 'locked') &&\n      (!lastIdleTimeEntry || lastIdleTimeEntry.alertTriggered)\n    ) {\n      logger.debug(\n        'idleListener',\n        state,\n        DateTime.now().toISO(),\n        'starting idle tracking'\n      )\n      await Db.setLocal('lastIdleTimeEntry', {\n        since: DateTime.now().toISO(),\n        timeEntryId: current.id,\n        alertTriggered: false,\n      })\n    }\n\n    if (state === 'active') {\n      const lastIdleTimeEntry = await Db.getLocal('lastIdleTimeEntry')\n      if (!lastIdleTimeEntry) {\n        return\n      }\n\n      logger.debug(\n        'idleListener',\n        DateTime.now().toISO(),\n        'notificationTriggered'\n      )\n      await Db.setLocal('lastIdleTimeEntry', {\n        since: lastIdleTimeEntry.since,\n        timeEntryId: lastIdleTimeEntry.timeEntryId,\n        alertTriggered: true,\n      })\n      await triggerIdleNotification(current, lastIdleTimeEntry)\n    }\n  } catch (e) {\n    logger.error(e)\n  }\n}\n\nasync function triggerIdleNotification(\n  runningTimeEntry: TimeEntryV9,\n  lastIdleTimeEntry: LastIdleTimeEntry\n) {\n  const idleFor: DateTimeDuration = DateTime.now()\n    .diff(DateTime.fromISO(lastIdleTimeEntry.since), ['minutes', 'seconds'])\n    .toObject()\n  const minutes = Math.floor(idleFor.minutes || 0)\n  const seconds = Math.ceil(idleFor.seconds || 0)\n  await Browser.notifications.create(IDLE_NOTIFICATION_ID, {\n    type: 'basic',\n    iconUrl: 'images/icon-128.png',\n    title: 'Toggl Track',\n    message: intl.formatMessage(messages.idleFor, {\n      time:\n        minutes > 0\n          ? `${minutes} minutes and ${seconds} seconds`\n          : `${seconds}s`,\n      description: runningTimeEntry.description || 'No Description',\n    }),\n    priority: 2,\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: webextension-polyfill is outdated\n    buttons: runningTimeEntry\n      ? [\n          {\n            title: intl.formatMessage(messages.discardIdleButton),\n          },\n          {\n            title: intl.formatMessage(messages.continue),\n          },\n        ]\n      : [],\n  })\n}\n\nexport async function idleNotificationClickHandler(\n  _: string,\n  buttonIndex: number\n) {\n  try {\n    await Browser.notifications.clear(IDLE_NOTIFICATION_ID)\n    const shouldContinue = buttonIndex === 1\n    const runningTimeEntry = await CurrentTEService.retrieve()\n\n    const lastIdleTimeEntry = await Db.getLocal('lastIdleTimeEntry')\n\n    if (runningTimeEntry && lastIdleTimeEntry) {\n      await stopRunningTimeEntry(runningTimeEntry, lastIdleTimeEntry.since)\n      if (shouldContinue) {\n        const start = new Date()\n        const entry = {\n          at: start.toISOString(),\n          billable: runningTimeEntry.billable,\n          description: runningTimeEntry.description,\n          duration: -parseInt((start.getTime() / 1000).toFixed(0), 10),\n          start: start.toISOString(),\n          tags: runningTimeEntry.tags ?? [],\n          tag_ids: runningTimeEntry.tag_ids ?? [],\n          task_id: runningTimeEntry.task_id,\n          project_id: runningTimeEntry.project_id,\n          workspace_id: runningTimeEntry.workspace_id,\n        } as unknown as TimeEntryRequest\n\n        await timeEntryService.start(entry, { type: 'contentScript' })\n      }\n    }\n  } catch (error) {\n    logger.error(error, 'Error processing idleNotificationClickHandler')\n    await NotificationService.create('Something went wrong', error.message)\n  }\n}\n\nexport async function configureIdleDetector() {\n  logger.debug('Idle::configureIdleDetector')\n  const idleInterval = await Db.get('idleInterval')\n  Browser.idle.setDetectionInterval(Number(idleInterval))\n}\n\nBrowser.storage.onChanged.addListener(async (changes, areaName) => {\n  if (areaName === 'sync' && 'idleInterval' in changes) {\n    await configureIdleDetector()\n  }\n})\n","import {\n  IDLE_NOTIFICATION_ID,\n  idleNotificationClickHandler,\n} from '@src/lib/idle'\nimport {\n  REMINDER_NOTIFICATION_ID,\n  handleNotificationButtonClick,\n} from '@src/lib/reminders'\nimport Browser from 'webextension-polyfill'\n\n// a top level notification button handler to ensure we don't leak notification button handlers\n// by forgetting to clear them\n\nBrowser.notifications.onButtonClicked.addListener(\n  (notificationId, buttonIndex) => {\n    if (notificationId === IDLE_NOTIFICATION_ID) {\n      void idleNotificationClickHandler(notificationId, buttonIndex)\n    } else if (notificationId === REMINDER_NOTIFICATION_ID) {\n      void handleNotificationButtonClick()\n    }\n  }\n)\n","import * as Browser from 'webextension-polyfill'\n\nlet workerProxyToken\n/**\n * Get the session token used to authenticate messages between the content\n * script and worker proxy page. This value will change whenever the\n * background/event page unloads.\n */\nfunction getProxyWorkerChannelToken() {\n  if (!workerProxyToken) {\n    const buffer = new Uint8Array(100)\n    crypto.getRandomValues(buffer)\n    let randomToken = ''\n    for (let i = 0; i < buffer.length; ++i) {\n      randomToken += buffer[i].toString(36)\n    }\n    workerProxyToken = randomToken\n  }\n  return workerProxyToken\n}\n\nBrowser.runtime.onMessage.addListener((message: string) => {\n  if (typeof message === 'string' && message.includes('worker_proxy')) {\n    return Promise.resolve(getProxyWorkerChannelToken())\n  }\n})\n","import { logger } from '@src/lib/errorReport'\nimport Browser from 'webextension-polyfill'\n\nimport { PomodoroService } from './PomodoroService'\n\ntype Audio = { src: string; volume: number; audioLength: number }\n\nconst closePopups = async () => {\n  try {\n    const popups = await Browser.windows.getAll({ windowTypes: ['popup'] })\n    await Promise.all(\n      popups.map(\n        async (popup) => popup.id && (await Browser.windows.remove(popup.id))\n      )\n    )\n  } catch (error) {\n    logger.error(error, 'sounds.ts - closePopups')\n  }\n}\n\nconst playSoundFallback = (audio: Audio) => {\n  let url = chrome.runtime.getURL('src/content/audio/index.html')\n\n  url += `?volume=${audio.volume}&src=${audio.src}&length=${audio.audioLength}`\n\n  void Browser.windows.create({\n    type: 'popup',\n    focused: false,\n    top: 0,\n    left: 0,\n    width: 1,\n    height: 1,\n    url,\n  })\n}\n\nconst playSoundOffscreen = async (args: Audio) => {\n  try {\n    if (!chrome.offscreen) {\n      playSoundFallback({\n        src: args.src,\n        volume: args.volume,\n        audioLength: args.audioLength,\n      })\n      return\n    }\n\n    if (!(await chrome.offscreen.hasDocument())) {\n      await chrome.offscreen.createDocument({\n        url: 'src/content/offscreen/index.html',\n        reasons: ['AUDIO_PLAYBACK' as chrome.offscreen.Reason],\n        justification: 'Play pomodoro alerts',\n      })\n    }\n\n    await Browser.runtime.sendMessage({\n      type: 'OFFSCREEN_PLAY_POMODORO_SOUND',\n      payload: {\n        src: args.src,\n        volume: args.volume,\n        audioLength: args.audioLength,\n      },\n    })\n  } catch (error) {\n    logger.error(error, 'playSoundV2')\n  }\n}\n\nexport const playPomodoroAlert = async () => {\n  const setting = await PomodoroService.getStoredSettings()\n  if (!setting.isAlarmEnabled) {\n    return\n  }\n  await playSoundOffscreen({\n    src: Browser.runtime.getURL('sounds/time_is_up_1.mp3'),\n    audioLength: 2000,\n    volume: setting.alarmVolumePercent,\n  })\n}\n\nexport const startTicking = async (playbackSeconds: number) => {\n  const setting = await PomodoroService.getStoredSettings()\n  if (!setting.isTickingEnabled) {\n    return\n  }\n  await playSoundOffscreen({\n    src: Browser.runtime.getURL('sounds/tick-tock.mp3'),\n    audioLength: playbackSeconds * 1000,\n    volume: setting.alarmVolumePercent,\n  })\n}\n\nexport const stopTicking = async () => {\n  if (chrome.offscreen) {\n    return Browser.runtime.sendMessage({\n      type: 'OFFSCREEN_PLAY_POMODORO_SOUND_STOP',\n    })\n  }\n  await closePopups()\n}\n","import { logger } from '@src/lib/errorReport'\nimport { stopRunningTimeEntry } from '@src/lib/timeEntries'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport { NotificationService } from '@src/v4/services/NotificationService'\nimport { DateTime } from 'luxon'\nimport Browser from 'webextension-polyfill'\n\nimport { PomodoroService, type PomodoroState } from './PomodoroService'\nimport { playPomodoroAlert, startTicking, stopTicking } from './sounds'\nimport { getRemainingSessionTime } from './utils/getRemainingSessionTime'\n\n/**\n * Pomodoro Service\n *\n * This code is responsible for handling the Pomodoro state and settings.\n */\n\nBrowser.runtime.onConnect.addListener((channel) => {\n  if (channel.name === 'POPUP') {\n    // Listen for messages from the popup\n    channel.onMessage.addListener((message) => {\n      if (message.type === 'Pomodoro.start') {\n        PomodoroService.start()\n      }\n\n      if (message.type === 'Pomodoro.goToNextState') {\n        PomodoroService.goToNextState()\n      }\n    })\n\n    // Listen for disconnect\n    channel.onDisconnect.addListener(() => {\n      logger.debug('POPUP channel disconnected.')\n    })\n  }\n})\n\n// Init settings\nPomodoroService.init()\n\n// Listen to events\nPomodoroService.on('clock:init', (state: PomodoroState) => {\n  Browser.alarms.clear('Pomodoro.Alarm')\n\n  try {\n    if (state.isRunning) {\n      const calcRemainingTime = getRemainingSessionTime(\n        state.isRunning,\n        state.duration\n      )\n\n      Browser.alarms.create('Pomodoro.Alarm', {\n        when: Date.now() + calcRemainingTime * 1000,\n      })\n      if (!state.isBreak && !state.isLargeBreak)\n        void startTicking(calcRemainingTime)\n    }\n  } catch (error) {\n    logger.error(error)\n  }\n})\n\nPomodoroService.on('clock:start', (state: PomodoroState) => {\n  try {\n    if (state.isRunning) {\n      const calcRemainingTime = getRemainingSessionTime(\n        state.isRunning,\n        state.duration\n      )\n\n      Browser.alarms.create('Pomodoro.Alarm', {\n        when: Date.now() + calcRemainingTime * 1000,\n      })\n      if (!state.isBreak && !state.isLargeBreak)\n        void startTicking(calcRemainingTime)\n    }\n  } catch (error) {\n    logger.error(error)\n  }\n})\n\nPomodoroService.on('clock:reset', () => {\n  Browser.alarms.clear('Pomodoro.Alarm')\n  void stopTicking()\n})\n\nPomodoroService.on('state:change', async (state: PomodoroState) => {\n  try {\n    const settings = PomodoroService.getSettings()\n\n    // Store the current state\n    await Browser.storage.local.set({ 'Pomodoro.State': state })\n\n    if (state.computed.isIdle && state.session > 1) {\n      await NotificationService.create(\n        'Back to Work!',\n        `Let's dive into another focused session.`\n      )\n    }\n\n    if (state.isBreak && !state.isRunning) {\n      await NotificationService.create(\n        'Take a Break!',\n        `Time to rest and recharge for a bit.`\n      )\n    }\n\n    if (state.isLargeBreak) {\n      await NotificationService.create(\n        'Long Break Time!',\n        `Relax for ${\n          settings.longBreakDuration / 60\n        } minutes. You've earned it!`\n      )\n    }\n\n    if (state.isBreak || state.isLargeBreak) {\n      const current = await CurrentTEService.retrieve()\n\n      if (current) {\n        await stopRunningTimeEntry(\n          current,\n          DateTime.fromISO(current.start)\n            .plus({ seconds: settings.focusDuration })\n            .toISO(),\n          {\n            isManuallyStopped: false,\n          }\n        )\n      }\n    }\n\n    if (\n      state.computed.isIdleBreak ||\n      (state.computed.isIdle && state.session > 1)\n    ) {\n      await playPomodoroAlert()\n    }\n  } catch (error) {\n    logger.error(error)\n  }\n})\n","import { logger } from '@src/lib/errorReport'\nimport Browser from 'webextension-polyfill'\n\ninterface HeapApiConfig {\n  baseUrl: string\n  defaultAppId: string\n}\n\nexport interface HeapEvent {\n  identity: string\n  event: string\n  timestamp?: string\n  properties: Record<string, string | number | boolean | null>\n}\n\nclass HeapAnalyticsClient {\n  private config: HeapApiConfig\n\n  constructor(config: HeapApiConfig) {\n    this.config = config\n  }\n\n  private async sendRequest(endpoint: string, data: unknown) {\n    const url = `${this.config.baseUrl}${endpoint}`\n\n    logger.debug('Sending HEAP Request', url)\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n\n      logger.debug('HEAP Request Sent, status:', response.status)\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      return response.text()\n    } catch (error) {\n      logger.debug('Failed to send HEAP Request', error.message)\n    }\n\n    return Promise.reject(new Error('Failed to send HEAP Request'))\n  }\n\n  track(event: HeapEvent) {\n    return this.sendRequest('/track', {\n      app_id: this.config.defaultAppId,\n      identity: event.identity,\n      event: event.event,\n      timestamp: event.timestamp ?? new Date().toISOString(),\n      properties: event.properties,\n    })\n  }\n\n  dispatch(event: HeapEvent) {\n    return Browser.runtime.sendMessage({\n      type: 'HEAP_EVENT_TRACK',\n      payload: event,\n    })\n  }\n}\n\nexport const heapClient = new HeapAnalyticsClient({\n  baseUrl: 'https://heapanalytics.com/api',\n  defaultAppId: process.env.HEAP_APP_ID ?? '',\n})\n","export function compareSemver(v1: string, v2: string) {\n  const [major1, minor1, patch1] = v1.split('.').map(Number)\n  const [major2, minor2, patch2] = v2.split('.').map(Number)\n\n  if (major1 > major2) return 1\n  if (major1 < major2) return -1\n\n  if (minor1 > minor2) return 1\n  if (minor1 < minor2) return -1\n\n  if (patch1 > patch2) return 1\n  if (patch1 < patch2) return -1\n\n  return 0\n}\n","import { PomodoroService } from '@src/pomodoro/PomodoroService'\nimport Browser from 'webextension-polyfill'\n\nexport const V1PomodoroMigration = {\n  version: '4.1.0',\n  name: 'Pomodoro v4 settings migration',\n  run: async function runMigration() {\n    const { pomodoroModeEnabled } = await Browser.storage.sync.get(\n      'pomodoroModeEnabled'\n    )\n    const { pomodoroSoundEnabled } = await Browser.storage.sync.get(\n      'pomodoroSoundEnabled'\n    )\n    const { pomodoroSoundVolume } = await Browser.storage.sync.get(\n      'pomodoroSoundVolume'\n    )\n    const { pomodoroInterval } = await Browser.storage.sync.get(\n      'pomodoroInterval'\n    )\n\n    if (!pomodoroModeEnabled) return\n\n    await PomodoroService.fillSettings()\n    const settings = PomodoroService.getSettings()\n    await PomodoroService.setStoredSettings({\n      ...settings,\n      isEnabled: pomodoroModeEnabled,\n      focusDuration: pomodoroInterval * 60,\n      isAlarmEnabled: pomodoroSoundEnabled,\n      alarmVolumePercent: pomodoroSoundVolume,\n    })\n  },\n}\n","import { logger } from '@src/lib/errorReport'\nimport { compareSemver } from '@src/v4/lib/semver'\nimport { V1PomodoroMigration } from '@src/v4/migrations/1_pomodoro_settings'\nimport Browser from 'webextension-polyfill'\n\nconst migrations = [V1PomodoroMigration]\n\nexport async function runMigration(\n  details: Browser.Runtime.OnInstalledDetailsType\n) {\n  try {\n    logger.info(\n      `Updated from ${details.previousVersion} to ${process.env.VERSION}.`\n    )\n\n    const version = process.env.VERSION ?? Browser.runtime.getManifest().version\n    const migrationVersion = await getMigrationLastRunVersion()\n    // No need to migrate if migration already ran for it\n    if (compareSemver(migrationVersion, version) >= 0) {\n      return\n    }\n\n    for (const migration of migrations) {\n      // Run migration if migration script's version is greater than or equal to current version\n      if (compareSemver(migration.version, version) >= 0) {\n        logger.info(`Running migration: ${migration.name}`)\n        await migration.run()\n      }\n    }\n    await setMigrationLastRunVersion(version)\n  } catch (error) {\n    logger.error(error, 'runMigration')\n  }\n}\n\nasync function getMigrationLastRunVersion() {\n  const { migrationVersion } = await Browser.storage.sync.get(\n    'migrationVersion'\n  )\n  return migrationVersion ?? '0.0.0'\n}\n\nasync function setMigrationLastRunVersion(version: string) {\n  await Browser.storage.sync.set({\n    migrationVersion: version,\n  })\n}\n","import { Db } from '@src/lib/db'\nimport { logger } from '@src/lib/errorReport'\nimport { extractHostname, extractRootDomain } from '@src/lib/utils'\nimport * as Browser from 'webextension-polyfill'\n\nimport storedOrigins from '@toggl/track-extension'\n\nconst configureLogin = (tabId: number) => {\n  Browser.scripting.executeScript({\n    target: { tabId },\n    files: ['./login.js'],\n  })\n}\n\nconst startIntegration = async (tabId: number, filename: string) => {\n  // TODO: redux refactor => really needed?\n  // await loadResources();\n  logger.debug('adding content scripts')\n\n  await Browser.scripting\n    .insertCSS({\n      target: { tabId },\n      files: ['src/content/style.css'],\n    })\n    .catch((e) => logger.error(e))\n\n  await Browser.scripting\n    .executeScript({\n      target: { tabId },\n      files: ['src/content/index.js'],\n    })\n    .catch((e) => logger.error(e))\n\n  Browser.scripting\n    .executeScript({\n      target: { tabId },\n      files: [`src/content/${filename}`],\n    })\n    .catch((e) => logger.error(e))\n}\n\nexport const configure = async (tabId, tab) => {\n  if (tab.url === undefined) return\n  try {\n    const response = await Browser.tabs.sendMessage(tabId, { type: 'ping' })\n    if (response.type === 'pong') return\n  } catch (e) {\n    logger.debug(e)\n  }\n\n  const rootDomain = extractRootDomain(tab.url!)\n  // Host name check doesnt depend on integration origins\n  const hostName = extractHostname(tab.url)\n  if (hostName.includes('toggl.com') || hostName.includes('toggl.space')) {\n    return configureLogin(tabId)\n  }\n\n  const integrations = await Db.get('integrations')\n  const customIntegrations = await Db.get('customIntegrations')\n  const customScripts = await Db.get('customScripts')\n  const extractedHostname = extractHostname(tab.url!)\n  if (\n    (!integrations || !integrations[rootDomain]) &&\n    !customIntegrations?.[extractedHostname] &&\n    !customScripts?.[extractedHostname]\n  )\n    return\n\n  // Probably this is no more useful as the storage is now reactive to instant changes, leaving a comment for now as a reminder i will remove it later.\n  // await userBackgroundService.fetch().catch(e => logger.error(e));\n\n  const integrationObj = storedOrigins[rootDomain]\n\n  if (integrationObj) {\n    const filename =\n      integrationObj?.file ??\n      `${integrationObj.name.toLocaleLowerCase().replace(' ', '-')}.js`\n\n    if (integrations && integrations[rootDomain]) {\n      startIntegration(tabId, filename)\n    }\n  } else if (\n    customIntegrations?.[extractedHostname]?.name ||\n    customIntegrations?.[extractedHostname]?.file\n  ) {\n    const filename =\n      customIntegrations?.[extractedHostname]?.file ??\n      `${customIntegrations[extractedHostname].name\n        .toLocaleLowerCase()\n        .replace(' ', '-')}.js`\n\n    if (filename) startIntegration(tabId, filename)\n  }\n  if (customScripts?.[extractedHostname]) {\n    const hostname = extractedHostname\n    const filename =\n      customScripts?.[hostname]?.file ??\n      `${customScripts[hostname].name.toLocaleLowerCase().replace(' ', '-')}.js`\n    if (filename) startIntegration(tabId, filename)\n  }\n}\n","import { Db } from '@src/lib/db'\nimport { logger } from '@src/lib/errorReport'\nimport intl from '@src/lib/intl'\nimport { extractHostname } from '@src/lib/utils'\nimport { NotificationService } from '@src/v4/services/NotificationService'\nimport { SelectedWorkspaceService } from '@src/v4/services/SelectedWorkspaceService'\nimport { DateTime } from 'luxon'\nimport { defineMessages } from 'react-intl'\nimport * as Browser from 'webextension-polyfill'\n\nimport { type TimeEntryRequest } from '@toggl/track-types'\n\nimport * as timeEntryBackgroundService from './_internal/timeEntry'\n\nconst messages = defineMessages({\n  startTimerWithDescription: {\n    id: 'contextMenu.startTimerWithDescription',\n    defaultMessage: 'Start timer with description',\n  },\n  startTimer: {\n    id: 'contextMenu.startTimer',\n    defaultMessage: 'Start timer',\n  },\n  disableTinyButton: {\n    id: 'contextMenu.disableTinyButton',\n    defaultMessage: 'Disable tiny button on this page',\n  },\n  enableTinyButton: {\n    id: 'contextMenu.enableTinyButton',\n    defaultMessage: 'Re-enable tiny button on this page',\n  },\n})\n\nconst handleButtonClicked = async (\n  info: Browser.Menus.OnClickData,\n  tab: Browser.Tabs.Tab\n) => {\n  try {\n    if (\n      info.menuItemId === 'TrackExtension' ||\n      info.menuItemId === 'TrackExtensionSelection'\n    ) {\n      await startTimer(info, tab)\n    } else {\n      await toggleTinyButton(info, tab)\n    }\n  } catch (error) {\n    logger.error(error)\n    await NotificationService.create('Something went wrong', error.message)\n  }\n}\n\nconst toggleTinyButton = async (\n  info: Browser.Menus.OnClickData,\n  tab: Browser.Tabs.Tab\n) => {\n  const tinyButtonBlocklist = await Db.get('tinyButtonBlocklist')\n\n  const hostname = extractHostname(tab.url!)\n\n  const isNewStateDisabled = !tinyButtonBlocklist.includes(hostname)\n  !isNewStateDisabled\n    ? await Db.set(\n        'tinyButtonBlocklist',\n        tinyButtonBlocklist.filter((item) => item !== hostname)\n      )\n    : await Db.set('tinyButtonBlocklist', [...tinyButtonBlocklist, hostname])\n  await Browser.tabs.sendMessage(tab.id!, {\n    type: isNewStateDisabled ? 'hide-tiny-button' : 'show-tiny-button',\n  })\n\n  await Browser.contextMenus.update('TrackExtensionDisableTinyButton', {\n    title: isNewStateDisabled\n      ? intl.formatMessage(messages.enableTinyButton)\n      : intl.formatMessage(messages.disableTinyButton),\n  })\n}\n\nconst startTimer = async (info: Browser.Menus.OnClickData, tab) => {\n  const start = DateTime.now()\n  const description = info?.selectionText || tab.title\n\n  const entry = {\n    at: start.toISO(),\n    billable: false,\n    description,\n    duration: -parseInt((start.toMillis() / 1000).toFixed(0), 10),\n    start: start.toISO(),\n    tags: [],\n    tag_ids: [],\n    workspace_id: (await SelectedWorkspaceService.retrieve()) as number,\n  } as unknown as TimeEntryRequest\n\n  await timeEntryBackgroundService.start(entry, { type: 'contentScript' })\n}\n\nexport const configure = async (tab: Browser.Tabs.Tab) => {\n  const showButton = await Db.get('showRightClickButton')\n  const tinyButtonBlocklist = await Db.get('tinyButtonBlocklist')\n  const isTinyButtonDisabled = (tinyButtonBlocklist ?? []).includes(\n    extractHostname(tab.url || '')\n  )\n\n  try {\n    await Browser.contextMenus.remove('TrackExtension')\n  } catch {\n    // ignore\n  }\n\n  try {\n    await Browser.contextMenus.remove('TrackExtensionSelection')\n  } catch {\n    // ignore\n  }\n\n  try {\n    await Browser.contextMenus.remove('TrackExtensionDisableTinyButton')\n  } catch {\n    // ignore\n  }\n\n  if (showButton) {\n    Browser.contextMenus.create({\n      id: 'TrackExtension',\n      title: intl.formatMessage(messages.startTimer),\n      contexts: ['page'],\n    })\n\n    Browser.contextMenus.create({\n      id: 'TrackExtensionSelection',\n      title: intl.formatMessage(messages.startTimerWithDescription) + \" '%s'\",\n      contexts: ['selection'],\n    })\n  }\n  const tinyButtonEnabled = await Db.get('enableTinyButton')\n  if (tinyButtonEnabled) {\n    Browser.contextMenus.create({\n      id: 'TrackExtensionDisableTinyButton',\n      title: isTinyButtonDisabled\n        ? intl.formatMessage(messages.enableTinyButton)\n        : intl.formatMessage(messages.disableTinyButton),\n      contexts: ['page'],\n    })\n  }\n\n  Browser.contextMenus.onClicked.removeListener(handleButtonClicked)\n  Browser.contextMenus.onClicked.addListener(handleButtonClicked)\n}\n","import { logger } from '@src/lib/errorReport'\nimport Browser from 'webextension-polyfill'\n\nexport const configure = async (tabId, tab) => {\n  if (tab.url === undefined) return\n\n  try {\n    const response = await Browser.tabs.sendMessage(tabId, {\n      type: 'ping-tiny-button',\n    })\n    if (response.type === 'pong-tiny-button') return\n  } catch (e) {\n    logger.debug(e)\n  }\n\n  Browser.scripting\n    .executeScript({\n      target: { tabId },\n      files: ['src/tinyButton.js'],\n    })\n    .catch((e) => logger.error(e))\n}\n","import { Db } from '@src/lib/db'\nimport { logger } from '@src/lib/errorReport'\nimport { stopRunningTimeEntry } from '@src/lib/timeEntries'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport { NotificationService } from '@src/v4/services/NotificationService'\nimport { TEListService } from '@src/v4/services/TEListService'\nimport { DateTime } from 'luxon'\nimport { type MessageFrom } from 'src/typdef'\nimport * as Browser from 'webextension-polyfill'\n\nimport { type TimeEntryRequest } from '@toggl/track-types'\n\nimport * as timeEntryBackgroundService from './_internal/timeEntry'\n\nconst from: MessageFrom = { type: 'popup' }\n\nexport const configure = () => {\n  Browser.windows.onRemoved.addListener(async function () {\n    try {\n      const stopAutomatically = await Db.get('stopAutomatically')\n      if (!stopAutomatically) return\n\n      const windows = await Browser.windows.getAll()\n      if (windows.length <= 0) {\n        const current = await CurrentTEService.retrieve()\n\n        if (current) {\n          await stopRunningTimeEntry(current, null)\n        }\n      }\n    } catch (error) {\n      logger.error(error)\n      await NotificationService.create(\n        'Error stopping time entry',\n        error.message\n      )\n    }\n  })\n\n  Browser.windows.onCreated.addListener(async () => {\n    try {\n      const windows = await Browser.windows.getAll()\n\n      if (windows.length > 1) {\n        return false\n      }\n\n      if (!(await Db.get('startAutomatically'))) {\n        return false\n      }\n\n      const TEs = await TEListService.invoke({\n        store: true,\n      })\n\n      const TEsList = Object.values(TEs)\n      const lastTE = TEsList.pop()\n\n      if (!lastTE || lastTE.duration < 0) return\n\n      const start = DateTime.now()\n\n      await timeEntryBackgroundService.start(\n        {\n          ...lastTE,\n          start,\n          duration: -parseInt((start.toMillis() / 1000).toFixed(0), 10),\n          stop: undefined,\n          tag_ids: lastTE.tag_ids ?? [],\n        } as unknown as TimeEntryRequest,\n        from\n      )\n    } catch (error) {\n      logger.error(error)\n      await NotificationService.create('Something went wrong', error.message)\n    }\n  })\n}\n","import './icon-handler'\nimport './storage-changes-handler'\nimport './notification-actions-handler'\nimport '../workerProxyBackground'\nimport '../pomodoro/worker'\n\nimport * as Sentry from '@sentry/browser'\nimport { Db } from '@src/lib/db'\nimport { initSentry, logger } from '@src/lib/errorReport'\nimport { configureIdleDetector } from '@src/lib/idle'\nimport { configurePeriodicReminder } from '@src/lib/reminders'\nimport { StopAtDayEndAlarm } from '@src/lib/stopTimeAtDayEnd'\nimport { stopRunningTimeEntry } from '@src/lib/timeEntries'\nimport { isFirefox } from '@src/lib/utils'\nimport { config as onboardingConfig } from '@src/onboarding/config'\nimport { heapClient } from '@src/shared/services/HeapAnalyticsClient'\nimport { runMigration } from '@src/v4/migrations'\nimport { ClientsListService } from '@src/v4/services/ClientsListService'\nimport { CurrentTEService } from '@src/v4/services/CurrentTEService'\nimport { NotificationService } from '@src/v4/services/NotificationService'\nimport { OrganizationsListService } from '@src/v4/services/OrganizationsListService'\nimport { OrgFeaturesService } from '@src/v4/services/OrgFeaturesService'\nimport { ProjectsCreateService } from '@src/v4/services/ProjectsCreateService'\nimport { ProjectsListService } from '@src/v4/services/ProjectsListService'\nimport { SelectedWorkspaceService } from '@src/v4/services/SelectedWorkspaceService'\nimport { TagsCreateService } from '@src/v4/services/TagsCreateService'\nimport { TagsListService } from '@src/v4/services/TagsListService'\nimport { TasksListService } from '@src/v4/services/TasksListService'\nimport { TEListService } from '@src/v4/services/TEListService'\nimport { UsersService } from '@src/v4/services/UsersService'\nimport { UserUpdateService } from '@src/v4/services/UserUpdateService'\nimport { WorkspacesListService } from '@src/v4/services/WorkspacesListService'\nimport { WSPreferencesService } from '@src/v4/services/WSPreferencesService'\nimport * as Browser from 'webextension-polyfill'\n\nimport TogglOrigins from '@toggl/track-extension'\nimport { type TimeEntryRequest } from '@toggl/track-types'\n\nimport { type SWMessage } from '../types'\n\nimport * as timeEntryBackgroundService from './_internal/timeEntry'\nimport * as contentScript from './contentScript'\nimport * as contextMenu from './contextMenu'\nimport * as tinyButton from './tinyButton'\nimport * as windowEvents from './windowEvents'\n\nwindowEvents.configure()\nvoid StopAtDayEndAlarm.configure()\nvoid configureIdleDetector()\nvoid configurePeriodicReminder()\n\nBrowser.permissions.onAdded.addListener((permissions) => {\n  if (permissions.origins?.includes('<all_urls>')) {\n    void Db.set(\n      'integrations',\n      Object.keys(TogglOrigins).reduce((acc, key) => {\n        acc[key] = true\n        return acc\n      }, {})\n    ).then(() => {\n      void Db.set(onboardingConfig.storage, 'all_enabled')\n    })\n  }\n})\n\nBrowser.tabs.onUpdated.addListener(\n  async (\n    tabId: number,\n    changeInfo: Browser.Tabs.OnUpdatedChangeInfoType,\n    tab: Browser.Tabs.Tab\n  ) => {\n    const tinyButtonEnabled = await Db.get('enableTinyButton')\n\n    if (changeInfo.status === 'complete') {\n      // This bug is only in chromium\n      if (!isFirefox()) {\n        await Browser.scripting\n          .executeScript({\n            target: { tabId },\n            files: ['worker_proxy.js'],\n          })\n          .catch((e) => logger.error(e))\n      }\n      contextMenu.configure(tab)\n      contentScript.configure(tabId, tab)\n\n      if (tinyButtonEnabled) {\n        tinyButton.configure(tabId, tab)\n      }\n    }\n  }\n)\n\nBrowser.runtime.onInstalled.addListener(async (details) => {\n  logger.debug('SW::onInstalled')\n\n  if (details.reason === 'install') {\n    if (isFirefox()) {\n      await Browser.tabs.create({\n        url: Browser.runtime.getURL('src/pages/dataConsent/index.html'),\n      })\n    } else {\n      await Browser.tabs.create({\n        url: Browser.runtime.getURL('src/pages/postInstallLP/index.html'),\n      })\n    }\n  }\n\n  if (details.reason === 'update') {\n    const needsToShowCL = await Db.get('showChangelog')\n\n    // On the first update needsToShowCL will be undefined\n    if (needsToShowCL || needsToShowCL === undefined) {\n      await Browser.tabs.create({\n        url: Browser.runtime.getURL('settings.html#/whats-new'),\n      })\n    }\n  }\n  await runMigration(details)\n})\n\nBrowser.commands.onCommand.addListener(async (command) => {\n  await initSentry()\n\n  // TODO: Investigate on this, why do we need to wrap this in Sentry when we can just catch the error?\n  Sentry.wrap(function () {\n    if (command === 'quick-start-stop-entry')\n      TEListService.retrieve()\n        .then(async (entries) => {\n          const entriesList = Object.values(entries ?? {}).sort((a, b) => {\n            // Most recent entries first.\n            if (a.start > b.start) return -1\n            if (b.start > a.start) return 1\n            return 0\n          })\n\n          if (entriesList[0]?.duration < 0) {\n            await stopRunningTimeEntry(entriesList[0], null)\n          } else {\n            const start = new Date()\n            const latestEntry = entriesList[0]\n\n            const entry = {\n              at: start.toISOString(),\n              billable: false,\n              description: latestEntry.description,\n              duration: -parseInt((start.getTime() / 1000).toFixed(0), 10),\n              start: start.toISOString(),\n              tags: latestEntry.tags ?? [],\n              tag_ids: latestEntry.tag_ids ?? [],\n              project_id: latestEntry.project_id,\n              workspace_id: latestEntry.workspace_id,\n            } as unknown as TimeEntryRequest\n\n            await timeEntryBackgroundService.start(entry, {\n              type: 'contentScript',\n            })\n          }\n        })\n        .catch((error) => {\n          logger.debug(error)\n          NotificationService.create('Error', error.message)\n        })\n  })\n})\n\n// TODO: Same logic as full-fetch alarm, uniform this.\nexport const loadResources = async (forwardError = false) => {\n  try {\n    // No user? Throw an error.\n    await UsersService.invoke({ store: true })\n\n    return Promise.all([\n      CurrentTEService.invoke({ store: true }),\n      TagsListService.invoke(null),\n      TasksListService.invoke(null),\n      ClientsListService.invoke(null),\n      ProjectsListService.invoke(null),\n      WorkspacesListService.invoke(null),\n      OrgFeaturesService.invoke(),\n\n      // This one needs to be invoked with a workspace ID\n      WSPreferencesService.invoke(\n        (await SelectedWorkspaceService.retrieve()) ?? 0,\n        {\n          store: true,\n        }\n      ),\n    ])\n  } catch (error) {\n    logger.debug(error) // TODO: Does this needs to go to Sentry as well? @with-shrey @askides\n    if (forwardError) {\n      throw error\n    }\n  }\n}\n\nconst clearData = async () => {\n  await Browser.storage.local.clear()\n}\n\nconst isExtensionRunningInStaging =\n  process.env.TOGGL_ACCOUNTS_HOST?.includes('toggl.space') ?? false\n\nconst verifyUser = async (userId: number, isStaging?: boolean) => {\n  if (isStaging && !isExtensionRunningInStaging) {\n    return\n  }\n  const user = await UsersService.retrieve()\n\n  if (user?.id !== userId) {\n    await clearData()\n    await loadResources()\n  }\n}\n\nBrowser.runtime.onMessage.addListener(async (message: SWMessage) => {\n  await initSentry()\n\n  // Log the message for debugging purposes.\n  logger.debug(`SW::onMessage -> at: ${Date.now()}`, message)\n\n  switch (typeof message === 'object' ? message.type : '') {\n    case UsersService.eventKey: {\n      return UsersService.invoke({ store: true })\n    }\n    case UserUpdateService.eventKey: {\n      return UserUpdateService.invoke(message.payload)\n    }\n    case CurrentTEService.eventKey: {\n      return CurrentTEService.invoke({ store: true })\n    }\n    case TEListService.eventKey: {\n      return TEListService.invoke({ store: true })\n    }\n    case TagsListService.eventKey: {\n      return TagsListService.invoke(await TagsListService.since())\n    }\n    case TasksListService.eventKey: {\n      return TasksListService.invoke(await TasksListService.since())\n    }\n    case ClientsListService.eventKey: {\n      return ClientsListService.invoke(await ClientsListService.since())\n    }\n    case ProjectsListService.eventKey: {\n      return ProjectsListService.invoke(await ProjectsListService.since())\n    }\n    case WorkspacesListService.eventKey: {\n      return WorkspacesListService.invoke(await WorkspacesListService.since())\n    }\n    case OrgFeaturesService.eventKey: {\n      return OrgFeaturesService.invoke()\n    }\n    case OrganizationsListService.eventKey: {\n      return OrganizationsListService.invoke()\n    }\n\n    case ProjectsCreateService.eventKey: {\n      return ProjectsCreateService.invoke(\n        message.payload.data,\n        message.payload.workspaceId\n      )\n    }\n    case 'CREATE_TAG_V4': {\n      return TagsCreateService.create(\n        message.payload.name,\n        message.payload.workspaceId\n      )\n    }\n    case NotificationService.eventKey: {\n      return NotificationService.create(\n        message.payload.title,\n        message.payload.message\n      )\n    }\n    case UsersService.logoutKey: {\n      return UsersService.logout()\n    }\n    case WSPreferencesService.eventKey: {\n      return WSPreferencesService.invoke(message.payload.workspaceId, {\n        store: true,\n      })\n    }\n\n    case 'HEAP_EVENT_TRACK': {\n      return heapClient.track(message.payload)\n    }\n\n    case 'start-entry':\n      return timeEntryBackgroundService.start(\n        message.payload.entry,\n        message.payload.from\n      )\n\n    case 'update-entry':\n      return timeEntryBackgroundService.update(\n        message.payload.entry,\n        message.payload.from\n      )\n    case 'delete-entry':\n      return timeEntryBackgroundService.remove(message.payload)\n\n    case 'activate':\n      return loadResources(message?.payload?.forwardError)\n    case 'VERIFY_USER':\n      return verifyUser(message.payload.userId, message.payload.isStaging)\n    case 'CLEAR_DATA':\n      if (message.payload.isStaging && !isExtensionRunningInStaging) {\n        return\n      }\n      return clearData()\n    case 'testing':\n      logger.debug('payload: ', message.payload)\n      break\n    default:\n      logger.debug('nothing')\n  }\n})\n"],"names":["updateDefaultProjects","from","projectId","rememberPer","Db","get","defaultProjects","getLocal","setLocal","origin","url","undefined","setProject","te","entry","defaultProjectId","type","project_id","projects","ProjectsListService","retrieve","billable","workspace_id","defaultProject","ensureSameWorkspace","Object","assign","pid","tid","wid","uid","project","tag_ids","length","tags","TagsListService","map","id","name","changeIconState","isActive","Browser","action","setIcon","path","setSignedInStatus","isSignedIn","setBadgeText","text","Promise","all","setBadgeTextColor","color","setBadgeBackgroundColor","onIconHandlerStateChangeListener","changes","areaName","CurrentTEService","storageKey","currentTE","newValue","duration","UsersService","error","Pomodoro","constructor","events","state","initialState","init","force","fillSettings","settings","focusDuration","stateFromStorage","getStoredState","emit","getState","getStoredSettings","storage","sync","then","data","setStoredSettings","set","local","isSettingsStorageInitialized","defaultSettings","start","startedAt","Date","now","isRunning","goToBreak","isAutoStartEnabled","isLargeBreak","isLargeBreakNeeded","isBreak","longBreakDuration","breakDuration","pause","goToFocus","session","sessions","reset","goToNextState","isOnBreak","autoStartBreak","computed","getComputedState","isIdle","isIdleBreak","isRunningBreak","isRunningFocus","getSettings","on","eventName","callback","push","args","forEach","PomodoroService","_isPlaceholder","a","_curry1","fn","f1","_curry2","f2","b","_b","_a","_has","prop","obj","toString","_isArguments","x","_isArguments$1","hasEnumBug","nonEnumerableProps","hasArgsEnumBug","contains","list","item","idx","keys","nIdx","ks","checkArgsLength","keys$1","val","type$1","_identity","identity","identity$1","_arrayFromIterator","iter","next","_includesWith","pred","len","_functionName","f","match","_objectIs","_objectIs$1","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","keysA","extendedStackA","extendedStackB","key","equals","equals$1","_indexOf","inf","_includes","_Set","hasOrAdd","shouldAdd","prevSize","newSize","bIdx","_Set$1","uniqBy","result","appliedItem","uniqBy$1","uniq","uniq$1","xprod","ilen","j","jlen","xprod$1","formats","R","reduce","hours","minutes","delimiter","period","format","includes","isTimeEntryRunning","timeEntry","DEBOUNCE_INTERVAL","debouncedFullFetch","debounce","FullFetchAlarm","handler","debouncedTaskFetch","fullSync","TasksListService","invoke","since","debouncedClientFetch","ClientsListService","debouncedTagsFetch","debouncedProjectFetch","debouncedWorkspacesFetch","WorkspacesListService","debouncedWSPreferencesFetch","WSPreferencesService","store","debouncedPomodoroReset","current","util","handleEvent","model","task_id","TEListService","deleteFromStore","updateStore","user","calls","SelectedWorkspaceService","debug","onWebSocketDataReceived","hasWorkspacesChanged","storedWorkspaceIds","workspaces","newWorkspaceIds","_","isEqual","doFetchUsingSince","logger","returnApiData","RequestError","response","status","alarms","create","retryAlarmName","when","timeoutId","isWebsocketActive","onWebsocketAuthenticated","onWebsocketDisconnected","WEBSOCKET_ALARM_ID","WEBSOCKET_ALARM_RETRY_ID","HEALTH_CHECK_TIMEOUT_IN_MINUTE","SHORT_WAIT_UNTIL_REOPEN","LONG_WAIT_UNTIL_REOPEN","socket","lastAliveCheck","updateKeepAlive","getSessionCookie","resolve","reject","chrome","cookies","cookie","runtime","lastError","value","onSocketOpen","event","isServiceWorker","token","authenticationMessage","auth_type","JSON","stringify","send","e","pong","onSocketMessage","parse","isUsefulIncomingData","isConnectionConfirmation","session_id","onSocketError","Error","onSocketClose","retryMiliSeconds","clear","isAuthenticated","setupLongRetryAlarm","connectWebSocket","readyState","WebSocket","OPEN","CONNECTING","onopen","onmessage","onclose","onerror","startSocketHealthMonitor","reconnect","close","stopSocketHealthMonitor","periodInMinutes","onWebsocketStateChangesListener","oldValue","TRACKING_REMINDER_ALARM_ID","REMINDER_NOTIFICATION_ID","configurePeriodicReminder","enabled","createPeriodicReminder","periodicity","clearPeriodicReminder","handleNotificationButtonClick","notifications","onRemindersStateChangeListener","area","remindersCheckEnabled","remindersInterval","NotificationService","eventKey","title","message","priority","iconUrl","getURL","dispatch","sendMessage","payload","handleTimeEntryEndpointError","stopRunningTimeEntry","stop","apiClient","timeEntries","created_with","source","_entry","onboardingConfig","isEnabled","getTime","update","opts","isManuallyStopped","running","remove","delete","messages","defineMessages","timeEntryConstraints","defaultMessage","requiredField","stopTime","DateTime","fromISO","startTime","timeEntriesApi","wss","errors","TEConstraintsService","check","te_constraints","toISO","Math","floor","diff","as","intl","formatMessage","fields","formatList","field","handleAlarm","configureStopAtDayEnd","time","second","plus","days","StopAtDayEndAlarm","toMillis","configure","stopAtDayEnd","dayEndTime","onStopAtDayEndStateChangesListener","onPomodoroV2StateChangesListener","pomodoroState","addStateChangeListener","onWorkspaceListStateChangeListener","IDLE_NOTIFICATION_ID","idleNotificationClickHandler","buttonIndex","shouldContinue","runningTimeEntry","lastIdleTimeEntry","at","toISOString","description","parseInt","toFixed","timeEntryService","configureIdleDetector","idleInterval","idle","setDetectionInterval","Number","onChanged","addListener","onButtonClicked","notificationId","workerProxyToken","getProxyWorkerChannelToken","buffer","Uint8Array","crypto","getRandomValues","randomToken","i","onMessage","closePopups","popups","windows","getAll","windowTypes","popup","playSoundFallback","audio","volume","src","audioLength","focused","top","left","width","height","playSoundOffscreen","offscreen","hasDocument","createDocument","reasons","justification","playPomodoroAlert","setting","isAlarmEnabled","alarmVolumePercent","startTicking","playbackSeconds","isTickingEnabled","stopTicking","onConnect","channel","onDisconnect","calcRemainingTime","getRemainingSessionTime","seconds","HeapAnalyticsClient","config","sendRequest","endpoint","baseUrl","fetch","method","headers","body","ok","track","app_id","defaultAppId","timestamp","properties","heapClient","process","compareSemver","v1","v2","major1","minor1","patch1","split","major2","minor2","patch2","V1PomodoroMigration","version","run","pomodoroModeEnabled","pomodoroSoundEnabled","pomodoroSoundVolume","pomodoroInterval","migrations","runMigration","details","info","previousVersion","migrationVersion","getMigrationLastRunVersion","migration","setMigrationLastRunVersion","configureLogin","tabId","executeScript","target","files","startIntegration","filename","insertCSS","catch","tab","rootDomain","extractRootDomain","hostName","extractHostname","integrations","customIntegrations","customScripts","extractedHostname","integrationObj","storedOrigins","file","toLocaleLowerCase","replace","hostname","startTimerWithDescription","startTimer","disableTinyButton","enableTinyButton","handleButtonClicked","menuItemId","toggleTinyButton","tinyButtonBlocklist","isNewStateDisabled","filter","selectionText","timeEntryBackgroundService","showButton","isTinyButtonDisabled","contexts","contextMenus","onClicked","removeListener","tabs","scripting","onRemoved","onCreated","TEs","lastTE","values","pop","windowEvents","onAdded","permissions","origins","TogglOrigins","acc","onUpdated","changeInfo","tinyButtonEnabled","isFirefox","contextMenu","onInstalled","reason","needsToShowCL","onCommand","command","initSentry","Sentry","entries","entriesList","sort","latestEntry","loadResources","forwardError","OrgFeaturesService","clearData","isExtensionRunningInStaging","verifyUser","userId","isStaging","UserUpdateService","OrganizationsListService","ProjectsCreateService","workspaceId","TagsCreateService","logoutKey","logout"],"mappings":"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"}