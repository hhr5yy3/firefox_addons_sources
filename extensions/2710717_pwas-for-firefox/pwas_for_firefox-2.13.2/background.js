(()=>{let e="settings.display-page-action",t="settings.show-update-popup",a="settings.enable-auto-launch",r="settings.auto-launch-exclusion",i="settings.disable-update-checking",s={permissions:["webNavigation","webRequest","webRequestBlocking"]};async function o(){let e=await browser.runtime.sendNativeMessage("firefoxpwa",{cmd:"GetSiteList"});if("Error"===e.type)throw Error(e.data);if("SiteList"!==e.type)throw Error(`Received invalid response type: ${e.type}`);return e.data}async function n(){try{let e=await browser.runtime.sendNativeMessage("firefoxpwa",{cmd:"GetSystemVersions"});if("Error"===e.type)throw Error(e.data);if("SystemVersions"!==e.type)throw Error(`Received invalid response type: ${e.type}`);if(!e.data.firefox)return"install";if(!0===(await browser.storage.local.get(i))[i])return"ok";let t=browser.runtime.getManifest().version,a=e.data.firefoxpwa;if(t===a)return"ok";let r=t.split(".",1)[0],s=a.split(".",1)[0];return r===s?"update-minor":"update-major"}catch(e){if("Attempt to postMessage on disconnected port"===e.message||"No such native application firefoxpwa"===e.message)return"install";throw e}}async function l(e,t){let a=await browser.runtime.sendNativeMessage("firefoxpwa",{cmd:"LaunchSite",params:{id:e.ulid,url:t}});if("Error"===a.type)throw Error(a.data);if("SiteLaunched"!==a.type)throw Error(`Received invalid response type: ${a.type}`);window.close()}let w="update-available-notification";function c(e){return"https:"===e.protocol||"127.0.0.1"===e.hostname||"localhost"===e.hostname||e.hostname.endsWith(".localhost")}browser.runtime.onInstalled.addListener(async({reason:e})=>{switch(e){case"install":await browser.tabs.create({url:browser.runtime.getURL("setup/install.html")});break;case"update":(await browser.storage.local.get({[t]:!0}))[t]&&await n()!=="ok"&&await browser.notifications.create(w,{title:browser.i18n.getMessage("updateNotificationTitle"),message:browser.i18n.getMessage("updateNotificationMessage"),iconUrl:browser.runtime.getURL("images/addon-logo.svg"),type:"basic"})}}),browser.notifications.onClicked.addListener(async e=>{e===w&&await browser.tabs.create({url:browser.runtime.getURL("setup/update.html")})}),browser.runtime.onMessage.addListener(async({manifestUrl:t,documentUrl:a,isSecureContext:r},{tab:i})=>{switch(t=t?new URL(t):void 0,a=a?new URL(a):void 0,await n()){case"install":case"update-major":await browser.pageAction.hide(i.id);return}let s=t&&c(t)&&c(a)&&r,l=(await browser.storage.local.get(e))[e];if("always"===l&&(s=!0),"never"===l&&(s=!1),s){let e=Object.values(await o()).map(e=>e.config.manifest_url);t&&e.includes(t.toString())?(await browser.pageAction.setIcon({tabId:i.id,path:"images/page-action-launch.svg"}),browser.pageAction.setTitle({tabId:i.id,title:browser.i18n.getMessage("actionLaunchSite")}),browser.pageAction.setPopup({tabId:i.id,popup:"sites/launch.html"})):(await browser.pageAction.setIcon({tabId:i.id,path:"images/page-action-install.svg"}),browser.pageAction.setTitle({tabId:i.id,title:browser.i18n.getMessage("actionInstallSite")}),browser.pageAction.setPopup({tabId:i.id,popup:"sites/install.html"})),await browser.pageAction.show(i.id)}else await browser.pageAction.hide(i.id)});let d=async()=>{let e=await browser.permissions.contains(s);e||await browser.storage.local.set({[a]:!1});let t=(await browser.storage.local.get(a))[a];e&&t&&browser.runtime.reload()};browser.permissions.onAdded.addListener(d),browser.permissions.onRemoved.addListener(d);let u=async e=>{for(let t of(e=new URL(e),Object.values(await o())))if(t.config.enabled_url_handlers?.some(t=>e.origin===new URL(t).origin&&e.pathname.startsWith(new URL(t).pathname)))return t};browser.webRequest?.onBeforeRequest.addListener(async e=>{if("main_frame"!==e.type||"GET"!==e.method)return;let t=await browser.storage.local.get([a,r]);if(!t[a])return;let i=t[r],s=new RegExp(i);if(i&&s.test(e.url))return;let o=await u(e.url);if(o)return await browser.runtime.sendNativeMessage("firefoxpwa",{cmd:"LaunchSite",params:{id:o.ulid,url:e.url}}),{cancel:!0}},{urls:["<all_urls>"]},["blocking"]),browser.webNavigation?.onCreatedNavigationTarget.addListener(async e=>{let t=await browser.storage.local.get([a,r]);if(!t[a])return;let i=t[r],s=new RegExp(i);!(i&&s.test(e.url))&&await u(e.url)&&await browser.tabs.remove(e.tabId)}),browser.runtime.onStartup.addListener(async()=>{for(let e of Object.values(await o()))e.config.launch_on_browser&&await l(e)})})();