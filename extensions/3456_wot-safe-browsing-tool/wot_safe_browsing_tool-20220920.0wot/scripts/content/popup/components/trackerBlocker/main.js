function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}class SliderTrackerMain extends React.Component{constructor(e){super(e),this.state={mockAllBlocked:!1,blink:!1}}componentWillReceiveProps(e){e.blink&&!this.state.blink&&setTimeout(()=>this.setState({blink:!0}))}getTitle(){var e=this.props;const t=e.blockedCount,r=e.totalCount;if(0===r)return{title:translate("noTrackersDetected"),className:"no-trackers"};if(t===r){return{title:translate(1===t?"oneTrackerBLocked":"allTrackersBlocked").replace("%1%",r),className:"all-blocked"}}if(0===this.props.blockedCount){return{title:translate(1===r?"oneTrackerDetected":"noTrackersBlocked").replace("%1%",r),className:"none-blocked"}}return{title:translate("someTrackersBlocked").replace("%1%",t).replace("%2%",r),className:"some-blocked"}}toggleTracker(e,t){if(!this.props.isPremium&&3===this.props.blockedSystemWide&&!t){this.props.showToast("upgradeBlockMoreTrackers");const e=[{name:MAILCHIMP_NON_PREMIUM_TRACKER_TAG,status:"active"}];return this.props.updateMailChimpTags(e),void 0}this.props.updateTrackerAllowList({[e]:t})}toggleAllTrackers(){if(!this.props.isPremium&&!this.props.allBlocked)return this.props.showToast("upgradeBlockAllTrackers"),this.setState({mockAllBlocked:!0}),setTimeout(()=>{this.setState({mockAllBlocked:!1})},500),void 0;GA(GA_MAIN_CATEGORY,"Block All Premium",this.props.allBlocked?"allow":"block"),this.props.toggleBlockAllTrackers(!this.props.allBlocked)}upgradeFromCounter(){goUpgrade(GA_MAIN_CATEGORY,"upgrade From counter","Unlock_All")}sortCategories(){if(!this.props.data)return[];const e=this.props.data;return[].concat(_toConsumableArray(TRACKER_CATEGORIES)).sort((t,r)=>Object.keys(e[r]).length-Object.keys(e[t]).length)}render(){var e=this.props;const t=e.allBlocked,r=e.data,a=e.host,l=e.isPremium,s=e.blockedSystemWide;var c=this.state;const o=c.mockAllBlocked,i=c.blink,n=this.getTitle(),k=this.sortCategories();return React.createElement("div",{className:"master-slider-wrapper"},React.createElement("div",{className:"slider-pre-title"},translate("trackingProtection")),React.createElement("div",{className:"slider-item slider-body-wrapper trackers-blocker"+(i?" blink":"")},React.createElement("div",{className:"trackers-title "+n.className},n.title),React.createElement("div",{className:"trackers-subtitle"},translate("on")," ",a),React.createElement("div",{className:"tracker-divider"}),"safari"!==browserName&&React.createElement("div",{className:"trackers-master-toggle"},React.createElement("div",{className:"trackers-toggle-title"},translate("trackersBlockAll")),React.createElement("div",{className:"trackers-toggle"},React.createElement(ToggleSwitch,{checked:t||o,simpleToggle:!0,gaAction:"toggle-trackers",onAction:this.toggleAllTrackers.bind(this),offAction:this.toggleAllTrackers.bind(this)})),React.createElement("div",{className:"trackers-toggle-explain"},React.createElement(TitleWithTooltip,{tooltip:"blockAllTrackersTooltip",titleClass:"question-mark",tooltipClass:"dark-tooltip",dynamic:!0}))),k.map(e=>React.createElement(SliderTrackerCategory,{category:e,data:r[e],toggleTracker:this.toggleTracker.bind(this)})),!l&&React.createElement("div",{className:"tracker-counter"},React.createElement("div",{className:"counter-text"},translate("trackerCounterText").replace("%1%",s)),React.createElement("div",{className:"counter-action",onClick:this.upgradeFromCounter.bind(this)},translate("trackerCounterAction")))))}}function mapStateToPros(e){var t=e.trackerBlockerData;const r=t.allowList,a=t.allBlocked,l=t.history,s=Object.values(r).filter(e=>!e).length,c=e.user.isPremiumUser,o=getEncodedDomain(e.currentTab.url),i=l.filter(e=>e.initiator===o),n=TRACKER_CATEGORIES.reduce((e,t)=>(e[t]={},e),{});let k=0;return i.forEach(e=>{const t=!r[e.name];k+=t?1:0,n[e.category][e.name]=t}),{isPremium:c,host:o,allBlocked:a,data:n,blockedCount:k,totalCount:i.length,blockedSystemWide:s}}function mapDispatchToProps(e){return{updateTrackerAllowList:t=>e(updateTrackerAllowList(t)),toggleBlockAllTrackers:t=>e(toggleBlockAllTrackers(t)),updateMailChimpTags:t=>e(updateMailChimpTags(t))}}SliderTrackerMain=ReactRedux.connect(mapStateToPros,mapDispatchToProps)(SliderTrackerMain);