const INPUT_TYPES_USERNAME=["text","email","url","tel","number"],INPUT_TYPES_PASSWORD=["password"],INPUT_TYPES_OTP=["text","tel","number"],INPUT_TYPES_ALL=[...INPUT_TYPES_USERNAME,...INPUT_TYPES_PASSWORD];let isAddPasswordDialogCurrentlyShown=!1;function findPasswordInputs(parentElement){var passwordInputs=parentElement.querySelectorAll("input[type=password]");return parentElement instanceof Element&&parentElement.matches("input[type=password]")?[parentElement,...passwordInputs]:passwordInputs}function findPossibleUsernameInputs(parentElement){let allInputs=Array.from(parentElement.querySelectorAll("input, textarea[id=username i]"));return(allInputs=parentElement instanceof Element&&parentElement.matches("input, textarea[id=username i]")?[parentElement,...allInputs]:allInputs).filter(isPossibleUsernameInput)}function findPossibleOtpInputs(parentElement){let otpInputs=Array.from(parentElement.querySelectorAll("input"));return(otpInputs=parentElement instanceof Element&&parentElement.matches("input")?[parentElement,...otpInputs]:otpInputs).filter(isPossibleOtpInput)}function isPossibleOtpInput(input){var type,id,name,ariaLabel,placeholder,autocomplete,maxlength;return!isForSureUsernameInput(input)&&(type=input.type.toLowerCase(),id=input.id.toLowerCase(),name=input.name.toLowerCase(),ariaLabel=(input.getAttribute("aria-label")||"").toLowerCase(),placeholder=(input.placeholder||"").toLowerCase(),autocomplete=(input.autocomplete||"").toLowerCase(),maxlength=input.maxLength,"one-time-code"===autocomplete||INPUT_TYPES_OTP.includes(type)&&(id.includes("code")||id.includes("otp")||id.includes("twofactor")||name.includes("code")||name.includes("otp")||name.includes("twofactor")||ariaLabel.includes("code")||ariaLabel.includes("otp")||ariaLabel.includes("twofactor")||placeholder.includes("code")||placeholder.includes("otp")||placeholder.includes("twofactor")||hasLabelWithKeywords(input,["code","otp","twofactor"])||containsTextContentsForOtpInOtpDiv(input))||6===maxlength)}function isForSureUsernameInput(input){const id=input.id.toLowerCase(),name=input.name.toLowerCase(),ariaLabel=(input.getAttribute("aria-label")||"").toLowerCase(),placeholder=(input.placeholder||"").toLowerCase();var usernameKeywords=["username","user","login","email","userid","user-id","account","accountname"];return"username"===(input.autocomplete||"").toLowerCase()||usernameKeywords.some(keyword=>id===keyword)||usernameKeywords.some(keyword=>name===keyword)||usernameKeywords.some(keyword=>ariaLabel===keyword)||usernameKeywords.some(keyword=>placeholder===keyword)}function hasLabelWithKeywords(input,keywords){input=document.querySelector(`label[for="${input.id}"]`);if(input){const labelText=input.textContent.toLowerCase();return keywords.some(keyword=>labelText.includes(keyword))}return!1}function containsTextContentsForOtpInOtpDiv(element){var rootOtpDiv=getRootOtpDiv(element);if(null==rootOtpDiv||rootOtpDiv===element)return!1;const allTextContents=getTextContents(rootOtpDiv).map(text=>text.toLowerCase());return["6-digit","6 digit","otp","one-time password","verification code","auth code","authentication code","two-factor authentication"].some(keyword=>allTextContents.some(text=>text.includes(keyword)))}function getTextContents(element){const textContents=[];return function traverse(node){node.nodeType===Node.TEXT_NODE&&""!==node.textContent.trim()&&textContents.push(node.textContent.trim()),node.childNodes.forEach(child=>traverse(child))}(element),textContents}function getRootOtpDiv(element){var otpKeywords=["totp","onetimepassword","verificationcode","authcode","authenticationcode","twofactorauthentication"];let remainingMismatches=2,otpDiv=null;for(;;){if(element===document)return otpDiv;var parentDiv=getClosestParentDiv(element);if(null==parentDiv)return otpDiv;const classNames=parentDiv.className.toLowerCase();if(otpKeywords.some(keyword=>classNames.includes(keyword.toLowerCase())))otpDiv=parentDiv;else if(--remainingMismatches<0)return otpDiv;element=parentDiv}}function getClosestParentDiv(input){let parent=input.parentElement;for(;parent&&"div"!==parent.tagName.toLowerCase();)parent=parent.parentElement;return parent}function isPossibleUsernameInput(input){var type=input.type;return"textarea"===input.tagName.toLowerCase()||!type||INPUT_TYPES_USERNAME.includes(type.toLowerCase())}function findAllTextInputs(parentElement){let allInputs=Array.from(parentElement.querySelectorAll("input, textarea[id=username i]"));return(allInputs=parentElement instanceof Element&&parentElement.matches("input, textarea[id=username i]")?[parentElement,...allInputs]:allInputs).filter(input=>{var type=input.type;return"textarea"===input.tagName.toLowerCase()||!type||INPUT_TYPES_ALL.includes(type.toLowerCase())})}function findVisiblePasswordInputs(parentElement){return[].slice.call(findPasswordInputs(parentElement)).filter(e=>isUserVisible(e))}function findVisiblePossibleUsernameInputs(parentElement){parentElement=findPossibleUsernameInputs(parentElement);return[].slice.call(parentElement).filter(currentElement=>isUserVisible(currentElement))}function findVisiblePossibleOtpInputs(parentElement){return[].slice.call(findPossibleOtpInputs(parentElement)).filter(e=>isUserVisible(e))}function isElementVisibleRecurse(element){var style;return"true"!==element.getAttribute("aria-hidden")&&"none"!==(style=getComputedStyle(element)).display&&"hidden"!==style.visibility&&"0"!==style.opacity&&(!element.parentElement||isElementVisibleRecurse(element.parentElement))}function isElementVisible(element){return 0!==element.offsetHeight&&0!==element.offsetWidth&&isElementVisibleRecurse(element)}function isWithinUserViewport(element,visibilityFraction=.5){try{var docViewTop=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),docViewBottom=docViewTop+window.innerHeight,elemTop=element.getBoundingClientRect().top+docViewTop,elemBottom=elemTop+element.offsetHeight,elemHeight=element.offsetHeight*visibilityFraction;if(elemBottom-elemHeight<=docViewBottom&&docViewTop<=elemTop+elemHeight){var docViewLeft=Math.max(window.pageXOffset,document.documentElement.scrollLeft,document.body.scrollLeft),docViewRight=docViewLeft+window.innerWidth,elemLeft=element.getBoundingClientRect().left+docViewLeft,elemRight=elemLeft+element.offsetWidth,elemWidth=element.offsetWidth*visibilityFraction;if(elemRight-elemWidth<=docViewRight&&docViewLeft<=elemLeft+elemWidth)return!0}return!1}catch(err){return!1}}function isUserVisible(element){return!!isElementVisible(element)&&isWithinUserViewport(element)}let tempAddedFieldInfo={passwordFieldAdded:!1,possibleUsernameFieldAdded:!1},sendAddedFieldInfoTimeout;const sendAddedInputFieldInfo=async function(){var addedInputFieldInfo={...tempAddedFieldInfo};tempAddedFieldInfo={passwordFieldAdded:!1,possibleUsernameFieldAdded:!1},await abstractBrowser.sendMessage({command:"InputFieldAdded",addedInputFieldInfo:addedInputFieldInfo})},registerAddedField=function(addedFieldInfo){tempAddedFieldInfo.passwordFieldAdded|=addedFieldInfo.passwordFieldAdded,tempAddedFieldInfo.possibleUsernameFieldAdded|=addedFieldInfo.possibleUsernameFieldAdded,sendAddedFieldInfoTimeout&&clearTimeout(sendAddedFieldInfoTimeout),sendAddedFieldInfoTimeout=setTimeout(sendAddedInputFieldInfo,200)};let intersectionObserverPasswordInputs,intersectionObserverUsernameInputs,mutationObserver,visibilityCheckTimeouts=new Map,observedElementsMap=new Map,isObservingInputs=!1,executionTimes=[],performanceObserver;const startDetectingVisibleInputFields=function(){if(!0!==isObservingInputs){isObservingInputs=!0,(performanceObserver=new PerformanceObservation(()=>{abstractBrowser.sendMessage({command:"HighCpuUsageDetected"})})).startMonitoring();var options={threshold:1};intersectionObserverPasswordInputs=new IntersectionObserver(function(entries,observer){entries.forEach(entry=>{entry.isIntersecting?checkElementForVisibilityChange(entry.target,!0):onVisibilityDetected(entry.target,!1,!0)})},options),intersectionObserverUsernameInputs=new IntersectionObserver(function(entries,observer){entries.forEach(entry=>{entry.isIntersecting?checkElementForVisibilityChange(entry.target,!1):onVisibilityDetected(entry.target,!1,!1)})},options),observedElementsMap=new Map,visibilityCheckTimeouts=new Map;const visibilityCheckDelay=200;var options=window.MutationObserver||window.WebKitMutationObserver,options=((mutationObserver=new options(function(mutationsList,observer){var parent,child,startTime=performance.now();try{for(var mutation of mutationsList)if("attributes"!==mutation.type||"style"!==mutation.attributeName&&"class"!==mutation.attributeName)"childList"===mutation.type&&mutation.addedNodes.forEach(async node=>{var passwordInputs;node.nodeType===Node.ELEMENT_NODE&&((passwordInputs=findPasswordInputs(node))&&0<passwordInputs.length&&observeElements(passwordInputs,!0),passwordInputs=findPossibleUsernameInputs(node))&&0<passwordInputs.length&&observeElements(passwordInputs,!1)});else for(var element of observedElementsMap.keys())parent=mutation.target,child=element,parent.contains(child)&&function(element){visibilityCheckTimeouts.has(element)&&(clearTimeout(visibilityCheckTimeouts.get(element)),visibilityCheckTimeouts.delete(element)),visibilityCheckTimeouts.set(element,setTimeout(()=>{checkElementForVisibilityChange(element),visibilityCheckTimeouts.delete(element)},visibilityCheckDelay))}(element)}finally{performanceObserver.recordExecutionTime(startTime)}})).observe(document,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["style","class"]}),findPasswordInputs(document)),possibleUsernameInputs=findPossibleUsernameInputs(document);function onVisibilityDetected(element,isVisible,isPassword){observedElementsMap.get(element)!==isVisible&&(observedElementsMap.set(element,isVisible),isVisible)&&(element={passwordFieldAdded:isPassword,possibleUsernameFieldAdded:!isPassword},registerAddedField(element))}function checkElementForVisibilityChange(element,isPassword=null){onVisibilityDetected(element,isUserVisible(element),isPassword=null===isPassword?"password"===element.type:isPassword)}function observeElements(elements,isPassword){elements.forEach(element=>{(isPassword?intersectionObserverPasswordInputs:intersectionObserverUsernameInputs).observe(element),observedElementsMap.has(element)||(logVerbose("start observing element",element),observedElementsMap.set(element,!1),function(element){let currentElement=element;for(;currentElement;)"none"!==window.getComputedStyle(currentElement).animationName&&currentElement.addEventListener("animationend",()=>{checkElementForVisibilityChange(element)}),currentElement=currentElement.parentElement}(element),checkElementForVisibilityChange(element))})}observeElements(options,!0),observeElements(possibleUsernameInputs,!1)}},stopDetectingVisibleInputFields=function(){!1!==isObservingInputs&&(isObservingInputs=!1,performanceObserver&&performanceObserver.stopMonitoring(),intersectionObserverPasswordInputs&&intersectionObserverPasswordInputs.disconnect(),intersectionObserverUsernameInputs&&intersectionObserverUsernameInputs.disconnect(),mutationObserver&&mutationObserver.disconnect(),visibilityCheckTimeouts.forEach(timeoutId=>{clearTimeout(timeoutId)}),visibilityCheckTimeouts.clear(),observedElementsMap.clear())};document.addEventListener("DOMContentLoaded",async event=>{if(void 0===event.isTrusted||event.isTrusted){try{option_logging_enabled=await abstractBrowser.sendMessage({command:"GetOptionLogging"})}catch(err){console.error(err)}let tabIsWebClient=!1;const observeDOM=function(){const MutationObserver=window.MutationObserver||window.WebKitMutationObserver;return function(obj,options,callback){if(MutationObserver){const obs=new MutationObserver(function(mutations){callback(mutations,obs)});return null==options&&(options={childList:!0,subtree:!0,attributes:!0,attributeFilter:["style","class"]}),obs.observe(obj,options),obs}}}();let sidebar=null,filledInputs=[];function getUserVisible(elements){return elements.filter(isUserVisible)}function getParents(node){let current=node;for(var list=[];current.parentNode&&current.parentNode!==document.documentElement;)list.push(current.parentNode),current=current.parentNode;return list}function findLoginMasks(filledFieldInfo,autofillTriggeredByUser){if(!filledFieldInfo)return console.error("findLoginMasks - filledFieldInfo is null or undefined"),null;var inputElements,passwordInputs=findVisiblePasswordInputs(document),isForSureLogin=function(){var containsLoginMask=doesURLContainLoginCaption(document);if(containsLoginMask)return!0;containsLoginMask=findPossibleUsernameInputs(document);for(var input of containsLoginMask)if(("username"===getAutocompleteAttribute(input)||"email"===getAutocompleteAttribute(input))&&isUserVisible(input))return!0;return!1}();let inputGroups=[];return 0===inputGroups.length&&autofillTriggeredByUser&&filledFieldInfo.doesInputTypeNeedToBeFilled(InputType.Otp)&&(inputGroups=createOtpLoginGroups()),0===(inputGroups=0===(inputGroups=0===(inputGroups=filledFieldInfo.doesInputTypeNeedToBeFilled(InputType.Username)&&(inputElements=[].slice.call(findAllTextInputs(document)),0===(inputGroups=0===inputGroups.length&&filledFieldInfo.doesInputTypeNeedToBeFilled(InputType.Password)?function(possibleGroups){let matchingGroups=[],bestMatchingGroup;for(let i=0,l=possibleGroups.length;i<l;i++){var parent=possibleGroups[i].parent,passwordInputs=[].slice.call(parent.querySelectorAll("input[type=password]:not([type=hidden])")),parent=[].slice.call(parent.querySelectorAll("input[type=text], input[type=email], input[type=username], input:not([type]), textarea[id=username i]")),passwordInputs=getUserVisible(passwordInputs).length,parent=getUserVisible(parent).length;null==bestMatchingGroup&&1===parent&&1===passwordInputs?bestMatchingGroup=possibleGroups[i]:0<parent&&parent<=2&&1===passwordInputs&&matchingGroups.push(possibleGroups[i])}var result=[];null!=bestMatchingGroup&&result.push(bestMatchingGroup);if(0<matchingGroups.length)for(let j=0;j<matchingGroups.length;j++)result.push(matchingGroups[j]);return result}(inputGroups=function(inputElements,passwordInputs){var inputGroups=[];for(let i=0,l=passwordInputs.length;i<l;i++){let passwordInput=passwordInputs[i];var parent,currentPasswordInputIndex=inputElements.indexOf(passwordInput);-1!==currentPasswordInputIndex&&(null!=(currentPasswordInputIndex=getUsernameInputField(currentPasswordInputIndex,inputElements))&&(parent=currentPasswordInputIndex.closest("form")||getParents(currentPasswordInputIndex).find(el=>el!==passwordInput&&el.contains(passwordInput))))&&(currentPasswordInputIndex={parent:parent,userInput:currentPasswordInputIndex,passwordInput:passwordInput},inputGroups.push(currentPasswordInputIndex))}return inputGroups}(inputElements,passwordInputs)):inputGroups).length)&&0===passwordInputs.length&&isForSureLogin?function(inputElements){var inputGroups=[];if(0!==inputElements.length){let userInput=getUsernameInputField(inputElements.length,inputElements);userInput&&(inputElements=userInput.closest("form")||getParents(userInput).find(el=>el!==userInput&&el.contains(userInput)))&&(inputElements={parent:inputElements,userInput:userInput},inputGroups.push(inputElements))}return inputGroups}(inputElements):inputGroups).length&&1===passwordInputs.length&&filledFieldInfo.doesInputTypeNeedToBeFilled(InputType.Password)&&(autofillTriggeredByUser||filledFieldInfo.wasInputTypeFilled(InputType.Username)||filledFieldInfo.wasInputTypeFilled(InputType.Otp))?createLoginGroupsWithPasswordOnly(passwordInputs):inputGroups).length&&filledFieldInfo.doesInputTypeNeedToBeFilled(InputType.Otp)&&(autofillTriggeredByUser||filledFieldInfo.wasInputTypeFilled(InputType.Username)||filledFieldInfo.wasInputTypeFilled(InputType.Password))?createOtpLoginGroups():inputGroups).length?null:(function(inputGroups,filledFieldInfo){for(const group of inputGroups){var inputTypes=function(inputGroup){var inputTypes=[];inputGroup.userInput&&inputTypes.push(InputType.Username);inputGroup.passwordInput&&inputTypes.push(InputType.Password);(inputGroup.otpInput||inputGroup.otpInputs)&&inputTypes.push(InputType.Otp);return inputTypes}(group);if(0!==inputTypes.length){inputTypes=filledFieldInfo.isCompletedAfterFillingInputTypes(inputTypes);let inputWhichShouldBeClosestToButton=group.userInput||group.passwordInput||group.otpInput;!inputWhichShouldBeClosestToButton&&group.otpInputs&&0<group.otpInputs.length&&(inputWhichShouldBeClosestToButton=group.otpInputs[0]),inputTypes?group.submitButton=findSubmitForLoginMask(group.parent,!0,inputWhichShouldBeClosestToButton):group.continueButton=findSubmitForLoginMask(group.parent,!1,inputWhichShouldBeClosestToButton)}}}(inputGroups,filledFieldInfo),inputGroups)}function createOtpLoginGroups(){var otpInputs=findVisiblePossibleOtpInputs(document),inputGroups=[];if(0!==otpInputs.length)if(1===otpInputs.length){const otpInput=otpInputs[0];var group={parent:otpInput.closest("form")||getParents(otpInput).find(el=>el!==otpInput&&el.contains(otpInput)),otpInput:otpInput};inputGroups.push(group)}else if(6===otpInputs.length){const otpInput=otpInputs[0],parent=otpInput.closest("form")||getParents(otpInput).find(el=>el!==otpInput&&el.contains(otpInput)),group={parent:parent,otpInputs:otpInputs};inputGroups.push(group)}return inputGroups}function createLoginGroupsWithPasswordOnly(passwordInputs){inputGroups=[];let passwordInput=passwordInputs[0];passwordInputs={parent:passwordInput.closest("form")||getParents(passwordInput).find(el=>el!==passwordInput&&el.contains(passwordInput)),passwordInput:passwordInput};return inputGroups.push(passwordInputs),inputGroups}function getUsernameInputField(passwordFieldIndex,inputElements){let ignoreAutocompleteOff=!1;0<=passwordFieldIndex&&passwordFieldIndex<inputElements.length&&("password"==inputElements[passwordFieldIndex].type&&(ignoreAutocompleteOff=!0));var matchingUsernameInputs=[];for(let i=passwordFieldIndex-1;0<=i;i--){var currentElement=inputElements[i];if(isUserVisible(currentElement)){if(matchesSelector(currentElement,"input[type=password]"))break;isPossibleUsernameInput(currentElement)&&matchingUsernameInputs.push(currentElement)}}return 0===matchingUsernameInputs.length?null:function(matchingUsernameInputs,ignoreAutocompleteOff){for(var input of matchingUsernameInputs){var autocomplete=getAutocompleteAttribute(input);if("username"===autocomplete||"email"===autocomplete)return input}var usernameInputs=[];for(let input of matchingUsernameInputs){var autocomplete=getAutocompleteAttribute(input);if("new-password"!==autocomplete&&"current-password"!==autocomplete&&"one-time-code"!==autocomplete){if("email"===input.type)return input;if(input.name&&(input.name.toLowerCase().includes("email")||input.name.toLowerCase().includes("username")||input.name.toLowerCase().includes("phone")))return input;if(input.id&&(input.id.toLowerCase().includes("email")||input.id.toLowerCase().includes("username")||input.id.toLowerCase().includes("phone")))return input;!ignoreAutocompleteOff&&"off"===autocomplete||usernameInputs.push(input)}}return 0!==usernameInputs.length?usernameInputs[0]:null}(matchingUsernameInputs,ignoreAutocompleteOff)}function getAutocompleteAttribute(input){return input.autocomplete||(input.form&&input.form.autocomplete?input.form.autocomplete:null)}function distanceBetweenElements(el1,el2){var el1=el1.getBoundingClientRect(),el2=el2.getBoundingClientRect(),x1=el1.left,el1=el1.top,x2=el2.left,el2=el2.top;return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(el1-el2,2))}function findSubmitForLoginMask(parent,isSubmitButton,inputWhichShouldBeClosestToButton){let validButtons=[],validButLessImportantButtons=[],passwordUserVisible=isUserVisible(inputWhichShouldBeClosestToButton);var loginButtons=[].slice.call(document.querySelectorAll(LOGIN_BUTTON_TYPES)).filter(el=>el!==inputWhichShouldBeClosestToButton),loginButtons=(0<loginButtons.length&&loginButtons.forEach(element=>{if(isSubmitButton){if(passwordUserVisible&&!isUserVisible(element))return}else if(!isUserVisible(element))return;checkLoginText(element)?(element.distanceToInput=distanceBetweenElements(inputWhichShouldBeClosestToButton,element),validButtons.push(element)):matchesSelector(element,"div, span, a")||(element.distanceToInput=distanceBetweenElements(inputWhichShouldBeClosestToButton,element),validButLessImportantButtons.push(element))}),filterLoginButtons(validButtons).sort((a,b)=>parseFloat(a.distanceToInput)-parseFloat(b.distanceToInput)));let possibleButtons=loginButtons.length?loginButtons:filterLoginButtons(validButLessImportantButtons).sort((a,b)=>parseFloat(a.distanceToInput)-parseFloat(b.distanceToInput)),possibleButtonsWithParent=possibleButtons.filter(b=>parent!==b&&parent.contains(b));return 0===possibleButtonsWithParent.length&&(possibleButtonsWithParent=validButtons.filter(b=>parent!==b&&parent.contains(b))),function(loginButtons,isSubmitButton){let filteredButtons=loginButtons.slice();if(isSubmitButton)for(var submitButtonSelector of SUBMIT_BUTTON_SELECTORS){submitButtonSelector=matchesSelectorList(filteredButtons,submitButtonSelector);if(0<submitButtonSelector.length){filteredButtons=submitButtonSelector;break}}else for(var continueButtonSelector of CONTINUE_BUTTON_SELECTORS){var matchingButtons=matchesSelectorList(filteredButtons,continueButtonSelector);if(0<matchingButtons.length){filteredButtons=matchingButtons;break}}return filteredButtons[0]}(possibleButtons=0<possibleButtonsWithParent.length?possibleButtonsWithParent:possibleButtons,isSubmitButton)}function filterLoginButtons(loginButtons){var sorted=[];for(let i=0;i<loginButtons.length;i++)matchesSelector(loginButtons[i],"input[type=submit], input[type=button], input[type=image], button[type=submit], button")&&sorted.push(loginButtons[i]);if(!(0<sorted.length)){for(let j=0;j<loginButtons.length;j++)matchesSelector(loginButtons[j],"[role=button], *[role=submit], input")&&sorted.push(loginButtons[j]);if(!(0<sorted.length)){for(let m=0;m<loginButtons.length;m++)matchesSelector(loginButtons[m],".button")&&sorted.push(loginButtons[m]);if(!(0<sorted.length))for(let k=0;k<loginButtons.length;k++)sorted.push(loginButtons[k])}}return sorted}function URIDecode(value){if(!value)return"";value=(new DOMParser).parseFromString("<!doctype html><body>"+value.split("<").join("&lt;").split(">").join("&gt;"),"text/html").body.textContent;try{return decodeURIComponent(escape(value))}catch(ex){return value}}function logInput(message,input){try{var outerHtml=null;logVerbose(message,input,outerHtml=null!=input?input.outerHTML:outerHtml)}catch(err){logVerbose("error logging input field",input)}}async function executeTemplate(data){try{var templates=data.Templates;!function(templates,values){for(let i=0,l=templates.length;i<l;i++){var currentTemplate=templates[i];currentTemplate.Command===FILL_COMMAND&&(currentTemplate.Value=URIDecode(values[i]))}}(templates,data.Values);for(let i=0;i<templates.length;i++){const template=templates[i];0<template.Delay?await new Promise(resolve=>{setTimeout(async()=>{await executeTemplateCommand(template,data.AutoSubmit),resolve()},template.Delay)}):await executeTemplateCommand(template,data.AutoSubmit)}}catch(ex){return!1}return!0}async function executeTemplateCommand(template,autoSubmit){switch((template=function(template){try{return null!=template.PsrElement&&(template.Field=getElement(template.PsrElement)),template}catch(ex){console.error(ex)}}(template)).Command){case FILL_COMMAND:await setValue(template.Field,template.Value);break;case CLICK_COMMAND:clickElement(template.Field);break;case SUBMIT_COMMAND:autoSubmit&&clickElement(template.Field)}await tick()}function tick(){return new Promise(resolve=>setTimeout(()=>resolve(),1))}async function setValue(element,value){if(element){focusElement(element),element.value="",element.dispatchEvent(new Event("input",{bubbles:!0}));for(var char of value.split("")){var keydownEvent=new KeyboardEvent("keydown",{key:char,bubbles:!0}),keydownEvent=(element.dispatchEvent(keydownEvent),element.value+=char,element.dispatchEvent(new Event("input",{bubbles:!0})),new KeyboardEvent("keyup",{key:char,bubbles:!0}));element.dispatchEvent(keydownEvent)}focusElement(element),element.value=value,element.dispatchEvent(new Event("input",{bubbles:!0})),element.dispatchEvent(new Event("change",{bubbles:!0})),element.hasAttribute("psrpreviousbackground")||element.setAttribute("psrpreviousbackground",element.style.background),element.setAttribute("psrfilled",!0),element.style.background="#B1D6F0",filledInputs.push(element),await tick()}}function focusElement(element){element&&("function"==typeof element.click&&element.click(),"function"==typeof element.focus)&&element.focus()}function clickElement(element){null!=element&&("function"==typeof element.click?element.click():(executeMouseEvent(element,"mousedown"),executeMouseEvent(element,"mouseup"),executeMouseEvent(element,"click")))}function executeMouseEvent(element,eventname){eventname=new MouseEvent(eventname,{view:window,bubbles:!0,cancelable:!0});element.dispatchEvent(eventname)}async function createTemplate(templateData){if(!(sidebar&&sidebar.isVisible||(await(sidebar=new PsrSidebar).initialize(),sidebar.toggleSidebar(),null==templateData))){var template=JSON.parse(templateData.templates);for(let i=0;i<template.length;i++)template[i].Field=getElement(template[i].PsrElement),sidebar.addElementToTemplate(template[i],!0)}}async function requestAutofill(msg){var autoSubmitted,autoFilled,context,result={autoFilled:!1};return null!=msg.Templates&&0<msg.Templates.length?(autoFilled=await executeTemplate(msg),autoSubmitted=msg.AutoSubmit,result.AutoSubmitted=autoSubmitted,result.autoFilled=autoFilled,result.completed=!0):null!=(autoSubmitted=findLoginMasks(msg.filledFieldInfo,msg.autofillTriggeredByUser))&&((autoFilled=await async function(loginmask,values,filledFieldInfo){try{var username=URIDecode(values.username),password=URIDecode(values.password),otpToken=URIDecode(values.otp);if(null!=username&&null!=loginmask.userInput&&(logInput("filling username input",loginmask.userInput),await setValue(loginmask.userInput,username),filledFieldInfo.setInputTypeFilled(InputType.Username)),null!=password&&null!=loginmask.passwordInput&&(logInput("filling password input",loginmask.passwordInput),await setValue(loginmask.passwordInput,password),filledFieldInfo.setInputTypeFilled(InputType.Password)),null!=otpToken)if(null!=loginmask.otpInput)logInput("filling otp input",loginmask.otpInput),await setValue(loginmask.otpInput,otpToken),filledFieldInfo.setInputTypeFilled(InputType.Otp);else if(null!=loginmask.otpInputs){logInput("filling otp inputs",loginmask.otpInputs);for(let i=0;i<loginmask.otpInputs.length;i++)i<otpToken.length?await setValue(loginmask.otpInputs[i],otpToken[i]):await setValue(loginmask.otpInputs[i],"");filledFieldInfo.setInputTypeFilled(InputType.Otp)}return!0}catch(ex){return!1}}(autoSubmitted[0],msg.Values,msg.filledFieldInfo))&&(msg.filledFieldInfo.isCompleted()?result.completed=!0:(context={Container:msg.Container,autofillTriggeredByUser:msg.autofillTriggeredByUser,filledFieldInfo:msg.filledFieldInfo},await abstractBrowser.sendMessage({command:"SetNextStepState",context:context})),msg.AutoContinue&&autoSubmitted[0].continueButton&&(clickElement(autoSubmitted[0].continueButton),result.AutoContinued=!0),msg.AutoSubmit)&&autoSubmitted[0].submitButton&&(clickElement(autoSubmitted[0].submitButton),result.AutoSubmitted=!0),result.autoFilled=autoFilled),result}function enableLoginDetection(){tabIsWebClient||addPasswordService.startLoginDetection()}function checkForLoginMasks(templates,filledFieldInfo,autofillTriggeredByUser){let loginMaskFound=!1;return loginMaskFound=templates&&0<templates.length?function(templates){let isValid=!0;for(let i=0;i<templates.length;i++)templates[i]&&templates[i].PsrElement&&(getElement(templates[i].PsrElement)||(isValid=!1));return isValid}(templates):!!(templates=findLoginMasks(filledFieldInfo,autofillTriggeredByUser))&&0<templates.length}abstractBrowser.onMessage(function(request,sendResponse){if("SidebarAddTemplateCommand"!=request.Command||null==sidebar||sidebar.isInIframe()||sidebar.addElementToTemplate(request.Data,!1),"CreateTemplate"==request.Command&&createTemplate(),"EditTemplate"==request.Command&&createTemplate(request.Data),"RequestAutofill"==request.Command)return(async()=>{request.Data.filledFieldInfo&&Object.setPrototypeOf(request.Data.filledFieldInfo,FilledFieldInfo.prototype),addPasswordService.stopLoginDetection();var currentUrl=window.location.href,res=await requestAutofill(request.Data);res.Url=currentUrl,enableLoginDetection(),sendResponse(res)})(),!0;if("StartDetectingVisibleInputFields"==request.Command)startDetectingVisibleInputFields();else if("StopDetectingVisibleInputFields"==request.Command)stopDetectingVisibleInputFields();else if("StartWebClientDetection"===request.Command)0!==(mtoAppRoot=document.getElementsByTagName("mto-app-root")).length&&(tabIsWebClient=!0,addPasswordService.stopLoginDetection(),observeDOM(mtoAppRoot[0],null,function(mutations,observer){mutations.filter(m=>"mto-base-layout"===m.target.localName).some(m=>[].slice.call(m.addedNodes).some(t=>"mto-full-layout"===t.localName||"mto-light-layout"===t.localName))?abstractBrowser.sendMessage({command:"LoggedInWebClientDetected"}):mutations.filter(m=>"mto-base-layout"===m.target.localName).some(m=>[].slice.call(m.removedNodes).some(t=>"mto-full-layout"===t.localName||"mto-light-layout"===t.localName))&&abstractBrowser.sendMessage({command:"LoggedInWebClientRemovedFromTab"})}));else{var localStorageDatabase;if("RequestDom"==request.Command&&sendResponse(document.body.innerHTML),"ClearValues"==request.Command){var mtoAppRoot=sendResponse;for(let i=0;i<filledInputs.length;i++)if(null!=filledInputs[i])try{filledInputs[i].value="",filledInputs[i].style.background=""}catch(ex){}filledInputs=[],mtoAppRoot()}if("StartLoginDetection"!==request.Command){if("ShowAddPassword"===request.Command){if(!0===isAddPasswordDialogCurrentlyShown)return void sendResponse(null);if(isInIframe())return void sendResponse(null);request.Data.showAddPasswordDebugDialog&&addPasswordService.showDetectedDebugDialog(request.Data),addPasswordService.showDetectionResult(request.Data,url=>abstractBrowser.sendMessage({command:"BlockUrlFromAddPassword",url:url}),(detectionResult,profileId)=>{abstractBrowser.sendMessage({command:"OpenWebAppAddPassword",detectionResult:detectionResult,profileId:profileId})},async(container,detectionResult)=>{container=await abstractBrowser.sendMessage({command:"SaveChanges",container:container,detectionResult:detectionResult});if(container.error)throw container.error;return container},(container,detectionResult)=>abstractBrowser.sendMessage({command:"VerifyChanges",container:container,detectionResult:detectionResult}),()=>{isAddPasswordDialogCurrentlyShown=!1,abstractBrowser.sendMessage({command:"AddPasswordClosed"})})}if("ShowDisableAutofillForUrl"===request.Command){const disableAutofillData=request.Data;showPsrNotification(translationService.translate("disable_autofill_for_url_reason_performance"),[{name:translationService.translate("disable"),action:()=>{abstractBrowser.sendMessage({command:"DisableAutofillForUrl",disableAutofillData:disableAutofillData})}}])}return"DetectDatabaseProfile"===request.Command&&(localStorageDatabase=function(){var webClientServerEl=document.getElementById("psr-web-client-server-name-plz-addon-read-here"),webClientUrlEl=document.querySelector("base"),webClientServerEl=webClientServerEl?webClientServerEl.textContent:"",webClientDatabaseName=window.localStorage.getItem("database"),webClientUsername=window.localStorage.getItem("username"),webClientUserId=window.localStorage.getItem("userId"),webClientUrlEl=webClientUrlEl?webClientUrlEl.href:"";if(webClientServerEl&&webClientDatabaseName&&webClientUsername)return{endpoint:webClientServerEl,database:webClientDatabaseName,webClientUrl:webClientUrlEl,username:webClientUsername,userId:webClientUserId}}(),sendResponse(localStorageDatabase)),"CheckLoginMask"===request.Command&&(async()=>{var context,loginMasksFound;request.Data.filledFieldInfo&&Object.setPrototypeOf(request.Data.filledFieldInfo,FilledFieldInfo.prototype),(loginMasksFound=!0===await retryer(3,400)(()=>checkForLoginMasks(request.Data.templates,request.Data.filledFieldInfo,request.Data.autofillTriggeredByUser)))&&(context=request.context,abstractBrowser.sendMessage({command:"LoginMaskFound",context:context})),sendResponse(loginMasksFound)})(),"AutofillNotExecuted"===request.Command&&showInfoMessageDialog(),"SendMessageToWebClient"===request.Command&&(async()=>{var detail=JSON.stringify(request.Message),detail=new CustomEvent("SendMessageToWebClient",{detail:detail}),detail=document.dispatchEvent(detail);sendResponse(detail)})(),!0}enableLoginDetection()}sendResponse(null)}),document.addEventListener("PSRSessionForkParameters",async event=>{document.dispatchEvent(new CustomEvent("PSRForkingSession"));event=await abstractBrowser.sendMessage({command:"ForkSession",sessionForkParameters:event.detail});!event||event.error?document.dispatchEvent(new CustomEvent("PSRForkingSessionFailed")):document.dispatchEvent(new CustomEvent("PSRSession",{detail:JSON.stringify({session:event.session,userKeys:event.userKeys})}))}),document.addEventListener("PSRRequestDetectionResult",async event=>{event&&event.detail&&(event=JSON.parse(event.detail)).database&&event.userId&&(event=await abstractBrowser.sendMessage({command:"ReceiveDetectionResult",database:event.database,userId:event.userId}))&&document.dispatchEvent(new CustomEvent("PSRDetectionResult",{detail:JSON.stringify(event)}))}),document.addEventListener("PSRRefresh",event=>{event&&event.detail&&(event=JSON.parse(event.detail)).database&&event.userId&&abstractBrowser.sendMessage({command:"RefreshFromWebClient",database:event.database,userId:event.userId})}),document.addEventListener("PSRIsAddonHere",()=>document.dispatchEvent(new CustomEvent("PSRAddonIsHere"))),document.addEventListener("PSROnUrlClicked",event=>{event&&event.detail&&(event=JSON.parse(event.detail)).database&&event.userId&&event.username&&event.containerId&&abstractBrowser.sendMessage({command:"OnUrlClickedFromWebClient",database:event.database,userId:event.userId,username:event.username,containerId:event.containerId})}),abstractBrowser.sendMessage({command:"DOMContentLoaded"}),abstractBrowser.sendMessage({command:"UserAgent",userAgent:navigator.userAgent})}});let option_logging_enabled=!1;function log(...args){option_logging_enabled&&console.log(...args)}function logVerbose(...args){option_logging_enabled&&console.debug(...args)}