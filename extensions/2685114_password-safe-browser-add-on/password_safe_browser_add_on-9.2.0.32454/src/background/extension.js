const TIME_NEXT_STEP_WILL_GET_FILLED=6e4,TIME_AUTOSUBMIT_BLOCKED=6e4;let authentication=null,authRequests=new Map,displayedNotifications=new Map,addPasswordTimeoutsMap=new Map,addPasswordTabResults=new Map;async function handleSessionError(err,session){if(110002!==err.ExceptionCode)throw err;await logout(session.profileId)}async function getAutofillValues(msg){if(isServerConnected(sessions)){const session=findSession(msg.ContainerId),container=await session.getContainer(msg.ContainerId).catch(async err=>handleSessionError(err,session));if(null!=container&&null!=container.Items){if(msg.Values=msg.Values||{},await session.isSealed(container).catch(async err=>handleSessionError(err,session)))throw showNotification(browser.i18n.getMessage("password_is_sealed")),60020;await isProtected(container.Id).catch(async err=>handleSessionError(err,session))&&(msg.AutoSubmit=!0,msg.AutoContinue=!0);var fillscripts=getTemplatesForUrl(msg.Url);if(null!=fillscripts&&0<fillscripts.length&&fillscripts[0].Templates&&fillscripts[0].Templates.length){const promises=[];fillscripts[0].Templates.forEach(template=>{"FillDomCommand"!==template.Command?promises.push(Promise.resolve("")):promises.push(getItemValue(container,template.Value,browser.i18n.getMessage("template_reason")))});var fillscripts=await Promise.all(promises);msg.Values=fillscripts}else{if(msg.filledFieldInfo.doesInputTypeNeedToBeFilled(InputType.Username)){let userItem=container.Items.find(c=>13===c.ContainerItemType);(userItem=(userItem=userItem&&userItem.Value?userItem:container.Items.find(c=>c.Name&&"username"===c.Name.toLowerCase()))&&userItem.Value?userItem:container.Items.find(c=>5===c.ContainerItemType))&&(msg.Values.username=userItem.Value)}msg.filledFieldInfo.doesInputTypeNeedToBeFilled(InputType.Password)&&(fillscripts=container.Items.find(c=>1===c.ContainerItemType))&&(fillscripts=await session.decryptContainerItem(fillscripts,browser.i18n.getMessage("autofill_reason")).catch(async err=>handleSessionError(err,session)),msg.Values.password=fillscripts),msg.filledFieldInfo.doesInputTypeNeedToBeFilled(InputType.Otp)&&(fillscripts=container.Items.find(c=>16===c.ContainerItemType))&&(null==(fillscripts=await session.decryptContainerItem(fillscripts,browser.i18n.getMessage("autofill_reason")).catch(async err=>handleSessionError(err,session)))||""==fillscripts?msg.Values.otp="":(fillscripts=(await session.generateGoogleAuthenticatorOtp(fillscripts)).OneTimePassword,msg.Values.otp=fillscripts))}}return msg}}async function sendAutofillToTab(msg,receiverInfo,context){if(null!=msg){try{msg.TabId=parseInt(msg.TabId)}catch(e){return}var templates=getTemplatesForUrl(msg.Url),templates=(null!=templates&&0<templates.length&&(msg.Templates=templates[0].Templates),log("EXECUTING AUTOFILL",receiverInfo,context),await sendMessageToSingleReceiver(receiverInfo,{Command:MSG_REQUEST_AUTOFILL,Data:msg}));return!0===templates.autoFilled?(onAutofillExecuted(templates,msg,receiverInfo,context),templates):(log("FINISH AUTOFILL - did not fill"),null)}}function onAutofillExecuted(fillInfo,msg,receiverInfo,context){var tabId=receiverInfo.tabId;!0===fillInfo.completed&&nextStepState[tabId]&&nextStepState[tabId].reset(),!0===context.isNextContextToUse&&delete nextContextToUseState[tabId],log("FINISH AUTOFILL - filled",fillInfo,receiverInfo,context),addFillInfo(fillInfo,msg,receiverInfo),!0===fillInfo.completed&&blockAutofillForReceiver(receiverInfo)}async function autofill(receiverInfo,context){let msg={TabId:receiverInfo.tabId,Url:receiverInfo.url,MainUrl:context.mainUrl};log("START AUTOFILL",receiverInfo,context),msg.filledFieldInfo=context.filledFieldInfo,msg.Container=context.Container,msg.ContainerId=context.Container.ContainerId,msg.autofillTriggeredByUser=context.autofillTriggeredByUser,msg.Autofill=context.autofillTriggeredByUser||context.Container.Autofill||!1,msg.AutoSubmit=context.Container.Autosubmit||!1,msg.AutoContinue=msg.AutoSubmit,msg.autofillTriggeredByUser=context.autofillTriggeredByUser,await autofillDisabled(receiverInfo.url)&&!msg.autofillTriggeredByUser?log("Autofill disabled for URL",receiverInfo.url):"no distinct autofill container"===context.Container?(log("Autofill - no distinct autofill container",receiverInfo.url),showMultiplePasswordsFoundMessage(receiverInfo)):msg.Autofill?await executeInLock("autofill_"+getIdForReceiver(receiverInfo),async()=>{if(!0!==msg.autofillTriggeredByUser&&isAutofillBlockedForReceiver(receiverInfo))return void log("Autofill is currently blocked for receiver",receiverInfo);isAutoSubmitBlocked(receiverInfo,context)&&(log("AutoSubmit is currently blocked"),msg.AutoSubmit=!1,msg.AutoContinue=!1);var templates=getTemplatesForUrl(msg.Url);if(null!=templates&&0<templates.length&&(msg.Templates=templates[0].Templates,msg.Filter=[],msg.Templates))for(let i=0;i<msg.Templates.length;i++){var template=msg.Templates[i];null!=template&&msg.Filter.push(template.Value)}templates=await getAutofillValues(msg);return templates?await sendAutofillToTab(templates,receiverInfo,context):null}):log("Autofill disabled")}async function executeInLock(lockName,func){return"locks"in navigator?navigator.locks.request(lockName,async lock=>{return await func()}):(console.log("the browser does NOT support locks"),func())}function isAutoSubmitBlocked(receiverInfo,context){if(!0!==context.autofillTriggeredByUser){var fillStates=lastFilledStateAutoSubmit[receiverInfo.tabId];if(null!=fillStates){var currentCompareUrl=getCompareUrl(receiverInfo.url);for(const fillState of fillStates)if(fillState.ContainerId===context.Container.ContainerId&&!0===fillState.fillInfo.AutoSubmitted)if(currentCompareUrl==getCompareUrl(fillState.fillInfo.Url))return!0}}return!1}async function checkForAutofill(receiverInfo,context){if(null!=receiverInfo){null==context&&(null!=nextContextToUseState[receiverInfo.tabId]?((context=nextContextToUseState[receiverInfo.tabId]).isNextContextToUse=!0,context.autofillTriggeredByUser&&delete nextContextToUseState[receiverInfo.tabId]):context=nextStepState[receiverInfo.tabId]?nextStepState[receiverInfo.tabId].context:{autofillTriggeredByUser:!1});var mainUrl=await getMainFrameUrlForReceiver(receiverInfo);if(void 0!==mainUrl){if(context.mainUrl=mainUrl,null==context.Container)try{if(context.Container=getContainer(containers,context.mainUrl),!context.Container)return}catch(err){if("no distinct autofill container"!==err.message)return void log(err);context.Container=err.message}null==context.filledFieldInfo&&(context.filledFieldInfo=getFilledFieldInfo(context.Container));for(receiver of await getSingleReceiverInfos(receiverInfo))checkForAutofillSingleReceiver(receiver,context)}}}function getFilledFieldInfo(container){var info=new FilledFieldInfo;return info.addData(InputType.Username,!1),info.addData(InputType.Password,!1),container.HasOtpField&&info.addData(InputType.Otp,!1),info}async function getMainFrameUrlForReceiver(receiver){return receiver.isMultiReceiver?receiver.url:null!=(receiver=await getReceiverInfoForMainFrame(receiver))?receiver.url:void 0}async function checkForAutofillSingleReceiver(receiverInfo,context){var applications=getTemplatesForUrl(receiverInfo.url);try{return await checkLoginMask(receiverInfo,{Command:"CheckLoginMask",Data:{templates:applications&&0!==applications.length?applications[0].Templates:null,filledFieldInfo:context.filledFieldInfo,autofillTriggeredByUser:context.autofillTriggeredByUser},context:context})}catch(err){log(err)}}async function checkLoginMask(receiverInfo,message){try{return await sendMessageToSingleReceiver(receiverInfo,message)}catch(err){log(err)}}async function showAddPasswordDialog(receiverInfo,formDetectionResult){receiverInfo=await getReceiverInfoForMainFrame(receiverInfo);null!=receiverInfo&&await sendMessageToSingleReceiver(receiverInfo,{Command:"ShowAddPassword",Data:formDetectionResult})}async function showDisableAutofillForUrlDialog(receiverInfo){var url,matchingPasswords,receiverInfo=await getReceiverInfoForMainFrame(receiverInfo);null!=receiverInfo&&(url=receiverInfo.url,matchingPasswords=getMatchingContainersForUrl(containers,url))&&0!==matchingPasswords.length&&await sendMessageToSingleReceiver(receiverInfo,{Command:"ShowDisableAutofillForUrl",Data:{url:url,containers:matchingPasswords}})}async function showMultiplePasswordsFoundMessage(receiverInfo){await getInfoMessage()&&sendMessageToSingleReceiver(await getReceiverInfoForMainFrame(receiverInfo),{Command:"AutofillNotExecuted"})}async function getInfoMessage(){var infoMessageDismisses=JSON.parse(await getIndexedDBrecord("options","info_message_dismisses")||"{}");return JSON.parse(sessionStorage.info_message_dismisses||"{}").autofill_not_executed||infoMessageDismisses.autofill_not_executed?null:browser.i18n.getMessage("autofill_not_executed")}async function initGlobalConfigFromPWSServer(){fetch("https://netwrix.com/go/ps-product-addon-config",{cache:"no-store"}).then(result=>{result.json().then(config=>globalConfig=config)}).catch(r=>{log("exception getGlobalConfig",r)})}function createTemplate(){getActiveTab(function(tab){null!=tab&&browser.tabs.sendMessage(tab.id,{Command:MSG_CREATE_TEMPLATE},function(response){response&&log("Cleared clickedContainerId")})})}async function saveTemplate(msg){if(null!=msg)if(msg.advanced&&await saveIndexedDBrecord("options",msg.advanced.toString(),"advancedoptions"),msg.edit)await saveIndexedDBrecord("options",msg.template,"applicationTemplate");else if(await deleteIndexedDBrecord("options","applicationTemplate"),null!=msg.template&&0!==msg.template.length){let lastUrl=null;var templateList=[],template=JSON.parse(msg.template);for(let i=0;i<template.length;i++){var currentTemplate=template[i];currentTemplateUrl=currentTemplate.PsrElement.Url,null==lastUrl||currentTemplateUrl!==lastUrl?templateList.push({Url:currentTemplateUrl,Templates:[currentTemplate]}):templateList[templateList.length-1].Templates.push(currentTemplate),lastUrl=currentTemplateUrl}for(let i=0;i<templateList.length;i++){let fillscript={Url:templateList[i].Url,Templates:JSON.stringify(templateList[i].Templates)};var currentTemplates=getTemplatesForUrl(fillscript.Url);null!=currentTemplates&&0<currentTemplates.length&&(fillscript.ApplicationId=currentTemplates[0].ApplicationId);let updated=!1;for(let j=0;j<templates.length;j++)templates[j].Url===templateList[i].Url&&(templates[j]={Url:templateList[i].Url,Templates:templateList[i].Templates,ApplicationId:fillscript.ApplicationId},updated=!0);updated||templates.push({Url:templateList[i].Url,Templates:templateList[i].Templates,ApplicationId:fillscript.ApplicationId}),isServerConnected(sessions)&&sessions.forEach(s=>s.addApplication(fillscript))}}}async function searchForContainer(searchString){if(sessions){let foundContainers=[];var serverModeConnections=sessions.filter(s=>!!s.psrApi);if(!(0<serverModeConnections.length))return!1;for(let i=0;i<serverModeConnections.length;i++){var session=serverModeConnections[i];try{var containers=await session.searchForContainer(searchString);containers&&0<containers.length&&(foundContainers=foundContainers.concat(containers))}catch{}}return foundContainers}}function getError(errorRes){return browser.i18n.getMessage(errorRes)}async function getExtensionId(){let exid=await getIndexedDBrecord("options","id");return exid||(exid=generateUuid(),await saveIndexedDBrecord("options",exid,"id")),exid}async function logout(profileId){if(sessions){const session=sessions.find(s=>s.profileId===profileId);var profile;session&&(session.closeSession(),cleanSessions(),containers=containers.filter(c=>c.ProfileId!==session.profileId),templates=templates.filter(t=>t.ProfileId!==session.profileId),updateUi(),await startOrStopAutofillEngineForAllTabs(),await clearStateForAllTabs(),profile={DatabaseProfileId:(profile=(await loadDatabaseProfiles()).find(x=>x.profileId===session.profileId)).profileId,DatabaseId:profile.databaseId,DatabaseName:profile.databaseName,UserName:session.userName,WebClientUrl:profile.webClientUrl,HostIp:null},sendNativeMessage_LoginStatusChanged(profile,"LoggedOut",!1)),optionCanAddTemplate=sessions.some(s=>s.optionCanAddTemplate)}}function cleanSessions(){sessions&&sessions.length&&(sessions=sessions.filter(s=>s.connected))}async function onFinalizeLogin(){await connectionEstablished()}async function connectionEstablished(){}async function executeAutofillOnActiveTab(){await checkForAutofill(await getReceiverInfoFromActiveTabAllFrames())}function getActiveTabPromise(){return new Promise(resolve=>{getActiveTab(tab=>{resolve(tab)})})}function getTabPromise(tabId){return new Promise(resolve=>{browser.tabs.get(tabId,tab=>{resolve(tab)})})}async function onSessionExpired(){cleanSessions(),containers=containers.filter(c=>!!c.ProfileId),templates=templates.filter(t=>!!t.ProfileId),optionCanAddTemplate=sessions.some(s=>s.optionCanAddTemplate),updateUi()}function URIDecode(value){if(!value)return value;try{return decodeURIComponent(escape(value))}catch(ex){return value}}async function onConnectedToServer(session,doShowNotification){await refreshData(),doShowNotification&&showNotification(browser.i18n.getMessage("server_login_msg").format(session.databaseName))}function updateExtensionIcon(){var iconSet=isServerConnected(sessions)?UNLOCKED_ICON_SET:LOCKED_ICON_SET;browser.browserAction.setIcon({path:iconSet})}async function refreshData(){var reloadPromises;refreshing||(templates=[],optionCanAddTemplate=!1,optionPredefined=!1,setBadge(null),browser.runtime.sendMessage({msg:"Refresh"}),browser.runtime.sendMessage({msg:"ShowLoader"}),isServerConnected(sessions)&&(refreshing=!0,reloadPromises=sessions.map(async session=>{if(null!=session&&session.profileId){containers=containers.filter(c=>c.ProfileId!==session.profileId);let databaseProfile=await loadDatabaseProfile(session.profileId);await Promise.all([session.init(),session.getApplications().then(applications=>applications.forEach(t=>{t.ProfileId=session.profileId,templates.push(t)})),session.loadContainers().then(cont=>{cont.forEach(c=>c.Color=databaseProfile.color),cont.forEach(cc=>containers.push(cc))}).then(async()=>{await startOrStopAutofillEngineForAllTabs()}),session.loadOptions().then(()=>optionCanAddTemplate=optionCanAddTemplate||session.optionCanAddTemplate)]).catch(async err=>handleSessionError(err,session))}}),await Promise.all(reloadPromises).then(()=>{refreshing=!1,updateUi()})))}async function updateBadge(){var activeTab=await getActiveTabPromise();null!=activeTab&&null!=activeTab.url?setBadge(activeTab.url):getActiveTab(tab=>{null==tab||null==tab.url?setBadgeNumber(0):setBadge(tab.url)})}function updateUi(){browser.runtime.sendMessage({msg:"UpdateUi"}),null!=activeTab&&null!=activeTab.url?setBadge(activeTab.url):getActiveTab(tab=>{null==tab||null==tab.url?setBadgeNumber(0):setBadge(tab.url)}),browser.runtime.sendMessage({msg:"HideLoader"}),browser.runtime.sendMessage({msg:"Refresh"}),updateExtensionIcon()}function setOpenInWebClientProfileId(id){openInWebClientProfileId=id}window.browser=window.msBrowser||window.browser||window.chrome;let pendingAuthInformation=null,pendingAuthInformationClearTimeout=null;function showNotificationPasswordIncorrect(details){showNotificationIfNotShownAlready(details,browser.i18n.getMessage("autofill_http_basic_auth_invalid_password"))}function showNotificationMultiplePasswords(details){showNotificationIfNotShownAlready(details,browser.i18n.getMessage("autofill_not_executed"))}function hasNotificationBeenShown(tabId,host,message){tabId=displayedNotifications.get(tabId);return tabId&&tabId.get(host)===message}function markNotificationAsShown(tabId,host,message){let tabNotifications=displayedNotifications.get(tabId);tabNotifications||(tabNotifications=new Map,displayedNotifications.set(tabId,tabNotifications)),tabNotifications.set(host,message)}function showNotificationIfNotShownAlready(details,message){var host=new URL(details.url).host;hasNotificationBeenShown(details.tabId,host,message)||(showNotification(message),markNotificationAsShown(details.tabId,host,message))}function deleteDisplayedNotificationsForTab(tabId){displayedNotifications.delete(tabId)}function resetAddPasswordTabResults(tabId){addPasswordTabResults.delete(tabId)}function completeAuthRequest(details){authRequests.has(details.requestId)&&(!0===authRequests.get(details.requestId).filled&&401===details.statusCode&&-1===navigator.userAgent.indexOf("Firefox")&&showNotificationPasswordIncorrect(details),authRequests.delete(details.requestId))}function onAuthRequestError(details){authRequests.has(details.requestId)&&authRequests.delete(details.requestId)}async function getBasicAuthCredentials(details){try{if(logVerbose("Basic HTTP Authentication",details),isServerConnected(sessions)){var container=getContainer(containers,details.url);if(null!=container){var credentials=await getContainerCredentials(container);if(null!=credentials)return logVerbose("Filling - Basic HTTP Authentication",details),{authCredentials:{username:credentials.username,password:credentials.password}}}}}catch(err){"no distinct autofill container"===err.message?(logVerbose("Basic HTTP Authentication - Autofill - no distinct autofill container",details.url),showNotificationMultiplePasswords(details)):logVerbose("Basic HTTP Authentication - Error",err)}}async function getContainerCredentials(ssoContainer){if(isServerConnected(sessions)){const session=findSession(ssoContainer.ContainerId);ssoContainer=await session.getContainer(ssoContainer.ContainerId).catch(async err=>handleSessionError(err,session));if(null==ssoContainer||null==ssoContainer.Items)return null;if(await session.isSealed(ssoContainer).catch(async err=>handleSessionError(err,session)))return null;let userItem=ssoContainer.Items.find(c=>13===c.ContainerItemType);(userItem=userItem&&userItem.Value?userItem:ssoContainer.Items.find(c=>c.Name&&"username"===c.Name.toLowerCase()))&&userItem.Value||(userItem=ssoContainer.Items.find(c=>5===c.ContainerItemType));ssoContainer=ssoContainer.Items.find(c=>1===c.ContainerItemType),ssoContainer=await session.decryptContainerItem(ssoContainer,browser.i18n.getMessage("autofill_reason")).catch(async err=>handleSessionError(err,session));return{username:userItem.Value,password:ssoContainer}}}async function onContainerClicked(containerId){var container=containers.find(c=>c.ContainerId===containerId);const context={Container:container,autofillTriggeredByUser:!0};var receiverInfo=await getReceiverInfoFromActiveTabAllFrames();null!=receiverInfo&&containerMatchesUrl(container,receiverInfo.url)?(nextStepState[receiverInfo.tabId]&&nextStepState[receiverInfo.tabId].reset(),await checkForAutofill(receiverInfo,context)):(madeNewTab=!0,receiverInfo=makeValidUrl(container.Urls[0]),browser.tabs.create({url:receiverInfo},function(tab){nextContextToUseState[tab.id]=context}))}function onUrlClicked(request){if(isServerConnected(sessions)){if(isServerConnected(sessions))if(!sessions.find(s=>s.databaseName.toLowerCase()===request.database.toLowerCase()&&s.userName===request.username))return;var container=containers.find(c=>c.ContainerId===request.containerId);container&&(nextContextForNewTab={Container:container,autofillTriggeredByUser:!1},madeNewTab=!0)}}function checkDetectionResultTransfer(detectionResult){setTimeout(()=>{var indexOfResult=detectionResults.indexOf(detectionResult);-1!==indexOfResult&&(detectionResults.splice(indexOfResult,1),showNotification(browser.i18n.getMessage("webclient_too_old_or_not_found")))},1e4)}function updateActiveTab(tab){(activeTab=tab)&&(activeTab.isWebClientLoggedIn=tabIdToLoggedInWebClient[activeTab.id],setBadge(tab.url),browser.runtime.sendMessage({msg:"Refresh"}))}browser.webNavigation.onCommitted.addListener(details=>{nextContextForNewTab&&0===details.frameId&&"link"===details.transitionType&&(nextContextToUseState[details.tabId]=nextContextForNewTab,nextContextForNewTab=null),0!==details.frameId||"typed"!==details.transitionType&&"reload"!==details.transitionType&&"auto_bookmark"!==details.transitionType||clearStateForTab(details.tabId)}),mv.addAuthRequiredListener(async details=>{try{let authRequestEntry;if(authRequests.has(details.requestId))return-1!==navigator.userAgent.indexOf("Firefox")&&!0===(authRequestEntry=authRequests.get(details.requestId)).filled&&showNotificationPasswordIncorrect(details),null;authRequests.set(details.requestId,{filled:!1}),authRequestEntry=authRequests.get(details.requestId);var result=await getBasicAuthCredentials(details);return null==result?(authRequestEntry.filled=!1,null):(authRequestEntry.filled=!0,result)}catch(err){return null}}),browser.webRequest.onCompleted.addListener(details=>completeAuthRequest(details),{urls:["<all_urls>"]}),browser.webRequest.onErrorOccurred.addListener(details=>onAuthRequestError(details),{urls:["<all_urls>"]}),browser.runtime.onMessage.addListener(function(request,sender,sendResponse){return async function(){if("DOMContentLoaded"===request.command)return receiverInfo=getReceiverInfoFromSender(sender),logVerbose("DomContentLoaded",sender,receiverInfo),unblockAutofillForTabId(receiverInfo.tabId),await startOrStopAutofillEngine(receiverInfo),await startLoginDetectionIfRequired(receiverInfo),await startWebClientDetectionIfMainFrame(receiverInfo),await showDialogsWhichDismissedAfterPageReload(receiverInfo),!1;if("InputFieldAdded"===request.command){const receiverInfo=getReceiverInfoFromSender(sender);return logVerbose("InputFieldAdded",receiverInfo,request.addedInputFieldInfo),checkForAutofill(receiverInfo),!1}if("SaveTemplateCommand"===request.command)return await saveTemplate(request.data),!0;function serializeError(error){return Object.getOwnPropertyNames(error).reduce((result,key)=>(result[key]=error[key],result),{isError:!0})}function isValidUrl(url){try{return Boolean(new URL(url))}catch(e){return!1}}async function getTrustedWebClientSessionsByUrl(url){let profiles=await loadDatabaseProfiles();return profiles=profiles.filter(p=>p.webClientUrl).filter(p=>isValidUrl(p.webClientUrl)&&new URL(p.webClientUrl).host===new URL(url).host),sessions.filter(s=>profiles.some(p=>s.profileId===p.profileId))}async function getTrustedWebClientSession(url,database,userId){let profiles=await loadDatabaseProfiles();return profiles=profiles.filter(p=>p.webClientUrl).filter(p=>p.databaseName===database).filter(p=>isValidUrl(p.webClientUrl)&&new URL(p.webClientUrl).host===new URL(url).host),sessions.find(s=>profiles.some(p=>s.profileId===p.profileId)&&s.user.Id===userId)}if("ForkSession"===request.command){const sessions=await getTrustedWebClientSessionsByUrl(sender.tab.url);if(!sessions.length)return;var receiverInfo=sessions.find(s=>detectionResults.find(dr=>dr.profileId===s.profileId))||sessions.find(s=>s.profileId===openInWebClientProfileId)||sessions[0],sessionForkParameters=(openInWebClientProfileId=null,request.sessionForkParameters);try{return receiverInfo.forkSession(sessionForkParameters.clientInstanceId,sessionForkParameters.clientType,sessionForkParameters.clientVersion)}catch(err){throw await handleSessionError(err,receiverInfo),err}}if("ReceiveDetectionResult"===request.command){if(!(sessions&&sessions.length&&detectionResults&&detectionResults.length))return null;const session=await getTrustedWebClientSession(sender.tab.url,request.database,request.userId);return session?(sessionForkParameters=detectionResults.find(d=>d.url===new URL(sender.tab.url).host))?(receiverInfo=detectionResults.indexOf(sessionForkParameters),detectionResults.splice(receiverInfo,1),sessionForkParameters.profileId!==session.profileId?{error:"SessionMismatch"}:sessionForkParameters.detectionResult):null:{error:"SessionMismatch"}}if("RefreshFromWebClient"===request.command){if(!sessions||!sessions.length)return;const session=await getTrustedWebClientSession(sender.tab.url,request.database,request.userId);if(!session)return;await refreshData()}if("SidebarAddTemplateCommand"===request.command)return browser.tabs.sendMessage(sender.tab.id,{Command:request.command,Data:request.data}),!0;if("BlockUrl"===request.command)return receiverInfo=getCompareUrl(sender.tab.url),blockUrl(receiverInfo),!0;if("FormSubmitDetected"===request.command){if(await addPasswordDisabled(request.formDetectionResult.url))return;const receiverInfo=getReceiverInfoFromSender(sender);void handleAddPasswordRequest(receiverInfo,request.formDetectionResult,!0)}else{if("AddPasswordClosed"!==request.command){if("BlockUrlFromAddPassword"===request.command&&(sessionForkParameters=await getUrlsBlockedFromAddPassword(),receiverInfo=getCompareUrl(request.url),-1===sessionForkParameters.indexOf(receiverInfo))&&await saveIndexedDBrecord("urlsBlockedFromAddPassword",{url:receiverInfo}),"OpenWebAppAddPassword"===request.command&&await openWebAppAddPassword(request.detectionResult,request.profileId),"SaveChanges"===request.command){var sessionForkParameters=request.container;if(!sessionForkParameters)return;const session=await getTrustedSessionByContainerId(sessionForkParameters.ContainerId);if(!session)return;try{return await session.session.updateContainerWithDetectionResult(sessionForkParameters.ContainerId,request.detectionResult)}catch(err){throw await handleSessionError(err,session),err}}if("VerifyChanges"===request.command){const container=request.container;if(!container)return;const session=await getTrustedSessionByContainerId(container.ContainerId);if(!session)return;var receiverInfo=session.profile;if(!receiverInfo)return;const detectionResult={url:new URL(session.profile.webClientUrl).host,detectionResult:request.detectionResult,profileId:session.session.profileId};detectionResults.push(detectionResult);var sessionForkParameters=await sendMessageToFirstWebClientTab(receiverInfo,{Command:"OpenPasswordEditTab",Message:{id:container.ContainerId}});sessionForkParameters?browser.tabs.update(sessionForkParameters.id,{active:!0}):browser.tabs.create({url:new URL(session.profile.webClientUrl+"/password/edit/"+container.ContainerId).href}),checkDetectionResultTransfer(detectionResult)}if("HighCpuUsageDetected"===request.command){const receiverInfo=getReceiverInfoFromSender(sender);await showDisableAutofillForUrlDialog(receiverInfo)}if("DisableAutofillForUrl"===request.command&&await disableAutofillForUrl(request.disableAutofillData.url),"LoggedInWebClientDetected"===request.command&&await setIsWebClientLoggedIn(sender.tab.id,!0),"LoggedInWebClientRemovedFromTab"===request.command&&await setIsWebClientLoggedIn(sender.tab.id,!1),"GeneratePassword"===request.command&&(receiverInfo=new PsrApi(""),sendResponse(receiverInfo.passwordManager.generatePolicyPassword({PasswordLenght:23,MinimumPasswordQuality:100,LowerCase:!0,UpperCase:!0,Numbers:!0,SpecialChars:!0,SpecialCharList:"!#+-_",RequiredCategories:4})),showNotification(browser.i18n.getMessage("generated_and_copied_to_clipboard"))),"GetOptionLogging"===request.command)return sessionForkParameters=await mv.getStoreEntry("option_logging"),sendResponse(sessionForkParameters),!0;if("OnUrlClickedFromWebClient"===request.command&&onUrlClicked(request),"SetNextStepState"===request.command){receiverInfo=request.context;const tabId=sender.tab.id;nextStepState[tabId]&&nextStepState[tabId].reset(),nextStepState[tabId]={context:receiverInfo,timeout:setTimeout(()=>{delete nextStepState[tabId]},TIME_NEXT_STEP_WILL_GET_FILLED),reset:function(){clearTimeout(this.timeout),delete nextStepState[tabId]}}}if("LoginMaskFound"===request.command){const context=request.context,receiverInfo=(context.filledFieldInfo&&Object.setPrototypeOf(context.filledFieldInfo,FilledFieldInfo.prototype),getReceiverInfoFromSender(sender));await autofill(receiverInfo,context)}if("ShowNeverAgainInfoMessage"===request.command&&((sessionForkParameters=JSON.parse(await getIndexedDBrecord("options","info_message_dismisses")||"{}")).autofill_not_executed=!0,await saveIndexedDBrecord("options",JSON.stringify(sessionForkParameters),"info_message_dismisses")),"GetFirstAuthentication"===request.command){const profile=request.profile;receiverInfo=request.username;authentication=new Authentication(profile,receiverInfo);try{return await authentication.getFirstAuthentication()}catch(err){return serializeError(err)}}if("updateMspBannerDisabledOption"===request.command)try{var disabledUntilUtc=request.disabledUntilUtc;const session=sessions.find(s=>s.profileId===request.currentUserId.profileId);session.setDisabledUntilUtc(disabledUntilUtc)}catch(error){}if("getRemainingMspDays"===request.command)try{const session=sessions.find(s=>s.profileId===request.currentUserId.profileId);return await session.getRemainingMspDays()}catch(error){}if("Authenticate"===request.command)try{let res=await authentication.authenticate(request.authResult,request.authRunData);if(res.authResult.psrApi){cleanSessions();const profile=authentication.profile,username=authentication.username;var databaseId=res.authResult.databaseId;await loadDatabaseProfile(profile.profileId)&&(profile.databaseId=databaseId,await updateDatabaseProfile(profile));const session=new Session(profile.profileId,databaseId,profile.databaseName,profile.endpoint,username,null,onSessionExpired,res.authResult.psrApi);return session.color=profile.color,sessions.push(session),await session.init(),await onConnectedToServer(session,!0),authentication=null,{profile:profile,username:username}}return setPendingAuthInformation(res),res}catch(err){return serializeError(err)}if("GetHandledRequirement"===request.command)try{return await authentication.getHandledRequirement(request.configRequirement,request.authRunData)}catch(err){return serializeError(err)}if("SetPendingAuthInformation"===request.command&&setPendingAuthInformation(request.pendingAuthInformation),"FinalizeLogin"===request.command&&await onFinalizeLogin(),"GetPendingAuthInformation"===request.command)return pendingAuthInformation;if("SupportsAuthFlow"===request.command)try{const profile=request.profile,username=request.username;return await(authentication||new Authentication(profile,username)).supportsAuthFlow()}catch{return!1}return"ValidateUserPassword"===request.command?authentication.validateUserPassword(request.policy,request.password):"SearchForContainer"===request.command?searchForContainer(request.search):void 0}resetAddPasswordTabResults(sender.tab.id)}}().then(sendResponse).catch(err=>sendResponse({error:err})),!0}),browser.tabs.onActivated.addListener(async function(tabId){await deleteIndexedDBrecord("options","lastsearch"),getActiveTab(updateActiveTab)});const detectionResults=[],tabIdToLoggedInWebClient={};async function setIsWebClientLoggedIn(tabId,isLoggedIn){let currentState=tabIdToLoggedInWebClient[tabId];null==currentState&&(currentState=!1),isLoggedIn?tabIdToLoggedInWebClient[tabId]=isLoggedIn:delete tabIdToLoggedInWebClient[tabId],currentState!=isLoggedIn&&(isLoggedIn=await getActiveTabPromise())&&isLoggedIn.id===tabId&&updateActiveTab(isLoggedIn)}async function openWebAppAddPassword(detectionResult,profileId){let trustedProfiles=await loadDatabaseProfiles();var profile,webClientTab;(trustedProfiles=trustedProfiles.filter(p=>p.webClientUrl))&&(profile=trustedProfiles.find(p=>sessions.some(s=>s.profileId===p.profileId)&&p.profileId===profileId))&&(detectionResult={url:new URL(profile.webClientUrl).host,detectionResult:detectionResult,profileId:profile.profileId},detectionResults.push(detectionResult),(webClientTab=await sendMessageToFirstWebClientTab(profile,{Command:"OpenNewPasswordTab"}))?browser.tabs.update(webClientTab.id,{active:!0}):browser.tabs.create({url:new URL(profile.webClientUrl+"/password/new-password").href}),checkDetectionResultTransfer(detectionResult))}function handleAddPasswordRequest(receiverInfo,formDetectionResult,isInitialRequest){formDetectionResult&&isServerConnected(sessions)&&(!0===isInitialRequest&&addPasswordTabResults.set(receiverInfo.tabId,formDetectionResult),debounce(()=>prepareAndShowAddPasswordDialog(receiverInfo,formDetectionResult),addPasswordTimeoutsMap,receiverInfo.tabId,ADD_PASSWORD_DEBOUNCE_TIMEOUT))}async function prepareAndShowAddPasswordDialog(receiverInfo,request){if(isServerConnected(sessions)){const matchingContainersForUrl=getMatchingContainersForUrl(containers,request.url),matchingContainersForUsername=containers.filter(mc=>!!request.fields.filter(f=>"password"!==f.type).find(f=>mc.ContainerUserName&&f.value.toLowerCase()===mc.ContainerUserName.toLowerCase())),exactMatch=matchingContainersForUrl.find(c=>!!matchingContainersForUsername.find(uc=>uc===c));var uniqueMatchingContainersForUrl=matchingContainersForUrl.filter(c=>!matchingContainersForUsername.find(uc=>uc===c)&&c!==exactMatch),uniqueMatchingContainersForUsername=matchingContainersForUsername.filter(c=>!matchingContainersForUrl.find(uc=>uc===c)&&c!==exactMatch);const matchingContainersByRelevance=[],profiles=(exactMatch&&matchingContainersByRelevance.push({container:exactMatch,exactMatch:!0}),uniqueMatchingContainersForUrl.forEach(c=>matchingContainersByRelevance.push({container:c,urlMatch:!0})),uniqueMatchingContainersForUsername.forEach(c=>matchingContainersByRelevance.push({container:c,usernameMatch:!0})),await loadDatabaseProfiles());request.sessions=sessions.map(s=>{var profile=profiles.find(p=>p.profileId===s.profileId);return{profileId:profile.profileId,profileName:profile.profileName,database:profile.databaseName}}),request.matchingContainers=matchingContainersByRelevance;uniqueMatchingContainersForUrl=await getIndexedDBrecord("options","secretSquirrel");request.showAddPasswordDebugDialog="true"===uniqueMatchingContainersForUrl,await showAddPasswordDialog(receiverInfo,request)}}async function autofillDisabled(url){return-1!==(await loadDatabaseProfiles()).map(p=>getCompareUrl(p.webClientUrl)).indexOf(getCompareUrl(url))}async function showDialogsWhichDismissedAfterPageReload(receiverInfo){try{0===receiverInfo.frameId&&addPasswordTabResults.has(receiverInfo.tabId)&&handleAddPasswordRequest(receiverInfo,addPasswordTabResults.get(receiverInfo.tabId))}catch(err){console.warn(err)}}function doesAutofillNeedToBeEnabledForUrl(url){return hasAnyMatchingContainerForUrl(containers,url)}async function startOrStopAutofillEngine(receiverInfo){try{var mainUrl=await getMainFrameUrlForReceiver(receiverInfo);void 0!==mainUrl&&(doesAutofillNeedToBeEnabledForUrl(mainUrl)?await sendMessageToSingleReceiver(receiverInfo,{Command:"StartDetectingVisibleInputFields"}):await sendMessageToSingleReceiver(receiverInfo,{Command:"StopDetectingVisibleInputFields"}))}catch(err){console.warn(err)}}async function startOrStopAutofillEngineForAllTabs(){try{for(const tab of await getAllTabsPromise())try{var shouldEnableAutofill=doesAutofillNeedToBeEnabledForUrl(tab.url);await startOrStopAutofillEngineForTab(tab,shouldEnableAutofill)}catch(error){}}catch(error){console.warn("Error in startOrStopAutofillEngineForAllTabs:",error)}}async function startOrStopAutofillEngineForTab(tab,start){await browser.tabs.sendMessage(tab.id,{Command:start?"StartDetectingVisibleInputFields":"StopDetectingVisibleInputFields"})}async function disableAutofillForUrl(url){console.log("DisableAutofillForUrl",url);const matchingContainers=getMatchingContainersForUrl(containers,url);if(matchingContainers&&0!==matchingContainers.length)try{for(var container of matchingContainers)try{const session=await getTrustedSessionByContainerId(container.ContainerId);session&&await session.session.disableAutofillForContainer(container.ContainerId)}catch(err){throw await handleSessionError(err,session),err}}finally{containers=containers&&containers.filter(container=>!matchingContainers.some(matchingContainer=>matchingContainer.ContainerId===container.ContainerId));for(const tab of await getAllTabsPromise())getCompareUrl(tab.url)===getCompareUrl(url)&&await startOrStopAutofillEngineForTab(tab,!1);await updateBadge()}}async function startWebClientDetectionIfMainFrame(receiverInfo){try{await isMainFrameReceiver(receiverInfo)&&(await setIsWebClientLoggedIn(receiverInfo.tabId,!1),await sendMessageToSingleReceiver(receiverInfo,{Command:"StartWebClientDetection"}))}catch(err){console.log(err)}}async function startLoginDetectionIfRequired(receiverInfo){try{await addPasswordDisabled(receiverInfo.url)||await sendMessageToSingleReceiver(receiverInfo,{Command:"StartLoginDetection"})}catch(error){console.warn(error)}}async function addPasswordDisabled(url){var optionAddPassword=await getIndexedDBrecord("options","add_password");return void 0!==optionAddPassword&&"true"!==optionAddPassword||(optionAddPassword=(await loadDatabaseProfiles()).map(p=>getCompareUrl(p.webClientUrl)),-1!==[...await getUrlsBlockedFromAddPassword(),...optionAddPassword].indexOf(getCompareUrl(url)))}async function sendMessageToFirstWebClientTab(dbProfile,message){var dbProfile=await getTabsWithWebClientAndMatchingProfile(dbProfile);if(0!==dbProfile.length)return await sendMessageToWebClientTab(dbProfile=dbProfile[0],message),dbProfile}async function getTabsWithWebClientAndMatchingProfile(dbProfile){let tabs=(await getAllTabsPromise()).filter(tab=>tab.isWebClientLoggedIn);tabs=tabs.filter(tab=>getCompareUrl(tab.url)===getCompareUrl(dbProfile.webClientUrl));var tab,message={Command:"DetectDatabaseProfile"},tabsWithWebClient=[];for(tab of tabs){var profile=await sendMessageToSingleReceiver({frameId:0,tabId:tab.id},message);profile&&profile.endpoint&&profile.webClientUrl&&profile.database&&profile.database.toLowerCase()===dbProfile.databaseName.toLowerCase()&&tabsWithWebClient.push(tab)}return tabsWithWebClient}async function sendMessageToWebClientTab(tab,tabMessage){return await sendMessageToSingleReceiver({frameId:0,tabId:tab.id},{Command:"SendMessageToWebClient",Message:tabMessage})}async function getAllTabsPromise(){return new Promise(resolve=>{browser.tabs.query({currentWindow:!0},function(arrayOfTabs){for(var currentTab of arrayOfTabs)currentTab.isWebClientLoggedIn=tabIdToLoggedInWebClient[currentTab.id];resolve(arrayOfTabs)})})}function addDatabaseProfileOfActiveTab(){activeTab&&browser.tabs.sendMessage(activeTab.id,{Command:"DetectDatabaseProfile"},async p=>{if(p&&p.endpoint&&p.webClientUrl&&p.database){var{webClientUrl,endpoint}=p;let webClientUrlForProfile=webClientUrl;0===webClientUrl.indexOf("https://")&&(webClientUrlForProfile=webClientUrl.split("https://")[1]),0===webClientUrl.indexOf("http://")&&(webClientUrlForProfile=webClientUrl.split("http://")[1]);const profile={color:getColorByString(p.endpoint+p.database),profileId:generateUuid(),profileName:webClientUrlForProfile.split(":")[0].split("/")[0]+" => "+p.database,webClientUrl:webClientUrl,endpoint:endpoint,databaseName:p.database,userName:p.username};webClientUrl=(await loadDatabaseProfiles()).find(p=>p.webClientUrl===profile.webClientUrl&&p.databaseName===profile.databaseName);webClientUrl?browser.runtime.sendMessage({msg:"RefreshProfile",profile:webClientUrl}):(await saveDatabaseProfile(profile),showNotification(browser.i18n.getMessage("profile_successfully_created").format(profile.profileName)),browser.runtime.sendMessage({msg:"Refresh",profile:profile}))}})}async function clearStateForAllTabs(){try{for(const tab of await getAllTabsPromise())try{clearStateForTab(tab.id)}catch(error){console.warn("Error clearing state for tab",tab,error)}}catch(err){console.warn("Error in clearStateForAllTabs:",err)}}function clearStateForTab(tabId){nextStepState[tabId]&&nextStepState[tabId].reset(),null!=nextContextToUseState[tabId]&&delete nextContextToUseState[tabId],null!=lastFilledStateAutoSubmit[tabId]&&([...lastFilledStateAutoSubmit[tabId]].forEach(fillState=>{fillState.reset()}),delete lastFilledStateAutoSubmit[tabId]),unblockAutofillForTabId(tabId),deleteDisplayedNotificationsForTab(tabId),resetAddPasswordTabResults(tabId)}function addFillInfo(fillInfo,msg,receiverInfo){const fillState={ContainerId:msg.ContainerId,fillInfo:fillInfo},tabId=receiverInfo.tabId;fillState.timeout=setTimeout(()=>{lastFilledStateAutoSubmit[tabId]=lastFilledStateAutoSubmit[tabId].filter(state=>state!==fillState)},TIME_AUTOSUBMIT_BLOCKED),fillState.reset=function(){clearTimeout(fillState.timeout),lastFilledStateAutoSubmit[tabId]=lastFilledStateAutoSubmit[tabId].filter(state=>state!==fillState)},lastFilledStateAutoSubmit[tabId]?lastFilledStateAutoSubmit[tabId].push(fillState):lastFilledStateAutoSubmit[tabId]=[fillState]}function blockAutofillForReceiver(receiverInfo){logVerbose("blockAutofillForReceiver",receiverInfo);var tabId=receiverInfo.tabId;null==blockedFills[tabId]&&(blockedFills[tabId]={}),blockedFills[tabId][getIdForReceiver(receiverInfo)]=!0}function unblockAutofillForTabId(tabId){logVerbose("unblockAutofillForTabId",tabId),blockedFills[tabId]=null}function isAutofillBlockedForReceiver(receiverInfo){var tabId=receiverInfo.tabId;return null!=blockedFills[tabId]&&(receiverInfo=getIdForReceiver(receiverInfo),!0===blockedFills[tabId][receiverInfo])}async function getAllFramesInTab(tabId,onlyActive){return new Promise((resolve,reject)=>{browser.webNavigation.getAllFrames({tabId:tabId},function(frames){onlyActive&&(frames=frames.filter(frame=>null==frame.documentLifecycle||"active"==frame.documentLifecycle)),browser.runtime.lastError?reject(browser.runtime.lastError):resolve(frames)})})}async function getFrameInTab(tabId,frameId){return getFrame({tabId:tabId,frameId:frameId})}async function getFrameOfReceiver(receiverInfo){var details={tabId:receiverInfo.tabId};return null!=receiverInfo.documentId?details.documentId=receiverInfo.documentId:details.frameId=receiverInfo.frameId,getFrame(details)}async function getFrame(details){return new Promise((resolve,reject)=>{browser.webNavigation.getFrame(details,function(frame){browser.runtime.lastError?reject(browser.runtime.lastError):resolve(frame)})})}async function getParentFrame(frame,tabId){if("outermost_frame"===frame.frameType||-1===frame.parentFrameId)return null;if(null!=frame.parentDocumentId)return await getFrame({tabId:tabId,documentId:frame.parentDocumentId});{const parentFrame=await getFrame({tabId:tabId,frameId:frame.parentFrameId});return parentFrame}}async function getMainFrameOfFrame(frame,tabId){let currentFrame=frame;for(;;){var parentFrame=await getParentFrame(currentFrame,tabId);if(null==parentFrame)return currentFrame;if(null!=parentFrame.documentId){if(parentFrame.documentId==currentFrame.documentId)return parentFrame}else if(parentFrame.frameId==currentFrame.frameId)return parentFrame;currentFrame=parentFrame}}async function getSingleReceiverInfos(receiverInfo){return!0===receiverInfo.isMultiReceiver?(await getAllFramesInTab(receiverInfo.tabId,!0)).filter(frame=>"about:blank"!==frame.url).map(frame=>getReceiverInfoFromFrame(frame,receiverInfo.tabId)):[receiverInfo]}function getReceiverInfoFromSender(sender){var receiverInfo={frameId:sender.frameId,tabId:sender.tab.id,url:sender.url};return null!=sender.documentId&&(receiverInfo.documentId=sender.documentId),receiverInfo}function getReceiverInfoFromFrame(frame,tabId){tabId={frameId:frame.frameId,tabId:tabId,url:frame.url};return null!=frame.documentId&&(tabId.documentId=frame.documentId),tabId}async function getReceiverInfoFromActiveTabAllFrames(){var tab=await getActiveTabPromise();return null==tab?null:receiverInfo={isMultiReceiver:!0,frameId:null,tabId:tab.id,url:tab.url}}async function getReceiverInfoForActiveMainFrame(receiverInfo){var receiver={frameId:0,tabId:receiverInfo.tabId},frame=await getFrameInTab(receiverInfo.tabId,0);return null!=frame.documentId&&(receiverInfo.documentId=frame.documentId),receiver.url=frame.url,receiver}async function isMainFrameReceiver(receiverInfo){var mainFrame=await getReceiverInfoForMainFrame(receiverInfo);return null!=mainFrame&&(receiverInfo.documentId?mainFrame.documentId===receiverInfo.documentId:receiverInfo.frameId===mainFrame.frameId)}async function getReceiverInfoForMainFrame(receiverInfo){var frame=await getFrameOfReceiver(receiverInfo);return null==frame?null:getReceiverInfoFromFrame(await getMainFrameOfFrame(frame,receiverInfo.tabId),receiverInfo.tabId)}async function getReceiverInfoFromActiveTabMainFrame(){var receiverInfo,tab=await getActiveTabPromise();return null==tab?null:(receiverInfo={frameId:0,tabId:tab.id,url:tab.url},null!=(tab=await getFrameInTab(tab.id,0)).documentId&&(receiverInfo.documentId=tab.documentId),receiverInfo)}function getIdForReceiver(receiverInfo){return receiverInfo.tabId+"-"+(receiverInfo.documentId||receiverInfo.frameId)}async function sendMessageToAllReceivers(receiverInfo,message,callback){var frame;if(null==receiverInfo.frameId)for(frame of await getAllFramesInTab(receiverInfo.tabId,!0)){const singleReceiverInfo=getReceiverInfoFromFrame(frame,receiverInfo.tabId);sendMessageToSingleReceiver(singleReceiverInfo,message).then(result=>{callback&&callback(singleReceiverInfo,result)}).catch(error=>{console.error("Error sending message to frame:",error)})}else sendMessageToSingleReceiver(receiverInfo,message).then(result=>{callback&&callback(receiverInfo,result)}).catch(error=>{console.error("Error sending message to frame:",error)})}function sendMessageToSingleReceiver(receiverInfo,message){if(null==receiverInfo.tabId)throw error("sendMessageToSingleReceiver tabId is empty",receiverInfo);if(null==receiverInfo.frameId&&null==receiverInfo.documentId)throw error("sendMessageToSingleReceiver frameId and documentId is empty",receiverInfo);if(!0===receiverInfo.isMultiReceiver)throw error("sendMessageToSingleReceiver trying to send a message with isMultiReceiver = true",receiverInfo);let options;return options=null!=receiverInfo.documentId?{documentId:receiverInfo.documentId}:{frameId:receiverInfo.frameId},new Promise((resolve,reject)=>{browser.tabs.sendMessage(receiverInfo.tabId,message,options,function(response){browser.runtime.lastError?reject(browser.runtime.lastError):resolve(response)})})}function delay(ms){return new Promise(resolve=>setTimeout(resolve,ms))}function disableBrowserPasswordManagement(){0===getBrowserName().indexOf("Firefox")?setInterval(()=>{browser.privacy.services.passwordSavingEnabled.get({}).then(setting=>{"controlled_by_this_extension"!==setting.levelOfControl&&"controllable_by_this_extension"!==setting.levelOfControl||browser.privacy.services.passwordSavingEnabled.set({value:!1})})},1e3):browser&&browser.privacy&&browser.privacy.services&&browser.privacy.services.passwordSavingEnabled.get({},setting=>{"controlled_by_this_extension"!==setting.levelOfControl&&"controllable_by_this_extension"!==setting.levelOfControl||browser.privacy.services.passwordSavingEnabled.set({value:!1})})}function setPendingAuthInformation(newPendingAuthInformation){clearTimeout(pendingAuthInformationClearTimeout),pendingAuthInformationClearTimeout=setTimeout(()=>pendingAuthInformation=null,6e5),pendingAuthInformation=newPendingAuthInformation}browser.tabs.onUpdated.addListener(async function(tabId,changeInfo,tab){tab&&(tab.isWebClientLoggedIn=tabIdToLoggedInWebClient[tabId]),"complete"===changeInfo.status&&tab&&tab.url&&(null!=activeTab&&activeTab.id!=tabId||(activeTab=tab,setBadge(tab.url),null!=(changeInfo=await getIndexedDBrecord("options","applicationTemplate"))&&browser.tabs.sendMessage(tabId,{Command:MSG_EDIT_TEMPLATE,Data:{templates:changeInfo,edit:!0}})))}),browser.browserAction.setBadgeBackgroundColor({color:OPTION_BADGE_COLOR}),"function"==typeof browser.browserAction.setBadgeTextColor&&browser.browserAction.setBadgeTextColor({color:"#fff"}),async function(){updateUi(),initGlobalConfigFromPWSServer(),disableBrowserPasswordManagement()}();