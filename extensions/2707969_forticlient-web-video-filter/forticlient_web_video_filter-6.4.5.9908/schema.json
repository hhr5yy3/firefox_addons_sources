{
  "type": "object",

  // "properties" maps an optional key of this object to its schema. At the
  // top-level object, these keys are the policy names supported.
  "properties": {

    // The policy name "AutoSave" is mapped to its schema, which in this case
    // declares it as a simple boolean value.
    // "title" and "description" are optional and are used to show a
    // user-friendly name and documentation to the administrator.
    
    //"AutoSave": {
    //  "title": "Automatically save changes.",
    //  "description": "If set to true then changes will be automatically saved.",
    //  "type": "boolean"
    //},

    // Other simple types supported include "integer", "string" and "number".
    //"PollRefreshRate": {
    //  "type": "integer"
    //},

    //"DefaultServiceUrl": {
    //  "type": "string"
    //},

    // "array" is a list of items that conform to another schema, described
    // in "items". An example to this schema is [ "one", "two" ].
    //"ServiceUrls": {
    //  "type": "array",
    //  "items": {
    //    "type": "string"
    //  }
    //},

    // A more complex example that describes a list of bookmarks. Each bookmark
    // has a "title", and can have a "url" or a list of "children" bookmarks.
    // The "id" attribute is used to name a schema, and other schemas can reuse
    // it using the "$ref" attribute.
    
    //"Bookmarks": {
    //  "type": "array",
    //  "id": "ListOfBookmarks",
    //  "items": {
    //    "type": "object",
    //    "properties": {
    //      "title": { "type": "string" },
    //      "url": { "type": "string" },
    //      "children": { "$ref": "ListOfBookmarks" }
    //    }
    //  }
    //},
    
    "ProfileServerUrl": {
      "type": "string"
    },

    "AuthServerUrl": {
      "type": "string"
    },
    
    "RatingServerUrl": {
      "type": "string"
    }
  }
}
