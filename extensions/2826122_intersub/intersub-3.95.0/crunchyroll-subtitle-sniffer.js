(()=>{"use strict";class e{constructor(){this.logDebugMessage=(...e)=>{this.logMessage(t.DEBUG,...e)},this.logInfo=(...e)=>{this.logMessage(t.INFO,...e)},this.logWarn=(...e)=>{this.logMessage(t.WARN,...e)},this.logError=(...e)=>{this.logMessage(t.ERROR,...e)}}}var t;!function(e){e[e.DEBUG=0]="DEBUG",e[e.INFO=1]="INFO",e[e.WARN=2]="WARN",e[e.ERROR=3]="ERROR"}(t||(t={}));const s="x-session";function n(e,t){if(function(){const e=globalThis;if(void 0!==e.cloneInto)return e}()){const s=globalThis.content,n=s?.fetch;if("function"==typeof n)return n(e,t)}return fetch(e,t)}class o extends e{constructor(e,t,s,n,o){super(),this.logServerUrl=e,this.publicTokenProvider=t,this.urlProvider=s,this.pluginDataProvider=n,this.logLevel=o,this.batchSize=50,this.batch=[],this.maxSendTimeout=1e4,this.sendTimeoutId=0,this.messageId=1e3*globalThis.crypto.getRandomValues(new Uint8Array(1))[0],window&&window.addEventListener("beforeunload",(()=>{this.sendBatch()}))}logMessage(e,...s){if(e<this.logLevel)return;const n=t[e],o=[];for(const e of s)e instanceof Error?o.push(JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)))):o.push(e);this.batch.push({eventType:n,timestamp:Date.now(),url:this.urlProvider(),pluginData:this.pluginDataProvider(),messageId:++this.messageId,data:JSON.stringify(o)}),this.sendBatchIfNeeded()}clearSendBatchTimeout(){this.sendTimeoutId&&(clearTimeout(this.sendTimeoutId),this.sendTimeoutId=0)}sendBatchIfNeeded(){this.batch.length<this.batchSize?this.sendTimeoutId||(this.sendTimeoutId=Number(setTimeout((()=>{this.sendBatch()}),this.maxSendTimeout))):this.sendBatch()}sendBatch(){if(this.clearSendBatchTimeout(),!this.batch.length)return;const e=function(e,t,n,o,i,r,a="text/plain"){const c=new URL(n,e);let h=new Headers({"Content-Type":a});i?(h.set("Accept",i),t&&(h=function(e,t){if(!t)return e;const n="Accept",o=e.get(n);if(!o)throw new Error(`Invalid headers object: it doesn't have ${n} header!`);return e.set(n,`${o};${s}=${t}`)||e}(h,t))):t&&t&&h.set(s,t);const d={credentials:"omit",method:o,headers:h};return void 0!==r&&(d.body=JSON.stringify(r)),{url:c.toString(),options:d}}(this.logServerUrl,this.publicTokenProvider(),this.logServerUrl,"POST","application/vnd.intersub.log.response.v1+json",[...this.batch]);this.batch.length=0,n(e.url,e.options)}}var i,r,a;!function(e){e.ALL="ALL",e.YOUTUBE="YOUTUBE",e.COURSERA="COURSERA",e.NETFLIX="NETFLIX",e.HDREZKA="HDREZKA",e.TED="TED",e.KINOPUB="KINOPUB",e.LORD_FILM="LORD_FILM",e.OTHER="OTHER",e.INTERSUB_LANDING="INTERSUB_LANDING",e.INTERSUB_DEV="INTERSUB_DEV",e.SOAP4ME="SOAP4ME",e.TWO_SUB_MOVIE="TWO_SUB_MOVIE",e.INORIGINAL="INORIGINAL",e.AMAZON_PRIME="AMAZON_PRIME",e.LINKEDIN_LEARNING="LINKEDIN_LEARNING",e.UDEMY="UDEMY",e.CRUNCHYROLL="CRUNCHYROLL",e.ORORO="ORORO"}(i||(i={})),function(e){e.getTypeName=function(){return"ExternalVideoServiceType"},e.values=[e.ALL,e.YOUTUBE,e.COURSERA,e.NETFLIX,e.HDREZKA,e.TED,e.KINOPUB,e.LORD_FILM,e.OTHER,e.INTERSUB_LANDING,e.INTERSUB_DEV,e.SOAP4ME,e.TWO_SUB_MOVIE,e.INORIGINAL,e.AMAZON_PRIME,e.LINKEDIN_LEARNING,e.UDEMY,e.CRUNCHYROLL,e.ORORO]}(i||(i={})),function(e){e.SUBS="SUBS"}(r||(r={})),function(e){e.SEND_SUBS="SEND_SUBS",e.INIT="INIT"}(a||(a={}));const c=new RegExp("/watch/(?<videoId>[^/]+)(/.*)*");function h(){const e=c.exec(location.pathname);if(e?.groups)return e.groups.videoId}const d=new class extends e{logMessage(e,...s){switch(e){case t.DEBUG:console.debug("CRUNCHYROLL_SUBTITLES_LOG: debug",e,...s);break;case t.INFO:console.debug("CRUNCHYROLL_SUBTITLES_LOG: info",e,...s);break;case t.WARN:console.debug("CRUNCHYROLL_SUBTITLES_LOG: warn",e,...s);break;case t.ERROR:console.error("CRUNCHYROLL_SUBTITLES_LOG: error",e,...s)}this.sentryLogger?.logMessage(e,s)}setSentryLogger(e){this.sentryLogger=e}},l=new Map,g=new Map;function u(e,t){try{const s=h();if(!s)return;l.set(s,{manifestUrl:e,manifestJson:t}),d.logDebugMessage(`Intercepted manifest for video ${s}`)}catch(e){d.logError("Failed to set manifestJson")}}!function(){const t=new class extends e{logMessage(e,...t){this.sentryLogger&&this.sentryLogger.logMessage(e,t)}setSentryLogger(e){this.sentryLogger=e}};var s,n;window.addEventListener("is_crunchyroll_command",(e=>{const s=e.detail;switch(t.logDebugMessage(`CRUNCHYROLL_SUBTITLE: Received command ${s.type}`),s.type){case a.SEND_SUBS:{const e=(n=s.data,l.get(n));if(e){const t={manifest:e.manifestJson,headers:Object.fromEntries(g),videoId:h(),manifestUrl:e.manifestUrl};window.dispatchEvent(new CustomEvent("is_crunchyroll_subtitles",{detail:{type:r.SUBS,data:t}}))}break}case a.INIT:{const e=s.data;i.CRUNCHYROLL,window.location.href,t.setSentryLogger(new o(e.logServerUrl,(()=>e.publicToken),(()=>window.location.href),(()=>e.pluginData),e.logLevel));break}}var n})),h()&&(n=XMLHttpRequest.prototype.open,XMLHttpRequest.prototype.open=function(e,t,s,o,i){let r;r="string"==typeof t?new URL(t,location.href):t;let a=t;const c=new RegExp("/[^/]+/web/[^/]+/play$","g");"GET"===e&&c.test(r.pathname)&&this.addEventListener("load",(()=>{if("string"==typeof this.response&&this.response&&200===this.status){u(t.toString(),this.response);const e=this,s=new Map;for(const t of["Authorization","x-cr-tab-id"]){const n=e.requestHeaders?.get(t);n&&s.set(t,n)}!function(e){for(const[t,s]of e.entries())g.set(t,s)}(s)}}),!1);const h=void 0===s||s;n.apply(this,[e,a,h,o,i])},s=XMLHttpRequest.prototype.setRequestHeader,XMLHttpRequest.prototype.setRequestHeader=function(e,t){s.apply(this,[e,t]);const n=this;n.requestHeaders||(n.requestHeaders=new Map),n.requestHeaders.set(e,t)})}()})();