(()=>{"use strict";const e={claimer:{drops:!0,points:!0},navbarPreview:!0,notifications:!0,offlineNotifications:!1,dropClaimedNotification:!0,inventoryCheckInterval:.5,showClaimedChannelpoints:!0,autoReloadPlayer:!0};let t=!1;function n(e,t){for(let o in e)o in t?"object"!=typeof e[o]||Array.isArray(e[o])||n(e[o],t[o]):t[o]=e[o];return t}function o(){chrome.storage.local.get("ticSettings",(t=>{const n=(t.ticSettings||e).inventoryCheckInterval||.5;chrome.alarms.create("triggerInventoryCheck",{periodInMinutes:n})}))}chrome.runtime.onInstalled.addListener((t=>{chrome.storage.local.get("ticSettings",(t=>{let i=t.ticSettings||{};const r=n(e,i);chrome.storage.local.set({ticSettings:r},(()=>{console.log("Settings initialized or updated with defaults."),o()}))})),setTimeout((async()=>{chrome.storage.local.set({ticUpdated:(new Date).getMilliseconds()})}),200)})),chrome.runtime.onStartup.addListener((()=>{o()})),chrome.alarms.onAlarm.addListener((e=>{"triggerInventoryCheck"===e.name&&chrome.storage.local.set({triggerInventoryCheck:(new Date).getMilliseconds()})})),chrome.storage.onChanged.addListener(((e,t)=>{if("local"===t)for(let t in e)if("ticSettings"===t){const n=e[t];n?.newValue.inventoryCheckInterval!==n?.oldValue?.inventoryCheckInterval&&(chrome.alarms.create("triggerInventoryCheck",{periodInMinutes:n?.newValue.inventoryCheckInterval}),console.log(`Alarm interval updated to ${n?.newValue.inventoryCheckInterval} minutes.`))}})),chrome.runtime.onMessage.addListener(((e,n,o)=>{if("setAutoDiscardable"===e.action);else if("notify"===e.action)chrome.notifications.create("ticNotification-"+Date.now(),e.data);else{if("acquireInventoryLock"===e.action)return t?o({lockAcquired:!1}):(t=!0,o({lockAcquired:!0})),!0;"releaseInventoryLock"===e.action&&(t=!1)}}))})();