{"version":3,"file":"BrowserAction-4e465abe.js","sources":["../../src/browseraction/components/store/browser-storage.ts","../../src/browseraction/components/store/store.ts","../../src/browseraction/components/UrlListInput.vue","../../src/browseraction/components/logic/load.ts","../../src/browseraction/components/logic/extract.ts","../../src/browseraction/components/ActionBar.vue","../../src/browseraction/components/OptionBar.vue","../../src/browseraction/BrowserAction.vue","../../src/browseraction/browseraction.ts"],"sourcesContent":["export enum BrowserStorageKey {\n  urlList = 'txt',\n  lazyload = 'lazyload',\n  random = 'random',\n  reverse = 'reverse',\n  preserve = 'preserve',\n  deduplicate = 'deduplicate'\n}\n","import { reactive } from 'vue'\nimport browser from 'webextension-polyfill'\nimport { BrowserStorageKey } from '@/browseraction/components/store/browser-storage'\n\nexport const store = reactive({\n  urlList: '',\n  lazyLoadingChecked: false,\n  loadInRandomOrderChecked: false,\n  loadInReverseOrderChecked: false,\n  preserveInputChecked: false,\n  deduplicateURLsChecked: false,\n  setUrlList(value: string) {\n    this.urlList = value\n    if (store.preserveInputChecked) {\n      browser.storage.local.set({ [BrowserStorageKey.urlList]: value })\n    }\n  },\n  setLazyLoadingChecked(value: boolean) {\n    this.lazyLoadingChecked = value\n    browser.storage.local.set({ [BrowserStorageKey.lazyload]: value })\n  },\n  setLoadInRandomOrderChecked(value: boolean) {\n    this.loadInRandomOrderChecked = value\n    browser.storage.local.set({ [BrowserStorageKey.random]: value })\n  },\n  setLoadInReverseOrderChecked(value: boolean) {\n    this.loadInReverseOrderChecked = value\n    browser.storage.local.set({ [BrowserStorageKey.reverse]: value })\n  },\n  setPreserveInputChecked(value: boolean) {\n    this.preserveInputChecked = value\n    browser.storage.local.set({ [BrowserStorageKey.preserve]: value })\n    browser.storage.local.set({ [BrowserStorageKey.urlList]: value ? store.urlList : '' })\n  },\n  setDeduplicateURLsChecked(value: boolean) {\n    this.deduplicateURLsChecked = value\n    browser.storage.local.set({ [BrowserStorageKey.deduplicate]: value })\n  }\n})\n","<template>\n  <section id=\"url-list-input\">\n    <label for=\"urls\">List of URLs / Text to extract URLs from:</label>\n    <textarea\n      ref=\"urlTextArea\"\n      id=\"urls\"\n      wrap=\"soft\"\n      tabindex=\"1\"\n      :value=\"store.urlList\"\n      @input=\"handleUrlListInput\"\n    ></textarea>\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport { onMounted, ref } from 'vue'\nimport { store } from '@/browseraction/components/store/store'\n\nexport default {\n  computed: {\n    store() {\n      return store\n    }\n  },\n  setup() {\n    const urlTextArea = ref(null)\n\n    onMounted(() => {\n      if (urlTextArea.value) {\n        ;(urlTextArea.value as unknown as HTMLInputElement).select()\n      }\n    })\n\n    return {\n      urlTextArea\n    }\n  },\n  methods: {\n    handleUrlListInput(event: Event) {\n      store.setUrlList((event?.target as HTMLInputElement).value)\n    }\n  }\n}\n</script>\n\n<style scoped></style>\n","import browser from 'webextension-polyfill'\n\n/**\n * Shuffles array in place.\n * @param {Array} a items An array containing the items.\n */\nconst shuffle = (a: string[]) => {\n  let j, x, i\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1))\n    x = a[i]\n    a[i] = a[j]\n    a[j] = x\n  }\n  return a\n}\n\n/**\n * Loads sites in new background tabs\n * @param text Text containing one URL per line\n * @param lazyloading Lazy-load tabs\n * @param random Open tabs in random order\n * @param reverse Open tabs in reverse order\n * @param deduplicate Ignores duplicate URLs on open\n */\nexport const loadSites = (\n  text: string,\n  lazyloading: boolean,\n  random: boolean,\n  reverse: boolean,\n  deduplicate: boolean\n): void => {\n  const urlschemes = ['http', 'https', 'file', 'view-source']\n  let urls = getURLsFromText(text, deduplicate)\n\n  if (reverse) {\n    urls = urls.reverse()\n  }\n\n  if (random) {\n    urls = shuffle(urls)\n  }\n\n  for (let i = 0; i < urls.length; i++) {\n    let theurl = urls[i].trim()\n    if (theurl !== '') {\n      if (urlschemes.indexOf(theurl.split(':')[0]) === -1) {\n        theurl = 'http://' + theurl\n      }\n      if (\n        lazyloading &&\n        theurl.split(':')[0] !== 'view-source' &&\n        theurl.split(':')[0] !== 'file'\n      ) {\n        browser.tabs.create({\n          url: browser.runtime.getURL('lazyloading.html#') + theurl,\n          active: false\n        })\n      } else {\n        browser.tabs.create({\n          url: theurl,\n          active: false\n        })\n      }\n    }\n  }\n}\n\nexport const getTabCount = (text: string, deduplicate: boolean) => {\n  let tabCount = '0'\n  if (text) {\n    const urls = getURLsFromText(text, deduplicate)\n    if (urls.length <= 5000) {\n      // limit for performance reasons\n      tabCount = String(urls.length)\n    } else {\n      tabCount = '> 5000'\n    }\n  }\n  return tabCount\n}\n\nexport const getURLsFromText = (text: string, deduplicate: boolean): string[] => {\n  const urlLineSplitRegex = /\\r\\n?|\\n/g\n  const urls = text.split(urlLineSplitRegex).filter((line) => line.trim() !== '')\n  return deduplicate ? Array.from(new Set(urls)) : urls\n}\n","/**\n * Extract URLs from text\n * @param text Text\n */\nexport const extractURLs = (text: string): string => {\n  let urls = ''\n  let urlmatcharr\n  const urlregex =\n    /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()[\\]{};:'\".,<>?«»“”‘’]))/gi\n\n  while ((urlmatcharr = urlregex.exec(text)) !== null) {\n    const match = urlmatcharr[0]\n    urls += match + '\\n'\n  }\n\n  return urls\n}\n","<template>\n  <section id=\"action-bar\">\n    <button id=\"extract\" tabindex=\"6\" @click=\"setUrlListInputData\">Extract URLs from text</button>\n    <button id=\"open\" tabindex=\"2\" @click=\"openURLs\">\n      <strong>Open URLs</strong>\n    </button>\n    <span id=\"tabcount\" v-if=\"tabCount !== '0'\">\n      <abbr\n        title=\"Opening too many tabs at once may lead to long wait times or crash your browser.\"\n      >\n        &#9432;\n        <span>\n          will open\n          <span id=\"tabcount-number\">{{ tabCount }}</span>\n          new\n          <span id=\"tabcount-tab-label\">tab<span v-if=\"tabCount !== '1'\">s</span></span>\n        </span>\n      </abbr>\n    </span>\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport { getTabCount, loadSites } from '@/browseraction/components/logic/load'\nimport { extractURLs } from '@/browseraction/components/logic/extract'\nimport { store } from '@/browseraction/components/store/store'\n\nexport default {\n  methods: {\n    openURLs() {\n      loadSites(\n        store.urlList,\n        store.lazyLoadingChecked,\n        store.loadInRandomOrderChecked,\n        store.loadInReverseOrderChecked,\n        store.deduplicateURLsChecked\n      )\n    },\n    setUrlListInputData() {\n      store.setUrlList(extractURLs(store.urlList))\n    }\n  },\n  computed: {\n    tabCount: function () {\n      return getTabCount(store.urlList, store.deduplicateURLsChecked)\n    }\n  }\n}\n</script>\n\n<style scoped></style>\n","<script lang=\"ts\" setup>\nimport { store } from '@/browseraction/components/store/store'\n</script>\n\n<template>\n  <section id=\"option-bar\">\n    <label class=\"checkbox\"\n      ><input\n        type=\"checkbox\"\n        id=\"lazyLoad\"\n        tabindex=\"3\"\n        :checked=\"store.lazyLoadingChecked\"\n        @change=\"checkLazyLoading\"\n      />\n      Do not load tabs until selected</label\n    >\n    <label class=\"checkbox\"\n      ><input\n        type=\"checkbox\"\n        id=\"random\"\n        tabindex=\"4\"\n        :checked=\"store.loadInRandomOrderChecked\"\n        @change=\"checkLoadInRandomOrder\"\n      />\n      Load in random order</label\n    >\n    <label class=\"checkbox\"\n      ><input\n        type=\"checkbox\"\n        id=\"reverse\"\n        tabindex=\"4\"\n        :checked=\"store.loadInReverseOrderChecked\"\n        @change=\"checkLoadInReverseOrder\"\n      />\n      Load in reverse order</label\n    >\n    <label class=\"checkbox\"\n      ><input\n        type=\"checkbox\"\n        id=\"deduplicate\"\n        tabindex=\"5\"\n        :checked=\"store.deduplicateURLsChecked\"\n        @change=\"checkDeduplicateURLs\"\n      />\n      Ignore duplicate URLs</label\n    >\n  </section>\n  <section>\n    <label class=\"checkbox\"\n      ><input\n        type=\"checkbox\"\n        id=\"preserve\"\n        tabindex=\"5\"\n        :checked=\"store.preserveInputChecked\"\n        @change=\"checkPreserveInput\"\n      />\n      Preserve input</label\n    >\n  </section>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  methods: {\n    checkLazyLoading(event: Event) {\n      this.$nextTick(() => {\n        store.setLazyLoadingChecked((event?.target as HTMLInputElement).checked)\n      })\n    },\n    checkLoadInRandomOrder(event: Event) {\n      this.$nextTick(() => {\n        store.setLoadInRandomOrderChecked((event?.target as HTMLInputElement).checked)\n      })\n    },\n    checkLoadInReverseOrder(event: Event) {\n      this.$nextTick(() => {\n        store.setLoadInReverseOrderChecked((event?.target as HTMLInputElement).checked)\n      })\n    },\n    checkPreserveInput(event: Event) {\n      this.$nextTick(() => {\n        store.setPreserveInputChecked((event?.target as HTMLInputElement).checked)\n      })\n    },\n    checkDeduplicateURLs(event: Event) {\n      this.$nextTick(() => {\n        store.setDeduplicateURLsChecked((event?.target as HTMLInputElement).checked)\n      })\n    }\n  }\n}\n</script>\n\n<style scoped></style>\n","<script lang=\"ts\" setup>\nimport UrlListInput from '@/browseraction/components/UrlListInput.vue'\nimport ActionBar from '@/browseraction/components/ActionBar.vue'\nimport OptionBar from '@/browseraction/components/OptionBar.vue'\nimport { BrowserStorageKey } from '@/browseraction/components/store/browser-storage'\nimport browser from 'webextension-polyfill'\nimport { store } from '@/browseraction/components/store/store'\nimport { ref } from 'vue'\n\nconst isStoredValuesLoaded = ref(false)\nPromise.all([\n  browser.storage.local.get(BrowserStorageKey.urlList),\n  browser.storage.local.get(BrowserStorageKey.lazyload),\n  browser.storage.local.get(BrowserStorageKey.random),\n  browser.storage.local.get(BrowserStorageKey.reverse),\n  browser.storage.local.get(BrowserStorageKey.preserve),\n  browser.storage.local.get(BrowserStorageKey.deduplicate)\n]).then((data) => {\n  store.urlList = data[0][BrowserStorageKey.urlList] ?? ''\n  store.lazyLoadingChecked = data[1][BrowserStorageKey.lazyload] ?? false\n  store.loadInRandomOrderChecked = data[2][BrowserStorageKey.random] ?? false\n  store.loadInReverseOrderChecked = data[3][BrowserStorageKey.reverse] ?? false\n  store.preserveInputChecked = data[4][BrowserStorageKey.preserve] ?? false\n  store.deduplicateURLsChecked = data[5][BrowserStorageKey.deduplicate] ?? false\n\n  isStoredValuesLoaded.value = true\n})\n</script>\n\n<template>\n  <div v-if=\"isStoredValuesLoaded\">\n    <UrlListInput />\n    <ActionBar />\n    <hr />\n    <OptionBar />\n  </div>\n</template>\n\n<style scoped></style>\n","import './assets/browseraction.css'\n\nimport { createApp } from 'vue'\nimport App from './BrowserAction.vue'\n\ncreateApp(App).mount('#app')\n"],"names":["BrowserStorageKey","_sfc_render","_openBlock","_createElementBlock","_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_4","_hoisted_5","_hoisted_3","_createTextVNode","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_8","_createCommentVNode","App"],"mappings":"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"}