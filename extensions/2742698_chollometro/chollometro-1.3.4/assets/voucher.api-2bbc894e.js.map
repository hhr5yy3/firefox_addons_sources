{"version":3,"file":"voucher.api-2bbc894e.js","sources":["../../src/ui/features/pepper-posts/api/voucher.api.ts"],"sourcesContent":["import { createAPI } from '~/ui/utils/api';\nimport logger from '~/ui/utils/logger';\nimport browser from '~B/browser/browser';\nimport { AffiliateData } from '~B/storage';\nimport analytics from '~B/utils/analytics';\nimport { IOfferItemProps } from '../components';\n\nconst DELTA_TIME_VOUCHER_TRACKING = 30 * 60 * 1000;\nconst CURRENT_EXTENSION_URL = location.href;\nexport default createAPI({\n    name: 'Vouchers',\n    endpoint: '/pepper/vouchers',\n    read(): Promise<string> {\n        return Promise.resolve('');\n    },\n    default: () => '',\n    methods: {\n        create(body): Promise<IOfferItemProps[]> {\n            return this.fetch('', { method: 'POST', body: JSON.stringify(body) }, this.sender)\n                .then((res) => {\n                    return res.json();\n                })\n                .then((res) => res.data);\n        },\n        async trackVoucher({ shopUrl, clickoutUrl }: { shopUrl?: string; clickoutUrl?: string }) {\n            // const { url: shopUrl } = (await browser.tabs.query({ active: true }))[0];\n\n            logger.debug('voucher url track', shopUrl);\n\n            if (clickoutUrl) {\n                // only will be called in voucher view context\n\n                browser.tabs\n                    .create({\n                        url: clickoutUrl, // <the url injecting the tracking cookie>\n                        index: 0,\n                        active: false,\n                        pinned: true,\n                    })\n                    .then((e) => {\n                        const tabId = e.id;\n                        browser.tabs.onUpdated.addListener((updatedTabId, update) => {\n                            if ('complete' === update.status && updatedTabId === tabId) {\n                                browser.tabs.remove(tabId);\n                                analytics.voucherUnlocked({ shopUrl: shopUrl as string });\n\n                                logger.log('VoucherItem listr track link', clickoutUrl);\n                            }\n                        });\n                    });\n                return;\n            }\n            const trakckingUrl = `https://chollometrocextension.digidip.net/visit?url=${encodeURI(\n                shopUrl as string,\n            )}`;\n            const urlPattern =\n                /(?<protocol>https?:\\/{2})(?:www\\.)?((?<subDomain>\\w+)\\.(?<subDomainExtension>[a-z]+))?\\.?(?<domain>\\w+)\\.(?<domainExtension>[a-z]+)\\/(?<path>.+)?/;\n            const urlShopMatch = shopUrl?.match(urlPattern);\n            let affiliateData = await AffiliateData.get();\n            if (urlShopMatch != null && urlShopMatch.groups != null) {\n                const currentShop = affiliateData.find((elm) => {\n                    return elm.shopName === urlShopMatch.groups.domain;\n                });\n\n                if (currentShop != undefined) {\n                    if (currentShop.lastTimeTracked + DELTA_TIME_VOUCHER_TRACKING < Date.now()) {\n                        // dispatch affiliate and reset lastTimeTracked\n                        browser.tabs\n                            .create({\n                                url: trakckingUrl, // <the url injecting the tracking cookie>\n                                index: 0,\n                                active: false,\n                                pinned: true,\n                            })\n                            .then((e) => {\n                                const tabId = e.id;\n                                browser.tabs.onUpdated.addListener((updatedTabId, update) => {\n                                    if ('complete' === update.status && updatedTabId === tabId) {\n                                        browser.tabs.remove(tabId);\n                                        analytics.voucherUnlocked({ shopUrl: shopUrl as string });\n                                        affiliateData = affiliateData.map((elm) => {\n                                            if (elm.shopName === urlShopMatch?.groups.domain) {\n                                                elm.lastTimeTracked = Date.now();\n                                            }\n                                            return elm;\n                                        });\n\n                                        AffiliateData.set(affiliateData);\n                                        logger.log('update voucherTrack affileate', {\n                                            affiliateData,\n                                        });\n                                    }\n                                });\n                            });\n                    }\n                } else {\n                    // create new affiliate shop\n                    browser.tabs\n                        .create({\n                            url: trakckingUrl, // <the url injecting the tracking cookie>\n                            index: 0,\n                            active: false,\n                            pinned: true,\n                        })\n                        .then((e) => {\n                            const tabId = e.id;\n                            browser.tabs.onUpdated.addListener((updatedTabId, update) => {\n                                if ('complete' === update.status && updatedTabId === tabId) {\n                                    browser.tabs.remove(tabId);\n                                    analytics.voucherUnlocked({ shopUrl: shopUrl as string });\n\n                                    affiliateData.push({\n                                        shopName: urlShopMatch?.groups.domain,\n                                        lastTimeTracked: Date.now(),\n                                    });\n                                    AffiliateData.set(affiliateData).then((data) => {\n                                        logger.log('create voucherTrack affileate', {\n                                            data,\n                                        });\n                                    });\n                                }\n                            });\n                        });\n                }\n            } else {\n                throw new Error('Pattern url matching null value error');\n            }\n        },\n    },\n});\n"],"names":[],"mappings":"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"}