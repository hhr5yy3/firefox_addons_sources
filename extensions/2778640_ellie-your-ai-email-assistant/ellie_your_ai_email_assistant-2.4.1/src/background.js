const BASE_URL="https://api.tryellie.com",limits={};async function onOptionsMessage(e,t,o){let r={};switch(e.type){case"options-check-key":{const{valid:t,reason:o,text:a}=await checkKey(e.licenceKey);r={valid:t,reason:o,text:a,licenceKey:e.licenceKey};break}case"options-onboarding-started":r=await saveOnboardingStarted();break;case"options-onboarding-completed":r=await saveOnboardingCompleted();break;case"options-create-role":r=await createRole(e.data);break;case"options-update-role":r=await updateRole(e.data);break;case"options-delete-role":r=await deleteRole(e.data);break;case"options-set-default-role":{const{uuid:t}=e.data;setStorage({defaultRoleUUID:t}),r=await updateRoleDefault(e.data,"set");break}case"options-clear-default-role":setStorage({defaultRoleUUID:""}),r=await updateRoleDefault(e.data,"clear");break;case"options-get-finetune-status":r=await getFineTuneStatus();break;default:console.error(`Unknown message - ${e.type}`),r={error:!0,message:"Something unexpected went wrong"}}return r}async function onMessage(e,t){switch(e.type){case"get-limits":getLimits(e,t);break;case"load-user":loadUser(t);break;case"save-examples":saveExamples();break;case"crawl-url-for-corpus":crawl(e,{sender:t});break;case"open-options":{let t=chrome.runtime.getURL("/src/options/index.html");e.tab&&(t+=`#${e.tab}`),chrome.tabs.create({url:t});break}case"submit-prompt":submitPrompt(e,{sender:t});break;case"stream-prompt":submitPromptStream(e,{sender:t});break;case"popup-prompt":popupPrompt(e,{sender:t});break;case"save-questions":saveQuestions(e,{sender:t});break;case"delete-dataset":deleteDataset(e,{sender:t});break;case"save-stats":saveStats(e.stats);break;case"popup:fetch-roles":fetchPopupRoles();break;case"review-response":saveReviewResponse(e.data);break;case"save-selected-option":{const{key:t,value:o}=e.data;setStorage({[t]:o});break}default:console.error(`Unknown message - ${e.type}`)}}async function createRole(e){return await doApiRequest("/roles",{method:"POST",body:e})}async function updateRole(e){return await doApiRequest(`/roles/${e.uuid}`,{method:"PUT",body:{prompt:e.prompt}})}async function updateRoleDefault({uuid:e,defaultUuid:t},o){return"set"===o?await doApiRequest(`/roles/${e}`,{method:"PATCH",body:{op:"set-default",data:{defaultUuid:t}}}):"clear"===o?await doApiRequest(`/roles/${e}`,{method:"PATCH",body:{op:"clear-default"}}):void 0}async function clearRoleDefault(){return await doApiRequest("/roles/default",{method:"DELETE"})}async function deleteRole({uuid:e}){return await doApiRequest(`/roles/${e}`,{method:"DELETE"})}async function fetchPopupRoles(){try{const{licenceKey:e}=await getStorage("licenceKey"),t=await fetch(`${BASE_URL}/roles`,{method:"GET",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json",accept:"text/event-stream","x-ellie-version":getVersion()}});if(!t.ok)throw new Error(`Failed to fetch roles: ${t.status} - ${t.statusText}`);const o=await t.json();chrome.runtime.sendMessage({type:"popup:roles",data:o})}catch(e){console.error(e)}}async function getFineTuneStatus(){return await doApiRequest("/training/status")}function popupPrompt({mood:e,interest:t,emailText:o,thinkingText:r,roleUuid:a,replyLength:n}){chrome.storage.sync.get({licenceKey:"",replyFromName:"",doNotIncludeSig:!1,preferredModel:"auto"},(async function(s){const{replyFromName:i,doNotIncludeSig:c,licenceKey:l,preferredModel:d}=s;try{const s=await fetch(`${BASE_URL}/compose`,{method:"POST",headers:{Authorization:`Bearer ${l}`,"Content-Type":"application/json","x-ellie-version":getVersion()},body:JSON.stringify({fromName:i,doNotIncludeSig:c,preferredModel:d,mood:e,interest:t,textBefore:"",textAfter:"",emailText:o,thinkingText:r,roleUuid:a,replyLength:n})}),p=await s.json();chrome.runtime.sendMessage({type:"popup-response",text:p.text,allowed:p.allowed,openUpgradeBox:p.openUpgradeBox,openReviewBox:p.openReviewBox,openOverdueBox:p.openOverdueBox,userUuid:p.userUuid,accountEmail:p.accountEmail,reason:p.reason})}catch(e){console.error(e),chrome.runtime.sendMessage({type:"popup-error",text:"Timed out... Please try again later"})}}))}async function getLimits({threadId:e},t){const{licenceKey:o}=await getStorage("licenceKey");if(!o)return chrome.tabs.sendMessage(t.tab.id,{type:"user-error",reason:"invalid-licence"});const r=await fetchUser(o);if(r.error){const{reason:e,text:o}=r.error;return chrome.tabs.sendMessage(t.tab.id,{type:"user-error",reason:e,text:o})}let a=limits[e];a||(a={id:e,limits:{revisions:5},hasWritten:!1},limits[e]=a);const{usage:n,roles:s}=r,{generatedRepliesLimit:i,repliesGeneratedToday:c}=n,l=await getStorage("mood","interest","replyLength");chrome.tabs.sendMessage(t.tab.id,{uuid:r.uuid,type:"limits",thread:a,email:r.email,repliesRemaining:Math.max(0,i-c),roles:s,selectedOptions:l})}function loadUser(e){chrome.storage.sync.get({licenceKey:""},(async function(t){try{const{licenceKey:o}=t,r=await fetchUser(o),a=await getLatestExtensionInfo(o);if(r.error){const{reason:t,text:o}=r.error;return chrome.tabs.sendMessage(e.tab.id,{type:"user-error",reason:t,text:o})}await chrome.tabs.sendMessage(e.tab.id,{type:"user",user:r,extensionInfo:a})}catch(t){console.error(t),chrome.tabs.sendMessage(e.tab.id,{type:"user-error",error:{text:"Failed to communicate with server"}})}}))}function submitPromptStream({parsedEml:e,emailClient:t,mood:o,interest:r,emailText:a,thread:n,textBefore:s,modelOverride:i,thinkingText:c,textAfter:l,threadId:d,roleUuid:p,replyLength:u},{sender:m}){chrome.storage.sync.get({licenceKey:"",replyFromName:"",doNotIncludeSig:!1,preferredModel:"auto"},(async function(y){if(limits[d]&&0===limits[d].limits.revisions)return chrome.tabs.sendMessage(m.tab.id,{type:"response",revisionsLeft:0,text:"*** You've reached your revision limit for this email ***"});const{replyFromName:h,doNotIncludeSig:g,preferredModel:f,licenceKey:x}=y;try{let d=a;e||d||!n||(d=n[0]);const y=await fetch(`${BASE_URL}/compose/stream`,{method:"POST",headers:{Authorization:`Bearer ${x}`,"Content-Type":"application/json",accept:"text/event-stream","x-ellie-version":getVersion(),"x-browser-id":await getUniqueBrowserId()},body:JSON.stringify({parsedEml:e,emailClient:t,fromName:h,doNotIncludeSig:g,preferredModel:f,modelOverride:i,mood:o,interest:r,textBefore:s,textAfter:l,thinkingText:c,emailThread:n,emailText:d,roleUuid:p,replyLength:u})});if(401===y.status){const e=await y.json();return chrome.tabs.sendMessage(m.tab.id,{type:"user-error",reason:e.reason,text:e.text})}const w=y.body.getReader(),b=new TextDecoder("utf-8");let v=!1,S=!1,R="";do{const{value:e,done:t}=await w.read();let o=b.decode(e);if(!S){if(!o.includes("\n")){R+=o;continue}{S=!0;const[e,t]=o.split("\n");R+=e,o=t}}o&&chrome.tabs.sendMessage(m.tab.id,{type:"response-stream",text:o}),v=t}while(!v);try{R=R?JSON.parse(R):{}}catch(e){R={},console.error("Failed to parse metadata")}chrome.tabs.sendMessage(m.tab.id,{type:"response-stream-done",metadata:R})}catch(e){console.log(e),chrome.tabs.sendMessage(m.tab.id,{type:"response-stream-error",text:e.message})}}))}function submitPrompt({parsedEml:e,emailClient:t,mood:o,interest:r,emailText:a,textBefore:n,thinkingText:s,textAfter:i,roleUuid:c,replyLength:l},{sender:d}){chrome.storage.sync.get({licenceKey:"",replyFromName:"",doNotIncludeSig:!1,preferredModel:"auto"},(async function(p){const{replyFromName:u,doNotIncludeSig:m,preferredModel:y,licenceKey:h}=p;try{const p=await fetch(`${BASE_URL}/compose`,{method:"POST",headers:{Authorization:`Bearer ${h}`,"Content-Type":"application/json",accept:"text/event-stream","x-ellie-version":getVersion(),"x-browser-id":await getUniqueBrowserId()},body:JSON.stringify({parsedEml:e,emailClient:t,fromName:u,doNotIncludeSig:m,preferredModel:y,mood:o,interest:r,textBefore:n,textAfter:i,thinkingText:s,emailText:a,roleUuid:c,replyLength:l})}),g=await p.json();chrome.tabs.sendMessage(d.tab.id,{type:"response",requiresPayment:g.requiresPayment,openUpgradeBox:g.openUpgradeBox,openOverdueBox:g.openOverdueBox,openReviewBox:g.openReviewBox,text:g.text})}catch(e){console.error(e),chrome.tabs.sendMessage(d.tab.id,{type:"response-error",text:e.message})}}))}async function saveQuestions({questions:e,datasetName:t}){chrome.storage.sync.get({licenceKey:""},(async function(o){await fetch(`${BASE_URL}/corpus/save`,{method:"POST",headers:{Authorization:`Bearer ${o.licenceKey}`,"Content-Type":"application/json","x-ellie-version":getVersion()},body:JSON.stringify({questions:e,datasetName:t})}),chrome.runtime.sendMessage({type:"saved-questions"})}))}function crawl({url:e,excludeUrls:t,file:o}){chrome.storage.sync.get({licenceKey:""},(async function(r){const{licenceKey:a}=r;try{if(o){const e=new FormData,[t,r,n]=deserializeFile(o),s=new Blob([t],{type:r});e.append("file",s,n),await fetch(`${BASE_URL}/corpus/upload`,{method:"POST",headers:{Authorization:`Bearer ${a}`,"x-ellie-version":getVersion()},body:e})}else await fetch(`${BASE_URL}/corpus/crawl`,{method:"POST",headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json","x-ellie-version":getVersion()},body:JSON.stringify({url:e,excludeUrls:t})});chrome.runtime.sendMessage({type:"started-crawl"})}catch(e){console.error(e),chrome.tabs.sendMessage(sender.tab.id,{type:"crawl-error",text:e.message})}}))}function saveExamples(){chrome.storage.sync.get({examplePrompt1:"",exampleReply1:"",examplePrompt2:"",exampleReply2:"",examplePrompt3:"",exampleReply3:"",licenceKey:""},(async function(e){const{examplePrompt1:t,exampleReply1:o,examplePrompt2:r,exampleReply2:a,examplePrompt3:n,exampleReply3:s,licenceKey:i}=e;let c=[];t&&o&&c.push({prompt:t,reply:o}),r&&a&&c.push({prompt:r,reply:a}),n&&s&&c.push({prompt:n,reply:s}),await fetch(`${BASE_URL}/me/examples`,{method:"POST",headers:{Authorization:`Bearer ${i}`,"Content-Type":"application/json","x-ellie-version":getVersion()},body:JSON.stringify({examples:c})})}))}async function deleteDataset({uuid:e}){chrome.storage.sync.get({licenceKey:""},(async function(t){const{licenceKey:o}=t;await fetch(`${BASE_URL}/corpus/${e}`,{method:"DELETE",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json","x-ellie-version":getVersion()}})}))}async function fetchUser(e){const t=await fetch(`${BASE_URL}/me`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json","x-ellie-version":getVersion(),"x-browser-id":await getUniqueBrowserId()}});if(401===t.status){return{error:parseError(await t.json())}}return await t.json()}function parseError(e={}){const t={reason:"unknown",text:"Oops, Ellie encountered an error. If this keeps happening please contact us."};return e&&e.reason?"invalid-licence"===e.reason?{reason:"invalid-licence",text:e.text||"You need to enter your licence key to use Ellie."}:"licence-overused"===e.reason?{reason:"licence-overused",text:e.text||"Your licence key is being used on too many devices."}:t:t}async function checkKey(e){try{const t=await fetch(`${BASE_URL}/signup/check`,{method:"POST",body:JSON.stringify({licenceKey:e}),headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json","x-ellie-version":getVersion()}});return await t.json()}catch(e){return{valid:!1}}}async function getLatestExtensionInfo(e){const t=getVersion(),o=await fetch(`${BASE_URL}/extension`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json","x-ellie-version":t}});return await o.json()}function getVersion(){return chrome.runtime.getManifest().version}async function saveStats({requiredPayment:e=!1,includedLink:t=!1}){chrome.storage.sync.get({licenceKey:""},(async function(o){await fetch(`${BASE_URL}/me/stats/sent`,{method:"PUT",headers:{Authorization:`Bearer ${o.licenceKey}`,"Content-Type":"application/json","x-ellie-version":getVersion()},body:JSON.stringify({requiredPayment:e,includedLink:t})})}))}async function saveReviewResponse({response:e}){if("later"===e){const e=new Date;setStorage({nextRequestForReview:e.setMonth(e.getMonth()+1)})}return await doApiRequest("/me",{method:"PATCH",body:{op:"set-review-response",data:{response:e}}})}async function saveOnboardingStarted(){return await doApiRequest("/me",{method:"PATCH",body:{op:"set-onboarding-started"}})}async function saveOnboardingCompleted(){return await doApiRequest("/me",{method:"PATCH",body:{op:"set-onboarding-completed"}})}function deserializeFile([e,t,o,r]){const a=atob(e.slice(e.indexOf(",")+1)),n=a.length,s=new Uint8Array(n);for(let e=0;e<n;e+=1)s[e]=a.charCodeAt(e);return o||(t=e.match(/^data:(.+?);base64/)[1].replace(/(boundary=)[^;]+/,((e,t)=>t+String.fromCharCode(...s.slice(2,s.indexOf(13)))))),[s,t,r]}async function doApiRequest(e,{method:t="GET",body:o=null}={}){try{const{licenceKey:r}=await getStorage("licenceKey");let a={method:t,headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json","x-ellie-version":getVersion()}};"GET"!==t&&o&&(a={...a,body:JSON.stringify(o)});const n=await fetch(`${BASE_URL}${e}`,a);if(!n.ok)throw new Error(`Failed to fetch status: ${n.status} - ${n.statusText}`);return await n.json()}catch(e){console.error(e)}}async function getStorage(...e){return new Promise((t=>{let o=e.reduce(((e,t)=>({...e,[t]:""})),{});chrome.storage.sync.get(o,t)}))}async function setStorage(e){return new Promise((t=>{chrome.storage.sync.set(e,t)}))}async function getUniqueBrowserId(){let{browserUuid:e}=await getStorage("browserUuid");return e||(e=crypto.randomUUID(),setStorage({browserUuid:e})),e}chrome.runtime.onInstalled.addListener((async e=>{console.log(JSON.stringify(e,null,2)),"install"===e.reason&&chrome.runtime.openOptionsPage()})),chrome.runtime.onMessage.addListener((function(e,t,o){return e.type.startsWith("options")?(onOptionsMessage(e,t).then((e=>o(e))),!0):onMessage(e,t)})),chrome.runtime.onUpdateAvailable.addListener((()=>{chrome.runtime.reload()}));