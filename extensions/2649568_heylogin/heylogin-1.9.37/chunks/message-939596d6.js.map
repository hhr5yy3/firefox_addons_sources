{"version":3,"file":"message-939596d6.js","sources":["../../../../node_modules/webextension-polyfill/dist/browser-polyfill.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/assert.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/enum.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/message.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/google/varint.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/scalar.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/is-message.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/binary-format.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/names.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/field.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/proto3.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/service-type.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/timestamp_pb.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js","../../../../node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/wrappers_pb.js","../../../../backend/clients/web/lib/src/espb/registration_info_status_pb.js","../../../../domain-errors/lib/src/index.js","../../../../backend/clients/web/lib/src/errorsClient.js","../../../../node_modules/@sentry/minimal/node_modules/tslib/tslib.es6.js","../../../../node_modules/@sentry/hub/node_modules/tslib/tslib.es6.js","../../../../node_modules/@sentry/hub/node_modules/@sentry/utils/esm/env.js","../../../../node_modules/@sentry/hub/node_modules/@sentry/utils/esm/node.js","../../../../node_modules/@sentry/hub/node_modules/@sentry/utils/esm/global.js","../../../../node_modules/@sentry/hub/node_modules/@sentry/utils/esm/is.js","../../../../node_modules/@sentry/hub/node_modules/@sentry/utils/esm/flags.js","../../../../node_modules/@sentry/hub/node_modules/@sentry/utils/esm/logger.js","../../../../node_modules/@sentry/hub/node_modules/@sentry/utils/esm/object.js","../../../../node_modules/@sentry/hub/node_modules/@sentry/utils/esm/misc.js","../../../../node_modules/@sentry/hub/node_modules/@sentry/utils/esm/syncpromise.js","../../../../node_modules/@sentry/hub/node_modules/@sentry/utils/esm/time.js","../../../../node_modules/@sentry/hub/esm/scope.js","../../../../node_modules/@sentry/hub/esm/session.js","../../../../node_modules/@sentry/hub/esm/flags.js","../../../../node_modules/@sentry/hub/esm/hub.js","../../../../node_modules/@sentry/minimal/esm/index.js","../../../../node_modules/emittery/index.js","../../../../backend/clients/web/lib/src/debugConsole.js","../../../../backend/clients/web/lib/src/espb/authenticator_type_pb.js","../../../../backend/clients/web/lib/src/espb/credential_type_pb.js","../../../../backend/clients/web/lib/src/espb/session_type_pb.js","../../../../backend/clients/web/lib/src/espb/achievements_pb.js","../../../../backend/clients/web/lib/src/espb/unlock_time_limit_pb.js","../../../../backend/clients/web/lib/src/espb/vault_type_pb.js","../../../../backend/clients/web/lib/src/espb/webauthn_prf_support_status_pb.js","../../../../backend/clients/web/lib/src/espb/organization_type_pb.js","../../../../backend/clients/web/lib/src/espb/locks_pb.js","../../../../backend/clients/web/lib/src/espb/authenticator_pb.js","../../../../backend/clients/web/lib/src/espb/license_type_pb.js","../../../../backend/clients/web/lib/src/espb/primary_login_device_pb.js","../../../../backend/clients/web/lib/src/espb/profile_type_pb.js","../../../../backend/clients/web/lib/src/espb/maintenance_task_pb.js","../../../../backend/clients/web/lib/src/espb/sync_update_pb.js","../../../../backend/clients/web/lib/src/promiseUtils.js","../../../../backend/clients/web/lib/src/espb/channel_service_pb.js","../../../../backend/clients/web/lib/src/espb/profile_pb.js","../../../../backend/clients/web/lib/src/espb/auditlog_event_type_pb.js","../../../../backend/clients/web/lib/src/espb/error_codes_pb.js","../../../../backend/clients/web/lib/src/espb/support_service_pb.js","../../../../backend/clients/web/lib/src/espb/subscription_plan_pb.js","../../../../backend/clients/web/lib/src/espb/user_confirmation_result_type_pb.js","../../../../backend/clients/web/lib/src/espb/user_confirmation_type_pb.js","../../../../backend/clients/web/lib/src/espb/user_type_pb.js","../../../../backend/clients/web/lib/src/espb/vault_message_type_pb.js","../../../../backend/clients/web/lib/src/espb/client_type_pb.js","../../../../backend/clients/web/lib/src/sync.js","../../../../backend/clients/web/lib/src/espb/vault_service_pb.js","../../../../backend/clients/web/lib/src/vaults.js","../../../../backend/clients/web/lib/src/accounts.js","../../../../backend/clients/web/lib/src/espb/auditlog_service_pb.js","../../../../backend/clients/web/lib/src/espb/auditlog_service_connect.js","../../../../backend/clients/web/lib/src/espb/errors_pb.js","../../../../backend/clients/web/lib/src/EspbServiceClientFactory.js","../../../../backend/clients/web/lib/src/auditlogAdminClient.js","../../../../backend/clients/web/lib/src/auditlogWriteClient.js","../../../../backend/clients/web/lib/src/authenticators.js","../../../../backend/clients/web/lib/src/espb/channel_messages_pb.js","../../../../backend/clients/web/lib/src/channels.js","../../../../backend/clients/web/lib/src/childOrganizations.js","../../../../backend/clients/web/lib/src/credentials.js","../../../../backend/clients/web/lib/src/espb/credential_service_pb.js","../../../../backend/clients/web/lib/src/espb/account_service_pb.js","../../../../backend/clients/web/lib/src/espb/profile_service_pb.js","../../../../backend/clients/web/lib/src/espb/account_service_connect.js","../../../../backend/clients/web/lib/src/espb/authenticator_service_pb.js","../../../../backend/clients/web/lib/src/espb/authenticator_service_connect.js","../../../../backend/clients/web/lib/src/espb/channel_service_connect.js","../../../../backend/clients/web/lib/src/espb/child_organization_service_pb.js","../../../../backend/clients/web/lib/src/espb/child_organization_service_connect.js","../../../../backend/clients/web/lib/src/espb/credential_service_connect.js","../../../../backend/clients/web/lib/src/espb/health_service_pb.js","../../../../backend/clients/web/lib/src/espb/health_service_connect.js","../../../../backend/clients/web/lib/src/espb/integrations_service_pb.js","../../../../backend/clients/web/lib/src/espb/integrations_service_connect.js","../../../../backend/clients/web/lib/src/espb/lfd_overrides_service_pb.js","../../../../backend/clients/web/lib/src/espb/lfd_overrides_service_connect.js","../../../../backend/clients/web/lib/src/espb/login_inbox_service_pb.js","../../../../backend/clients/web/lib/src/espb/login_inbox_service_connect.js","../../../../backend/clients/web/lib/src/espb/organization_service_pb.js","../../../../backend/clients/web/lib/src/espb/organization_service_connect.js","../../../../backend/clients/web/lib/src/espb/profile_service_connect.js","../../../../backend/clients/web/lib/src/espb/session_service_pb.js","../../../../backend/clients/web/lib/src/espb/session_service_connect.js","../../../../backend/clients/web/lib/src/espb/share_link_service_pb.js","../../../../backend/clients/web/lib/src/espb/share_link_service_connect.js","../../../../backend/clients/web/lib/src/espb/support_service_connect.js","../../../../backend/clients/web/lib/src/espb/sync_service_pb.js","../../../../backend/clients/web/lib/src/espb/sync_service_connect.js","../../../../backend/clients/web/lib/src/espb/user_confirmation_data_pb.js","../../../../backend/clients/web/lib/src/espb/user_confirmation_service_pb.js","../../../../backend/clients/web/lib/src/espb/user_confirmation_service_connect.js","../../../../backend/clients/web/lib/src/espb/vault_service_connect.js","../../../../backend/clients/web/lib/src/espb/webauthn_service_pb.js","../../../../backend/clients/web/lib/src/espb/webauthn_service_connect.js","../../../../backend/clients/web/lib/src/health.js","../../../../backend/clients/web/lib/src/integrations.js","../../../../backend/clients/web/lib/src/lfdOverrides.js","../../../../backend/clients/web/lib/src/lfdOverridesAdminClient.js","../../../../backend/clients/web/lib/src/loginInbox.js","../../../../backend/clients/web/lib/src/organizations.js","../../../../backend/clients/web/lib/src/profiles.js","../../../../backend/clients/web/lib/src/sessions.js","../../../../backend/clients/web/lib/src/shareLinks.js","../../../../backend/clients/web/lib/src/support.js","../../../../backend/clients/web/lib/src/userConfirmations.js","../../../../backend/clients/web/lib/src/webauthn.js","../../../../backend/clients/web/lib/src/backendClient.js","../../../../backend/clients/web/lib/src/cancelToken.js","../../../../backend/clients/web/lib/src/espb/authenticator_reply_pb.js","../../../../backend/clients/web/lib/src/espb/testing_service_pb.js","../../../../backend/clients/web/lib/src/espb/testing_service_connect.js","../../../../backend/clients/web/lib/src/testing.js","../../../src/webExtErrors.ts","../../../src/message.ts"],"sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"webextension-polyfill\", [\"module\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.browser = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (module) {\n  /* webextension-polyfill - v0.12.0 - Tue May 14 2024 18:01:29 */\n  /* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n  /* vim: set sts=2 sw=2 et tw=80: */\n  /* This Source Code Form is subject to the terms of the Mozilla Public\n   * License, v. 2.0. If a copy of the MPL was not distributed with this\n   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n  \"use strict\";\n\n  if (!(globalThis.chrome && globalThis.chrome.runtime && globalThis.chrome.runtime.id)) {\n    throw new Error(\"This script should only be loaded in a browser extension.\");\n  }\n  if (!(globalThis.browser && globalThis.browser.runtime && globalThis.browser.runtime.id)) {\n    const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\";\n\n    // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n    // optimization for Firefox. Since Spidermonkey does not fully parse the\n    // contents of a function until the first time it's called, and since it will\n    // never actually need to be called, this allows the polyfill to be included\n    // in Firefox nearly for free.\n    const wrapAPIs = extensionAPIs => {\n      // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n      // at build time by replacing the following \"include\" with the content of the\n      // JSON file.\n      const apiMetadata = {\n        \"alarms\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"clearAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"bookmarks\": {\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getChildren\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getRecent\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getSubTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTree\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"browserAction\": {\n          \"disable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"enable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"getBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"openPopup\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"browsingData\": {\n          \"remove\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"removeCache\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCookies\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeDownloads\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFormData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeHistory\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeLocalStorage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePasswords\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePluginData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"settings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"commands\": {\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"contextMenus\": {\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"cookies\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAllCookieStores\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"devtools\": {\n          \"inspectedWindow\": {\n            \"eval\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 2,\n              \"singleCallbackArg\": false\n            }\n          },\n          \"panels\": {\n            \"create\": {\n              \"minArgs\": 3,\n              \"maxArgs\": 3,\n              \"singleCallbackArg\": true\n            },\n            \"elements\": {\n              \"createSidebarPane\": {\n                \"minArgs\": 1,\n                \"maxArgs\": 1\n              }\n            }\n          }\n        },\n        \"downloads\": {\n          \"cancel\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"download\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"erase\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFileIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"open\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"pause\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFile\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"resume\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"extension\": {\n          \"isAllowedFileSchemeAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"isAllowedIncognitoAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"history\": {\n          \"addUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"deleteRange\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getVisits\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"i18n\": {\n          \"detectLanguage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAcceptLanguages\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"identity\": {\n          \"launchWebAuthFlow\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"idle\": {\n          \"queryState\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"management\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setEnabled\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"uninstallSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"notifications\": {\n          \"clear\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPermissionLevel\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"pageAction\": {\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"hide\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"permissions\": {\n          \"contains\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"request\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"runtime\": {\n          \"getBackgroundPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPlatformInfo\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"openOptionsPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"requestUpdateCheck\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"sendMessage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 3\n          },\n          \"sendNativeMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"setUninstallURL\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"sessions\": {\n          \"getDevices\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getRecentlyClosed\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"restore\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"storage\": {\n          \"local\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          },\n          \"managed\": {\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            }\n          },\n          \"sync\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        },\n        \"tabs\": {\n          \"captureVisibleTab\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"detectLanguage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"discard\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"duplicate\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"executeScript\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getZoom\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getZoomSettings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goBack\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goForward\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"highlight\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"insertCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"query\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"reload\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"sendMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 3\n          },\n          \"setZoom\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"setZoomSettings\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"update\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          }\n        },\n        \"topSites\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"webNavigation\": {\n          \"getAllFrames\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFrame\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"webRequest\": {\n          \"handlerBehaviorChanged\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"windows\": {\n          \"create\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getLastFocused\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        }\n      };\n      if (Object.keys(apiMetadata).length === 0) {\n        throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n      }\n\n      /**\n       * A WeakMap subclass which creates and stores a value for any key which does\n       * not exist when accessed, but behaves exactly as an ordinary WeakMap\n       * otherwise.\n       *\n       * @param {function} createItem\n       *        A function which will be called in order to create the value for any\n       *        key which does not exist, the first time it is accessed. The\n       *        function receives, as its only argument, the key being created.\n       */\n      class DefaultWeakMap extends WeakMap {\n        constructor(createItem, items = undefined) {\n          super(items);\n          this.createItem = createItem;\n        }\n        get(key) {\n          if (!this.has(key)) {\n            this.set(key, this.createItem(key));\n          }\n          return super.get(key);\n        }\n      }\n\n      /**\n       * Returns true if the given object is an object with a `then` method, and can\n       * therefore be assumed to behave as a Promise.\n       *\n       * @param {*} value The value to test.\n       * @returns {boolean} True if the value is thenable.\n       */\n      const isThenable = value => {\n        return value && typeof value === \"object\" && typeof value.then === \"function\";\n      };\n\n      /**\n       * Creates and returns a function which, when called, will resolve or reject\n       * the given promise based on how it is called:\n       *\n       * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n       *   the promise is rejected with that value.\n       * - If the function is called with exactly one argument, the promise is\n       *   resolved to that value.\n       * - Otherwise, the promise is resolved to an array containing all of the\n       *   function's arguments.\n       *\n       * @param {object} promise\n       *        An object containing the resolution and rejection functions of a\n       *        promise.\n       * @param {function} promise.resolve\n       *        The promise's resolution function.\n       * @param {function} promise.reject\n       *        The promise's rejection function.\n       * @param {object} metadata\n       *        Metadata about the wrapped method which has created the callback.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function}\n       *        The generated callback function.\n       */\n      const makeCallback = (promise, metadata) => {\n        return (...callbackArgs) => {\n          if (extensionAPIs.runtime.lastError) {\n            promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n          } else if (metadata.singleCallbackArg || callbackArgs.length <= 1 && metadata.singleCallbackArg !== false) {\n            promise.resolve(callbackArgs[0]);\n          } else {\n            promise.resolve(callbackArgs);\n          }\n        };\n      };\n      const pluralizeArguments = numArgs => numArgs == 1 ? \"argument\" : \"arguments\";\n\n      /**\n       * Creates a wrapper function for a method with the given name and metadata.\n       *\n       * @param {string} name\n       *        The name of the method which is being wrapped.\n       * @param {object} metadata\n       *        Metadata about the method being wrapped.\n       * @param {integer} metadata.minArgs\n       *        The minimum number of arguments which must be passed to the\n       *        function. If called with fewer than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {integer} metadata.maxArgs\n       *        The maximum number of arguments which may be passed to the\n       *        function. If called with more than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function(object, ...*)}\n       *       The generated wrapper function.\n       */\n      const wrapAsyncFunction = (name, metadata) => {\n        return function asyncFunctionWrapper(target, ...args) {\n          if (args.length < metadata.minArgs) {\n            throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n          }\n          if (args.length > metadata.maxArgs) {\n            throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n          }\n          return new Promise((resolve, reject) => {\n            if (metadata.fallbackToNoCallback) {\n              // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n              // and so the polyfill will try to call it with a callback first, and it will fallback\n              // to not passing the callback if the first call fails.\n              try {\n                target[name](...args, makeCallback({\n                  resolve,\n                  reject\n                }, metadata));\n              } catch (cbError) {\n                console.warn(`${name} API method doesn't seem to support the callback parameter, ` + \"falling back to call it without a callback: \", cbError);\n                target[name](...args);\n\n                // Update the API method metadata, so that the next API calls will not try to\n                // use the unsupported callback anymore.\n                metadata.fallbackToNoCallback = false;\n                metadata.noCallback = true;\n                resolve();\n              }\n            } else if (metadata.noCallback) {\n              target[name](...args);\n              resolve();\n            } else {\n              target[name](...args, makeCallback({\n                resolve,\n                reject\n              }, metadata));\n            }\n          });\n        };\n      };\n\n      /**\n       * Wraps an existing method of the target object, so that calls to it are\n       * intercepted by the given wrapper function. The wrapper function receives,\n       * as its first argument, the original `target` object, followed by each of\n       * the arguments passed to the original method.\n       *\n       * @param {object} target\n       *        The original target object that the wrapped method belongs to.\n       * @param {function} method\n       *        The method being wrapped. This is used as the target of the Proxy\n       *        object which is created to wrap the method.\n       * @param {function} wrapper\n       *        The wrapper function which is called in place of a direct invocation\n       *        of the wrapped method.\n       *\n       * @returns {Proxy<function>}\n       *        A Proxy object for the given method, which invokes the given wrapper\n       *        method in its place.\n       */\n      const wrapMethod = (target, method, wrapper) => {\n        return new Proxy(method, {\n          apply(targetMethod, thisObj, args) {\n            return wrapper.call(thisObj, target, ...args);\n          }\n        });\n      };\n      let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\n      /**\n       * Wraps an object in a Proxy which intercepts and wraps certain methods\n       * based on the given `wrappers` and `metadata` objects.\n       *\n       * @param {object} target\n       *        The target object to wrap.\n       *\n       * @param {object} [wrappers = {}]\n       *        An object tree containing wrapper functions for special cases. Any\n       *        function present in this object tree is called in place of the\n       *        method in the same location in the `target` object tree. These\n       *        wrapper methods are invoked as described in {@see wrapMethod}.\n       *\n       * @param {object} [metadata = {}]\n       *        An object tree containing metadata used to automatically generate\n       *        Promise-based wrapper functions for asynchronous. Any function in\n       *        the `target` object tree which has a corresponding metadata object\n       *        in the same location in the `metadata` tree is replaced with an\n       *        automatically-generated wrapper function, as described in\n       *        {@see wrapAsyncFunction}\n       *\n       * @returns {Proxy<object>}\n       */\n      const wrapObject = (target, wrappers = {}, metadata = {}) => {\n        let cache = Object.create(null);\n        let handlers = {\n          has(proxyTarget, prop) {\n            return prop in target || prop in cache;\n          },\n          get(proxyTarget, prop, receiver) {\n            if (prop in cache) {\n              return cache[prop];\n            }\n            if (!(prop in target)) {\n              return undefined;\n            }\n            let value = target[prop];\n            if (typeof value === \"function\") {\n              // This is a method on the underlying object. Check if we need to do\n              // any wrapping.\n\n              if (typeof wrappers[prop] === \"function\") {\n                // We have a special-case wrapper for this method.\n                value = wrapMethod(target, target[prop], wrappers[prop]);\n              } else if (hasOwnProperty(metadata, prop)) {\n                // This is an async method that we have metadata for. Create a\n                // Promise wrapper for it.\n                let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n                value = wrapMethod(target, target[prop], wrapper);\n              } else {\n                // This is a method that we don't know or care about. Return the\n                // original method, bound to the underlying object.\n                value = value.bind(target);\n              }\n            } else if (typeof value === \"object\" && value !== null && (hasOwnProperty(wrappers, prop) || hasOwnProperty(metadata, prop))) {\n              // This is an object that we need to do some wrapping for the children\n              // of. Create a sub-object wrapper for it with the appropriate child\n              // metadata.\n              value = wrapObject(value, wrappers[prop], metadata[prop]);\n            } else if (hasOwnProperty(metadata, \"*\")) {\n              // Wrap all properties in * namespace.\n              value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n            } else {\n              // We don't need to do any wrapping for this property,\n              // so just forward all access to the underlying object.\n              Object.defineProperty(cache, prop, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                  return target[prop];\n                },\n                set(value) {\n                  target[prop] = value;\n                }\n              });\n              return value;\n            }\n            cache[prop] = value;\n            return value;\n          },\n          set(proxyTarget, prop, value, receiver) {\n            if (prop in cache) {\n              cache[prop] = value;\n            } else {\n              target[prop] = value;\n            }\n            return true;\n          },\n          defineProperty(proxyTarget, prop, desc) {\n            return Reflect.defineProperty(cache, prop, desc);\n          },\n          deleteProperty(proxyTarget, prop) {\n            return Reflect.deleteProperty(cache, prop);\n          }\n        };\n\n        // Per contract of the Proxy API, the \"get\" proxy handler must return the\n        // original value of the target if that value is declared read-only and\n        // non-configurable. For this reason, we create an object with the\n        // prototype set to `target` instead of using `target` directly.\n        // Otherwise we cannot return a custom object for APIs that\n        // are declared read-only and non-configurable, such as `chrome.devtools`.\n        //\n        // The proxy handlers themselves will still use the original `target`\n        // instead of the `proxyTarget`, so that the methods and properties are\n        // dereferenced via the original targets.\n        let proxyTarget = Object.create(target);\n        return new Proxy(proxyTarget, handlers);\n      };\n\n      /**\n       * Creates a set of wrapper functions for an event object, which handles\n       * wrapping of listener functions that those messages are passed.\n       *\n       * A single wrapper is created for each listener function, and stored in a\n       * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n       * retrieve the original wrapper, so that  attempts to remove a\n       * previously-added listener work as expected.\n       *\n       * @param {DefaultWeakMap<function, function>} wrapperMap\n       *        A DefaultWeakMap object which will create the appropriate wrapper\n       *        for a given listener function when one does not exist, and retrieve\n       *        an existing one when it does.\n       *\n       * @returns {object}\n       */\n      const wrapEvent = wrapperMap => ({\n        addListener(target, listener, ...args) {\n          target.addListener(wrapperMap.get(listener), ...args);\n        },\n        hasListener(target, listener) {\n          return target.hasListener(wrapperMap.get(listener));\n        },\n        removeListener(target, listener) {\n          target.removeListener(wrapperMap.get(listener));\n        }\n      });\n      const onRequestFinishedWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n\n        /**\n         * Wraps an onRequestFinished listener function so that it will return a\n         * `getContent()` property which returns a `Promise` rather than using a\n         * callback API.\n         *\n         * @param {object} req\n         *        The HAR entry object representing the network request.\n         */\n        return function onRequestFinished(req) {\n          const wrappedReq = wrapObject(req, {} /* wrappers */, {\n            getContent: {\n              minArgs: 0,\n              maxArgs: 0\n            }\n          });\n          listener(wrappedReq);\n        };\n      });\n      const onMessageWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n\n        /**\n         * Wraps a message listener function so that it may send responses based on\n         * its return value, rather than by returning a sentinel value and calling a\n         * callback. If the listener function returns a Promise, the response is\n         * sent when the promise either resolves or rejects.\n         *\n         * @param {*} message\n         *        The message sent by the other end of the channel.\n         * @param {object} sender\n         *        Details about the sender of the message.\n         * @param {function(*)} sendResponse\n         *        A callback which, when called with an arbitrary argument, sends\n         *        that value as a response.\n         * @returns {boolean}\n         *        True if the wrapped listener returned a Promise, which will later\n         *        yield a response. False otherwise.\n         */\n        return function onMessage(message, sender, sendResponse) {\n          let didCallSendResponse = false;\n          let wrappedSendResponse;\n          let sendResponsePromise = new Promise(resolve => {\n            wrappedSendResponse = function (response) {\n              didCallSendResponse = true;\n              resolve(response);\n            };\n          });\n          let result;\n          try {\n            result = listener(message, sender, wrappedSendResponse);\n          } catch (err) {\n            result = Promise.reject(err);\n          }\n          const isResultThenable = result !== true && isThenable(result);\n\n          // If the listener didn't returned true or a Promise, or called\n          // wrappedSendResponse synchronously, we can exit earlier\n          // because there will be no response sent from this listener.\n          if (result !== true && !isResultThenable && !didCallSendResponse) {\n            return false;\n          }\n\n          // A small helper to send the message if the promise resolves\n          // and an error if the promise rejects (a wrapped sendMessage has\n          // to translate the message into a resolved promise or a rejected\n          // promise).\n          const sendPromisedResult = promise => {\n            promise.then(msg => {\n              // send the message value.\n              sendResponse(msg);\n            }, error => {\n              // Send a JSON representation of the error if the rejected value\n              // is an instance of error, or the object itself otherwise.\n              let message;\n              if (error && (error instanceof Error || typeof error.message === \"string\")) {\n                message = error.message;\n              } else {\n                message = \"An unexpected error occurred\";\n              }\n              sendResponse({\n                __mozWebExtensionPolyfillReject__: true,\n                message\n              });\n            }).catch(err => {\n              // Print an error on the console if unable to send the response.\n              console.error(\"Failed to send onMessage rejected reply\", err);\n            });\n          };\n\n          // If the listener returned a Promise, send the resolved value as a\n          // result, otherwise wait the promise related to the wrappedSendResponse\n          // callback to resolve and send it as a response.\n          if (isResultThenable) {\n            sendPromisedResult(result);\n          } else {\n            sendPromisedResult(sendResponsePromise);\n          }\n\n          // Let Chrome know that the listener is replying.\n          return true;\n        };\n      });\n      const wrappedSendMessageCallback = ({\n        reject,\n        resolve\n      }, reply) => {\n        if (extensionAPIs.runtime.lastError) {\n          // Detect when none of the listeners replied to the sendMessage call and resolve\n          // the promise to undefined as in Firefox.\n          // See https://github.com/mozilla/webextension-polyfill/issues/130\n          if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n            resolve();\n          } else {\n            reject(new Error(extensionAPIs.runtime.lastError.message));\n          }\n        } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n          // Convert back the JSON representation of the error into\n          // an Error instance.\n          reject(new Error(reply.message));\n        } else {\n          resolve(reply);\n        }\n      };\n      const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n        return new Promise((resolve, reject) => {\n          const wrappedCb = wrappedSendMessageCallback.bind(null, {\n            resolve,\n            reject\n          });\n          args.push(wrappedCb);\n          apiNamespaceObj.sendMessage(...args);\n        });\n      };\n      const staticWrappers = {\n        devtools: {\n          network: {\n            onRequestFinished: wrapEvent(onRequestFinishedWrappers)\n          }\n        },\n        runtime: {\n          onMessage: wrapEvent(onMessageWrappers),\n          onMessageExternal: wrapEvent(onMessageWrappers),\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 1,\n            maxArgs: 3\n          })\n        },\n        tabs: {\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 2,\n            maxArgs: 3\n          })\n        }\n      };\n      const settingMetadata = {\n        clear: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        get: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        set: {\n          minArgs: 1,\n          maxArgs: 1\n        }\n      };\n      apiMetadata.privacy = {\n        network: {\n          \"*\": settingMetadata\n        },\n        services: {\n          \"*\": settingMetadata\n        },\n        websites: {\n          \"*\": settingMetadata\n        }\n      };\n      return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n    };\n\n    // The build process adds a UMD wrapper around this file, which makes the\n    // `module` variable available.\n    module.exports = wrapAPIs(chrome);\n  } else {\n    module.exports = globalThis.browser;\n  }\n});\n//# sourceMappingURL=browser-polyfill.js.map\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nexport function assert(condition, msg) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\nconst FLOAT32_MAX = 3.4028234663852886e38, FLOAT32_MIN = -3.4028234663852886e38, UINT32_MAX = 0xffffffff, INT32_MAX = 0x7fffffff, INT32_MIN = -0x80000000;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid int 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error(\"invalid int 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid uint 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error(\"invalid uint 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid protobuf float value.\n */\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid float 32: \" + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error(\"invalid float 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./assert.js\";\nconst enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum, it raises an error.\n */\nexport function getEnumType(enumObject) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any\n    const t = enumObject[enumTypeSymbol];\n    assert(t, \"missing enum type on enum object\");\n    return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\n/**\n * Sets reflection information on a generated enum.\n */\nexport function setEnumType(enumObject, typeName, values, opt) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    enumObject[enumTypeSymbol] = makeEnumType(typeName, values.map((v) => ({\n        no: v.no,\n        name: v.name,\n        localName: enumObject[v.no],\n    })), opt);\n}\n/**\n * Create a new EnumType with the given values.\n */\nexport function makeEnumType(typeName, values, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n    const names = Object.create(null);\n    const numbers = Object.create(null);\n    const normalValues = [];\n    for (const value of values) {\n        // We do not surface options at this time\n        // const value: EnumValueInfo = {...v, options: v.options ?? emptyReadonlyObject};\n        const n = normalizeEnumValue(value);\n        normalValues.push(n);\n        names[value.name] = n;\n        numbers[value.no] = n;\n    }\n    return {\n        typeName,\n        values: normalValues,\n        // We do not surface options at this time\n        // options: opt?.options ?? Object.create(null),\n        findName(name) {\n            return names[name];\n        },\n        findNumber(no) {\n            return numbers[no];\n        },\n    };\n}\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */\nexport function makeEnum(typeName, values, opt) {\n    const enumObject = {};\n    for (const value of values) {\n        const n = normalizeEnumValue(value);\n        enumObject[n.localName] = n.no;\n        enumObject[n.no] = n.localName;\n    }\n    setEnumType(enumObject, typeName, values, opt);\n    return enumObject;\n}\nfunction normalizeEnumValue(value) {\n    if (\"localName\" in value) {\n        return value;\n    }\n    return Object.assign(Object.assign({}, value), { localName: value.name });\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Message is the base class of every message, generated, or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time, use proto3.makeMessageType().\n */\nexport class Message {\n    /**\n     * Compare with a message of the same type.\n     * Note that this function disregards extensions and unknown fields.\n     */\n    equals(other) {\n        return this.getType().runtime.util.equals(this.getType(), this, other);\n    }\n    /**\n     * Create a deep copy.\n     */\n    clone() {\n        return this.getType().runtime.util.clone(this);\n    }\n    /**\n     * Parse from binary data, merging fields.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    fromBinary(bytes, options) {\n        const type = this.getType(), format = type.runtime.bin, opt = format.makeReadOptions(options);\n        format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON value.\n     */\n    fromJson(jsonValue, options) {\n        const type = this.getType(), format = type.runtime.json, opt = format.makeReadOptions(options);\n        format.readMessage(type, jsonValue, opt, this);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON string.\n     */\n    fromJsonString(jsonString, options) {\n        let json;\n        try {\n            json = JSON.parse(jsonString);\n        }\n        catch (e) {\n            throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${e instanceof Error ? e.message : String(e)}`);\n        }\n        return this.fromJson(json, options);\n    }\n    /**\n     * Serialize the message to binary data.\n     */\n    toBinary(options) {\n        const type = this.getType(), bin = type.runtime.bin, opt = bin.makeWriteOptions(options), writer = opt.writerFactory();\n        bin.writeMessage(this, writer, opt);\n        return writer.finish();\n    }\n    /**\n     * Serialize the message to a JSON value, a JavaScript value that can be\n     * passed to JSON.stringify().\n     */\n    toJson(options) {\n        const type = this.getType(), json = type.runtime.json, opt = json.makeWriteOptions(options);\n        return json.writeMessage(this, opt);\n    }\n    /**\n     * Serialize the message to a JSON string.\n     */\n    toJsonString(options) {\n        var _a;\n        const value = this.toJson(options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Override for serialization behavior. This will be invoked when calling\n     * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n     *\n     * Note that this will not serialize google.protobuf.Any with a packed\n     * message because the protobuf JSON format specifies that it needs to be\n     * unpacked, and this is only possible with a type registry to look up the\n     * message type.  As a result, attempting to serialize a message with this\n     * type will throw an Error.\n     *\n     * This method is protected because you should not need to invoke it\n     * directly -- instead use JSON.stringify or toJsonString for\n     * stringified JSON.  Alternatively, if actual JSON is desired, you should\n     * use toJson.\n     */\n    toJSON() {\n        return this.toJson({\n            emitDefaultValues: true,\n        });\n    }\n    /**\n     * Retrieve the MessageType of this message - a singleton that represents\n     * the protobuf message declaration and provides metadata for reflection-\n     * based operations.\n     */\n    getType() {\n        // Any class that extends Message _must_ provide a complete static\n        // implementation of MessageType.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n        return Object.getPrototypeOf(this).constructor;\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\n/**\n * Create a new message type using the given runtime.\n */\nexport function makeMessageType(runtime, typeName, fields, opt) {\n    var _a;\n    const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n    const type = {\n        [localName]: function (data) {\n            runtime.util.initFields(this);\n            runtime.util.initPartial(data, this);\n        },\n    }[localName];\n    Object.setPrototypeOf(type.prototype, new Message());\n    Object.assign(type, {\n        runtime,\n        typeName,\n        fields: runtime.util.newFieldList(fields),\n        fromBinary(bytes, options) {\n            return new type().fromBinary(bytes, options);\n        },\n        fromJson(jsonValue, options) {\n            return new type().fromJson(jsonValue, options);\n        },\n        fromJsonString(jsonString, options) {\n            return new type().fromJsonString(jsonString, options);\n        },\n        equals(a, b) {\n            return runtime.util.equals(type, a, b);\n        },\n    });\n    return type;\n}\n","// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = (bits.hi & 0x80000000);\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1FFFFF) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xFFFFFF;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xFFFFFF;\n    const high = (hi >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./private/assert.js\";\nimport { int64FromString, int64ToString, uInt64ToString, } from \"./google/varint.js\";\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`int64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`uint64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    const assertInt64String = (value) => assert(/^-?[0-9]+$/.test(value), `int64 invalid: ${value}`);\n    const assertUInt64String = (value) => assert(/^[0-9]+$/.test(value), `uint64 invalid: ${value}`);\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return int64FromString(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return int64FromString(value);\n        },\n        dec(lo, hi) {\n            return int64ToString(lo, hi);\n        },\n        uDec(lo, hi) {\n            return uInt64ToString(lo, hi);\n        },\n    };\n}\nexport const protoInt64 = makeInt64Support();\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of fields with 64 bit integral types (int64, uint64,\n * sint64, fixed64, sfixed64).\n *\n * This is a subset of google.protobuf.FieldOptions.JSType, which defines JS_NORMAL,\n * JS_STRING, and JS_NUMBER. Protobuf-ES uses BigInt by default, but will use\n * String if `[jstype = JS_STRING]` is specified.\n *\n * ```protobuf\n * uint64 field_a = 1; // BigInt\n * uint64 field_b = 2 [jstype = JS_NORMAL]; // BigInt\n * uint64 field_b = 2 [jstype = JS_NUMBER]; // BigInt\n * uint64 field_b = 2 [jstype = JS_STRING]; // String\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript BigInt.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript String.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n})(LongType || (LongType = {}));\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\n/**\n * Returns true if both scalar values are equal.\n */\nexport function scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the zero value for the given scalar type.\n */\nexport function scalarZeroValue(type, longType) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            return (longType == 0 ? protoInt64.zero : \"0\");\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\n/**\n * Returns true for a zero-value. For example, an integer has the zero-value `0`,\n * a boolean is `false`, a string is `\"\"`, and bytes is an empty Uint8Array.\n *\n * In proto3, zero-values are not written to the wire, unless the field is\n * optional or repeated.\n */\nexport function isScalarZeroValue(type, value) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return value === false;\n        case ScalarType.STRING:\n            return value === \"\";\n        case ScalarType.BYTES:\n            return value instanceof Uint8Array && !value.byteLength;\n        default:\n            return value == 0; // Loose comparison matches 0n, 0 and \"0\"\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { varint32read, varint32write, varint64read, varint64write, } from \"./google/varint.js\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./private/assert.js\";\nimport { protoInt64 } from \"./proto-int64.js\";\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n     * in editions with message_encoding = DELIMITED.\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * End of a tag-delimited aggregate.\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = protoInt64.enc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = protoInt64.uEnc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element and return the skipped data.\n     *\n     * When skipping StartGroup, provide the tags field number to check for\n     * matching field number in the EndGroup tag.\n     */\n    skip(wireType, fieldNo) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                for (;;) {\n                    const [fn, wt] = this.tag();\n                    if (wt === WireType.EndGroup) {\n                        if (fieldNo !== undefined && fn !== fieldNo) {\n                            throw new Error(\"invalid end group tag\");\n                        }\n                        break;\n                    }\n                    this.skip(wt, fn);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { scalarZeroValue } from \"./scalars.js\";\nimport { WireType } from \"../binary-encoding.js\";\n/**\n * Create a new extension using the given runtime.\n */\nexport function makeExtension(runtime, typeName, extendee, field) {\n    let fi;\n    return {\n        typeName,\n        extendee,\n        get field() {\n            if (!fi) {\n                const i = (typeof field == \"function\" ? field() : field);\n                i.name = typeName.split(\".\").pop();\n                i.jsonName = `[${typeName}]`;\n                fi = runtime.util.newFieldList([i]).list()[0];\n            }\n            return fi;\n        },\n        runtime,\n    };\n}\n/**\n * Create a container that allows us to read extension fields into it with the\n * same logic as regular fields.\n */\nexport function createExtensionContainer(extension) {\n    const localName = extension.field.localName;\n    const container = Object.create(null);\n    container[localName] = initExtensionField(extension);\n    return [container, () => container[localName]];\n}\nfunction initExtensionField(ext) {\n    const field = ext.field;\n    if (field.repeated) {\n        return [];\n    }\n    if (field.default !== undefined) {\n        return field.default;\n    }\n    switch (field.kind) {\n        case \"enum\":\n            return field.T.values[0].no;\n        case \"scalar\":\n            return scalarZeroValue(field.T, field.L);\n        case \"message\":\n            // eslint-disable-next-line no-case-declarations\n            const T = field.T, value = new T();\n            return T.fieldWrapper ? T.fieldWrapper.unwrapField(value) : value;\n        case \"map\":\n            throw \"map fields are not allowed to be extensions\";\n    }\n}\n/**\n * Helper to filter unknown fields, optimized based on field type.\n */\nexport function filterUnknownFields(unknownFields, field) {\n    if (!field.repeated && (field.kind == \"enum\" || field.kind == \"scalar\")) {\n        // singular scalar fields do not merge, we pick the last\n        for (let i = unknownFields.length - 1; i >= 0; --i) {\n            if (unknownFields[i].no == field.no) {\n                return [unknownFields[i]];\n            }\n        }\n        return [];\n    }\n    return unknownFields.filter((uf) => uf.no === field.no);\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n// lookup table from base64 character to byte\nlet encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\nexport const protoBase64 = {\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space, including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   \"-\" instead of \"+\",\n     *   \"_\" instead of \"/\",\n     *   no padding\n     */\n    dec(base64Str) {\n        // estimate byte size, not accounting for inner padding and whitespace\n        let es = (base64Str.length * 3) / 4;\n        if (base64Str[base64Str.length - 2] == \"=\")\n            es -= 2;\n        else if (base64Str[base64Str.length - 1] == \"=\")\n            es -= 1;\n        let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n        groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // previous byte\n        for (let i = 0; i < base64Str.length; i++) {\n            b = decTable[base64Str.charCodeAt(i)];\n            if (b === undefined) {\n                switch (base64Str[i]) {\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"=\":\n                        groupPos = 0; // reset state when padding found\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"\\n\":\n                    case \"\\r\":\n                    case \"\\t\":\n                    case \" \":\n                        continue; // skip white-space, and padding\n                    default:\n                        throw Error(\"invalid base64 string.\");\n                }\n            }\n            switch (groupPos) {\n                case 0:\n                    p = b;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                    p = b;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                    p = b;\n                    groupPos = 3;\n                    break;\n                case 3:\n                    bytes[bytePos++] = ((p & 3) << 6) | b;\n                    groupPos = 0;\n                    break;\n            }\n        }\n        if (groupPos == 1)\n            throw Error(\"invalid base64 string.\");\n        return bytes.subarray(0, bytePos);\n    },\n    /**\n     * Encode a byte array to a base64 string.\n     */\n    enc(bytes) {\n        let base64 = \"\", groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // carry over from previous byte\n        for (let i = 0; i < bytes.length; i++) {\n            b = bytes[i];\n            switch (groupPos) {\n                case 0:\n                    base64 += encTable[b >> 2];\n                    p = (b & 3) << 4;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    base64 += encTable[p | (b >> 4)];\n                    p = (b & 15) << 2;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    base64 += encTable[p | (b >> 6)];\n                    base64 += encTable[b & 63];\n                    groupPos = 0;\n                    break;\n            }\n        }\n        // add output padding\n        if (groupPos) {\n            base64 += encTable[p];\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n        return base64;\n    },\n};\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./private/assert.js\";\nimport { createExtensionContainer, filterUnknownFields, } from \"./private/extensions.js\";\n/**\n * Retrieve an extension value from a message.\n *\n * The function never returns undefined. Use hasExtension() to check whether an\n * extension is set. If the extension is not set, this function returns the\n * default value (if one was specified in the protobuf source), or the zero value\n * (for example `0` for numeric types, `[]` for repeated extension fields, and\n * an empty message instance for message fields).\n *\n * Extensions are stored as unknown fields on a message. To mutate an extension\n * value, make sure to store the new value with setExtension() after mutating.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nexport function getExtension(message, extension, options) {\n    assertExtendee(extension, message);\n    const opt = extension.runtime.bin.makeReadOptions(options);\n    const ufs = filterUnknownFields(message.getType().runtime.bin.listUnknownFields(message), extension.field);\n    const [container, get] = createExtensionContainer(extension);\n    for (const uf of ufs) {\n        extension.runtime.bin.readField(container, opt.readerFactory(uf.data), extension.field, uf.wireType, opt);\n    }\n    return get();\n}\n/**\n * Set an extension value on a message. If the message already has a value for\n * this extension, the value is replaced.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nexport function setExtension(message, extension, value, options) {\n    assertExtendee(extension, message);\n    const readOpt = extension.runtime.bin.makeReadOptions(options);\n    const writeOpt = extension.runtime.bin.makeWriteOptions(options);\n    if (hasExtension(message, extension)) {\n        const ufs = message\n            .getType()\n            .runtime.bin.listUnknownFields(message)\n            .filter((uf) => uf.no != extension.field.no);\n        message.getType().runtime.bin.discardUnknownFields(message);\n        for (const uf of ufs) {\n            message\n                .getType()\n                .runtime.bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n        }\n    }\n    const writer = writeOpt.writerFactory();\n    let f = extension.field;\n    // Implicit presence does not apply to extensions, see https://github.com/protocolbuffers/protobuf/issues/8234\n    // We patch the field info to use explicit presence:\n    if (!f.opt && !f.repeated && (f.kind == \"enum\" || f.kind == \"scalar\")) {\n        f = Object.assign(Object.assign({}, extension.field), { opt: true });\n    }\n    extension.runtime.bin.writeField(f, value, writer, writeOpt);\n    const reader = readOpt.readerFactory(writer.finish());\n    while (reader.pos < reader.len) {\n        const [no, wireType] = reader.tag();\n        const data = reader.skip(wireType, no);\n        message.getType().runtime.bin.onUnknownField(message, no, wireType, data);\n    }\n}\n/**\n * Remove an extension value from a message.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nexport function clearExtension(message, extension) {\n    assertExtendee(extension, message);\n    if (hasExtension(message, extension)) {\n        const bin = message.getType().runtime.bin;\n        const ufs = bin\n            .listUnknownFields(message)\n            .filter((uf) => uf.no != extension.field.no);\n        bin.discardUnknownFields(message);\n        for (const uf of ufs) {\n            bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n        }\n    }\n}\n/**\n * Check whether an extension is set on a message.\n */\nexport function hasExtension(message, extension) {\n    const messageType = message.getType();\n    return (extension.extendee.typeName === messageType.typeName &&\n        !!messageType.runtime.bin\n            .listUnknownFields(message)\n            .find((uf) => uf.no == extension.field.no));\n}\nfunction assertExtendee(extension, message) {\n    assert(extension.extendee.typeName == message.getType().typeName, `extension ${extension.typeName} can only be applied to message ${extension.extendee.typeName}`);\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { isScalarZeroValue, scalarZeroValue } from \"./scalars.js\";\n/**\n * Returns true if the field is set.\n */\nexport function isFieldSet(field, target) {\n    const localName = field.localName;\n    if (field.repeated) {\n        return target[localName].length > 0;\n    }\n    if (field.oneof) {\n        return target[field.oneof.localName].case === localName; // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n    }\n    switch (field.kind) {\n        case \"enum\":\n        case \"scalar\":\n            if (field.opt || field.req) {\n                // explicit presence\n                return target[localName] !== undefined;\n            }\n            // implicit presence\n            if (field.kind == \"enum\") {\n                return target[localName] !== field.T.values[0].no;\n            }\n            return !isScalarZeroValue(field.T, target[localName]);\n        case \"message\":\n            return target[localName] !== undefined;\n        case \"map\":\n            return Object.keys(target[localName]).length > 0; // eslint-disable-line @typescript-eslint/no-unsafe-argument\n    }\n}\n/**\n * Resets the field, so that isFieldSet() will return false.\n */\nexport function clearField(field, target) {\n    const localName = field.localName;\n    const implicitPresence = !field.opt && !field.req;\n    if (field.repeated) {\n        target[localName] = [];\n    }\n    else if (field.oneof) {\n        target[field.oneof.localName] = { case: undefined };\n    }\n    else {\n        switch (field.kind) {\n            case \"map\":\n                target[localName] = {};\n                break;\n            case \"enum\":\n                target[localName] = implicitPresence ? field.T.values[0].no : undefined;\n                break;\n            case \"scalar\":\n                target[localName] = implicitPresence\n                    ? scalarZeroValue(field.T, field.L)\n                    : undefined;\n                break;\n            case \"message\":\n                target[localName] = undefined;\n                break;\n        }\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"./message.js\";\n/**\n * Check whether the given object is any subtype of Message or is a specific\n * Message by passing the type.\n *\n * Just like `instanceof`, `isMessage` narrows the type. The advantage of\n * `isMessage` is that it compares identity by the message type name, not by\n * class identity. This makes it robust against the dual package hazard and\n * similar situations, where the same message is duplicated.\n *\n * This function is _mostly_ equivalent to the `instanceof` operator. For\n * example, `isMessage(foo, MyMessage)` is the same as `foo instanceof MyMessage`,\n * and `isMessage(foo)` is the same as `foo instanceof Message`. In most cases,\n * `isMessage` should be preferred over `instanceof`.\n *\n * However, due to the fact that `isMessage` does not use class identity, there\n * are subtle differences between this function and `instanceof`. Notably,\n * calling `isMessage` on an explicit type of Message will return false.\n */\nexport function isMessage(arg, type) {\n    if (arg === null || typeof arg != \"object\") {\n        return false;\n    }\n    if (!Object.getOwnPropertyNames(Message.prototype).every((m) => m in arg && typeof arg[m] == \"function\")) {\n        return false;\n    }\n    const actualType = arg.getType();\n    if (actualType === null ||\n        typeof actualType != \"function\" ||\n        !(\"typeName\" in actualType) ||\n        typeof actualType.typeName != \"string\") {\n        return false;\n    }\n    return type === undefined ? true : actualType.typeName == type.typeName;\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\nimport { ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/**\n * Wrap a primitive message field value in its corresponding wrapper\n * message. This function is idempotent.\n */\nexport function wrapField(type, value) {\n    if (isMessage(value) || !type.fieldWrapper) {\n        return value;\n    }\n    return type.fieldWrapper.wrapField(value);\n}\n/**\n * If the given field uses one of the well-known wrapper types, return\n * the primitive type it wraps.\n */\nexport function getUnwrappedFieldType(field) {\n    if (field.fieldKind !== \"message\") {\n        return undefined;\n    }\n    if (field.repeated) {\n        return undefined;\n    }\n    if (field.oneof != undefined) {\n        return undefined;\n    }\n    return wktWrapperToScalarType[field.message.typeName];\n}\nconst wktWrapperToScalarType = {\n    \"google.protobuf.DoubleValue\": ScalarType.DOUBLE,\n    \"google.protobuf.FloatValue\": ScalarType.FLOAT,\n    \"google.protobuf.Int64Value\": ScalarType.INT64,\n    \"google.protobuf.UInt64Value\": ScalarType.UINT64,\n    \"google.protobuf.Int32Value\": ScalarType.INT32,\n    \"google.protobuf.UInt32Value\": ScalarType.UINT32,\n    \"google.protobuf.BoolValue\": ScalarType.BOOL,\n    \"google.protobuf.StringValue\": ScalarType.STRING,\n    \"google.protobuf.BytesValue\": ScalarType.BYTES,\n};\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { protoBase64 } from \"../proto-base64.js\";\nimport { createExtensionContainer } from \"./extensions.js\";\nimport { getExtension, hasExtension, setExtension, } from \"../extension-accessor.js\";\nimport { clearField, isFieldSet } from \"./reflect.js\";\nimport { wrapField } from \"./field-wrapper.js\";\nimport { scalarZeroValue } from \"./scalars.js\";\nimport { isScalarZeroValue } from \"./scalars.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/* eslint-disable no-case-declarations,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call */\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n    ignoreUnknownFields: false,\n};\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\nconst tokenNull = Symbol();\nconst tokenIgnoredUnknownEnum = Symbol();\nexport function makeJsonFormat() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        readMessage(type, json, options, message) {\n            if (json == null || Array.isArray(json) || typeof json != \"object\") {\n                throw new Error(`cannot decode message ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n            }\n            message = message !== null && message !== void 0 ? message : new type();\n            const oneofSeen = new Map();\n            const registry = options.typeRegistry;\n            for (const [jsonKey, jsonValue] of Object.entries(json)) {\n                const field = type.fields.findJsonName(jsonKey);\n                if (field) {\n                    if (field.oneof) {\n                        if (jsonValue === null && field.kind == \"scalar\") {\n                            // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First,Second}\n                            continue;\n                        }\n                        const seen = oneofSeen.get(field.oneof);\n                        if (seen !== undefined) {\n                            throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof \"${field.oneof.name}\" present: \"${seen}\", \"${jsonKey}\"`);\n                        }\n                        oneofSeen.set(field.oneof, jsonKey);\n                    }\n                    readField(message, jsonValue, field, options, type);\n                }\n                else {\n                    let found = false;\n                    if ((registry === null || registry === void 0 ? void 0 : registry.findExtension) &&\n                        jsonKey.startsWith(\"[\") &&\n                        jsonKey.endsWith(\"]\")) {\n                        const ext = registry.findExtension(jsonKey.substring(1, jsonKey.length - 1));\n                        if (ext && ext.extendee.typeName == type.typeName) {\n                            found = true;\n                            const [container, get] = createExtensionContainer(ext);\n                            readField(container, jsonValue, ext.field, options, ext);\n                            // We pass on the options as BinaryReadOptions/BinaryWriteOptions,\n                            // so that users can bring their own binary reader and writer factories\n                            // if necessary.\n                            setExtension(message, ext, get(), options);\n                        }\n                    }\n                    if (!found && !options.ignoreUnknownFields) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: key \"${jsonKey}\" is unknown`);\n                    }\n                }\n            }\n            return message;\n        },\n        writeMessage(message, options) {\n            const type = message.getType();\n            const json = {};\n            let field;\n            try {\n                for (field of type.fields.byNumber()) {\n                    if (!isFieldSet(field, message)) {\n                        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                        if (field.req) {\n                            throw `required field not set`;\n                        }\n                        if (!options.emitDefaultValues) {\n                            continue;\n                        }\n                        if (!canEmitFieldDefaultValue(field)) {\n                            continue;\n                        }\n                    }\n                    const value = field.oneof\n                        ? message[field.oneof.localName].value\n                        : message[field.localName];\n                    const jsonValue = writeField(field, value, options);\n                    if (jsonValue !== undefined) {\n                        json[options.useProtoFieldName ? field.name : field.jsonName] =\n                            jsonValue;\n                    }\n                }\n                const registry = options.typeRegistry;\n                if (registry === null || registry === void 0 ? void 0 : registry.findExtensionFor) {\n                    for (const uf of type.runtime.bin.listUnknownFields(message)) {\n                        const ext = registry.findExtensionFor(type.typeName, uf.no);\n                        if (ext && hasExtension(message, ext)) {\n                            // We pass on the options as BinaryReadOptions, so that users can bring their own\n                            // binary reader factory if necessary.\n                            const value = getExtension(message, ext, options);\n                            const jsonValue = writeField(ext.field, value, options);\n                            if (jsonValue !== undefined) {\n                                json[ext.field.jsonName] = jsonValue;\n                            }\n                        }\n                    }\n                }\n            }\n            catch (e) {\n                const m = field\n                    ? `cannot encode field ${type.typeName}.${field.name} to JSON`\n                    : `cannot encode message ${type.typeName} to JSON`;\n                const r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            return json;\n        },\n        readScalar(type, json, longType) {\n            // The signature of our internal function has changed. For backwards-\n            // compatibility, we support the old form that is part of the public API\n            // through the interface JsonFormat.\n            return readScalar(type, json, longType !== null && longType !== void 0 ? longType : LongType.BIGINT, true);\n        },\n        writeScalar(type, value, emitDefaultValues) {\n            // The signature of our internal function has changed. For backwards-\n            // compatibility, we support the old form that is part of the public API\n            // through the interface JsonFormat.\n            if (value === undefined) {\n                return undefined;\n            }\n            if (emitDefaultValues || isScalarZeroValue(type, value)) {\n                return writeScalar(type, value);\n            }\n            return undefined;\n        },\n        debug: debugJsonValue,\n    };\n}\nfunction debugJsonValue(json) {\n    if (json === null) {\n        return \"null\";\n    }\n    switch (typeof json) {\n        case \"object\":\n            return Array.isArray(json) ? \"array\" : \"object\";\n        case \"string\":\n            return json.length > 100 ? \"string\" : `\"${json.split('\"').join('\\\\\"')}\"`;\n        default:\n            return String(json);\n    }\n}\n// Read a JSON value for a field.\n// The \"parentType\" argument is only used to provide context in errors.\nfunction readField(target, jsonValue, field, options, parentType) {\n    let localName = field.localName;\n    if (field.repeated) {\n        assert(field.kind != \"map\");\n        if (jsonValue === null) {\n            return;\n        }\n        if (!Array.isArray(jsonValue)) {\n            throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n        }\n        const targetArray = target[localName];\n        for (const jsonItem of jsonValue) {\n            if (jsonItem === null) {\n                throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`);\n            }\n            switch (field.kind) {\n                case \"message\":\n                    targetArray.push(field.T.fromJson(jsonItem, options));\n                    break;\n                case \"enum\":\n                    const enumValue = readEnum(field.T, jsonItem, options.ignoreUnknownFields, true);\n                    if (enumValue !== tokenIgnoredUnknownEnum) {\n                        targetArray.push(enumValue);\n                    }\n                    break;\n                case \"scalar\":\n                    try {\n                        targetArray.push(readScalar(field.T, jsonItem, field.L, true));\n                    }\n                    catch (e) {\n                        let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`;\n                        if (e instanceof Error && e.message.length > 0) {\n                            m += `: ${e.message}`;\n                        }\n                        throw new Error(m);\n                    }\n                    break;\n            }\n        }\n    }\n    else if (field.kind == \"map\") {\n        if (jsonValue === null) {\n            return;\n        }\n        if (typeof jsonValue != \"object\" || Array.isArray(jsonValue)) {\n            throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n        }\n        const targetMap = target[localName];\n        for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)) {\n            if (jsonMapValue === null) {\n                throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: map value null`);\n            }\n            let key;\n            try {\n                key = readMapKey(field.K, jsonMapKey);\n            }\n            catch (e) {\n                let m = `cannot decode map key for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                if (e instanceof Error && e.message.length > 0) {\n                    m += `: ${e.message}`;\n                }\n                throw new Error(m);\n            }\n            switch (field.V.kind) {\n                case \"message\":\n                    targetMap[key] = field.V.T.fromJson(jsonMapValue, options);\n                    break;\n                case \"enum\":\n                    const enumValue = readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields, true);\n                    if (enumValue !== tokenIgnoredUnknownEnum) {\n                        targetMap[key] = enumValue;\n                    }\n                    break;\n                case \"scalar\":\n                    try {\n                        targetMap[key] = readScalar(field.V.T, jsonMapValue, LongType.BIGINT, true);\n                    }\n                    catch (e) {\n                        let m = `cannot decode map value for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                        if (e instanceof Error && e.message.length > 0) {\n                            m += `: ${e.message}`;\n                        }\n                        throw new Error(m);\n                    }\n                    break;\n            }\n        }\n    }\n    else {\n        if (field.oneof) {\n            target = target[field.oneof.localName] = { case: localName };\n            localName = \"value\";\n        }\n        switch (field.kind) {\n            case \"message\":\n                const messageType = field.T;\n                if (jsonValue === null &&\n                    messageType.typeName != \"google.protobuf.Value\") {\n                    return;\n                }\n                let currentValue = target[localName];\n                if (isMessage(currentValue)) {\n                    currentValue.fromJson(jsonValue, options);\n                }\n                else {\n                    target[localName] = currentValue = messageType.fromJson(jsonValue, options);\n                    if (messageType.fieldWrapper && !field.oneof) {\n                        target[localName] =\n                            messageType.fieldWrapper.unwrapField(currentValue);\n                    }\n                }\n                break;\n            case \"enum\":\n                const enumValue = readEnum(field.T, jsonValue, options.ignoreUnknownFields, false);\n                switch (enumValue) {\n                    case tokenNull:\n                        clearField(field, target);\n                        break;\n                    case tokenIgnoredUnknownEnum:\n                        break;\n                    default:\n                        target[localName] = enumValue;\n                        break;\n                }\n                break;\n            case \"scalar\":\n                try {\n                    const scalarValue = readScalar(field.T, jsonValue, field.L, false);\n                    switch (scalarValue) {\n                        case tokenNull:\n                            clearField(field, target);\n                            break;\n                        default:\n                            target[localName] = scalarValue;\n                            break;\n                    }\n                }\n                catch (e) {\n                    let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                    if (e instanceof Error && e.message.length > 0) {\n                        m += `: ${e.message}`;\n                    }\n                    throw new Error(m);\n                }\n                break;\n        }\n    }\n}\nfunction readMapKey(type, json) {\n    if (type === ScalarType.BOOL) {\n        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n        switch (json) {\n            case \"true\":\n                json = true;\n                break;\n            case \"false\":\n                json = false;\n                break;\n        }\n    }\n    return readScalar(type, json, LongType.BIGINT, true).toString();\n}\nfunction readScalar(type, json, longType, nullAsZeroValue) {\n    if (json === null) {\n        if (nullAsZeroValue) {\n            return scalarZeroValue(type, longType);\n        }\n        return tokenNull;\n    }\n    // every valid case in the switch below returns, and every fall\n    // through is regarded as a failure.\n    switch (type) {\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            if (json === \"NaN\")\n                return Number.NaN;\n            if (json === \"Infinity\")\n                return Number.POSITIVE_INFINITY;\n            if (json === \"-Infinity\")\n                return Number.NEGATIVE_INFINITY;\n            if (json === \"\") {\n                // empty string is not a number\n                break;\n            }\n            if (typeof json == \"string\" && json.trim().length !== json.length) {\n                // extra whitespace\n                break;\n            }\n            if (typeof json != \"string\" && typeof json != \"number\") {\n                break;\n            }\n            const float = Number(json);\n            if (Number.isNaN(float)) {\n                // not a number\n                break;\n            }\n            if (!Number.isFinite(float)) {\n                // infinity and -infinity are handled by string representation above, so this is an error\n                break;\n            }\n            if (type == ScalarType.FLOAT)\n                assertFloat32(float);\n            return float;\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.UINT32:\n            let int32;\n            if (typeof json == \"number\")\n                int32 = json;\n            else if (typeof json == \"string\" && json.length > 0) {\n                if (json.trim().length === json.length)\n                    int32 = Number(json);\n            }\n            if (int32 === undefined)\n                break;\n            if (type == ScalarType.UINT32 || type == ScalarType.FIXED32)\n                assertUInt32(int32);\n            else\n                assertInt32(int32);\n            return int32;\n        // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const long = protoInt64.parse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? long.toString() : long;\n        case ScalarType.FIXED64:\n        case ScalarType.UINT64:\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const uLong = protoInt64.uParse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? uLong.toString() : uLong;\n        // bool:\n        case ScalarType.BOOL:\n            if (typeof json !== \"boolean\")\n                break;\n            return json;\n        // string:\n        case ScalarType.STRING:\n            if (typeof json !== \"string\") {\n                break;\n            }\n            // A string must always contain UTF-8 encoded or 7-bit ASCII.\n            // We validate with encodeURIComponent, which appears to be the fastest widely available option.\n            try {\n                encodeURIComponent(json);\n            }\n            catch (e) {\n                throw new Error(\"invalid UTF8\");\n            }\n            return json;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            if (json === \"\")\n                return new Uint8Array(0);\n            if (typeof json !== \"string\")\n                break;\n            return protoBase64.dec(json);\n    }\n    throw new Error();\n}\nfunction readEnum(type, json, ignoreUnknownFields, nullAsZeroValue) {\n    if (json === null) {\n        if (type.typeName == \"google.protobuf.NullValue\") {\n            return 0; // google.protobuf.NullValue.NULL_VALUE = 0\n        }\n        return nullAsZeroValue ? type.values[0].no : tokenNull;\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (typeof json) {\n        case \"number\":\n            if (Number.isInteger(json)) {\n                return json;\n            }\n            break;\n        case \"string\":\n            const value = type.findName(json);\n            if (value !== undefined) {\n                return value.no;\n            }\n            if (ignoreUnknownFields) {\n                return tokenIgnoredUnknownEnum;\n            }\n            break;\n    }\n    throw new Error(`cannot decode enum ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n}\n// Decide whether an unset field should be emitted with JSON write option `emitDefaultValues`\nfunction canEmitFieldDefaultValue(field) {\n    if (field.repeated || field.kind == \"map\") {\n        // maps are {}, repeated fields are []\n        return true;\n    }\n    if (field.oneof) {\n        // oneof fields are never emitted\n        return false;\n    }\n    if (field.kind == \"message\") {\n        // singular message field are allowed to emit JSON null, but we do not\n        return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (field.opt || field.req) {\n        // the field uses explicit presence, so we cannot emit a zero value\n        return false;\n    }\n    return true;\n}\nfunction writeField(field, value, options) {\n    if (field.kind == \"map\") {\n        assert(typeof value == \"object\" && value != null);\n        const jsonObj = {};\n        const entries = Object.entries(value);\n        switch (field.V.kind) {\n            case \"scalar\":\n                for (const [entryKey, entryValue] of entries) {\n                    jsonObj[entryKey.toString()] = writeScalar(field.V.T, entryValue); // JSON standard allows only (double quoted) string as property key\n                }\n                break;\n            case \"message\":\n                for (const [entryKey, entryValue] of entries) {\n                    // JSON standard allows only (double quoted) string as property key\n                    jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                }\n                break;\n            case \"enum\":\n                const enumType = field.V.T;\n                for (const [entryKey, entryValue] of entries) {\n                    // JSON standard allows only (double quoted) string as property key\n                    jsonObj[entryKey.toString()] = writeEnum(enumType, entryValue, options.enumAsInteger);\n                }\n                break;\n        }\n        return options.emitDefaultValues || entries.length > 0\n            ? jsonObj\n            : undefined;\n    }\n    if (field.repeated) {\n        assert(Array.isArray(value));\n        const jsonArr = [];\n        switch (field.kind) {\n            case \"scalar\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(writeScalar(field.T, value[i]));\n                }\n                break;\n            case \"enum\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(writeEnum(field.T, value[i], options.enumAsInteger));\n                }\n                break;\n            case \"message\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(value[i].toJson(options));\n                }\n                break;\n        }\n        return options.emitDefaultValues || jsonArr.length > 0\n            ? jsonArr\n            : undefined;\n    }\n    switch (field.kind) {\n        case \"scalar\":\n            return writeScalar(field.T, value);\n        case \"enum\":\n            return writeEnum(field.T, value, options.enumAsInteger);\n        case \"message\":\n            return wrapField(field.T, value).toJson(options);\n    }\n}\nfunction writeEnum(type, value, enumAsInteger) {\n    var _a;\n    assert(typeof value == \"number\");\n    if (type.typeName == \"google.protobuf.NullValue\") {\n        return null;\n    }\n    if (enumAsInteger) {\n        return value;\n    }\n    const val = type.findNumber(value);\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction writeScalar(type, value) {\n    switch (type) {\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n            assert(typeof value == \"number\");\n            return value;\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.FLOAT:\n        // assertFloat32(value);\n        case ScalarType.DOUBLE: // eslint-disable-line no-fallthrough\n            assert(typeof value == \"number\");\n            if (Number.isNaN(value))\n                return \"NaN\";\n            if (value === Number.POSITIVE_INFINITY)\n                return \"Infinity\";\n            if (value === Number.NEGATIVE_INFINITY)\n                return \"-Infinity\";\n            return value;\n        // string:\n        case ScalarType.STRING:\n            assert(typeof value == \"string\");\n            return value;\n        // bool:\n        case ScalarType.BOOL:\n            assert(typeof value == \"boolean\");\n            return value;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            assert(typeof value == \"bigint\" ||\n                typeof value == \"string\" ||\n                typeof value == \"number\");\n            return value.toString();\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            assert(value instanceof Uint8Array);\n            return protoBase64.enc(value);\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { BinaryReader, BinaryWriter, WireType } from \"../binary-encoding.js\";\nimport { Message } from \"../message.js\";\nimport { wrapField } from \"./field-wrapper.js\";\nimport { scalarZeroValue } from \"./scalars.js\";\nimport { assert } from \"./assert.js\";\nimport { isFieldSet } from \"./reflect.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-return */\nconst unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n    readerFactory: (bytes) => new BinaryReader(bytes),\n};\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nexport function makeBinaryFormat() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        listUnknownFields(message) {\n            var _a;\n            return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n        },\n        discardUnknownFields(message) {\n            delete message[unknownFieldsSymbol];\n        },\n        writeUnknownFields(message, writer) {\n            const m = message;\n            const c = m[unknownFieldsSymbol];\n            if (c) {\n                for (const f of c) {\n                    writer.tag(f.no, f.wireType).raw(f.data);\n                }\n            }\n        },\n        onUnknownField(message, no, wireType, data) {\n            const m = message;\n            if (!Array.isArray(m[unknownFieldsSymbol])) {\n                m[unknownFieldsSymbol] = [];\n            }\n            m[unknownFieldsSymbol].push({ no, wireType, data });\n        },\n        readMessage(message, reader, lengthOrEndTagFieldNo, options, delimitedMessageEncoding) {\n            const type = message.getType();\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            const end = delimitedMessageEncoding\n                ? reader.len\n                : reader.pos + lengthOrEndTagFieldNo;\n            let fieldNo, wireType;\n            while (reader.pos < end) {\n                [fieldNo, wireType] = reader.tag();\n                if (delimitedMessageEncoding === true &&\n                    wireType == WireType.EndGroup) {\n                    break;\n                }\n                const field = type.fields.find(fieldNo);\n                if (!field) {\n                    const data = reader.skip(wireType, fieldNo);\n                    if (options.readUnknownFields) {\n                        this.onUnknownField(message, fieldNo, wireType, data);\n                    }\n                    continue;\n                }\n                readField(message, reader, field, wireType, options);\n            }\n            if (delimitedMessageEncoding && // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n                (wireType != WireType.EndGroup || fieldNo !== lengthOrEndTagFieldNo)) {\n                throw new Error(`invalid end group tag`);\n            }\n        },\n        readField,\n        writeMessage(message, writer, options) {\n            const type = message.getType();\n            for (const field of type.fields.byNumber()) {\n                if (!isFieldSet(field, message)) {\n                    if (field.req) {\n                        throw new Error(`cannot encode field ${type.typeName}.${field.name} to binary: required field not set`);\n                    }\n                    continue;\n                }\n                const value = field.oneof\n                    ? message[field.oneof.localName].value\n                    : message[field.localName];\n                writeField(field, value, writer, options);\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message, writer);\n            }\n            return writer;\n        },\n        writeField(field, value, writer, options) {\n            // The behavior of our internal function has changed, it does no longer\n            // accept `undefined` values for singular scalar and map.\n            // For backwards-compatibility, we support the old form that is part of\n            // the public API through the interface BinaryFormat.\n            if (value === undefined) {\n                return undefined;\n            }\n            writeField(field, value, writer, options);\n        },\n    };\n}\nfunction readField(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\nreader, field, wireType, options) {\n    let { repeated, localName } = field;\n    if (field.oneof) {\n        target = target[field.oneof.localName];\n        if (target.case != localName) {\n            delete target.value;\n        }\n        target.case = localName;\n        localName = \"value\";\n    }\n    switch (field.kind) {\n        case \"scalar\":\n        case \"enum\":\n            const scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n            let read = readScalar;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            if (field.kind == \"scalar\" && field.L > 0) {\n                read = readScalarLTString;\n            }\n            if (repeated) {\n                let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                const isPacked = wireType == WireType.LengthDelimited &&\n                    scalarType != ScalarType.STRING &&\n                    scalarType != ScalarType.BYTES;\n                if (isPacked) {\n                    let e = reader.uint32() + reader.pos;\n                    while (reader.pos < e) {\n                        arr.push(read(reader, scalarType));\n                    }\n                }\n                else {\n                    arr.push(read(reader, scalarType));\n                }\n            }\n            else {\n                target[localName] = read(reader, scalarType);\n            }\n            break;\n        case \"message\":\n            const messageType = field.T;\n            if (repeated) {\n                // safe to assume presence of array, oneof cannot contain repeated values\n                target[localName].push(readMessageField(reader, new messageType(), options, field));\n            }\n            else {\n                if (isMessage(target[localName])) {\n                    readMessageField(reader, target[localName], options, field);\n                }\n                else {\n                    target[localName] = readMessageField(reader, new messageType(), options, field);\n                    if (messageType.fieldWrapper && !field.oneof && !field.repeated) {\n                        target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                    }\n                }\n            }\n            break;\n        case \"map\":\n            let [mapKey, mapVal] = readMapEntry(field, reader, options);\n            // safe to assume presence of map object, oneof cannot contain repeated values\n            target[localName][mapKey] = mapVal;\n            break;\n    }\n}\n// Read a message, avoiding MessageType.fromBinary() to re-use the\n// BinaryReadOptions and the IBinaryReader.\nfunction readMessageField(reader, message, options, field) {\n    const format = message.getType().runtime.bin;\n    const delimited = field === null || field === void 0 ? void 0 : field.delimited;\n    format.readMessage(message, reader, delimited ? field.no : reader.uint32(), // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n    options, delimited);\n    return message;\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(field, reader, options) {\n    const length = reader.uint32(), end = reader.pos + length;\n    let key, val;\n    while (reader.pos < end) {\n        const [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.K);\n                break;\n            case 2:\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.V.T);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, new field.V.T(), options, undefined);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        key = scalarZeroValue(field.K, LongType.BIGINT);\n    }\n    if (typeof key != \"string\" && typeof key != \"number\") {\n        key = key.toString();\n    }\n    if (val === undefined) {\n        switch (field.V.kind) {\n            case \"scalar\":\n                val = scalarZeroValue(field.V.T, LongType.BIGINT);\n                break;\n            case \"enum\":\n                val = field.V.T.values[0].no;\n                break;\n            case \"message\":\n                val = new field.V.T();\n                break;\n        }\n    }\n    return [key, val];\n}\n// Read a scalar value, but return 64 bit integral types (int64, uint64,\n// sint64, fixed64, sfixed64) as string instead of bigint.\nfunction readScalarLTString(reader, type) {\n    const v = readScalar(reader, type);\n    return typeof v == \"bigint\" ? v.toString() : v;\n}\n// Does not use scalarTypeInfo() for better performance.\nfunction readScalar(reader, type) {\n    switch (type) {\n        case ScalarType.STRING:\n            return reader.string();\n        case ScalarType.BOOL:\n            return reader.bool();\n        case ScalarType.DOUBLE:\n            return reader.double();\n        case ScalarType.FLOAT:\n            return reader.float();\n        case ScalarType.INT32:\n            return reader.int32();\n        case ScalarType.INT64:\n            return reader.int64();\n        case ScalarType.UINT64:\n            return reader.uint64();\n        case ScalarType.FIXED64:\n            return reader.fixed64();\n        case ScalarType.BYTES:\n            return reader.bytes();\n        case ScalarType.FIXED32:\n            return reader.fixed32();\n        case ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case ScalarType.SINT64:\n            return reader.sint64();\n        case ScalarType.UINT32:\n            return reader.uint32();\n        case ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\nfunction writeField(field, value, writer, options) {\n    assert(value !== undefined);\n    const repeated = field.repeated;\n    switch (field.kind) {\n        case \"scalar\":\n        case \"enum\":\n            let scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n            if (repeated) {\n                assert(Array.isArray(value));\n                if (field.packed) {\n                    writePacked(writer, scalarType, field.no, value);\n                }\n                else {\n                    for (const item of value) {\n                        writeScalar(writer, scalarType, field.no, item);\n                    }\n                }\n            }\n            else {\n                writeScalar(writer, scalarType, field.no, value);\n            }\n            break;\n        case \"message\":\n            if (repeated) {\n                assert(Array.isArray(value));\n                for (const item of value) {\n                    writeMessageField(writer, options, field, item);\n                }\n            }\n            else {\n                writeMessageField(writer, options, field, value);\n            }\n            break;\n        case \"map\":\n            assert(typeof value == \"object\" && value != null);\n            for (const [key, val] of Object.entries(value)) {\n                writeMapEntry(writer, options, field, key, val);\n            }\n            break;\n    }\n}\nexport function writeMapEntry(writer, options, field, key, value) {\n    writer.tag(field.no, WireType.LengthDelimited);\n    writer.fork();\n    // javascript only allows number or string for object properties\n    // we convert from our representation to the protobuf type\n    let keyValue = key;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n    switch (field.K) {\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n            keyValue = Number.parseInt(key);\n            break;\n        case ScalarType.BOOL:\n            assert(key == \"true\" || key == \"false\");\n            keyValue = key == \"true\";\n            break;\n    }\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.K, 1, keyValue);\n    // write value, expecting value field number = 2\n    switch (field.V.kind) {\n        case \"scalar\":\n            writeScalar(writer, field.V.T, 2, value);\n            break;\n        case \"enum\":\n            writeScalar(writer, ScalarType.INT32, 2, value);\n            break;\n        case \"message\":\n            assert(value !== undefined);\n            writer.tag(2, WireType.LengthDelimited).bytes(value.toBinary(options));\n            break;\n    }\n    writer.join();\n}\n// Value must not be undefined\nfunction writeMessageField(writer, options, field, value) {\n    const message = wrapField(field.T, value);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (field.delimited)\n        writer\n            .tag(field.no, WireType.StartGroup)\n            .raw(message.toBinary(options))\n            .tag(field.no, WireType.EndGroup);\n    else\n        writer\n            .tag(field.no, WireType.LengthDelimited)\n            .bytes(message.toBinary(options));\n}\nfunction writeScalar(writer, type, fieldNo, value) {\n    assert(value !== undefined);\n    let [wireType, method] = scalarTypeInfo(type);\n    writer.tag(fieldNo, wireType)[method](value);\n}\nfunction writePacked(writer, type, fieldNo, value) {\n    if (!value.length) {\n        return;\n    }\n    writer.tag(fieldNo, WireType.LengthDelimited).fork();\n    let [, method] = scalarTypeInfo(type);\n    for (let i = 0; i < value.length; i++) {\n        writer[method](value[i]);\n    }\n    writer.join();\n}\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted, [2] is always false.\n */\n// TODO replace call-sites writeScalar() and writePacked(), then remove\nfunction scalarTypeInfo(type) {\n    let wireType = WireType.Varint;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32, UINT32, SINT32 are covered by the defaults\n    switch (type) {\n        case ScalarType.BYTES:\n        case ScalarType.STRING:\n            wireType = WireType.LengthDelimited;\n            break;\n        case ScalarType.DOUBLE:\n        case ScalarType.FIXED64:\n        case ScalarType.SFIXED64:\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n        case ScalarType.FLOAT:\n            wireType = WireType.Bit32;\n            break;\n    }\n    const method = ScalarType[type].toLowerCase();\n    return [wireType, method];\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { setEnumType } from \"./enum.js\";\nimport { Message } from \"../message.js\";\nimport { scalarEquals } from \"./scalars.js\";\nimport { ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\nexport function makeUtilCommon() {\n    return {\n        setEnumType,\n        initPartial(source, target) {\n            if (source === undefined) {\n                return;\n            }\n            const type = target.getType();\n            for (const member of type.fields.byMember()) {\n                const localName = member.localName, t = target, s = source;\n                if (s[localName] == null) {\n                    // TODO if source is a Message instance, we should use isFieldSet() here to support future field presence\n                    continue;\n                }\n                switch (member.kind) {\n                    case \"oneof\":\n                        const sk = s[localName].case;\n                        if (sk === undefined) {\n                            continue;\n                        }\n                        const sourceField = member.findField(sk);\n                        let val = s[localName].value;\n                        if (sourceField &&\n                            sourceField.kind == \"message\" &&\n                            !isMessage(val, sourceField.T)) {\n                            val = new sourceField.T(val);\n                        }\n                        else if (sourceField &&\n                            sourceField.kind === \"scalar\" &&\n                            sourceField.T === ScalarType.BYTES) {\n                            val = toU8Arr(val);\n                        }\n                        t[localName] = { case: sk, value: val };\n                        break;\n                    case \"scalar\":\n                    case \"enum\":\n                        let copy = s[localName];\n                        if (member.T === ScalarType.BYTES) {\n                            copy = member.repeated\n                                ? copy.map(toU8Arr)\n                                : toU8Arr(copy);\n                        }\n                        t[localName] = copy;\n                        break;\n                    case \"map\":\n                        switch (member.V.kind) {\n                            case \"scalar\":\n                            case \"enum\":\n                                if (member.V.T === ScalarType.BYTES) {\n                                    for (const [k, v] of Object.entries(s[localName])) {\n                                        t[localName][k] = toU8Arr(v);\n                                    }\n                                }\n                                else {\n                                    Object.assign(t[localName], s[localName]);\n                                }\n                                break;\n                            case \"message\":\n                                const messageType = member.V.T;\n                                for (const k of Object.keys(s[localName])) {\n                                    let val = s[localName][k];\n                                    if (!messageType.fieldWrapper) {\n                                        // We only take partial input for messages that are not a wrapper type.\n                                        // For those messages, we recursively normalize the partial input.\n                                        val = new messageType(val);\n                                    }\n                                    t[localName][k] = val;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"message\":\n                        const mt = member.T;\n                        if (member.repeated) {\n                            t[localName] = s[localName].map((val) => isMessage(val, mt) ? val : new mt(val));\n                        }\n                        else {\n                            const val = s[localName];\n                            if (mt.fieldWrapper) {\n                                if (\n                                // We can't use BytesValue.typeName as that will create a circular import\n                                mt.typeName === \"google.protobuf.BytesValue\") {\n                                    t[localName] = toU8Arr(val);\n                                }\n                                else {\n                                    t[localName] = val;\n                                }\n                            }\n                            else {\n                                t[localName] = isMessage(val, mt) ? val : new mt(val);\n                            }\n                        }\n                        break;\n                }\n            }\n        },\n        // TODO use isFieldSet() here to support future field presence\n        equals(type, a, b) {\n            if (a === b) {\n                return true;\n            }\n            if (!a || !b) {\n                return false;\n            }\n            return type.fields.byMember().every((m) => {\n                const va = a[m.localName];\n                const vb = b[m.localName];\n                if (m.repeated) {\n                    if (va.length !== vb.length) {\n                        return false;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never \"map\"\n                    switch (m.kind) {\n                        case \"message\":\n                            return va.every((a, i) => m.T.equals(a, vb[i]));\n                        case \"scalar\":\n                            return va.every((a, i) => scalarEquals(m.T, a, vb[i]));\n                        case \"enum\":\n                            return va.every((a, i) => scalarEquals(ScalarType.INT32, a, vb[i]));\n                    }\n                    throw new Error(`repeated cannot contain ${m.kind}`);\n                }\n                switch (m.kind) {\n                    case \"message\":\n                        return m.T.equals(va, vb);\n                    case \"enum\":\n                        return scalarEquals(ScalarType.INT32, va, vb);\n                    case \"scalar\":\n                        return scalarEquals(m.T, va, vb);\n                    case \"oneof\":\n                        if (va.case !== vb.case) {\n                            return false;\n                        }\n                        const s = m.findField(va.case);\n                        if (s === undefined) {\n                            return true;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never \"map\"\n                        switch (s.kind) {\n                            case \"message\":\n                                return s.T.equals(va.value, vb.value);\n                            case \"enum\":\n                                return scalarEquals(ScalarType.INT32, va.value, vb.value);\n                            case \"scalar\":\n                                return scalarEquals(s.T, va.value, vb.value);\n                        }\n                        throw new Error(`oneof cannot contain ${s.kind}`);\n                    case \"map\":\n                        const keys = Object.keys(va).concat(Object.keys(vb));\n                        switch (m.V.kind) {\n                            case \"message\":\n                                const messageType = m.V.T;\n                                return keys.every((k) => messageType.equals(va[k], vb[k]));\n                            case \"enum\":\n                                return keys.every((k) => scalarEquals(ScalarType.INT32, va[k], vb[k]));\n                            case \"scalar\":\n                                const scalarType = m.V.T;\n                                return keys.every((k) => scalarEquals(scalarType, va[k], vb[k]));\n                        }\n                        break;\n                }\n            });\n        },\n        // TODO use isFieldSet() here to support future field presence\n        clone(message) {\n            const type = message.getType(), target = new type(), any = target;\n            for (const member of type.fields.byMember()) {\n                const source = message[member.localName];\n                let copy;\n                if (member.repeated) {\n                    copy = source.map(cloneSingularField);\n                }\n                else if (member.kind == \"map\") {\n                    copy = any[member.localName];\n                    for (const [key, v] of Object.entries(source)) {\n                        copy[key] = cloneSingularField(v);\n                    }\n                }\n                else if (member.kind == \"oneof\") {\n                    const f = member.findField(source.case);\n                    copy = f\n                        ? { case: source.case, value: cloneSingularField(source.value) }\n                        : { case: undefined };\n                }\n                else {\n                    copy = cloneSingularField(source);\n                }\n                any[member.localName] = copy;\n            }\n            for (const uf of type.runtime.bin.listUnknownFields(message)) {\n                type.runtime.bin.onUnknownField(any, uf.no, uf.wireType, uf.data);\n            }\n            return target;\n        },\n    };\n}\n// clone a single field value - i.e. the element type of repeated fields, the value type of maps\nfunction cloneSingularField(value) {\n    if (value === undefined) {\n        return value;\n    }\n    if (isMessage(value)) {\n        return value.clone();\n    }\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(input) {\n    return input instanceof Uint8Array ? input : new Uint8Array(input);\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { getEnumType, makeEnum, makeEnumType } from \"./enum.js\";\nimport { makeMessageType } from \"./message-type.js\";\nimport { makeExtension } from \"./extensions.js\";\nimport { makeJsonFormat } from \"./json-format.js\";\nimport { makeBinaryFormat } from \"./binary-format.js\";\nimport { makeUtilCommon } from \"./util-common.js\";\nexport function makeProtoRuntime(syntax, newFieldList, initFields) {\n    return {\n        syntax,\n        json: makeJsonFormat(),\n        bin: makeBinaryFormat(),\n        util: Object.assign(Object.assign({}, makeUtilCommon()), { newFieldList,\n            initFields }),\n        makeMessageType(typeName, fields, opt) {\n            return makeMessageType(this, typeName, fields, opt);\n        },\n        makeEnum,\n        makeEnumType,\n        getEnumType,\n        makeExtension(typeName, extendee, field) {\n            return makeExtension(this, typeName, extendee, field);\n        },\n    };\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport class InternalFieldList {\n    constructor(fields, normalizer) {\n        this._fields = fields;\n        this._normalizer = normalizer;\n    }\n    findJsonName(jsonName) {\n        if (!this.jsonNames) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.jsonName] = t[f.name] = f;\n            }\n            this.jsonNames = t;\n        }\n        return this.jsonNames[jsonName];\n    }\n    find(fieldNo) {\n        if (!this.numbers) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.no] = f;\n            }\n            this.numbers = t;\n        }\n        return this.numbers[fieldNo];\n    }\n    list() {\n        if (!this.all) {\n            this.all = this._normalizer(this._fields);\n        }\n        return this.all;\n    }\n    byNumber() {\n        if (!this.numbersAsc) {\n            this.numbersAsc = this.list()\n                .concat()\n                .sort((a, b) => a.no - b.no);\n        }\n        return this.numbersAsc;\n    }\n    byMember() {\n        if (!this.members) {\n            this.members = [];\n            const a = this.members;\n            let o;\n            for (const f of this.list()) {\n                if (f.oneof) {\n                    if (f.oneof !== o) {\n                        o = f.oneof;\n                        a.push(o);\n                    }\n                }\n                else {\n                    a.push(f);\n                }\n            }\n        }\n        return this.members;\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages, enumerations and services, the package name is stripped from\n * the type name. For nested messages and enumerations, the names are joined\n * with an underscore. For methods, the first character is made lowercase.\n */\nexport function localName(desc) {\n    switch (desc.kind) {\n        case \"field\":\n            return localFieldName(desc.name, desc.oneof !== undefined);\n        case \"oneof\":\n            return localOneofName(desc.name);\n        case \"enum\":\n        case \"message\":\n        case \"service\":\n        case \"extension\": {\n            const pkg = desc.file.proto.package;\n            const offset = pkg === undefined ? 0 : pkg.length + 1;\n            const name = desc.typeName.substring(offset).replace(/\\./g, \"_\");\n            // For services, we only care about safe identifiers, not safe object properties,\n            // but we have shipped v1 with a bug that respected object properties, and we\n            // do not want to introduce a breaking change, so we continue to escape for\n            // safe object properties.\n            // See https://github.com/bufbuild/protobuf-es/pull/391\n            return safeObjectProperty(safeIdentifier(name));\n        }\n        case \"enum_value\": {\n            let name = desc.name;\n            const sharedPrefix = desc.parent.sharedPrefix;\n            if (sharedPrefix !== undefined) {\n                name = name.substring(sharedPrefix.length);\n            }\n            return safeObjectProperty(name);\n        }\n        case \"rpc\": {\n            let name = desc.name;\n            if (name.length == 0) {\n                return name;\n            }\n            name = name[0].toLowerCase() + name.substring(1);\n            return safeObjectProperty(name);\n        }\n    }\n}\n/**\n * Returns the name of a field in generated code.\n */\nexport function localFieldName(protoName, inOneof) {\n    const name = protoCamelCase(protoName);\n    if (inOneof) {\n        // oneof member names are not properties, but values of the `case` property.\n        return name;\n    }\n    return safeObjectProperty(safeMessageProperty(name));\n}\n/**\n * Returns the name of a oneof group in generated code.\n */\nexport function localOneofName(protoName) {\n    return localFieldName(protoName, false);\n}\n/**\n * Returns the JSON name for a protobuf field, exactly like protoc does.\n */\nexport const fieldJsonName = protoCamelCase;\n/**\n * Finds a prefix shared by enum values, for example `MY_ENUM_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nexport function findEnumSharedPrefix(enumName, valueNames) {\n    const prefix = camelToSnakeCase(enumName) + \"_\";\n    for (const name of valueNames) {\n        if (!name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c)).toLowerCase();\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n/**\n * Names that cannot be used for identifiers, such as class names,\n * but _can_ be used for object properties.\n */\nconst reservedIdentifiers = new Set([\n    // ECMAScript 2015 keywords\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"else\",\n    \"export\",\n    \"extends\",\n    \"false\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"instanceof\",\n    \"new\",\n    \"null\",\n    \"return\",\n    \"super\",\n    \"switch\",\n    \"this\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typeof\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    // ECMAScript 2015 future reserved keywords\n    \"enum\",\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    // Class name cannot be 'Object' when targeting ES5 with module CommonJS\n    \"Object\",\n    // TypeScript keywords that cannot be used for types (as opposed to variables)\n    \"bigint\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    // Identifiers reserved for the runtime, so we can generate legible code\n    \"globalThis\",\n    \"Uint8Array\",\n    \"Partial\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst reservedObjectProperties = new Set([\n    // names reserved by JavaScript\n    \"constructor\",\n    \"toString\",\n    \"toJSON\",\n    \"valueOf\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by the runtime.\n */\nconst reservedMessageProperties = new Set([\n    // names reserved by the runtime\n    \"getType\",\n    \"clone\",\n    \"equals\",\n    \"fromBinary\",\n    \"fromJson\",\n    \"fromJsonString\",\n    \"toBinary\",\n    \"toJson\",\n    \"toJsonString\",\n    // names reserved by the runtime for the future\n    \"toObject\",\n]);\nconst fallback = (name) => `${name}$`;\n/**\n * Will wrap names that are Object prototype properties or names reserved\n * for `Message`s.\n */\nconst safeMessageProperty = (name) => {\n    if (reservedMessageProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nexport const safeObjectProperty = (name) => {\n    if (reservedObjectProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that can be used for identifiers or class properties\n */\nexport const safeIdentifier = (name) => {\n    if (reservedIdentifiers.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { localOneofName } from \"./names.js\";\nimport { assert } from \"./assert.js\";\nexport class InternalOneofInfo {\n    constructor(name) {\n        this.kind = \"oneof\";\n        this.repeated = false;\n        this.packed = false;\n        this.opt = false;\n        this.req = false;\n        this.default = undefined;\n        this.fields = [];\n        this.name = name;\n        this.localName = localOneofName(name);\n    }\n    addField(field) {\n        assert(field.oneof === this, `field ${field.name} not one of ${this.name}`);\n        this.fields.push(field);\n    }\n    findField(localName) {\n        if (!this._lookup) {\n            this._lookup = Object.create(null);\n            for (let i = 0; i < this.fields.length; i++) {\n                this._lookup[this.fields[i].localName] = this.fields[i];\n            }\n        }\n        return this._lookup[localName];\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { InternalOneofInfo } from \"./field.js\";\nimport { fieldJsonName, localFieldName } from \"./names.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\n/**\n * Convert a collection of field info to an array of normalized FieldInfo.\n *\n * The argument `packedByDefault` specifies whether fields that do not specify\n * `packed` should be packed (proto3) or unpacked (proto2).\n */\nexport function normalizeFieldInfos(fieldInfos, packedByDefault) {\n    var _a, _b, _c, _d, _e, _f;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = localFieldName(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : fieldJsonName(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        if (field.kind == \"scalar\") {\n            f.L = (_c = field.L) !== null && _c !== void 0 ? _c : LongType.BIGINT;\n        }\n        f.delimited = (_d = field.delimited) !== null && _d !== void 0 ? _d : false;\n        f.req = (_e = field.req) !== null && _e !== void 0 ? _e : false;\n        f.opt = (_f = field.opt) !== null && _f !== void 0 ? _f : false;\n        if (field.packed === undefined) {\n            if (packedByDefault) {\n                f.packed =\n                    field.kind == \"enum\" ||\n                        (field.kind == \"scalar\" &&\n                            field.T != ScalarType.BYTES &&\n                            field.T != ScalarType.STRING);\n            }\n            else {\n                f.packed = false;\n            }\n        }\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { makeProtoRuntime } from \"./private/proto-runtime.js\";\nimport { InternalFieldList } from \"./private/field-list.js\";\nimport { scalarZeroValue } from \"./private/scalars.js\";\nimport { normalizeFieldInfos } from \"./private/field-normalize.js\";\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */\nexport const proto3 = makeProtoRuntime(\"proto3\", (fields) => {\n    return new InternalFieldList(fields, (source) => normalizeFieldInfos(source, true));\n}, \n// TODO merge with proto2 and initExtensionField, also see initPartial, equals, clone\n(target) => {\n    for (const member of target.getType().fields.byMember()) {\n        if (member.opt) {\n            continue;\n        }\n        const name = member.localName, t = target;\n        if (member.repeated) {\n            t[name] = [];\n            continue;\n        }\n        switch (member.kind) {\n            case \"oneof\":\n                t[name] = { case: undefined };\n                break;\n            case \"enum\":\n                t[name] = 0;\n                break;\n            case \"map\":\n                t[name] = {};\n                break;\n            case \"scalar\":\n                t[name] = scalarZeroValue(member.T, member.L);\n                break;\n            case \"message\":\n                // message fields are always optional in proto3\n                break;\n        }\n    }\n});\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * MethodKind represents the four method types that can be declared in\n * protobuf with the `stream` keyword:\n *\n * 1. Unary:           rpc (Input) returns (Output)\n * 2. ServerStreaming: rpc (Input) returns (stream Output)\n * 3. ClientStreaming: rpc (stream Input) returns (Output)\n * 4. BiDiStreaming:   rpc (stream Input) returns (stream Output)\n */\nexport var MethodKind;\n(function (MethodKind) {\n    MethodKind[MethodKind[\"Unary\"] = 0] = \"Unary\";\n    MethodKind[MethodKind[\"ServerStreaming\"] = 1] = \"ServerStreaming\";\n    MethodKind[MethodKind[\"ClientStreaming\"] = 2] = \"ClientStreaming\";\n    MethodKind[MethodKind[\"BiDiStreaming\"] = 3] = \"BiDiStreaming\";\n})(MethodKind || (MethodKind = {}));\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or just\n * idempotent, or neither? HTTP based RPC implementation may choose GET verb\n * for safe methods, and PUT verb for idempotent methods instead of the\n * default POST.\n *\n * This enum matches the protobuf enum google.protobuf.MethodOptions.IdempotencyLevel,\n * defined in the well-known type google/protobuf/descriptor.proto, but\n * drops UNKNOWN.\n */\nexport var MethodIdempotency;\n(function (MethodIdempotency) {\n    /**\n     * Idempotent, no side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"NoSideEffects\"] = 1] = \"NoSideEffects\";\n    /**\n     * Idempotent, but may have side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"Idempotent\"] = 2] = \"Idempotent\";\n})(MethodIdempotency || (MethodIdempotency = {}));\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { protoInt64 } from \"../../proto-int64.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n * ) to obtain a formatter capable of generating timestamps in this format.\n *\n *\n * @generated from message google.protobuf.Timestamp\n */\nexport class Timestamp extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Represents seconds of UTC time since Unix epoch\n         * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n         * 9999-12-31T23:59:59Z inclusive.\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = protoInt64.zero;\n        /**\n         * Non-negative fractions of a second at nanosecond resolution. Negative\n         * second values with fractions must still have non-negative nanos values\n         * that count forward in time. Must be from 0 to 999,999,999\n         * inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${proto3.json.debug(json)}`);\n        }\n        const matches = json.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n        if (!matches) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        const ms = Date.parse(matches[1] + \"-\" + matches[2] + \"-\" + matches[3] + \"T\" + matches[4] + \":\" + matches[5] + \":\" + matches[6] + (matches[8] ? matches[8] : \"Z\"));\n        if (Number.isNaN(ms)) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        this.seconds = protoInt64.parse(ms / 1000);\n        this.nanos = 0;\n        if (matches[7]) {\n            this.nanos = (parseInt(\"1\" + matches[7] + \"0\".repeat(9 - matches[7].length)) - 1000000000);\n        }\n        return this;\n    }\n    toJson(options) {\n        const ms = Number(this.seconds) * 1000;\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        if (this.nanos < 0) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative`);\n        }\n        let z = \"Z\";\n        if (this.nanos > 0) {\n            const nanosStr = (this.nanos + 1000000000).toString().substring(1);\n            if (nanosStr.substring(3) === \"000000\") {\n                z = \".\" + nanosStr.substring(0, 3) + \"Z\";\n            }\n            else if (nanosStr.substring(6) === \"000\") {\n                z = \".\" + nanosStr.substring(0, 6) + \"Z\";\n            }\n            else {\n                z = \".\" + nanosStr + \"Z\";\n            }\n        }\n        return new Date(ms).toISOString().replace(\".000Z\", z);\n    }\n    toDate() {\n        return new Date(Number(this.seconds) * 1000 + Math.ceil(this.nanos / 1000000));\n    }\n    static now() {\n        return Timestamp.fromDate(new Date());\n    }\n    static fromDate(date) {\n        const ms = date.getTime();\n        return new Timestamp({\n            seconds: protoInt64.parse(Math.floor(ms / 1000)),\n            nanos: (ms % 1000) * 1000000,\n        });\n    }\n    static fromBinary(bytes, options) {\n        return new Timestamp().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Timestamp().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Timestamp().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Timestamp, a, b);\n    }\n}\nTimestamp.runtime = proto3;\nTimestamp.typeName = \"google.protobuf.Timestamp\";\nTimestamp.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"seconds\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"nanos\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *     // or ...\n *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n *       foo = any.unpack(Foo.getDefaultInstance());\n *     }\n *\n *  Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n *  Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any, err := anypb.New(foo)\n *      if err != nil {\n *        ...\n *      }\n *      ...\n *      foo := &pb.Foo{}\n *      if err := any.UnmarshalTo(foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n * name \"y.z\".\n *\n * JSON\n * ====\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized, embedded message, with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.profile.Person\",\n *       \"firstName\": <string>,\n *       \"lastName\": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation, that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n *       \"value\": \"1.212s\"\n *     }\n *\n *\n * @generated from message google.protobuf.Any\n */\nexport class Any extends Message {\n    constructor(data) {\n        super();\n        /**\n         * A URL/resource name that uniquely identifies the type of the serialized\n         * protocol buffer message. This string must contain at least\n         * one \"/\" character. The last segment of the URL's path must represent\n         * the fully qualified name of the type (as in\n         * `path/google.protobuf.Duration`). The name should be in a canonical form\n         * (e.g., leading \".\" is not accepted).\n         *\n         * In practice, teams usually precompile into the binary all types that they\n         * expect it to use in the context of Any. However, for URLs which use the\n         * scheme `http`, `https`, or no scheme, one can optionally set up a type\n         * server that maps type URLs to message definitions as follows:\n         *\n         * * If no scheme is provided, `https` is assumed.\n         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n         *   value in binary format, or produce an error.\n         * * Applications are allowed to cache lookup results based on the\n         *   URL, or have them precompiled into a binary to avoid any\n         *   lookup. Therefore, binary compatibility needs to be preserved\n         *   on changes to types. (Use versioned type names to manage\n         *   breaking changes.)\n         *\n         * Note: this functionality is not currently available in the official\n         * protobuf release, and it is not used for type URLs beginning with\n         * type.googleapis.com. As of May 2023, there are no widely used type server\n         * implementations and no plans to implement one.\n         *\n         * Schemes other than `http`, `https` (or the empty scheme) might be\n         * used with implementation specific semantics.\n         *\n         *\n         * @generated from field: string type_url = 1;\n         */\n        this.typeUrl = \"\";\n        /**\n         * Must be a valid serialized protocol buffer of the above specified type.\n         *\n         * @generated from field: bytes value = 2;\n         */\n        this.value = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        var _a;\n        if (this.typeUrl === \"\") {\n            return {};\n        }\n        const typeName = this.typeUrlToName(this.typeUrl);\n        const messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) {\n            throw new Error(`cannot encode message google.protobuf.Any to JSON: \"${this.typeUrl}\" is not in the type registry`);\n        }\n        const message = messageType.fromBinary(this.value);\n        let json = message.toJson(options);\n        if (typeName.startsWith(\"google.protobuf.\") || (json === null || Array.isArray(json) || typeof json !== \"object\")) {\n            json = { value: json };\n        }\n        json[\"@type\"] = this.typeUrl;\n        return json;\n    }\n    fromJson(json, options) {\n        var _a;\n        if (json === null || Array.isArray(json) || typeof json != \"object\") {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: expected object but got ${json === null ? \"null\" : Array.isArray(json) ? \"array\" : typeof json}`);\n        }\n        if (Object.keys(json).length == 0) {\n            return this;\n        }\n        const typeUrl = json[\"@type\"];\n        if (typeof typeUrl != \"string\" || typeUrl == \"\") {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: \"@type\" is empty`);\n        }\n        const typeName = this.typeUrlToName(typeUrl), messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: ${typeUrl} is not in the type registry`);\n        }\n        let message;\n        if (typeName.startsWith(\"google.protobuf.\") && Object.prototype.hasOwnProperty.call(json, \"value\")) {\n            message = messageType.fromJson(json[\"value\"], options);\n        }\n        else {\n            const copy = Object.assign({}, json);\n            delete copy[\"@type\"];\n            message = messageType.fromJson(copy, options);\n        }\n        this.packFrom(message);\n        return this;\n    }\n    packFrom(message) {\n        this.value = message.toBinary();\n        this.typeUrl = this.typeNameToUrl(message.getType().typeName);\n    }\n    unpackTo(target) {\n        if (!this.is(target.getType())) {\n            return false;\n        }\n        target.fromBinary(this.value);\n        return true;\n    }\n    unpack(registry) {\n        if (this.typeUrl === \"\") {\n            return undefined;\n        }\n        const messageType = registry.findMessage(this.typeUrlToName(this.typeUrl));\n        if (!messageType) {\n            return undefined;\n        }\n        return messageType.fromBinary(this.value);\n    }\n    is(type) {\n        if (this.typeUrl === '') {\n            return false;\n        }\n        const name = this.typeUrlToName(this.typeUrl);\n        let typeName = '';\n        if (typeof type === 'string') {\n            typeName = type;\n        }\n        else {\n            typeName = type.typeName;\n        }\n        return name === typeName;\n    }\n    typeNameToUrl(name) {\n        return `type.googleapis.com/${name}`;\n    }\n    typeUrlToName(url) {\n        if (!url.length) {\n            throw new Error(`invalid type url: ${url}`);\n        }\n        const slash = url.lastIndexOf(\"/\");\n        const name = slash >= 0 ? url.substring(slash + 1) : url;\n        if (!name.length) {\n            throw new Error(`invalid type url: ${url}`);\n        }\n        return name;\n    }\n    static pack(message) {\n        const any = new Any();\n        any.packFrom(message);\n        return any;\n    }\n    static fromBinary(bytes, options) {\n        return new Any().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Any().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Any().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Any, a, b);\n    }\n}\nAny.runtime = proto3;\nAny.typeName = \"google.protobuf.Any\";\nAny.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { proto3 } from \"../../proto3.js\";\nimport { ScalarType } from \"../../scalar.js\";\nimport { protoInt64 } from \"../../proto-int64.js\";\n/**\n * Wrapper message for `double`.\n *\n * The JSON representation for `DoubleValue` is JSON number.\n *\n * @generated from message google.protobuf.DoubleValue\n */\nexport class DoubleValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The double value.\n         *\n         * @generated from field: double value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.DOUBLE, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.DOUBLE, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.DoubleValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new DoubleValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DoubleValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DoubleValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DoubleValue, a, b);\n    }\n}\nDoubleValue.runtime = proto3;\nDoubleValue.typeName = \"google.protobuf.DoubleValue\";\nDoubleValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n]);\nDoubleValue.fieldWrapper = {\n    wrapField(value) {\n        return new DoubleValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `float`.\n *\n * The JSON representation for `FloatValue` is JSON number.\n *\n * @generated from message google.protobuf.FloatValue\n */\nexport class FloatValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The float value.\n         *\n         * @generated from field: float value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.FLOAT, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.FLOAT, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.FloatValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new FloatValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FloatValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FloatValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(FloatValue, a, b);\n    }\n}\nFloatValue.runtime = proto3;\nFloatValue.typeName = \"google.protobuf.FloatValue\";\nFloatValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n]);\nFloatValue.fieldWrapper = {\n    wrapField(value) {\n        return new FloatValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int64`.\n *\n * The JSON representation for `Int64Value` is JSON string.\n *\n * @generated from message google.protobuf.Int64Value\n */\nexport class Int64Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The int64 value.\n         *\n         * @generated from field: int64 value = 1;\n         */\n        this.value = protoInt64.zero;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.INT64, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.INT64, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.Int64Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Int64Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Int64Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Int64Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Int64Value, a, b);\n    }\n}\nInt64Value.runtime = proto3;\nInt64Value.typeName = \"google.protobuf.Int64Value\";\nInt64Value.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n]);\nInt64Value.fieldWrapper = {\n    wrapField(value) {\n        return new Int64Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint64`.\n *\n * The JSON representation for `UInt64Value` is JSON string.\n *\n * @generated from message google.protobuf.UInt64Value\n */\nexport class UInt64Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The uint64 value.\n         *\n         * @generated from field: uint64 value = 1;\n         */\n        this.value = protoInt64.zero;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.UINT64, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.UINT64, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.UInt64Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new UInt64Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UInt64Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UInt64Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UInt64Value, a, b);\n    }\n}\nUInt64Value.runtime = proto3;\nUInt64Value.typeName = \"google.protobuf.UInt64Value\";\nUInt64Value.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n]);\nUInt64Value.fieldWrapper = {\n    wrapField(value) {\n        return new UInt64Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int32`.\n *\n * The JSON representation for `Int32Value` is JSON number.\n *\n * @generated from message google.protobuf.Int32Value\n */\nexport class Int32Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The int32 value.\n         *\n         * @generated from field: int32 value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.INT32, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.INT32, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.Int32Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Int32Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Int32Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Int32Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Int32Value, a, b);\n    }\n}\nInt32Value.runtime = proto3;\nInt32Value.typeName = \"google.protobuf.Int32Value\";\nInt32Value.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\nInt32Value.fieldWrapper = {\n    wrapField(value) {\n        return new Int32Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint32`.\n *\n * The JSON representation for `UInt32Value` is JSON number.\n *\n * @generated from message google.protobuf.UInt32Value\n */\nexport class UInt32Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The uint32 value.\n         *\n         * @generated from field: uint32 value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.UINT32, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.UINT32, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.UInt32Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new UInt32Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UInt32Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UInt32Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UInt32Value, a, b);\n    }\n}\nUInt32Value.runtime = proto3;\nUInt32Value.typeName = \"google.protobuf.UInt32Value\";\nUInt32Value.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n]);\nUInt32Value.fieldWrapper = {\n    wrapField(value) {\n        return new UInt32Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bool`.\n *\n * The JSON representation for `BoolValue` is JSON `true` and `false`.\n *\n * @generated from message google.protobuf.BoolValue\n */\nexport class BoolValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The bool value.\n         *\n         * @generated from field: bool value = 1;\n         */\n        this.value = false;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.BOOL, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.BOOL, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.BoolValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new BoolValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new BoolValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new BoolValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(BoolValue, a, b);\n    }\n}\nBoolValue.runtime = proto3;\nBoolValue.typeName = \"google.protobuf.BoolValue\";\nBoolValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\nBoolValue.fieldWrapper = {\n    wrapField(value) {\n        return new BoolValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `string`.\n *\n * The JSON representation for `StringValue` is JSON string.\n *\n * @generated from message google.protobuf.StringValue\n */\nexport class StringValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The string value.\n         *\n         * @generated from field: string value = 1;\n         */\n        this.value = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.STRING, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.STRING, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.StringValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new StringValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new StringValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new StringValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(StringValue, a, b);\n    }\n}\nStringValue.runtime = proto3;\nStringValue.typeName = \"google.protobuf.StringValue\";\nStringValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\nStringValue.fieldWrapper = {\n    wrapField(value) {\n        return new StringValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bytes`.\n *\n * The JSON representation for `BytesValue` is JSON string.\n *\n * @generated from message google.protobuf.BytesValue\n */\nexport class BytesValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The bytes value.\n         *\n         * @generated from field: bytes value = 1;\n         */\n        this.value = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.BYTES, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.BYTES, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.BytesValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new BytesValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new BytesValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new BytesValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(BytesValue, a, b);\n    }\n}\nBytesValue.runtime = proto3;\nBytesValue.typeName = \"google.protobuf.BytesValue\";\nBytesValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\nBytesValue.fieldWrapper = {\n    wrapField(value) {\n        return new BytesValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file registration_info_status.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.RegistrationInfoStatus\n */\nexport var RegistrationInfoStatus;\n(function (RegistrationInfoStatus) {\n    /**\n     * @generated from enum value: REGISTRATION_INFO_STATUS_UNKNOWN = 0;\n     */\n    RegistrationInfoStatus[RegistrationInfoStatus[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * if no account exists for this address, and it can be freely registered\n     *\n     * @generated from enum value: REGISTRATION_INFO_STATUS_AVAILABLE_FREE = 1;\n     */\n    RegistrationInfoStatus[RegistrationInfoStatus[\"AVAILABLE_FREE\"] = 1] = \"AVAILABLE_FREE\";\n    /**\n     * if an account exists, and can be registered by providing a start code\n     *\n     * @generated from enum value: REGISTRATION_INFO_STATUS_AVAILABLE_START_CODE_REQUIRED = 2;\n     */\n    RegistrationInfoStatus[RegistrationInfoStatus[\"AVAILABLE_START_CODE_REQUIRED\"] = 2] = \"AVAILABLE_START_CODE_REQUIRED\";\n    /**\n     * if address belongs to a verified domain. requires an admin to set up an account first.\n     *\n     * @generated from enum value: REGISTRATION_INFO_STATUS_UNAVAILABLE_RESERVED_VERIFIED_DOMAIN = 3;\n     */\n    RegistrationInfoStatus[RegistrationInfoStatus[\"UNAVAILABLE_RESERVED_VERIFIED_DOMAIN\"] = 3] = \"UNAVAILABLE_RESERVED_VERIFIED_DOMAIN\";\n    /**\n     * if account is in use, and can be recovered via backup code\n     *\n     * @generated from enum value: REGISTRATION_INFO_STATUS_UNAVAILABLE_RECOVER_VIA_BACKUP_CODE = 4;\n     */\n    RegistrationInfoStatus[RegistrationInfoStatus[\"UNAVAILABLE_RECOVER_VIA_BACKUP_CODE\"] = 4] = \"UNAVAILABLE_RECOVER_VIA_BACKUP_CODE\";\n    /**\n     * if account is in use, and can be recovered by an admin (disconnect + start code)\n     *\n     * @generated from enum value: REGISTRATION_INFO_STATUS_UNAVAILABLE_RECOVER_VIA_ADMIN = 5;\n     */\n    RegistrationInfoStatus[RegistrationInfoStatus[\"UNAVAILABLE_RECOVER_VIA_ADMIN\"] = 5] = \"UNAVAILABLE_RECOVER_VIA_ADMIN\";\n    /**\n     * if account is in use, and can be recovered via backup code or org admin\n     *\n     * @generated from enum value: REGISTRATION_INFO_STATUS_UNAVAILABLE_RECOVER_VIA_BACKUP_CODE_OR_ADMIN = 6;\n     */\n    RegistrationInfoStatus[RegistrationInfoStatus[\"UNAVAILABLE_RECOVER_VIA_BACKUP_CODE_OR_ADMIN\"] = 6] = \"UNAVAILABLE_RECOVER_VIA_BACKUP_CODE_OR_ADMIN\";\n    /**\n     * if account is a free profile, but no start code (deprecated: or email invite) is active\n     *\n     * @generated from enum value: REGISTRATION_INFO_STATUS_UNAVAILABLE_ADMIN_ACTION_REQUIRED = 7;\n     */\n    RegistrationInfoStatus[RegistrationInfoStatus[\"UNAVAILABLE_ADMIN_ACTION_REQUIRED\"] = 7] = \"UNAVAILABLE_ADMIN_ACTION_REQUIRED\";\n    /**\n     * if account is in use, and can't be recovered\n     *\n     * @generated from enum value: REGISTRATION_INFO_STATUS_UNAVAILABLE_NOT_RECOVERABLE = 8;\n     */\n    RegistrationInfoStatus[RegistrationInfoStatus[\"UNAVAILABLE_NOT_RECOVERABLE\"] = 8] = \"UNAVAILABLE_NOT_RECOVERABLE\";\n})(RegistrationInfoStatus || (RegistrationInfoStatus = {}));\n// Retrieve enum metadata with: proto3.getEnumType(RegistrationInfoStatus)\nproto3.util.setEnumType(RegistrationInfoStatus, \"domain.RegistrationInfoStatus\", [\n    { no: 0, name: \"REGISTRATION_INFO_STATUS_UNKNOWN\" },\n    { no: 1, name: \"REGISTRATION_INFO_STATUS_AVAILABLE_FREE\" },\n    { no: 2, name: \"REGISTRATION_INFO_STATUS_AVAILABLE_START_CODE_REQUIRED\" },\n    { no: 3, name: \"REGISTRATION_INFO_STATUS_UNAVAILABLE_RESERVED_VERIFIED_DOMAIN\" },\n    { no: 4, name: \"REGISTRATION_INFO_STATUS_UNAVAILABLE_RECOVER_VIA_BACKUP_CODE\" },\n    { no: 5, name: \"REGISTRATION_INFO_STATUS_UNAVAILABLE_RECOVER_VIA_ADMIN\" },\n    { no: 6, name: \"REGISTRATION_INFO_STATUS_UNAVAILABLE_RECOVER_VIA_BACKUP_CODE_OR_ADMIN\" },\n    { no: 7, name: \"REGISTRATION_INFO_STATUS_UNAVAILABLE_ADMIN_ACTION_REQUIRED\" },\n    { no: 8, name: \"REGISTRATION_INFO_STATUS_UNAVAILABLE_NOT_RECOVERABLE\" },\n]);\n//# sourceMappingURL=registration_info_status_pb.js.map","const errorGroupFactor = 1000000;\nexport const pleaseUpdate = 'We are investigating. In the meantime, make sure you are using the latest version of our software then try again.';\nexport var ErrorGroup;\n(function (ErrorGroup) {\n    ErrorGroup[ErrorGroup[\"Backend\"] = 0] = \"Backend\";\n    ErrorGroup[ErrorGroup[\"BackendClient\"] = 1000000] = \"BackendClient\";\n    ErrorGroup[ErrorGroup[\"ClientCore\"] = 2000000] = \"ClientCore\";\n    ErrorGroup[ErrorGroup[\"LibVaultCrypto\"] = 3000000] = \"LibVaultCrypto\";\n    ErrorGroup[ErrorGroup[\"ClientNodeBridge\"] = 4000000] = \"ClientNodeBridge\";\n    ErrorGroup[ErrorGroup[\"ClientWebSdk\"] = 5000000] = \"ClientWebSdk\";\n    ErrorGroup[ErrorGroup[\"Heymerge\"] = 6000000] = \"Heymerge\";\n})(ErrorGroup || (ErrorGroup = {}));\nexport class DomainError extends Error {\n    constructor(code, short, userTitle, userDetail) {\n        super(short);\n        this.code = code;\n        this.short = short;\n        this.userTitle = userTitle;\n        this.userDetail = userDetail;\n        this.name = 'DomainError';\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n    codeGroup() {\n        return this.code - (this.code % errorGroupFactor);\n    }\n    isClientError() {\n        return this.codeGroup() === ErrorGroup.ClientCore;\n    }\n    isBackendError() {\n        return this.codeGroup() === ErrorGroup.Backend;\n    }\n    isLibVaultCryptoError() {\n        return this.codeGroup() === ErrorGroup.LibVaultCrypto;\n    }\n    isClientWebSdkError() {\n        return this.codeGroup() === ErrorGroup.ClientWebSdk;\n    }\n    isHeymergeError() {\n        return this.codeGroup() === ErrorGroup.Heymerge;\n    }\n}\n//# sourceMappingURL=index.js.map","/* eslint-disable max-classes-per-file */\nimport { DomainError, ErrorGroup, pleaseUpdate } from 'domain-errors';\nexport var BackendClientErrorCode;\n(function (BackendClientErrorCode) {\n    BackendClientErrorCode[BackendClientErrorCode[\"NoResponse\"] = 1000400] = \"NoResponse\";\n    BackendClientErrorCode[BackendClientErrorCode[\"InvalidChannelMessage\"] = 1000410] = \"InvalidChannelMessage\";\n    BackendClientErrorCode[BackendClientErrorCode[\"InvalidGrpcResponse\"] = 1000420] = \"InvalidGrpcResponse\";\n    BackendClientErrorCode[BackendClientErrorCode[\"RequiredFieldMissing\"] = 1000430] = \"RequiredFieldMissing\";\n})(BackendClientErrorCode || (BackendClientErrorCode = {}));\nexport class BackendClientDomainError extends DomainError {\n    constructor(code, short, userTitle, userDetail) {\n        super(code, short, userTitle !== null && userTitle !== void 0 ? userTitle : short, userDetail !== null && userDetail !== void 0 ? userDetail : pleaseUpdate);\n    }\n}\nexport class NoResponseError extends BackendClientDomainError {\n    constructor() {\n        super(BackendClientErrorCode.NoResponse, 'no response', 'No response', `Our server did not respond to the client's request. ${pleaseUpdate}`);\n    }\n}\nexport class InvalidGrpcResponseError extends BackendClientDomainError {\n    constructor(grpcStatusCode) {\n        super(BackendClientErrorCode.InvalidGrpcResponse, `invalid response (${grpcStatusCode})`, 'invalid response', `Received an unexpected reply from the server. ${pleaseUpdate}`);\n        this.grpcStatusCode = grpcStatusCode;\n    }\n}\nexport class InvalidChannelMessageError extends BackendClientDomainError {\n    constructor() {\n        super(BackendClientErrorCode.InvalidChannelMessage, 'invalid channel message', 'Invalid channel message', `The message received on the channel is invalid. ${pleaseUpdate}`);\n    }\n}\nexport class RequiredFieldMissingError extends BackendClientDomainError {\n    constructor() {\n        super(BackendClientErrorCode.RequiredFieldMissing, 'required field missing');\n    }\n}\n//# sourceMappingURL=errorsClient.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle() {\n    return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n//# sourceMappingURL=env.js.map","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\nimport { isBrowserBundle } from './env';\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv() {\n    // explicitly check for browser bundles as those can be optimized statically\n    // by terser/rollup.\n    return (!isBrowserBundle() &&\n        Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]');\n}\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod, request) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return mod.require(request);\n}\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule(moduleName) {\n    var mod;\n    try {\n        mod = dynamicRequire(module, moduleName);\n    }\n    catch (e) {\n        // no-empty\n    }\n    try {\n        var cwd = dynamicRequire(module, 'process').cwd;\n        mod = dynamicRequire(module, cwd() + \"/node_modules/\" + moduleName);\n    }\n    catch (e) {\n        // no-empty\n    }\n    return mod;\n}\n//# sourceMappingURL=node.js.map","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\nimport { isNodeEnv } from './node';\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject() {\n    return (isNodeEnv()\n        ? global\n        : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n            ? window // eslint-disable-line no-restricted-globals\n            : typeof self !== 'undefined'\n                ? self\n                : fallbackGlobalObject);\n}\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton(name, creator, obj) {\n    var global = (obj || getGlobalObject());\n    var __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n    var singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n    return singleton;\n}\n//# sourceMappingURL=global.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n// eslint-disable-next-line @typescript-eslint/unbound-method\nvar objectToString = Object.prototype.toString;\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (objectToString.call(wat)) {\n        case '[object Error]':\n        case '[object Exception]':\n        case '[object DOMException]':\n            return true;\n        default:\n            return isInstanceOf(wat, Error);\n    }\n}\nfunction isBuiltin(wat, ty) {\n    return objectToString.call(wat) === \"[object \" + ty + \"]\";\n}\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat) {\n    return isBuiltin(wat, 'ErrorEvent');\n}\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat) {\n    return isBuiltin(wat, 'DOMError');\n}\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat) {\n    return isBuiltin(wat, 'DOMException');\n}\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat) {\n    return isBuiltin(wat, 'String');\n}\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat) {\n    return isBuiltin(wat, 'Object');\n}\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat) {\n    return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat) {\n    return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat) {\n    return isBuiltin(wat, 'RegExp');\n}\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat) {\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat) {\n    return typeof wat === 'number' && wat !== wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat, base) {\n    try {\n        return wat instanceof base;\n    }\n    catch (_e) {\n        return false;\n    }\n}\n//# sourceMappingURL=is.js.map","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n/** Flag that is true for debug builds, false otherwise. */\nexport var IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n//# sourceMappingURL=flags.js.map","import { __read, __spread } from \"tslib\";\nimport { IS_DEBUG_BUILD } from './flags';\nimport { getGlobalObject, getGlobalSingleton } from './global';\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\nexport var CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    CONSOLE_LEVELS.forEach(function (level) {\n        // TODO(v7): Remove this check as it's only needed for Node 6\n        var originalWrappedFunc = originalConsole[level] && originalConsole[level].__sentry_original__;\n        if (level in global.console && originalWrappedFunc) {\n            wrappedLevels[level] = originalConsole[level];\n            originalConsole[level] = originalWrappedFunc;\n        }\n    });\n    try {\n        return callback();\n    }\n    finally {\n        // Revert restoration to wrapped state\n        Object.keys(wrappedLevels).forEach(function (level) {\n            originalConsole[level] = wrappedLevels[level];\n        });\n    }\n}\nfunction makeLogger() {\n    var enabled = false;\n    var logger = {\n        enable: function () {\n            enabled = true;\n        },\n        disable: function () {\n            enabled = false;\n        },\n    };\n    if (IS_DEBUG_BUILD) {\n        CONSOLE_LEVELS.forEach(function (name) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            logger[name] = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (enabled) {\n                    consoleSandbox(function () {\n                        var _a;\n                        (_a = global.console)[name].apply(_a, __spread([PREFIX + \"[\" + name + \"]:\"], args));\n                    });\n                }\n            };\n        });\n    }\n    else {\n        CONSOLE_LEVELS.forEach(function (name) {\n            logger[name] = function () { return undefined; };\n        });\n    }\n    return logger;\n}\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nvar logger;\nif (IS_DEBUG_BUILD) {\n    logger = getGlobalSingleton('logger', makeLogger);\n}\nelse {\n    logger = makeLogger();\n}\nexport { logger };\n//# sourceMappingURL=logger.js.map","import { __assign, __values } from \"tslib\";\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { truncate } from './string';\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source, name, replacementFactory) {\n    if (!(name in source)) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacementFactory(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    if (typeof wrapped === 'function') {\n        try {\n            markFunctionWrapped(wrapped, original);\n        }\n        catch (_Oo) {\n            // This can throw if multiple fill happens on a global object like XMLHttpRequest\n            // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n        }\n    }\n    source[name] = wrapped;\n}\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj, name, value) {\n    Object.defineProperty(obj, name, {\n        // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n        value: value,\n        writable: true,\n        configurable: true,\n    });\n}\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped, original) {\n    var proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func) {\n    return func.__sentry_original__;\n}\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object) {\n    return Object.keys(object)\n        .map(function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nexport function convertToPlainObject(value) {\n    var newObj = value;\n    if (isError(value)) {\n        newObj = __assign({ message: value.message, name: value.name, stack: value.stack }, getOwnProperties(value));\n    }\n    else if (isEvent(value)) {\n        var event_1 = value;\n        newObj = __assign({ type: event_1.type, target: serializeEventTarget(event_1.target), currentTarget: serializeEventTarget(event_1.currentTarget) }, getOwnProperties(event_1));\n        if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n            newObj.detail = event_1.detail;\n        }\n    }\n    return newObj;\n}\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n    try {\n        return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n    }\n    catch (_oO) {\n        return '<unknown>';\n    }\n}\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n    var extractedProps = {};\n    for (var property in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, property)) {\n            extractedProps[property] = obj[property];\n        }\n    }\n    return extractedProps;\n}\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception, maxLength) {\n    if (maxLength === void 0) { maxLength = 40; }\n    var keys = Object.keys(convertToPlainObject(exception));\n    keys.sort();\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return truncate(serialized, maxLength);\n    }\n    return '';\n}\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys(val) {\n    var e_1, _a;\n    if (isPlainObject(val)) {\n        var rv = {};\n        try {\n            for (var _b = __values(Object.keys(val)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                if (typeof val[key] !== 'undefined') {\n                    rv[key] = dropUndefinedKeys(val[key]);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return rv;\n    }\n    if (Array.isArray(val)) {\n        return val.map(dropUndefinedKeys);\n    }\n    return val;\n}\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat) {\n    var objectified;\n    switch (true) {\n        case wat === undefined || wat === null:\n            objectified = new String(wat);\n            break;\n        // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n        // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n        // an object in order to wrap it.\n        case typeof wat === 'symbol' || typeof wat === 'bigint':\n            objectified = Object(wat);\n            break;\n        // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n        case isPrimitive(wat):\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            objectified = new wat.constructor(wat);\n            break;\n        // by process of elimination, at this point we know that `wat` must already be an object\n        default:\n            objectified = wat;\n            break;\n    }\n    return objectified;\n}\n//# sourceMappingURL=object.js.map","import { __assign } from \"tslib\";\nimport { getGlobalObject } from './global';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // eslint-disable-next-line no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // eslint-disable-next-line no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // eslint-disable-next-line no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // eslint-disable-next-line no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\nfunction getFirstException(event) {\n    return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n    var message = event.message, eventId = event.event_id;\n    if (message) {\n        return message;\n    }\n    var firstException = getFirstException(event);\n    if (firstException) {\n        if (firstException.type && firstException.value) {\n            return firstException.type + \": \" + firstException.value;\n        }\n        return firstException.type || firstException.value || eventId || '<unknown>';\n    }\n    return eventId || '<unknown>';\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type) {\n    var exception = (event.exception = event.exception || {});\n    var values = (exception.values = exception.values || []);\n    var firstException = (values[0] = values[0] || {});\n    if (!firstException.value) {\n        firstException.value = value || '';\n    }\n    if (!firstException.type) {\n        firstException.type = type || 'Error';\n    }\n}\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event, newMechanism) {\n    var firstException = getFirstException(event);\n    if (!firstException) {\n        return;\n    }\n    var defaultMechanism = { type: 'generic', handled: true };\n    var currentMechanism = firstException.mechanism;\n    firstException.mechanism = __assign(__assign(__assign({}, defaultMechanism), currentMechanism), newMechanism);\n    if (newMechanism && 'data' in newMechanism) {\n        var mergedData = __assign(__assign({}, (currentMechanism && currentMechanism.data)), newMechanism.data);\n        firstException.mechanism.data = mergedData;\n    }\n}\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input) {\n    var match = input.match(SEMVER_REGEXP) || [];\n    var major = parseInt(match[1], 10);\n    var minor = parseInt(match[2], 10);\n    var patch = parseInt(match[3], 10);\n    return {\n        buildmetadata: match[5],\n        major: isNaN(major) ? undefined : major,\n        minor: isNaN(minor) ? undefined : minor,\n        patch: isNaN(patch) ? undefined : patch,\n        prerelease: match[4],\n    };\n}\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines, frame, linesOfContext) {\n    if (linesOfContext === void 0) { linesOfContext = 5; }\n    var lineno = frame.lineno || 0;\n    var maxLines = lines.length;\n    var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n    frame.pre_context = lines\n        .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n        .map(function (line) { return snipLine(line, 0); });\n    frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n    frame.post_context = lines\n        .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n        .map(function (line) { return snipLine(line, 0); });\n}\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath) {\n    // eslint-disable-next-line no-useless-escape\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (exception && exception.__sentry_captured__) {\n        return true;\n    }\n    try {\n        // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n        // `ExtraErrorData` integration\n        addNonEnumerableProperty(exception, '__sentry_captured__', true);\n    }\n    catch (err) {\n        // `exception` is a primitive, so we can't mark it seen\n    }\n    return false;\n}\n//# sourceMappingURL=misc.js.map","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise(value) {\n    return new SyncPromise(function (resolve) {\n        resolve(value);\n    });\n}\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise(reason) {\n    return new SyncPromise(function (_, reject) {\n        reject(reason);\n    });\n}\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nvar SyncPromise = /** @class */ (function () {\n    function SyncPromise(executor) {\n        var _this = this;\n        this._state = 0 /* PENDING */;\n        this._handlers = [];\n        /** JSDoc */\n        this._resolve = function (value) {\n            _this._setResult(1 /* RESOLVED */, value);\n        };\n        /** JSDoc */\n        this._reject = function (reason) {\n            _this._setResult(2 /* REJECTED */, reason);\n        };\n        /** JSDoc */\n        this._setResult = function (state, value) {\n            if (_this._state !== 0 /* PENDING */) {\n                return;\n            }\n            if (isThenable(value)) {\n                void value.then(_this._resolve, _this._reject);\n                return;\n            }\n            _this._state = state;\n            _this._value = value;\n            _this._executeHandlers();\n        };\n        /** JSDoc */\n        this._executeHandlers = function () {\n            if (_this._state === 0 /* PENDING */) {\n                return;\n            }\n            var cachedHandlers = _this._handlers.slice();\n            _this._handlers = [];\n            cachedHandlers.forEach(function (handler) {\n                if (handler[0]) {\n                    return;\n                }\n                if (_this._state === 1 /* RESOLVED */) {\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    handler[1](_this._value);\n                }\n                if (_this._state === 2 /* REJECTED */) {\n                    handler[2](_this._value);\n                }\n                handler[0] = true;\n            });\n        };\n        try {\n            executor(this._resolve, this._reject);\n        }\n        catch (e) {\n            this._reject(e);\n        }\n    }\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            _this._handlers.push([\n                false,\n                function (result) {\n                    if (!onfulfilled) {\n                        // TODO: ¯\\_(ツ)_/¯\n                        // TODO: FIXME\n                        resolve(result);\n                    }\n                    else {\n                        try {\n                            resolve(onfulfilled(result));\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    }\n                },\n                function (reason) {\n                    if (!onrejected) {\n                        reject(reason);\n                    }\n                    else {\n                        try {\n                            resolve(onrejected(reason));\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    }\n                },\n            ]);\n            _this._executeHandlers();\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onrejected) {\n        return this.then(function (val) { return val; }, onrejected);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.finally = function (onfinally) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            var val;\n            var isRejected;\n            return _this.then(function (value) {\n                isRejected = false;\n                val = value;\n                if (onfinally) {\n                    onfinally();\n                }\n            }, function (reason) {\n                isRejected = true;\n                val = reason;\n                if (onfinally) {\n                    onfinally();\n                }\n            }).then(function () {\n                if (isRejected) {\n                    reject(val);\n                    return;\n                }\n                resolve(val);\n            });\n        });\n    };\n    return SyncPromise;\n}());\nexport { SyncPromise };\n//# sourceMappingURL=syncpromise.js.map","import { getGlobalObject } from './global';\nimport { dynamicRequire, isNodeEnv } from './node';\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nvar dateTimestampSource = {\n    nowSeconds: function () { return Date.now() / 1000; },\n};\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n    var performance = getGlobalObject().performance;\n    if (!performance || !performance.now) {\n        return undefined;\n    }\n    // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n    //\n    // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n    // performance.now() gives a date arbitrarily in the past.\n    //\n    // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n    // undefined.\n    //\n    // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n    // interact with data coming out of performance entries.\n    //\n    // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n    // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n    // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n    // observed skews that can be as long as days, weeks or months.\n    //\n    // See https://github.com/getsentry/sentry-javascript/issues/2590.\n    //\n    // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n    // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n    // transactions of long-lived web pages.\n    var timeOrigin = Date.now() - performance.now();\n    return {\n        now: function () { return performance.now(); },\n        timeOrigin: timeOrigin,\n    };\n}\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n    try {\n        var perfHooks = dynamicRequire(module, 'perf_hooks');\n        return perfHooks.performance;\n    }\n    catch (_) {\n        return undefined;\n    }\n}\n/**\n * The Performance API implementation for the current platform, if available.\n */\nvar platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\nvar timestampSource = platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: function () { return (platformPerformance.timeOrigin + platformPerformance.now()) / 1000; },\n    };\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport var dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport var timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n// Re-exported with an old name for backwards-compatibility.\nexport var timestampWithMs = timestampInSeconds;\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport var usingPerformanceAPI = platformPerformance !== undefined;\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport var _browserPerformanceTimeOriginMode;\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport var browserPerformanceTimeOrigin = (function () {\n    // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n    // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n    // data as reliable if they are within a reasonable threshold of the current time.\n    var performance = getGlobalObject().performance;\n    if (!performance || !performance.now) {\n        _browserPerformanceTimeOriginMode = 'none';\n        return undefined;\n    }\n    var threshold = 3600 * 1000;\n    var performanceNow = performance.now();\n    var dateNow = Date.now();\n    // if timeOrigin isn't available set delta to threshold so it isn't used\n    var timeOriginDelta = performance.timeOrigin\n        ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n        : threshold;\n    var timeOriginIsReliable = timeOriginDelta < threshold;\n    // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n    // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n    // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n    // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n    // Date API.\n    // eslint-disable-next-line deprecation/deprecation\n    var navigationStart = performance.timing && performance.timing.navigationStart;\n    var hasNavigationStart = typeof navigationStart === 'number';\n    // if navigationStart isn't available set delta to threshold so it isn't used\n    var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n    var navigationStartIsReliable = navigationStartDelta < threshold;\n    if (timeOriginIsReliable || navigationStartIsReliable) {\n        // Use the more reliable time origin\n        if (timeOriginDelta <= navigationStartDelta) {\n            _browserPerformanceTimeOriginMode = 'timeOrigin';\n            return performance.timeOrigin;\n        }\n        else {\n            _browserPerformanceTimeOriginMode = 'navigationStart';\n            return navigationStart;\n        }\n    }\n    // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n    _browserPerformanceTimeOriginMode = 'dateNow';\n    return dateNow;\n})();\n//# sourceMappingURL=time.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { dateTimestampInSeconds, getGlobalSingleton, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._contexts = {};\n        /**\n         * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n         * sent to Sentry\n         */\n        this._sdkProcessingMetadata = {};\n    }\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        if (scope) {\n            newScope._breadcrumbs = __spread(scope._breadcrumbs);\n            newScope._tags = __assign({}, scope._tags);\n            newScope._extra = __assign({}, scope._extra);\n            newScope._contexts = __assign({}, scope._contexts);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._session = scope._session;\n            newScope._transactionName = scope._transactionName;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = __spread(scope._eventProcessors);\n            newScope._requestSession = scope._requestSession;\n        }\n        return newScope;\n    };\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = user || {};\n        if (this._session) {\n            this._session.update({ user: user });\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getUser = function () {\n        return this._user;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getRequestSession = function () {\n        return this._requestSession;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setRequestSession = function (requestSession) {\n        this._requestSession = requestSession;\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = __assign(__assign({}, this._tags), tags);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = __assign(__assign({}, this._tags), (_a = {}, _a[key] = value, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extras) {\n        this._extra = __assign(__assign({}, this._extra), extras);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = __assign(__assign({}, this._extra), (_a = {}, _a[key] = extra, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = fingerprint;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = level;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransactionName = function (name) {\n        this._transactionName = name;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Can be removed in major version.\n     * @deprecated in favor of {@link this.setTransactionName}\n     */\n    Scope.prototype.setTransaction = function (name) {\n        return this.setTransactionName(name);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (key, context) {\n        var _a;\n        if (context === null) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete this._contexts[key];\n        }\n        else {\n            this._contexts = __assign(__assign({}, this._contexts), (_a = {}, _a[key] = context, _a));\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getTransaction = function () {\n        // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n        // have a pointer to the currently-active transaction.\n        var span = this.getSpan();\n        return span && span.transaction;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSession = function (session) {\n        if (!session) {\n            delete this._session;\n        }\n        else {\n            this._session = session;\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getSession = function () {\n        return this._session;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.update = function (captureContext) {\n        if (!captureContext) {\n            return this;\n        }\n        if (typeof captureContext === 'function') {\n            var updatedScope = captureContext(this);\n            return updatedScope instanceof Scope ? updatedScope : this;\n        }\n        if (captureContext instanceof Scope) {\n            this._tags = __assign(__assign({}, this._tags), captureContext._tags);\n            this._extra = __assign(__assign({}, this._extra), captureContext._extra);\n            this._contexts = __assign(__assign({}, this._contexts), captureContext._contexts);\n            if (captureContext._user && Object.keys(captureContext._user).length) {\n                this._user = captureContext._user;\n            }\n            if (captureContext._level) {\n                this._level = captureContext._level;\n            }\n            if (captureContext._fingerprint) {\n                this._fingerprint = captureContext._fingerprint;\n            }\n            if (captureContext._requestSession) {\n                this._requestSession = captureContext._requestSession;\n            }\n        }\n        else if (isPlainObject(captureContext)) {\n            // eslint-disable-next-line no-param-reassign\n            captureContext = captureContext;\n            this._tags = __assign(__assign({}, this._tags), captureContext.tags);\n            this._extra = __assign(__assign({}, this._extra), captureContext.extra);\n            this._contexts = __assign(__assign({}, this._contexts), captureContext.contexts);\n            if (captureContext.user) {\n                this._user = captureContext.user;\n            }\n            if (captureContext.level) {\n                this._level = captureContext.level;\n            }\n            if (captureContext.fingerprint) {\n                this._fingerprint = captureContext.fingerprint;\n            }\n            if (captureContext.requestSession) {\n                this._requestSession = captureContext.requestSession;\n            }\n        }\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._contexts = {};\n        this._level = undefined;\n        this._transactionName = undefined;\n        this._fingerprint = undefined;\n        this._requestSession = undefined;\n        this._span = undefined;\n        this._session = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n        // No data has been changed, so don't notify scope listeners\n        if (maxCrumbs <= 0) {\n            return this;\n        }\n        var mergedBreadcrumb = __assign({ timestamp: dateTimestampInSeconds() }, breadcrumb);\n        this._breadcrumbs = __spread(this._breadcrumbs, [mergedBreadcrumb]).slice(-maxCrumbs);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional information about the original exception.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = __assign(__assign({}, this._extra), event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = __assign(__assign({}, this._tags), event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = __assign(__assign({}, this._user), event.user);\n        }\n        if (this._contexts && Object.keys(this._contexts).length) {\n            event.contexts = __assign(__assign({}, this._contexts), event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transactionName) {\n            event.transaction = this._transactionName;\n        }\n        // We want to set the trace context for normal events only if there isn't already\n        // a trace context on the event. There is a product feature in place where we link\n        // errors with transaction and it relies on that.\n        if (this._span) {\n            event.contexts = __assign({ trace: this._span.getTraceContext() }, event.contexts);\n            var transactionName = this._span.transaction && this._span.transaction.name;\n            if (transactionName) {\n                event.tags = __assign({ transaction: transactionName }, event.tags);\n            }\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = __spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        event.sdkProcessingMetadata = this._sdkProcessingMetadata;\n        return this._notifyEventProcessors(__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    /**\n     * Add data which will be accessible during event processing but won't get sent to Sentry\n     */\n    Scope.prototype.setSDKProcessingMetadata = function (newData) {\n        this._sdkProcessingMetadata = __assign(__assign({}, this._sdkProcessingMetadata), newData);\n        return this;\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(__assign({}, event), hint);\n                if (isThenable(result)) {\n                    void result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .then(null, reject);\n                }\n                else {\n                    void _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .then(null, reject);\n                }\n            }\n        });\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        // We need this check for this._notifyingListeners to be able to work on scope during updates\n        // If this check is not here we'll produce endless recursion when something is done with the scope\n        // during the callback.\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            this._scopeListeners.forEach(function (callback) {\n                callback(_this);\n            });\n            this._notifyingListeners = false;\n        }\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    return getGlobalSingleton('globalEventProcessors', function () { return []; });\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","import { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * @inheritdoc\n */\nvar Session = /** @class */ (function () {\n    function Session(context) {\n        this.errors = 0;\n        this.sid = uuid4();\n        this.duration = 0;\n        this.status = 'ok';\n        this.init = true;\n        this.ignoreDuration = false;\n        // Both timestamp and started are in seconds since the UNIX epoch.\n        var startingTime = timestampInSeconds();\n        this.timestamp = startingTime;\n        this.started = startingTime;\n        if (context) {\n            this.update(context);\n        }\n    }\n    /** JSDoc */\n    // eslint-disable-next-line complexity\n    Session.prototype.update = function (context) {\n        if (context === void 0) { context = {}; }\n        if (context.user) {\n            if (!this.ipAddress && context.user.ip_address) {\n                this.ipAddress = context.user.ip_address;\n            }\n            if (!this.did && !context.did) {\n                this.did = context.user.id || context.user.email || context.user.username;\n            }\n        }\n        this.timestamp = context.timestamp || timestampInSeconds();\n        if (context.ignoreDuration) {\n            this.ignoreDuration = context.ignoreDuration;\n        }\n        if (context.sid) {\n            // Good enough uuid validation. — Kamil\n            this.sid = context.sid.length === 32 ? context.sid : uuid4();\n        }\n        if (context.init !== undefined) {\n            this.init = context.init;\n        }\n        if (!this.did && context.did) {\n            this.did = \"\" + context.did;\n        }\n        if (typeof context.started === 'number') {\n            this.started = context.started;\n        }\n        if (this.ignoreDuration) {\n            this.duration = undefined;\n        }\n        else if (typeof context.duration === 'number') {\n            this.duration = context.duration;\n        }\n        else {\n            var duration = this.timestamp - this.started;\n            this.duration = duration >= 0 ? duration : 0;\n        }\n        if (context.release) {\n            this.release = context.release;\n        }\n        if (context.environment) {\n            this.environment = context.environment;\n        }\n        if (!this.ipAddress && context.ipAddress) {\n            this.ipAddress = context.ipAddress;\n        }\n        if (!this.userAgent && context.userAgent) {\n            this.userAgent = context.userAgent;\n        }\n        if (typeof context.errors === 'number') {\n            this.errors = context.errors;\n        }\n        if (context.status) {\n            this.status = context.status;\n        }\n    };\n    /** JSDoc */\n    Session.prototype.close = function (status) {\n        if (status) {\n            this.update({ status: status });\n        }\n        else if (this.status === 'ok') {\n            this.update({ status: 'exited' });\n        }\n        else {\n            this.update();\n        }\n    };\n    /** JSDoc */\n    Session.prototype.toJSON = function () {\n        return dropUndefinedKeys({\n            sid: \"\" + this.sid,\n            init: this.init,\n            // Make sure that sec is converted to ms for date constructor\n            started: new Date(this.started * 1000).toISOString(),\n            timestamp: new Date(this.timestamp * 1000).toISOString(),\n            status: this.status,\n            errors: this.errors,\n            did: typeof this.did === 'number' || typeof this.did === 'string' ? \"\" + this.did : undefined,\n            duration: this.duration,\n            attrs: {\n                release: this.release,\n                environment: this.environment,\n                ip_address: this.ipAddress,\n                user_agent: this.userAgent,\n            },\n        });\n    };\n    return Session;\n}());\nexport { Session };\n//# sourceMappingURL=session.js.map","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n/** Flag that is true for debug builds, false otherwise. */\nexport var IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n//# sourceMappingURL=flags.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, getGlobalSingleton, isNodeEnv, logger, uuid4, } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { Scope } from './scope';\nimport { Session } from './session';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 4;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [{}];\n        this.getStackTop().scope = scope;\n        if (client) {\n            this.bindClient(client);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n        if (client && client.setupIntegrations) {\n            client.setupIntegrations();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var scope = Scope.clone(this.getScope());\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        if (this.getStack().length <= 1)\n            return false;\n        return !!this.getStack().pop();\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimic the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error('Sentry syntheticException');\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: exception,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureException', exception, __assign(__assign({}, finalHint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimic the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error(message);\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: message,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureMessage', message, level, __assign(__assign({}, finalHint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = hint && hint.event_id ? hint.event_id : uuid4();\n        if (event.type !== 'transaction') {\n            this._lastEventId = eventId;\n        }\n        this._invokeClient('captureEvent', event, __assign(__assign({}, hint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        if (!scope || !client)\n            return;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _b = (client.getOptions && client.getOptions()) || {}, _c = _b.beforeBreadcrumb, beforeBreadcrumb = _c === void 0 ? null : _c, _d = _b.maxBreadcrumbs, maxBreadcrumbs = _d === void 0 ? DEFAULT_BREADCRUMBS : _d;\n        if (maxBreadcrumbs <= 0)\n            return;\n        var timestamp = dateTimestampInSeconds();\n        var mergedBreadcrumb = __assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null)\n            return;\n        scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setUser = function (user) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setUser(user);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTags = function (tags) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setTags(tags);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtras = function (extras) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setExtras(extras);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTag = function (key, value) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setTag(key, value);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtra = function (key, extra) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setExtra(key, extra);\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype.setContext = function (name, context) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setContext(name, context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        if (scope && client) {\n            callback(scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client)\n            return null;\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            IS_DEBUG_BUILD && logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSpan = function (context) {\n        return this._callExtensionMethod('startSpan', context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startTransaction = function (context, customSamplingContext) {\n        return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        return this._callExtensionMethod('traceHeaders');\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureSession = function (endSession) {\n        if (endSession === void 0) { endSession = false; }\n        // both send the update and pull the session from the scope\n        if (endSession) {\n            return this.endSession();\n        }\n        // only send the update\n        this._sendSessionUpdate();\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.endSession = function () {\n        var layer = this.getStackTop();\n        var scope = layer && layer.scope;\n        var session = scope && scope.getSession();\n        if (session) {\n            session.close();\n        }\n        this._sendSessionUpdate();\n        // the session is over; take it off of the scope\n        if (scope) {\n            scope.setSession();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSession = function (context) {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        var _b = (client && client.getOptions()) || {}, release = _b.release, environment = _b.environment;\n        // Will fetch userAgent if called from browser sdk\n        var global = getGlobalObject();\n        var userAgent = (global.navigator || {}).userAgent;\n        var session = new Session(__assign(__assign(__assign({ release: release,\n            environment: environment }, (scope && { user: scope.getUser() })), (userAgent && { userAgent: userAgent })), context));\n        if (scope) {\n            // End existing session if there's one\n            var currentSession = scope.getSession && scope.getSession();\n            if (currentSession && currentSession.status === 'ok') {\n                currentSession.update({ status: 'exited' });\n            }\n            this.endSession();\n            // Afterwards we set the new session on the scope\n            scope.setSession(session);\n        }\n        return session;\n    };\n    /**\n     * Sends the current Session on the scope\n     */\n    Hub.prototype._sendSessionUpdate = function () {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        if (!scope)\n            return;\n        var session = scope.getSession && scope.getSession();\n        if (session) {\n            if (client && client.captureSession) {\n                client.captureSession(session);\n            }\n        }\n    };\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _b = this.getStackTop(), scope = _b.scope, client = _b.client;\n        if (client && client[method]) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n            (_a = client)[method].apply(_a, __spread(args, [scope]));\n        }\n    };\n    /**\n     * Calls global extension method and binding current instance to the function call\n     */\n    // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype._callExtensionMethod = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var carrier = getMainCarrier();\n        var sentry = carrier.__SENTRY__;\n        if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n            return sentry.extensions[method].apply(this, args);\n        }\n        IS_DEBUG_BUILD && logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n    };\n    return Hub;\n}());\nexport { Hub };\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        extensions: {},\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there (applicable only to Node environment)\n    if (isNodeEnv()) {\n        return getHubFromActiveDomain(registry);\n    }\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n}\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain() {\n    IS_DEBUG_BUILD && logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n    var sentry = getMainCarrier().__SENTRY__;\n    return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n    try {\n        var sentry = getMainCarrier().__SENTRY__;\n        var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n        // If there's no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or it's an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    return getGlobalSingleton('hub', function () { return new Hub(); }, carrier);\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier)\n        return false;\n    var __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n    __SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return hub[method].apply(hub, __spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function captureException(exception, captureContext) {\n    var syntheticException = new Error('Sentry syntheticException');\n    return callOnHub('captureException', exception, {\n        captureContext: captureContext,\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, captureContext) {\n    var syntheticException = new Error(message);\n    // This is necessary to provide explicit scopes upgrade, without changing the original\n    // arity of the `captureMessage(message, level)` method.\n    var level = typeof captureContext === 'string' ? captureContext : undefined;\n    var context = typeof captureContext !== 'string' ? { captureContext: captureContext } : undefined;\n    return callOnHub('captureMessage', message, level, __assign({ originalException: message, syntheticException: syntheticException }, context));\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name, context) {\n    callOnHub('setContext', name, context);\n}\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras) {\n    callOnHub('setExtras', extras);\n}\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags) {\n    callOnHub('setTags', tags);\n}\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key, extra) {\n    callOnHub('setExtra', key, extra);\n}\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key, value) {\n    callOnHub('setTag', key, value);\n}\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user) {\n    callOnHub('setUser', user);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, __spread(['_invokeClient', method], args));\n}\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nexport function startTransaction(context, customSamplingContext) {\n    return callOnHub('startTransaction', __assign({}, context), customSamplingContext);\n}\n//# sourceMappingURL=index.js.map","'use strict';\n\nconst anyMap = new WeakMap();\nconst eventsMap = new WeakMap();\nconst producersMap = new WeakMap();\nconst anyProducer = Symbol('anyProducer');\nconst resolvedPromise = Promise.resolve();\n\nconst listenerAdded = Symbol('listenerAdded');\nconst listenerRemoved = Symbol('listenerRemoved');\n\nfunction assertEventName(eventName) {\n\tif (typeof eventName !== 'string' && typeof eventName !== 'symbol') {\n\t\tthrow new TypeError('eventName must be a string or a symbol');\n\t}\n}\n\nfunction assertListener(listener) {\n\tif (typeof listener !== 'function') {\n\t\tthrow new TypeError('listener must be a function');\n\t}\n}\n\nfunction getListeners(instance, eventName) {\n\tconst events = eventsMap.get(instance);\n\tif (!events.has(eventName)) {\n\t\tevents.set(eventName, new Set());\n\t}\n\n\treturn events.get(eventName);\n}\n\nfunction getEventProducers(instance, eventName) {\n\tconst key = typeof eventName === 'string' ? eventName : anyProducer;\n\tconst producers = producersMap.get(instance);\n\tif (!producers.has(key)) {\n\t\tproducers.set(key, new Set());\n\t}\n\n\treturn producers.get(key);\n}\n\nfunction enqueueProducers(instance, eventName, eventData) {\n\tconst producers = producersMap.get(instance);\n\tif (producers.has(eventName)) {\n\t\tfor (const producer of producers.get(eventName)) {\n\t\t\tproducer.enqueue(eventData);\n\t\t}\n\t}\n\n\tif (producers.has(anyProducer)) {\n\t\tconst item = Promise.all([eventName, eventData]);\n\t\tfor (const producer of producers.get(anyProducer)) {\n\t\t\tproducer.enqueue(item);\n\t\t}\n\t}\n}\n\nfunction iterator(instance, eventNames) {\n\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\tlet isFinished = false;\n\tlet flush = () => {};\n\tlet queue = [];\n\n\tconst producer = {\n\t\tenqueue(item) {\n\t\t\tqueue.push(item);\n\t\t\tflush();\n\t\t},\n\t\tfinish() {\n\t\t\tisFinished = true;\n\t\t\tflush();\n\t\t}\n\t};\n\n\tfor (const eventName of eventNames) {\n\t\tgetEventProducers(instance, eventName).add(producer);\n\t}\n\n\treturn {\n\t\tasync next() {\n\t\t\tif (!queue) {\n\t\t\t\treturn {done: true};\n\t\t\t}\n\n\t\t\tif (queue.length === 0) {\n\t\t\t\tif (isFinished) {\n\t\t\t\t\tqueue = undefined;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\tawait new Promise(resolve => {\n\t\t\t\t\tflush = resolve;\n\t\t\t\t});\n\n\t\t\t\treturn this.next();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: await queue.shift()\n\t\t\t};\n\t\t},\n\n\t\tasync return(value) {\n\t\t\tqueue = undefined;\n\n\t\t\tfor (const eventName of eventNames) {\n\t\t\t\tgetEventProducers(instance, eventName).delete(producer);\n\t\t\t}\n\n\t\t\tflush();\n\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\t{done: true, value: await value} :\n\t\t\t\t{done: true};\n\t\t},\n\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t}\n\t};\n}\n\nfunction defaultMethodNamesOrAssert(methodNames) {\n\tif (methodNames === undefined) {\n\t\treturn allEmitteryMethods;\n\t}\n\n\tif (!Array.isArray(methodNames)) {\n\t\tthrow new TypeError('`methodNames` must be an array of strings');\n\t}\n\n\tfor (const methodName of methodNames) {\n\t\tif (!allEmitteryMethods.includes(methodName)) {\n\t\t\tif (typeof methodName !== 'string') {\n\t\t\t\tthrow new TypeError('`methodNames` element must be a string');\n\t\t\t}\n\n\t\t\tthrow new Error(`${methodName} is not Emittery method`);\n\t\t}\n\t}\n\n\treturn methodNames;\n}\n\nconst isListenerSymbol = symbol => symbol === listenerAdded || symbol === listenerRemoved;\n\nclass Emittery {\n\tstatic mixin(emitteryPropertyName, methodNames) {\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\t\treturn target => {\n\t\t\tif (typeof target !== 'function') {\n\t\t\t\tthrow new TypeError('`target` must be function');\n\t\t\t}\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tif (target.prototype[methodName] !== undefined) {\n\t\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getEmitteryProperty() {\n\t\t\t\tObject.defineProperty(this, emitteryPropertyName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: new Emittery()\n\t\t\t\t});\n\t\t\t\treturn this[emitteryPropertyName];\n\t\t\t}\n\n\t\t\tObject.defineProperty(target.prototype, emitteryPropertyName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tget: getEmitteryProperty\n\t\t\t});\n\n\t\t\tconst emitteryMethodCaller = methodName => function (...args) {\n\t\t\t\treturn this[emitteryPropertyName][methodName](...args);\n\t\t\t};\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tObject.defineProperty(target.prototype, methodName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: emitteryMethodCaller(methodName)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\t}\n\n\tconstructor() {\n\t\tanyMap.set(this, new Set());\n\t\teventsMap.set(this, new Map());\n\t\tproducersMap.set(this, new Map());\n\t}\n\n\ton(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tgetListeners(this, eventName).add(listener);\n\n\t\t\tif (!isListenerSymbol(eventName)) {\n\t\t\t\tthis.emit(listenerAdded, {eventName, listener});\n\t\t\t}\n\t\t}\n\n\t\treturn this.off.bind(this, eventNames, listener);\n\t}\n\n\toff(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tgetListeners(this, eventName).delete(listener);\n\n\t\t\tif (!isListenerSymbol(eventName)) {\n\t\t\t\tthis.emit(listenerRemoved, {eventName, listener});\n\t\t\t}\n\t\t}\n\t}\n\n\tonce(eventNames) {\n\t\treturn new Promise(resolve => {\n\t\t\tconst off = this.on(eventNames, data => {\n\t\t\t\toff();\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\tevents(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t}\n\n\t\treturn iterator(this, eventNames);\n\t}\n\n\tasync emit(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tenqueueProducers(this, eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName);\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = isListenerSymbol(eventName) ? [] : [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\tawait Promise.all([\n\t\t\t...staticListeners.map(async listener => {\n\t\t\t\tif (listeners.has(listener)) {\n\t\t\t\t\treturn listener(eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t...staticAnyListeners.map(async listener => {\n\t\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\t\treturn listener(eventName, eventData);\n\t\t\t\t}\n\t\t\t})\n\t\t]);\n\t}\n\n\tasync emitSerial(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tconst listeners = getListeners(this, eventName);\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\t/* eslint-disable no-await-in-loop */\n\t\tfor (const listener of staticListeners) {\n\t\t\tif (listeners.has(listener)) {\n\t\t\t\tawait listener(eventData);\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of staticAnyListeners) {\n\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\tawait listener(eventName, eventData);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\tonAny(listener) {\n\t\tassertListener(listener);\n\t\tanyMap.get(this).add(listener);\n\t\tthis.emit(listenerAdded, {listener});\n\t\treturn this.offAny.bind(this, listener);\n\t}\n\n\tanyEvent() {\n\t\treturn iterator(this);\n\t}\n\n\toffAny(listener) {\n\t\tassertListener(listener);\n\t\tthis.emit(listenerRemoved, {listener});\n\t\tanyMap.get(this).delete(listener);\n\t}\n\n\tclearListeners(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (typeof eventName === 'string') {\n\t\t\t\tgetListeners(this, eventName).clear();\n\n\t\t\t\tconst producers = getEventProducers(this, eventName);\n\n\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\tproducer.finish();\n\t\t\t\t}\n\n\t\t\t\tproducers.clear();\n\t\t\t} else {\n\t\t\t\tanyMap.get(this).clear();\n\n\t\t\t\tfor (const listeners of eventsMap.get(this).values()) {\n\t\t\t\t\tlisteners.clear();\n\t\t\t\t}\n\n\t\t\t\tfor (const producers of producersMap.get(this).values()) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlistenerCount(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tlet count = 0;\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (typeof eventName === 'string') {\n\t\t\t\tcount += anyMap.get(this).size + getListeners(this, eventName).size +\n\t\t\t\t\tgetEventProducers(this, eventName).size + getEventProducers(this).size;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (typeof eventName !== 'undefined') {\n\t\t\t\tassertEventName(eventName);\n\t\t\t}\n\n\t\t\tcount += anyMap.get(this).size;\n\n\t\t\tfor (const value of eventsMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\n\t\t\tfor (const value of producersMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tbindMethods(target, methodNames) {\n\t\tif (typeof target !== 'object' || target === null) {\n\t\t\tthrow new TypeError('`target` must be an object');\n\t\t}\n\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\n\t\tfor (const methodName of methodNames) {\n\t\t\tif (target[methodName] !== undefined) {\n\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t}\n\n\t\t\tObject.defineProperty(target, methodName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: this[methodName].bind(this)\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(v => v !== 'constructor');\n\n// Subclass used to encourage TS users to type their events.\nEmittery.Typed = class extends Emittery {};\nObject.defineProperty(Emittery.Typed, 'Typed', {\n\tenumerable: false,\n\tvalue: undefined\n});\n\nObject.defineProperty(Emittery, 'listenerAdded', {\n\tvalue: listenerAdded,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false\n});\nObject.defineProperty(Emittery, 'listenerRemoved', {\n\tvalue: listenerRemoved,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false\n});\n\nmodule.exports = Emittery;\n","const SHOW_DEBUG_MESSAGES_PROP = 'showDebugMessages';\nfunction createProxiedConsole() {\n    let showDebugMessages = false;\n    const proxyHandler = {\n        get(target, prop, receiver) {\n            if (prop === SHOW_DEBUG_MESSAGES_PROP) {\n                return showDebugMessages;\n            }\n            if (!showDebugMessages) {\n                return () => { };\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n        set(obj, prop, value) {\n            if (prop === SHOW_DEBUG_MESSAGES_PROP) {\n                showDebugMessages = value;\n                return true;\n            }\n            return Reflect.set(obj, prop, value);\n        },\n    };\n    return new Proxy(console, proxyHandler);\n}\nconst debugConsole = createProxiedConsole();\nexport default debugConsole;\n//# sourceMappingURL=debugConsole.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file authenticator_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.AuthenticatorType\n */\nexport var AuthenticatorType;\n(function (AuthenticatorType) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: AUTHENTICATOR_TYPE_UNKNOWN = 0;\n     */\n    AuthenticatorType[AuthenticatorType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_TYPE_PUSH = 1;\n     */\n    AuthenticatorType[AuthenticatorType[\"PUSH\"] = 1] = \"PUSH\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_TYPE_BACKUP_CODE = 2;\n     */\n    AuthenticatorType[AuthenticatorType[\"BACKUP_CODE\"] = 2] = \"BACKUP_CODE\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_TYPE_BACKUP_OS = 3;\n     */\n    AuthenticatorType[AuthenticatorType[\"BACKUP_OS\"] = 3] = \"BACKUP_OS\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_TYPE_DUMMY = 4;\n     */\n    AuthenticatorType[AuthenticatorType[\"DUMMY\"] = 4] = \"DUMMY\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_TYPE_ORGANIZATION_ADMIN = 5;\n     */\n    AuthenticatorType[AuthenticatorType[\"ORGANIZATION_ADMIN\"] = 5] = \"ORGANIZATION_ADMIN\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_TYPE_SESSION_UNLOCK = 6;\n     */\n    AuthenticatorType[AuthenticatorType[\"SESSION_UNLOCK\"] = 6] = \"SESSION_UNLOCK\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_TYPE_WEBAUTHN = 7;\n     */\n    AuthenticatorType[AuthenticatorType[\"WEBAUTHN\"] = 7] = \"WEBAUTHN\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_TYPE_ORGANIZATION_SERVICE = 8;\n     */\n    AuthenticatorType[AuthenticatorType[\"ORGANIZATION_SERVICE\"] = 8] = \"ORGANIZATION_SERVICE\";\n})(AuthenticatorType || (AuthenticatorType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(AuthenticatorType)\nproto3.util.setEnumType(AuthenticatorType, \"domain.AuthenticatorType\", [\n    { no: 0, name: \"AUTHENTICATOR_TYPE_UNKNOWN\" },\n    { no: 1, name: \"AUTHENTICATOR_TYPE_PUSH\" },\n    { no: 2, name: \"AUTHENTICATOR_TYPE_BACKUP_CODE\" },\n    { no: 3, name: \"AUTHENTICATOR_TYPE_BACKUP_OS\" },\n    { no: 4, name: \"AUTHENTICATOR_TYPE_DUMMY\" },\n    { no: 5, name: \"AUTHENTICATOR_TYPE_ORGANIZATION_ADMIN\" },\n    { no: 6, name: \"AUTHENTICATOR_TYPE_SESSION_UNLOCK\" },\n    { no: 7, name: \"AUTHENTICATOR_TYPE_WEBAUTHN\" },\n    { no: 8, name: \"AUTHENTICATOR_TYPE_ORGANIZATION_SERVICE\" },\n]);\n//# sourceMappingURL=authenticator_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file credential_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.CredentialType\n */\nexport var CredentialType;\n(function (CredentialType) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: CREDENTIAL_TYPE_UNKNOWN = 0;\n     */\n    CredentialType[CredentialType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: CREDENTIAL_TYPE_SECURITY_KEY = 1;\n     */\n    CredentialType[CredentialType[\"SECURITY_KEY\"] = 1] = \"SECURITY_KEY\";\n    /**\n     * @generated from enum value: CREDENTIAL_TYPE_PASSKEY = 2;\n     */\n    CredentialType[CredentialType[\"PASSKEY\"] = 2] = \"PASSKEY\";\n})(CredentialType || (CredentialType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(CredentialType)\nproto3.util.setEnumType(CredentialType, \"domain.CredentialType\", [\n    { no: 0, name: \"CREDENTIAL_TYPE_UNKNOWN\" },\n    { no: 1, name: \"CREDENTIAL_TYPE_SECURITY_KEY\" },\n    { no: 2, name: \"CREDENTIAL_TYPE_PASSKEY\" },\n]);\n//# sourceMappingURL=credential_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file session_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.SessionType\n */\nexport var SessionType;\n(function (SessionType) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: SESSION_TYPE_UNKNOWN = 0;\n     */\n    SessionType[SessionType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mobile apps that manage the backup OS authenticator, Android and iOS apps.\n     *\n     * @generated from enum value: SESSION_TYPE_SELF_UNLOCKING_PRIMARY = 1;\n     */\n    SessionType[SessionType[\"SELF_UNLOCKING_PRIMARY\"] = 1] = \"SELF_UNLOCKING_PRIMARY\";\n    /**\n     * Secondary mobile clients that do not manage the backup OS authenticator, Android tablets and iPads.\n     *\n     * @generated from enum value: SESSION_TYPE_SELF_UNLOCKING_SECONDARY = 2;\n     */\n    SessionType[SessionType[\"SELF_UNLOCKING_SECONDARY\"] = 2] = \"SELF_UNLOCKING_SECONDARY\";\n    /**\n     * Cloud backups on Android and iOS\n     *\n     * @generated from enum value: SESSION_TYPE_BACKUP_OS = 3;\n     */\n    SessionType[SessionType[\"BACKUP_OS\"] = 3] = \"BACKUP_OS\";\n    /**\n     * Backup code used for recovery\n     *\n     * @generated from enum value: SESSION_TYPE_BACKUP_CODE = 4;\n     */\n    SessionType[SessionType[\"BACKUP_CODE\"] = 4] = \"BACKUP_CODE\";\n    /**\n     * Connected sessions are web and ext\n     *\n     * @generated from enum value: SESSION_TYPE_CONNECTED = 5;\n     */\n    SessionType[SessionType[\"CONNECTED\"] = 5] = \"CONNECTED\";\n})(SessionType || (SessionType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(SessionType)\nproto3.util.setEnumType(SessionType, \"domain.SessionType\", [\n    { no: 0, name: \"SESSION_TYPE_UNKNOWN\" },\n    { no: 1, name: \"SESSION_TYPE_SELF_UNLOCKING_PRIMARY\" },\n    { no: 2, name: \"SESSION_TYPE_SELF_UNLOCKING_SECONDARY\" },\n    { no: 3, name: \"SESSION_TYPE_BACKUP_OS\" },\n    { no: 4, name: \"SESSION_TYPE_BACKUP_CODE\" },\n    { no: 5, name: \"SESSION_TYPE_CONNECTED\" },\n]);\n//# sourceMappingURL=session_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file achievements.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * This file defines all achievements that can be obtained by a heylogin user.\n *\n * For achievement naming strategy:\n *  - achievements are prefixed with the component prefix that generates them\n *  - achievements are present tense\n *  - each achievement is named precisely for the technical event that triggers it\n *\n * @generated from enum domain.Achievement\n */\nexport var Achievement;\n(function (Achievement) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: UNKNOWN = 0;\n     */\n    Achievement[Achievement[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * bae\n     * Granted on user account creation from an android client.\n     *\n     * @generated from enum value: BAE_REGISTER_ANDROID = 1;\n     */\n    Achievement[Achievement[\"BAE_REGISTER_ANDROID\"] = 1] = \"BAE_REGISTER_ANDROID\";\n    /**\n     * Granted on user account creation from an ios client.\n     *\n     * @generated from enum value: BAE_REGISTER_IOS = 2;\n     */\n    Achievement[Achievement[\"BAE_REGISTER_IOS\"] = 2] = \"BAE_REGISTER_IOS\";\n    /**\n     * Granted on user account creation from web (likely webauthn).\n     *\n     * @generated from enum value: BAE_REGISTER_WEB = 11;\n     */\n    Achievement[Achievement[\"BAE_REGISTER_WEB\"] = 11] = \"BAE_REGISTER_WEB\";\n    /**\n     * Granted on user account creation from backup client.\n     *\n     * @generated from enum value: BAE_REGISTER_BAK = 12;\n     */\n    Achievement[Achievement[\"BAE_REGISTER_BAK\"] = 12] = \"BAE_REGISTER_BAK\";\n    /**\n     * Granted when an account is marked for deletion due to inactivity\n     *\n     * @generated from enum value: BAE_INACTIVE_MARKED_FOR_DELETION = 3;\n     */\n    Achievement[Achievement[\"BAE_INACTIVE_MARKED_FOR_DELETION\"] = 3] = \"BAE_INACTIVE_MARKED_FOR_DELETION\";\n    /**\n     * Granted when the account was marked for deletion, then has been reactivated\n     *\n     * @generated from enum value: BAE_REACTIVATED = 4;\n     */\n    Achievement[Achievement[\"BAE_REACTIVATED\"] = 4] = \"BAE_REACTIVATED\";\n    /**\n     * Granted when the account created an organization, and an icon was automatically found.\n     *\n     * @generated from enum value: BAE_ORG_ICON_FOUND = 5;\n     */\n    Achievement[Achievement[\"BAE_ORG_ICON_FOUND\"] = 5] = \"BAE_ORG_ICON_FOUND\";\n    /**\n     * User logged in with recovery authenticator\n     *\n     * @generated from enum value: BAE_LOGIN_RECOVERY = 6;\n     */\n    Achievement[Achievement[\"BAE_LOGIN_RECOVERY\"] = 6] = \"BAE_LOGIN_RECOVERY\";\n    /**\n     * User logged in with backup authenticator\n     *\n     * @generated from enum value: BAE_LOGIN_BACKUP = 7;\n     */\n    Achievement[Achievement[\"BAE_LOGIN_BACKUP\"] = 7] = \"BAE_LOGIN_BACKUP\";\n    /**\n     * User deleted a private profile\n     *\n     * @generated from enum value: BAE_PRIVATE_PROFILE_DELETE = 8;\n     */\n    Achievement[Achievement[\"BAE_PRIVATE_PROFILE_DELETE\"] = 8] = \"BAE_PRIVATE_PROFILE_DELETE\";\n    /**\n     * User created a login inbox\n     *\n     * @generated from enum value: BAE_LOGIN_INBOX_CREATE = 9;\n     */\n    Achievement[Achievement[\"BAE_LOGIN_INBOX_CREATE\"] = 9] = \"BAE_LOGIN_INBOX_CREATE\";\n    /**\n     * Someone sent a login to a login inbox of this user\n     *\n     * @generated from enum value: BAE_LOGIN_INBOX_MESSAGE = 10;\n     */\n    Achievement[Achievement[\"BAE_LOGIN_INBOX_MESSAGE\"] = 10] = \"BAE_LOGIN_INBOX_MESSAGE\";\n    /**\n     * and\n     * Granted after the autofill setup screen has been shown to the user.\n     *\n     * @generated from enum value: AND_AUTOFILL_SETUP = 1000000;\n     */\n    Achievement[Achievement[\"AND_AUTOFILL_SETUP\"] = 1000000] = \"AND_AUTOFILL_SETUP\";\n    /**\n     * Granted after the user has enabled autofill.\n     *\n     * @generated from enum value: AND_AUTOFILL_ENABLE = 1000001;\n     */\n    Achievement[Achievement[\"AND_AUTOFILL_ENABLE\"] = 1000001] = \"AND_AUTOFILL_ENABLE\";\n    /**\n     * Granted after autofill inserted a login into another app.\n     *\n     * @generated from enum value: AND_AUTOFILL_INSERT = 1000002;\n     */\n    Achievement[Achievement[\"AND_AUTOFILL_INSERT\"] = 1000002] = \"AND_AUTOFILL_INSERT\";\n    /**\n     * Granted when a login is updated after accepting the \"Update password?\"\" dialog shown after an\n     * autofilled password has been changed before submission.\n     *\n     * @generated from enum value: AND_AUTOFILL_UPDATE = 1000003;\n     */\n    Achievement[Achievement[\"AND_AUTOFILL_UPDATE\"] = 1000003] = \"AND_AUTOFILL_UPDATE\";\n    /**\n     * Granted after a regular cloud backup has been created.\n     *\n     * @generated from enum value: AND_BACKUP_REGULAR = 1000100;\n     */\n    Achievement[Achievement[\"AND_BACKUP_REGULAR\"] = 1000100] = \"AND_BACKUP_REGULAR\";\n    /**\n     * Granted after an end2end encrypted cloud backup has been created.\n     *\n     * @generated from enum value: AND_BACKUP_E2E = 1000101;\n     */\n    Achievement[Achievement[\"AND_BACKUP_E2E\"] = 1000101] = \"AND_BACKUP_E2E\";\n    /**\n     * Granted after a transfer backup has been created.\n     *\n     * @generated from enum value: AND_BACKUP_TRANSFER = 1000102;\n     */\n    Achievement[Achievement[\"AND_BACKUP_TRANSFER\"] = 1000102] = \"AND_BACKUP_TRANSFER\";\n    /**\n     * Granted after the conditions to show the \"please review\" screen are fulfilled:\n     * at least 5 swipe to logins during the last 7 days.\n     *\n     * @generated from enum value: AND_REVIEW_CONDITIONS_FULFILLED = 1000200;\n     */\n    Achievement[Achievement[\"AND_REVIEW_CONDITIONS_FULFILLED\"] = 1000200] = \"AND_REVIEW_CONDITIONS_FULFILLED\";\n    /**\n     * Granted after the review dialog has been shown.\n     * Note that the play store API doesn't give us exact information, so we can only guess the review\n     * dialog was shown to the user based on timing info.\n     *\n     * @generated from enum value: AND_REVIEW_SHOWN = 1000201;\n     */\n    Achievement[Achievement[\"AND_REVIEW_SHOWN\"] = 1000201] = \"AND_REVIEW_SHOWN\";\n    /**\n     * Granted after the review dialog was open for at least three seconds.\n     *\n     * @generated from enum value: AND_REVIEW_STAYED_3_SECONDS = 1000202;\n     */\n    Achievement[Achievement[\"AND_REVIEW_STAYED_3_SECONDS\"] = 1000202] = \"AND_REVIEW_STAYED_3_SECONDS\";\n    /**\n     * Granted after the app requested the camera permission.\n     *\n     * @generated from enum value: AND_SCAN_CAMERA_REQUESTED = 1000300;\n     */\n    Achievement[Achievement[\"AND_SCAN_CAMERA_REQUESTED\"] = 1000300] = \"AND_SCAN_CAMERA_REQUESTED\";\n    /**\n     * Granted after the app was granted the camera permission.\n     *\n     * @generated from enum value: AND_SCAN_CAMERA_GRANTED = 1000301;\n     */\n    Achievement[Achievement[\"AND_SCAN_CAMERA_GRANTED\"] = 1000301] = \"AND_SCAN_CAMERA_GRANTED\";\n    /**\n     * Granted after the app scanned a heylogin login link.\n     *\n     * @generated from enum value: AND_SCAN_SCANNED = 1000302;\n     */\n    Achievement[Achievement[\"AND_SCAN_SCANNED\"] = 1000302] = \"AND_SCAN_SCANNED\";\n    /**\n     * Granted after the app has been opened from an heylogin login link.\n     *\n     * @generated from enum value: AND_SCAN_FROM_EXTERNAL = 1000303;\n     */\n    Achievement[Achievement[\"AND_SCAN_FROM_EXTERNAL\"] = 1000303] = \"AND_SCAN_FROM_EXTERNAL\";\n    /**\n     * Granted when the user was shown the \"keystore lost\" screen\n     *\n     * @generated from enum value: AND_KEYSTORE_LOST_SHOWN_NO_BACKUP = 1000400;\n     */\n    Achievement[Achievement[\"AND_KEYSTORE_LOST_SHOWN_NO_BACKUP\"] = 1000400] = \"AND_KEYSTORE_LOST_SHOWN_NO_BACKUP\";\n    /**\n     * @generated from enum value: AND_KEYSTORE_LOST_SHOWN_BACKUP_AVAILABLE = 1000401;\n     */\n    Achievement[Achievement[\"AND_KEYSTORE_LOST_SHOWN_BACKUP_AVAILABLE\"] = 1000401] = \"AND_KEYSTORE_LOST_SHOWN_BACKUP_AVAILABLE\";\n    /**\n     * Granted when a user does not have a secure lock screen, but enforcement is not enabled\n     *\n     * @generated from enum value: AND_SECOND_FACTOR_ENFORCEMENT_GRANDFATHERED = 1000500;\n     */\n    Achievement[Achievement[\"AND_SECOND_FACTOR_ENFORCEMENT_GRANDFATHERED\"] = 1000500] = \"AND_SECOND_FACTOR_ENFORCEMENT_GRANDFATHERED\";\n    /**\n     * web\n     * Granted after successfully creating a pairing.\n     *\n     * @generated from enum value: WEB_SESSION_CREATE = 2000000;\n     */\n    Achievement[Achievement[\"WEB_SESSION_CREATE\"] = 2000000] = \"WEB_SESSION_CREATE\";\n    /**\n     * Granted after successfully unlocking a session.\n     *\n     * @generated from enum value: WEB_SESSION_UNLOCK = 2000001;\n     */\n    Achievement[Achievement[\"WEB_SESSION_UNLOCK\"] = 2000001] = \"WEB_SESSION_UNLOCK\";\n    /**\n     * Granted when the user has a web session on a smartphone\n     *\n     * @generated from enum value: WEB_SESSION_PHONE = 2000010;\n     */\n    Achievement[Achievement[\"WEB_SESSION_PHONE\"] = 2000010] = \"WEB_SESSION_PHONE\";\n    /**\n     * Granted when the user has a web session on a tablet\n     *\n     * @generated from enum value: WEB_SESSION_TABLET = 2000011;\n     */\n    Achievement[Achievement[\"WEB_SESSION_TABLET\"] = 2000011] = \"WEB_SESSION_TABLET\";\n    /**\n     * All import achievements are granted after successfully importing from the specified product.\n     *\n     * @generated from enum value: WEB_IMPORT_HEYLOGIN = 2000100;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_HEYLOGIN\"] = 2000100] = \"WEB_IMPORT_HEYLOGIN\";\n    /**\n     * @generated from enum value: WEB_IMPORT_BITWARDEN = 2000101;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_BITWARDEN\"] = 2000101] = \"WEB_IMPORT_BITWARDEN\";\n    /**\n     * @generated from enum value: WEB_IMPORT_LASTPASS = 2000102;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_LASTPASS\"] = 2000102] = \"WEB_IMPORT_LASTPASS\";\n    /**\n     * @generated from enum value: WEB_IMPORT_CHROME = 2000103;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_CHROME\"] = 2000103] = \"WEB_IMPORT_CHROME\";\n    /**\n     * @generated from enum value: WEB_IMPORT_FIREFOX = 2000104;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_FIREFOX\"] = 2000104] = \"WEB_IMPORT_FIREFOX\";\n    /**\n     * @generated from enum value: WEB_IMPORT_DASHLANE = 2000105;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_DASHLANE\"] = 2000105] = \"WEB_IMPORT_DASHLANE\";\n    /**\n     * @generated from enum value: WEB_IMPORT_ONEPASSWORD = 2000106;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_ONEPASSWORD\"] = 2000106] = \"WEB_IMPORT_ONEPASSWORD\";\n    /**\n     * @generated from enum value: WEB_IMPORT_KEEPASS = 2000107;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_KEEPASS\"] = 2000107] = \"WEB_IMPORT_KEEPASS\";\n    /**\n     * @generated from enum value: WEB_IMPORT_SAFARI = 2000108;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_SAFARI\"] = 2000108] = \"WEB_IMPORT_SAFARI\";\n    /**\n     * @generated from enum value: WEB_IMPORT_NORDPASS = 2000109;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_NORDPASS\"] = 2000109] = \"WEB_IMPORT_NORDPASS\";\n    /**\n     * @generated from enum value: WEB_IMPORT_STICKYPASSWORD = 2000110;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_STICKYPASSWORD\"] = 2000110] = \"WEB_IMPORT_STICKYPASSWORD\";\n    /**\n     * @generated from enum value: WEB_IMPORT_CSV = 2000111;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_CSV\"] = 2000111] = \"WEB_IMPORT_CSV\";\n    /**\n     * @generated from enum value: WEB_IMPORT_EXCEL = 2000112;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_EXCEL\"] = 2000112] = \"WEB_IMPORT_EXCEL\";\n    /**\n     * @generated from enum value: WEB_IMPORT_ENPASS = 2000113;\n     */\n    Achievement[Achievement[\"WEB_IMPORT_ENPASS\"] = 2000113] = \"WEB_IMPORT_ENPASS\";\n    /**\n     * Granted after an export has been generated.\n     *\n     * @generated from enum value: WEB_EXPORT = 2000200;\n     */\n    Achievement[Achievement[\"WEB_EXPORT\"] = 2000200] = \"WEB_EXPORT\";\n    /**\n     * Granted after a login has been added manually to a vault.\n     * TODO: Restrict to private vaults only?\n     *\n     * @generated from enum value: WEB_LOGIN_ADD = 2000300;\n     */\n    Achievement[Achievement[\"WEB_LOGIN_ADD\"] = 2000300] = \"WEB_LOGIN_ADD\";\n    /**\n     * Granted after the first login has been added manually to an empty vault.\n     * TODO: Restrict to private vaults only?\n     *\n     * @generated from enum value: WEB_LOGIN_ADD_FIRST_MANUAL = 2000301;\n     */\n    Achievement[Achievement[\"WEB_LOGIN_ADD_FIRST_MANUAL\"] = 2000301] = \"WEB_LOGIN_ADD_FIRST_MANUAL\";\n    /**\n     * Granted after CTRL/CMD-K has been pressed to focus the search field.\n     *\n     * @generated from enum value: WEB_USE_SEARCH_SHORTCUT = 2000302;\n     */\n    Achievement[Achievement[\"WEB_USE_SEARCH_SHORTCUT\"] = 2000302] = \"WEB_USE_SEARCH_SHORTCUT\";\n    /**\n     * Granted on creation of the first share link\n     *\n     * @generated from enum value: WEB_LOGIN_CREATE_SHARE_LINK = 2000303;\n     */\n    Achievement[Achievement[\"WEB_LOGIN_CREATE_SHARE_LINK\"] = 2000303] = \"WEB_LOGIN_CREATE_SHARE_LINK\";\n    /**\n     * Granted when the paddle subscribe modal is opened\n     *\n     * @generated from enum value: WEB_PADDLE_SUBSCRIBE_OPENED = 2000400;\n     */\n    Achievement[Achievement[\"WEB_PADDLE_SUBSCRIBE_OPENED\"] = 2000400] = \"WEB_PADDLE_SUBSCRIBE_OPENED\";\n    /**\n     * Granted when the the paddle paddle subscribe modal is closed without purchase\n     *\n     * @generated from enum value: WEB_PADDLE_SUBSCRIBE_CLOSED = 2000401;\n     */\n    Achievement[Achievement[\"WEB_PADDLE_SUBSCRIBE_CLOSED\"] = 2000401] = \"WEB_PADDLE_SUBSCRIBE_CLOSED\";\n    /**\n     * Granted when the the paddle paddle subscribe modal is completed with purchase\n     *\n     * @generated from enum value: WEB_PADDLE_SUBSCRIBE_COMPLETED = 2000402;\n     */\n    Achievement[Achievement[\"WEB_PADDLE_SUBSCRIBE_COMPLETED\"] = 2000402] = \"WEB_PADDLE_SUBSCRIBE_COMPLETED\";\n    /**\n     * Granted when the paddle manage modal is opened\n     *\n     * @generated from enum value: WEB_PADDLE_MANAGE_OPENED = 2000420;\n     */\n    Achievement[Achievement[\"WEB_PADDLE_MANAGE_OPENED\"] = 2000420] = \"WEB_PADDLE_MANAGE_OPENED\";\n    /**\n     * Granted when the the paddle paddle manage modal is closed without purchase\n     *\n     * @generated from enum value: WEB_PADDLE_MANAGE_CLOSED = 2000421;\n     */\n    Achievement[Achievement[\"WEB_PADDLE_MANAGE_CLOSED\"] = 2000421] = \"WEB_PADDLE_MANAGE_CLOSED\";\n    /**\n     * Granted when the the paddle paddle manage modal is completed with purchase\n     *\n     * @generated from enum value: WEB_PADDLE_MANAGE_COMPLETED = 2000422;\n     */\n    Achievement[Achievement[\"WEB_PADDLE_MANAGE_COMPLETED\"] = 2000422] = \"WEB_PADDLE_MANAGE_COMPLETED\";\n    /**\n     * Granted when creating an organization\n     *\n     * @generated from enum value: WEB_ORGANIZATION_CREATE = 2000500;\n     */\n    Achievement[Achievement[\"WEB_ORGANIZATION_CREATE\"] = 2000500] = \"WEB_ORGANIZATION_CREATE\";\n    /**\n     * Grantend when joining an organization\n     *\n     * @generated from enum value: WEB_ORGANIZATION_JOIN = 2000501;\n     */\n    Achievement[Achievement[\"WEB_ORGANIZATION_JOIN\"] = 2000501] = \"WEB_ORGANIZATION_JOIN\";\n    /**\n     * Grantend to an organization admin for accessing a user's personal vault\n     *\n     * @generated from enum value: WEB_ORGANIZATION_ADMIN_ACCESS_PERSONAL = 2000502;\n     */\n    Achievement[Achievement[\"WEB_ORGANIZATION_ADMIN_ACCESS_PERSONAL\"] = 2000502] = \"WEB_ORGANIZATION_ADMIN_ACCESS_PERSONAL\";\n    /**\n     * Grantend for adding a new user with an existing heylogin account to an organization\n     *\n     * @generated from enum value: WEB_ORGANIZATION_USER_ADD_EXISTING = 2000510;\n     */\n    Achievement[Achievement[\"WEB_ORGANIZATION_USER_ADD_EXISTING\"] = 2000510] = \"WEB_ORGANIZATION_USER_ADD_EXISTING\";\n    /**\n     * Grantend for removing a user with an existing heylogin account from an organization\n     *\n     * @generated from enum value: WEB_ORGANIZATION_USER_REMOVE_EXISTING = 2000511;\n     */\n    Achievement[Achievement[\"WEB_ORGANIZATION_USER_REMOVE_EXISTING\"] = 2000511] = \"WEB_ORGANIZATION_USER_REMOVE_EXISTING\";\n    /**\n     * Grantend for adding a new user with no existing heylogin account to an organization\n     *\n     * @generated from enum value: WEB_ORGANIZATION_USER_ADD_NEW = 2000512;\n     */\n    Achievement[Achievement[\"WEB_ORGANIZATION_USER_ADD_NEW\"] = 2000512] = \"WEB_ORGANIZATION_USER_ADD_NEW\";\n    /**\n     * Grantend for removing a user with no existing heylogin account from an organization\n     *\n     * @generated from enum value: WEB_ORGANIZATION_USER_REMOVE_NEW = 2000513;\n     */\n    Achievement[Achievement[\"WEB_ORGANIZATION_USER_REMOVE_NEW\"] = 2000513] = \"WEB_ORGANIZATION_USER_REMOVE_NEW\";\n    /**\n     * Grantend for changing a organization user's access level\n     *\n     * @generated from enum value: WEB_ORGANIZATION_USER_CHANGE_ACCESS_LEVEL = 2000514;\n     */\n    Achievement[Achievement[\"WEB_ORGANIZATION_USER_CHANGE_ACCESS_LEVEL\"] = 2000514] = \"WEB_ORGANIZATION_USER_CHANGE_ACCESS_LEVEL\";\n    /**\n     * Grantend for creating a team inside an organization\n     *\n     * @generated from enum value: WEB_ORGANIZATION_TEAM_CREATE = 2000520;\n     */\n    Achievement[Achievement[\"WEB_ORGANIZATION_TEAM_CREATE\"] = 2000520] = \"WEB_ORGANIZATION_TEAM_CREATE\";\n    /**\n     * ext\n     * Granted after the extension has been installed.\n     *\n     * @generated from enum value: EXT_INSTALL = 3000000;\n     */\n    Achievement[Achievement[\"EXT_INSTALL\"] = 3000000] = \"EXT_INSTALL\";\n    /**\n     * Granted after the user has disabled the extension for a page.\n     *\n     * @generated from enum value: EXT_DISABLE_FOR_PAGE = 3000001;\n     */\n    Achievement[Achievement[\"EXT_DISABLE_FOR_PAGE\"] = 3000001] = \"EXT_DISABLE_FOR_PAGE\";\n    /**\n     * Granted when the user reports a page to heyproblems\n     *\n     * @generated from enum value: EXT_REPORT_PAGE = 3000002;\n     */\n    Achievement[Achievement[\"EXT_REPORT_PAGE\"] = 3000002] = \"EXT_REPORT_PAGE\";\n    /**\n     * Granted when the extension creates a new login.\n     *\n     * @generated from enum value: EXT_LOGIN_INSERT = 3000100;\n     */\n    Achievement[Achievement[\"EXT_LOGIN_INSERT\"] = 3000100] = \"EXT_LOGIN_INSERT\";\n    /**\n     * Granted when the extension updates an existing login.\n     *\n     * @generated from enum value: EXT_LOGIN_UPDATE = 3000101;\n     */\n    Achievement[Achievement[\"EXT_LOGIN_UPDATE\"] = 3000101] = \"EXT_LOGIN_UPDATE\";\n    /**\n     * Granted when a login form has been detected and a user manually logs in and we autosnatch that\n     * login.\n     *\n     * @generated from enum value: EXT_AUTOSNATCH_FROM_LOGIN = 3000110;\n     */\n    Achievement[Achievement[\"EXT_AUTOSNATCH_FROM_LOGIN\"] = 3000110] = \"EXT_AUTOSNATCH_FROM_LOGIN\";\n    /**\n     * Granted when a registration form has been detected and we autosnatched that login.\n     *\n     * @generated from enum value: EXT_AUTOSNATCH_FROM_REGISTRATION = 3000111;\n     */\n    Achievement[Achievement[\"EXT_AUTOSNATCH_FROM_REGISTRATION\"] = 3000111] = \"EXT_AUTOSNATCH_FROM_REGISTRATION\";\n    /**\n     * Granted after the user clicked on a login in the overlay and it logged them in.\n     *\n     * @generated from enum value: EXT_OVERLAY_LOGIN = 3000200;\n     */\n    Achievement[Achievement[\"EXT_OVERLAY_LOGIN\"] = 3000200] = \"EXT_OVERLAY_LOGIN\";\n    /**\n     * Granted after the user clicked on a login but the extension was locked and the user has now\n     * unlocked it.\n     *\n     * @generated from enum value: EXT_OVERLAY_UNLOCK = 3000201;\n     */\n    Achievement[Achievement[\"EXT_OVERLAY_UNLOCK\"] = 3000201] = \"EXT_OVERLAY_UNLOCK\";\n    /**\n     * Granted after updating a login that only contained a generated password from the overlay.\n     *\n     * @generated from enum value: EXT_OVERLAY_UPDATE_GENERATED_PASSWORD = 3000204;\n     */\n    Achievement[Achievement[\"EXT_OVERLAY_UPDATE_GENERATED_PASSWORD\"] = 3000204] = \"EXT_OVERLAY_UPDATE_GENERATED_PASSWORD\";\n    /**\n     * Granted when the user disables autosnatch form the autosnatch overlay\n     *\n     * @generated from enum value: EXT_OVERLAY_DISABLE_AUTOSNATCH = 3000004;\n     */\n    Achievement[Achievement[\"EXT_OVERLAY_DISABLE_AUTOSNATCH\"] = 3000004] = \"EXT_OVERLAY_DISABLE_AUTOSNATCH\";\n    /**\n     * Granted when subscription nag screen is displayed to the user\n     *\n     * @generated from enum value: EXT_OVERLAY_SAW_NAG_SCREEN = 3000005;\n     */\n    Achievement[Achievement[\"EXT_OVERLAY_SAW_NAG_SCREEN\"] = 3000005] = \"EXT_OVERLAY_SAW_NAG_SCREEN\";\n    /**\n     * Granted when opening the extension popup.\n     *\n     * @generated from enum value: EXT_POPUP_OPEN = 3000300;\n     */\n    Achievement[Achievement[\"EXT_POPUP_OPEN\"] = 3000300] = \"EXT_POPUP_OPEN\";\n    /**\n     * Granted when opening the extension popup but the extension was locked and the user has now\n     * unlocked it.\n     *\n     * @generated from enum value: EXT_POPUP_UNLOCK = 3000301;\n     */\n    Achievement[Achievement[\"EXT_POPUP_UNLOCK\"] = 3000301] = \"EXT_POPUP_UNLOCK\";\n    /**\n     * Granted when the user disables autosnatch from the popup\n     *\n     * @generated from enum value: EXT_POPUP_DISABLE_AUTOSNATCH = 3000003;\n     */\n    Achievement[Achievement[\"EXT_POPUP_DISABLE_AUTOSNATCH\"] = 3000003] = \"EXT_POPUP_DISABLE_AUTOSNATCH\";\n    /**\n     * Granted after searching for a login\n     *\n     * @generated from enum value: EXT_OMNIBOX_INPUT_CHANGED = 3000400;\n     */\n    Achievement[Achievement[\"EXT_OMNIBOX_INPUT_CHANGED\"] = 3000400] = \"EXT_OMNIBOX_INPUT_CHANGED\";\n    /**\n     * Granted after pressing enter on an omnibox login\n     *\n     * @generated from enum value: EXT_OMNIBOX_INPUT_ENTERED = 3000401;\n     */\n    Achievement[Achievement[\"EXT_OMNIBOX_INPUT_ENTERED\"] = 3000401] = \"EXT_OMNIBOX_INPUT_ENTERED\";\n    /**\n     * All achievements are granted after the respective operation has been performed from the context\n     * menu.\n     * Granted after enabling the extension for the page via the context menu.\n     *\n     * @generated from enum value: EXT_CONTEXT_MENU_HEYLOGIN_ENABLED = 3000500;\n     */\n    Achievement[Achievement[\"EXT_CONTEXT_MENU_HEYLOGIN_ENABLED\"] = 3000500] = \"EXT_CONTEXT_MENU_HEYLOGIN_ENABLED\";\n    /**\n     * @generated from enum value: EXT_CONTEXT_MENU_USERNAME_FILLED = 3000510;\n     */\n    Achievement[Achievement[\"EXT_CONTEXT_MENU_USERNAME_FILLED\"] = 3000510] = \"EXT_CONTEXT_MENU_USERNAME_FILLED\";\n    /**\n     * @generated from enum value: EXT_CONTEXT_MENU_PASSWORD_FILLED = 3000511;\n     */\n    Achievement[Achievement[\"EXT_CONTEXT_MENU_PASSWORD_FILLED\"] = 3000511] = \"EXT_CONTEXT_MENU_PASSWORD_FILLED\";\n    /**\n     * @generated from enum value: EXT_CONTEXT_MENU_CUSTOM_TOTP_FILLED = 3000512;\n     */\n    Achievement[Achievement[\"EXT_CONTEXT_MENU_CUSTOM_TOTP_FILLED\"] = 3000512] = \"EXT_CONTEXT_MENU_CUSTOM_TOTP_FILLED\";\n    /**\n     * @generated from enum value: EXT_CONTEXT_MENU_CUSTOM_PLAIN_FILLED = 3000513;\n     */\n    Achievement[Achievement[\"EXT_CONTEXT_MENU_CUSTOM_PLAIN_FILLED\"] = 3000513] = \"EXT_CONTEXT_MENU_CUSTOM_PLAIN_FILLED\";\n    /**\n     * @generated from enum value: EXT_CONTEXT_MENU_CUSTOM_PROTECTED_FILLED = 3000514;\n     */\n    Achievement[Achievement[\"EXT_CONTEXT_MENU_CUSTOM_PROTECTED_FILLED\"] = 3000514] = \"EXT_CONTEXT_MENU_CUSTOM_PROTECTED_FILLED\";\n    /**\n     * Granted after opening the global search window\n     *\n     * @generated from enum value: EXT_GLOBAL_SEARCH_OPEN = 3000600;\n     */\n    Achievement[Achievement[\"EXT_GLOBAL_SEARCH_OPEN\"] = 3000600] = \"EXT_GLOBAL_SEARCH_OPEN\";\n    /**\n     * Granted when opening the global search window but the extension was locked and the user has now\n     * unlocked it.\n     *\n     * @generated from enum value: EXT_GLOBAL_SEARCH_UNLOCK = 3000601;\n     */\n    Achievement[Achievement[\"EXT_GLOBAL_SEARCH_UNLOCK\"] = 3000601] = \"EXT_GLOBAL_SEARCH_UNLOCK\";\n    /**\n     * cor\n     * All achievements are granted after having at least that amount of logins in the private login\n     * vault.\n     *\n     * @generated from enum value: COR_LOGINS_TOTAL_1 = 4000000;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_1\"] = 4000000] = \"COR_LOGINS_TOTAL_1\";\n    /**\n     * @generated from enum value: COR_LOGINS_TOTAL_2 = 4000001;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_2\"] = 4000001] = \"COR_LOGINS_TOTAL_2\";\n    /**\n     * @generated from enum value: COR_LOGINS_TOTAL_4 = 4000002;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_4\"] = 4000002] = \"COR_LOGINS_TOTAL_4\";\n    /**\n     * @generated from enum value: COR_LOGINS_TOTAL_8 = 4000003;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_8\"] = 4000003] = \"COR_LOGINS_TOTAL_8\";\n    /**\n     * @generated from enum value: COR_LOGINS_TOTAL_16 = 4000004;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_16\"] = 4000004] = \"COR_LOGINS_TOTAL_16\";\n    /**\n     * @generated from enum value: COR_LOGINS_TOTAL_32 = 4000005;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_32\"] = 4000005] = \"COR_LOGINS_TOTAL_32\";\n    /**\n     * @generated from enum value: COR_LOGINS_TOTAL_64 = 4000006;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_64\"] = 4000006] = \"COR_LOGINS_TOTAL_64\";\n    /**\n     * @generated from enum value: COR_LOGINS_TOTAL_128 = 4000007;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_128\"] = 4000007] = \"COR_LOGINS_TOTAL_128\";\n    /**\n     * @generated from enum value: COR_LOGINS_TOTAL_256 = 4000008;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_256\"] = 4000008] = \"COR_LOGINS_TOTAL_256\";\n    /**\n     * @generated from enum value: COR_LOGINS_TOTAL_512 = 4000009;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_512\"] = 4000009] = \"COR_LOGINS_TOTAL_512\";\n    /**\n     * @generated from enum value: COR_LOGINS_TOTAL_1024 = 4000010;\n     */\n    Achievement[Achievement[\"COR_LOGINS_TOTAL_1024\"] = 4000010] = \"COR_LOGINS_TOTAL_1024\";\n    /**\n     * Granted when writing the backup code to the meta vault\n     *\n     * @generated from enum value: COR_STORE_BACKUP_CODE_META_VAULT = 4000011;\n     */\n    Achievement[Achievement[\"COR_STORE_BACKUP_CODE_META_VAULT\"] = 4000011] = \"COR_STORE_BACKUP_CODE_META_VAULT\";\n    /**\n     * Granted when the user links a login to a personal vault or team\n     *\n     * @generated from enum value: COR_LINKED_LOGIN_CREATE_PERSONAL = 4000012;\n     */\n    Achievement[Achievement[\"COR_LINKED_LOGIN_CREATE_PERSONAL\"] = 4000012] = \"COR_LINKED_LOGIN_CREATE_PERSONAL\";\n    /**\n     * @generated from enum value: COR_LINKED_LOGIN_CREATE_TEAM = 4000013;\n     */\n    Achievement[Achievement[\"COR_LINKED_LOGIN_CREATE_TEAM\"] = 4000013] = \"COR_LINKED_LOGIN_CREATE_TEAM\";\n    /**\n     * ios\n     * Granted after the showing the guid to enable autofill.\n     *\n     * @generated from enum value: IOS_AUTOFILL_GUIDE_SETUP = 5000000;\n     */\n    Achievement[Achievement[\"IOS_AUTOFILL_GUIDE_SETUP\"] = 5000000] = \"IOS_AUTOFILL_GUIDE_SETUP\";\n    /**\n     * Granted after autofill has been enabled and at least used it once.\n     *\n     * @generated from enum value: IOS_AUTOFILL_ENABLE = 5000001;\n     */\n    Achievement[Achievement[\"IOS_AUTOFILL_ENABLE\"] = 5000001] = \"IOS_AUTOFILL_ENABLE\";\n    /**\n     * Granted when a user does not have a secure lock screen, but enforcement is not enabled\n     *\n     * @generated from enum value: IOS_SECOND_FACTOR_ENFORCEMENT_GRANDFATHERED = 5000100;\n     */\n    Achievement[Achievement[\"IOS_SECOND_FACTOR_ENFORCEMENT_GRANDFATHERED\"] = 5000100] = \"IOS_SECOND_FACTOR_ENFORCEMENT_GRANDFATHERED\";\n})(Achievement || (Achievement = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Achievement)\nproto3.util.setEnumType(Achievement, \"domain.Achievement\", [\n    { no: 0, name: \"UNKNOWN\" },\n    { no: 1, name: \"BAE_REGISTER_ANDROID\" },\n    { no: 2, name: \"BAE_REGISTER_IOS\" },\n    { no: 11, name: \"BAE_REGISTER_WEB\" },\n    { no: 12, name: \"BAE_REGISTER_BAK\" },\n    { no: 3, name: \"BAE_INACTIVE_MARKED_FOR_DELETION\" },\n    { no: 4, name: \"BAE_REACTIVATED\" },\n    { no: 5, name: \"BAE_ORG_ICON_FOUND\" },\n    { no: 6, name: \"BAE_LOGIN_RECOVERY\" },\n    { no: 7, name: \"BAE_LOGIN_BACKUP\" },\n    { no: 8, name: \"BAE_PRIVATE_PROFILE_DELETE\" },\n    { no: 9, name: \"BAE_LOGIN_INBOX_CREATE\" },\n    { no: 10, name: \"BAE_LOGIN_INBOX_MESSAGE\" },\n    { no: 1000000, name: \"AND_AUTOFILL_SETUP\" },\n    { no: 1000001, name: \"AND_AUTOFILL_ENABLE\" },\n    { no: 1000002, name: \"AND_AUTOFILL_INSERT\" },\n    { no: 1000003, name: \"AND_AUTOFILL_UPDATE\" },\n    { no: 1000100, name: \"AND_BACKUP_REGULAR\" },\n    { no: 1000101, name: \"AND_BACKUP_E2E\" },\n    { no: 1000102, name: \"AND_BACKUP_TRANSFER\" },\n    { no: 1000200, name: \"AND_REVIEW_CONDITIONS_FULFILLED\" },\n    { no: 1000201, name: \"AND_REVIEW_SHOWN\" },\n    { no: 1000202, name: \"AND_REVIEW_STAYED_3_SECONDS\" },\n    { no: 1000300, name: \"AND_SCAN_CAMERA_REQUESTED\" },\n    { no: 1000301, name: \"AND_SCAN_CAMERA_GRANTED\" },\n    { no: 1000302, name: \"AND_SCAN_SCANNED\" },\n    { no: 1000303, name: \"AND_SCAN_FROM_EXTERNAL\" },\n    { no: 1000400, name: \"AND_KEYSTORE_LOST_SHOWN_NO_BACKUP\" },\n    { no: 1000401, name: \"AND_KEYSTORE_LOST_SHOWN_BACKUP_AVAILABLE\" },\n    { no: 1000500, name: \"AND_SECOND_FACTOR_ENFORCEMENT_GRANDFATHERED\" },\n    { no: 2000000, name: \"WEB_SESSION_CREATE\" },\n    { no: 2000001, name: \"WEB_SESSION_UNLOCK\" },\n    { no: 2000010, name: \"WEB_SESSION_PHONE\" },\n    { no: 2000011, name: \"WEB_SESSION_TABLET\" },\n    { no: 2000100, name: \"WEB_IMPORT_HEYLOGIN\" },\n    { no: 2000101, name: \"WEB_IMPORT_BITWARDEN\" },\n    { no: 2000102, name: \"WEB_IMPORT_LASTPASS\" },\n    { no: 2000103, name: \"WEB_IMPORT_CHROME\" },\n    { no: 2000104, name: \"WEB_IMPORT_FIREFOX\" },\n    { no: 2000105, name: \"WEB_IMPORT_DASHLANE\" },\n    { no: 2000106, name: \"WEB_IMPORT_ONEPASSWORD\" },\n    { no: 2000107, name: \"WEB_IMPORT_KEEPASS\" },\n    { no: 2000108, name: \"WEB_IMPORT_SAFARI\" },\n    { no: 2000109, name: \"WEB_IMPORT_NORDPASS\" },\n    { no: 2000110, name: \"WEB_IMPORT_STICKYPASSWORD\" },\n    { no: 2000111, name: \"WEB_IMPORT_CSV\" },\n    { no: 2000112, name: \"WEB_IMPORT_EXCEL\" },\n    { no: 2000113, name: \"WEB_IMPORT_ENPASS\" },\n    { no: 2000200, name: \"WEB_EXPORT\" },\n    { no: 2000300, name: \"WEB_LOGIN_ADD\" },\n    { no: 2000301, name: \"WEB_LOGIN_ADD_FIRST_MANUAL\" },\n    { no: 2000302, name: \"WEB_USE_SEARCH_SHORTCUT\" },\n    { no: 2000303, name: \"WEB_LOGIN_CREATE_SHARE_LINK\" },\n    { no: 2000400, name: \"WEB_PADDLE_SUBSCRIBE_OPENED\" },\n    { no: 2000401, name: \"WEB_PADDLE_SUBSCRIBE_CLOSED\" },\n    { no: 2000402, name: \"WEB_PADDLE_SUBSCRIBE_COMPLETED\" },\n    { no: 2000420, name: \"WEB_PADDLE_MANAGE_OPENED\" },\n    { no: 2000421, name: \"WEB_PADDLE_MANAGE_CLOSED\" },\n    { no: 2000422, name: \"WEB_PADDLE_MANAGE_COMPLETED\" },\n    { no: 2000500, name: \"WEB_ORGANIZATION_CREATE\" },\n    { no: 2000501, name: \"WEB_ORGANIZATION_JOIN\" },\n    { no: 2000502, name: \"WEB_ORGANIZATION_ADMIN_ACCESS_PERSONAL\" },\n    { no: 2000510, name: \"WEB_ORGANIZATION_USER_ADD_EXISTING\" },\n    { no: 2000511, name: \"WEB_ORGANIZATION_USER_REMOVE_EXISTING\" },\n    { no: 2000512, name: \"WEB_ORGANIZATION_USER_ADD_NEW\" },\n    { no: 2000513, name: \"WEB_ORGANIZATION_USER_REMOVE_NEW\" },\n    { no: 2000514, name: \"WEB_ORGANIZATION_USER_CHANGE_ACCESS_LEVEL\" },\n    { no: 2000520, name: \"WEB_ORGANIZATION_TEAM_CREATE\" },\n    { no: 3000000, name: \"EXT_INSTALL\" },\n    { no: 3000001, name: \"EXT_DISABLE_FOR_PAGE\" },\n    { no: 3000002, name: \"EXT_REPORT_PAGE\" },\n    { no: 3000100, name: \"EXT_LOGIN_INSERT\" },\n    { no: 3000101, name: \"EXT_LOGIN_UPDATE\" },\n    { no: 3000110, name: \"EXT_AUTOSNATCH_FROM_LOGIN\" },\n    { no: 3000111, name: \"EXT_AUTOSNATCH_FROM_REGISTRATION\" },\n    { no: 3000200, name: \"EXT_OVERLAY_LOGIN\" },\n    { no: 3000201, name: \"EXT_OVERLAY_UNLOCK\" },\n    { no: 3000204, name: \"EXT_OVERLAY_UPDATE_GENERATED_PASSWORD\" },\n    { no: 3000004, name: \"EXT_OVERLAY_DISABLE_AUTOSNATCH\" },\n    { no: 3000005, name: \"EXT_OVERLAY_SAW_NAG_SCREEN\" },\n    { no: 3000300, name: \"EXT_POPUP_OPEN\" },\n    { no: 3000301, name: \"EXT_POPUP_UNLOCK\" },\n    { no: 3000003, name: \"EXT_POPUP_DISABLE_AUTOSNATCH\" },\n    { no: 3000400, name: \"EXT_OMNIBOX_INPUT_CHANGED\" },\n    { no: 3000401, name: \"EXT_OMNIBOX_INPUT_ENTERED\" },\n    { no: 3000500, name: \"EXT_CONTEXT_MENU_HEYLOGIN_ENABLED\" },\n    { no: 3000510, name: \"EXT_CONTEXT_MENU_USERNAME_FILLED\" },\n    { no: 3000511, name: \"EXT_CONTEXT_MENU_PASSWORD_FILLED\" },\n    { no: 3000512, name: \"EXT_CONTEXT_MENU_CUSTOM_TOTP_FILLED\" },\n    { no: 3000513, name: \"EXT_CONTEXT_MENU_CUSTOM_PLAIN_FILLED\" },\n    { no: 3000514, name: \"EXT_CONTEXT_MENU_CUSTOM_PROTECTED_FILLED\" },\n    { no: 3000600, name: \"EXT_GLOBAL_SEARCH_OPEN\" },\n    { no: 3000601, name: \"EXT_GLOBAL_SEARCH_UNLOCK\" },\n    { no: 4000000, name: \"COR_LOGINS_TOTAL_1\" },\n    { no: 4000001, name: \"COR_LOGINS_TOTAL_2\" },\n    { no: 4000002, name: \"COR_LOGINS_TOTAL_4\" },\n    { no: 4000003, name: \"COR_LOGINS_TOTAL_8\" },\n    { no: 4000004, name: \"COR_LOGINS_TOTAL_16\" },\n    { no: 4000005, name: \"COR_LOGINS_TOTAL_32\" },\n    { no: 4000006, name: \"COR_LOGINS_TOTAL_64\" },\n    { no: 4000007, name: \"COR_LOGINS_TOTAL_128\" },\n    { no: 4000008, name: \"COR_LOGINS_TOTAL_256\" },\n    { no: 4000009, name: \"COR_LOGINS_TOTAL_512\" },\n    { no: 4000010, name: \"COR_LOGINS_TOTAL_1024\" },\n    { no: 4000011, name: \"COR_STORE_BACKUP_CODE_META_VAULT\" },\n    { no: 4000012, name: \"COR_LINKED_LOGIN_CREATE_PERSONAL\" },\n    { no: 4000013, name: \"COR_LINKED_LOGIN_CREATE_TEAM\" },\n    { no: 5000000, name: \"IOS_AUTOFILL_GUIDE_SETUP\" },\n    { no: 5000001, name: \"IOS_AUTOFILL_ENABLE\" },\n    { no: 5000100, name: \"IOS_SECOND_FACTOR_ENFORCEMENT_GRANDFATHERED\" },\n]);\n//# sourceMappingURL=achievements_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file unlock_time_limit.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from message domain.UnlockTimeLimit\n */\nexport class UnlockTimeLimit extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bool enabled = 1;\n         */\n        this.enabled = false;\n        /**\n         * @generated from field: uint32 minutes = 2;\n         */\n        this.minutes = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UnlockTimeLimit().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UnlockTimeLimit().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UnlockTimeLimit().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UnlockTimeLimit, a, b);\n    }\n}\nUnlockTimeLimit.runtime = proto3;\nUnlockTimeLimit.typeName = \"domain.UnlockTimeLimit\";\nUnlockTimeLimit.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"minutes\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n]);\n//# sourceMappingURL=unlock_time_limit_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file vault_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.VaultType\n */\nexport var VaultType;\n(function (VaultType) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: VAULT_TYPE_UNKNOWN = 0;\n     */\n    VaultType[VaultType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * this is checked by the vault_types_enum constraint, see ../migrations/0018_multi_user_vaults.up.sql (and other migrations)\n     *\n     * @generated from enum value: VAULT_TYPE_META = 1;\n     */\n    VaultType[VaultType[\"META\"] = 1] = \"META\";\n    /**\n     * @generated from enum value: VAULT_TYPE_PRIVATE = 2;\n     */\n    VaultType[VaultType[\"PRIVATE\"] = 2] = \"PRIVATE\";\n    /**\n     * @generated from enum value: VAULT_TYPE_TEAM = 3;\n     */\n    VaultType[VaultType[\"TEAM\"] = 3] = \"TEAM\";\n    /**\n     * @generated from enum value: VAULT_TYPE_TEAM_META = 4;\n     */\n    VaultType[VaultType[\"TEAM_META\"] = 4] = \"TEAM_META\";\n    /**\n     * deprecated: only used in legacy organizations, will be removed once all organizations are fully migrated to organization profiles\n     * contains organization authenticator seed in addition to other data\n     *\n     * @generated from enum value: VAULT_TYPE_LEGACY_ORGANIZATION_ADMIN = 5;\n     */\n    VaultType[VaultType[\"LEGACY_ORGANIZATION_ADMIN\"] = 5] = \"LEGACY_ORGANIZATION_ADMIN\";\n    /**\n     * @generated from enum value: VAULT_TYPE_ORGANIZATION_PERSONAL = 6;\n     */\n    VaultType[VaultType[\"ORGANIZATION_PERSONAL\"] = 6] = \"ORGANIZATION_PERSONAL\";\n    /**\n     * @generated from enum value: VAULT_TYPE_INBOX = 7;\n     */\n    VaultType[VaultType[\"INBOX\"] = 7] = \"INBOX\";\n    /**\n     * @generated from enum value: VAULT_TYPE_INBOX_META = 8;\n     */\n    VaultType[VaultType[\"INBOX_META\"] = 8] = \"INBOX_META\";\n    /**\n     * @generated from enum value: VAULT_TYPE_ORGANIZATION_ADMIN = 9;\n     */\n    VaultType[VaultType[\"ORGANIZATION_ADMIN\"] = 9] = \"ORGANIZATION_ADMIN\";\n})(VaultType || (VaultType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(VaultType)\nproto3.util.setEnumType(VaultType, \"domain.VaultType\", [\n    { no: 0, name: \"VAULT_TYPE_UNKNOWN\" },\n    { no: 1, name: \"VAULT_TYPE_META\" },\n    { no: 2, name: \"VAULT_TYPE_PRIVATE\" },\n    { no: 3, name: \"VAULT_TYPE_TEAM\" },\n    { no: 4, name: \"VAULT_TYPE_TEAM_META\" },\n    { no: 5, name: \"VAULT_TYPE_LEGACY_ORGANIZATION_ADMIN\" },\n    { no: 6, name: \"VAULT_TYPE_ORGANIZATION_PERSONAL\" },\n    { no: 7, name: \"VAULT_TYPE_INBOX\" },\n    { no: 8, name: \"VAULT_TYPE_INBOX_META\" },\n    { no: 9, name: \"VAULT_TYPE_ORGANIZATION_ADMIN\" },\n]);\n//# sourceMappingURL=vault_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file webauthn_prf_support_status.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.WebauthnPrfSupportStatus\n */\nexport var WebauthnPrfSupportStatus;\n(function (WebauthnPrfSupportStatus) {\n    /**\n     * PRF availability is unknown\n     *\n     * @generated from enum value: WEBAUTHN_PRF_SUPPORT_STATUS_UNKNOWN = 0;\n     */\n    WebauthnPrfSupportStatus[WebauthnPrfSupportStatus[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * PRF is known to be unavailable\n     *\n     * @generated from enum value: WEBAUTHN_PRF_SUPPORT_STATUS_UNAVAILABLE = 1;\n     */\n    WebauthnPrfSupportStatus[WebauthnPrfSupportStatus[\"UNAVAILABLE\"] = 1] = \"UNAVAILABLE\";\n    /**\n     * PRF is known to be available\n     *\n     * @generated from enum value: WEBAUTHN_PRF_SUPPORT_STATUS_AVAILABLE = 2;\n     */\n    WebauthnPrfSupportStatus[WebauthnPrfSupportStatus[\"AVAILABLE\"] = 2] = \"AVAILABLE\";\n})(WebauthnPrfSupportStatus || (WebauthnPrfSupportStatus = {}));\n// Retrieve enum metadata with: proto3.getEnumType(WebauthnPrfSupportStatus)\nproto3.util.setEnumType(WebauthnPrfSupportStatus, \"domain.WebauthnPrfSupportStatus\", [\n    { no: 0, name: \"WEBAUTHN_PRF_SUPPORT_STATUS_UNKNOWN\" },\n    { no: 1, name: \"WEBAUTHN_PRF_SUPPORT_STATUS_UNAVAILABLE\" },\n    { no: 2, name: \"WEBAUTHN_PRF_SUPPORT_STATUS_AVAILABLE\" },\n]);\n//# sourceMappingURL=webauthn_prf_support_status_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file organization_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.OrganizationType\n */\nexport var OrganizationType;\n(function (OrganizationType) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: ORGANIZATION_TYPE_UNKNOWN = 0;\n     */\n    OrganizationType[OrganizationType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * ORGANIZATION_TYPE_FAMILY = 2;\n     *\n     * @generated from enum value: ORGANIZATION_TYPE_COMPANY = 1;\n     */\n    OrganizationType[OrganizationType[\"COMPANY\"] = 1] = \"COMPANY\";\n})(OrganizationType || (OrganizationType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(OrganizationType)\nproto3.util.setEnumType(OrganizationType, \"domain.OrganizationType\", [\n    { no: 0, name: \"ORGANIZATION_TYPE_UNKNOWN\" },\n    { no: 1, name: \"ORGANIZATION_TYPE_COMPANY\" },\n]);\n//# sourceMappingURL=organization_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file locks.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from message domain.VaultAuthenticatorLock\n */\nexport class VaultAuthenticatorLock extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string authenticator_id = 1;\n         */\n        this.authenticatorId = \"\";\n        /**\n         * @generated from field: bytes encrypted_storable_vault_key = 2;\n         */\n        this.encryptedStorableVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes encrypted_high_security_vault_key = 3;\n         */\n        this.encryptedHighSecurityVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes encrypted_vault_message_private_key = 4;\n         */\n        this.encryptedVaultMessagePrivateKey = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new VaultAuthenticatorLock().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new VaultAuthenticatorLock().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new VaultAuthenticatorLock().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(VaultAuthenticatorLock, a, b);\n    }\n}\nVaultAuthenticatorLock.runtime = proto3;\nVaultAuthenticatorLock.typeName = \"domain.VaultAuthenticatorLock\";\nVaultAuthenticatorLock.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"encrypted_storable_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"encrypted_high_security_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"encrypted_vault_message_private_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.VaultProfileLock\n */\nexport class VaultProfileLock extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string locking_profile_id = 1;\n         */\n        this.lockingProfileId = \"\";\n        /**\n         * @generated from field: string locking_profile_key_generation_id = 2;\n         */\n        this.lockingProfileKeyGenerationId = \"\";\n        /**\n         * @generated from field: bytes encrypted_storable_vault_key = 3;\n         */\n        this.encryptedStorableVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes encrypted_high_security_vault_key = 4;\n         */\n        this.encryptedHighSecurityVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes encrypted_vault_message_private_key = 5;\n         */\n        this.encryptedVaultMessagePrivateKey = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new VaultProfileLock().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new VaultProfileLock().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new VaultProfileLock().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(VaultProfileLock, a, b);\n    }\n}\nVaultProfileLock.runtime = proto3;\nVaultProfileLock.typeName = \"domain.VaultProfileLock\";\nVaultProfileLock.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"locking_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"locking_profile_key_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"encrypted_storable_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"encrypted_high_security_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 5, name: \"encrypted_vault_message_private_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.ProfileAuthenticatorLock\n */\nexport class ProfileAuthenticatorLock extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string authenticator_id = 1;\n         */\n        this.authenticatorId = \"\";\n        /**\n         * @generated from field: bytes encrypted_high_security_profile_seed = 2;\n         */\n        this.encryptedHighSecurityProfileSeed = new Uint8Array(0);\n        /**\n         * @generated from field: bytes encrypted_storable_profile_seed = 3;\n         */\n        this.encryptedStorableProfileSeed = new Uint8Array(0);\n        /**\n         * only set during authenticator creation\n         *\n         * @generated from field: string profile_id = 4;\n         */\n        this.profileId = \"\";\n        /**\n         * @generated from field: string profile_key_generation_id = 5;\n         */\n        this.profileKeyGenerationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ProfileAuthenticatorLock().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ProfileAuthenticatorLock().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ProfileAuthenticatorLock().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ProfileAuthenticatorLock, a, b);\n    }\n}\nProfileAuthenticatorLock.runtime = proto3;\nProfileAuthenticatorLock.typeName = \"domain.ProfileAuthenticatorLock\";\nProfileAuthenticatorLock.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"encrypted_high_security_profile_seed\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"encrypted_storable_profile_seed\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"profile_key_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.VaultLockCreationData\n */\nexport class VaultLockCreationData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: string generation_id = 2;\n         */\n        this.generationId = \"\";\n        /**\n         * @generated from field: string associated_vault_id = 4;\n         */\n        this.associatedVaultId = \"\";\n        /**\n         * @generated from field: string associated_generation_id = 5;\n         */\n        this.associatedGenerationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new VaultLockCreationData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new VaultLockCreationData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new VaultLockCreationData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(VaultLockCreationData, a, b);\n    }\n}\nVaultLockCreationData.runtime = proto3;\nVaultLockCreationData.typeName = \"domain.VaultLockCreationData\";\nVaultLockCreationData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"lock\", kind: \"message\", T: VaultProfileLock },\n    { no: 4, name: \"associated_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"associated_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"associated_lock\", kind: \"message\", T: VaultProfileLock },\n]);\n/**\n * @generated from message domain.ProfileProfileLock\n */\nexport class ProfileProfileLock extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string locking_profile_id = 1;\n         */\n        this.lockingProfileId = \"\";\n        /**\n         * @generated from field: string locking_profile_key_generation_id = 2;\n         */\n        this.lockingProfileKeyGenerationId = \"\";\n        /**\n         * @generated from field: bytes encrypted_high_security_profile_seed = 3;\n         */\n        this.encryptedHighSecurityProfileSeed = new Uint8Array(0);\n        /**\n         * @generated from field: bytes encrypted_storable_profile_seed = 4;\n         */\n        this.encryptedStorableProfileSeed = new Uint8Array(0);\n        /**\n         * only set if lock is not sent as part of a profile\n         *\n         * @generated from field: string profile_id = 5;\n         */\n        this.profileId = \"\";\n        /**\n         * @generated from field: string profile_key_generation_id = 6;\n         */\n        this.profileKeyGenerationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ProfileProfileLock().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ProfileProfileLock().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ProfileProfileLock().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ProfileProfileLock, a, b);\n    }\n}\nProfileProfileLock.runtime = proto3;\nProfileProfileLock.typeName = \"domain.ProfileProfileLock\";\nProfileProfileLock.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"locking_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"locking_profile_key_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"encrypted_high_security_profile_seed\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"encrypted_storable_profile_seed\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 5, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"profile_key_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n//# sourceMappingURL=locks_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file authenticator.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\nimport { AuthenticatorType } from \"./authenticator_type_pb.js\";\nimport { ProfileAuthenticatorLock } from \"./locks_pb.js\";\nimport { WebauthnPrfSupportStatus } from \"./webauthn_prf_support_status_pb.js\";\n/**\n * @generated from message domain.AuthenticatorData\n */\nexport class AuthenticatorData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: domain.AuthenticatorType authenticator_type = 12;\n         */\n        this.authenticatorType = AuthenticatorType.UNKNOWN;\n        /**\n         * @generated from field: bytes high_security_login_sig_pub_key = 2;\n         */\n        this.highSecurityLoginSigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_identity_sig_pub_key = 3;\n         */\n        this.highSecurityIdentitySigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key = 4;\n         */\n        this.highSecurityVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key_signature = 5;\n         */\n        this.highSecurityVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key = 6;\n         */\n        this.storableSigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key_signature = 7;\n         */\n        this.storableSigPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key = 8;\n         */\n        this.storableVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key_signature = 9;\n         */\n        this.storableVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: string secret_info = 10;\n         */\n        this.secretInfo = \"\";\n        /**\n         * @generated from field: bytes secret_salt = 11;\n         */\n        this.secretSalt = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AuthenticatorData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AuthenticatorData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AuthenticatorData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AuthenticatorData, a, b);\n    }\n}\nAuthenticatorData.runtime = proto3;\nAuthenticatorData.typeName = \"domain.AuthenticatorData\";\nAuthenticatorData.fields = proto3.util.newFieldList(() => [\n    { no: 12, name: \"authenticator_type\", kind: \"enum\", T: proto3.getEnumType(AuthenticatorType) },\n    { no: 2, name: \"high_security_login_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"high_security_identity_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"high_security_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 5, name: \"high_security_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 6, name: \"storable_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 7, name: \"storable_sig_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 8, name: \"storable_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 9, name: \"storable_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 10, name: \"secret_info\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"secret_salt\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 13, name: \"webauthn\", kind: \"message\", T: AuthenticatorData_Webauthn },\n]);\n/**\n * @generated from message domain.AuthenticatorData.Webauthn\n */\nexport class AuthenticatorData_Webauthn extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string webauthn_id = 1;\n         */\n        this.webauthnId = \"\";\n        /**\n         * @generated from field: bytes prf_salt = 2;\n         */\n        this.prfSalt = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AuthenticatorData_Webauthn().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AuthenticatorData_Webauthn().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AuthenticatorData_Webauthn().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AuthenticatorData_Webauthn, a, b);\n    }\n}\nAuthenticatorData_Webauthn.runtime = proto3;\nAuthenticatorData_Webauthn.typeName = \"domain.AuthenticatorData.Webauthn\";\nAuthenticatorData_Webauthn.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"webauthn_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"prf_salt\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.AuthenticatorCreationData\n */\nexport class AuthenticatorCreationData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.ProfileAuthenticatorLock profile_locks = 2;\n         */\n        this.profileLocks = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AuthenticatorCreationData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AuthenticatorCreationData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AuthenticatorCreationData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AuthenticatorCreationData, a, b);\n    }\n}\nAuthenticatorCreationData.runtime = proto3;\nAuthenticatorCreationData.typeName = \"domain.AuthenticatorCreationData\";\nAuthenticatorCreationData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"data\", kind: \"message\", T: AuthenticatorData },\n    { no: 2, name: \"profile_locks\", kind: \"message\", T: ProfileAuthenticatorLock, repeated: true },\n    { no: 3, name: \"webauthn\", kind: \"message\", T: AuthenticatorCreationData_WebauthnAuthenticatorCreationData },\n]);\n/**\n * @generated from message domain.AuthenticatorCreationData.WebauthnAuthenticatorCreationData\n */\nexport class AuthenticatorCreationData_WebauthnAuthenticatorCreationData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string webauthn_id = 1;\n         */\n        this.webauthnId = \"\";\n        /**\n         * @generated from field: bytes prf_salt = 2;\n         */\n        this.prfSalt = new Uint8Array(0);\n        /**\n         * @generated from field: domain.WebauthnPrfSupportStatus prf_support_status = 3;\n         */\n        this.prfSupportStatus = WebauthnPrfSupportStatus.UNKNOWN;\n        /**\n         * if register_request_id and response_json are set, a new credential is created. otherwise,\n         * webauthn_id must point to an existing webauthn_credential.\n         *\n         * @generated from field: string register_request_id = 4;\n         */\n        this.registerRequestId = \"\";\n        /**\n         * @generated from field: string response_json = 5;\n         */\n        this.responseJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AuthenticatorCreationData_WebauthnAuthenticatorCreationData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AuthenticatorCreationData_WebauthnAuthenticatorCreationData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AuthenticatorCreationData_WebauthnAuthenticatorCreationData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AuthenticatorCreationData_WebauthnAuthenticatorCreationData, a, b);\n    }\n}\nAuthenticatorCreationData_WebauthnAuthenticatorCreationData.runtime = proto3;\nAuthenticatorCreationData_WebauthnAuthenticatorCreationData.typeName = \"domain.AuthenticatorCreationData.WebauthnAuthenticatorCreationData\";\nAuthenticatorCreationData_WebauthnAuthenticatorCreationData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"webauthn_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"prf_salt\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"prf_support_status\", kind: \"enum\", T: proto3.getEnumType(WebauthnPrfSupportStatus) },\n    { no: 4, name: \"register_request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"response_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.Authenticator\n */\nexport class Authenticator extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Authenticator().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Authenticator().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Authenticator().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Authenticator, a, b);\n    }\n}\nAuthenticator.runtime = proto3;\nAuthenticator.typeName = \"domain.Authenticator\";\nAuthenticator.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"data\", kind: \"message\", T: AuthenticatorData },\n]);\n/**\n * @generated from message domain.AuthenticatorBlock\n */\nexport class AuthenticatorBlock extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes blob = 1;\n         */\n        this.blob = new Uint8Array(0);\n        /**\n         * @generated from field: bytes signature = 2;\n         */\n        this.signature = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AuthenticatorBlock().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AuthenticatorBlock().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AuthenticatorBlock().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AuthenticatorBlock, a, b);\n    }\n}\nAuthenticatorBlock.runtime = proto3;\nAuthenticatorBlock.typeName = \"domain.AuthenticatorBlock\";\nAuthenticatorBlock.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"blob\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 2, name: \"signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n//# sourceMappingURL=authenticator_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file license_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.LicenseType\n */\nexport var LicenseType;\n(function (LicenseType) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: LICENSE_TYPE_UNKNOWN = 0;\n     */\n    LicenseType[LicenseType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: LICENSE_TYPE_NONE = 1;\n     */\n    LicenseType[LicenseType[\"NONE\"] = 1] = \"NONE\";\n    /**\n     * @generated from enum value: LICENSE_TYPE_COUPON = 2;\n     */\n    LicenseType[LicenseType[\"COUPON\"] = 2] = \"COUPON\";\n    /**\n     * @generated from enum value: LICENSE_TYPE_PADDLE = 3;\n     */\n    LicenseType[LicenseType[\"PADDLE\"] = 3] = \"PADDLE\";\n    /**\n     * @generated from enum value: LICENSE_TYPE_NONPROFIT = 4;\n     */\n    LicenseType[LicenseType[\"NONPROFIT\"] = 4] = \"NONPROFIT\";\n    /**\n     * @generated from enum value: LICENSE_TYPE_CONTRACT = 5;\n     */\n    LicenseType[LicenseType[\"CONTRACT\"] = 5] = \"CONTRACT\";\n    /**\n     * @generated from enum value: LICENSE_TYPE_CUSTOM = 6;\n     */\n    LicenseType[LicenseType[\"CUSTOM\"] = 6] = \"CUSTOM\";\n    /**\n     * @generated from enum value: LICENSE_TYPE_MSP = 7;\n     */\n    LicenseType[LicenseType[\"MSP\"] = 7] = \"MSP\";\n    /**\n     * @generated from enum value: LICENSE_TYPE_EXAMPLE = 8;\n     */\n    LicenseType[LicenseType[\"EXAMPLE\"] = 8] = \"EXAMPLE\";\n})(LicenseType || (LicenseType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(LicenseType)\nproto3.util.setEnumType(LicenseType, \"domain.LicenseType\", [\n    { no: 0, name: \"LICENSE_TYPE_UNKNOWN\" },\n    { no: 1, name: \"LICENSE_TYPE_NONE\" },\n    { no: 2, name: \"LICENSE_TYPE_COUPON\" },\n    { no: 3, name: \"LICENSE_TYPE_PADDLE\" },\n    { no: 4, name: \"LICENSE_TYPE_NONPROFIT\" },\n    { no: 5, name: \"LICENSE_TYPE_CONTRACT\" },\n    { no: 6, name: \"LICENSE_TYPE_CUSTOM\" },\n    { no: 7, name: \"LICENSE_TYPE_MSP\" },\n    { no: 8, name: \"LICENSE_TYPE_EXAMPLE\" },\n]);\n//# sourceMappingURL=license_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file primary_login_device.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.PrimaryLoginDevice\n */\nexport var PrimaryLoginDevice;\n(function (PrimaryLoginDevice) {\n    /**\n     * @generated from enum value: PRIMARY_LOGIN_DEVICE_UNKNOWN = 0;\n     */\n    PrimaryLoginDevice[PrimaryLoginDevice[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: PRIMARY_LOGIN_DEVICE_NONE = 1;\n     */\n    PrimaryLoginDevice[PrimaryLoginDevice[\"NONE\"] = 1] = \"NONE\";\n    /**\n     * @generated from enum value: PRIMARY_LOGIN_DEVICE_PHONE = 2;\n     */\n    PrimaryLoginDevice[PrimaryLoginDevice[\"PHONE\"] = 2] = \"PHONE\";\n    /**\n     * @generated from enum value: PRIMARY_LOGIN_DEVICE_SECURITY_KEY = 3;\n     */\n    PrimaryLoginDevice[PrimaryLoginDevice[\"SECURITY_KEY\"] = 3] = \"SECURITY_KEY\";\n    /**\n     * @generated from enum value: PRIMARY_LOGIN_DEVICE_SERVICE = 4;\n     */\n    PrimaryLoginDevice[PrimaryLoginDevice[\"SERVICE\"] = 4] = \"SERVICE\";\n})(PrimaryLoginDevice || (PrimaryLoginDevice = {}));\n// Retrieve enum metadata with: proto3.getEnumType(PrimaryLoginDevice)\nproto3.util.setEnumType(PrimaryLoginDevice, \"domain.PrimaryLoginDevice\", [\n    { no: 0, name: \"PRIMARY_LOGIN_DEVICE_UNKNOWN\" },\n    { no: 1, name: \"PRIMARY_LOGIN_DEVICE_NONE\" },\n    { no: 2, name: \"PRIMARY_LOGIN_DEVICE_PHONE\" },\n    { no: 3, name: \"PRIMARY_LOGIN_DEVICE_SECURITY_KEY\" },\n    { no: 4, name: \"PRIMARY_LOGIN_DEVICE_SERVICE\" },\n]);\n//# sourceMappingURL=primary_login_device_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file profile_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.ProfileType\n */\nexport var ProfileType;\n(function (ProfileType) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: PROFILE_TYPE_UNKNOWN = 0;\n     */\n    ProfileType[ProfileType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: PROFILE_TYPE_PREFERENCES = 1;\n     */\n    ProfileType[ProfileType[\"PREFERENCES\"] = 1] = \"PREFERENCES\";\n    /**\n     * @generated from enum value: PROFILE_TYPE_INBOX = 2;\n     */\n    ProfileType[ProfileType[\"INBOX\"] = 2] = \"INBOX\";\n    /**\n     * @generated from enum value: PROFILE_TYPE_PRIVATE = 3;\n     */\n    ProfileType[ProfileType[\"PRIVATE\"] = 3] = \"PRIVATE\";\n    /**\n     * @generated from enum value: PROFILE_TYPE_ORGANIZATION = 4;\n     */\n    ProfileType[ProfileType[\"ORGANIZATION\"] = 4] = \"ORGANIZATION\";\n    /**\n     * @generated from enum value: PROFILE_TYPE_ORGANIZATION_ADMIN = 5;\n     */\n    ProfileType[ProfileType[\"ORGANIZATION_ADMIN\"] = 5] = \"ORGANIZATION_ADMIN\";\n    /**\n     * @generated from enum value: PROFILE_TYPE_ORGANIZATION_SERVICE = 6;\n     */\n    ProfileType[ProfileType[\"ORGANIZATION_SERVICE\"] = 6] = \"ORGANIZATION_SERVICE\";\n})(ProfileType || (ProfileType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(ProfileType)\nproto3.util.setEnumType(ProfileType, \"domain.ProfileType\", [\n    { no: 0, name: \"PROFILE_TYPE_UNKNOWN\" },\n    { no: 1, name: \"PROFILE_TYPE_PREFERENCES\" },\n    { no: 2, name: \"PROFILE_TYPE_INBOX\" },\n    { no: 3, name: \"PROFILE_TYPE_PRIVATE\" },\n    { no: 4, name: \"PROFILE_TYPE_ORGANIZATION\" },\n    { no: 5, name: \"PROFILE_TYPE_ORGANIZATION_ADMIN\" },\n    { no: 6, name: \"PROFILE_TYPE_ORGANIZATION_SERVICE\" },\n]);\n//# sourceMappingURL=profile_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file maintenance_task.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * * This is an enum of maintenance tasks, which map to tasks perfomed by client-core. They are\n * included in SyncUpdate as an allow list, serving as a \"killswitch\" for disabling outdated or\n * rogue maintenance tasks, independently of the release cycle.\n *\n * The two common expected changes are:\n * 1) Deprecating a task altogether. To do this, comment it out and mark the field number as\n * reserved.\n * 2) Creating a new \"version\" of a task, while disabling the previous. To do this, increase the\n * field number, mark the old field number as reserved, and increase the VX number in the name.\n *\n * @generated from enum domain.MaintenanceTask\n */\nexport var MaintenanceTask;\n(function (MaintenanceTask) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: MAINTENANCE_TASK_UNKNOWN = 0;\n     */\n    MaintenanceTask[MaintenanceTask[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: MAINTENANCE_TASK_TEAM_SYNC_ORGANIZATION_MEMBERS_V2 = 9;\n     */\n    MaintenanceTask[MaintenanceTask[\"TEAM_SYNC_ORGANIZATION_MEMBERS_V2\"] = 9] = \"TEAM_SYNC_ORGANIZATION_MEMBERS_V2\";\n    /**\n     * @generated from enum value: MAINTENANCE_TASK_ORGANIZATION_PRELIMINARY_PROFILES_V3 = 12;\n     */\n    MaintenanceTask[MaintenanceTask[\"ORGANIZATION_PRELIMINARY_PROFILES_V3\"] = 12] = \"ORGANIZATION_PRELIMINARY_PROFILES_V3\";\n    /**\n     * @generated from enum value: MAINTENANCE_TASK_ORGANIZATION_MIGRATE_TO_ADMIN_PROFILE_V2 = 15;\n     */\n    MaintenanceTask[MaintenanceTask[\"ORGANIZATION_MIGRATE_TO_ADMIN_PROFILE_V2\"] = 15] = \"ORGANIZATION_MIGRATE_TO_ADMIN_PROFILE_V2\";\n    /**\n     * @generated from enum value: MAINTENANCE_TASK_PROCESS_VAULT_MESSAGES_V2 = 11;\n     */\n    MaintenanceTask[MaintenanceTask[\"PROCESS_VAULT_MESSAGES_V2\"] = 11] = \"PROCESS_VAULT_MESSAGES_V2\";\n    /**\n     * @generated from enum value: MAINTENANCE_TASK_MIGRATE_TO_PROFILES_V1 = 7;\n     */\n    MaintenanceTask[MaintenanceTask[\"MIGRATE_TO_PROFILES_V1\"] = 7] = \"MIGRATE_TO_PROFILES_V1\";\n    /**\n     * @generated from enum value: MAINTENANCE_TASK_ENABLE_PRF_OPPORTUNISTICALLY_V1 = 14;\n     */\n    MaintenanceTask[MaintenanceTask[\"ENABLE_PRF_OPPORTUNISTICALLY_V1\"] = 14] = \"ENABLE_PRF_OPPORTUNISTICALLY_V1\";\n})(MaintenanceTask || (MaintenanceTask = {}));\n// Retrieve enum metadata with: proto3.getEnumType(MaintenanceTask)\nproto3.util.setEnumType(MaintenanceTask, \"domain.MaintenanceTask\", [\n    { no: 0, name: \"MAINTENANCE_TASK_UNKNOWN\" },\n    { no: 9, name: \"MAINTENANCE_TASK_TEAM_SYNC_ORGANIZATION_MEMBERS_V2\" },\n    { no: 12, name: \"MAINTENANCE_TASK_ORGANIZATION_PRELIMINARY_PROFILES_V3\" },\n    { no: 15, name: \"MAINTENANCE_TASK_ORGANIZATION_MIGRATE_TO_ADMIN_PROFILE_V2\" },\n    { no: 11, name: \"MAINTENANCE_TASK_PROCESS_VAULT_MESSAGES_V2\" },\n    { no: 7, name: \"MAINTENANCE_TASK_MIGRATE_TO_PROFILES_V1\" },\n    { no: 14, name: \"MAINTENANCE_TASK_ENABLE_PRF_OPPORTUNISTICALLY_V1\" },\n]);\n//# sourceMappingURL=maintenance_task_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file sync_update.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, protoInt64, Timestamp } from \"@bufbuild/protobuf\";\nimport { Achievement } from \"./achievements_pb.js\";\nimport { SessionType } from \"./session_type_pb.js\";\nimport { UnlockTimeLimit } from \"./unlock_time_limit_pb.js\";\nimport { VaultType } from \"./vault_type_pb.js\";\nimport { AuthenticatorType } from \"./authenticator_type_pb.js\";\nimport { CredentialType } from \"./credential_type_pb.js\";\nimport { WebauthnPrfSupportStatus } from \"./webauthn_prf_support_status_pb.js\";\nimport { OrganizationType } from \"./organization_type_pb.js\";\nimport { Authenticator } from \"./authenticator_pb.js\";\nimport { LicenseType } from \"./license_type_pb.js\";\nimport { PrimaryLoginDevice } from \"./primary_login_device_pb.js\";\nimport { ProfileType } from \"./profile_type_pb.js\";\nimport { ProfileAuthenticatorLock, ProfileProfileLock } from \"./locks_pb.js\";\nimport { MaintenanceTask } from \"./maintenance_task_pb.js\";\n/**\n * @generated from enum domain.SyncUpdateField\n */\nexport var SyncUpdateField;\n(function (SyncUpdateField) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: SU_UNKNOWN = 0;\n     */\n    SyncUpdateField[SyncUpdateField[\"SU_UNKNOWN\"] = 0] = \"SU_UNKNOWN\";\n    /**\n     * @generated from enum value: SU_USER = 1;\n     */\n    SyncUpdateField[SyncUpdateField[\"SU_USER\"] = 1] = \"SU_USER\";\n    /**\n     * @generated from enum value: SU_SESSIONS = 2;\n     */\n    SyncUpdateField[SyncUpdateField[\"SU_SESSIONS\"] = 2] = \"SU_SESSIONS\";\n    /**\n     * @generated from enum value: SU_VAULTS = 3;\n     */\n    SyncUpdateField[SyncUpdateField[\"SU_VAULTS\"] = 3] = \"SU_VAULTS\";\n    /**\n     * @generated from enum value: SU_ACHIEVEMENTS = 4;\n     */\n    SyncUpdateField[SyncUpdateField[\"SU_ACHIEVEMENTS\"] = 4] = \"SU_ACHIEVEMENTS\";\n    /**\n     * @generated from enum value: SU_CHANNELS = 5;\n     */\n    SyncUpdateField[SyncUpdateField[\"SU_CHANNELS\"] = 5] = \"SU_CHANNELS\";\n    /**\n     * @generated from enum value: SU_ORGANIZATIONS = 6;\n     */\n    SyncUpdateField[SyncUpdateField[\"SU_ORGANIZATIONS\"] = 6] = \"SU_ORGANIZATIONS\";\n    /**\n     * @generated from enum value: SU_RELATED_PROFILES = 7;\n     */\n    SyncUpdateField[SyncUpdateField[\"SU_RELATED_PROFILES\"] = 7] = \"SU_RELATED_PROFILES\";\n    /**\n     * also includes preliminary profiles\n     *\n     * @generated from enum value: SU_PROFILES = 8;\n     */\n    SyncUpdateField[SyncUpdateField[\"SU_PROFILES\"] = 8] = \"SU_PROFILES\";\n    /**\n     * @generated from enum value: SU_MAINTENANCE_SETTINGS = 9;\n     */\n    SyncUpdateField[SyncUpdateField[\"SU_MAINTENANCE_SETTINGS\"] = 9] = \"SU_MAINTENANCE_SETTINGS\";\n})(SyncUpdateField || (SyncUpdateField = {}));\n// Retrieve enum metadata with: proto3.getEnumType(SyncUpdateField)\nproto3.util.setEnumType(SyncUpdateField, \"domain.SyncUpdateField\", [\n    { no: 0, name: \"SU_UNKNOWN\" },\n    { no: 1, name: \"SU_USER\" },\n    { no: 2, name: \"SU_SESSIONS\" },\n    { no: 3, name: \"SU_VAULTS\" },\n    { no: 4, name: \"SU_ACHIEVEMENTS\" },\n    { no: 5, name: \"SU_CHANNELS\" },\n    { no: 6, name: \"SU_ORGANIZATIONS\" },\n    { no: 7, name: \"SU_RELATED_PROFILES\" },\n    { no: 8, name: \"SU_PROFILES\" },\n    { no: 9, name: \"SU_MAINTENANCE_SETTINGS\" },\n]);\n/**\n * @generated from enum domain.SubscriptionError\n */\nexport var SubscriptionError;\n(function (SubscriptionError) {\n    /**\n     * @generated from enum value: SUBSCRIPTION_ERROR_OK = 0;\n     */\n    SubscriptionError[SubscriptionError[\"OK\"] = 0] = \"OK\";\n    /**\n     * @generated from enum value: SUBSCRIPTION_ERROR_TRIAL_EXCEEDED = 1;\n     */\n    SubscriptionError[SubscriptionError[\"TRIAL_EXCEEDED\"] = 1] = \"TRIAL_EXCEEDED\";\n    /**\n     * @generated from enum value: SUBSCRIPTION_ERROR_PADDLE_PAUSED = 2;\n     */\n    SubscriptionError[SubscriptionError[\"PADDLE_PAUSED\"] = 2] = \"PADDLE_PAUSED\";\n})(SubscriptionError || (SubscriptionError = {}));\n// Retrieve enum metadata with: proto3.getEnumType(SubscriptionError)\nproto3.util.setEnumType(SubscriptionError, \"domain.SubscriptionError\", [\n    { no: 0, name: \"SUBSCRIPTION_ERROR_OK\" },\n    { no: 1, name: \"SUBSCRIPTION_ERROR_TRIAL_EXCEEDED\" },\n    { no: 2, name: \"SUBSCRIPTION_ERROR_PADDLE_PAUSED\" },\n]);\n/**\n * The SyncResponse contains information used by client-core to bring itself up\n * to date with backend state. It can be obtained via polling (Sync), or\n * streaming (StreamingSync).\n *\n * The SyncResponse contains four components: sessions, vaults, open login\n * channels, and the session unlock state of the specific session that made the\n * request.\n *\n * @generated from message domain.SyncUpdate\n */\nexport class SyncUpdate extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: int64 sync_version = 15;\n         */\n        this.syncVersion = protoInt64.zero;\n        /**\n         * @generated from field: bool token_refresh_needed = 21;\n         */\n        this.tokenRefreshNeeded = false;\n        /**\n         * @generated from field: bool client_outdated = 22;\n         */\n        this.clientOutdated = false;\n        /**\n         * list of populated optional fields, see below.\n         *\n         * @generated from field: repeated domain.SyncUpdateField updated_fields = 11;\n         */\n        this.updatedFields = [];\n        /**\n         * @generated from field: repeated domain.SyncUpdate.Session sessions = 1;\n         */\n        this.sessions = [];\n        /**\n         * @generated from field: repeated domain.SyncUpdate.Vault vaults = 2;\n         */\n        this.vaults = [];\n        /**\n         * @generated from field: repeated domain.Achievement achievements = 6;\n         */\n        this.achievements = [];\n        /**\n         * @generated from field: repeated domain.SyncUpdate.Channel channels = 3;\n         */\n        this.channels = [];\n        /**\n         * @generated from field: repeated domain.SyncUpdate.Organization organizations = 13;\n         */\n        this.organizations = [];\n        /**\n         * @generated from field: repeated domain.SyncUpdate.RelatedProfile related_profiles = 18;\n         */\n        this.relatedProfiles = [];\n        /**\n         * @generated from field: repeated domain.SyncUpdate.Profile profiles = 17;\n         */\n        this.profiles = [];\n        /**\n         * @generated from field: repeated domain.SyncUpdate.PreliminaryProfile preliminary_profiles = 20;\n         */\n        this.preliminaryProfiles = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate, a, b);\n    }\n}\nSyncUpdate.runtime = proto3;\nSyncUpdate.typeName = \"domain.SyncUpdate\";\nSyncUpdate.fields = proto3.util.newFieldList(() => [\n    { no: 7, name: \"server_time\", kind: \"message\", T: Timestamp },\n    { no: 15, name: \"sync_version\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 21, name: \"token_refresh_needed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 22, name: \"client_outdated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 11, name: \"updated_fields\", kind: \"enum\", T: proto3.getEnumType(SyncUpdateField), repeated: true },\n    { no: 4, name: \"session_unlock\", kind: \"message\", T: SyncUpdate_SessionUnlock },\n    { no: 8, name: \"user\", kind: \"message\", T: SyncUpdate_User },\n    { no: 1, name: \"sessions\", kind: \"message\", T: SyncUpdate_Session, repeated: true },\n    { no: 2, name: \"vaults\", kind: \"message\", T: SyncUpdate_Vault, repeated: true },\n    { no: 6, name: \"achievements\", kind: \"enum\", T: proto3.getEnumType(Achievement), repeated: true },\n    { no: 3, name: \"channels\", kind: \"message\", T: SyncUpdate_Channel, repeated: true },\n    { no: 13, name: \"organizations\", kind: \"message\", T: SyncUpdate_Organization, repeated: true },\n    { no: 18, name: \"related_profiles\", kind: \"message\", T: SyncUpdate_RelatedProfile, repeated: true },\n    { no: 17, name: \"profiles\", kind: \"message\", T: SyncUpdate_Profile, repeated: true },\n    { no: 19, name: \"maintenance_settings\", kind: \"message\", T: SyncUpdate_MaintenanceSettings },\n    { no: 20, name: \"preliminary_profiles\", kind: \"message\", T: SyncUpdate_PreliminaryProfile, repeated: true },\n]);\n/**\n * @generated from message domain.SyncUpdate.Session\n */\nexport class SyncUpdate_Session extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: domain.SessionType session_type = 9;\n         */\n        this.sessionType = SessionType.UNKNOWN;\n        /**\n         * configurable variables via SessionService.Update\n         *\n         * @generated from field: string client_settings = 8;\n         */\n        this.clientSettings = \"\";\n        /**\n         * if this is empty, all profiles are enabled for this session\n         * there may be ids in this list that no longer exist\n         *\n         * @generated from field: repeated string enabled_profile_ids = 10;\n         */\n        this.enabledProfileIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_Session().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_Session().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_Session().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_Session, a, b);\n    }\n}\nSyncUpdate_Session.runtime = proto3;\nSyncUpdate_Session.typeName = \"domain.SyncUpdate.Session\";\nSyncUpdate_Session.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"last_used_at\", kind: \"message\", T: Timestamp },\n    { no: 4, name: \"unlocked_at\", kind: \"message\", T: Timestamp },\n    { no: 5, name: \"unlocked_until\", kind: \"message\", T: Timestamp },\n    { no: 6, name: \"unlock_requested_at\", kind: \"message\", T: Timestamp },\n    { no: 12, name: \"unlock_extend_at\", kind: \"message\", T: Timestamp },\n    { no: 7, name: \"created_at\", kind: \"message\", T: Timestamp },\n    { no: 9, name: \"session_type\", kind: \"enum\", T: proto3.getEnumType(SessionType) },\n    { no: 8, name: \"client_settings\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"enabled_profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 11, name: \"unlock_time_limit\", kind: \"message\", T: UnlockTimeLimit },\n]);\n/**\n * @generated from message domain.SyncUpdate.Vault\n */\nexport class SyncUpdate_Vault extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string commit_id = 2;\n         */\n        this.commitId = \"\";\n        /**\n         * @generated from field: string generation_id = 3;\n         */\n        this.generationId = \"\";\n        /**\n         * @generated from field: string associated_vault_id = 6;\n         */\n        this.associatedVaultId = \"\";\n        /**\n         * @generated from field: string organization_id = 8;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: repeated domain.SyncUpdate.Vault.User users = 4;\n         */\n        this.users = [];\n        /**\n         * @generated from field: repeated domain.SyncUpdate.Vault.Profile profiles = 11;\n         */\n        this.profiles = [];\n        /**\n         * @generated from field: domain.VaultType vault_type = 5;\n         */\n        this.vaultType = VaultType.UNKNOWN;\n        /**\n         * @generated from field: bool dirty = 19;\n         */\n        this.dirty = false;\n        /**\n         * @generated from field: string profile_key_generation_id = 12;\n         */\n        this.profileKeyGenerationId = \"\";\n        /**\n         * @generated from field: string admin_profile_key_generation_id = 18;\n         */\n        this.adminProfileKeyGenerationId = \"\";\n        /**\n         * nil if vault has no message queue\n         *\n         * @generated from field: bytes message_public_key = 15;\n         */\n        this.messagePublicKey = new Uint8Array(0);\n        /**\n         * @generated from field: bool has_messages_queued = 16;\n         */\n        this.hasMessagesQueued = false;\n        /**\n         * slug is set for VAULT_TYPE_INBOX vaults only\n         *\n         * @generated from field: string inbox_slug = 17;\n         */\n        this.inboxSlug = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_Vault().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_Vault().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_Vault().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_Vault, a, b);\n    }\n}\nSyncUpdate_Vault.runtime = proto3;\nSyncUpdate_Vault.typeName = \"domain.SyncUpdate.Vault\";\nSyncUpdate_Vault.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"commit_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"associated_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"users\", kind: \"message\", T: SyncUpdate_Vault_User, repeated: true },\n    { no: 11, name: \"profiles\", kind: \"message\", T: SyncUpdate_Vault_Profile, repeated: true },\n    { no: 5, name: \"vault_type\", kind: \"enum\", T: proto3.getEnumType(VaultType) },\n    { no: 19, name: \"dirty\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 12, name: \"profile_key_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 18, name: \"admin_profile_key_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 15, name: \"message_public_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 16, name: \"has_messages_queued\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 17, name: \"inbox_slug\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.Vault.User\n */\nexport class SyncUpdate_Vault_User extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_Vault_User().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_Vault_User().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_Vault_User().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_Vault_User, a, b);\n    }\n}\nSyncUpdate_Vault_User.runtime = proto3;\nSyncUpdate_Vault_User.typeName = \"domain.SyncUpdate.Vault.User\";\nSyncUpdate_Vault_User.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.Vault.Profile\n */\nexport class SyncUpdate_Vault_Profile extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_Vault_Profile().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_Vault_Profile().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_Vault_Profile().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_Vault_Profile, a, b);\n    }\n}\nSyncUpdate_Vault_Profile.runtime = proto3;\nSyncUpdate_Vault_Profile.typeName = \"domain.SyncUpdate.Vault.Profile\";\nSyncUpdate_Vault_Profile.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.Channel\n */\nexport class SyncUpdate_Channel extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string channel_type = 2;\n         */\n        this.channelType = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_Channel().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_Channel().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_Channel().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_Channel, a, b);\n    }\n}\nSyncUpdate_Channel.runtime = proto3;\nSyncUpdate_Channel.typeName = \"domain.SyncUpdate.Channel\";\nSyncUpdate_Channel.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"channel_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.SessionUnlock\n */\nexport class SyncUpdate_SessionUnlock extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes encrypted_secret = 1;\n         */\n        this.encryptedSecret = new Uint8Array(0);\n        /**\n         * @generated from field: string authenticator_id = 2;\n         */\n        this.authenticatorId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_SessionUnlock().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_SessionUnlock().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_SessionUnlock().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_SessionUnlock, a, b);\n    }\n}\nSyncUpdate_SessionUnlock.runtime = proto3;\nSyncUpdate_SessionUnlock.typeName = \"domain.SyncUpdate.SessionUnlock\";\nSyncUpdate_SessionUnlock.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"encrypted_secret\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 2, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.Authenticator\n */\nexport class SyncUpdate_Authenticator extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: domain.AuthenticatorType authenticator_type = 13;\n         */\n        this.authenticatorType = AuthenticatorType.UNKNOWN;\n        /**\n         * @generated from field: bytes high_security_login_sig_pub_key = 3;\n         */\n        this.highSecurityLoginSigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_identity_sig_pub_key = 4;\n         */\n        this.highSecurityIdentitySigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key = 5;\n         */\n        this.highSecurityVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key_signature = 6;\n         */\n        this.highSecurityVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key = 7;\n         */\n        this.storableSigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key_signature = 8;\n         */\n        this.storableSigPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key = 9;\n         */\n        this.storableVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key_signature = 10;\n         */\n        this.storableVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: string secret_info = 11;\n         */\n        this.secretInfo = \"\";\n        /**\n         * @generated from field: bytes secret_salt = 12;\n         */\n        this.secretSalt = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_Authenticator().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_Authenticator().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_Authenticator().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_Authenticator, a, b);\n    }\n}\nSyncUpdate_Authenticator.runtime = proto3;\nSyncUpdate_Authenticator.typeName = \"domain.SyncUpdate.Authenticator\";\nSyncUpdate_Authenticator.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 13, name: \"authenticator_type\", kind: \"enum\", T: proto3.getEnumType(AuthenticatorType) },\n    { no: 3, name: \"high_security_login_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"high_security_identity_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 5, name: \"high_security_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 6, name: \"high_security_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 7, name: \"storable_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 8, name: \"storable_sig_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 9, name: \"storable_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 10, name: \"storable_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 11, name: \"secret_info\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 12, name: \"secret_salt\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.User\n */\nexport class SyncUpdate_User extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string server_side_settings = 3;\n         */\n        this.serverSideSettings = \"\";\n        /**\n         * @generated from field: bytes authenticator_block_hash = 4;\n         */\n        this.authenticatorBlockHash = new Uint8Array(0);\n        /**\n         * @generated from field: string preferred_locale = 6;\n         */\n        this.preferredLocale = \"\";\n        /**\n         * Deprecated, remove once all users migrated to profiles\n         *\n         * @generated from field: repeated domain.SyncUpdate.User.Email emails = 7;\n         */\n        this.emails = [];\n        /**\n         * @generated from field: string preliminary_email = 8;\n         */\n        this.preliminaryEmail = \"\";\n        /**\n         * @generated from field: repeated domain.SyncUpdate.User.WebauthnCredential webauthn_credentials = 9;\n         */\n        this.webauthnCredentials = [];\n        /**\n         * @generated from field: string user_client_settings = 10;\n         */\n        this.userClientSettings = \"\";\n        /**\n         * @generated from field: repeated string open_user_confirmation_ids = 11;\n         */\n        this.openUserConfirmationIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_User().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_User().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_User().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_User, a, b);\n    }\n}\nSyncUpdate_User.runtime = proto3;\nSyncUpdate_User.typeName = \"domain.SyncUpdate.User\";\nSyncUpdate_User.fields = proto3.util.newFieldList(() => [\n    { no: 3, name: \"server_side_settings\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"authenticator_block_hash\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 6, name: \"preferred_locale\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"emails\", kind: \"message\", T: SyncUpdate_User_Email, repeated: true },\n    { no: 8, name: \"preliminary_email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"webauthn_credentials\", kind: \"message\", T: SyncUpdate_User_WebauthnCredential, repeated: true },\n    { no: 10, name: \"user_client_settings\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"open_user_confirmation_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.SyncUpdate.User.Email\n */\nexport class SyncUpdate_User_Email extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: bool verification_pending = 2;\n         */\n        this.verificationPending = false;\n        /**\n         * @generated from field: bool primary = 3;\n         */\n        this.primary = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_User_Email().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_User_Email().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_User_Email().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_User_Email, a, b);\n    }\n}\nSyncUpdate_User_Email.runtime = proto3;\nSyncUpdate_User_Email.typeName = \"domain.SyncUpdate.User.Email\";\nSyncUpdate_User_Email.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"verification_pending\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"primary\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.User.WebauthnCredential\n */\nexport class SyncUpdate_User_WebauthnCredential extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string webauthn_id = 7;\n         */\n        this.webauthnId = \"\";\n        /**\n         * @generated from field: string aaguid = 2;\n         */\n        this.aaguid = \"\";\n        /**\n         * @generated from field: domain.CredentialType credential_type = 5;\n         */\n        this.credentialType = CredentialType.UNKNOWN;\n        /**\n         * @generated from field: string session_id = 6;\n         */\n        this.sessionId = \"\";\n        /**\n         * @generated from field: domain.WebauthnPrfSupportStatus prf_support_status = 8;\n         */\n        this.prfSupportStatus = WebauthnPrfSupportStatus.UNKNOWN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_User_WebauthnCredential().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_User_WebauthnCredential().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_User_WebauthnCredential().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_User_WebauthnCredential, a, b);\n    }\n}\nSyncUpdate_User_WebauthnCredential.runtime = proto3;\nSyncUpdate_User_WebauthnCredential.typeName = \"domain.SyncUpdate.User.WebauthnCredential\";\nSyncUpdate_User_WebauthnCredential.fields = proto3.util.newFieldList(() => [\n    { no: 7, name: \"webauthn_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"aaguid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"created_at\", kind: \"message\", T: Timestamp },\n    { no: 4, name: \"last_used_at\", kind: \"message\", T: Timestamp },\n    { no: 5, name: \"credential_type\", kind: \"enum\", T: proto3.getEnumType(CredentialType) },\n    { no: 6, name: \"session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"prf_support_status\", kind: \"enum\", T: proto3.getEnumType(WebauthnPrfSupportStatus) },\n]);\n/**\n * @generated from message domain.SyncUpdate.Organization\n */\nexport class SyncUpdate_Organization extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: domain.OrganizationType organization_type = 20;\n         */\n        this.organizationType = OrganizationType.UNKNOWN;\n        /**\n         * @generated from field: repeated domain.SyncUpdate.OrganizationProfile profiles = 10;\n         */\n        this.profiles = [];\n        /**\n         * @generated from field: string name = 3;\n         */\n        this.name = \"\";\n        /**\n         * @generated from field: string icon = 4;\n         */\n        this.icon = \"\";\n        /**\n         * @generated from field: bool restrict_create_team = 12;\n         */\n        this.restrictCreateTeam = false;\n        /**\n         * @generated from field: bool restrict_personal_logins = 19;\n         */\n        this.restrictPersonalLogins = false;\n        /**\n         * @generated from field: bool auditlog_enable = 14;\n         */\n        this.auditlogEnable = false;\n        /**\n         * @generated from field: bool child_organization_management_enable = 21;\n         */\n        this.childOrganizationManagementEnable = false;\n        /**\n         * @generated from field: string password_policy = 23;\n         */\n        this.passwordPolicy = \"\";\n        /**\n         * @generated from field: bool is_preliminary = 13;\n         */\n        this.isPreliminary = false;\n        /**\n         * @generated from field: bool is_admin = 6;\n         */\n        this.isAdmin = false;\n        /**\n         * @generated from field: bool is_manager = 24;\n         */\n        this.isManager = false;\n        /**\n         * @generated from field: string super_user_id = 7;\n         */\n        this.superUserId = \"\";\n        /**\n         * @generated from field: string admin_profile_id = 16;\n         */\n        this.adminProfileId = \"\";\n        /**\n         * @generated from field: domain.SubscriptionError subscription_error = 11;\n         */\n        this.subscriptionError = SubscriptionError.OK;\n        /**\n         * @generated from field: string verified_domain = 17;\n         */\n        this.verifiedDomain = \"\";\n        /**\n         * @generated from field: string client_settings = 25;\n         */\n        this.clientSettings = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_Organization().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_Organization().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_Organization().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_Organization, a, b);\n    }\n}\nSyncUpdate_Organization.runtime = proto3;\nSyncUpdate_Organization.typeName = \"domain.SyncUpdate.Organization\";\nSyncUpdate_Organization.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 20, name: \"organization_type\", kind: \"enum\", T: proto3.getEnumType(OrganizationType) },\n    { no: 10, name: \"profiles\", kind: \"message\", T: SyncUpdate_OrganizationProfile, repeated: true },\n    { no: 3, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"icon\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 12, name: \"restrict_create_team\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 19, name: \"restrict_personal_logins\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 14, name: \"auditlog_enable\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 21, name: \"child_organization_management_enable\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 23, name: \"password_policy\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 26, name: \"unlock_time_limit\", kind: \"message\", T: UnlockTimeLimit },\n    { no: 13, name: \"is_preliminary\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"is_admin\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 24, name: \"is_manager\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 7, name: \"super_user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 16, name: \"admin_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 15, name: \"admin_info\", kind: \"message\", T: SyncUpdate_Organization_AdminInfo },\n    { no: 11, name: \"subscription_error\", kind: \"enum\", T: proto3.getEnumType(SubscriptionError) },\n    { no: 17, name: \"verified_domain\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 25, name: \"client_settings\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 27, name: \"parent_organization_info\", kind: \"message\", T: SyncUpdate_Organization_ParentOrganizationInfo },\n]);\n/**\n * @generated from message domain.SyncUpdate.Organization.AdminInfo\n */\nexport class SyncUpdate_Organization_AdminInfo extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string legacy_admin_vault_id = 2;\n         */\n        this.legacyAdminVaultId = \"\";\n        /**\n         * @generated from field: string entra_tenant_id = 6;\n         */\n        this.entraTenantId = \"\";\n        /**\n         * @generated from field: bool csv_integration_active = 7;\n         */\n        this.csvIntegrationActive = false;\n        /**\n         * @generated from field: bool google_workspace_integration_active = 8;\n         */\n        this.googleWorkspaceIntegrationActive = false;\n        /**\n         * @generated from field: domain.LicenseType license_type = 11;\n         */\n        this.licenseType = LicenseType.UNKNOWN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_Organization_AdminInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_Organization_AdminInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_Organization_AdminInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_Organization_AdminInfo, a, b);\n    }\n}\nSyncUpdate_Organization_AdminInfo.runtime = proto3;\nSyncUpdate_Organization_AdminInfo.typeName = \"domain.SyncUpdate.Organization.AdminInfo\";\nSyncUpdate_Organization_AdminInfo.fields = proto3.util.newFieldList(() => [\n    { no: 2, name: \"legacy_admin_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"authenticator\", kind: \"message\", T: Authenticator },\n    { no: 9, name: \"admin_profile\", kind: \"message\", T: SyncUpdate_Profile },\n    { no: 6, name: \"entra_tenant_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"csv_integration_active\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 8, name: \"google_workspace_integration_active\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 10, name: \"trial_end_date\", kind: \"message\", T: Timestamp },\n    { no: 11, name: \"license_type\", kind: \"enum\", T: proto3.getEnumType(LicenseType) },\n]);\n/**\n * @generated from message domain.SyncUpdate.Organization.ParentOrganizationInfo\n */\nexport class SyncUpdate_Organization_ParentOrganizationInfo extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string name = 2;\n         */\n        this.name = \"\";\n        /**\n         * @generated from field: string icon = 3;\n         */\n        this.icon = \"\";\n        /**\n         * @generated from field: string metadata = 4;\n         */\n        this.metadata = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_Organization_ParentOrganizationInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_Organization_ParentOrganizationInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_Organization_ParentOrganizationInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_Organization_ParentOrganizationInfo, a, b);\n    }\n}\nSyncUpdate_Organization_ParentOrganizationInfo.runtime = proto3;\nSyncUpdate_Organization_ParentOrganizationInfo.typeName = \"domain.SyncUpdate.Organization.ParentOrganizationInfo\";\nSyncUpdate_Organization_ParentOrganizationInfo.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"icon\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.OrganizationProfile\n */\nexport class SyncUpdate_OrganizationProfile extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string profile_id = 1;\n         */\n        this.profileId = \"\";\n        /**\n         * @generated from field: bool is_admin = 3;\n         */\n        this.isAdmin = false;\n        /**\n         * @generated from field: bool is_not_connected = 4;\n         */\n        this.isNotConnected = false;\n        /**\n         * @generated from field: bool is_manager = 14;\n         */\n        this.isManager = false;\n        /**\n         * @generated from field: bool is_service = 15;\n         */\n        this.isService = false;\n        /**\n         * @generated from field: string personal_vault_id = 8;\n         */\n        this.personalVaultId = \"\";\n        /**\n         * only filled for org admins\n         *\n         * @generated from field: string preliminary_user_id = 5;\n         */\n        this.preliminaryUserId = \"\";\n        /**\n         * only filled for org admins\n         *\n         * @generated from field: string start_code = 9;\n         */\n        this.startCode = \"\";\n        /**\n         * only filled for org admins\n         *\n         * @generated from field: domain.PrimaryLoginDevice primary_login_device = 12;\n         */\n        this.primaryLoginDevice = PrimaryLoginDevice.UNKNOWN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_OrganizationProfile().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_OrganizationProfile().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_OrganizationProfile().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_OrganizationProfile, a, b);\n    }\n}\nSyncUpdate_OrganizationProfile.runtime = proto3;\nSyncUpdate_OrganizationProfile.typeName = \"domain.SyncUpdate.OrganizationProfile\";\nSyncUpdate_OrganizationProfile.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"is_admin\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"is_not_connected\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 14, name: \"is_manager\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 15, name: \"is_service\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 8, name: \"personal_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"preliminary_user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"start_code\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"start_code_generated_at\", kind: \"message\", T: Timestamp },\n    { no: 11, name: \"start_code_email_sent_at\", kind: \"message\", T: Timestamp },\n    { no: 12, name: \"primary_login_device\", kind: \"enum\", T: proto3.getEnumType(PrimaryLoginDevice) },\n    { no: 13, name: \"last_active_at\", kind: \"message\", T: Timestamp },\n]);\n/**\n * @generated from message domain.SyncUpdate.RelatedProfile\n */\nexport class SyncUpdate_RelatedProfile extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string email = 2;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_RelatedProfile().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_RelatedProfile().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_RelatedProfile().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_RelatedProfile, a, b);\n    }\n}\nSyncUpdate_RelatedProfile.runtime = proto3;\nSyncUpdate_RelatedProfile.typeName = \"domain.SyncUpdate.RelatedProfile\";\nSyncUpdate_RelatedProfile.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.Profile\n */\nexport class SyncUpdate_Profile extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: domain.ProfileType profile_type = 2;\n         */\n        this.profileType = ProfileType.UNKNOWN;\n        /**\n         * @generated from field: string key_generation_id = 3;\n         */\n        this.keyGenerationId = \"\";\n        /**\n         * @generated from field: string organization_id = 4;\n         */\n        this.organizationId = \"\";\n        /**\n         * cryptographic identity (can be regenerated)\n         *\n         * @generated from field: bytes high_security_identity_sig_pub_key = 5;\n         */\n        this.highSecurityIdentitySigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key = 6;\n         */\n        this.highSecurityVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key_signature = 7;\n         */\n        this.highSecurityVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_profile_seed_enc_pub_key = 8;\n         */\n        this.highSecurityProfileSeedEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_profile_seed_enc_pub_key_signature = 9;\n         */\n        this.highSecurityProfileSeedEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key = 10;\n         */\n        this.storableSigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key_signature = 11;\n         */\n        this.storableSigPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key = 12;\n         */\n        this.storableVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key_signature = 13;\n         */\n        this.storableVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_profile_seed_enc_pub_key = 14;\n         */\n        this.storableProfileSeedEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_profile_seed_enc_pub_key_signature = 15;\n         */\n        this.storableProfileSeedEncPubKeySignature = new Uint8Array(0);\n        /**\n         * list of locks (one per authenticator, or one profile)\n         *\n         * @generated from field: repeated domain.ProfileAuthenticatorLock authenticator_locks = 16;\n         */\n        this.authenticatorLocks = [];\n        /**\n         * public metadata, can be changed\n         *\n         * @generated from field: string email = 17;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: string unverified_email = 18;\n         */\n        this.unverifiedEmail = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_Profile().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_Profile().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_Profile().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_Profile, a, b);\n    }\n}\nSyncUpdate_Profile.runtime = proto3;\nSyncUpdate_Profile.typeName = \"domain.SyncUpdate.Profile\";\nSyncUpdate_Profile.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"profile_type\", kind: \"enum\", T: proto3.getEnumType(ProfileType) },\n    { no: 3, name: \"key_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"high_security_identity_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 6, name: \"high_security_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 7, name: \"high_security_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 8, name: \"high_security_profile_seed_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 9, name: \"high_security_profile_seed_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 10, name: \"storable_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 11, name: \"storable_sig_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 12, name: \"storable_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 13, name: \"storable_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 14, name: \"storable_profile_seed_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 15, name: \"storable_profile_seed_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 16, name: \"authenticator_locks\", kind: \"message\", T: ProfileAuthenticatorLock, repeated: true },\n    { no: 19, name: \"profile_lock\", kind: \"message\", T: ProfileProfileLock },\n    { no: 17, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 18, name: \"unverified_email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.PreliminaryProfile\n */\nexport class SyncUpdate_PreliminaryProfile extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string email = 2;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: string organization_id = 3;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_PreliminaryProfile().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_PreliminaryProfile().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_PreliminaryProfile().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_PreliminaryProfile, a, b);\n    }\n}\nSyncUpdate_PreliminaryProfile.runtime = proto3;\nSyncUpdate_PreliminaryProfile.typeName = \"domain.SyncUpdate.PreliminaryProfile\";\nSyncUpdate_PreliminaryProfile.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SyncUpdate.MaintenanceSettings\n */\nexport class SyncUpdate_MaintenanceSettings extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.MaintenanceTask allowed_tasks = 1;\n         */\n        this.allowedTasks = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncUpdate_MaintenanceSettings().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncUpdate_MaintenanceSettings().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncUpdate_MaintenanceSettings().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncUpdate_MaintenanceSettings, a, b);\n    }\n}\nSyncUpdate_MaintenanceSettings.runtime = proto3;\nSyncUpdate_MaintenanceSettings.typeName = \"domain.SyncUpdate.MaintenanceSettings\";\nSyncUpdate_MaintenanceSettings.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"allowed_tasks\", kind: \"enum\", T: proto3.getEnumType(MaintenanceTask), repeated: true },\n]);\n//# sourceMappingURL=sync_update_pb.js.map","/* eslint-disable import/prefer-default-export */\nimport * as Sentry from '@sentry/minimal';\nimport Emittery from 'emittery';\nimport debugConsole from './debugConsole';\n/**\n * Event emitter into which trackError emits an event whenever it is called. This allows as to test\n * for reported errors in tests.\n */\nconst trackErrorEmitterInternal = new Emittery.Typed();\nconst trackErrorEmitter = trackErrorEmitterInternal;\nexport { trackErrorEmitter };\n/**\n * Reports a an error from a promise chain.\n *\n * Use this if you trigger a promise from a context where you can't await it and want the error to\n * be surfaced somewhere.\n *\n * It always logs the error to debugConsole. If sentry is available (that is in production builds), the\n * error will also be reported there.\n */\nexport function trackError(errorObject) {\n    let error;\n    // emit event for reported error, for use in tests\n    trackErrorEmitterInternal.emit('error', errorObject).catch(suppressError);\n    /* When we receive error objects of various origins, sometimes they aren't error and thus don't\n     * include a stack trace. In that case, we create a new error and only take the message from the\n     * object.\n     */\n    if (typeof errorObject === 'object' &&\n        errorObject != null &&\n        'stack' in errorObject &&\n        errorObject.stack) {\n        error = errorObject;\n        debugConsole.error(error);\n    }\n    else if (typeof errorObject === 'object' && errorObject !== null) {\n        const keys = Object.keys(errorObject).join(', ');\n        if (hasMessage(errorObject)) {\n            const message = errorObject.message;\n            error = new Error(`Non-error object captured with message \"${message}\" and keys: ${keys}`);\n        }\n        else {\n            error = new Error(`Non-error object captured with keys: ${keys}`);\n        }\n        debugConsole.error(error, errorObject);\n    }\n    else {\n        error = new Error(`Non-error captured`);\n        debugConsole.error(error, errorObject);\n    }\n    Sentry.withScope((localScope) => {\n        localScope.setExtra('__serialized__', errorObject);\n        Sentry.captureException(error);\n    });\n}\nfunction hasMessage(obj) {\n    return 'message' in obj;\n}\n/**\n * Suppresses the in a promise chain. The error is not reported anywhere, it is simply gone.\n *\n * CAUTION: Only use this if an error might be thrown and you actually don't care about it.\n *\n * If you expect that no error will ever be thrown use trackError instead. This allows\n * unexpected errors to still show up in out error reporting.\n */\nexport function suppressError(_e) {\n    // this error is now gone forever\n}\nexport function promiseWithResolvers() {\n    let resolve;\n    let reject;\n    const promise = new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n    return { promise, resolve: resolve, reject: reject };\n}\n//# sourceMappingURL=promiseUtils.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file channel_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\n/**\n * @generated from enum domain.ChannelRecipient\n */\nexport var ChannelRecipient;\n(function (ChannelRecipient) {\n    /**\n     * @generated from enum value: CHANNEL_RECIPIENT_UNSPECIFIED = 0;\n     */\n    ChannelRecipient[ChannelRecipient[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n    /**\n     * @generated from enum value: CHANNEL_RECIPIENT_CLIENT = 1;\n     */\n    ChannelRecipient[ChannelRecipient[\"CLIENT\"] = 1] = \"CLIENT\";\n    /**\n     * @generated from enum value: CHANNEL_RECIPIENT_AUTHENTICATOR = 2;\n     */\n    ChannelRecipient[ChannelRecipient[\"AUTHENTICATOR\"] = 2] = \"AUTHENTICATOR\";\n})(ChannelRecipient || (ChannelRecipient = {}));\n// Retrieve enum metadata with: proto3.getEnumType(ChannelRecipient)\nproto3.util.setEnumType(ChannelRecipient, \"domain.ChannelRecipient\", [\n    { no: 0, name: \"CHANNEL_RECIPIENT_UNSPECIFIED\" },\n    { no: 1, name: \"CHANNEL_RECIPIENT_CLIENT\" },\n    { no: 2, name: \"CHANNEL_RECIPIENT_AUTHENTICATOR\" },\n]);\n/**\n * @generated from message domain.CreateChannelRequest\n */\nexport class CreateChannelRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string user_id = 1;\n         */\n        this.userId = \"\";\n        /**\n         * @generated from field: bytes data = 2;\n         */\n        this.data = new Uint8Array(0);\n        /**\n         * @generated from field: bool exposed = 3;\n         */\n        this.exposed = false;\n        /**\n         * @generated from field: string channel_type = 4;\n         */\n        this.channelType = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateChannelRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateChannelRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateChannelRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateChannelRequest, a, b);\n    }\n}\nCreateChannelRequest.runtime = proto3;\nCreateChannelRequest.typeName = \"domain.CreateChannelRequest\";\nCreateChannelRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"exposed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"channel_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateChannelResponse\n */\nexport class CreateChannelResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string channel_id = 1;\n         */\n        this.channelId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateChannelResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateChannelResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateChannelResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateChannelResponse, a, b);\n    }\n}\nCreateChannelResponse.runtime = proto3;\nCreateChannelResponse.typeName = \"domain.CreateChannelResponse\";\nCreateChannelResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"channel_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ClaimChannelRequest\n */\nexport class ClaimChannelRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string channel_id = 1;\n         */\n        this.channelId = \"\";\n        /**\n         * @generated from field: string authenticator_id = 2;\n         */\n        this.authenticatorId = \"\";\n        /**\n         * @generated from field: bytes data = 3;\n         */\n        this.data = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ClaimChannelRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ClaimChannelRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ClaimChannelRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ClaimChannelRequest, a, b);\n    }\n}\nClaimChannelRequest.runtime = proto3;\nClaimChannelRequest.typeName = \"domain.ClaimChannelRequest\";\nClaimChannelRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"channel_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.ClaimChannelResponse\n */\nexport class ClaimChannelResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes data = 1;\n         */\n        this.data = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ClaimChannelResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ClaimChannelResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ClaimChannelResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ClaimChannelResponse, a, b);\n    }\n}\nClaimChannelResponse.runtime = proto3;\nClaimChannelResponse.typeName = \"domain.ClaimChannelResponse\";\nClaimChannelResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.ReadChannelRequest\n */\nexport class ReadChannelRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string channel_id = 1;\n         */\n        this.channelId = \"\";\n        /**\n         * @generated from field: domain.ChannelRecipient recipient = 2;\n         */\n        this.recipient = ChannelRecipient.UNSPECIFIED;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ReadChannelRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ReadChannelRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ReadChannelRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ReadChannelRequest, a, b);\n    }\n}\nReadChannelRequest.runtime = proto3;\nReadChannelRequest.typeName = \"domain.ReadChannelRequest\";\nReadChannelRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"channel_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"recipient\", kind: \"enum\", T: proto3.getEnumType(ChannelRecipient) },\n]);\n/**\n * @generated from message domain.ReadChannelResponse\n */\nexport class ReadChannelResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes data = 1;\n         */\n        this.data = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ReadChannelResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ReadChannelResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ReadChannelResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ReadChannelResponse, a, b);\n    }\n}\nReadChannelResponse.runtime = proto3;\nReadChannelResponse.typeName = \"domain.ReadChannelResponse\";\nReadChannelResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.WriteChannelRequest\n */\nexport class WriteChannelRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string channel_id = 1;\n         */\n        this.channelId = \"\";\n        /**\n         * @generated from field: domain.ChannelRecipient recipient = 2;\n         */\n        this.recipient = ChannelRecipient.UNSPECIFIED;\n        /**\n         * @generated from field: bytes data = 3;\n         */\n        this.data = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new WriteChannelRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new WriteChannelRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new WriteChannelRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(WriteChannelRequest, a, b);\n    }\n}\nWriteChannelRequest.runtime = proto3;\nWriteChannelRequest.typeName = \"domain.WriteChannelRequest\";\nWriteChannelRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"channel_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"recipient\", kind: \"enum\", T: proto3.getEnumType(ChannelRecipient) },\n    { no: 3, name: \"data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * empty response\n *\n * @generated from message domain.WriteChannelResponse\n */\nexport class WriteChannelResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new WriteChannelResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new WriteChannelResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new WriteChannelResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(WriteChannelResponse, a, b);\n    }\n}\nWriteChannelResponse.runtime = proto3;\nWriteChannelResponse.typeName = \"domain.WriteChannelResponse\";\nWriteChannelResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.DeleteChannelRequest\n */\nexport class DeleteChannelRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string channel_id = 1;\n         */\n        this.channelId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteChannelRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteChannelRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteChannelRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteChannelRequest, a, b);\n    }\n}\nDeleteChannelRequest.runtime = proto3;\nDeleteChannelRequest.typeName = \"domain.DeleteChannelRequest\";\nDeleteChannelRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"channel_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.DeleteChannelResponse\n */\nexport class DeleteChannelResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteChannelResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteChannelResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteChannelResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteChannelResponse, a, b);\n    }\n}\nDeleteChannelResponse.runtime = proto3;\nDeleteChannelResponse.typeName = \"domain.DeleteChannelResponse\";\nDeleteChannelResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n//# sourceMappingURL=channel_service_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file profile.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\nimport { ProfileAuthenticatorLock, ProfileProfileLock, VaultLockCreationData } from \"./locks_pb.js\";\nimport { ProfileType } from \"./profile_type_pb.js\";\n/**\n * @generated from message domain.ProfileData\n */\nexport class ProfileData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * null uuids for creation\n         *\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string key_generation_id = 2;\n         */\n        this.keyGenerationId = \"\";\n        /**\n         * @generated from field: bytes high_security_identity_sig_pub_key = 3;\n         */\n        this.highSecurityIdentitySigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key = 4;\n         */\n        this.highSecurityVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key_signature = 5;\n         */\n        this.highSecurityVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_profile_seed_enc_pub_key = 6;\n         */\n        this.highSecurityProfileSeedEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_profile_seed_enc_pub_key_signature = 7;\n         */\n        this.highSecurityProfileSeedEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key = 8;\n         */\n        this.storableSigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key_signature = 9;\n         */\n        this.storableSigPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key = 10;\n         */\n        this.storableVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key_signature = 11;\n         */\n        this.storableVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_profile_seed_enc_pub_key = 12;\n         */\n        this.storableProfileSeedEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_profile_seed_enc_pub_key_signature = 13;\n         */\n        this.storableProfileSeedEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: repeated domain.ProfileAuthenticatorLock authenticator_locks = 14;\n         */\n        this.authenticatorLocks = [];\n        /**\n         * NOTE: Contains locks from upstream profiles that lock this profile. Currently, that is\n         * specifically locks from user profiles that lock admin profiles.\n         *\n         * @generated from field: repeated domain.ProfileProfileLock upstream_profile_locks = 16;\n         */\n        this.upstreamProfileLocks = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ProfileData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ProfileData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ProfileData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ProfileData, a, b);\n    }\n}\nProfileData.runtime = proto3;\nProfileData.typeName = \"domain.ProfileData\";\nProfileData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"key_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"high_security_identity_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"high_security_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 5, name: \"high_security_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 6, name: \"high_security_profile_seed_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 7, name: \"high_security_profile_seed_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 8, name: \"storable_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 9, name: \"storable_sig_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 10, name: \"storable_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 11, name: \"storable_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 12, name: \"storable_profile_seed_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 13, name: \"storable_profile_seed_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 14, name: \"authenticator_locks\", kind: \"message\", T: ProfileAuthenticatorLock, repeated: true },\n    { no: 16, name: \"upstream_profile_locks\", kind: \"message\", T: ProfileProfileLock, repeated: true },\n]);\n/**\n * @generated from message domain.ForeignProfile\n */\nexport class ForeignProfile extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string key_generation_id = 2;\n         */\n        this.keyGenerationId = \"\";\n        /**\n         * @generated from field: domain.ProfileType profile_type = 3;\n         */\n        this.profileType = ProfileType.UNKNOWN;\n        /**\n         * @generated from field: string organization_id = 4;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: bytes high_security_identity_sig_pub_key = 5;\n         */\n        this.highSecurityIdentitySigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key = 6;\n         */\n        this.highSecurityVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key_signature = 7;\n         */\n        this.highSecurityVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_profile_seed_enc_pub_key = 8;\n         */\n        this.highSecurityProfileSeedEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_profile_seed_enc_pub_key_signature = 9;\n         */\n        this.highSecurityProfileSeedEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key = 10;\n         */\n        this.storableSigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key_signature = 11;\n         */\n        this.storableSigPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key = 12;\n         */\n        this.storableVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key_signature = 13;\n         */\n        this.storableVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_profile_seed_enc_pub_key = 14;\n         */\n        this.storableProfileSeedEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_profile_seed_enc_pub_key_signature = 15;\n         */\n        this.storableProfileSeedEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: string email = 16;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ForeignProfile().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ForeignProfile().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ForeignProfile().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ForeignProfile, a, b);\n    }\n}\nForeignProfile.runtime = proto3;\nForeignProfile.typeName = \"domain.ForeignProfile\";\nForeignProfile.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"key_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"profile_type\", kind: \"enum\", T: proto3.getEnumType(ProfileType) },\n    { no: 4, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"high_security_identity_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 6, name: \"high_security_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 7, name: \"high_security_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 8, name: \"high_security_profile_seed_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 9, name: \"high_security_profile_seed_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 10, name: \"storable_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 11, name: \"storable_sig_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 12, name: \"storable_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 13, name: \"storable_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 14, name: \"storable_profile_seed_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 15, name: \"storable_profile_seed_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 16, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ProfileRegenerateData\n */\nexport class ProfileRegenerateData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.VaultLockCreationData vault_locks = 2;\n         */\n        this.vaultLocks = [];\n        /**\n         * NOTE: Contains locks to downstream profiles that are locked by this profile. Currently, that is\n         * specifically locks from user profiles that lock admin profiles.\n         *\n         * @generated from field: repeated domain.ProfileProfileLock downstream_profile_locks = 3;\n         */\n        this.downstreamProfileLocks = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ProfileRegenerateData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ProfileRegenerateData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ProfileRegenerateData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ProfileRegenerateData, a, b);\n    }\n}\nProfileRegenerateData.runtime = proto3;\nProfileRegenerateData.typeName = \"domain.ProfileRegenerateData\";\nProfileRegenerateData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile\", kind: \"message\", T: ProfileData },\n    { no: 2, name: \"vault_locks\", kind: \"message\", T: VaultLockCreationData, repeated: true },\n    { no: 3, name: \"downstream_profile_locks\", kind: \"message\", T: ProfileProfileLock, repeated: true },\n]);\n//# sourceMappingURL=profile_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file auditlog_event_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.AuditlogEventTypeGroup\n */\nexport var AuditlogEventTypeGroup;\n(function (AuditlogEventTypeGroup) {\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_GROUP_UNKNOWN = 0;\n     */\n    AuditlogEventTypeGroup[AuditlogEventTypeGroup[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_GROUP_LOGIN_MIN = 1;\n     */\n    AuditlogEventTypeGroup[AuditlogEventTypeGroup[\"LOGIN_MIN\"] = 1] = \"LOGIN_MIN\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_GROUP_LOGIN_MAX = 29999;\n     */\n    AuditlogEventTypeGroup[AuditlogEventTypeGroup[\"LOGIN_MAX\"] = 29999] = \"LOGIN_MAX\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_GROUP_PROFILE_MIN = 30001;\n     */\n    AuditlogEventTypeGroup[AuditlogEventTypeGroup[\"PROFILE_MIN\"] = 30001] = \"PROFILE_MIN\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_GROUP_PROFILE_MAX = 39999;\n     */\n    AuditlogEventTypeGroup[AuditlogEventTypeGroup[\"PROFILE_MAX\"] = 39999] = \"PROFILE_MAX\";\n})(AuditlogEventTypeGroup || (AuditlogEventTypeGroup = {}));\n// Retrieve enum metadata with: proto3.getEnumType(AuditlogEventTypeGroup)\nproto3.util.setEnumType(AuditlogEventTypeGroup, \"domain.AuditlogEventTypeGroup\", [\n    { no: 0, name: \"AUDITLOG_EVENT_TYPE_GROUP_UNKNOWN\" },\n    { no: 1, name: \"AUDITLOG_EVENT_TYPE_GROUP_LOGIN_MIN\" },\n    { no: 29999, name: \"AUDITLOG_EVENT_TYPE_GROUP_LOGIN_MAX\" },\n    { no: 30001, name: \"AUDITLOG_EVENT_TYPE_GROUP_PROFILE_MIN\" },\n    { no: 39999, name: \"AUDITLOG_EVENT_TYPE_GROUP_PROFILE_MAX\" },\n]);\n/**\n * @generated from enum domain.AuditlogEventType\n */\nexport var AuditlogEventType;\n(function (AuditlogEventType) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_UNKNOWN = 0;\n     */\n    AuditlogEventType[AuditlogEventType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_R_AUTOFILL = 1;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_R_AUTOFILL\"] = 1] = \"LOGIN_R_AUTOFILL\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_R_PASSWORD_SHOW = 100;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_R_PASSWORD_SHOW\"] = 100] = \"LOGIN_R_PASSWORD_SHOW\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_R_PASSWORD_COPY = 101;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_R_PASSWORD_COPY\"] = 101] = \"LOGIN_R_PASSWORD_COPY\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_R_PASSWORD_INSERT_CONTEXT_MENU = 102;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_R_PASSWORD_INSERT_CONTEXT_MENU\"] = 102] = \"LOGIN_R_PASSWORD_INSERT_CONTEXT_MENU\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_R_CUSTOM_FIELD_SHOW = 200;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_R_CUSTOM_FIELD_SHOW\"] = 200] = \"LOGIN_R_CUSTOM_FIELD_SHOW\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_R_CUSTOM_FIELD_COPY = 201;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_R_CUSTOM_FIELD_COPY\"] = 201] = \"LOGIN_R_CUSTOM_FIELD_COPY\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_R_CUSTOM_FIELD_INSERT_CONTEXT_MENU = 202;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_R_CUSTOM_FIELD_INSERT_CONTEXT_MENU\"] = 202] = \"LOGIN_R_CUSTOM_FIELD_INSERT_CONTEXT_MENU\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_R_TOTP_SECRET_SHOW = 300;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_R_TOTP_SECRET_SHOW\"] = 300] = \"LOGIN_R_TOTP_SECRET_SHOW\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_CREDIT_CARD_R_SECURITY_CODE_SHOW = 400;\n     */\n    AuditlogEventType[AuditlogEventType[\"CREDIT_CARD_R_SECURITY_CODE_SHOW\"] = 400] = \"CREDIT_CARD_R_SECURITY_CODE_SHOW\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_CREDIT_CARD_R_SECURITY_CODE_COPY = 401;\n     */\n    AuditlogEventType[AuditlogEventType[\"CREDIT_CARD_R_SECURITY_CODE_COPY\"] = 401] = \"CREDIT_CARD_R_SECURITY_CODE_COPY\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_CREDIT_CARD_R_PIN_SHOW = 402;\n     */\n    AuditlogEventType[AuditlogEventType[\"CREDIT_CARD_R_PIN_SHOW\"] = 402] = \"CREDIT_CARD_R_PIN_SHOW\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_CREDIT_CARD_R_PIN_COPY = 403;\n     */\n    AuditlogEventType[AuditlogEventType[\"CREDIT_CARD_R_PIN_COPY\"] = 403] = \"CREDIT_CARD_R_PIN_COPY\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_WIFI_R_QR_SHOW = 500;\n     */\n    AuditlogEventType[AuditlogEventType[\"WIFI_R_QR_SHOW\"] = 500] = \"WIFI_R_QR_SHOW\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_W_CREATE = 10001;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_W_CREATE\"] = 10001] = \"LOGIN_W_CREATE\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_W_CHANGE = 10002;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_W_CHANGE\"] = 10002] = \"LOGIN_W_CHANGE\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_W_DELETE = 10003;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_W_DELETE\"] = 10003] = \"LOGIN_W_DELETE\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_W_ARCHIVE = 10004;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_W_ARCHIVE\"] = 10004] = \"LOGIN_W_ARCHIVE\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_W_RESTORE_FROM_ARCHIVE = 10005;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_W_RESTORE_FROM_ARCHIVE\"] = 10005] = \"LOGIN_W_RESTORE_FROM_ARCHIVE\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_LOGIN_SHARE_LINK_CREATE = 20001;\n     */\n    AuditlogEventType[AuditlogEventType[\"LOGIN_SHARE_LINK_CREATE\"] = 20001] = \"LOGIN_SHARE_LINK_CREATE\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_PROFILE_CREATE = 30001;\n     */\n    AuditlogEventType[AuditlogEventType[\"PROFILE_CREATE\"] = 30001] = \"PROFILE_CREATE\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_PROFILE_DELETE = 30002;\n     */\n    AuditlogEventType[AuditlogEventType[\"PROFILE_DELETE\"] = 30002] = \"PROFILE_DELETE\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_PROFILE_CLAIM_WITH_START_CODE = 30003;\n     */\n    AuditlogEventType[AuditlogEventType[\"PROFILE_CLAIM_WITH_START_CODE\"] = 30003] = \"PROFILE_CLAIM_WITH_START_CODE\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_PROFILE_DISCONNECT = 30004;\n     */\n    AuditlogEventType[AuditlogEventType[\"PROFILE_DISCONNECT\"] = 30004] = \"PROFILE_DISCONNECT\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_PROFILE_PROMOTE_TO_ADMIN = 30005;\n     */\n    AuditlogEventType[AuditlogEventType[\"PROFILE_PROMOTE_TO_ADMIN\"] = 30005] = \"PROFILE_PROMOTE_TO_ADMIN\";\n    /**\n     * @generated from enum value: AUDITLOG_EVENT_TYPE_PROFILE_DEMOTE_ADMIN = 30006;\n     */\n    AuditlogEventType[AuditlogEventType[\"PROFILE_DEMOTE_ADMIN\"] = 30006] = \"PROFILE_DEMOTE_ADMIN\";\n})(AuditlogEventType || (AuditlogEventType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(AuditlogEventType)\nproto3.util.setEnumType(AuditlogEventType, \"domain.AuditlogEventType\", [\n    { no: 0, name: \"AUDITLOG_EVENT_TYPE_UNKNOWN\" },\n    { no: 1, name: \"AUDITLOG_EVENT_TYPE_LOGIN_R_AUTOFILL\" },\n    { no: 100, name: \"AUDITLOG_EVENT_TYPE_LOGIN_R_PASSWORD_SHOW\" },\n    { no: 101, name: \"AUDITLOG_EVENT_TYPE_LOGIN_R_PASSWORD_COPY\" },\n    { no: 102, name: \"AUDITLOG_EVENT_TYPE_LOGIN_R_PASSWORD_INSERT_CONTEXT_MENU\" },\n    { no: 200, name: \"AUDITLOG_EVENT_TYPE_LOGIN_R_CUSTOM_FIELD_SHOW\" },\n    { no: 201, name: \"AUDITLOG_EVENT_TYPE_LOGIN_R_CUSTOM_FIELD_COPY\" },\n    { no: 202, name: \"AUDITLOG_EVENT_TYPE_LOGIN_R_CUSTOM_FIELD_INSERT_CONTEXT_MENU\" },\n    { no: 300, name: \"AUDITLOG_EVENT_TYPE_LOGIN_R_TOTP_SECRET_SHOW\" },\n    { no: 400, name: \"AUDITLOG_EVENT_TYPE_CREDIT_CARD_R_SECURITY_CODE_SHOW\" },\n    { no: 401, name: \"AUDITLOG_EVENT_TYPE_CREDIT_CARD_R_SECURITY_CODE_COPY\" },\n    { no: 402, name: \"AUDITLOG_EVENT_TYPE_CREDIT_CARD_R_PIN_SHOW\" },\n    { no: 403, name: \"AUDITLOG_EVENT_TYPE_CREDIT_CARD_R_PIN_COPY\" },\n    { no: 500, name: \"AUDITLOG_EVENT_TYPE_WIFI_R_QR_SHOW\" },\n    { no: 10001, name: \"AUDITLOG_EVENT_TYPE_LOGIN_W_CREATE\" },\n    { no: 10002, name: \"AUDITLOG_EVENT_TYPE_LOGIN_W_CHANGE\" },\n    { no: 10003, name: \"AUDITLOG_EVENT_TYPE_LOGIN_W_DELETE\" },\n    { no: 10004, name: \"AUDITLOG_EVENT_TYPE_LOGIN_W_ARCHIVE\" },\n    { no: 10005, name: \"AUDITLOG_EVENT_TYPE_LOGIN_W_RESTORE_FROM_ARCHIVE\" },\n    { no: 20001, name: \"AUDITLOG_EVENT_TYPE_LOGIN_SHARE_LINK_CREATE\" },\n    { no: 30001, name: \"AUDITLOG_EVENT_TYPE_PROFILE_CREATE\" },\n    { no: 30002, name: \"AUDITLOG_EVENT_TYPE_PROFILE_DELETE\" },\n    { no: 30003, name: \"AUDITLOG_EVENT_TYPE_PROFILE_CLAIM_WITH_START_CODE\" },\n    { no: 30004, name: \"AUDITLOG_EVENT_TYPE_PROFILE_DISCONNECT\" },\n    { no: 30005, name: \"AUDITLOG_EVENT_TYPE_PROFILE_PROMOTE_TO_ADMIN\" },\n    { no: 30006, name: \"AUDITLOG_EVENT_TYPE_PROFILE_DEMOTE_ADMIN\" },\n]);\n//# sourceMappingURL=auditlog_event_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file error_codes.proto (package domainerr, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domainerr.ErrorGroup\n */\nexport var ErrorGroup;\n(function (ErrorGroup) {\n    /**\n     * @generated from enum value: EG_UNDEFINED = 0;\n     */\n    ErrorGroup[ErrorGroup[\"EG_UNDEFINED\"] = 0] = \"EG_UNDEFINED\";\n    /**\n     * @generated from enum value: EG_UNSPECIFIC = 10000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_UNSPECIFIC\"] = 10000] = \"EG_UNSPECIFIC\";\n    /**\n     * @generated from enum value: EG_ACCOUNT = 20000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_ACCOUNT\"] = 20000] = \"EG_ACCOUNT\";\n    /**\n     * @generated from enum value: EG_CREDENTIAL = 30000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_CREDENTIAL\"] = 30000] = \"EG_CREDENTIAL\";\n    /**\n     * @generated from enum value: EG_AUTHENTICATOR = 40000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_AUTHENTICATOR\"] = 40000] = \"EG_AUTHENTICATOR\";\n    /**\n     * @generated from enum value: EG_VAULT = 50000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_VAULT\"] = 50000] = \"EG_VAULT\";\n    /**\n     * @generated from enum value: EG_ORGANIZATION = 60000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_ORGANIZATION\"] = 60000] = \"EG_ORGANIZATION\";\n    /**\n     * @generated from enum value: EG_PROFILE = 70000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_PROFILE\"] = 70000] = \"EG_PROFILE\";\n    /**\n     * @generated from enum value: EG_INTEGRATION = 80000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_INTEGRATION\"] = 80000] = \"EG_INTEGRATION\";\n    /**\n     * @generated from enum value: EG_AUDITLOG = 90000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_AUDITLOG\"] = 90000] = \"EG_AUDITLOG\";\n    /**\n     * @generated from enum value: EG_WEBAUTHN = 100000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_WEBAUTHN\"] = 100000] = \"EG_WEBAUTHN\";\n    /**\n     * @generated from enum value: EG_SHARELINK = 110000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_SHARELINK\"] = 110000] = \"EG_SHARELINK\";\n    /**\n     * @generated from enum value: EG_USER_CONFIRMATION = 120000;\n     */\n    ErrorGroup[ErrorGroup[\"EG_USER_CONFIRMATION\"] = 120000] = \"EG_USER_CONFIRMATION\";\n})(ErrorGroup || (ErrorGroup = {}));\n// Retrieve enum metadata with: proto3.getEnumType(ErrorGroup)\nproto3.util.setEnumType(ErrorGroup, \"domainerr.ErrorGroup\", [\n    { no: 0, name: \"EG_UNDEFINED\" },\n    { no: 10000, name: \"EG_UNSPECIFIC\" },\n    { no: 20000, name: \"EG_ACCOUNT\" },\n    { no: 30000, name: \"EG_CREDENTIAL\" },\n    { no: 40000, name: \"EG_AUTHENTICATOR\" },\n    { no: 50000, name: \"EG_VAULT\" },\n    { no: 60000, name: \"EG_ORGANIZATION\" },\n    { no: 70000, name: \"EG_PROFILE\" },\n    { no: 80000, name: \"EG_INTEGRATION\" },\n    { no: 90000, name: \"EG_AUDITLOG\" },\n    { no: 100000, name: \"EG_WEBAUTHN\" },\n    { no: 110000, name: \"EG_SHARELINK\" },\n    { no: 120000, name: \"EG_USER_CONFIRMATION\" },\n]);\n/**\n * Error codes used to identify error cases by the client.\n * Let's make them somewhat easy to remember:\n *\n * + 4xx: something not found (think HTTP 404)\n *\n * Order by error group and numeric value to avoid conflicts.\n *\n * @generated from enum domainerr.ErrorCode\n */\nexport var ErrorCode;\n(function (ErrorCode) {\n    /**\n     * @generated from enum value: UNDEFINED = 0;\n     */\n    ErrorCode[ErrorCode[\"UNDEFINED\"] = 0] = \"UNDEFINED\";\n    /**\n     * Unspecific\n     *\n     * @generated from enum value: PERMISSION_DENIED = 10100;\n     */\n    ErrorCode[ErrorCode[\"PERMISSION_DENIED\"] = 10100] = \"PERMISSION_DENIED\";\n    /**\n     * @generated from enum value: TIMEOUT = 10200;\n     */\n    ErrorCode[ErrorCode[\"TIMEOUT\"] = 10200] = \"TIMEOUT\";\n    /**\n     * @generated from enum value: CANCELED = 10300;\n     */\n    ErrorCode[ErrorCode[\"CANCELED\"] = 10300] = \"CANCELED\";\n    /**\n     * @generated from enum value: BAD_REQUEST = 10400;\n     */\n    ErrorCode[ErrorCode[\"BAD_REQUEST\"] = 10400] = \"BAD_REQUEST\";\n    /**\n     * @generated from enum value: CLIENT_OUTDATED = 10426;\n     */\n    ErrorCode[ErrorCode[\"CLIENT_OUTDATED\"] = 10426] = \"CLIENT_OUTDATED\";\n    /**\n     * @generated from enum value: INTERNAL = 10500;\n     */\n    ErrorCode[ErrorCode[\"INTERNAL\"] = 10500] = \"INTERNAL\";\n    /**\n     * Account\n     *\n     * @generated from enum value: EMAIL_TAKEN = 20100;\n     */\n    ErrorCode[ErrorCode[\"EMAIL_TAKEN\"] = 20100] = \"EMAIL_TAKEN\";\n    /**\n     * @generated from enum value: INVALID_EMAIL = 20101;\n     */\n    ErrorCode[ErrorCode[\"INVALID_EMAIL\"] = 20101] = \"INVALID_EMAIL\";\n    /**\n     * @generated from enum value: EMAIL_ALREADY_VERIFIED = 20102;\n     */\n    ErrorCode[ErrorCode[\"EMAIL_ALREADY_VERIFIED\"] = 20102] = \"EMAIL_ALREADY_VERIFIED\";\n    /**\n     * @generated from enum value: EMAIL_REQUIRED = 20103;\n     */\n    ErrorCode[ErrorCode[\"EMAIL_REQUIRED\"] = 20103] = \"EMAIL_REQUIRED\";\n    /**\n     * @generated from enum value: INVALID_LOCALE = 20105;\n     */\n    ErrorCode[ErrorCode[\"INVALID_LOCALE\"] = 20105] = \"INVALID_LOCALE\";\n    /**\n     * @generated from enum value: EMAIL_INVITE_NOT_ACTIVE = 20106;\n     */\n    ErrorCode[ErrorCode[\"EMAIL_INVITE_NOT_ACTIVE\"] = 20106] = \"EMAIL_INVITE_NOT_ACTIVE\";\n    /**\n     * @generated from enum value: EMAIL_TAKEN_NOT_RECOVERABLE = 20107;\n     */\n    ErrorCode[ErrorCode[\"EMAIL_TAKEN_NOT_RECOVERABLE\"] = 20107] = \"EMAIL_TAKEN_NOT_RECOVERABLE\";\n    /**\n     * @generated from enum value: MALFORMED_USER_SETTINGS = 20108;\n     */\n    ErrorCode[ErrorCode[\"MALFORMED_USER_SETTINGS\"] = 20108] = \"MALFORMED_USER_SETTINGS\";\n    /**\n     * @generated from enum value: EMAIL_TAKEN_VERIFIED_DOMAIN = 20109;\n     */\n    ErrorCode[ErrorCode[\"EMAIL_TAKEN_VERIFIED_DOMAIN\"] = 20109] = \"EMAIL_TAKEN_VERIFIED_DOMAIN\";\n    /**\n     * @generated from enum value: EMAIL_TAKEN_ORG_ADMIN_RECOVERABLE = 20110;\n     */\n    ErrorCode[ErrorCode[\"EMAIL_TAKEN_ORG_ADMIN_RECOVERABLE\"] = 20110] = \"EMAIL_TAKEN_ORG_ADMIN_RECOVERABLE\";\n    /**\n     * @generated from enum value: USER_NOT_FOUND = 20400;\n     */\n    ErrorCode[ErrorCode[\"USER_NOT_FOUND\"] = 20400] = \"USER_NOT_FOUND\";\n    /**\n     * @generated from enum value: SESSION_NOT_FOUND = 20410;\n     */\n    ErrorCode[ErrorCode[\"SESSION_NOT_FOUND\"] = 20410] = \"SESSION_NOT_FOUND\";\n    /**\n     * @generated from enum value: INVALID_TIMEOUT = 20420;\n     */\n    ErrorCode[ErrorCode[\"INVALID_TIMEOUT\"] = 20420] = \"INVALID_TIMEOUT\";\n    /**\n     * no longer in use\n     *\n     * @generated from enum value: SESSION_ALREADY_UNLOCKED = 20430;\n     */\n    ErrorCode[ErrorCode[\"SESSION_ALREADY_UNLOCKED\"] = 20430] = \"SESSION_ALREADY_UNLOCKED\";\n    /**\n     * @generated from enum value: SESSION_NOT_UNLOCKED = 20431;\n     */\n    ErrorCode[ErrorCode[\"SESSION_NOT_UNLOCKED\"] = 20431] = \"SESSION_NOT_UNLOCKED\";\n    /**\n     * @generated from enum value: INVITATION_NOT_FOUND = 20450;\n     */\n    ErrorCode[ErrorCode[\"INVITATION_NOT_FOUND\"] = 20450] = \"INVITATION_NOT_FOUND\";\n    /**\n     * @generated from enum value: INVALID_VERIFICATION_TOKEN = 20460;\n     */\n    ErrorCode[ErrorCode[\"INVALID_VERIFICATION_TOKEN\"] = 20460] = \"INVALID_VERIFICATION_TOKEN\";\n    /**\n     * @generated from enum value: NOT_ALLOWED_FOR_USER_TYPE = 20470;\n     */\n    ErrorCode[ErrorCode[\"NOT_ALLOWED_FOR_USER_TYPE\"] = 20470] = \"NOT_ALLOWED_FOR_USER_TYPE\";\n    /**\n     * @generated from enum value: MALFORMED_CLIENT_SETTINGS = 20480;\n     */\n    ErrorCode[ErrorCode[\"MALFORMED_CLIENT_SETTINGS\"] = 20480] = \"MALFORMED_CLIENT_SETTINGS\";\n    /**\n     * @generated from enum value: REGISTER_USE_LEGACY = 20500;\n     */\n    ErrorCode[ErrorCode[\"REGISTER_USE_LEGACY\"] = 20500] = \"REGISTER_USE_LEGACY\";\n    /**\n     * Credential\n     *\n     * @generated from enum value: MISSING_CREDENTIALS = 30100;\n     */\n    ErrorCode[ErrorCode[\"MISSING_CREDENTIALS\"] = 30100] = \"MISSING_CREDENTIALS\";\n    /**\n     * @generated from enum value: INVALID_SIGNATURE = 30400;\n     */\n    ErrorCode[ErrorCode[\"INVALID_SIGNATURE\"] = 30400] = \"INVALID_SIGNATURE\";\n    /**\n     * @generated from enum value: INVALID_CHALLENGE = 30410;\n     */\n    ErrorCode[ErrorCode[\"INVALID_CHALLENGE\"] = 30410] = \"INVALID_CHALLENGE\";\n    /**\n     * @generated from enum value: INVALID_CREDENTIALS = 30420;\n     */\n    ErrorCode[ErrorCode[\"INVALID_CREDENTIALS\"] = 30420] = \"INVALID_CREDENTIALS\";\n    /**\n     * @generated from enum value: CHALLENGE_USER_MISMATCH = 30430;\n     */\n    ErrorCode[ErrorCode[\"CHALLENGE_USER_MISMATCH\"] = 30430] = \"CHALLENGE_USER_MISMATCH\";\n    /**\n     * @generated from enum value: LONG_POLL_CHANNEL_NOT_FOUND = 30440;\n     */\n    ErrorCode[ErrorCode[\"LONG_POLL_CHANNEL_NOT_FOUND\"] = 30440] = \"LONG_POLL_CHANNEL_NOT_FOUND\";\n    /**\n     * @generated from enum value: LONG_POLL_CHANNEL_ALREADY_EXISTS = 30441;\n     */\n    ErrorCode[ErrorCode[\"LONG_POLL_CHANNEL_ALREADY_EXISTS\"] = 30441] = \"LONG_POLL_CHANNEL_ALREADY_EXISTS\";\n    /**\n     * @generated from enum value: INVALID_USER_SWITCH = 30450;\n     */\n    ErrorCode[ErrorCode[\"INVALID_USER_SWITCH\"] = 30450] = \"INVALID_USER_SWITCH\";\n    /**\n     * @generated from enum value: INVALID_SESSION_TYPE = 30460;\n     */\n    ErrorCode[ErrorCode[\"INVALID_SESSION_TYPE\"] = 30460] = \"INVALID_SESSION_TYPE\";\n    /**\n     * Authenticator\n     *\n     * @generated from enum value: AUTHENTICATOR_BLOCK_OUT_OF_SYNC = 40100;\n     */\n    ErrorCode[ErrorCode[\"AUTHENTICATOR_BLOCK_OUT_OF_SYNC\"] = 40100] = \"AUTHENTICATOR_BLOCK_OUT_OF_SYNC\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_NOT_FOUND = 40400;\n     */\n    ErrorCode[ErrorCode[\"AUTHENTICATOR_NOT_FOUND\"] = 40400] = \"AUTHENTICATOR_NOT_FOUND\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_CHANNEL_NOT_FOUND = 40410;\n     */\n    ErrorCode[ErrorCode[\"AUTHENTICATOR_CHANNEL_NOT_FOUND\"] = 40410] = \"AUTHENTICATOR_CHANNEL_NOT_FOUND\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_CHANNEL_ALREADY_CLAIMED = 40411;\n     */\n    ErrorCode[ErrorCode[\"AUTHENTICATOR_CHANNEL_ALREADY_CLAIMED\"] = 40411] = \"AUTHENTICATOR_CHANNEL_ALREADY_CLAIMED\";\n    /**\n     * @generated from enum value: NO_AUTHENTICATOR_OPERATION = 40420;\n     */\n    ErrorCode[ErrorCode[\"NO_AUTHENTICATOR_OPERATION\"] = 40420] = \"NO_AUTHENTICATOR_OPERATION\";\n    /**\n     * @generated from enum value: MISSING_AUTHENTICATOR_BLOCK = 40430;\n     */\n    ErrorCode[ErrorCode[\"MISSING_AUTHENTICATOR_BLOCK\"] = 40430] = \"MISSING_AUTHENTICATOR_BLOCK\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_BLOCK_NOT_FOUND = 40440;\n     */\n    ErrorCode[ErrorCode[\"AUTHENTICATOR_BLOCK_NOT_FOUND\"] = 40440] = \"AUTHENTICATOR_BLOCK_NOT_FOUND\";\n    /**\n     * @generated from enum value: AUTHENTICATOR_BLOCK_EXISTS = 40450;\n     */\n    ErrorCode[ErrorCode[\"AUTHENTICATOR_BLOCK_EXISTS\"] = 40450] = \"AUTHENTICATOR_BLOCK_EXISTS\";\n    /**\n     * @generated from enum value: INVALID_AUTHENTICATOR_TYPE = 40460;\n     */\n    ErrorCode[ErrorCode[\"INVALID_AUTHENTICATOR_TYPE\"] = 40460] = \"INVALID_AUTHENTICATOR_TYPE\";\n    /**\n     * @generated from enum value: INVALID_RECIPIENT = 40500;\n     */\n    ErrorCode[ErrorCode[\"INVALID_RECIPIENT\"] = 40500] = \"INVALID_RECIPIENT\";\n    /**\n     * Vault\n     *\n     * @generated from enum value: VAULT_OUT_OF_SYNC = 50100;\n     */\n    ErrorCode[ErrorCode[\"VAULT_OUT_OF_SYNC\"] = 50100] = \"VAULT_OUT_OF_SYNC\";\n    /**\n     * @generated from enum value: NOT_ALLOWED_FOR_VAULT = 50110;\n     */\n    ErrorCode[ErrorCode[\"NOT_ALLOWED_FOR_VAULT\"] = 50110] = \"NOT_ALLOWED_FOR_VAULT\";\n    /**\n     * @generated from enum value: VAULT_INSUFFICIENT_ACCESS = 50120;\n     */\n    ErrorCode[ErrorCode[\"VAULT_INSUFFICIENT_ACCESS\"] = 50120] = \"VAULT_INSUFFICIENT_ACCESS\";\n    /**\n     * @generated from enum value: EMPTY_COMMIT = 50200;\n     */\n    ErrorCode[ErrorCode[\"EMPTY_COMMIT\"] = 50200] = \"EMPTY_COMMIT\";\n    /**\n     * @generated from enum value: VAULT_NOT_FOUND = 50400;\n     */\n    ErrorCode[ErrorCode[\"VAULT_NOT_FOUND\"] = 50400] = \"VAULT_NOT_FOUND\";\n    /**\n     * @generated from enum value: MISSING_VAULT_AUTHENTICATOR_LOCK = 50410;\n     */\n    ErrorCode[ErrorCode[\"MISSING_VAULT_AUTHENTICATOR_LOCK\"] = 50410] = \"MISSING_VAULT_AUTHENTICATOR_LOCK\";\n    /**\n     * @generated from enum value: MISSING_VAULT_PROFILE_LOCK = 50411;\n     */\n    ErrorCode[ErrorCode[\"MISSING_VAULT_PROFILE_LOCK\"] = 50411] = \"MISSING_VAULT_PROFILE_LOCK\";\n    /**\n     * @generated from enum value: MISSING_VAULT = 50420;\n     */\n    ErrorCode[ErrorCode[\"MISSING_VAULT\"] = 50420] = \"MISSING_VAULT\";\n    /**\n     * @generated from enum value: INVALID_UPDATE_TIME = 50430;\n     */\n    ErrorCode[ErrorCode[\"INVALID_UPDATE_TIME\"] = 50430] = \"INVALID_UPDATE_TIME\";\n    /**\n     * @generated from enum value: INVALID_VAULT_TYPE = 50431;\n     */\n    ErrorCode[ErrorCode[\"INVALID_VAULT_TYPE\"] = 50431] = \"INVALID_VAULT_TYPE\";\n    /**\n     * @generated from enum value: MISSING_VAULT_ADMIN = 50440;\n     */\n    ErrorCode[ErrorCode[\"MISSING_VAULT_ADMIN\"] = 50440] = \"MISSING_VAULT_ADMIN\";\n    /**\n     * @generated from enum value: VAULT_DIRTY = 50450;\n     */\n    ErrorCode[ErrorCode[\"VAULT_DIRTY\"] = 50450] = \"VAULT_DIRTY\";\n    /**\n     * @generated from enum value: MISSING_ENCRYPTED_VAULT_MESSAGE_PRIVATE_KEY = 50460;\n     */\n    ErrorCode[ErrorCode[\"MISSING_ENCRYPTED_VAULT_MESSAGE_PRIVATE_KEY\"] = 50460] = \"MISSING_ENCRYPTED_VAULT_MESSAGE_PRIVATE_KEY\";\n    /**\n     * @generated from enum value: MISSING_VAULT_MESSAGE_PUBLIC_KEY = 50461;\n     */\n    ErrorCode[ErrorCode[\"MISSING_VAULT_MESSAGE_PUBLIC_KEY\"] = 50461] = \"MISSING_VAULT_MESSAGE_PUBLIC_KEY\";\n    /**\n     * @generated from enum value: UNHANDLED_VAULT_MESSAGE = 50462;\n     */\n    ErrorCode[ErrorCode[\"UNHANDLED_VAULT_MESSAGE\"] = 50462] = \"UNHANDLED_VAULT_MESSAGE\";\n    /**\n     * @generated from enum value: INVALID_VAULT_MESSAGE_TYPE = 50463;\n     */\n    ErrorCode[ErrorCode[\"INVALID_VAULT_MESSAGE_TYPE\"] = 50463] = \"INVALID_VAULT_MESSAGE_TYPE\";\n    /**\n     * @generated from enum value: VAULT_MESSAGE_NOT_FOUND = 50464;\n     */\n    ErrorCode[ErrorCode[\"VAULT_MESSAGE_NOT_FOUND\"] = 50464] = \"VAULT_MESSAGE_NOT_FOUND\";\n    /**\n     * @generated from enum value: VAULT_INBOX_SLUG_INVALID = 50470;\n     */\n    ErrorCode[ErrorCode[\"VAULT_INBOX_SLUG_INVALID\"] = 50470] = \"VAULT_INBOX_SLUG_INVALID\";\n    /**\n     * @generated from enum value: VAULT_INBOX_SLUG_TAKEN = 50471;\n     */\n    ErrorCode[ErrorCode[\"VAULT_INBOX_SLUG_TAKEN\"] = 50471] = \"VAULT_INBOX_SLUG_TAKEN\";\n    /**\n     * Organization\n     *\n     * @generated from enum value: ORGANIZATION_INSUEFFICIENT_ACCESS = 60100;\n     */\n    ErrorCode[ErrorCode[\"ORGANIZATION_INSUEFFICIENT_ACCESS\"] = 60100] = \"ORGANIZATION_INSUEFFICIENT_ACCESS\";\n    /**\n     * @generated from enum value: NOT_ALLOWED_FOR_ORGANIZATION = 60101;\n     */\n    ErrorCode[ErrorCode[\"NOT_ALLOWED_FOR_ORGANIZATION\"] = 60101] = \"NOT_ALLOWED_FOR_ORGANIZATION\";\n    /**\n     * @generated from enum value: ORGANIZATION_NOT_FOUND = 60400;\n     */\n    ErrorCode[ErrorCode[\"ORGANIZATION_NOT_FOUND\"] = 60400] = \"ORGANIZATION_NOT_FOUND\";\n    /**\n     * ignored at the moment\n     *\n     * @generated from enum value: USER_ALREADY_IN_ORGANIZATION = 60401;\n     */\n    ErrorCode[ErrorCode[\"USER_ALREADY_IN_ORGANIZATION\"] = 60401] = \"USER_ALREADY_IN_ORGANIZATION\";\n    /**\n     * @generated from enum value: ORGANIZATION_MISSING_ADMIN = 60410;\n     */\n    ErrorCode[ErrorCode[\"ORGANIZATION_MISSING_ADMIN\"] = 60410] = \"ORGANIZATION_MISSING_ADMIN\";\n    /**\n     * @generated from enum value: INVALID_ORGANIZATION_NAME = 60430;\n     */\n    ErrorCode[ErrorCode[\"INVALID_ORGANIZATION_NAME\"] = 60430] = \"INVALID_ORGANIZATION_NAME\";\n    /**\n     * @generated from enum value: ORGANIZATION_INVALID_CONTACT = 60431;\n     */\n    ErrorCode[ErrorCode[\"ORGANIZATION_INVALID_CONTACT\"] = 60431] = \"ORGANIZATION_INVALID_CONTACT\";\n    /**\n     * @generated from enum value: COUPON_INVALID = 60440;\n     */\n    ErrorCode[ErrorCode[\"COUPON_INVALID\"] = 60440] = \"COUPON_INVALID\";\n    /**\n     * @generated from enum value: COUPON_ALREADY_REDEEMED = 60441;\n     */\n    ErrorCode[ErrorCode[\"COUPON_ALREADY_REDEEMED\"] = 60441] = \"COUPON_ALREADY_REDEEMED\";\n    /**\n     * @generated from enum value: OTHER_PROFILE_EMAIL_CONFLICTS = 60450;\n     */\n    ErrorCode[ErrorCode[\"OTHER_PROFILE_EMAIL_CONFLICTS\"] = 60450] = \"OTHER_PROFILE_EMAIL_CONFLICTS\";\n    /**\n     * @generated from enum value: INVALID_ORGANIZATION_DELETION_TOKEN = 60460;\n     */\n    ErrorCode[ErrorCode[\"INVALID_ORGANIZATION_DELETION_TOKEN\"] = 60460] = \"INVALID_ORGANIZATION_DELETION_TOKEN\";\n    /**\n     * @generated from enum value: MALFORMED_PASSWORD_POLICY = 60470;\n     */\n    ErrorCode[ErrorCode[\"MALFORMED_PASSWORD_POLICY\"] = 60470] = \"MALFORMED_PASSWORD_POLICY\";\n    /**\n     * @generated from enum value: MALFORMED_PARENT_ORGANIZATION_METADATA = 60471;\n     */\n    ErrorCode[ErrorCode[\"MALFORMED_PARENT_ORGANIZATION_METADATA\"] = 60471] = \"MALFORMED_PARENT_ORGANIZATION_METADATA\";\n    /**\n     * Profile\n     *\n     * @generated from enum value: PROFILE_NOT_FOUND = 70400;\n     */\n    ErrorCode[ErrorCode[\"PROFILE_NOT_FOUND\"] = 70400] = \"PROFILE_NOT_FOUND\";\n    /**\n     * @generated from enum value: PROFILE_ALREADY_ENABLED = 70401;\n     */\n    ErrorCode[ErrorCode[\"PROFILE_ALREADY_ENABLED\"] = 70401] = \"PROFILE_ALREADY_ENABLED\";\n    /**\n     * @generated from enum value: PROFILE_ALREADY_CONNECTED = 70402;\n     */\n    ErrorCode[ErrorCode[\"PROFILE_ALREADY_CONNECTED\"] = 70402] = \"PROFILE_ALREADY_CONNECTED\";\n    /**\n     * @generated from enum value: PROFILE_STARTCODE_INACTIVE = 70403;\n     */\n    ErrorCode[ErrorCode[\"PROFILE_STARTCODE_INACTIVE\"] = 70403] = \"PROFILE_STARTCODE_INACTIVE\";\n    /**\n     * @generated from enum value: MISSING_PROFILE_AUTHENTICATOR_LOCK = 70410;\n     */\n    ErrorCode[ErrorCode[\"MISSING_PROFILE_AUTHENTICATOR_LOCK\"] = 70410] = \"MISSING_PROFILE_AUTHENTICATOR_LOCK\";\n    /**\n     * @generated from enum value: PROFILE_OUT_OF_SYNC = 70411;\n     */\n    ErrorCode[ErrorCode[\"PROFILE_OUT_OF_SYNC\"] = 70411] = \"PROFILE_OUT_OF_SYNC\";\n    /**\n     * @generated from enum value: MISSING_PROFILE_PROFILE_LOCK = 70412;\n     */\n    ErrorCode[ErrorCode[\"MISSING_PROFILE_PROFILE_LOCK\"] = 70412] = \"MISSING_PROFILE_PROFILE_LOCK\";\n    /**\n     * @generated from enum value: START_CODE_INVALID = 70430;\n     */\n    ErrorCode[ErrorCode[\"START_CODE_INVALID\"] = 70430] = \"START_CODE_INVALID\";\n    /**\n     * @generated from enum value: START_CODE_BLOCKED = 70431;\n     */\n    ErrorCode[ErrorCode[\"START_CODE_BLOCKED\"] = 70431] = \"START_CODE_BLOCKED\";\n    /**\n     * @generated from enum value: START_CODE_MISSING = 70432;\n     */\n    ErrorCode[ErrorCode[\"START_CODE_MISSING\"] = 70432] = \"START_CODE_MISSING\";\n    /**\n     * @generated from enum value: NOT_ALLOWED_FOR_PROFILE = 70433;\n     */\n    ErrorCode[ErrorCode[\"NOT_ALLOWED_FOR_PROFILE\"] = 70433] = \"NOT_ALLOWED_FOR_PROFILE\";\n    /**\n     * Integrations\n     *\n     * @generated from enum value: INTEGRATION_NOT_INITIALIZED = 80400;\n     */\n    ErrorCode[ErrorCode[\"INTEGRATION_NOT_INITIALIZED\"] = 80400] = \"INTEGRATION_NOT_INITIALIZED\";\n    /**\n     * @generated from enum value: INTEGRATION_UNAUTHORIZED = 80401;\n     */\n    ErrorCode[ErrorCode[\"INTEGRATION_UNAUTHORIZED\"] = 80401] = \"INTEGRATION_UNAUTHORIZED\";\n    /**\n     * @generated from enum value: INTEGRATION_INTERNAL = 80500;\n     */\n    ErrorCode[ErrorCode[\"INTEGRATION_INTERNAL\"] = 80500] = \"INTEGRATION_INTERNAL\";\n    /**\n     * Auditlog\n     *\n     * @generated from enum value: AUDITLOG_MALFORMED_EVENT = 90400;\n     */\n    ErrorCode[ErrorCode[\"AUDITLOG_MALFORMED_EVENT\"] = 90400] = \"AUDITLOG_MALFORMED_EVENT\";\n    /**\n     * @generated from enum value: AUDITLOG_ADMIN_INVALID_CREDENTIALS = 90420;\n     */\n    ErrorCode[ErrorCode[\"AUDITLOG_ADMIN_INVALID_CREDENTIALS\"] = 90420] = \"AUDITLOG_ADMIN_INVALID_CREDENTIALS\";\n    /**\n     * @generated from enum value: AUDITLOG_WRITE_INVALID_CREDENTIALS = 90421;\n     */\n    ErrorCode[ErrorCode[\"AUDITLOG_WRITE_INVALID_CREDENTIALS\"] = 90421] = \"AUDITLOG_WRITE_INVALID_CREDENTIALS\";\n    /**\n     * @generated from enum value: AUDITLOG_SUBMISSION_ERROR = 90500;\n     */\n    ErrorCode[ErrorCode[\"AUDITLOG_SUBMISSION_ERROR\"] = 90500] = \"AUDITLOG_SUBMISSION_ERROR\";\n    /**\n     * WebAuthn\n     *\n     * @generated from enum value: WEBAUTHN_VALIDATE_ERROR = 100400;\n     */\n    ErrorCode[ErrorCode[\"WEBAUTHN_VALIDATE_ERROR\"] = 100400] = \"WEBAUTHN_VALIDATE_ERROR\";\n    /**\n     * @generated from enum value: WEBAUTHN_DATA_ERROR = 100401;\n     */\n    ErrorCode[ErrorCode[\"WEBAUTHN_DATA_ERROR\"] = 100401] = \"WEBAUTHN_DATA_ERROR\";\n    /**\n     * @generated from enum value: WEBAUTHN_REQUEST_NOT_FOUND = 100402;\n     */\n    ErrorCode[ErrorCode[\"WEBAUTHN_REQUEST_NOT_FOUND\"] = 100402] = \"WEBAUTHN_REQUEST_NOT_FOUND\";\n    /**\n     * @generated from enum value: WEBAUTHN_INVALID_TRANSPORT = 100403;\n     */\n    ErrorCode[ErrorCode[\"WEBAUTHN_INVALID_TRANSPORT\"] = 100403] = \"WEBAUTHN_INVALID_TRANSPORT\";\n    /**\n     * @generated from enum value: MISSING_WEBAUTHN_CREDENTIAL = 100404;\n     */\n    ErrorCode[ErrorCode[\"MISSING_WEBAUTHN_CREDENTIAL\"] = 100404] = \"MISSING_WEBAUTHN_CREDENTIAL\";\n    /**\n     * @generated from enum value: MISSING_WEBAUTHN_RESPONSE = 100405;\n     */\n    ErrorCode[ErrorCode[\"MISSING_WEBAUTHN_RESPONSE\"] = 100405] = \"MISSING_WEBAUTHN_RESPONSE\";\n    /**\n     * @generated from enum value: WEBAUTHN_MISSING_USER_VERIFICATION = 100406;\n     */\n    ErrorCode[ErrorCode[\"WEBAUTHN_MISSING_USER_VERIFICATION\"] = 100406] = \"WEBAUTHN_MISSING_USER_VERIFICATION\";\n    /**\n     * ShareLink\n     *\n     * @generated from enum value: SHARE_LINK_NOT_FOUND = 110400;\n     */\n    ErrorCode[ErrorCode[\"SHARE_LINK_NOT_FOUND\"] = 110400] = \"SHARE_LINK_NOT_FOUND\";\n    /**\n     * UserConfirmation\n     *\n     * @generated from enum value: USER_CONFIRMATION_NOT_FOUND = 120400;\n     */\n    ErrorCode[ErrorCode[\"USER_CONFIRMATION_NOT_FOUND\"] = 120400] = \"USER_CONFIRMATION_NOT_FOUND\";\n})(ErrorCode || (ErrorCode = {}));\n// Retrieve enum metadata with: proto3.getEnumType(ErrorCode)\nproto3.util.setEnumType(ErrorCode, \"domainerr.ErrorCode\", [\n    { no: 0, name: \"UNDEFINED\" },\n    { no: 10100, name: \"PERMISSION_DENIED\" },\n    { no: 10200, name: \"TIMEOUT\" },\n    { no: 10300, name: \"CANCELED\" },\n    { no: 10400, name: \"BAD_REQUEST\" },\n    { no: 10426, name: \"CLIENT_OUTDATED\" },\n    { no: 10500, name: \"INTERNAL\" },\n    { no: 20100, name: \"EMAIL_TAKEN\" },\n    { no: 20101, name: \"INVALID_EMAIL\" },\n    { no: 20102, name: \"EMAIL_ALREADY_VERIFIED\" },\n    { no: 20103, name: \"EMAIL_REQUIRED\" },\n    { no: 20105, name: \"INVALID_LOCALE\" },\n    { no: 20106, name: \"EMAIL_INVITE_NOT_ACTIVE\" },\n    { no: 20107, name: \"EMAIL_TAKEN_NOT_RECOVERABLE\" },\n    { no: 20108, name: \"MALFORMED_USER_SETTINGS\" },\n    { no: 20109, name: \"EMAIL_TAKEN_VERIFIED_DOMAIN\" },\n    { no: 20110, name: \"EMAIL_TAKEN_ORG_ADMIN_RECOVERABLE\" },\n    { no: 20400, name: \"USER_NOT_FOUND\" },\n    { no: 20410, name: \"SESSION_NOT_FOUND\" },\n    { no: 20420, name: \"INVALID_TIMEOUT\" },\n    { no: 20430, name: \"SESSION_ALREADY_UNLOCKED\" },\n    { no: 20431, name: \"SESSION_NOT_UNLOCKED\" },\n    { no: 20450, name: \"INVITATION_NOT_FOUND\" },\n    { no: 20460, name: \"INVALID_VERIFICATION_TOKEN\" },\n    { no: 20470, name: \"NOT_ALLOWED_FOR_USER_TYPE\" },\n    { no: 20480, name: \"MALFORMED_CLIENT_SETTINGS\" },\n    { no: 20500, name: \"REGISTER_USE_LEGACY\" },\n    { no: 30100, name: \"MISSING_CREDENTIALS\" },\n    { no: 30400, name: \"INVALID_SIGNATURE\" },\n    { no: 30410, name: \"INVALID_CHALLENGE\" },\n    { no: 30420, name: \"INVALID_CREDENTIALS\" },\n    { no: 30430, name: \"CHALLENGE_USER_MISMATCH\" },\n    { no: 30440, name: \"LONG_POLL_CHANNEL_NOT_FOUND\" },\n    { no: 30441, name: \"LONG_POLL_CHANNEL_ALREADY_EXISTS\" },\n    { no: 30450, name: \"INVALID_USER_SWITCH\" },\n    { no: 30460, name: \"INVALID_SESSION_TYPE\" },\n    { no: 40100, name: \"AUTHENTICATOR_BLOCK_OUT_OF_SYNC\" },\n    { no: 40400, name: \"AUTHENTICATOR_NOT_FOUND\" },\n    { no: 40410, name: \"AUTHENTICATOR_CHANNEL_NOT_FOUND\" },\n    { no: 40411, name: \"AUTHENTICATOR_CHANNEL_ALREADY_CLAIMED\" },\n    { no: 40420, name: \"NO_AUTHENTICATOR_OPERATION\" },\n    { no: 40430, name: \"MISSING_AUTHENTICATOR_BLOCK\" },\n    { no: 40440, name: \"AUTHENTICATOR_BLOCK_NOT_FOUND\" },\n    { no: 40450, name: \"AUTHENTICATOR_BLOCK_EXISTS\" },\n    { no: 40460, name: \"INVALID_AUTHENTICATOR_TYPE\" },\n    { no: 40500, name: \"INVALID_RECIPIENT\" },\n    { no: 50100, name: \"VAULT_OUT_OF_SYNC\" },\n    { no: 50110, name: \"NOT_ALLOWED_FOR_VAULT\" },\n    { no: 50120, name: \"VAULT_INSUFFICIENT_ACCESS\" },\n    { no: 50200, name: \"EMPTY_COMMIT\" },\n    { no: 50400, name: \"VAULT_NOT_FOUND\" },\n    { no: 50410, name: \"MISSING_VAULT_AUTHENTICATOR_LOCK\" },\n    { no: 50411, name: \"MISSING_VAULT_PROFILE_LOCK\" },\n    { no: 50420, name: \"MISSING_VAULT\" },\n    { no: 50430, name: \"INVALID_UPDATE_TIME\" },\n    { no: 50431, name: \"INVALID_VAULT_TYPE\" },\n    { no: 50440, name: \"MISSING_VAULT_ADMIN\" },\n    { no: 50450, name: \"VAULT_DIRTY\" },\n    { no: 50460, name: \"MISSING_ENCRYPTED_VAULT_MESSAGE_PRIVATE_KEY\" },\n    { no: 50461, name: \"MISSING_VAULT_MESSAGE_PUBLIC_KEY\" },\n    { no: 50462, name: \"UNHANDLED_VAULT_MESSAGE\" },\n    { no: 50463, name: \"INVALID_VAULT_MESSAGE_TYPE\" },\n    { no: 50464, name: \"VAULT_MESSAGE_NOT_FOUND\" },\n    { no: 50470, name: \"VAULT_INBOX_SLUG_INVALID\" },\n    { no: 50471, name: \"VAULT_INBOX_SLUG_TAKEN\" },\n    { no: 60100, name: \"ORGANIZATION_INSUEFFICIENT_ACCESS\" },\n    { no: 60101, name: \"NOT_ALLOWED_FOR_ORGANIZATION\" },\n    { no: 60400, name: \"ORGANIZATION_NOT_FOUND\" },\n    { no: 60401, name: \"USER_ALREADY_IN_ORGANIZATION\" },\n    { no: 60410, name: \"ORGANIZATION_MISSING_ADMIN\" },\n    { no: 60430, name: \"INVALID_ORGANIZATION_NAME\" },\n    { no: 60431, name: \"ORGANIZATION_INVALID_CONTACT\" },\n    { no: 60440, name: \"COUPON_INVALID\" },\n    { no: 60441, name: \"COUPON_ALREADY_REDEEMED\" },\n    { no: 60450, name: \"OTHER_PROFILE_EMAIL_CONFLICTS\" },\n    { no: 60460, name: \"INVALID_ORGANIZATION_DELETION_TOKEN\" },\n    { no: 60470, name: \"MALFORMED_PASSWORD_POLICY\" },\n    { no: 60471, name: \"MALFORMED_PARENT_ORGANIZATION_METADATA\" },\n    { no: 70400, name: \"PROFILE_NOT_FOUND\" },\n    { no: 70401, name: \"PROFILE_ALREADY_ENABLED\" },\n    { no: 70402, name: \"PROFILE_ALREADY_CONNECTED\" },\n    { no: 70403, name: \"PROFILE_STARTCODE_INACTIVE\" },\n    { no: 70410, name: \"MISSING_PROFILE_AUTHENTICATOR_LOCK\" },\n    { no: 70411, name: \"PROFILE_OUT_OF_SYNC\" },\n    { no: 70412, name: \"MISSING_PROFILE_PROFILE_LOCK\" },\n    { no: 70430, name: \"START_CODE_INVALID\" },\n    { no: 70431, name: \"START_CODE_BLOCKED\" },\n    { no: 70432, name: \"START_CODE_MISSING\" },\n    { no: 70433, name: \"NOT_ALLOWED_FOR_PROFILE\" },\n    { no: 80400, name: \"INTEGRATION_NOT_INITIALIZED\" },\n    { no: 80401, name: \"INTEGRATION_UNAUTHORIZED\" },\n    { no: 80500, name: \"INTEGRATION_INTERNAL\" },\n    { no: 90400, name: \"AUDITLOG_MALFORMED_EVENT\" },\n    { no: 90420, name: \"AUDITLOG_ADMIN_INVALID_CREDENTIALS\" },\n    { no: 90421, name: \"AUDITLOG_WRITE_INVALID_CREDENTIALS\" },\n    { no: 90500, name: \"AUDITLOG_SUBMISSION_ERROR\" },\n    { no: 100400, name: \"WEBAUTHN_VALIDATE_ERROR\" },\n    { no: 100401, name: \"WEBAUTHN_DATA_ERROR\" },\n    { no: 100402, name: \"WEBAUTHN_REQUEST_NOT_FOUND\" },\n    { no: 100403, name: \"WEBAUTHN_INVALID_TRANSPORT\" },\n    { no: 100404, name: \"MISSING_WEBAUTHN_CREDENTIAL\" },\n    { no: 100405, name: \"MISSING_WEBAUTHN_RESPONSE\" },\n    { no: 100406, name: \"WEBAUTHN_MISSING_USER_VERIFICATION\" },\n    { no: 110400, name: \"SHARE_LINK_NOT_FOUND\" },\n    { no: 120400, name: \"USER_CONFIRMATION_NOT_FOUND\" },\n]);\n//# sourceMappingURL=error_codes_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file support_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.ReportPageProblem\n */\nexport var ReportPageProblem;\n(function (ReportPageProblem) {\n    /**\n     * @generated from enum value: REPORT_PAGE_PROBLEM_UNKNOWN = 0;\n     */\n    ReportPageProblem[ReportPageProblem[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: REPORT_PAGE_PROBLEM_OTHER = 1;\n     */\n    ReportPageProblem[ReportPageProblem[\"OTHER\"] = 1] = \"OTHER\";\n    /**\n     * @generated from enum value: REPORT_PAGE_PROBLEM_DETECTION = 2;\n     */\n    ReportPageProblem[ReportPageProblem[\"DETECTION\"] = 2] = \"DETECTION\";\n    /**\n     * @generated from enum value: REPORT_PAGE_PROBLEM_POSITION = 3;\n     */\n    ReportPageProblem[ReportPageProblem[\"POSITION\"] = 3] = \"POSITION\";\n    /**\n     * @generated from enum value: REPORT_PAGE_PROBLEM_SUBMISSION = 4;\n     */\n    ReportPageProblem[ReportPageProblem[\"SUBMISSION\"] = 4] = \"SUBMISSION\";\n    /**\n     * @generated from enum value: REPORT_PAGE_PROBLEM_AUTOFILL = 5;\n     */\n    ReportPageProblem[ReportPageProblem[\"AUTOFILL\"] = 5] = \"AUTOFILL\";\n    /**\n     * @generated from enum value: REPORT_PAGE_PROBLEM_FORM = 6;\n     */\n    ReportPageProblem[ReportPageProblem[\"FORM\"] = 6] = \"FORM\";\n})(ReportPageProblem || (ReportPageProblem = {}));\n// Retrieve enum metadata with: proto3.getEnumType(ReportPageProblem)\nproto3.util.setEnumType(ReportPageProblem, \"domain.ReportPageProblem\", [\n    { no: 0, name: \"REPORT_PAGE_PROBLEM_UNKNOWN\" },\n    { no: 1, name: \"REPORT_PAGE_PROBLEM_OTHER\" },\n    { no: 2, name: \"REPORT_PAGE_PROBLEM_DETECTION\" },\n    { no: 3, name: \"REPORT_PAGE_PROBLEM_POSITION\" },\n    { no: 4, name: \"REPORT_PAGE_PROBLEM_SUBMISSION\" },\n    { no: 5, name: \"REPORT_PAGE_PROBLEM_AUTOFILL\" },\n    { no: 6, name: \"REPORT_PAGE_PROBLEM_FORM\" },\n]);\n/**\n * @generated from message domain.SendMessageRequest\n */\nexport class SendMessageRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string subject = 1;\n         */\n        this.subject = \"\";\n        /**\n         * @generated from field: string message = 2;\n         */\n        this.message = \"\";\n        /**\n         * optional\n         *\n         * @generated from field: string profile_id = 4;\n         */\n        this.profileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SendMessageRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SendMessageRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SendMessageRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SendMessageRequest, a, b);\n    }\n}\nSendMessageRequest.runtime = proto3;\nSendMessageRequest.typeName = \"domain.SendMessageRequest\";\nSendMessageRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"subject\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SendMessageResponse\n */\nexport class SendMessageResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SendMessageResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SendMessageResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SendMessageResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SendMessageResponse, a, b);\n    }\n}\nSendMessageResponse.runtime = proto3;\nSendMessageResponse.typeName = \"domain.SendMessageResponse\";\nSendMessageResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.ReportPageRequest\n */\nexport class ReportPageRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string url = 1;\n         */\n        this.url = \"\";\n        /**\n         * @generated from field: domain.ReportPageProblem problem = 2;\n         */\n        this.problem = ReportPageProblem.UNKNOWN;\n        /**\n         * @generated from field: string comment = 3;\n         */\n        this.comment = \"\";\n        /**\n         * @generated from field: string screenshot = 4;\n         */\n        this.screenshot = \"\";\n        /**\n         * @generated from field: bool has_login = 5;\n         */\n        this.hasLogin = false;\n        /**\n         * @generated from field: bool has_hide_secrets_login = 6;\n         */\n        this.hasHideSecretsLogin = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ReportPageRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ReportPageRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ReportPageRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ReportPageRequest, a, b);\n    }\n}\nReportPageRequest.runtime = proto3;\nReportPageRequest.typeName = \"domain.ReportPageRequest\";\nReportPageRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"problem\", kind: \"enum\", T: proto3.getEnumType(ReportPageProblem) },\n    { no: 3, name: \"comment\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"screenshot\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"has_login\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"has_hide_secrets_login\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.ReportPageResponse\n */\nexport class ReportPageResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ReportPageResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ReportPageResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ReportPageResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ReportPageResponse, a, b);\n    }\n}\nReportPageResponse.runtime = proto3;\nReportPageResponse.typeName = \"domain.ReportPageResponse\";\nReportPageResponse.fields = proto3.util.newFieldList(() => []);\n//# sourceMappingURL=support_service_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file subscription_plan.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.SubscriptionPlan\n */\nexport var SubscriptionPlan;\n(function (SubscriptionPlan) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: SUBSCRIPTION_PLAN_UNKNOWN = 0;\n     */\n    SubscriptionPlan[SubscriptionPlan[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: SUBSCRIPTION_PLAN_MONTHLY = 1;\n     */\n    SubscriptionPlan[SubscriptionPlan[\"MONTHLY\"] = 1] = \"MONTHLY\";\n    /**\n     * @generated from enum value: SUBSCRIPTION_PLAN_YEARLY = 2;\n     */\n    SubscriptionPlan[SubscriptionPlan[\"YEARLY\"] = 2] = \"YEARLY\";\n})(SubscriptionPlan || (SubscriptionPlan = {}));\n// Retrieve enum metadata with: proto3.getEnumType(SubscriptionPlan)\nproto3.util.setEnumType(SubscriptionPlan, \"domain.SubscriptionPlan\", [\n    { no: 0, name: \"SUBSCRIPTION_PLAN_UNKNOWN\" },\n    { no: 1, name: \"SUBSCRIPTION_PLAN_MONTHLY\" },\n    { no: 2, name: \"SUBSCRIPTION_PLAN_YEARLY\" },\n]);\n//# sourceMappingURL=subscription_plan_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file user_confirmation_result_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.UserConfirmationResultType\n */\nexport var UserConfirmationResultType;\n(function (UserConfirmationResultType) {\n    /**\n     * @generated from enum value: USER_CONFIRMATION_RESULT_TYPE_OPEN = 0;\n     */\n    UserConfirmationResultType[UserConfirmationResultType[\"OPEN\"] = 0] = \"OPEN\";\n    /**\n     * @generated from enum value: USER_CONFIRMATION_RESULT_TYPE_ACCEPTED = 1;\n     */\n    UserConfirmationResultType[UserConfirmationResultType[\"ACCEPTED\"] = 1] = \"ACCEPTED\";\n    /**\n     * @generated from enum value: USER_CONFIRMATION_RESULT_TYPE_REJECTED = 2;\n     */\n    UserConfirmationResultType[UserConfirmationResultType[\"REJECTED\"] = 2] = \"REJECTED\";\n})(UserConfirmationResultType || (UserConfirmationResultType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(UserConfirmationResultType)\nproto3.util.setEnumType(UserConfirmationResultType, \"domain.UserConfirmationResultType\", [\n    { no: 0, name: \"USER_CONFIRMATION_RESULT_TYPE_OPEN\" },\n    { no: 1, name: \"USER_CONFIRMATION_RESULT_TYPE_ACCEPTED\" },\n    { no: 2, name: \"USER_CONFIRMATION_RESULT_TYPE_REJECTED\" },\n]);\n//# sourceMappingURL=user_confirmation_result_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file user_confirmation_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.UserConfirmationType\n */\nexport var UserConfirmationType;\n(function (UserConfirmationType) {\n    /**\n     * @generated from enum value: USER_CONFIRMATION_TYPE_UNKNOWN = 0;\n     */\n    UserConfirmationType[UserConfirmationType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: USER_CONFIRMATION_TYPE_DEBUG = 1;\n     */\n    UserConfirmationType[UserConfirmationType[\"DEBUG\"] = 1] = \"DEBUG\";\n    /**\n     * 10000 Prefix - General\n     *\n     * @generated from enum value: USER_CONFIRMATION_TYPE_USER_EXPORT_VAULT = 10001;\n     */\n    UserConfirmationType[UserConfirmationType[\"USER_EXPORT_VAULT\"] = 10001] = \"USER_EXPORT_VAULT\";\n    /**\n     * USER_CONFIRMATION_TYPE_USER_SHOW_BACKUP_CODE = 10001;\n     *\n     * @generated from enum value: USER_CONFIRMATION_TYPE_USER_EXPORT_ALL = 10002;\n     */\n    UserConfirmationType[UserConfirmationType[\"USER_EXPORT_ALL\"] = 10002] = \"USER_EXPORT_ALL\";\n    /**\n     * 30000 Prefix - Organization Admin\n     *\n     * USER_CONFIRMATION_TYPE_ORG_ADMIN_DEMOTE_SELF = 30001;\n     *\n     * @generated from enum value: USER_CONFIRMATION_TYPE_ORG_ADMIN_DELETE_ORG = 30000;\n     */\n    UserConfirmationType[UserConfirmationType[\"ORG_ADMIN_DELETE_ORG\"] = 30000] = \"ORG_ADMIN_DELETE_ORG\";\n})(UserConfirmationType || (UserConfirmationType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(UserConfirmationType)\nproto3.util.setEnumType(UserConfirmationType, \"domain.UserConfirmationType\", [\n    { no: 0, name: \"USER_CONFIRMATION_TYPE_UNKNOWN\" },\n    { no: 1, name: \"USER_CONFIRMATION_TYPE_DEBUG\" },\n    { no: 10001, name: \"USER_CONFIRMATION_TYPE_USER_EXPORT_VAULT\" },\n    { no: 10002, name: \"USER_CONFIRMATION_TYPE_USER_EXPORT_ALL\" },\n    { no: 30000, name: \"USER_CONFIRMATION_TYPE_ORG_ADMIN_DELETE_ORG\" },\n]);\n//# sourceMappingURL=user_confirmation_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file user_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.UserType\n */\nexport var UserType;\n(function (UserType) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: USER_TYPE_DEFAULT = 0;\n     */\n    UserType[UserType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    /**\n     * @generated from enum value: USER_TYPE_ORGANIZATION_SUPER = 1;\n     */\n    UserType[UserType[\"ORGANIZATION_SUPER\"] = 1] = \"ORGANIZATION_SUPER\";\n    /**\n     * @generated from enum value: USER_TYPE_ORGANIZATION_SERVICE = 2;\n     */\n    UserType[UserType[\"ORGANIZATION_SERVICE\"] = 2] = \"ORGANIZATION_SERVICE\";\n})(UserType || (UserType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(UserType)\nproto3.util.setEnumType(UserType, \"domain.UserType\", [\n    { no: 0, name: \"USER_TYPE_DEFAULT\" },\n    { no: 1, name: \"USER_TYPE_ORGANIZATION_SUPER\" },\n    { no: 2, name: \"USER_TYPE_ORGANIZATION_SERVICE\" },\n]);\n//# sourceMappingURL=user_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file vault_message_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.VaultMessageType\n */\nexport var VaultMessageType;\n(function (VaultMessageType) {\n    /**\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: VAULT_MESSAGE_TYPE_UNKNOWN = 0;\n     */\n    VaultMessageType[VaultMessageType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * generated by backend\n     *\n     * @generated from enum value: VAULT_MESSAGE_TYPE_LOGIN_INBOX_V1 = 1;\n     */\n    VaultMessageType[VaultMessageType[\"LOGIN_INBOX_V1\"] = 1] = \"LOGIN_INBOX_V1\";\n    /**\n     * @generated from enum value: VAULT_MESSAGE_TYPE_LINKED_VAULT_DELETED_V1 = 3;\n     */\n    VaultMessageType[VaultMessageType[\"LINKED_VAULT_DELETED_V1\"] = 3] = \"LINKED_VAULT_DELETED_V1\";\n    /**\n     * @generated from enum value: VAULT_MESSAGE_TYPE_SHARE_LINK_OPENED_V1 = 4;\n     */\n    VaultMessageType[VaultMessageType[\"SHARE_LINK_OPENED_V1\"] = 4] = \"SHARE_LINK_OPENED_V1\";\n    /**\n     * generated by frontend\n     *\n     * @generated from enum value: VAULT_MESSAGE_TYPE_LINKED_LOGIN_UPDATE_V1 = 2;\n     */\n    VaultMessageType[VaultMessageType[\"LINKED_LOGIN_UPDATE_V1\"] = 2] = \"LINKED_LOGIN_UPDATE_V1\";\n    /**\n     * used to test client behaviour on unknown message types\n     *\n     * @generated from enum value: VAULT_MESSAGE_TYPE_DEBUG = 999999;\n     */\n    VaultMessageType[VaultMessageType[\"DEBUG\"] = 999999] = \"DEBUG\";\n})(VaultMessageType || (VaultMessageType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(VaultMessageType)\nproto3.util.setEnumType(VaultMessageType, \"domain.VaultMessageType\", [\n    { no: 0, name: \"VAULT_MESSAGE_TYPE_UNKNOWN\" },\n    { no: 1, name: \"VAULT_MESSAGE_TYPE_LOGIN_INBOX_V1\" },\n    { no: 3, name: \"VAULT_MESSAGE_TYPE_LINKED_VAULT_DELETED_V1\" },\n    { no: 4, name: \"VAULT_MESSAGE_TYPE_SHARE_LINK_OPENED_V1\" },\n    { no: 2, name: \"VAULT_MESSAGE_TYPE_LINKED_LOGIN_UPDATE_V1\" },\n    { no: 999999, name: \"VAULT_MESSAGE_TYPE_DEBUG\" },\n]);\n//# sourceMappingURL=vault_message_type_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file client_type.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum domain.ClientType\n */\nexport var ClientType;\n(function (ClientType) {\n    /**\n     * Internal\n     * used as default value, see https://developers.google.com/protocol-buffers/docs/proto3#enum\n     *\n     * @generated from enum value: CLIENT_TYPE_UNKNOWN = 0;\n     */\n    ClientType[ClientType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * @generated from enum value: CLIENT_TYPE_TEST = 1;\n     */\n    ClientType[ClientType[\"TEST\"] = 1] = \"TEST\";\n    /**\n     * Web\n     *\n     * @generated from enum value: CLIENT_TYPE_WEB = 100;\n     */\n    ClientType[ClientType[\"WEB\"] = 100] = \"WEB\";\n    /**\n     * Mobile\n     * Android\n     *\n     * @generated from enum value: CLIENT_TYPE_AND = 200;\n     */\n    ClientType[ClientType[\"AND\"] = 200] = \"AND\";\n    /**\n     * iOS\n     *\n     * @generated from enum value: CLIENT_TYPE_IOS = 210;\n     */\n    ClientType[ClientType[\"IOS\"] = 210] = \"IOS\";\n    /**\n     * Ext\n     *\n     * @generated from enum value: CLIENT_TYPE_EXT = 300;\n     */\n    ClientType[ClientType[\"EXT\"] = 300] = \"EXT\";\n    /**\n     * @generated from enum value: CLIENT_TYPE_EXT_IOS = 301;\n     */\n    ClientType[ClientType[\"EXT_IOS\"] = 301] = \"EXT_IOS\";\n    /**\n     * Cli\n     *\n     * @generated from enum value: CLIENT_TYPE_CLI = 400;\n     */\n    ClientType[ClientType[\"CLI\"] = 400] = \"CLI\";\n    /**\n     * @generated from enum value: CLIENT_TYPE_BAK = 401;\n     */\n    ClientType[ClientType[\"BAK\"] = 401] = \"BAK\";\n    /**\n     * Bae\n     *\n     * @generated from enum value: CLIENT_TYPE_BAE_AUDITLOG = 500;\n     */\n    ClientType[ClientType[\"BAE_AUDITLOG\"] = 500] = \"BAE_AUDITLOG\";\n})(ClientType || (ClientType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(ClientType)\nproto3.util.setEnumType(ClientType, \"domain.ClientType\", [\n    { no: 0, name: \"CLIENT_TYPE_UNKNOWN\" },\n    { no: 1, name: \"CLIENT_TYPE_TEST\" },\n    { no: 100, name: \"CLIENT_TYPE_WEB\" },\n    { no: 200, name: \"CLIENT_TYPE_AND\" },\n    { no: 210, name: \"CLIENT_TYPE_IOS\" },\n    { no: 300, name: \"CLIENT_TYPE_EXT\" },\n    { no: 301, name: \"CLIENT_TYPE_EXT_IOS\" },\n    { no: 400, name: \"CLIENT_TYPE_CLI\" },\n    { no: 401, name: \"CLIENT_TYPE_BAK\" },\n    { no: 500, name: \"CLIENT_TYPE_BAE_AUDITLOG\" },\n]);\n//# sourceMappingURL=client_type_pb.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { captureMessage } from '@sentry/minimal';\nimport Emittery from 'emittery';\nimport Cancel from './cancel';\nimport debugConsole from './debugConsole';\nimport { AuthenticatorType } from './espb/authenticator_type_pb';\nimport { CredentialType } from './espb/credential_type_pb';\nimport { SessionType } from './espb/session_type_pb';\nimport { SyncUpdateField, } from './espb/sync_update_pb';\nimport { VaultType } from './espb/vault_type_pb';\nimport { knownEnumOrDefault, requireFieldNotEmpty, } from './grpcUtils';\nimport { trackError } from './promiseUtils';\nimport { ProfileType, PrimaryLoginDevice, OrganizationType, } from './types';\nfunction toSyncSessionUnlockDto(su) {\n    if (!su || !su.authenticatorId) {\n        return undefined;\n    }\n    return {\n        authenticatorId: su.authenticatorId,\n        encryptedSecret: su.encryptedSecret,\n    };\n}\nfunction toSyncUpdateProfileAuthenticatorLock(l) {\n    return {\n        authenticatorId: requireFieldNotEmpty(l.authenticatorId),\n        encryptedHighSecurityProfileSeed: requireFieldNotEmpty(l.encryptedHighSecurityProfileSeed),\n        encryptedStorableProfileSeed: requireFieldNotEmpty(l.encryptedStorableProfileSeed),\n    };\n}\nfunction toSyncUpdateProfileProfileLock(l) {\n    return {\n        lockingProfileId: requireFieldNotEmpty(l.lockingProfileId),\n        lockingProfileKeyGenerationId: requireFieldNotEmpty(l.lockingProfileKeyGenerationId),\n        encryptedHighSecurityProfileSeed: requireFieldNotEmpty(l.encryptedHighSecurityProfileSeed),\n        encryptedStorableProfileSeed: requireFieldNotEmpty(l.encryptedStorableProfileSeed),\n    };\n}\nfunction toSyncUpdateProfile(sa) {\n    return {\n        id: requireFieldNotEmpty(sa.id),\n        profileType: knownEnumOrDefault(sa.profileType, ProfileType),\n        keyGenerationId: requireFieldNotEmpty(sa.keyGenerationId),\n        email: sa.email || null,\n        unverifiedEmail: sa.unverifiedEmail || null,\n        organizationId: sa.organizationId || null,\n        highSecurityIdentitySigPubKey: sa.highSecurityIdentitySigPubKey,\n        highSecurityVaultKeyEncPubKey: sa.highSecurityVaultKeyEncPubKey,\n        highSecurityVaultKeyEncPubKeySignature: sa.highSecurityVaultKeyEncPubKeySignature,\n        highSecurityProfileSeedEncPubKey: sa.highSecurityProfileSeedEncPubKey,\n        highSecurityProfileSeedEncPubKeySignature: sa.highSecurityProfileSeedEncPubKeySignature,\n        storableSigPubKey: sa.storableSigPubKey,\n        storableSigPubKeySignature: sa.storableSigPubKeySignature,\n        storableVaultKeyEncPubKey: sa.storableVaultKeyEncPubKey,\n        storableVaultKeyEncPubKeySignature: sa.storableVaultKeyEncPubKeySignature,\n        storableProfileSeedEncPubKey: sa.storableProfileSeedEncPubKey,\n        storableProfileSeedEncPubKeySignature: sa.storableProfileSeedEncPubKeySignature,\n        authenticatorLocks: sa.authenticatorLocks.map(toSyncUpdateProfileAuthenticatorLock),\n        profileLock: sa.profileLock ? toSyncUpdateProfileProfileLock(sa.profileLock) : null,\n    };\n}\nfunction toSyncUpdatePreliminaryProfile(sa) {\n    return {\n        id: requireFieldNotEmpty(sa.id),\n        email: sa.email || null,\n        organizationId: sa.organizationId || null,\n    };\n}\nfunction toSyncUpdateOrganizationAdminInfo(pbInfo) {\n    var _a;\n    if (pbInfo === undefined) {\n        return undefined;\n    }\n    const a = pbInfo.authenticator;\n    let authenticator;\n    if (a) {\n        const data = requireFieldNotEmpty(a.data);\n        authenticator = {\n            id: requireFieldNotEmpty(a.id),\n            authenticatorType: knownEnumOrDefault(data.authenticatorType, AuthenticatorType),\n            storableVaultKeyEncPubKey: requireFieldNotEmpty(data.storableVaultKeyEncPubKey),\n            storableVaultKeyEncPubKeySignature: requireFieldNotEmpty(data.storableVaultKeyEncPubKeySignature),\n            highSecurityVaultKeyEncPubKey: requireFieldNotEmpty(data.highSecurityVaultKeyEncPubKey),\n            highSecurityVaultKeyEncPubKeySignature: requireFieldNotEmpty(data.highSecurityVaultKeyEncPubKeySignature),\n            highSecurityIdentitySigPubKey: requireFieldNotEmpty(data.highSecurityIdentitySigPubKey),\n            highSecurityLoginSigPubKey: requireFieldNotEmpty(data.highSecurityLoginSigPubKey),\n            secretInfo: data.secretInfo,\n            secretSalt: data.secretSalt,\n            storableSigPubKey: requireFieldNotEmpty(data.storableSigPubKey),\n            storableSigPubKeySignature: requireFieldNotEmpty(data.storableSigPubKeySignature),\n        };\n    }\n    let adminProfile;\n    const p = pbInfo.adminProfile;\n    if (p) {\n        adminProfile = {\n            id: requireFieldNotEmpty(p.id),\n            profileType: requireFieldNotEmpty(p.profileType),\n            keyGenerationId: requireFieldNotEmpty(p.keyGenerationId),\n            organizationId: requireFieldNotEmpty(p.organizationId),\n            highSecurityIdentitySigPubKey: p.highSecurityIdentitySigPubKey,\n            highSecurityVaultKeyEncPubKey: p.highSecurityVaultKeyEncPubKey,\n            highSecurityVaultKeyEncPubKeySignature: p.highSecurityVaultKeyEncPubKeySignature,\n            highSecurityProfileSeedEncPubKey: p.highSecurityProfileSeedEncPubKey,\n            highSecurityProfileSeedEncPubKeySignature: p.highSecurityProfileSeedEncPubKeySignature,\n            storableSigPubKey: p.storableSigPubKey,\n            storableSigPubKeySignature: p.storableSigPubKeySignature,\n            storableVaultKeyEncPubKey: p.storableVaultKeyEncPubKey,\n            storableVaultKeyEncPubKeySignature: p.storableVaultKeyEncPubKeySignature,\n            storableProfileSeedEncPubKey: p.storableProfileSeedEncPubKey,\n            storableProfileSeedEncPubKeySignature: p.storableProfileSeedEncPubKeySignature,\n            email: null,\n            unverifiedEmail: null,\n            authenticatorLocks: [],\n            profileLock: p.profileLock ? toSyncUpdateProfileProfileLock(p.profileLock) : null,\n        };\n    }\n    return {\n        legacyAdminVaultId: pbInfo.legacyAdminVaultId || undefined,\n        authenticator,\n        adminProfile,\n        entraTenantId: pbInfo.entraTenantId || undefined,\n        csvIntegrationActive: pbInfo.csvIntegrationActive,\n        googleWorkspaceIntegrationActive: pbInfo.googleWorkspaceIntegrationActive,\n        licenseType: pbInfo.licenseType,\n        trialEndDate: (_a = pbInfo.trialEndDate) === null || _a === void 0 ? void 0 : _a.toDate(),\n    };\n}\nfunction toSyncOrganization(so) {\n    const profiles = so.profiles.map((m) => {\n        var _a, _b, _c;\n        return ({\n            profileId: m.profileId,\n            isAdmin: m.isAdmin,\n            isNotConnected: m.isNotConnected,\n            isManager: m.isManager,\n            isService: m.isService,\n            personalVaultId: m.personalVaultId || undefined,\n            // using undefined here, because this field is not persisted\n            preliminaryUserId: m.preliminaryUserId || undefined,\n            startCode: m.startCode || undefined,\n            startCodeGeneratedAt: (_a = m.startCodeGeneratedAt) === null || _a === void 0 ? void 0 : _a.toDate(),\n            startCodeEmailSentAt: (_b = m.startCodeEmailSentAt) === null || _b === void 0 ? void 0 : _b.toDate(),\n            primaryLoginDevice: m.primaryLoginDevice\n                ? knownEnumOrDefault(m.primaryLoginDevice, PrimaryLoginDevice)\n                : undefined,\n            lastActiveAt: (_c = m.lastActiveAt) === null || _c === void 0 ? void 0 : _c.toDate(),\n        });\n    });\n    const icon = so.icon;\n    return {\n        id: requireFieldNotEmpty(so.id),\n        name: requireFieldNotEmpty(so.name),\n        organizationType: knownEnumOrDefault(so.organizationType, OrganizationType),\n        superUserId: requireFieldNotEmpty(so.superUserId),\n        adminProfileId: so.adminProfileId || null,\n        icon: icon.length ? icon : null,\n        restrictCreateTeam: so.restrictCreateTeam,\n        restrictPersonalLogins: so.restrictPersonalLogins,\n        unlockTimeLimit: requireFieldNotEmpty(so.unlockTimeLimit),\n        auditlogEnable: so.auditlogEnable,\n        childOrganizationManagementEnable: so.childOrganizationManagementEnable,\n        isAdmin: so.isAdmin,\n        isManager: so.isManager,\n        isPreliminary: so.isPreliminary,\n        adminInfo: toSyncUpdateOrganizationAdminInfo(so.adminInfo),\n        profiles,\n        subscriptionError: so.subscriptionError || null,\n        verifiedDomain: so.verifiedDomain || null,\n        passwordPolicy: so.passwordPolicy || null,\n        clientSettings: so.clientSettings || null,\n        parentOrganizationInfo: so.parentOrganizationInfo\n            ? {\n                id: requireFieldNotEmpty(so.parentOrganizationInfo.id),\n                name: requireFieldNotEmpty(so.parentOrganizationInfo.name),\n                icon: so.parentOrganizationInfo.icon || undefined,\n                metadata: so.parentOrganizationInfo.metadata || undefined,\n            }\n            : undefined,\n    };\n}\nfunction toSyncRelatedProfile(su) {\n    return {\n        id: requireFieldNotEmpty(su.id),\n        email: su.email || null,\n    };\n}\nfunction toSyncUpdateUser(su) {\n    if (su === undefined) {\n        return undefined;\n    }\n    let authenticatorBlockHash = su.authenticatorBlockHash;\n    if (authenticatorBlockHash.length === 0) {\n        authenticatorBlockHash = null;\n    }\n    const emails = su.emails.map((e) => ({\n        email: requireFieldNotEmpty(e.email),\n        verificationPending: e.verificationPending,\n        primary: e.primary,\n    }));\n    const webauthnCredentials = su.webauthnCredentials.map((wc) => ({\n        webauthnId: wc.webauthnId,\n        credentialType: knownEnumOrDefault(wc.credentialType, CredentialType),\n        aaguid: wc.aaguid || null,\n        sessionId: wc.sessionId || null,\n        createdAt: requireFieldNotEmpty(wc.createdAt).toDate(),\n        lastUsedAt: requireFieldNotEmpty(wc.lastUsedAt).toDate(),\n        prfSupportStatus: wc.prfSupportStatus,\n    }));\n    return {\n        emails,\n        preliminaryEmail: su.preliminaryEmail || null,\n        serverSideSettings: su.serverSideSettings || null,\n        authenticatorBlockHash,\n        preferredLocale: su.preferredLocale || null,\n        webauthnCredentials,\n        userClientSettings: su.userClientSettings || null,\n        openUserConfirmationIds: su.openUserConfirmationIds,\n    };\n}\nfunction toSyncUpdateVault(v) {\n    return {\n        id: v.id,\n        commitId: v.commitId,\n        generationId: v.generationId,\n        profileKeyGenerationId: v.profileKeyGenerationId || null,\n        adminProfileKeyGenerationId: v.adminProfileKeyGenerationId || null,\n        users: v.users,\n        profiles: v.profiles,\n        vaultType: knownEnumOrDefault(v.vaultType, VaultType),\n        associatedVaultId: v.associatedVaultId || null,\n        dirty: v.dirty,\n        organizationId: v.organizationId || null,\n        messagePublicKey: v.messagePublicKey.length > 0 ? v.messagePublicKey : null,\n        hasMessagesQueued: v.hasMessagesQueued,\n        inboxSlug: v.inboxSlug || null,\n    };\n}\nexport function toSyncDto(resp) {\n    const serverTime = requireFieldNotEmpty(resp.serverTime).toDate();\n    const syncVersion = Number(resp.syncVersion);\n    const tokenRefreshNeeded = resp.tokenRefreshNeeded;\n    const clientOutdated = resp.clientOutdated;\n    const sessionUnlock = toSyncSessionUnlockDto(resp.sessionUnlock);\n    const uf = resp.updatedFields;\n    const user = !uf.includes(SyncUpdateField.SU_USER) ? undefined : toSyncUpdateUser(resp.user);\n    const sessions = !uf.includes(SyncUpdateField.SU_SESSIONS)\n        ? undefined\n        : resp.sessions.map((s) => {\n            var _a, _b, _c, _d;\n            return ({\n                id: s.id,\n                createdAt: requireFieldNotEmpty(s.createdAt).toDate(),\n                lastUsedAt: requireFieldNotEmpty(s.lastUsedAt).toDate(),\n                unlockedAt: (_a = s.unlockedAt) === null || _a === void 0 ? void 0 : _a.toDate(),\n                unlockedUntil: (_b = s.unlockedUntil) === null || _b === void 0 ? void 0 : _b.toDate(),\n                unlockExtendAt: (_c = s.unlockExtendAt) === null || _c === void 0 ? void 0 : _c.toDate(),\n                unlockRequestedAt: (_d = s.unlockRequestedAt) === null || _d === void 0 ? void 0 : _d.toDate(),\n                clientSettings: s.clientSettings || null,\n                sessionType: knownEnumOrDefault(s.sessionType, SessionType),\n                enabledProfileIds: s.enabledProfileIds,\n                unlockTimeLimit: requireFieldNotEmpty(s.unlockTimeLimit),\n            });\n        });\n    const vaults = !uf.includes(SyncUpdateField.SU_VAULTS)\n        ? undefined\n        : resp.vaults.map(toSyncUpdateVault);\n    const achievementIds = !uf.includes(SyncUpdateField.SU_ACHIEVEMENTS)\n        ? undefined\n        : resp.achievements;\n    const channels = !uf.includes(SyncUpdateField.SU_CHANNELS) ? undefined : resp.channels;\n    const organizations = uf.includes(SyncUpdateField.SU_ORGANIZATIONS)\n        ? resp.organizations.map(toSyncOrganization)\n        : undefined;\n    const relatedProfiles = uf.includes(SyncUpdateField.SU_RELATED_PROFILES)\n        ? resp.relatedProfiles.map((p) => toSyncRelatedProfile(p))\n        : undefined;\n    const profiles = uf.includes(SyncUpdateField.SU_PROFILES)\n        ? resp.profiles.map(toSyncUpdateProfile)\n        : undefined;\n    const preliminaryProfiles = uf.includes(SyncUpdateField.SU_PROFILES)\n        ? resp.preliminaryProfiles.map(toSyncUpdatePreliminaryProfile)\n        : undefined;\n    const maintenanceSettings = uf.includes(SyncUpdateField.SU_MAINTENANCE_SETTINGS)\n        ? { allowedTasks: requireFieldNotEmpty(resp.maintenanceSettings).allowedTasks }\n        : undefined;\n    return {\n        serverTime,\n        clientOutdated,\n        sessionUnlock,\n        tokenRefreshNeeded,\n        user,\n        sessions,\n        vaults,\n        achievementIds,\n        channels,\n        syncVersion,\n        organizations,\n        relatedProfiles,\n        profiles,\n        preliminaryProfiles,\n        maintenanceSettings,\n    };\n}\nexport class SyncServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    streamingSync(cancelToken, resetAndRequestUnlock = false) {\n        return createEmitterFromAsyncIterable(this.espbClient.streamingSync({ resetAndRequestSessionUnlock: resetAndRequestUnlock }, { signal: cancelToken.signal }), (resp) => toSyncDto(requireFieldNotEmpty(resp.syncUpdate)));\n    }\n    longPoll(cancelToken, resetAndRequestSessionUnlock = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.longPollSync({ resetAndRequestSessionUnlock }, { signal: cancelToken === null || cancelToken === void 0 ? void 0 : cancelToken.signal });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    poll(fcmMessageId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.sync({ fcmMessageId });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n}\nfunction createEmitterFromAsyncIterable(messages, transform) {\n    const emitter = new Emittery.Typed();\n    (() => __awaiter(this, void 0, void 0, function* () {\n        var _a, e_1, _b, _c;\n        try {\n            try {\n                for (var _d = true, messages_1 = __asyncValues(messages), messages_1_1; messages_1_1 = yield messages_1.next(), _a = messages_1_1.done, !_a; _d = true) {\n                    _c = messages_1_1.value;\n                    _d = false;\n                    const raw = _c;\n                    if (emitter.listenerCount() === 0) {\n                        debugConsole.log(`No active listeners during onMessage!`);\n                        captureMessage('No active listeners in onMessage!');\n                    }\n                    yield emitter.emit('message', { message: transform(raw) });\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = messages_1.return)) yield _b.call(messages_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        catch (e) {\n            if (e instanceof Cancel) {\n                emitter.emit('cancel').catch(trackError);\n            }\n            else {\n                const error = e instanceof Error ? e : new Error(`${e}`);\n                emitter.emit('error', { error }).catch(trackError);\n            }\n        }\n        yield emitter.emit('end');\n    }))().catch(trackError);\n    return emitter;\n}\n//# sourceMappingURL=sync.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file vault_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, StringValue, Timestamp } from \"@bufbuild/protobuf\";\nimport { VaultMessageType } from \"./vault_message_type_pb.js\";\nimport { VaultAuthenticatorLock, VaultProfileLock } from \"./locks_pb.js\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\n/**\n * @generated from message domain.LinkedLoginUpdateMessage\n */\nexport class LinkedLoginUpdateMessage extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: string generation_id = 2;\n         */\n        this.generationId = \"\";\n        /**\n         * @generated from field: domain.VaultMessageType type = 3;\n         */\n        this.type = VaultMessageType.UNKNOWN;\n        /**\n         * @generated from field: bytes encrypted_data = 4;\n         */\n        this.encryptedData = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new LinkedLoginUpdateMessage().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new LinkedLoginUpdateMessage().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new LinkedLoginUpdateMessage().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(LinkedLoginUpdateMessage, a, b);\n    }\n}\nLinkedLoginUpdateMessage.runtime = proto3;\nLinkedLoginUpdateMessage.typeName = \"domain.LinkedLoginUpdateMessage\";\nLinkedLoginUpdateMessage.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"type\", kind: \"enum\", T: proto3.getEnumType(VaultMessageType) },\n    { no: 4, name: \"encrypted_data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.VaultRegenerateData\n */\nexport class VaultRegenerateData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string latest_commit_id = 2;\n         */\n        this.latestCommitId = \"\";\n        /**\n         * used for adding authenticators, in authenticator_service.proto\n         *\n         * @generated from field: repeated bytes new_authenticator_encrypted_storable_vault_keys = 3;\n         */\n        this.newAuthenticatorEncryptedStorableVaultKeys = [];\n        /**\n         * @generated from field: repeated bytes new_authenticator_encrypted_high_security_vault_keys = 4;\n         */\n        this.newAuthenticatorEncryptedHighSecurityVaultKeys = [];\n        /**\n         * @generated from field: repeated bytes new_authenticator_encrypted_vault_message_private_keys = 10;\n         */\n        this.newAuthenticatorEncryptedVaultMessagePrivateKeys = [];\n        /**\n         * @generated from field: repeated domain.VaultAuthenticatorLock authenticator_locks = 6;\n         */\n        this.authenticatorLocks = [];\n        /**\n         * @generated from field: repeated domain.VaultProfileLock profile_locks = 7;\n         */\n        this.profileLocks = [];\n        /**\n         * @generated from field: bytes squashed_commits = 5;\n         */\n        this.squashedCommits = new Uint8Array(0);\n        /**\n         * @generated from field: bytes message_public_key = 8;\n         */\n        this.messagePublicKey = new Uint8Array(0);\n        /**\n         * @generated from field: repeated string delete_message_ids = 9;\n         */\n        this.deleteMessageIds = [];\n        /**\n         * @generated from field: repeated domain.VaultRegenerateData.RegeneratedMessage regenerated_messages = 11;\n         */\n        this.regeneratedMessages = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new VaultRegenerateData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new VaultRegenerateData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new VaultRegenerateData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(VaultRegenerateData, a, b);\n    }\n}\nVaultRegenerateData.runtime = proto3;\nVaultRegenerateData.typeName = \"domain.VaultRegenerateData\";\nVaultRegenerateData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"latest_commit_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"new_authenticator_encrypted_storable_vault_keys\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, repeated: true },\n    { no: 4, name: \"new_authenticator_encrypted_high_security_vault_keys\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, repeated: true },\n    { no: 10, name: \"new_authenticator_encrypted_vault_message_private_keys\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, repeated: true },\n    { no: 6, name: \"authenticator_locks\", kind: \"message\", T: VaultAuthenticatorLock, repeated: true },\n    { no: 7, name: \"profile_locks\", kind: \"message\", T: VaultProfileLock, repeated: true },\n    { no: 5, name: \"squashed_commits\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 8, name: \"message_public_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 9, name: \"delete_message_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 11, name: \"regenerated_messages\", kind: \"message\", T: VaultRegenerateData_RegeneratedMessage, repeated: true },\n]);\n/**\n * @generated from message domain.VaultRegenerateData.RegeneratedMessage\n */\nexport class VaultRegenerateData_RegeneratedMessage extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * NOTE: as backend_message is unencrypted, it does not need to be regenerated\n         *\n         * @generated from field: bytes encrypted_data = 2;\n         */\n        this.encryptedData = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new VaultRegenerateData_RegeneratedMessage().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new VaultRegenerateData_RegeneratedMessage().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new VaultRegenerateData_RegeneratedMessage().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(VaultRegenerateData_RegeneratedMessage, a, b);\n    }\n}\nVaultRegenerateData_RegeneratedMessage.runtime = proto3;\nVaultRegenerateData_RegeneratedMessage.typeName = \"domain.VaultRegenerateData.RegeneratedMessage\";\nVaultRegenerateData_RegeneratedMessage.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"encrypted_data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.VaultCreationData\n */\nexport class VaultCreationData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes first_commit_blob = 1;\n         */\n        this.firstCommitBlob = new Uint8Array(0);\n        /**\n         * @generated from field: repeated domain.VaultAuthenticatorLock authenticator_locks = 2;\n         */\n        this.authenticatorLocks = [];\n        /**\n         * NOTE: if organization_id is set, locks for the respective organization user must be included\n         *\n         * @generated from field: string organization_id = 3;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: bytes message_public_key = 5;\n         */\n        this.messagePublicKey = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new VaultCreationData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new VaultCreationData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new VaultCreationData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(VaultCreationData, a, b);\n    }\n}\nVaultCreationData.runtime = proto3;\nVaultCreationData.typeName = \"domain.VaultCreationData\";\nVaultCreationData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"first_commit_blob\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 2, name: \"authenticator_locks\", kind: \"message\", T: VaultAuthenticatorLock, repeated: true },\n    { no: 4, name: \"profile_lock\", kind: \"message\", T: VaultProfileLock },\n    { no: 3, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"message_public_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 6, name: \"admin_profile_lock\", kind: \"message\", T: VaultProfileLock },\n]);\n/**\n * @generated from message domain.VaultPairCreationData\n */\nexport class VaultPairCreationData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes first_commit_blob = 1;\n         */\n        this.firstCommitBlob = new Uint8Array(0);\n        /**\n         * @generated from field: repeated domain.VaultAuthenticatorLock authenticator_locks = 2;\n         */\n        this.authenticatorLocks = [];\n        /**\n         * @generated from field: bytes message_public_key = 9;\n         */\n        this.messagePublicKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes associated_first_commit_blob = 4;\n         */\n        this.associatedFirstCommitBlob = new Uint8Array(0);\n        /**\n         * @generated from field: repeated domain.VaultAuthenticatorLock associated_authenticator_locks = 5;\n         */\n        this.associatedAuthenticatorLocks = [];\n        /**\n         * @generated from field: bytes associated_message_public_key = 10;\n         */\n        this.associatedMessagePublicKey = new Uint8Array(0);\n        /**\n         * NOTE: if organization_id is set, locks for the respective organization user must be included\n         *\n         * @generated from field: string organization_id = 6;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new VaultPairCreationData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new VaultPairCreationData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new VaultPairCreationData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(VaultPairCreationData, a, b);\n    }\n}\nVaultPairCreationData.runtime = proto3;\nVaultPairCreationData.typeName = \"domain.VaultPairCreationData\";\nVaultPairCreationData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"first_commit_blob\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 2, name: \"authenticator_locks\", kind: \"message\", T: VaultAuthenticatorLock, repeated: true },\n    { no: 7, name: \"profile_lock\", kind: \"message\", T: VaultProfileLock },\n    { no: 9, name: \"message_public_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 11, name: \"admin_profile_lock\", kind: \"message\", T: VaultProfileLock },\n    { no: 4, name: \"associated_first_commit_blob\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 5, name: \"associated_authenticator_locks\", kind: \"message\", T: VaultAuthenticatorLock, repeated: true },\n    { no: 8, name: \"associated_profile_lock\", kind: \"message\", T: VaultProfileLock },\n    { no: 10, name: \"associated_message_public_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 12, name: \"associated_admin_profile_lock\", kind: \"message\", T: VaultProfileLock },\n    { no: 6, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ShareLinkUpdate\n */\nexport class ShareLinkUpdate extends Message {\n    constructor(data) {\n        super();\n        /**\n         * NOTE: this id is an uniuri, no uuid\n         *\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * if empty, deletes the share link\n         *\n         * @generated from field: bytes encrypted_payload = 2;\n         */\n        this.encryptedPayload = new Uint8Array(0);\n        /**\n         * @generated from field: bytes encrypted_protected_secret = 3;\n         */\n        this.encryptedProtectedSecret = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ShareLinkUpdate().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ShareLinkUpdate().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ShareLinkUpdate().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ShareLinkUpdate, a, b);\n    }\n}\nShareLinkUpdate.runtime = proto3;\nShareLinkUpdate.typeName = \"domain.ShareLinkUpdate\";\nShareLinkUpdate.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"encrypted_payload\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"encrypted_protected_secret\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.ShareLinksDelete\n */\nexport class ShareLinksDelete extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Share links created in this vault not listed here will be deleted\n         *\n         * @generated from field: repeated string keep_share_link_ids = 1;\n         */\n        this.keepShareLinkIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ShareLinksDelete().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ShareLinksDelete().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ShareLinksDelete().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ShareLinksDelete, a, b);\n    }\n}\nShareLinksDelete.runtime = proto3;\nShareLinksDelete.typeName = \"domain.ShareLinksDelete\";\nShareLinksDelete.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"keep_share_link_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.CreateCommitRequest\n */\nexport class CreateCommitRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: string latest_commit_id = 2;\n         */\n        this.latestCommitId = \"\";\n        /**\n         * @generated from field: bytes new_commit_blob = 3;\n         */\n        this.newCommitBlob = new Uint8Array(0);\n        /**\n         * @generated from field: repeated string delete_message_ids = 7;\n         */\n        this.deleteMessageIds = [];\n        /**\n         * @generated from field: repeated domain.LinkedLoginUpdateMessage linked_update_messages = 8;\n         */\n        this.linkedUpdateMessages = [];\n        /**\n         * @generated from field: repeated domain.ShareLinkUpdate share_link_updates = 9;\n         */\n        this.shareLinkUpdates = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateCommitRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateCommitRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateCommitRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateCommitRequest, a, b);\n    }\n}\nCreateCommitRequest.runtime = proto3;\nCreateCommitRequest.typeName = \"domain.CreateCommitRequest\";\nCreateCommitRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"latest_commit_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"new_commit_blob\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"update_time\", kind: \"message\", T: Timestamp },\n    { no: 7, name: \"delete_message_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 8, name: \"linked_update_messages\", kind: \"message\", T: LinkedLoginUpdateMessage, repeated: true },\n    { no: 9, name: \"share_link_updates\", kind: \"message\", T: ShareLinkUpdate, repeated: true },\n    { no: 10, name: \"delete_share_links\", kind: \"message\", T: ShareLinksDelete },\n]);\n/**\n * @generated from message domain.CreateCommitResponse\n */\nexport class CreateCommitResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string commit_id = 1;\n         */\n        this.commitId = \"\";\n        /**\n         * @generated from field: repeated string linked_update_message_ids = 2;\n         */\n        this.linkedUpdateMessageIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateCommitResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateCommitResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateCommitResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateCommitResponse, a, b);\n    }\n}\nCreateCommitResponse.runtime = proto3;\nCreateCommitResponse.typeName = \"domain.CreateCommitResponse\";\nCreateCommitResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"commit_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"linked_update_message_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.CreateGenerationRequest\n */\nexport class CreateGenerationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.LinkedLoginUpdateMessage linked_update_messages = 2;\n         */\n        this.linkedUpdateMessages = [];\n        /**\n         * @generated from field: repeated domain.ShareLinkUpdate share_link_updates = 4;\n         */\n        this.shareLinkUpdates = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateGenerationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateGenerationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateGenerationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateGenerationRequest, a, b);\n    }\n}\nCreateGenerationRequest.runtime = proto3;\nCreateGenerationRequest.typeName = \"domain.CreateGenerationRequest\";\nCreateGenerationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault\", kind: \"message\", T: VaultRegenerateData },\n    { no: 2, name: \"linked_update_messages\", kind: \"message\", T: LinkedLoginUpdateMessage, repeated: true },\n    { no: 3, name: \"delete_share_links\", kind: \"message\", T: ShareLinksDelete },\n    { no: 4, name: \"share_link_updates\", kind: \"message\", T: ShareLinkUpdate, repeated: true },\n]);\n/**\n * @generated from message domain.CreateGenerationResponse\n */\nexport class CreateGenerationResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Client do not use these individual ids anymore but they are still used in tests.\n         *\n         * @generated from field: string commit_id = 1;\n         */\n        this.commitId = \"\";\n        /**\n         * @generated from field: string generation_id = 2;\n         */\n        this.generationId = \"\";\n        /**\n         * @generated from field: repeated string linked_update_message_ids = 4;\n         */\n        this.linkedUpdateMessageIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateGenerationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateGenerationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateGenerationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateGenerationResponse, a, b);\n    }\n}\nCreateGenerationResponse.runtime = proto3;\nCreateGenerationResponse.typeName = \"domain.CreateGenerationResponse\";\nCreateGenerationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"commit_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 4, name: \"linked_update_message_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.ListCommitsRequest\n */\nexport class ListCommitsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * locks are normally only returned when there is a new generation. set to always send\n         *\n         * @generated from field: bool force_locks = 3;\n         */\n        this.forceLocks = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListCommitsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListCommitsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListCommitsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListCommitsRequest, a, b);\n    }\n}\nListCommitsRequest.runtime = proto3;\nListCommitsRequest.typeName = \"domain.ListCommitsRequest\";\nListCommitsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"latest_commit_id\", kind: \"message\", T: StringValue },\n    { no: 4, name: \"latest_first_commit_id\", kind: \"message\", T: StringValue },\n    { no: 3, name: \"force_locks\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.ListCommitsResponse\n */\nexport class ListCommitsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string current_generation_id = 1;\n         */\n        this.currentGenerationId = \"\";\n        /**\n         * @generated from field: repeated domain.ListCommitsResponse.Commit newer_commits = 2;\n         */\n        this.newerCommits = [];\n        /**\n         * @generated from field: repeated domain.ListCommitsResponse.AuthenticatorLock authenticator_locks = 3;\n         */\n        this.authenticatorLocks = [];\n        /**\n         * @generated from field: string first_commit_id = 5;\n         */\n        this.firstCommitId = \"\";\n        /**\n         * @generated from field: repeated domain.ListCommitsResponse.Message messages = 7;\n         */\n        this.messages = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListCommitsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListCommitsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListCommitsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListCommitsResponse, a, b);\n    }\n}\nListCommitsResponse.runtime = proto3;\nListCommitsResponse.typeName = \"domain.ListCommitsResponse\";\nListCommitsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"current_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"newer_commits\", kind: \"message\", T: ListCommitsResponse_Commit, repeated: true },\n    { no: 3, name: \"authenticator_locks\", kind: \"message\", T: ListCommitsResponse_AuthenticatorLock, repeated: true },\n    { no: 6, name: \"profile_lock\", kind: \"message\", T: VaultProfileLock },\n    { no: 8, name: \"admin_profile_lock\", kind: \"message\", T: VaultProfileLock },\n    { no: 4, name: \"server_time\", kind: \"message\", T: Timestamp },\n    { no: 5, name: \"first_commit_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"messages\", kind: \"message\", T: ListCommitsResponse_Message, repeated: true },\n]);\n/**\n * @generated from message domain.ListCommitsResponse.Commit\n */\nexport class ListCommitsResponse_Commit extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: bytes blob = 2;\n         */\n        this.blob = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListCommitsResponse_Commit().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListCommitsResponse_Commit().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListCommitsResponse_Commit().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListCommitsResponse_Commit, a, b);\n    }\n}\nListCommitsResponse_Commit.runtime = proto3;\nListCommitsResponse_Commit.typeName = \"domain.ListCommitsResponse.Commit\";\nListCommitsResponse_Commit.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"blob\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.ListCommitsResponse.AuthenticatorLock\n */\nexport class ListCommitsResponse_AuthenticatorLock extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string authenticator_id = 2;\n         */\n        this.authenticatorId = \"\";\n        /**\n         * @generated from field: bytes encrypted_storable_vault_key = 3;\n         */\n        this.encryptedStorableVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes encrypted_high_security_vault_key = 4;\n         */\n        this.encryptedHighSecurityVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes encrypted_vault_message_private_key = 5;\n         */\n        this.encryptedVaultMessagePrivateKey = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListCommitsResponse_AuthenticatorLock().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListCommitsResponse_AuthenticatorLock().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListCommitsResponse_AuthenticatorLock().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListCommitsResponse_AuthenticatorLock, a, b);\n    }\n}\nListCommitsResponse_AuthenticatorLock.runtime = proto3;\nListCommitsResponse_AuthenticatorLock.typeName = \"domain.ListCommitsResponse.AuthenticatorLock\";\nListCommitsResponse_AuthenticatorLock.fields = proto3.util.newFieldList(() => [\n    { no: 2, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"encrypted_storable_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"encrypted_high_security_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 5, name: \"encrypted_vault_message_private_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.ListCommitsResponse.Message\n */\nexport class ListCommitsResponse_Message extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: domain.VaultMessageType type = 2;\n         */\n        this.type = VaultMessageType.UNKNOWN;\n        /**\n         * @generated from field: bytes encrypted_data = 3;\n         */\n        this.encryptedData = new Uint8Array(0);\n        /**\n         * @generated from field: string sender_vault_id = 4;\n         */\n        this.senderVaultId = \"\";\n        /**\n         * @generated from field: bytes backend_message = 5;\n         */\n        this.backendMessage = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListCommitsResponse_Message().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListCommitsResponse_Message().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListCommitsResponse_Message().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListCommitsResponse_Message, a, b);\n    }\n}\nListCommitsResponse_Message.runtime = proto3;\nListCommitsResponse_Message.typeName = \"domain.ListCommitsResponse.Message\";\nListCommitsResponse_Message.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto3.getEnumType(VaultMessageType) },\n    { no: 3, name: \"encrypted_data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"sender_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"backend_message\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.CreateTeamRequest\n */\nexport class CreateTeamRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateTeamRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateTeamRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateTeamRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateTeamRequest, a, b);\n    }\n}\nCreateTeamRequest.runtime = proto3;\nCreateTeamRequest.typeName = \"domain.CreateTeamRequest\";\nCreateTeamRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"creation_data\", kind: \"message\", T: VaultPairCreationData },\n]);\n/**\n * @generated from message domain.CreateTeamResponse\n */\nexport class CreateTeamResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: string associated_vault_id = 3;\n         */\n        this.associatedVaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateTeamResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateTeamResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateTeamResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateTeamResponse, a, b);\n    }\n}\nCreateTeamResponse.runtime = proto3;\nCreateTeamResponse.typeName = \"domain.CreateTeamResponse\";\nCreateTeamResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"associated_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.DeleteTeamRequest\n */\nexport class DeleteTeamRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteTeamRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteTeamRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteTeamRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteTeamRequest, a, b);\n    }\n}\nDeleteTeamRequest.runtime = proto3;\nDeleteTeamRequest.typeName = \"domain.DeleteTeamRequest\";\nDeleteTeamRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.DeleteTeamResponse\n */\nexport class DeleteTeamResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteTeamResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteTeamResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteTeamResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteTeamResponse, a, b);\n    }\n}\nDeleteTeamResponse.runtime = proto3;\nDeleteTeamResponse.typeName = \"domain.DeleteTeamResponse\";\nDeleteTeamResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.ModifyTeamUsersRequest\n */\nexport class ModifyTeamUsersRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: repeated domain.ModifyTeamUsersRequest.AddProfileOperation add_profile_ops = 11;\n         */\n        this.addProfileOps = [];\n        /**\n         * @generated from field: repeated string remove_profile_ids = 12;\n         */\n        this.removeProfileIds = [];\n        /**\n         * @generated from field: string assoc_latest_commit_id = 7;\n         */\n        this.assocLatestCommitId = \"\";\n        /**\n         * @generated from field: bytes assoc_new_commit_blob = 8;\n         */\n        this.assocNewCommitBlob = new Uint8Array(0);\n        /**\n         * checked to ensure locks are correctly associated\n         *\n         * @generated from field: string generation_id = 9;\n         */\n        this.generationId = \"\";\n        /**\n         * @generated from field: string assoc_generation_id = 10;\n         */\n        this.assocGenerationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ModifyTeamUsersRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ModifyTeamUsersRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ModifyTeamUsersRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ModifyTeamUsersRequest, a, b);\n    }\n}\nModifyTeamUsersRequest.runtime = proto3;\nModifyTeamUsersRequest.typeName = \"domain.ModifyTeamUsersRequest\";\nModifyTeamUsersRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"add_profile_ops\", kind: \"message\", T: ModifyTeamUsersRequest_AddProfileOperation, repeated: true },\n    { no: 12, name: \"remove_profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"regenerate_data\", kind: \"message\", T: VaultRegenerateData },\n    { no: 5, name: \"associated_regenerate_data\", kind: \"message\", T: VaultRegenerateData },\n    { no: 6, name: \"update_time\", kind: \"message\", T: Timestamp },\n    { no: 7, name: \"assoc_latest_commit_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"assoc_new_commit_blob\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 9, name: \"generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"assoc_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ModifyTeamUsersRequest.AddProfileOperation\n */\nexport class ModifyTeamUsersRequest_AddProfileOperation extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string profile_id = 1;\n         */\n        this.profileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ModifyTeamUsersRequest_AddProfileOperation().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ModifyTeamUsersRequest_AddProfileOperation().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ModifyTeamUsersRequest_AddProfileOperation().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ModifyTeamUsersRequest_AddProfileOperation, a, b);\n    }\n}\nModifyTeamUsersRequest_AddProfileOperation.runtime = proto3;\nModifyTeamUsersRequest_AddProfileOperation.typeName = \"domain.ModifyTeamUsersRequest.AddProfileOperation\";\nModifyTeamUsersRequest_AddProfileOperation.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"lock\", kind: \"message\", T: VaultProfileLock },\n    { no: 3, name: \"associated_lock\", kind: \"message\", T: VaultProfileLock },\n]);\n/**\n * @generated from message domain.ModifyTeamUsersResponse\n */\nexport class ModifyTeamUsersResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ModifyTeamUsersResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ModifyTeamUsersResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ModifyTeamUsersResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ModifyTeamUsersResponse, a, b);\n    }\n}\nModifyTeamUsersResponse.runtime = proto3;\nModifyTeamUsersResponse.typeName = \"domain.ModifyTeamUsersResponse\";\nModifyTeamUsersResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.CreateInboxVaultRequest\n */\nexport class CreateInboxVaultRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string slug = 2;\n         */\n        this.slug = \"\";\n        /**\n         * @generated from field: string metadata = 3;\n         */\n        this.metadata = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateInboxVaultRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateInboxVaultRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateInboxVaultRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateInboxVaultRequest, a, b);\n    }\n}\nCreateInboxVaultRequest.runtime = proto3;\nCreateInboxVaultRequest.typeName = \"domain.CreateInboxVaultRequest\";\nCreateInboxVaultRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"creation_data\", kind: \"message\", T: VaultPairCreationData },\n    { no: 2, name: \"slug\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateInboxVaultResponse\n */\nexport class CreateInboxVaultResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: string associated_vault_id = 3;\n         */\n        this.associatedVaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateInboxVaultResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateInboxVaultResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateInboxVaultResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateInboxVaultResponse, a, b);\n    }\n}\nCreateInboxVaultResponse.runtime = proto3;\nCreateInboxVaultResponse.typeName = \"domain.CreateInboxVaultResponse\";\nCreateInboxVaultResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"associated_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.UpdateInboxRequest\n */\nexport class UpdateInboxRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateInboxRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateInboxRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateInboxRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateInboxRequest, a, b);\n    }\n}\nUpdateInboxRequest.runtime = proto3;\nUpdateInboxRequest.typeName = \"domain.UpdateInboxRequest\";\nUpdateInboxRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"slug\", kind: \"message\", T: StringValue },\n    { no: 3, name: \"metadata\", kind: \"message\", T: StringValue },\n]);\n/**\n * @generated from message domain.UpdateInboxResponse\n */\nexport class UpdateInboxResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateInboxResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateInboxResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateInboxResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateInboxResponse, a, b);\n    }\n}\nUpdateInboxResponse.runtime = proto3;\nUpdateInboxResponse.typeName = \"domain.UpdateInboxResponse\";\nUpdateInboxResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.DeleteInboxVaultRequest\n */\nexport class DeleteInboxVaultRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteInboxVaultRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteInboxVaultRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteInboxVaultRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteInboxVaultRequest, a, b);\n    }\n}\nDeleteInboxVaultRequest.runtime = proto3;\nDeleteInboxVaultRequest.typeName = \"domain.DeleteInboxVaultRequest\";\nDeleteInboxVaultRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.DeleteInboxVaultResponse\n */\nexport class DeleteInboxVaultResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteInboxVaultResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteInboxVaultResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteInboxVaultResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteInboxVaultResponse, a, b);\n    }\n}\nDeleteInboxVaultResponse.runtime = proto3;\nDeleteInboxVaultResponse.typeName = \"domain.DeleteInboxVaultResponse\";\nDeleteInboxVaultResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.ListMessagePublicKeysRequest\n */\nexport class ListMessagePublicKeysRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * limited to vaults of one particular organization, to keep permission check simple\n         *\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: repeated string vault_ids = 2;\n         */\n        this.vaultIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListMessagePublicKeysRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListMessagePublicKeysRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListMessagePublicKeysRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListMessagePublicKeysRequest, a, b);\n    }\n}\nListMessagePublicKeysRequest.runtime = proto3;\nListMessagePublicKeysRequest.typeName = \"domain.ListMessagePublicKeysRequest\";\nListMessagePublicKeysRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"vault_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.ListMessagePublicKeysResponse\n */\nexport class ListMessagePublicKeysResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * this result is fail-slow: vaults that are not found will simply be missing here\n         *\n         * @generated from field: repeated domain.ListMessagePublicKeysResponse.MessagePublicKey message_public_keys = 1;\n         */\n        this.messagePublicKeys = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListMessagePublicKeysResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListMessagePublicKeysResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListMessagePublicKeysResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListMessagePublicKeysResponse, a, b);\n    }\n}\nListMessagePublicKeysResponse.runtime = proto3;\nListMessagePublicKeysResponse.typeName = \"domain.ListMessagePublicKeysResponse\";\nListMessagePublicKeysResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"message_public_keys\", kind: \"message\", T: ListMessagePublicKeysResponse_MessagePublicKey, repeated: true },\n]);\n/**\n * @generated from message domain.ListMessagePublicKeysResponse.MessagePublicKey\n */\nexport class ListMessagePublicKeysResponse_MessagePublicKey extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: string generation_id = 2;\n         */\n        this.generationId = \"\";\n        /**\n         * @generated from field: bytes key = 3;\n         */\n        this.key = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListMessagePublicKeysResponse_MessagePublicKey().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListMessagePublicKeysResponse_MessagePublicKey().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListMessagePublicKeysResponse_MessagePublicKey().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListMessagePublicKeysResponse_MessagePublicKey, a, b);\n    }\n}\nListMessagePublicKeysResponse_MessagePublicKey.runtime = proto3;\nListMessagePublicKeysResponse_MessagePublicKey.typeName = \"domain.ListMessagePublicKeysResponse.MessagePublicKey\";\nListMessagePublicKeysResponse_MessagePublicKey.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n//# sourceMappingURL=vault_service_pb.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Timestamp } from '@bufbuild/protobuf';\nimport { VaultCreationData, VaultRegenerateData, VaultPairCreationData, } from './espb/vault_service_pb';\nimport { requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nimport { toVaultProfileLockDto, toPbVaultAuthenticatorLock, toPbVaultProfileLock, toVaultAuthenticatorLockDto, } from './types';\nexport default class VaultServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    createCommit(vaultId, latestCommitId, newCommitBlob, updateTime, deleteMessageIds = [], linkedUpdateMessages = [], shareLinkUpdates = [], deleteShareLinks) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createCommit({\n                vaultId,\n                latestCommitId,\n                newCommitBlob,\n                updateTime: Timestamp.fromDate(updateTime),\n                deleteMessageIds,\n                linkedUpdateMessages,\n                shareLinkUpdates,\n                deleteShareLinks,\n            });\n            return {\n                commitId: requireFieldNotEmpty(resp.commitId),\n                updateMessageIds: resp.linkedUpdateMessageIds,\n            };\n        });\n    }\n    createGeneration(dto, linkedUpdateMessages = [], deleteShareLinks, shareLinkUpdates = []) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createGeneration({\n                vault: toVaultRegenerateData(dto),\n                linkedUpdateMessages,\n                deleteShareLinks,\n                shareLinkUpdates,\n            });\n            return {\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n                updateMessageIds: resp.linkedUpdateMessageIds,\n            };\n        });\n    }\n    listCommits(vaultId, latestCommitId, latestFirstCommitId, forceLocks) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.listCommits({\n                vaultId,\n                latestCommitId: latestCommitId !== null && latestCommitId !== void 0 ? latestCommitId : undefined,\n                latestFirstCommitId: latestFirstCommitId !== null && latestFirstCommitId !== void 0 ? latestFirstCommitId : undefined,\n                forceLocks,\n            });\n            const { commitDtos } = resp.newerCommits.reduce(({ parentId, commitDtos: dtos }, commit) => ({\n                parentId: requireFieldNotEmpty(commit.id),\n                commitDtos: [\n                    ...dtos,\n                    {\n                        id: requireFieldNotEmpty(commit.id),\n                        parentId,\n                        blob: commit.blob,\n                    },\n                ],\n            }), { parentId: latestCommitId, commitDtos: [] });\n            const lockDtos = resp.authenticatorLocks.map(toVaultAuthenticatorLockDto);\n            const profileLockDto = toVaultProfileLockDto(resp.profileLock);\n            const adminProfileLockDto = toVaultProfileLockDto(resp.adminProfileLock);\n            const serverTime = requireFieldNotEmpty(resp.serverTime).toDate();\n            const firstCommitId = requireFieldNotEmpty(resp.firstCommitId);\n            const messages = resp.messages.map((im) => {\n                return {\n                    id: requireFieldNotEmpty(im.id),\n                    type: requireFieldNotEmpty(im.type),\n                    senderVaultId: im.senderVaultId,\n                    encryptedData: im.encryptedData.length > 0 ? im.encryptedData : undefined,\n                    backendMessage: im.backendMessage.length > 0 ? im.backendMessage : undefined,\n                };\n            });\n            return {\n                generationId: requireFieldNotEmpty(resp.currentGenerationId),\n                commitDtos,\n                lockDtos,\n                profileLockDto,\n                adminProfileLockDto,\n                serverTime,\n                firstCommitId,\n                messages,\n            };\n        });\n    }\n    createTeam(vcd) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createTeam({ creationData: toVaultPairCreationData(vcd) });\n            return {\n                vaultId: requireFieldNotEmpty(resp.vaultId),\n                associatedVaultId: requireFieldNotEmpty(resp.associatedVaultId),\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n            };\n        });\n    }\n    deleteTeam(vaultId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.deleteTeam({ vaultId });\n            return {\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n            };\n        });\n    }\n    modifyTeamUsers(id, generationId, addProfiles, removeProfileIds, assocGenerationId, assocLatestCommitId, assocNewCommitBlob, updateTime, regenerateData, associatedRegenerateData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.modifyTeamUsers({\n                vaultId: id,\n                generationId: generationId,\n                assocGenerationId: assocGenerationId,\n                addProfileOps: addProfiles.map((p) => ({\n                    profileId: p.id,\n                    lock: toPbVaultProfileLock(p.lock),\n                    associatedLock: p.associatedLock ? toPbVaultProfileLock(p.associatedLock) : undefined,\n                })),\n                removeProfileIds: removeProfileIds,\n                assocLatestCommitId: assocLatestCommitId,\n                assocNewCommitBlob: assocNewCommitBlob,\n                updateTime: updateTime ? Timestamp.fromDate(updateTime) : undefined,\n                regenerateData: regenerateData ? toVaultRegenerateData(regenerateData) : undefined,\n                associatedRegenerateData: associatedRegenerateData\n                    ? toVaultRegenerateData(associatedRegenerateData)\n                    : undefined,\n            });\n            return {\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n            };\n        });\n    }\n    createInboxVault(vcd, slug, metadataJson) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createInboxVault({\n                creationData: toVaultPairCreationData(vcd),\n                slug,\n                metadata: metadataJson,\n            });\n            return {\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n                vaultId: requireFieldNotEmpty(resp.vaultId),\n                associatedVaultId: requireFieldNotEmpty(resp.associatedVaultId),\n            };\n        });\n    }\n    updateInbox(vaultId, { slug, metadataJson }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.updateInbox({\n                vaultId,\n                slug: slug ? slug : undefined,\n                metadata: metadataJson ? metadataJson : undefined,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    deleteInboxVault(vaultId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.deleteInboxVault({ vaultId });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    listMessagePublicKeys(organizationId, vaultIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.espbClient.listMessagePublicKeys({ organizationId, vaultIds });\n        });\n    }\n}\nexport function toPbVaultCreationData({ blob, locks, profileLock, adminProfileLock, organizationId, messagePublicKey, }) {\n    return new VaultCreationData({\n        firstCommitBlob: blob,\n        profileLock: profileLock ? toPbVaultProfileLock(profileLock) : undefined,\n        adminProfileLock: adminProfileLock ? toPbVaultProfileLock(adminProfileLock) : undefined,\n        authenticatorLocks: locks.map(toPbVaultAuthenticatorLock),\n        organizationId,\n        messagePublicKey,\n    });\n}\nexport function toVaultPairCreationData({ blob, locks, profileLock, adminProfileLock, messagePublicKey, associatedBlob, associatedLocks, associatedProfileLock, associatedAdminProfileLock, associatedMessagePublicKey, organizationId, }) {\n    return new VaultPairCreationData({\n        firstCommitBlob: blob,\n        authenticatorLocks: locks.map(toPbVaultAuthenticatorLock),\n        profileLock: profileLock ? toPbVaultProfileLock(profileLock) : undefined,\n        adminProfileLock: adminProfileLock ? toPbVaultProfileLock(adminProfileLock) : undefined,\n        messagePublicKey: messagePublicKey,\n        associatedFirstCommitBlob: associatedBlob,\n        associatedAuthenticatorLocks: associatedLocks.map(toPbVaultAuthenticatorLock),\n        associatedProfileLock: associatedProfileLock\n            ? toPbVaultProfileLock(associatedProfileLock)\n            : undefined,\n        associatedAdminProfileLock: associatedAdminProfileLock\n            ? toPbVaultProfileLock(associatedAdminProfileLock)\n            : undefined,\n        associatedMessagePublicKey: associatedMessagePublicKey,\n        organizationId: organizationId,\n    });\n}\nexport function toVaultRegenerateData(dto) {\n    const vault = new VaultRegenerateData(Object.assign(Object.assign({}, dto), { squashedCommits: dto.blob, authenticatorLocks: dto.locks.map(toPbVaultAuthenticatorLock), profileLocks: dto.profileLocks.map(toPbVaultProfileLock) }));\n    return vault;\n}\n//# sourceMappingURL=vaults.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Timestamp } from '@bufbuild/protobuf';\nimport { RegistrationInfoStatus } from './espb/registration_info_status_pb';\nimport { knownEnumOrDefault, requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nimport { ProfileType, OrganizationType, } from './types';\nimport { toPbVaultCreationData } from './vaults';\nexport default class AccountServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    getRegistrationInfo(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.getRegistrationInfo({ email });\n            return {\n                status: knownEnumOrDefault(resp.status, RegistrationInfoStatus),\n                organization: resp.organization\n                    ? {\n                        id: requireFieldNotEmpty(resp.organization.id),\n                        name: resp.organization.name,\n                        icon: resp.organization.icon || undefined,\n                        startCodePrefix: resp.organization.startCodePrefix || undefined,\n                        profileId: resp.organization.profileId || undefined,\n                        organizationType: knownEnumOrDefault(resp.organization.organizationType, OrganizationType),\n                    }\n                    : undefined,\n                webauthnAllowed: resp.webauthnAllowed,\n            };\n        });\n    }\n    createWithProfile(authenticators, prefsProfile, metaVault, inboxProfile, authenticatorBlock, referrerId, preliminaryEmail, sessionUnlockData, webauthnCredentialData, startCode, startCodeProfileId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createWithProfile({\n                preliminaryEmail: preliminaryEmail !== null && preliminaryEmail !== void 0 ? preliminaryEmail : undefined,\n                authenticators,\n                authenticatorBlock: authenticatorBlock === null || authenticatorBlock === void 0 ? void 0 : authenticatorBlock.blob,\n                authenticatorBlockSignature: authenticatorBlock === null || authenticatorBlock === void 0 ? void 0 : authenticatorBlock.signature,\n                referrerId: referrerId !== null && referrerId !== void 0 ? referrerId : undefined,\n                preferencesProfile: prefsProfile,\n                inboxProfile: inboxProfile,\n                metaVault: toPbVaultCreationData(metaVault),\n                sessionUnlockData: sessionUnlockData\n                    ? {\n                        encryptedSecret: sessionUnlockData.encryptedSecret,\n                        unlockMaxExpiresAt: sessionUnlockData.unlockMaxExpiresAt\n                            ? Timestamp.fromDate(sessionUnlockData.unlockMaxExpiresAt)\n                            : undefined,\n                    }\n                    : undefined,\n                webauthnCredentialData,\n                startCode,\n                startCodeProfileId,\n            });\n            const authenticatorDtos = resp.authenticatorIds.map((id, i) => (Object.assign(Object.assign({}, authenticators[i].data), { id })));\n            const token = requireFieldNotEmpty(resp.accessToken);\n            const loginData = {\n                userId: requireFieldNotEmpty(resp.userId),\n                sessionId: requireFieldNotEmpty(resp.sessionId),\n                token: requireFieldNotEmpty(token.token),\n            };\n            return { userId: resp.userId, authenticatorDtos, loginData };\n        });\n    }\n    createReferrer(referrer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createReferrer({ referrer });\n            return requireFieldNotEmpty(resp.referrerId);\n        });\n    }\n    addAchievements(achievementIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.addAchievements({ achievements: achievementIds });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    update({ preferredLocale, userClientSettings, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.update({\n                preferredLocale: preferredLocale === null ? '' : preferredLocale,\n                userClientSettings: userClientSettings === null ? '' : userClientSettings,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    list(knownUsers, userEmails, profileIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.list({ emails: userEmails, users: knownUsers, profileIds });\n            const users = resp.users.map((u) => {\n                return Object.assign(Object.assign({}, u), { id: requireFieldNotEmpty(u.userId) });\n            });\n            return { users };\n        });\n    }\n    resolveEmails(emails, failFast) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.espbClient.resolveEmails({ emails, failFast });\n            return result.emails.map((e) => (Object.assign(Object.assign({}, e), { userId: e.userId || null, profiles: e.profiles.map((p) => ({\n                    profileId: requireFieldNotEmpty(p.id),\n                    profileType: knownEnumOrDefault(p.profileType, ProfileType),\n                    organizationId: p.organizationId || null,\n                })) })));\n        });\n    }\n    getPaddleConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.getPaddleConfig({});\n            return Object.assign(Object.assign({}, resp), { vendorId: Number(resp.vendorId), productIdMonthly: Number(resp.productIdMonthly), productIdYearly: Number(resp.productIdYearly) });\n        });\n    }\n    deleteAccount() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.delete({});\n        });\n    }\n}\n//# sourceMappingURL=accounts.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file auditlog_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, protoInt64, Timestamp } from \"@bufbuild/protobuf\";\nimport { AuditlogEventType } from \"./auditlog_event_type_pb.js\";\n/**\n * @generated from message domain.WriteEventsRequest\n */\nexport class WriteEventsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.WriteEventsRequest.Event events = 1;\n         */\n        this.events = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new WriteEventsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new WriteEventsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new WriteEventsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(WriteEventsRequest, a, b);\n    }\n}\nWriteEventsRequest.runtime = proto3;\nWriteEventsRequest.typeName = \"domain.WriteEventsRequest\";\nWriteEventsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"events\", kind: \"message\", T: WriteEventsRequest_Event, repeated: true },\n]);\n/**\n * @generated from message domain.WriteEventsRequest.Event\n */\nexport class WriteEventsRequest_Event extends Message {\n    constructor(data) {\n        super();\n        /**\n         * organization id is implicit by auth token\n         *\n         * @generated from field: string event_json = 1;\n         */\n        this.eventJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new WriteEventsRequest_Event().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new WriteEventsRequest_Event().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new WriteEventsRequest_Event().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(WriteEventsRequest_Event, a, b);\n    }\n}\nWriteEventsRequest_Event.runtime = proto3;\nWriteEventsRequest_Event.typeName = \"domain.WriteEventsRequest.Event\";\nWriteEventsRequest_Event.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"event_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"client_time\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"last_known_server_time\", kind: \"message\", T: Timestamp },\n]);\n/**\n * @generated from message domain.WriteEventsResponse\n */\nexport class WriteEventsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string event_ids = 1;\n         */\n        this.eventIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new WriteEventsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new WriteEventsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new WriteEventsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(WriteEventsResponse, a, b);\n    }\n}\nWriteEventsResponse.runtime = proto3;\nWriteEventsResponse.typeName = \"domain.WriteEventsResponse\";\nWriteEventsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"event_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * organization id is implicit by auth token\n *\n * @generated from message domain.ListEventsRequest\n */\nexport class ListEventsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: int32 page = 2;\n         */\n        this.page = 0;\n        /**\n         * for each non-empty filter_*,\n         * filter events to have one of the listed values\n         *\n         * @generated from field: repeated domain.AuditlogEventType event_types = 5;\n         */\n        this.eventTypes = [];\n        /**\n         * @generated from field: repeated string filter_profile_ids = 6;\n         */\n        this.filterProfileIds = [];\n        /**\n         * @generated from field: repeated string filter_target_profile_ids = 11;\n         */\n        this.filterTargetProfileIds = [];\n        /**\n         * @generated from field: repeated string filter_vault_ids = 7;\n         */\n        this.filterVaultIds = [];\n        /**\n         * @generated from field: repeated string filter_login_ids = 8;\n         */\n        this.filterLoginIds = [];\n        /**\n         * @generated from field: string filter_ip_prefix = 10;\n         */\n        this.filterIpPrefix = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListEventsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListEventsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListEventsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListEventsRequest, a, b);\n    }\n}\nListEventsRequest.runtime = proto3;\nListEventsRequest.typeName = \"domain.ListEventsRequest\";\nListEventsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"time_anchor\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"page\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"from_time\", kind: \"message\", T: Timestamp },\n    { no: 4, name: \"to_time\", kind: \"message\", T: Timestamp },\n    { no: 5, name: \"event_types\", kind: \"enum\", T: proto3.getEnumType(AuditlogEventType), repeated: true },\n    { no: 6, name: \"filter_profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 11, name: \"filter_target_profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 7, name: \"filter_vault_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 8, name: \"filter_login_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 10, name: \"filter_ip_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"additional_filter\", kind: \"message\", T: ListEventsRequest_MatchAnyFilter },\n]);\n/**\n * @generated from message domain.ListEventsRequest.MatchAnyFilter\n */\nexport class ListEventsRequest_MatchAnyFilter extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Keep all events matching any of the ids below\n         *\n         * @generated from field: repeated string profile_ids = 1;\n         */\n        this.profileIds = [];\n        /**\n         * @generated from field: repeated string target_profile_ids = 5;\n         */\n        this.targetProfileIds = [];\n        /**\n         * @generated from field: repeated string vault_ids = 2;\n         */\n        this.vaultIds = [];\n        /**\n         * @generated from field: repeated string login_ids = 3;\n         */\n        this.loginIds = [];\n        /**\n         * @generated from field: string filter_ip_prefix = 4;\n         */\n        this.filterIpPrefix = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListEventsRequest_MatchAnyFilter().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListEventsRequest_MatchAnyFilter().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListEventsRequest_MatchAnyFilter().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListEventsRequest_MatchAnyFilter, a, b);\n    }\n}\nListEventsRequest_MatchAnyFilter.runtime = proto3;\nListEventsRequest_MatchAnyFilter.typeName = \"domain.ListEventsRequest.MatchAnyFilter\";\nListEventsRequest_MatchAnyFilter.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 5, name: \"target_profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"vault_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 3, name: \"login_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"filter_ip_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ListEventsResponse\n */\nexport class ListEventsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string enveloped_event_json = 1;\n         */\n        this.envelopedEventJson = [];\n        /**\n         * @generated from field: int64 total_count = 2;\n         */\n        this.totalCount = protoInt64.zero;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListEventsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListEventsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListEventsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListEventsResponse, a, b);\n    }\n}\nListEventsResponse.runtime = proto3;\nListEventsResponse.typeName = \"domain.ListEventsResponse\";\nListEventsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"enveloped_event_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"total_count\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"time_anchor\", kind: \"message\", T: Timestamp },\n]);\n//# sourceMappingURL=auditlog_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file auditlog_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { ListEventsRequest, ListEventsResponse, WriteEventsRequest, WriteEventsResponse } from \"./auditlog_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * AuditlogService provides methods for handling user accounts.\n *\n * @generated from service domain.AuditlogService\n */\nexport const AuditlogService = {\n    typeName: \"domain.AuditlogService\",\n    methods: {\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - AuditlogMalformedEvent (90500)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.AuditlogService.WriteEvents\n         */\n        writeEvents: {\n            name: \"WriteEvents\",\n            I: WriteEventsRequest,\n            O: WriteEventsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.AuditlogService.ListEvents\n         */\n        listEvents: {\n            name: \"ListEvents\",\n            I: ListEventsRequest,\n            O: ListEventsResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=auditlog_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file errors.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Any, Message, proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from message domain.DomainError\n */\nexport class DomainError extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Code that can be used by the client application to handle this specific type of error.\n         * See /backend/domainerr/errors.go for error codes.\n         *\n         * @generated from field: int32 code = 1;\n         */\n        this.code = 0;\n        /**\n         * UserTitle is a user-friendly title of the error.\n         * It must not change between occurances of the error (except for localization.)\n         * Use UserDetail for instance specific details.\n         *\n         * @generated from field: string user_title = 3;\n         */\n        this.userTitle = \"\";\n        /**\n         * UserDetail is a user-friendly error message describing what went wrong.\n         * Clients need to escape this string as it might contain user-provided data.\n         *\n         * @generated from field: string user_detail = 4;\n         */\n        this.userDetail = \"\";\n        /**\n         * RequestId to identify the erroneous request in the logs.\n         *\n         * @generated from field: string request_id = 5;\n         */\n        this.requestId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DomainError().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DomainError().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DomainError().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DomainError, a, b);\n    }\n}\nDomainError.runtime = proto3;\nDomainError.typeName = \"domain.DomainError\";\nDomainError.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"code\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"user_title\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"user_detail\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * The `Status` type defines a logical error model that is suitable for\n * different programming environments, including REST APIs and RPC APIs. It is\n * used by [gRPC](https://github.com/grpc). Each `Status` message contains\n * three pieces of data: error code, error message, and error details.\n *\n * You can find out more about this error model and how to work with it in the\n * [API Design Guide](https://cloud.google.com/apis/design/errors).\n *\n * @generated from message domain.Status\n */\nexport class Status extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n         *\n         * @generated from field: int32 code = 1;\n         */\n        this.code = 0;\n        /**\n         * A developer-facing error message, which should be in English. Any\n         * user-facing error message should be localized and sent in the\n         * [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n         *\n         * @generated from field: string message = 2;\n         */\n        this.message = \"\";\n        /**\n         * A list of messages that carry the error details.  There is a common set of\n         * message types for APIs to use.\n         *\n         * @generated from field: repeated google.protobuf.Any details = 3;\n         */\n        this.details = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Status().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Status().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Status().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Status, a, b);\n    }\n}\nStatus.runtime = proto3;\nStatus.typeName = \"domain.Status\";\nStatus.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"code\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"details\", kind: \"message\", T: Any, repeated: true },\n]);\n//# sourceMappingURL=errors_pb.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { MethodKind } from '@bufbuild/protobuf';\nimport { Code, ConnectError, createPromiseClient, makeAnyClient, } from '@connectrpc/connect';\nimport { createGrpcWebTransport } from '@connectrpc/connect-web';\nimport * as Sentry from '@sentry/minimal';\nimport Cancel from './cancel';\nimport debugConsole from './debugConsole';\nimport { BackendDomainError } from './errors';\nimport { NoResponseError } from './errorsClient';\nimport { ErrorCode } from './espb/error_codes_pb';\nimport { DomainError } from './espb/errors_pb';\nimport { trackError } from './promiseUtils';\nclass EspbServiceClientFactory {\n    static setDefaultTransport(createTransport) {\n        EspbServiceClientFactory.createTransport = createTransport;\n    }\n    constructor(config) {\n        this.config = Object.assign(Object.assign({}, config), { baseUri: config.baseUri.endsWith('/')\n                ? config.baseUri.substring(0, config.baseUri.length - 1)\n                : config.baseUri });\n    }\n    createServiceClient(service) {\n        const transport = EspbServiceClientFactory.createTransport({\n            baseUrl: this.config.baseUri,\n            interceptors: [this.createMetadataInterceptor(), this.createLogInterceptor()],\n            // Wrap fetch to handle type errors and turn them into ConnectErrors with an error code we can\n            // match on down the line. See https://github.com/bufbuild/connect-es/issues/715\n            fetch: fetchWithConnectErrors,\n        });\n        return this.makeDomainErrorPromiseClient(service, transport);\n    }\n    makeDomainErrorPromiseClient(service, transport) {\n        const baseClient = createPromiseClient(service, transport);\n        return makeAnyClient(service, (method) => {\n            switch (method.kind) {\n                case MethodKind.Unary:\n                    return function (req, options) {\n                        return __awaiter(this, void 0, void 0, function* () {\n                            try {\n                                const message = baseClient[method.localName](req, options);\n                                return yield message;\n                            }\n                            catch (e) {\n                                domainErrorFromConnectError(e);\n                            }\n                        });\n                    };\n                case MethodKind.ServerStreaming:\n                case MethodKind.ClientStreaming:\n                case MethodKind.BiDiStreaming:\n                    return function (req, options) {\n                        return __asyncGenerator(this, arguments, function* () {\n                            var _a, e_1, _b, _c;\n                            const messages = baseClient[method.localName](req, options);\n                            try {\n                                try {\n                                    for (var _d = true, messages_1 = __asyncValues(messages), messages_1_1; messages_1_1 = yield __await(messages_1.next()), _a = messages_1_1.done, !_a; _d = true) {\n                                        _c = messages_1_1.value;\n                                        _d = false;\n                                        const message = _c;\n                                        yield yield __await(message);\n                                    }\n                                }\n                                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                                finally {\n                                    try {\n                                        if (!_d && !_a && (_b = messages_1.return)) yield __await(_b.call(messages_1));\n                                    }\n                                    finally { if (e_1) throw e_1.error; }\n                                }\n                            }\n                            catch (e) {\n                                domainErrorFromConnectError(e);\n                            }\n                        });\n                    };\n                default:\n                    return null;\n            }\n        });\n    }\n    createLogInterceptor() {\n        return (next) => (req) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const clientOp = `${this.config.clientOperationName}/${this.config.clientOperationId}`;\n            const requestId = `${Math.floor(Math.random() * 10000)}`.padStart(5, '0');\n            const methodName = `${req.service.typeName}/${req.method.name}`;\n            const shortenedClientId = (_a = this.config.clientId) === null || _a === void 0 ? void 0 : _a.split('-')[0];\n            const log = (...data) => {\n                if (EspbServiceClientFactory.silent) {\n                    return;\n                }\n                debugConsole.log(shortenedClientId, clientOp, requestId, methodName, ...data);\n            };\n            if (!req.stream) {\n                // we don't use streaming requests, so we don't implement logging for them\n                log('->', req.message.toJson());\n            }\n            const result = yield next(req);\n            if (result.stream) {\n                return Object.assign(Object.assign({}, result), { message: this.wrapStreamLogger(result.message, log) });\n            }\n            else {\n                log('<-', result.message.toJson());\n                return result;\n            }\n        });\n    }\n    wrapStreamLogger(messages, log) {\n        return __asyncGenerator(this, arguments, function* wrapStreamLogger_1() {\n            var _a, e_2, _b, _c;\n            let firstResponseOk = false;\n            try {\n                for (var _d = true, messages_2 = __asyncValues(messages), messages_2_1; messages_2_1 = yield __await(messages_2.next()), _a = messages_2_1.done, !_a; _d = true) {\n                    _c = messages_2_1.value;\n                    _d = false;\n                    const message = _c;\n                    if (!firstResponseOk) {\n                        firstResponseOk = true;\n                        log(`First response`);\n                    }\n                    log(`Got stream message`, message);\n                    yield yield __await(message);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = messages_2.return)) yield __await(_b.call(messages_2));\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        });\n    }\n    createMetadataInterceptor() {\n        var _a, _b, _c, _d;\n        const authHeaders = [];\n        if ((_a = this.config.authTokens) === null || _a === void 0 ? void 0 : _a.backend) {\n            authHeaders.push('backend ' + this.config.authTokens.backend);\n        }\n        if ((_b = this.config.authTokens) === null || _b === void 0 ? void 0 : _b.auditlogWrite) {\n            authHeaders.push('auditlog-write ' + this.config.authTokens.auditlogWrite);\n        }\n        if ((_c = this.config.authTokens) === null || _c === void 0 ? void 0 : _c.auditlogAdmin) {\n            authHeaders.push('auditlog-admin ' + this.config.authTokens.auditlogAdmin);\n        }\n        if ((_d = this.config.authTokens) === null || _d === void 0 ? void 0 : _d.lfdOverridesAdmin) {\n            authHeaders.push('lfd-overrides-admin ' + this.config.authTokens.lfdOverridesAdmin);\n        }\n        const metadataInterceptor = (next) => (req) => __awaiter(this, void 0, void 0, function* () {\n            const metadata = req.header;\n            metadata.set('authorization', authHeaders.join(','));\n            if (this.config.clientId) {\n                metadata.set('client-id', this.config.clientId);\n            }\n            if (this.config.clientType) {\n                metadata.set('client-type', `${this.config.clientType}`);\n            }\n            if (this.config.clientVersion) {\n                metadata.set('client-version', this.config.clientVersion);\n            }\n            if (this.config.syncVersion !== null) {\n                metadata.set('sync-version', `${this.config.syncVersion}`);\n            }\n            if (this.config.permissionUserId) {\n                metadata.set('permission-user-id', this.config.permissionUserId);\n            }\n            if (this.config.syncSuperUsers) {\n                metadata.set('sync-superusers', 'ok');\n            }\n            if (this.config.clientOperationId) {\n                metadata.set('client-operation-id', this.config.clientOperationId);\n            }\n            if (this.config.clientOperationName) {\n                metadata.set('client-operation-name', this.config.clientOperationName);\n            }\n            return next(req);\n        });\n        return metadataInterceptor;\n    }\n}\nEspbServiceClientFactory.silent = true;\nEspbServiceClientFactory.createTransport = createGrpcWebTransport;\nexport default EspbServiceClientFactory;\nfunction domainErrorFromConnectError(reason) {\n    const error = ConnectError.from(reason);\n    Sentry.addBreadcrumb({\n        type: 'info',\n        category: 'connectError',\n        data: {\n            reason,\n            error,\n        },\n    });\n    if (error.code === Code.Canceled) {\n        throw new Cancel();\n    }\n    const domainErrorDetails = error.findDetails(DomainError);\n    if (domainErrorDetails.length > 0) {\n        const espbDomainError = domainErrorDetails[0];\n        throw new BackendDomainError(error.code, espbDomainError.code, error.message, espbDomainError.userTitle, espbDomainError.userDetail, espbDomainError.requestId);\n    }\n    if (error.code === Code.Unavailable) {\n        throw new NoResponseError();\n    }\n    // Unfortunately, there are several scenarios where espb throws an unknown or interal error code,\n    // which we can only distinguish by matching the error string.\n    if (error.code === Code.Unknown || error.code === Code.Internal) {\n        switch (error.rawMessage) {\n            case 'network error':\n                throw new NoResponseError();\n            // This happens in particular when the backend is redeployed and the reverse proxy cuts the\n            // stream with a non-protobuf response, which happens on redeployment.\n            case 'missing trailer':\n                throw new NoResponseError();\n        }\n        if (\n        // e.g. read ECONNABORTED\n        error.rawMessage.includes('ECONNABORTED') ||\n            // e.g. connect ECONNABORTED 111.111.111.111:443\n            error.rawMessage.includes('ECONNRESET') ||\n            // e.g. connect EHOSTUNREACH 111.111.111.111:443\n            error.rawMessage.includes('EHOSTUNREACH')) {\n            // These are linux TCP connection error states that may happen when a connection is\n            // unexpectedly closed, aborted, reset, etc. We get this only while running in nodejs.\n            throw new NoResponseError();\n        }\n    }\n    // Similar to above, this error happens when we receive non-protobuf data from the reverse proxy.\n    if (error.code === Code.InvalidArgument) {\n        if (error.rawMessage.startsWith('parse binary')) {\n            throw new NoResponseError();\n        }\n        if (error.rawMessage.startsWith('unexpected response content type')) {\n            throw new NoResponseError();\n        }\n    }\n    throw new BackendDomainError(error.code, ErrorCode.UNDEFINED, error.message, 'An unexpected error occurred', `An unexpected error occurred while communicating with the server: ${error.message}. We are investigating. Please make sure you are using the latest version of our software and try again.`, 'no-request-id');\n}\n/*\n * A wrapper around fetch that forces all type errors to Code.Unavailable. Without this, connect\n * incorrectly treats them as unknown errors.\n *\n * This is not a fully accurate error handling, fetch may also throw type errors for quite a few\n * other reasons, but it's the best we can do without string matching browser dependent error\n * messages. In real use all errors thrown here should be related to network conditions.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/fetch#exceptions\n */\nfunction fetchWithConnectErrors(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // handle errors during the fetch call itself\n        let response;\n        try {\n            response = yield fetch(...args);\n        }\n        catch (e) {\n            if (e instanceof TypeError) {\n                throw new ConnectError('Fetch error', Code.Unavailable, undefined, undefined, e);\n            }\n            throw e;\n        }\n        if (!response.body) {\n            return response;\n        }\n        // This acquires a lock to the body stream\n        const reader = response.body.getReader();\n        // Handle errors during the response's body stream. This is needed for stream calls where the body\n        // continues after the fetch already has completed\n        const wrappedStream = new ReadableStream({\n            start(controller) {\n                function push() {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        try {\n                            while (true) {\n                                // Read from the stream\n                                const { done, value } = yield reader.read();\n                                // Exit if we're done\n                                if (done) {\n                                    controller.close();\n                                    return;\n                                }\n                                // Else yield the chunk\n                                controller.enqueue(value);\n                            }\n                        }\n                        catch (e) {\n                            if (e instanceof TypeError) {\n                                controller.error(new ConnectError('Fetch error', Code.Unavailable, undefined, undefined, e));\n                            }\n                            controller.error(e);\n                        }\n                        finally {\n                            // Release the lock once we're done with the stream reader\n                            reader.releaseLock();\n                        }\n                    });\n                }\n                push().catch(trackError);\n            },\n        });\n        const wrappedResponse = new Response(wrappedStream, {\n            status: response.status,\n            statusText: response.statusText,\n            headers: response.headers,\n        });\n        return wrappedResponse;\n    });\n}\n//# sourceMappingURL=EspbServiceClientFactory.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Timestamp } from '@bufbuild/protobuf';\nimport { AuditlogService } from './espb/auditlog_service_connect';\nimport EspbServiceClientFactory from './EspbServiceClientFactory';\nimport { requireFieldNotEmpty } from './grpcUtils';\nexport default class AuditlogAdminClient {\n    constructor(baseUri, authToken, clientType, clientId = null, clientVersion = null) {\n        this.baseUri = baseUri;\n        this.authToken = authToken;\n        this.clientType = clientType;\n        this.clientId = clientId;\n        this.clientVersion = clientVersion;\n        const factory = new EspbServiceClientFactory({\n            authTokens: {\n                auditlogAdmin: authToken,\n            },\n            clientId,\n            clientType,\n            clientVersion,\n            baseUri,\n            clientOperationId: null,\n            clientOperationName: null,\n            syncVersion: null,\n            syncSuperUsers: false,\n            permissionUserId: null,\n        });\n        this.espbClient = factory.createServiceClient(AuditlogService);\n    }\n    listEvents(page, filter, timeAnchor, cancelToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.listEvents({\n                page: page,\n                timeAnchor: timeAnchor ? Timestamp.fromDate(timeAnchor) : undefined,\n                fromTime: filter.fromTime ? Timestamp.fromDate(filter.fromTime) : undefined,\n                toTime: filter.toTime ? Timestamp.fromDate(filter.toTime) : undefined,\n                eventTypes: filter.eventTypes,\n                filterLoginIds: filter.loginIds,\n                filterProfileIds: filter.profileIds,\n                filterTargetProfileIds: filter.targetProfileIds,\n                filterVaultIds: filter.vaultIds,\n                filterIpPrefix: filter.ipPrefix,\n                additionalFilter: filter.additionalFilter\n                    ? Object.assign(Object.assign({}, filter.additionalFilter), { filterIpPrefix: filter.additionalFilter.ipPrefix }) : undefined,\n            }, { signal: cancelToken === null || cancelToken === void 0 ? void 0 : cancelToken.signal });\n            const events = resp.envelopedEventJson;\n            const totalCount = Number(resp.totalCount);\n            const respTimeAnchor = requireFieldNotEmpty(resp.timeAnchor).toDate();\n            return { totalCount, events, timeAnchor: respTimeAnchor };\n        });\n    }\n}\n//# sourceMappingURL=auditlogAdminClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Timestamp } from '@bufbuild/protobuf';\nimport { AuditlogService } from './espb/auditlog_service_connect';\nimport EspbServiceClientFactory from './EspbServiceClientFactory';\nimport { requireFieldNotEmpty } from './grpcUtils';\nexport default class AuditlogWriteClient {\n    constructor(baseUri, authToken, clientType, clientId = null, clientVersion = null) {\n        this.baseUri = baseUri;\n        this.authToken = authToken;\n        this.clientType = clientType;\n        this.clientId = clientId;\n        this.clientVersion = clientVersion;\n        const factory = new EspbServiceClientFactory({\n            authTokens: {\n                auditlogWrite: authToken,\n            },\n            clientId,\n            clientType,\n            clientVersion,\n            baseUri,\n            clientOperationId: null,\n            clientOperationName: null,\n            syncVersion: null,\n            syncSuperUsers: false,\n            permissionUserId: null,\n        });\n        this.espbClient = factory.createServiceClient(AuditlogService);\n    }\n    writeEvents(eventData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.writeEvents({\n                events: eventData.map(({ clientTime, lastKnownServerTime, event }) => ({\n                    eventJson: JSON.stringify(event),\n                    lastKnownServerTime: Timestamp.fromDate(lastKnownServerTime),\n                    clientTime: Timestamp.fromDate(clientTime),\n                })),\n            });\n            return requireFieldNotEmpty(resp.eventIds);\n        });\n    }\n}\n//# sourceMappingURL=auditlogWriteClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AuthenticatorType } from './espb/authenticator_type_pb';\nimport { knownEnumOrDefault, requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nimport { toPbProfileRegenerateData, } from './types';\nexport default class AuthenticatorServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    modify(createAuthenticatorOps, deleteAuthenticatorIds, authenticatorBlock, regeneratedProfileDtos = []) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.modify({\n                createAuthenticatorOps: createAuthenticatorOps,\n                authenticatorBlock: authenticatorBlock.blob,\n                authenticatorBlockSignature: authenticatorBlock.signature,\n                deleteAuthenticatorIds: deleteAuthenticatorIds,\n                profiles: regeneratedProfileDtos.map(toPbProfileRegenerateData),\n            });\n            return {\n                authenticatorIds: resp.authenticatorIds,\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n            };\n        });\n    }\n    setDeviceToken(fcmDeviceToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.setDeviceToken({ fcmDeviceToken });\n        });\n    }\n    list(latestAuthenticatorBlockHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.list({\n                latestAuthenticatorBlockHash,\n            });\n            const authenticators = resp.authenticators.map((a) => {\n                const data = requireFieldNotEmpty(a.data);\n                return {\n                    id: requireFieldNotEmpty(a.id),\n                    authenticatorType: knownEnumOrDefault(data.authenticatorType, AuthenticatorType),\n                    storableVaultKeyEncPubKey: requireFieldNotEmpty(data.storableVaultKeyEncPubKey),\n                    storableVaultKeyEncPubKeySignature: requireFieldNotEmpty(data.storableVaultKeyEncPubKeySignature),\n                    highSecurityVaultKeyEncPubKey: requireFieldNotEmpty(data.highSecurityVaultKeyEncPubKey),\n                    highSecurityVaultKeyEncPubKeySignature: requireFieldNotEmpty(data.highSecurityVaultKeyEncPubKeySignature),\n                    highSecurityIdentitySigPubKey: requireFieldNotEmpty(data.highSecurityIdentitySigPubKey),\n                    highSecurityLoginSigPubKey: requireFieldNotEmpty(data.highSecurityLoginSigPubKey),\n                    secretInfo: data.secretInfo,\n                    secretSalt: data.secretSalt,\n                    storableSigPubKey: requireFieldNotEmpty(data.storableSigPubKey),\n                    storableSigPubKeySignature: requireFieldNotEmpty(data.storableSigPubKeySignature),\n                    webauthn: data.webauthn\n                        ? {\n                            webauthnId: requireFieldNotEmpty(data.webauthn.webauthnId),\n                            prfSalt: requireFieldNotEmpty(data.webauthn.prfSalt),\n                        }\n                        : undefined,\n                };\n            });\n            const blocks = resp.authenticatorBlocks.map((as) => ({\n                blob: requireFieldNotEmpty(as.blob),\n                signature: requireFieldNotEmpty(as.signature),\n            }));\n            return {\n                blocks,\n                authenticators,\n            };\n        });\n    }\n    createInitialAuthenticatorBlock(blockDto) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createInitialAuthenticatorBlock({\n                authenticatorBlock: blockDto,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n}\n//# sourceMappingURL=authenticators.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file channel_messages.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from message domain.LoginClientPubKeyBody\n */\nexport class LoginClientPubKeyBody extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes client_pub_key = 1;\n         */\n        this.clientPubKey = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new LoginClientPubKeyBody().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new LoginClientPubKeyBody().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new LoginClientPubKeyBody().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(LoginClientPubKeyBody, a, b);\n    }\n}\nLoginClientPubKeyBody.runtime = proto3;\nLoginClientPubKeyBody.typeName = \"domain.LoginClientPubKeyBody\";\nLoginClientPubKeyBody.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"client_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.LoginAuthenticatorPubKeyBody\n */\nexport class LoginAuthenticatorPubKeyBody extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes authenticator_pub_key = 2;\n         */\n        this.authenticatorPubKey = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new LoginAuthenticatorPubKeyBody().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new LoginAuthenticatorPubKeyBody().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new LoginAuthenticatorPubKeyBody().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(LoginAuthenticatorPubKeyBody, a, b);\n    }\n}\nLoginAuthenticatorPubKeyBody.runtime = proto3;\nLoginAuthenticatorPubKeyBody.typeName = \"domain.LoginAuthenticatorPubKeyBody\";\nLoginAuthenticatorPubKeyBody.fields = proto3.util.newFieldList(() => [\n    { no: 2, name: \"authenticator_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.LoginHashCommitmentBody\n */\nexport class LoginHashCommitmentBody extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes hash_commitment = 3;\n         */\n        this.hashCommitment = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new LoginHashCommitmentBody().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new LoginHashCommitmentBody().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new LoginHashCommitmentBody().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(LoginHashCommitmentBody, a, b);\n    }\n}\nLoginHashCommitmentBody.runtime = proto3;\nLoginHashCommitmentBody.typeName = \"domain.LoginHashCommitmentBody\";\nLoginHashCommitmentBody.fields = proto3.util.newFieldList(() => [\n    { no: 3, name: \"hash_commitment\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.LoginEncryptedSecretBody\n */\nexport class LoginEncryptedSecretBody extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes encrypted_secret = 1;\n         */\n        this.encryptedSecret = new Uint8Array(0);\n        /**\n         * @generated from field: string authenticator_id = 2;\n         */\n        this.authenticatorId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new LoginEncryptedSecretBody().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new LoginEncryptedSecretBody().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new LoginEncryptedSecretBody().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(LoginEncryptedSecretBody, a, b);\n    }\n}\nLoginEncryptedSecretBody.runtime = proto3;\nLoginEncryptedSecretBody.typeName = \"domain.LoginEncryptedSecretBody\";\nLoginEncryptedSecretBody.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"encrypted_secret\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 2, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n//# sourceMappingURL=channel_messages_pb.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Message } from '@bufbuild/protobuf';\nimport { InvalidChannelMessageError } from './errorsClient';\nimport { LoginHashCommitmentBody, LoginClientPubKeyBody, LoginAuthenticatorPubKeyBody, LoginEncryptedSecretBody, } from './espb/channel_messages_pb';\nimport { requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nimport { ChannelRecipient, } from './types';\nexport default class ChannelServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    create(userId, data, type, exposed) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.create({\n                userId: userId,\n                data: data,\n                channelType: type,\n                exposed: exposed,\n            });\n            return requireFieldNotEmpty(resp.channelId);\n        });\n    }\n    claim(deserialize, channelId, authenticatorId, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.claim({ channelId, authenticatorId, data });\n            try {\n                return deserialize(resp.data);\n            }\n            catch (e) {\n                throw new InvalidChannelMessageError();\n            }\n        });\n    }\n    read(deserialize, channelId, recipient, cancelToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.read({ channelId, recipient }, { signal: cancelToken === null || cancelToken === void 0 ? void 0 : cancelToken.signal });\n            try {\n                return deserialize(resp.data);\n            }\n            catch (e) {\n                throw new InvalidChannelMessageError();\n            }\n        });\n    }\n    write(channelId, recipient, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.write({ channelId, data, recipient });\n        });\n    }\n    delete(channelId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.delete({ channelId });\n            const respSyncUpdate = resp.syncUpdate;\n            if (respSyncUpdate) {\n                const syncUpdate = toSyncDto(respSyncUpdate);\n                return { syncUpdate };\n            }\n            return {};\n        });\n    }\n    loginChannelInitialize(userId, hashCommitment) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const message = new LoginHashCommitmentBody({ hashCommitment });\n            return this.create(userId, message.toBinary(), 'login', true);\n        });\n    }\n    loginChannelClose(channelId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.delete(channelId).then((resp) => resp.syncUpdate);\n        });\n    }\n    loginChannelSendClientPubKey(pushChannelId, clientPubKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const message = new LoginClientPubKeyBody({ clientPubKey });\n            yield this.write(pushChannelId, ChannelRecipient.AUTHENTICATOR, message.toBinary());\n        });\n    }\n    loginChannelReceiveAuthenticatorPubKey(pushChannelId, cancelToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const message = yield this.read(LoginAuthenticatorPubKeyBody.fromBinary, pushChannelId, ChannelRecipient.CLIENT, cancelToken);\n            return requireFieldNotEmpty(message.authenticatorPubKey);\n        });\n    }\n    loginChannelReceiveEncryptedSecret(pushChannelId, cancelToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const message = yield this.read(LoginEncryptedSecretBody.fromBinary, pushChannelId, ChannelRecipient.CLIENT, cancelToken);\n            return {\n                authenticatorId: requireFieldNotEmpty(message.authenticatorId),\n                encryptedSecret: requireFieldNotEmpty(message.encryptedSecret),\n            };\n        });\n    }\n    loginChannelSendEncryptedSecret(pushChannelId, encryptedSecret, authenticatorId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const message = new LoginEncryptedSecretBody({ encryptedSecret, authenticatorId });\n            yield this.write(pushChannelId, ChannelRecipient.CLIENT, message.toBinary());\n        });\n    }\n    loginChannelClaimAndReceiveHashCommitment(pushChannelId, authenticatorId, authenticatorPubKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const authPubKeyMessage = new LoginAuthenticatorPubKeyBody({ authenticatorPubKey });\n            const hashCommitmentMessage = yield this.claim(LoginHashCommitmentBody.fromBinary, pushChannelId, authenticatorId, authPubKeyMessage.toBinary());\n            return requireFieldNotEmpty(hashCommitmentMessage.hashCommitment);\n        });\n    }\n    loginChannelReceiveClientPubKey(pushChannelId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const message = yield this.read(LoginClientPubKeyBody.fromBinary, pushChannelId, ChannelRecipient.AUTHENTICATOR);\n            return requireFieldNotEmpty(message.clientPubKey);\n        });\n    }\n    loginChannelWaitUntilClosed(pushChannelId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.read((b) => new Message().fromBinary(b), pushChannelId, ChannelRecipient.AUTHENTICATOR);\n            }\n            catch (e) {\n                // channel closed now or already closed, return ok\n            }\n        });\n    }\n}\n//# sourceMappingURL=channels.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nimport { toPbVaultLock, } from './types';\nimport { toPbVaultCreationData } from './vaults';\nexport default class ChildOrganizationServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    list(parentOrganizationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.list({ parentOrganizationId });\n            return resp.childOrganizations.map((co) => ({\n                id: requireFieldNotEmpty(co.id),\n                name: requireFieldNotEmpty(co.name),\n                licenseCount: co.licenseCount,\n                users: co.users.map((u) => {\n                    var _a;\n                    return ({\n                        isAdmin: u.isAdmin,\n                        isNotConnected: u.isNotConnected,\n                        hasStartCode: u.hasStartCode,\n                        lastActiveAt: (_a = u.lastActiveAt) === null || _a === void 0 ? void 0 : _a.toDate(),\n                    });\n                }),\n                managers: co.managers,\n                createdAt: requireFieldNotEmpty(co.createdAt).toDate(),\n                parentOrganizationMetadata: co.parentOrganizationMetadata || undefined,\n            }));\n        });\n    }\n    addManager(childOrganizationId, parentOrganizationProfileId, { profile, personalVaultData, legacyAdminVaultLock, adminProfileLock, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.addManager({\n                adminProfileLock,\n                legacyAdminVaultLock: legacyAdminVaultLock ? toPbVaultLock(legacyAdminVaultLock) : undefined,\n                childOrganizationId,\n                profile,\n                personalVaultData: toPbVaultCreationData(personalVaultData),\n                parentOrganizationProfileId,\n            });\n            return {\n                profileId: requireFieldNotEmpty(resp.profileId),\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n            };\n        });\n    }\n    update(childOrganizationId, { parentOrganizationMetadata, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.update({\n                childOrganizationId,\n                parentOrganizationMetadata: parentOrganizationMetadata === null ? '' : parentOrganizationMetadata,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n}\n//# sourceMappingURL=childOrganizations.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Timestamp } from '@bufbuild/protobuf';\nimport { AuthenticatorType } from './espb/authenticator_type_pb';\nimport { knownEnumOrDefault, requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nexport default class CredentialServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    createChallenge(email, backupAuthenticatorId, userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createChallenge({\n                email: email !== null && email !== void 0 ? email : undefined,\n                userId: userId !== null && userId !== void 0 ? userId : undefined,\n                backupAuthenticatorId: backupAuthenticatorId !== null && backupAuthenticatorId !== void 0 ? backupAuthenticatorId : undefined,\n            });\n            return {\n                userId: requireFieldNotEmpty(resp.userId),\n                challenge: requireFieldNotEmpty(resp.challenge),\n                authenticators: resp.authenticators.map((a) => ({\n                    id: requireFieldNotEmpty(a.id),\n                    authenticatorType: knownEnumOrDefault(a.authenticatorType, AuthenticatorType),\n                    secretInfo: a.secretInfo,\n                    webauthn: a.webauthn\n                        ? {\n                            webauthnId: requireFieldNotEmpty(a.webauthn.webauthnId),\n                            prfSalt: requireFieldNotEmpty(a.webauthn.prfSalt),\n                        }\n                        : undefined,\n                })),\n            };\n        });\n    }\n    createLongPollChannelChallenge(publicKeyHash, cancelToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createLongPollChannelChallenge({ publicKeyHash }, { signal: cancelToken.signal });\n            const auth = requireFieldNotEmpty(resp.authenticator);\n            return {\n                userId: requireFieldNotEmpty(resp.userId),\n                challenge: requireFieldNotEmpty(resp.challenge),\n                authenticator: {\n                    id: auth.id,\n                    authenticatorType: knownEnumOrDefault(auth.authenticatorType, AuthenticatorType),\n                    secretInfo: auth.secretInfo,\n                },\n                authenticatorReply: requireFieldNotEmpty(resp.authenticatorReply),\n            };\n        });\n    }\n    completeLongPollChannel(publicKeyHash, authenticatorId, authenticatorReply) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.completeLongPollChannel({\n                publicKeyHash,\n                authenticatorId,\n                authenticatorReply,\n            });\n        });\n    }\n    createTokens(userId, authenticatorId, challenge, responseData, sessionUnlock, sessionType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createTokens({\n                authenticatorId,\n                challenge,\n                response: responseData,\n                sessionType,\n                sessionUnlock: sessionUnlock\n                    ? Object.assign(Object.assign({}, sessionUnlock), { expiresAt: Timestamp.fromDate(sessionUnlock.expiresAt) }) : undefined,\n            });\n            const token = requireFieldNotEmpty(resp.accessToken);\n            const syncUpdate = toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n            const loginData = {\n                userId,\n                sessionId: requireFieldNotEmpty(resp.sessionId),\n                token: requireFieldNotEmpty(token.token),\n            };\n            return { loginData, syncUpdate };\n        });\n    }\n    createAuditlogWriteToken(organizationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createAuditlogWriteToken({ organizationId });\n            const token = requireFieldNotEmpty(resp.token);\n            return {\n                token: requireFieldNotEmpty(token.token),\n                expiresAt: requireFieldNotEmpty(token.expiresAt).toDate(),\n            };\n        });\n    }\n    createAuditlogAdminToken(organizationId, cancelToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createAuditlogAdminToken({ organizationId }, { signal: cancelToken === null || cancelToken === void 0 ? void 0 : cancelToken.signal });\n            const token = requireFieldNotEmpty(resp.token);\n            return {\n                token: requireFieldNotEmpty(token.token),\n                expiresAt: requireFieldNotEmpty(token.expiresAt).toDate(),\n            };\n        });\n    }\n    createLFDOverridesAdminToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createLFDOverridesAdminToken({});\n            const token = requireFieldNotEmpty(resp.token);\n            return {\n                token: requireFieldNotEmpty(token.token),\n                expiresAt: requireFieldNotEmpty(token.expiresAt).toDate(),\n            };\n        });\n    }\n    refreshToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.refreshToken({});\n            const token = requireFieldNotEmpty(resp.newAccessToken);\n            return token.token;\n        });\n    }\n}\n//# sourceMappingURL=credentials.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file credential_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, Timestamp } from \"@bufbuild/protobuf\";\nimport { AuthenticatorType } from \"./authenticator_type_pb.js\";\nimport { SessionType } from \"./session_type_pb.js\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\n/**\n * @generated from message domain.Token\n */\nexport class Token extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string token = 1;\n         */\n        this.token = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Token().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Token().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Token().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Token, a, b);\n    }\n}\nToken.runtime = proto3;\nToken.typeName = \"domain.Token\";\nToken.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"expires_at\", kind: \"message\", T: Timestamp },\n]);\n/**\n * Set exactly one field.\n *\n * @generated from message domain.CreateChallengeRequest\n */\nexport class CreateChallengeRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: string backup_authenticator_id = 3;\n         */\n        this.backupAuthenticatorId = \"\";\n        /**\n         * @generated from field: string user_id = 4;\n         */\n        this.userId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateChallengeRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateChallengeRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateChallengeRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateChallengeRequest, a, b);\n    }\n}\nCreateChallengeRequest.runtime = proto3;\nCreateChallengeRequest.typeName = \"domain.CreateChallengeRequest\";\nCreateChallengeRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"backup_authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateChallengeResponse\n */\nexport class CreateChallengeResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * TODO: Token challenge = 1;\n         *\n         * @generated from field: string user_id = 1;\n         */\n        this.userId = \"\";\n        /**\n         * @generated from field: string challenge = 2;\n         */\n        this.challenge = \"\";\n        /**\n         * @generated from field: repeated domain.CreateChallengeResponse.Authenticator authenticators = 3;\n         */\n        this.authenticators = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateChallengeResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateChallengeResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateChallengeResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateChallengeResponse, a, b);\n    }\n}\nCreateChallengeResponse.runtime = proto3;\nCreateChallengeResponse.typeName = \"domain.CreateChallengeResponse\";\nCreateChallengeResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"challenge\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"authenticators\", kind: \"message\", T: CreateChallengeResponse_Authenticator, repeated: true },\n]);\n/**\n * @generated from message domain.CreateChallengeResponse.Authenticator\n */\nexport class CreateChallengeResponse_Authenticator extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: domain.AuthenticatorType authenticator_type = 4;\n         */\n        this.authenticatorType = AuthenticatorType.UNKNOWN;\n        /**\n         * @generated from field: string secret_info = 3;\n         */\n        this.secretInfo = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateChallengeResponse_Authenticator().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateChallengeResponse_Authenticator().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateChallengeResponse_Authenticator().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateChallengeResponse_Authenticator, a, b);\n    }\n}\nCreateChallengeResponse_Authenticator.runtime = proto3;\nCreateChallengeResponse_Authenticator.typeName = \"domain.CreateChallengeResponse.Authenticator\";\nCreateChallengeResponse_Authenticator.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"authenticator_type\", kind: \"enum\", T: proto3.getEnumType(AuthenticatorType) },\n    { no: 3, name: \"secret_info\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"webauthn\", kind: \"message\", T: CreateChallengeResponse_Authenticator_Webauthn },\n]);\n/**\n * @generated from message domain.CreateChallengeResponse.Authenticator.Webauthn\n */\nexport class CreateChallengeResponse_Authenticator_Webauthn extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string webauthn_id = 1;\n         */\n        this.webauthnId = \"\";\n        /**\n         * @generated from field: bytes prf_salt = 2;\n         */\n        this.prfSalt = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateChallengeResponse_Authenticator_Webauthn().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateChallengeResponse_Authenticator_Webauthn().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateChallengeResponse_Authenticator_Webauthn().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateChallengeResponse_Authenticator_Webauthn, a, b);\n    }\n}\nCreateChallengeResponse_Authenticator_Webauthn.runtime = proto3;\nCreateChallengeResponse_Authenticator_Webauthn.typeName = \"domain.CreateChallengeResponse.Authenticator.Webauthn\";\nCreateChallengeResponse_Authenticator_Webauthn.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"webauthn_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"prf_salt\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.CreateLongPollChannelChallengeRequest\n */\nexport class CreateLongPollChannelChallengeRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string public_key_hash = 1;\n         */\n        this.publicKeyHash = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateLongPollChannelChallengeRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateLongPollChannelChallengeRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateLongPollChannelChallengeRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateLongPollChannelChallengeRequest, a, b);\n    }\n}\nCreateLongPollChannelChallengeRequest.runtime = proto3;\nCreateLongPollChannelChallengeRequest.typeName = \"domain.CreateLongPollChannelChallengeRequest\";\nCreateLongPollChannelChallengeRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"public_key_hash\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateLongPollChannelChallengeResponse\n */\nexport class CreateLongPollChannelChallengeResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string user_id = 1;\n         */\n        this.userId = \"\";\n        /**\n         * @generated from field: string challenge = 2;\n         */\n        this.challenge = \"\";\n        /**\n         * @generated from field: bytes authenticator_reply = 4;\n         */\n        this.authenticatorReply = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateLongPollChannelChallengeResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateLongPollChannelChallengeResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateLongPollChannelChallengeResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateLongPollChannelChallengeResponse, a, b);\n    }\n}\nCreateLongPollChannelChallengeResponse.runtime = proto3;\nCreateLongPollChannelChallengeResponse.typeName = \"domain.CreateLongPollChannelChallengeResponse\";\nCreateLongPollChannelChallengeResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"challenge\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"authenticator\", kind: \"message\", T: CreateLongPollChannelChallengeResponse_Authenticator },\n    { no: 4, name: \"authenticator_reply\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.CreateLongPollChannelChallengeResponse.Authenticator\n */\nexport class CreateLongPollChannelChallengeResponse_Authenticator extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: domain.AuthenticatorType authenticator_type = 4;\n         */\n        this.authenticatorType = AuthenticatorType.UNKNOWN;\n        /**\n         * @generated from field: string secret_info = 3;\n         */\n        this.secretInfo = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateLongPollChannelChallengeResponse_Authenticator().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateLongPollChannelChallengeResponse_Authenticator().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateLongPollChannelChallengeResponse_Authenticator().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateLongPollChannelChallengeResponse_Authenticator, a, b);\n    }\n}\nCreateLongPollChannelChallengeResponse_Authenticator.runtime = proto3;\nCreateLongPollChannelChallengeResponse_Authenticator.typeName = \"domain.CreateLongPollChannelChallengeResponse.Authenticator\";\nCreateLongPollChannelChallengeResponse_Authenticator.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"authenticator_type\", kind: \"enum\", T: proto3.getEnumType(AuthenticatorType) },\n    { no: 3, name: \"secret_info\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CompleteLongPollChannelRequest\n */\nexport class CompleteLongPollChannelRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string public_key_hash = 1;\n         */\n        this.publicKeyHash = \"\";\n        /**\n         * @generated from field: string authenticator_id = 2;\n         */\n        this.authenticatorId = \"\";\n        /**\n         * @generated from field: bytes authenticator_reply = 3;\n         */\n        this.authenticatorReply = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CompleteLongPollChannelRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CompleteLongPollChannelRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CompleteLongPollChannelRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CompleteLongPollChannelRequest, a, b);\n    }\n}\nCompleteLongPollChannelRequest.runtime = proto3;\nCompleteLongPollChannelRequest.typeName = \"domain.CompleteLongPollChannelRequest\";\nCompleteLongPollChannelRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"public_key_hash\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"authenticator_reply\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.CompleteLongPollChannelResponse\n */\nexport class CompleteLongPollChannelResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CompleteLongPollChannelResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CompleteLongPollChannelResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CompleteLongPollChannelResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CompleteLongPollChannelResponse, a, b);\n    }\n}\nCompleteLongPollChannelResponse.runtime = proto3;\nCompleteLongPollChannelResponse.typeName = \"domain.CompleteLongPollChannelResponse\";\nCompleteLongPollChannelResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.CreateTokensRequest\n */\nexport class CreateTokensRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string authenticator_id = 2;\n         */\n        this.authenticatorId = \"\";\n        /**\n         * @generated from field: string challenge = 3;\n         */\n        this.challenge = \"\";\n        /**\n         * @generated from field: bytes response = 4;\n         */\n        this.response = new Uint8Array(0);\n        /**\n         * @generated from field: domain.SessionType session_type = 6;\n         */\n        this.sessionType = SessionType.UNKNOWN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateTokensRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateTokensRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateTokensRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateTokensRequest, a, b);\n    }\n}\nCreateTokensRequest.runtime = proto3;\nCreateTokensRequest.typeName = \"domain.CreateTokensRequest\";\nCreateTokensRequest.fields = proto3.util.newFieldList(() => [\n    { no: 2, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"challenge\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"response\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 5, name: \"session_unlock\", kind: \"message\", T: CreateTokensRequest_SessionUnlock },\n    { no: 6, name: \"session_type\", kind: \"enum\", T: proto3.getEnumType(SessionType) },\n]);\n/**\n * @generated from message domain.CreateTokensRequest.SessionUnlock\n */\nexport class CreateTokensRequest_SessionUnlock extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes encrypted_secret = 1;\n         */\n        this.encryptedSecret = new Uint8Array(0);\n        /**\n         * @generated from field: bool single_use = 5;\n         */\n        this.singleUse = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateTokensRequest_SessionUnlock().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateTokensRequest_SessionUnlock().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateTokensRequest_SessionUnlock().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateTokensRequest_SessionUnlock, a, b);\n    }\n}\nCreateTokensRequest_SessionUnlock.runtime = proto3;\nCreateTokensRequest_SessionUnlock.typeName = \"domain.CreateTokensRequest.SessionUnlock\";\nCreateTokensRequest_SessionUnlock.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"encrypted_secret\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"expires_at\", kind: \"message\", T: Timestamp },\n    { no: 5, name: \"single_use\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.CreateTokensResponse\n */\nexport class CreateTokensResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string session_id = 2;\n         */\n        this.sessionId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateTokensResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateTokensResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateTokensResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateTokensResponse, a, b);\n    }\n}\nCreateTokensResponse.runtime = proto3;\nCreateTokensResponse.typeName = \"domain.CreateTokensResponse\";\nCreateTokensResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"access_token\", kind: \"message\", T: Token },\n    { no: 2, name: \"session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.CreateAuditlogWriteTokenRequest\n */\nexport class CreateAuditlogWriteTokenRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateAuditlogWriteTokenRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateAuditlogWriteTokenRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateAuditlogWriteTokenRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateAuditlogWriteTokenRequest, a, b);\n    }\n}\nCreateAuditlogWriteTokenRequest.runtime = proto3;\nCreateAuditlogWriteTokenRequest.typeName = \"domain.CreateAuditlogWriteTokenRequest\";\nCreateAuditlogWriteTokenRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateAuditlogWriteTokenResponse\n */\nexport class CreateAuditlogWriteTokenResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateAuditlogWriteTokenResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateAuditlogWriteTokenResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateAuditlogWriteTokenResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateAuditlogWriteTokenResponse, a, b);\n    }\n}\nCreateAuditlogWriteTokenResponse.runtime = proto3;\nCreateAuditlogWriteTokenResponse.typeName = \"domain.CreateAuditlogWriteTokenResponse\";\nCreateAuditlogWriteTokenResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"token\", kind: \"message\", T: Token },\n]);\n/**\n * @generated from message domain.CreateAuditlogAdminTokenRequest\n */\nexport class CreateAuditlogAdminTokenRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateAuditlogAdminTokenRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateAuditlogAdminTokenRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateAuditlogAdminTokenRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateAuditlogAdminTokenRequest, a, b);\n    }\n}\nCreateAuditlogAdminTokenRequest.runtime = proto3;\nCreateAuditlogAdminTokenRequest.typeName = \"domain.CreateAuditlogAdminTokenRequest\";\nCreateAuditlogAdminTokenRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateAuditlogAdminTokenResponse\n */\nexport class CreateAuditlogAdminTokenResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateAuditlogAdminTokenResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateAuditlogAdminTokenResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateAuditlogAdminTokenResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateAuditlogAdminTokenResponse, a, b);\n    }\n}\nCreateAuditlogAdminTokenResponse.runtime = proto3;\nCreateAuditlogAdminTokenResponse.typeName = \"domain.CreateAuditlogAdminTokenResponse\";\nCreateAuditlogAdminTokenResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"token\", kind: \"message\", T: Token },\n]);\n/**\n * @generated from message domain.CreateLFDOverridesAdminTokenRequest\n */\nexport class CreateLFDOverridesAdminTokenRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateLFDOverridesAdminTokenRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateLFDOverridesAdminTokenRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateLFDOverridesAdminTokenRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateLFDOverridesAdminTokenRequest, a, b);\n    }\n}\nCreateLFDOverridesAdminTokenRequest.runtime = proto3;\nCreateLFDOverridesAdminTokenRequest.typeName = \"domain.CreateLFDOverridesAdminTokenRequest\";\nCreateLFDOverridesAdminTokenRequest.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.CreateLFDOverridesAdminTokenResponse\n */\nexport class CreateLFDOverridesAdminTokenResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateLFDOverridesAdminTokenResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateLFDOverridesAdminTokenResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateLFDOverridesAdminTokenResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateLFDOverridesAdminTokenResponse, a, b);\n    }\n}\nCreateLFDOverridesAdminTokenResponse.runtime = proto3;\nCreateLFDOverridesAdminTokenResponse.typeName = \"domain.CreateLFDOverridesAdminTokenResponse\";\nCreateLFDOverridesAdminTokenResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"token\", kind: \"message\", T: Token },\n]);\n/**\n * @generated from message domain.RefreshTokenRequest\n */\nexport class RefreshTokenRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RefreshTokenRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RefreshTokenRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RefreshTokenRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RefreshTokenRequest, a, b);\n    }\n}\nRefreshTokenRequest.runtime = proto3;\nRefreshTokenRequest.typeName = \"domain.RefreshTokenRequest\";\nRefreshTokenRequest.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.RefreshTokenResponse\n */\nexport class RefreshTokenResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RefreshTokenResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RefreshTokenResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RefreshTokenResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RefreshTokenResponse, a, b);\n    }\n}\nRefreshTokenResponse.runtime = proto3;\nRefreshTokenResponse.typeName = \"domain.RefreshTokenResponse\";\nRefreshTokenResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"new_access_token\", kind: \"message\", T: Token },\n]);\n//# sourceMappingURL=credential_service_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file account_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, protoInt64, StringValue, Timestamp } from \"@bufbuild/protobuf\";\nimport { RegistrationInfoStatus } from \"./registration_info_status_pb.js\";\nimport { OrganizationType } from \"./organization_type_pb.js\";\nimport { AuthenticatorBlock, AuthenticatorCreationData } from \"./authenticator_pb.js\";\nimport { ProfileData } from \"./profile_pb.js\";\nimport { VaultCreationData } from \"./vault_service_pb.js\";\nimport { WebauthnPrfSupportStatus } from \"./webauthn_prf_support_status_pb.js\";\nimport { Token } from \"./credential_service_pb.js\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\nimport { Achievement } from \"./achievements_pb.js\";\nimport { ProfileType } from \"./profile_type_pb.js\";\n/**\n * @generated from message domain.GetRegistrationInfoRequest\n */\nexport class GetRegistrationInfoRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetRegistrationInfoRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetRegistrationInfoRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetRegistrationInfoRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetRegistrationInfoRequest, a, b);\n    }\n}\nGetRegistrationInfoRequest.runtime = proto3;\nGetRegistrationInfoRequest.typeName = \"domain.GetRegistrationInfoRequest\";\nGetRegistrationInfoRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetRegistrationInfoResponse\n */\nexport class GetRegistrationInfoResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: domain.RegistrationInfoStatus status = 1;\n         */\n        this.status = RegistrationInfoStatus.UNKNOWN;\n        /**\n         * @generated from field: bool webauthn_allowed = 3;\n         */\n        this.webauthnAllowed = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetRegistrationInfoResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetRegistrationInfoResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetRegistrationInfoResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetRegistrationInfoResponse, a, b);\n    }\n}\nGetRegistrationInfoResponse.runtime = proto3;\nGetRegistrationInfoResponse.typeName = \"domain.GetRegistrationInfoResponse\";\nGetRegistrationInfoResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"status\", kind: \"enum\", T: proto3.getEnumType(RegistrationInfoStatus) },\n    { no: 2, name: \"organization\", kind: \"message\", T: GetRegistrationInfoResponse_Organization },\n    { no: 3, name: \"webauthn_allowed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.GetRegistrationInfoResponse.Organization\n */\nexport class GetRegistrationInfoResponse_Organization extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * @generated from field: string icon = 2;\n         */\n        this.icon = \"\";\n        /**\n         * @generated from field: string id = 3;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string profile_id = 4;\n         */\n        this.profileId = \"\";\n        /**\n         * @generated from field: string start_code_prefix = 5;\n         */\n        this.startCodePrefix = \"\";\n        /**\n         * @generated from field: domain.OrganizationType organization_type = 6;\n         */\n        this.organizationType = OrganizationType.UNKNOWN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetRegistrationInfoResponse_Organization().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetRegistrationInfoResponse_Organization().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetRegistrationInfoResponse_Organization().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetRegistrationInfoResponse_Organization, a, b);\n    }\n}\nGetRegistrationInfoResponse_Organization.runtime = proto3;\nGetRegistrationInfoResponse_Organization.typeName = \"domain.GetRegistrationInfoResponse.Organization\";\nGetRegistrationInfoResponse_Organization.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"icon\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"start_code_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"organization_type\", kind: \"enum\", T: proto3.getEnumType(OrganizationType) },\n]);\n/**\n * @generated from message domain.CreateAccountWithProfileRequest\n */\nexport class CreateAccountWithProfileRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Backend will attach the first authenticator in this list as the pairing authenticator to the created session\n         * This is typically a PUSH or DUMMY authenticator.\n         *\n         * @generated from field: repeated domain.AuthenticatorCreationData authenticators = 14;\n         */\n        this.authenticators = [];\n        /**\n         * @generated from field: string referrer_id = 5;\n         */\n        this.referrerId = \"\";\n        /**\n         * @generated from field: bytes authenticator_block = 6;\n         */\n        this.authenticatorBlock = new Uint8Array(0);\n        /**\n         * @generated from field: bytes authenticator_block_signature = 7;\n         */\n        this.authenticatorBlockSignature = new Uint8Array(0);\n        /**\n         * @generated from field: string preliminary_email = 10;\n         */\n        this.preliminaryEmail = \"\";\n        /**\n         * @generated from field: string start_code = 13;\n         */\n        this.startCode = \"\";\n        /**\n         * when minimumClientVersion > 2023-12-XX, then this is mandatory when supplying a start_code\n         *\n         * @generated from field: string start_code_profile_id = 17;\n         */\n        this.startCodeProfileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateAccountWithProfileRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateAccountWithProfileRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateAccountWithProfileRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateAccountWithProfileRequest, a, b);\n    }\n}\nCreateAccountWithProfileRequest.runtime = proto3;\nCreateAccountWithProfileRequest.typeName = \"domain.CreateAccountWithProfileRequest\";\nCreateAccountWithProfileRequest.fields = proto3.util.newFieldList(() => [\n    { no: 14, name: \"authenticators\", kind: \"message\", T: AuthenticatorCreationData, repeated: true },\n    { no: 2, name: \"preferences_profile\", kind: \"message\", T: ProfileData },\n    { no: 3, name: \"inbox_profile\", kind: \"message\", T: ProfileData },\n    { no: 4, name: \"meta_vault\", kind: \"message\", T: VaultCreationData },\n    { no: 5, name: \"referrer_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"authenticator_block\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 7, name: \"authenticator_block_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 10, name: \"preliminary_email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 13, name: \"start_code\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 15, name: \"session_unlock_data\", kind: \"message\", T: CreateAccountWithProfileRequest_SessionUnlockData },\n    { no: 16, name: \"webauthn_credential_data\", kind: \"message\", T: CreateAccountWithProfileRequest_WebauthnCredentialData },\n    { no: 17, name: \"start_code_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateAccountWithProfileRequest.WebauthnCredentialData\n */\nexport class CreateAccountWithProfileRequest_WebauthnCredentialData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string request_id = 1;\n         */\n        this.requestId = \"\";\n        /**\n         * @generated from field: string response_json = 2;\n         */\n        this.responseJson = \"\";\n        /**\n         * @generated from field: domain.WebauthnPrfSupportStatus prf_support_status = 3;\n         */\n        this.prfSupportStatus = WebauthnPrfSupportStatus.UNKNOWN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateAccountWithProfileRequest_WebauthnCredentialData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateAccountWithProfileRequest_WebauthnCredentialData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateAccountWithProfileRequest_WebauthnCredentialData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateAccountWithProfileRequest_WebauthnCredentialData, a, b);\n    }\n}\nCreateAccountWithProfileRequest_WebauthnCredentialData.runtime = proto3;\nCreateAccountWithProfileRequest_WebauthnCredentialData.typeName = \"domain.CreateAccountWithProfileRequest.WebauthnCredentialData\";\nCreateAccountWithProfileRequest_WebauthnCredentialData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"response_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"prf_support_status\", kind: \"enum\", T: proto3.getEnumType(WebauthnPrfSupportStatus) },\n]);\n/**\n * @generated from message domain.CreateAccountWithProfileRequest.SessionUnlockData\n */\nexport class CreateAccountWithProfileRequest_SessionUnlockData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes encrypted_secret = 1;\n         */\n        this.encryptedSecret = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateAccountWithProfileRequest_SessionUnlockData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateAccountWithProfileRequest_SessionUnlockData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateAccountWithProfileRequest_SessionUnlockData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateAccountWithProfileRequest_SessionUnlockData, a, b);\n    }\n}\nCreateAccountWithProfileRequest_SessionUnlockData.runtime = proto3;\nCreateAccountWithProfileRequest_SessionUnlockData.typeName = \"domain.CreateAccountWithProfileRequest.SessionUnlockData\";\nCreateAccountWithProfileRequest_SessionUnlockData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"encrypted_secret\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 2, name: \"unlock_max_expires_at\", kind: \"message\", T: Timestamp },\n]);\n/**\n * @generated from message domain.CreateAccountWithProfileResponse\n */\nexport class CreateAccountWithProfileResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string user_id = 1;\n         */\n        this.userId = \"\";\n        /**\n         * @generated from field: string session_id = 3;\n         */\n        this.sessionId = \"\";\n        /**\n         * @generated from field: repeated string authenticator_ids = 4;\n         */\n        this.authenticatorIds = [];\n        /**\n         * @generated from field: string preferences_profile_id = 5;\n         */\n        this.preferencesProfileId = \"\";\n        /**\n         * @generated from field: string meta_vault_id = 7;\n         */\n        this.metaVaultId = \"\";\n        /**\n         * @generated from field: string inbox_profile_id = 6;\n         */\n        this.inboxProfileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateAccountWithProfileResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateAccountWithProfileResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateAccountWithProfileResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateAccountWithProfileResponse, a, b);\n    }\n}\nCreateAccountWithProfileResponse.runtime = proto3;\nCreateAccountWithProfileResponse.typeName = \"domain.CreateAccountWithProfileResponse\";\nCreateAccountWithProfileResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"access_token\", kind: \"message\", T: Token },\n    { no: 3, name: \"session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"authenticator_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 5, name: \"preferences_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"meta_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"inbox_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * no change if null\n *\n * @generated from message domain.UpdateAccountRequest\n */\nexport class UpdateAccountRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateAccountRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateAccountRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateAccountRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateAccountRequest, a, b);\n    }\n}\nUpdateAccountRequest.runtime = proto3;\nUpdateAccountRequest.typeName = \"domain.UpdateAccountRequest\";\nUpdateAccountRequest.fields = proto3.util.newFieldList(() => [\n    { no: 2, name: \"preferred_locale\", kind: \"message\", T: StringValue },\n    { no: 3, name: \"user_client_settings\", kind: \"message\", T: StringValue },\n]);\n/**\n * @generated from message domain.UpdateAccountResponse\n */\nexport class UpdateAccountResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateAccountResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateAccountResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateAccountResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateAccountResponse, a, b);\n    }\n}\nUpdateAccountResponse.runtime = proto3;\nUpdateAccountResponse.typeName = \"domain.UpdateAccountResponse\";\nUpdateAccountResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.CreateReferrerRequest\n */\nexport class CreateReferrerRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string referrer = 1;\n         */\n        this.referrer = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateReferrerRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateReferrerRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateReferrerRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateReferrerRequest, a, b);\n    }\n}\nCreateReferrerRequest.runtime = proto3;\nCreateReferrerRequest.typeName = \"domain.CreateReferrerRequest\";\nCreateReferrerRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"referrer\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateReferrerResponse\n */\nexport class CreateReferrerResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string referrer_id = 1;\n         */\n        this.referrerId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateReferrerResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateReferrerResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateReferrerResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateReferrerResponse, a, b);\n    }\n}\nCreateReferrerResponse.runtime = proto3;\nCreateReferrerResponse.typeName = \"domain.CreateReferrerResponse\";\nCreateReferrerResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"referrer_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.AddAchievementsRequest\n */\nexport class AddAchievementsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.Achievement achievements = 1;\n         */\n        this.achievements = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AddAchievementsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AddAchievementsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AddAchievementsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AddAchievementsRequest, a, b);\n    }\n}\nAddAchievementsRequest.runtime = proto3;\nAddAchievementsRequest.typeName = \"domain.AddAchievementsRequest\";\nAddAchievementsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"achievements\", kind: \"enum\", T: proto3.getEnumType(Achievement), repeated: true },\n]);\n/**\n * @generated from message domain.AddAchievementsResponse\n */\nexport class AddAchievementsResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AddAchievementsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AddAchievementsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AddAchievementsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AddAchievementsResponse, a, b);\n    }\n}\nAddAchievementsResponse.runtime = proto3;\nAddAchievementsResponse.typeName = \"domain.AddAchievementsResponse\";\nAddAchievementsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.ListAccountsRequest\n */\nexport class ListAccountsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.ListAccountsRequest.User users = 1;\n         */\n        this.users = [];\n        /**\n         * @generated from field: repeated string emails = 2;\n         */\n        this.emails = [];\n        /**\n         * @generated from field: repeated string profile_ids = 3;\n         */\n        this.profileIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListAccountsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListAccountsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListAccountsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListAccountsRequest, a, b);\n    }\n}\nListAccountsRequest.runtime = proto3;\nListAccountsRequest.typeName = \"domain.ListAccountsRequest\";\nListAccountsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"users\", kind: \"message\", T: ListAccountsRequest_User, repeated: true },\n    { no: 2, name: \"emails\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 3, name: \"profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.ListAccountsRequest.User\n */\nexport class ListAccountsRequest_User extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: bytes authenticator_block_hash = 2;\n         */\n        this.authenticatorBlockHash = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListAccountsRequest_User().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListAccountsRequest_User().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListAccountsRequest_User().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListAccountsRequest_User, a, b);\n    }\n}\nListAccountsRequest_User.runtime = proto3;\nListAccountsRequest_User.typeName = \"domain.ListAccountsRequest.User\";\nListAccountsRequest_User.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"authenticator_block_hash\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.ListAccountsResponse\n */\nexport class ListAccountsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.ListAccountsResponse.User users = 1;\n         */\n        this.users = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListAccountsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListAccountsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListAccountsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListAccountsResponse, a, b);\n    }\n}\nListAccountsResponse.runtime = proto3;\nListAccountsResponse.typeName = \"domain.ListAccountsResponse\";\nListAccountsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"users\", kind: \"message\", T: ListAccountsResponse_User, repeated: true },\n]);\n/**\n * @generated from message domain.ListAccountsResponse.User\n */\nexport class ListAccountsResponse_User extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string user_id = 1;\n         */\n        this.userId = \"\";\n        /**\n         * email is only set for users requested by email\n         *\n         * @generated from field: string email = 2;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: repeated domain.ListAccountsResponse.User.ForeignAuthenticator authenticators = 3;\n         */\n        this.authenticators = [];\n        /**\n         * @generated from field: repeated domain.AuthenticatorBlock authenticator_blocks = 4;\n         */\n        this.authenticatorBlocks = [];\n        /**\n         * @generated from field: bool is_profiles_enabled = 5;\n         */\n        this.isProfilesEnabled = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListAccountsResponse_User().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListAccountsResponse_User().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListAccountsResponse_User().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListAccountsResponse_User, a, b);\n    }\n}\nListAccountsResponse_User.runtime = proto3;\nListAccountsResponse_User.typeName = \"domain.ListAccountsResponse.User\";\nListAccountsResponse_User.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"authenticators\", kind: \"message\", T: ListAccountsResponse_User_ForeignAuthenticator, repeated: true },\n    { no: 4, name: \"authenticator_blocks\", kind: \"message\", T: AuthenticatorBlock, repeated: true },\n    { no: 5, name: \"is_profiles_enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.ListAccountsResponse.User.ForeignAuthenticator\n */\nexport class ListAccountsResponse_User_ForeignAuthenticator extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: bytes high_security_identity_sig_pub_key = 3;\n         */\n        this.highSecurityIdentitySigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key = 4;\n         */\n        this.highSecurityVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes high_security_vault_key_enc_pub_key_signature = 5;\n         */\n        this.highSecurityVaultKeyEncPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key = 6;\n         */\n        this.storableSigPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_sig_pub_key_signature = 7;\n         */\n        this.storableSigPubKeySignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key = 8;\n         */\n        this.storableVaultKeyEncPubKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes storable_vault_key_enc_pub_key_signature = 9;\n         */\n        this.storableVaultKeyEncPubKeySignature = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListAccountsResponse_User_ForeignAuthenticator().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListAccountsResponse_User_ForeignAuthenticator().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListAccountsResponse_User_ForeignAuthenticator().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListAccountsResponse_User_ForeignAuthenticator, a, b);\n    }\n}\nListAccountsResponse_User_ForeignAuthenticator.runtime = proto3;\nListAccountsResponse_User_ForeignAuthenticator.typeName = \"domain.ListAccountsResponse.User.ForeignAuthenticator\";\nListAccountsResponse_User_ForeignAuthenticator.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"high_security_identity_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"high_security_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 5, name: \"high_security_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 6, name: \"storable_sig_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 7, name: \"storable_sig_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 8, name: \"storable_vault_key_enc_pub_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 9, name: \"storable_vault_key_enc_pub_key_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.ResolveEmailsRequest\n */\nexport class ResolveEmailsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string emails = 1;\n         */\n        this.emails = [];\n        /**\n         * @generated from field: bool fail_fast = 2;\n         */\n        this.failFast = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ResolveEmailsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ResolveEmailsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ResolveEmailsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ResolveEmailsRequest, a, b);\n    }\n}\nResolveEmailsRequest.runtime = proto3;\nResolveEmailsRequest.typeName = \"domain.ResolveEmailsRequest\";\nResolveEmailsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"emails\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"fail_fast\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.ResolveEmailsResponse\n */\nexport class ResolveEmailsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.ResolveEmailsResponse.ResolvedEmail emails = 1;\n         */\n        this.emails = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ResolveEmailsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ResolveEmailsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ResolveEmailsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ResolveEmailsResponse, a, b);\n    }\n}\nResolveEmailsResponse.runtime = proto3;\nResolveEmailsResponse.typeName = \"domain.ResolveEmailsResponse\";\nResolveEmailsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"emails\", kind: \"message\", T: ResolveEmailsResponse_ResolvedEmail, repeated: true },\n]);\n/**\n * @generated from message domain.ResolveEmailsResponse.ResolvedProfile\n */\nexport class ResolveEmailsResponse_ResolvedProfile extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string organization_id = 2;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: domain.ProfileType profile_type = 3;\n         */\n        this.profileType = ProfileType.UNKNOWN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ResolveEmailsResponse_ResolvedProfile().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ResolveEmailsResponse_ResolvedProfile().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ResolveEmailsResponse_ResolvedProfile().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ResolveEmailsResponse_ResolvedProfile, a, b);\n    }\n}\nResolveEmailsResponse_ResolvedProfile.runtime = proto3;\nResolveEmailsResponse_ResolvedProfile.typeName = \"domain.ResolveEmailsResponse.ResolvedProfile\";\nResolveEmailsResponse_ResolvedProfile.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"profile_type\", kind: \"enum\", T: proto3.getEnumType(ProfileType) },\n]);\n/**\n * @generated from message domain.ResolveEmailsResponse.ResolvedEmail\n */\nexport class ResolveEmailsResponse_ResolvedEmail extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: bool email_invalid = 4;\n         */\n        this.emailInvalid = false;\n        /**\n         * @generated from field: repeated domain.ResolveEmailsResponse.ResolvedProfile profiles = 2;\n         */\n        this.profiles = [];\n        /**\n         * @generated from field: string user_id = 3;\n         */\n        this.userId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ResolveEmailsResponse_ResolvedEmail().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ResolveEmailsResponse_ResolvedEmail().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ResolveEmailsResponse_ResolvedEmail().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ResolveEmailsResponse_ResolvedEmail, a, b);\n    }\n}\nResolveEmailsResponse_ResolvedEmail.runtime = proto3;\nResolveEmailsResponse_ResolvedEmail.typeName = \"domain.ResolveEmailsResponse.ResolvedEmail\";\nResolveEmailsResponse_ResolvedEmail.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"email_invalid\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"profiles\", kind: \"message\", T: ResolveEmailsResponse_ResolvedProfile, repeated: true },\n    { no: 3, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetPaddleConfigRequest\n */\nexport class GetPaddleConfigRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetPaddleConfigRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetPaddleConfigRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetPaddleConfigRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetPaddleConfigRequest, a, b);\n    }\n}\nGetPaddleConfigRequest.runtime = proto3;\nGetPaddleConfigRequest.typeName = \"domain.GetPaddleConfigRequest\";\nGetPaddleConfigRequest.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.GetPaddleConfigResponse\n */\nexport class GetPaddleConfigResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bool is_sandbox = 1;\n         */\n        this.isSandbox = false;\n        /**\n         * @generated from field: string wrapper_host = 2;\n         */\n        this.wrapperHost = \"\";\n        /**\n         * @generated from field: int64 vendor_id = 3;\n         */\n        this.vendorId = protoInt64.zero;\n        /**\n         * @generated from field: int64 product_id_monthly = 4;\n         */\n        this.productIdMonthly = protoInt64.zero;\n        /**\n         * @generated from field: int64 product_id_yearly = 5;\n         */\n        this.productIdYearly = protoInt64.zero;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetPaddleConfigResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetPaddleConfigResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetPaddleConfigResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetPaddleConfigResponse, a, b);\n    }\n}\nGetPaddleConfigResponse.runtime = proto3;\nGetPaddleConfigResponse.typeName = \"domain.GetPaddleConfigResponse\";\nGetPaddleConfigResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"is_sandbox\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"wrapper_host\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"vendor_id\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 4, name: \"product_id_monthly\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 5, name: \"product_id_yearly\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.DeleteAccountRequest\n */\nexport class DeleteAccountRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteAccountRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteAccountRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteAccountRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteAccountRequest, a, b);\n    }\n}\nDeleteAccountRequest.runtime = proto3;\nDeleteAccountRequest.typeName = \"domain.DeleteAccountRequest\";\nDeleteAccountRequest.fields = proto3.util.newFieldList(() => []);\n/**\n * empty\n *\n * @generated from message domain.DeleteAccountResponse\n */\nexport class DeleteAccountResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteAccountResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteAccountResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteAccountResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteAccountResponse, a, b);\n    }\n}\nDeleteAccountResponse.runtime = proto3;\nDeleteAccountResponse.typeName = \"domain.DeleteAccountResponse\";\nDeleteAccountResponse.fields = proto3.util.newFieldList(() => []);\n//# sourceMappingURL=account_service_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file profile_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\nimport { ForeignProfile, ProfileData, ProfileRegenerateData } from \"./profile_pb.js\";\nimport { VaultCreationData } from \"./vault_service_pb.js\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\n/**\n * @generated from message domain.CreatePrivateProfileRequest\n */\nexport class CreatePrivateProfileRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreatePrivateProfileRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreatePrivateProfileRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreatePrivateProfileRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreatePrivateProfileRequest, a, b);\n    }\n}\nCreatePrivateProfileRequest.runtime = proto3;\nCreatePrivateProfileRequest.typeName = \"domain.CreatePrivateProfileRequest\";\nCreatePrivateProfileRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"private_profile\", kind: \"message\", T: ProfileData },\n    { no: 3, name: \"private_vault\", kind: \"message\", T: VaultCreationData },\n]);\n/**\n * @generated from message domain.CreatePrivateProfileResponse\n */\nexport class CreatePrivateProfileResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string private_profile_id = 2;\n         */\n        this.privateProfileId = \"\";\n        /**\n         * @generated from field: string private_vault_id = 3;\n         */\n        this.privateVaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreatePrivateProfileResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreatePrivateProfileResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreatePrivateProfileResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreatePrivateProfileResponse, a, b);\n    }\n}\nCreatePrivateProfileResponse.runtime = proto3;\nCreatePrivateProfileResponse.typeName = \"domain.CreatePrivateProfileResponse\";\nCreatePrivateProfileResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"private_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"private_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.DeletePrivateProfileRequest\n */\nexport class DeletePrivateProfileRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string private_profile_id = 1;\n         */\n        this.privateProfileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeletePrivateProfileRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeletePrivateProfileRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeletePrivateProfileRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeletePrivateProfileRequest, a, b);\n    }\n}\nDeletePrivateProfileRequest.runtime = proto3;\nDeletePrivateProfileRequest.typeName = \"domain.DeletePrivateProfileRequest\";\nDeletePrivateProfileRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"private_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.DeletePrivateProfileResponse\n */\nexport class DeletePrivateProfileResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeletePrivateProfileResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeletePrivateProfileResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeletePrivateProfileResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeletePrivateProfileResponse, a, b);\n    }\n}\nDeletePrivateProfileResponse.runtime = proto3;\nDeletePrivateProfileResponse.typeName = \"domain.DeletePrivateProfileResponse\";\nDeletePrivateProfileResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.RegenerateProfilesRequest\n */\nexport class RegenerateProfilesRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.ProfileRegenerateData profiles = 1;\n         */\n        this.profiles = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegenerateProfilesRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegenerateProfilesRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegenerateProfilesRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegenerateProfilesRequest, a, b);\n    }\n}\nRegenerateProfilesRequest.runtime = proto3;\nRegenerateProfilesRequest.typeName = \"domain.RegenerateProfilesRequest\";\nRegenerateProfilesRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profiles\", kind: \"message\", T: ProfileRegenerateData, repeated: true },\n]);\n/**\n * @generated from message domain.RegenerateProfilesResponse\n */\nexport class RegenerateProfilesResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegenerateProfilesResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegenerateProfilesResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegenerateProfilesResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegenerateProfilesResponse, a, b);\n    }\n}\nRegenerateProfilesResponse.runtime = proto3;\nRegenerateProfilesResponse.typeName = \"domain.RegenerateProfilesResponse\";\nRegenerateProfilesResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.ListProfilesRequest\n */\nexport class ListProfilesRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string profile_ids = 1;\n         */\n        this.profileIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListProfilesRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListProfilesRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListProfilesRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListProfilesRequest, a, b);\n    }\n}\nListProfilesRequest.runtime = proto3;\nListProfilesRequest.typeName = \"domain.ListProfilesRequest\";\nListProfilesRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.ListProfilesResponse\n */\nexport class ListProfilesResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.ForeignProfile profiles = 1;\n         */\n        this.profiles = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListProfilesResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListProfilesResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListProfilesResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListProfilesResponse, a, b);\n    }\n}\nListProfilesResponse.runtime = proto3;\nListProfilesResponse.typeName = \"domain.ListProfilesResponse\";\nListProfilesResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profiles\", kind: \"message\", T: ForeignProfile, repeated: true },\n]);\n/**\n * @generated from message domain.ProfileRequestEmailChangeRequest\n */\nexport class ProfileRequestEmailChangeRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string profile_id = 1;\n         */\n        this.profileId = \"\";\n        /**\n         * @generated from field: string email = 2;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ProfileRequestEmailChangeRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ProfileRequestEmailChangeRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ProfileRequestEmailChangeRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ProfileRequestEmailChangeRequest, a, b);\n    }\n}\nProfileRequestEmailChangeRequest.runtime = proto3;\nProfileRequestEmailChangeRequest.typeName = \"domain.ProfileRequestEmailChangeRequest\";\nProfileRequestEmailChangeRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ProfileRequestEmailChangeResponse\n */\nexport class ProfileRequestEmailChangeResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bool verification_email_sent = 2;\n         */\n        this.verificationEmailSent = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ProfileRequestEmailChangeResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ProfileRequestEmailChangeResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ProfileRequestEmailChangeResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ProfileRequestEmailChangeResponse, a, b);\n    }\n}\nProfileRequestEmailChangeResponse.runtime = proto3;\nProfileRequestEmailChangeResponse.typeName = \"domain.ProfileRequestEmailChangeResponse\";\nProfileRequestEmailChangeResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"verification_email_sent\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.ProfileCancelEmailChangeRequest\n */\nexport class ProfileCancelEmailChangeRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string profile_id = 1;\n         */\n        this.profileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ProfileCancelEmailChangeRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ProfileCancelEmailChangeRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ProfileCancelEmailChangeRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ProfileCancelEmailChangeRequest, a, b);\n    }\n}\nProfileCancelEmailChangeRequest.runtime = proto3;\nProfileCancelEmailChangeRequest.typeName = \"domain.ProfileCancelEmailChangeRequest\";\nProfileCancelEmailChangeRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ProfileCancelEmailChangeResponse\n */\nexport class ProfileCancelEmailChangeResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ProfileCancelEmailChangeResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ProfileCancelEmailChangeResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ProfileCancelEmailChangeResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ProfileCancelEmailChangeResponse, a, b);\n    }\n}\nProfileCancelEmailChangeResponse.runtime = proto3;\nProfileCancelEmailChangeResponse.typeName = \"domain.ProfileCancelEmailChangeResponse\";\nProfileCancelEmailChangeResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.VerifyEmailAddressRequest\n */\nexport class VerifyEmailAddressRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string token = 1;\n         */\n        this.token = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new VerifyEmailAddressRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new VerifyEmailAddressRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new VerifyEmailAddressRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(VerifyEmailAddressRequest, a, b);\n    }\n}\nVerifyEmailAddressRequest.runtime = proto3;\nVerifyEmailAddressRequest.typeName = \"domain.VerifyEmailAddressRequest\";\nVerifyEmailAddressRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.VerifyEmailAddressResponse\n */\nexport class VerifyEmailAddressResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new VerifyEmailAddressResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new VerifyEmailAddressResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new VerifyEmailAddressResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(VerifyEmailAddressResponse, a, b);\n    }\n}\nVerifyEmailAddressResponse.runtime = proto3;\nVerifyEmailAddressResponse.typeName = \"domain.VerifyEmailAddressResponse\";\nVerifyEmailAddressResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ClaimWithStartCodeRequest\n */\nexport class ClaimWithStartCodeRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string start_code = 2;\n         */\n        this.startCode = \"\";\n        /**\n         * @generated from field: string profile_id = 3;\n         */\n        this.profileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ClaimWithStartCodeRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ClaimWithStartCodeRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ClaimWithStartCodeRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ClaimWithStartCodeRequest, a, b);\n    }\n}\nClaimWithStartCodeRequest.runtime = proto3;\nClaimWithStartCodeRequest.typeName = \"domain.ClaimWithStartCodeRequest\";\nClaimWithStartCodeRequest.fields = proto3.util.newFieldList(() => [\n    { no: 2, name: \"start_code\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ClaimWithStartCodeResponse\n */\nexport class ClaimWithStartCodeResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 2;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ClaimWithStartCodeResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ClaimWithStartCodeResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ClaimWithStartCodeResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ClaimWithStartCodeResponse, a, b);\n    }\n}\nClaimWithStartCodeResponse.runtime = proto3;\nClaimWithStartCodeResponse.typeName = \"domain.ClaimWithStartCodeResponse\";\nClaimWithStartCodeResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetProfileInfoRequest\n */\nexport class GetProfileInfoRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string profile_id = 1;\n         */\n        this.profileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetProfileInfoRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetProfileInfoRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetProfileInfoRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetProfileInfoRequest, a, b);\n    }\n}\nGetProfileInfoRequest.runtime = proto3;\nGetProfileInfoRequest.typeName = \"domain.GetProfileInfoRequest\";\nGetProfileInfoRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetProfileInfoResponse\n */\nexport class GetProfileInfoResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: string organization_id = 4;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: string organization_name = 2;\n         */\n        this.organizationName = \"\";\n        /**\n         * @generated from field: string organization_icon = 3;\n         */\n        this.organizationIcon = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetProfileInfoResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetProfileInfoResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetProfileInfoResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetProfileInfoResponse, a, b);\n    }\n}\nGetProfileInfoResponse.runtime = proto3;\nGetProfileInfoResponse.typeName = \"domain.GetProfileInfoResponse\";\nGetProfileInfoResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"organization_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"organization_icon\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CheckProfileStartCodeRequest\n */\nexport class CheckProfileStartCodeRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: string start_code = 2;\n         */\n        this.startCode = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CheckProfileStartCodeRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CheckProfileStartCodeRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CheckProfileStartCodeRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CheckProfileStartCodeRequest, a, b);\n    }\n}\nCheckProfileStartCodeRequest.runtime = proto3;\nCheckProfileStartCodeRequest.typeName = \"domain.CheckProfileStartCodeRequest\";\nCheckProfileStartCodeRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"start_code\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CheckProfileStartCodeResponse\n */\nexport class CheckProfileStartCodeResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CheckProfileStartCodeResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CheckProfileStartCodeResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CheckProfileStartCodeResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CheckProfileStartCodeResponse, a, b);\n    }\n}\nCheckProfileStartCodeResponse.runtime = proto3;\nCheckProfileStartCodeResponse.typeName = \"domain.CheckProfileStartCodeResponse\";\nCheckProfileStartCodeResponse.fields = proto3.util.newFieldList(() => []);\n//# sourceMappingURL=profile_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file account_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { AddAchievementsRequest, AddAchievementsResponse, CreateAccountWithProfileRequest, CreateAccountWithProfileResponse, CreateReferrerRequest, CreateReferrerResponse, DeleteAccountRequest, DeleteAccountResponse, GetPaddleConfigRequest, GetPaddleConfigResponse, GetRegistrationInfoRequest, GetRegistrationInfoResponse, ListAccountsRequest, ListAccountsResponse, ResolveEmailsRequest, ResolveEmailsResponse, UpdateAccountRequest, UpdateAccountResponse } from \"./account_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\nimport { VerifyEmailAddressRequest, VerifyEmailAddressResponse } from \"./profile_service_pb.js\";\n/**\n * AccountService provides methods for handling user accounts.\n *\n * @generated from service domain.AccountService\n */\nexport const AccountService = {\n    typeName: \"domain.AccountService\",\n    methods: {\n        /**\n         * - InvalidEmail (20101)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.AccountService.GetRegistrationInfo\n         */\n        getRegistrationInfo: {\n            name: \"GetRegistrationInfo\",\n            I: GetRegistrationInfoRequest,\n            O: GetRegistrationInfoResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * - EmailTaken (20100): email address taken, backup code is available\n         * - InvalidEmail (20101): invalid email address\n         * - EmailInviteNotActive (20106): email belongs to an org profile that has no active email invite\n         * - EmailTakenNotRecoverable (20107): email address taken, no backup code available\n         * - ProfileNotFound (70400): profile not found, or is not an organization profile\n         * - MissingProfileAuthenticatorLock (70410)\n         * - InvalidProfileSignature (70420)\n         * - NotAllowedForProfile (70433): service profile must be registered as service user\n         * - WebathnDataError (1000401): there is a parsing error with the webauthn response\n         * - WebauthnRequestNotFound (1000402)\n         * - WebauthnValidateError (1000400): there is a cryptographic error with the webauthn response\n         * - WebauthnInvalidTransport (1000403): tried to register with passkey\n         * - StartCodeInvalid (70430)\n         * - StartCodeBlocked (70431)\n         * - StartCodeMissing (70432)\n         * - Internal (10500): internal server error\n         * - BadRequest (10400): no authenticators sent\n         *\n         * @generated from rpc domain.AccountService.CreateWithProfile\n         */\n        createWithProfile: {\n            name: \"CreateWithProfile\",\n            I: CreateAccountWithProfileRequest,\n            O: CreateAccountWithProfileResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - InvalidLocale (20105): invalid locale\n         * - MalformedUserClientSettings (20108): user settings are not valid json\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.AccountService.Update\n         */\n        update: {\n            name: \"Update\",\n            I: UpdateAccountRequest,\n            O: UpdateAccountResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.AccountService.CreateReferrer\n         */\n        createReferrer: {\n            name: \"CreateReferrer\",\n            I: CreateReferrerRequest,\n            O: CreateReferrerResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.AccountService.AddAchievements\n         */\n        addAchievements: {\n            name: \"AddAchievements\",\n            I: AddAchievementsRequest,\n            O: AddAchievementsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Deprecated, use ProfileService.VerifyEmailAddress instead\n         * TODO: remove this (min client version 2024-08-05)\n         * errors:\n         * - PermissionDenied (10100): the credentials provided didn't match the verification token\n         * - UserNotFound (20400): no user with that email address found\n         * - InvalidVerificationToken (20460): the verification token provided is invalid or outdated or the email has been verified for another account\n         * - Internal (10500): internal server error\n         * This endpoint can be called with or without credentials. If credentials are given, they must\n         * match with the verification token.\n         *\n         * @generated from rpc domain.AccountService.VerifyEmailAddress\n         */\n        verifyEmailAddress: {\n            name: \"VerifyEmailAddress\",\n            I: VerifyEmailAddressRequest,\n            O: VerifyEmailAddressResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - InvalidEmail (20101): invalid email address\n         * - UserNotFound (20400): user not found\n         * - ProfileNotFound (70400): profile not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.AccountService.List\n         */\n        list: {\n            name: \"List\",\n            I: ListAccountsRequest,\n            O: ListAccountsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - InvalidEmail (20101): invalid email address (only if fail_fast is set)\n         * - UserNotFound (20400): user not found (only if fail_fast is set)\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.AccountService.ResolveEmails\n         */\n        resolveEmails: {\n            name: \"ResolveEmails\",\n            I: ResolveEmailsRequest,\n            O: ResolveEmailsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * no errors, this is a static endpoint\n         *\n         * @generated from rpc domain.AccountService.GetPaddleConfig\n         */\n        getPaddleConfig: {\n            name: \"GetPaddleConfig\",\n            I: GetPaddleConfigRequest,\n            O: GetPaddleConfigResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - OrganizationMissingAdmin (60410): user is last admin in an organization with other users\n         * - UserNotFound (20400): user not found (this should never happen)\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.AccountService.Delete\n         */\n        delete: {\n            name: \"Delete\",\n            I: DeleteAccountRequest,\n            O: DeleteAccountResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=account_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file authenticator_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\nimport { Authenticator, AuthenticatorBlock, AuthenticatorCreationData } from \"./authenticator_pb.js\";\nimport { ProfileRegenerateData } from \"./profile_pb.js\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\n/**\n * @generated from message domain.ModifyAuthenticatorsRequest\n */\nexport class ModifyAuthenticatorsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.AuthenticatorCreationData create_authenticator_ops = 1;\n         */\n        this.createAuthenticatorOps = [];\n        /**\n         * @generated from field: repeated string delete_authenticator_ids = 2;\n         */\n        this.deleteAuthenticatorIds = [];\n        /**\n         * @generated from field: bytes authenticator_block = 3;\n         */\n        this.authenticatorBlock = new Uint8Array(0);\n        /**\n         * @generated from field: bytes authenticator_block_signature = 4;\n         */\n        this.authenticatorBlockSignature = new Uint8Array(0);\n        /**\n         * must be set if any authenticator is removed\n         *\n         * @generated from field: repeated domain.ProfileRegenerateData profiles = 5;\n         */\n        this.profiles = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ModifyAuthenticatorsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ModifyAuthenticatorsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ModifyAuthenticatorsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ModifyAuthenticatorsRequest, a, b);\n    }\n}\nModifyAuthenticatorsRequest.runtime = proto3;\nModifyAuthenticatorsRequest.typeName = \"domain.ModifyAuthenticatorsRequest\";\nModifyAuthenticatorsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"create_authenticator_ops\", kind: \"message\", T: AuthenticatorCreationData, repeated: true },\n    { no: 2, name: \"delete_authenticator_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 3, name: \"authenticator_block\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"authenticator_block_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 5, name: \"profiles\", kind: \"message\", T: ProfileRegenerateData, repeated: true },\n]);\n/**\n * @generated from message domain.ModifyAuthenticatorsResponse\n */\nexport class ModifyAuthenticatorsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string authenticator_ids = 2;\n         */\n        this.authenticatorIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ModifyAuthenticatorsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ModifyAuthenticatorsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ModifyAuthenticatorsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ModifyAuthenticatorsResponse, a, b);\n    }\n}\nModifyAuthenticatorsResponse.runtime = proto3;\nModifyAuthenticatorsResponse.typeName = \"domain.ModifyAuthenticatorsResponse\";\nModifyAuthenticatorsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"authenticator_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.SetDeviceTokenRequest\n */\nexport class SetDeviceTokenRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string fcm_device_token = 3;\n         */\n        this.fcmDeviceToken = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SetDeviceTokenRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SetDeviceTokenRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SetDeviceTokenRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SetDeviceTokenRequest, a, b);\n    }\n}\nSetDeviceTokenRequest.runtime = proto3;\nSetDeviceTokenRequest.typeName = \"domain.SetDeviceTokenRequest\";\nSetDeviceTokenRequest.fields = proto3.util.newFieldList(() => [\n    { no: 3, name: \"fcm_device_token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * empty response\n *\n * @generated from message domain.SetDeviceTokenResponse\n */\nexport class SetDeviceTokenResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SetDeviceTokenResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SetDeviceTokenResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SetDeviceTokenResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SetDeviceTokenResponse, a, b);\n    }\n}\nSetDeviceTokenResponse.runtime = proto3;\nSetDeviceTokenResponse.typeName = \"domain.SetDeviceTokenResponse\";\nSetDeviceTokenResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.ListAuthenticatorsRequest\n */\nexport class ListAuthenticatorsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes latest_authenticator_block_hash = 1;\n         */\n        this.latestAuthenticatorBlockHash = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListAuthenticatorsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListAuthenticatorsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListAuthenticatorsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListAuthenticatorsRequest, a, b);\n    }\n}\nListAuthenticatorsRequest.runtime = proto3;\nListAuthenticatorsRequest.typeName = \"domain.ListAuthenticatorsRequest\";\nListAuthenticatorsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"latest_authenticator_block_hash\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.ListAuthenticatorsResponse\n */\nexport class ListAuthenticatorsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.Authenticator authenticators = 1;\n         */\n        this.authenticators = [];\n        /**\n         * @generated from field: repeated domain.AuthenticatorBlock authenticator_blocks = 2;\n         */\n        this.authenticatorBlocks = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListAuthenticatorsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListAuthenticatorsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListAuthenticatorsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListAuthenticatorsResponse, a, b);\n    }\n}\nListAuthenticatorsResponse.runtime = proto3;\nListAuthenticatorsResponse.typeName = \"domain.ListAuthenticatorsResponse\";\nListAuthenticatorsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"authenticators\", kind: \"message\", T: Authenticator, repeated: true },\n    { no: 2, name: \"authenticator_blocks\", kind: \"message\", T: AuthenticatorBlock, repeated: true },\n]);\n/**\n * @generated from message domain.CreateInitialAuthenticatorBlockRequest\n */\nexport class CreateInitialAuthenticatorBlockRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateInitialAuthenticatorBlockRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateInitialAuthenticatorBlockRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateInitialAuthenticatorBlockRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateInitialAuthenticatorBlockRequest, a, b);\n    }\n}\nCreateInitialAuthenticatorBlockRequest.runtime = proto3;\nCreateInitialAuthenticatorBlockRequest.typeName = \"domain.CreateInitialAuthenticatorBlockRequest\";\nCreateInitialAuthenticatorBlockRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"authenticator_block\", kind: \"message\", T: AuthenticatorBlock },\n]);\n/**\n * @generated from message domain.CreateInitialAuthenticatorBlockResponse\n */\nexport class CreateInitialAuthenticatorBlockResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateInitialAuthenticatorBlockResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateInitialAuthenticatorBlockResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateInitialAuthenticatorBlockResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateInitialAuthenticatorBlockResponse, a, b);\n    }\n}\nCreateInitialAuthenticatorBlockResponse.runtime = proto3;\nCreateInitialAuthenticatorBlockResponse.typeName = \"domain.CreateInitialAuthenticatorBlockResponse\";\nCreateInitialAuthenticatorBlockResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n//# sourceMappingURL=authenticator_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file authenticator_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { CreateInitialAuthenticatorBlockRequest, CreateInitialAuthenticatorBlockResponse, ListAuthenticatorsRequest, ListAuthenticatorsResponse, ModifyAuthenticatorsRequest, ModifyAuthenticatorsResponse, SetDeviceTokenRequest, SetDeviceTokenResponse } from \"./authenticator_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.AuthenticatorService\n */\nexport const AuthenticatorService = {\n    typeName: \"domain.AuthenticatorService\",\n    methods: {\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - AuthenticatorBlockOutOfSync (40100): the authenticator blocks parent hash does not match the latest authenticator block\n         * - AuthenticatorNotFound (40400): authenticator not found\n         * - MissingAuthenticatorBlock (40430): the request is lacking a follow-up authenticator block\n         * - VaultNotFound (50400): vault not found\n         * - VaultOutOfSync (50100): latest_commit_id does not match\n         * - EmptyCommit (50200): commit blob is empty\n         * - MissingLock (50410): a lock is missing for regneration or no keks were provided for a new authenticator\n         * - MissingVault (50420): VaultRegenerateData is missing for a vault\n         * - WebauthnValidateError (80400)\n         * - WebauthnDataError (80401)\n         * - WebauthnRequestNotFound (80402)\n         * - MissingWebauthnCredential (80404)\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.AuthenticatorService.Modify\n         */\n        modify: {\n            name: \"Modify\",\n            I: ModifyAuthenticatorsRequest,\n            O: ModifyAuthenticatorsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * DEPRECATED\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - AuthenticatorNotFound (40400): combination of authenticator and user not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.AuthenticatorService.SetDeviceToken\n         */\n        setDeviceToken: {\n            name: \"SetDeviceToken\",\n            I: SetDeviceTokenRequest,\n            O: SetDeviceTokenResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - AuthenticatorBlockNotFound (40440): the authenticator block with given hash was not found or belongs to another user\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.AuthenticatorService.List\n         */\n        list: {\n            name: \"List\",\n            I: ListAuthenticatorsRequest,\n            O: ListAuthenticatorsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * TODO: deprecate and later remove this endpoint once migration to authenticator blocks is completed\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - AuthenticatorBlockExists (40450): the account already has an authenticator block\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.AuthenticatorService.CreateInitialAuthenticatorBlock\n         */\n        createInitialAuthenticatorBlock: {\n            name: \"CreateInitialAuthenticatorBlock\",\n            I: CreateInitialAuthenticatorBlockRequest,\n            O: CreateInitialAuthenticatorBlockResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=authenticator_service_connect.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file channel_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { ClaimChannelRequest, ClaimChannelResponse, CreateChannelRequest, CreateChannelResponse, DeleteChannelRequest, DeleteChannelResponse, ReadChannelRequest, ReadChannelResponse, WriteChannelRequest, WriteChannelResponse } from \"./channel_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * Channel operations\n *\n * @generated from service domain.ChannelService\n */\nexport const ChannelService = {\n    typeName: \"domain.ChannelService\",\n    methods: {\n        /**\n         * errors:\n         * - MissingCredentials (30100): exposed == false and credentials are missing\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - PermissionDenied (10100): exposed == false and user_id does not match token\n         * - UserNotFound (20400): user not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.ChannelService.Create\n         */\n        create: {\n            name: \"Create\",\n            I: CreateChannelRequest,\n            O: CreateChannelResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): credentials are missing\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - AuthenticatorNotFound (40400): authenticator not found\n         * - AuthenticatorChannelNotFound (40410): channel not found\n         * - AuthenticatorChannelAlreadyClaimed (40411): channel was already claimed\n         * - PermissionDenied (10100): channel does not belong to user\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.ChannelService.Claim\n         */\n        claim: {\n            name: \"Claim\",\n            I: ClaimChannelRequest,\n            O: ClaimChannelResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): channel is not exposed and no valid credentials were provided\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - PermissionDenied (10100): channel does not belong to user\n         * - InvalidRecipient (40500): invalid recipient\n         * - Timeout (10200): timeout, client might retry\n         * - AuthenticatorChannelNotFound (40410): channel not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.ChannelService.Read\n         */\n        read: {\n            name: \"Read\",\n            I: ReadChannelRequest,\n            O: ReadChannelResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): channel is not exposed and no valid credentials were provided\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - PermissionDenied (10100): channel does not belong to user\n         * - InvalidRecipient (40500): invalid recipient\n         * - AuthenticatorChannelNotFound (40410): channel not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.ChannelService.Write\n         */\n        write: {\n            name: \"Write\",\n            I: WriteChannelRequest,\n            O: WriteChannelResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): channel is not exposed and no valid credentials were provided\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - PermissionDenied (10100): channel does not belong to user\n         * - AuthenticatorChannelNotFound (40410): channel not found\n         * - Internal (10500)(10500): internal server error\n         *\n         * @generated from rpc domain.ChannelService.Delete\n         */\n        delete: {\n            name: \"Delete\",\n            I: DeleteChannelRequest,\n            O: DeleteChannelResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=channel_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file child_organization_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, StringValue, Timestamp } from \"@bufbuild/protobuf\";\nimport { ProfileData } from \"./profile_pb.js\";\nimport { VaultCreationData } from \"./vault_service_pb.js\";\nimport { ProfileProfileLock, VaultLockCreationData } from \"./locks_pb.js\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\n/**\n * @generated from message domain.ListChildOrganizationsRequest\n */\nexport class ListChildOrganizationsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string parent_organization_id = 1;\n         */\n        this.parentOrganizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListChildOrganizationsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListChildOrganizationsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListChildOrganizationsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListChildOrganizationsRequest, a, b);\n    }\n}\nListChildOrganizationsRequest.runtime = proto3;\nListChildOrganizationsRequest.typeName = \"domain.ListChildOrganizationsRequest\";\nListChildOrganizationsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"parent_organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ListChildOrganizationsResponse\n */\nexport class ListChildOrganizationsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.ListChildOrganizationsResponse.ChildOrganization child_organizations = 1;\n         */\n        this.childOrganizations = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListChildOrganizationsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListChildOrganizationsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListChildOrganizationsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListChildOrganizationsResponse, a, b);\n    }\n}\nListChildOrganizationsResponse.runtime = proto3;\nListChildOrganizationsResponse.typeName = \"domain.ListChildOrganizationsResponse\";\nListChildOrganizationsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"child_organizations\", kind: \"message\", T: ListChildOrganizationsResponse_ChildOrganization, repeated: true },\n]);\n/**\n * @generated from message domain.ListChildOrganizationsResponse.ChildOrganization\n */\nexport class ListChildOrganizationsResponse_ChildOrganization extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string name = 2;\n         */\n        this.name = \"\";\n        /**\n         * @generated from field: int32 license_count = 3;\n         */\n        this.licenseCount = 0;\n        /**\n         * @generated from field: repeated domain.ListChildOrganizationsResponse.ChildOrganization.User users = 4;\n         */\n        this.users = [];\n        /**\n         * @generated from field: repeated domain.ListChildOrganizationsResponse.ChildOrganization.Manager managers = 5;\n         */\n        this.managers = [];\n        /**\n         * @generated from field: string parent_organization_metadata = 7;\n         */\n        this.parentOrganizationMetadata = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListChildOrganizationsResponse_ChildOrganization().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListChildOrganizationsResponse_ChildOrganization().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListChildOrganizationsResponse_ChildOrganization().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListChildOrganizationsResponse_ChildOrganization, a, b);\n    }\n}\nListChildOrganizationsResponse_ChildOrganization.runtime = proto3;\nListChildOrganizationsResponse_ChildOrganization.typeName = \"domain.ListChildOrganizationsResponse.ChildOrganization\";\nListChildOrganizationsResponse_ChildOrganization.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"license_count\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"users\", kind: \"message\", T: ListChildOrganizationsResponse_ChildOrganization_User, repeated: true },\n    { no: 5, name: \"managers\", kind: \"message\", T: ListChildOrganizationsResponse_ChildOrganization_Manager, repeated: true },\n    { no: 6, name: \"created_at\", kind: \"message\", T: Timestamp },\n    { no: 7, name: \"parent_organization_metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ListChildOrganizationsResponse.ChildOrganization.User\n */\nexport class ListChildOrganizationsResponse_ChildOrganization_User extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bool is_admin = 1;\n         */\n        this.isAdmin = false;\n        /**\n         * @generated from field: bool is_not_connected = 2;\n         */\n        this.isNotConnected = false;\n        /**\n         * @generated from field: bool has_start_code = 3;\n         */\n        this.hasStartCode = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListChildOrganizationsResponse_ChildOrganization_User().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListChildOrganizationsResponse_ChildOrganization_User().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListChildOrganizationsResponse_ChildOrganization_User().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListChildOrganizationsResponse_ChildOrganization_User, a, b);\n    }\n}\nListChildOrganizationsResponse_ChildOrganization_User.runtime = proto3;\nListChildOrganizationsResponse_ChildOrganization_User.typeName = \"domain.ListChildOrganizationsResponse.ChildOrganization.User\";\nListChildOrganizationsResponse_ChildOrganization_User.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"is_admin\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"is_not_connected\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"has_start_code\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"last_active_at\", kind: \"message\", T: Timestamp },\n]);\n/**\n * @generated from message domain.ListChildOrganizationsResponse.ChildOrganization.Manager\n */\nexport class ListChildOrganizationsResponse_ChildOrganization_Manager extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string profile_id = 1;\n         */\n        this.profileId = \"\";\n        /**\n         * @generated from field: string parent_organization_profile_id = 2;\n         */\n        this.parentOrganizationProfileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListChildOrganizationsResponse_ChildOrganization_Manager().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListChildOrganizationsResponse_ChildOrganization_Manager().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListChildOrganizationsResponse_ChildOrganization_Manager().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListChildOrganizationsResponse_ChildOrganization_Manager, a, b);\n    }\n}\nListChildOrganizationsResponse_ChildOrganization_Manager.runtime = proto3;\nListChildOrganizationsResponse_ChildOrganization_Manager.typeName = \"domain.ListChildOrganizationsResponse.ChildOrganization.Manager\";\nListChildOrganizationsResponse_ChildOrganization_Manager.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"parent_organization_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.AddManagerRequest\n */\nexport class AddManagerRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string child_organization_id = 1;\n         */\n        this.childOrganizationId = \"\";\n        /**\n         * This is used only to determine the proper user to assign the new profile\n         *\n         * @generated from field: string parent_organization_profile_id = 2;\n         */\n        this.parentOrganizationProfileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AddManagerRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AddManagerRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AddManagerRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AddManagerRequest, a, b);\n    }\n}\nAddManagerRequest.runtime = proto3;\nAddManagerRequest.typeName = \"domain.AddManagerRequest\";\nAddManagerRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"child_organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"parent_organization_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"profile\", kind: \"message\", T: ProfileData },\n    { no: 4, name: \"personal_vault_data\", kind: \"message\", T: VaultCreationData },\n    { no: 5, name: \"admin_profile_lock\", kind: \"message\", T: ProfileProfileLock },\n    { no: 6, name: \"legacy_admin_vault_lock\", kind: \"message\", T: VaultLockCreationData },\n]);\n/**\n * @generated from message domain.AddManagerResponse\n */\nexport class AddManagerResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string profile_id = 2;\n         */\n        this.profileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AddManagerResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AddManagerResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AddManagerResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AddManagerResponse, a, b);\n    }\n}\nAddManagerResponse.runtime = proto3;\nAddManagerResponse.typeName = \"domain.AddManagerResponse\";\nAddManagerResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.UpdateChildOrganizationRequest\n */\nexport class UpdateChildOrganizationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string child_organization_id = 1;\n         */\n        this.childOrganizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateChildOrganizationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateChildOrganizationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateChildOrganizationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateChildOrganizationRequest, a, b);\n    }\n}\nUpdateChildOrganizationRequest.runtime = proto3;\nUpdateChildOrganizationRequest.typeName = \"domain.UpdateChildOrganizationRequest\";\nUpdateChildOrganizationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"child_organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"parent_organization_metadata\", kind: \"message\", T: StringValue },\n]);\n/**\n * @generated from message domain.UpdateChildOrganizationResponse\n */\nexport class UpdateChildOrganizationResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateChildOrganizationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateChildOrganizationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateChildOrganizationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateChildOrganizationResponse, a, b);\n    }\n}\nUpdateChildOrganizationResponse.runtime = proto3;\nUpdateChildOrganizationResponse.typeName = \"domain.UpdateChildOrganizationResponse\";\nUpdateChildOrganizationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n//# sourceMappingURL=child_organization_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file child_organization_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { AddManagerRequest, AddManagerResponse, ListChildOrganizationsRequest, ListChildOrganizationsResponse, UpdateChildOrganizationRequest, UpdateChildOrganizationResponse } from \"./child_organization_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.ChildOrganizationService\n */\nexport const ChildOrganizationService = {\n    typeName: \"domain.ChildOrganizationService\",\n    methods: {\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationNotFound (60400): not member of the given parent organization\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.ChildOrganizationService.List\n         */\n        list: {\n            name: \"List\",\n            I: ListChildOrganizationsRequest,\n            O: ListChildOrganizationsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): not logged in\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - ProfileNotFound (70400): profile in parent organization not found\n         * - UserNotFound (20400): profile in parent organization is free\n         * - UserAlreadyInOrganization(60401)\n         * - EmailTaken(20100): A disconnected profile with the same email already exists in the child organization\n         * - OrganizationNotFound (60400): not member of the parent or child organization or organization is no child organization\n         * - OrganizationInsufficientAccess (60100): not admin of the child organization\n         * - BadRequest (10400)\n         * - ProfileOutOfSync (70411)\n         * - MissingProfileProfileLock (70412): missing admin profile lock (for admin-profile-enabled orgs)\n         * - AuthenticatorNotFound (40400): additional authenticator lock provided\n         * - MissingProfileAuthenticatorLock (70410)\n         * - VaultOutOfSync (50100)\n         * - VaultNotFound (50400)\n         * - MissingVault (50420): Missing personal vault data\n         * - MissingVaultProfileLock (50411): missing personal vault lock or admin vault lock\n         * - Internal (10500): Internal server error\n         *\n         * @generated from rpc domain.ChildOrganizationService.AddManager\n         */\n        addManager: {\n            name: \"AddManager\",\n            I: AddManagerRequest,\n            O: AddManagerResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): not logged in\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - OrganizationInsufficientAccess (60100): not manager of the given organzation\n         * - OrganizationNotFound (60400): not member of the given organization\n         * - Internal (10500):\n         *\n         * @generated from rpc domain.ChildOrganizationService.Update\n         */\n        update: {\n            name: \"Update\",\n            I: UpdateChildOrganizationRequest,\n            O: UpdateChildOrganizationResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=child_organization_service_connect.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file credential_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { CompleteLongPollChannelRequest, CompleteLongPollChannelResponse, CreateAuditlogAdminTokenRequest, CreateAuditlogAdminTokenResponse, CreateAuditlogWriteTokenRequest, CreateAuditlogWriteTokenResponse, CreateChallengeRequest, CreateChallengeResponse, CreateLFDOverridesAdminTokenRequest, CreateLFDOverridesAdminTokenResponse, CreateLongPollChannelChallengeRequest, CreateLongPollChannelChallengeResponse, CreateTokensRequest, CreateTokensResponse, RefreshTokenRequest, RefreshTokenResponse } from \"./credential_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * CredentialService provides methods to create authentication tokens and manage open sessions.\n * Typical usage:\n * (1) Client calls CreateChallenge to obtain challenge.\n * (2) Client obtains authenticator secret and signs the challenge.\n *     For push authenticators the AuthenticatorService might be used\n *     to create a comm channel between authenticator and client.\n * (3) Client calls CreateTokens with the signed challenge (response) to obtain\n *     an access tokens.\n * (4) Clients sends token in further requests to authenticate.\n *\n * @generated from service domain.CredentialService\n */\nexport const CredentialService = {\n    typeName: \"domain.CredentialService\",\n    methods: {\n        /**\n         * errors:\n         * - UserNotFound (20400): email does not belong to a user\n         * - AuthenticatorNotFound (40400): backup authenticator was not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.CredentialService.CreateChallenge\n         */\n        createChallenge: {\n            name: \"CreateChallenge\",\n            I: CreateChallengeRequest,\n            O: CreateChallengeResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.CredentialService.CreateLongPollChannelChallenge\n         */\n        createLongPollChannelChallenge: {\n            name: \"CreateLongPollChannelChallenge\",\n            I: CreateLongPollChannelChallengeRequest,\n            O: CreateLongPollChannelChallengeResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.CredentialService.CompleteLongPollChannel\n         */\n        completeLongPollChannel: {\n            name: \"CompleteLongPollChannel\",\n            I: CompleteLongPollChannelRequest,\n            O: CompleteLongPollChannelResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - InvalidTimeout (20420): expires_at of given session_unlock ist already expired\n         * - AuthenticatorNotFound (40400): invalid combination of user_id and authenticator_id\n         * - InvalidChallenge (30410): invalid challenge\n         * - InvalidSignature (30400): invalid response fo the hcallenge\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.CredentialService.CreateTokens\n         */\n        createTokens: {\n            name: \"CreateTokens\",\n            I: CreateTokensRequest,\n            O: CreateTokensResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * - MissingCredentials (30100)\n         * - OrganizationNotFound (60400): not member of the given organization, or auditlog not enabled\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.CredentialService.CreateAuditlogWriteToken\n         */\n        createAuditlogWriteToken: {\n            name: \"CreateAuditlogWriteToken\",\n            I: CreateAuditlogWriteTokenRequest,\n            O: CreateAuditlogWriteTokenResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * - MissingCredentials (30100)\n         * - OrganizationNotFound (60400): not member of the given organization, or auditlog not enabled\n         * - OrganizationInsufficientAccess (60100)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.CredentialService.CreateAuditlogAdminToken\n         */\n        createAuditlogAdminToken: {\n            name: \"CreateAuditlogAdminToken\",\n            I: CreateAuditlogAdminTokenRequest,\n            O: CreateAuditlogAdminTokenResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - PermissionDenied (10100)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.CredentialService.CreateLFDOverridesAdminToken\n         */\n        createLFDOverridesAdminToken: {\n            name: \"CreateLFDOverridesAdminToken\",\n            I: CreateLFDOverridesAdminTokenRequest,\n            O: CreateLFDOverridesAdminTokenResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.CredentialService.RefreshToken\n         */\n        refreshToken: {\n            name: \"RefreshToken\",\n            I: RefreshTokenRequest,\n            O: RefreshTokenResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=credential_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file health_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from message domain.PingRequest\n */\nexport class PingRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new PingRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new PingRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new PingRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(PingRequest, a, b);\n    }\n}\nPingRequest.runtime = proto3;\nPingRequest.typeName = \"domain.PingRequest\";\nPingRequest.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.PingResponse\n */\nexport class PingResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new PingResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new PingResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new PingResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(PingResponse, a, b);\n    }\n}\nPingResponse.runtime = proto3;\nPingResponse.typeName = \"domain.PingResponse\";\nPingResponse.fields = proto3.util.newFieldList(() => []);\n//# sourceMappingURL=health_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file health_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { PingRequest, PingResponse } from \"./health_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.HealthService\n */\nexport const HealthService = {\n    typeName: \"domain.HealthService\",\n    methods: {\n        /**\n         * @generated from rpc domain.HealthService.Ping\n         */\n        ping: {\n            name: \"Ping\",\n            I: PingRequest,\n            O: PingResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=health_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file integrations_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, Timestamp } from \"@bufbuild/protobuf\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\n/**\n * @generated from message domain.EntraGetAuthorizeUriRequest\n */\nexport class EntraGetAuthorizeUriRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: string redirect_uri = 2;\n         */\n        this.redirectUri = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EntraGetAuthorizeUriRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EntraGetAuthorizeUriRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EntraGetAuthorizeUriRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EntraGetAuthorizeUriRequest, a, b);\n    }\n}\nEntraGetAuthorizeUriRequest.runtime = proto3;\nEntraGetAuthorizeUriRequest.typeName = \"domain.EntraGetAuthorizeUriRequest\";\nEntraGetAuthorizeUriRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"redirect_uri\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.EntraGetAuthorizeUriResponse\n */\nexport class EntraGetAuthorizeUriResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string uri = 1;\n         */\n        this.uri = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EntraGetAuthorizeUriResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EntraGetAuthorizeUriResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EntraGetAuthorizeUriResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EntraGetAuthorizeUriResponse, a, b);\n    }\n}\nEntraGetAuthorizeUriResponse.runtime = proto3;\nEntraGetAuthorizeUriResponse.typeName = \"domain.EntraGetAuthorizeUriResponse\";\nEntraGetAuthorizeUriResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"uri\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.EntraFinishAuthorizationRequest\n */\nexport class EntraFinishAuthorizationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string result_query_string = 1;\n         */\n        this.resultQueryString = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EntraFinishAuthorizationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EntraFinishAuthorizationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EntraFinishAuthorizationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EntraFinishAuthorizationRequest, a, b);\n    }\n}\nEntraFinishAuthorizationRequest.runtime = proto3;\nEntraFinishAuthorizationRequest.typeName = \"domain.EntraFinishAuthorizationRequest\";\nEntraFinishAuthorizationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"result_query_string\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.EntraFinishAuthorizationResponse\n */\nexport class EntraFinishAuthorizationResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 2;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EntraFinishAuthorizationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EntraFinishAuthorizationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EntraFinishAuthorizationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EntraFinishAuthorizationResponse, a, b);\n    }\n}\nEntraFinishAuthorizationResponse.runtime = proto3;\nEntraFinishAuthorizationResponse.typeName = \"domain.EntraFinishAuthorizationResponse\";\nEntraFinishAuthorizationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.EntraGetTenantRequest\n */\nexport class EntraGetTenantRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: bool force_refresh = 2;\n         */\n        this.forceRefresh = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EntraGetTenantRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EntraGetTenantRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EntraGetTenantRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EntraGetTenantRequest, a, b);\n    }\n}\nEntraGetTenantRequest.runtime = proto3;\nEntraGetTenantRequest.typeName = \"domain.EntraGetTenantRequest\";\nEntraGetTenantRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"force_refresh\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.EntraGetTenantResponse\n */\nexport class EntraGetTenantResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.EntraGetTenantResponse.User users = 2;\n         */\n        this.users = [];\n        /**\n         * @generated from field: repeated domain.EntraGetTenantResponse.Group groups = 3;\n         */\n        this.groups = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EntraGetTenantResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EntraGetTenantResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EntraGetTenantResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EntraGetTenantResponse, a, b);\n    }\n}\nEntraGetTenantResponse.runtime = proto3;\nEntraGetTenantResponse.typeName = \"domain.EntraGetTenantResponse\";\nEntraGetTenantResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"updated_at\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"users\", kind: \"message\", T: EntraGetTenantResponse_User, repeated: true },\n    { no: 3, name: \"groups\", kind: \"message\", T: EntraGetTenantResponse_Group, repeated: true },\n]);\n/**\n * @generated from message domain.EntraGetTenantResponse.User\n */\nexport class EntraGetTenantResponse_User extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string entra_user_id = 1;\n         */\n        this.entraUserId = \"\";\n        /**\n         * @generated from field: string email = 2;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: repeated string member_of = 3;\n         */\n        this.memberOf = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EntraGetTenantResponse_User().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EntraGetTenantResponse_User().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EntraGetTenantResponse_User().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EntraGetTenantResponse_User, a, b);\n    }\n}\nEntraGetTenantResponse_User.runtime = proto3;\nEntraGetTenantResponse_User.typeName = \"domain.EntraGetTenantResponse.User\";\nEntraGetTenantResponse_User.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"entra_user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"member_of\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.EntraGetTenantResponse.Group\n */\nexport class EntraGetTenantResponse_Group extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string entra_group_id = 1;\n         */\n        this.entraGroupId = \"\";\n        /**\n         * @generated from field: string name = 2;\n         */\n        this.name = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EntraGetTenantResponse_Group().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EntraGetTenantResponse_Group().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EntraGetTenantResponse_Group().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EntraGetTenantResponse_Group, a, b);\n    }\n}\nEntraGetTenantResponse_Group.runtime = proto3;\nEntraGetTenantResponse_Group.typeName = \"domain.EntraGetTenantResponse.Group\";\nEntraGetTenantResponse_Group.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"entra_group_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.EntraClearAuthorizationRequest\n */\nexport class EntraClearAuthorizationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EntraClearAuthorizationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EntraClearAuthorizationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EntraClearAuthorizationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EntraClearAuthorizationRequest, a, b);\n    }\n}\nEntraClearAuthorizationRequest.runtime = proto3;\nEntraClearAuthorizationRequest.typeName = \"domain.EntraClearAuthorizationRequest\";\nEntraClearAuthorizationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.EntraClearAuthorizationResponse\n */\nexport class EntraClearAuthorizationResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EntraClearAuthorizationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EntraClearAuthorizationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EntraClearAuthorizationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EntraClearAuthorizationResponse, a, b);\n    }\n}\nEntraClearAuthorizationResponse.runtime = proto3;\nEntraClearAuthorizationResponse.typeName = \"domain.EntraClearAuthorizationResponse\";\nEntraClearAuthorizationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.CsvSetIntegrationDataRequest\n */\nexport class CsvSetIntegrationDataRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: string data_json = 2;\n         */\n        this.dataJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CsvSetIntegrationDataRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CsvSetIntegrationDataRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CsvSetIntegrationDataRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CsvSetIntegrationDataRequest, a, b);\n    }\n}\nCsvSetIntegrationDataRequest.runtime = proto3;\nCsvSetIntegrationDataRequest.typeName = \"domain.CsvSetIntegrationDataRequest\";\nCsvSetIntegrationDataRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"data_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CsvSetIntegrationDataResponse\n */\nexport class CsvSetIntegrationDataResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CsvSetIntegrationDataResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CsvSetIntegrationDataResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CsvSetIntegrationDataResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CsvSetIntegrationDataResponse, a, b);\n    }\n}\nCsvSetIntegrationDataResponse.runtime = proto3;\nCsvSetIntegrationDataResponse.typeName = \"domain.CsvSetIntegrationDataResponse\";\nCsvSetIntegrationDataResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.CsvGetIntegrationDataRequest\n */\nexport class CsvGetIntegrationDataRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CsvGetIntegrationDataRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CsvGetIntegrationDataRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CsvGetIntegrationDataRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CsvGetIntegrationDataRequest, a, b);\n    }\n}\nCsvGetIntegrationDataRequest.runtime = proto3;\nCsvGetIntegrationDataRequest.typeName = \"domain.CsvGetIntegrationDataRequest\";\nCsvGetIntegrationDataRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CsvGetIntegrationDataResponse\n */\nexport class CsvGetIntegrationDataResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string data_json = 1;\n         */\n        this.dataJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CsvGetIntegrationDataResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CsvGetIntegrationDataResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CsvGetIntegrationDataResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CsvGetIntegrationDataResponse, a, b);\n    }\n}\nCsvGetIntegrationDataResponse.runtime = proto3;\nCsvGetIntegrationDataResponse.typeName = \"domain.CsvGetIntegrationDataResponse\";\nCsvGetIntegrationDataResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"data_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GWorkspaceGetAuthorizeUriRequest\n */\nexport class GWorkspaceGetAuthorizeUriRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: string redirect_uri = 2;\n         */\n        this.redirectUri = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GWorkspaceGetAuthorizeUriRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GWorkspaceGetAuthorizeUriRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GWorkspaceGetAuthorizeUriRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GWorkspaceGetAuthorizeUriRequest, a, b);\n    }\n}\nGWorkspaceGetAuthorizeUriRequest.runtime = proto3;\nGWorkspaceGetAuthorizeUriRequest.typeName = \"domain.GWorkspaceGetAuthorizeUriRequest\";\nGWorkspaceGetAuthorizeUriRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"redirect_uri\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GWorkspaceGetAuthorizeUriResponse\n */\nexport class GWorkspaceGetAuthorizeUriResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string uri = 1;\n         */\n        this.uri = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GWorkspaceGetAuthorizeUriResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GWorkspaceGetAuthorizeUriResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GWorkspaceGetAuthorizeUriResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GWorkspaceGetAuthorizeUriResponse, a, b);\n    }\n}\nGWorkspaceGetAuthorizeUriResponse.runtime = proto3;\nGWorkspaceGetAuthorizeUriResponse.typeName = \"domain.GWorkspaceGetAuthorizeUriResponse\";\nGWorkspaceGetAuthorizeUriResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"uri\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GWorkspaceFinishAuthorizationRequest\n */\nexport class GWorkspaceFinishAuthorizationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string result_query_string = 1;\n         */\n        this.resultQueryString = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GWorkspaceFinishAuthorizationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GWorkspaceFinishAuthorizationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GWorkspaceFinishAuthorizationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GWorkspaceFinishAuthorizationRequest, a, b);\n    }\n}\nGWorkspaceFinishAuthorizationRequest.runtime = proto3;\nGWorkspaceFinishAuthorizationRequest.typeName = \"domain.GWorkspaceFinishAuthorizationRequest\";\nGWorkspaceFinishAuthorizationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"result_query_string\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GWorkspaceFinishAuthorizationResponse\n */\nexport class GWorkspaceFinishAuthorizationResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 2;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GWorkspaceFinishAuthorizationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GWorkspaceFinishAuthorizationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GWorkspaceFinishAuthorizationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GWorkspaceFinishAuthorizationResponse, a, b);\n    }\n}\nGWorkspaceFinishAuthorizationResponse.runtime = proto3;\nGWorkspaceFinishAuthorizationResponse.typeName = \"domain.GWorkspaceFinishAuthorizationResponse\";\nGWorkspaceFinishAuthorizationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GWorkspaceClearAuthorizationRequest\n */\nexport class GWorkspaceClearAuthorizationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GWorkspaceClearAuthorizationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GWorkspaceClearAuthorizationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GWorkspaceClearAuthorizationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GWorkspaceClearAuthorizationRequest, a, b);\n    }\n}\nGWorkspaceClearAuthorizationRequest.runtime = proto3;\nGWorkspaceClearAuthorizationRequest.typeName = \"domain.GWorkspaceClearAuthorizationRequest\";\nGWorkspaceClearAuthorizationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GWorkspaceClearAuthorizationResponse\n */\nexport class GWorkspaceClearAuthorizationResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GWorkspaceClearAuthorizationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GWorkspaceClearAuthorizationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GWorkspaceClearAuthorizationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GWorkspaceClearAuthorizationResponse, a, b);\n    }\n}\nGWorkspaceClearAuthorizationResponse.runtime = proto3;\nGWorkspaceClearAuthorizationResponse.typeName = \"domain.GWorkspaceClearAuthorizationResponse\";\nGWorkspaceClearAuthorizationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.GWorkspaceListRequest\n */\nexport class GWorkspaceListRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: bool force_refresh = 2;\n         */\n        this.forceRefresh = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GWorkspaceListRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GWorkspaceListRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GWorkspaceListRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GWorkspaceListRequest, a, b);\n    }\n}\nGWorkspaceListRequest.runtime = proto3;\nGWorkspaceListRequest.typeName = \"domain.GWorkspaceListRequest\";\nGWorkspaceListRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"force_refresh\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.GWorkspaceListResponse\n */\nexport class GWorkspaceListResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.GWorkspaceListResponse.User users = 2;\n         */\n        this.users = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GWorkspaceListResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GWorkspaceListResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GWorkspaceListResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GWorkspaceListResponse, a, b);\n    }\n}\nGWorkspaceListResponse.runtime = proto3;\nGWorkspaceListResponse.typeName = \"domain.GWorkspaceListResponse\";\nGWorkspaceListResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"updated_at\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"users\", kind: \"message\", T: GWorkspaceListResponse_User, repeated: true },\n]);\n/**\n * @generated from message domain.GWorkspaceListResponse.User\n */\nexport class GWorkspaceListResponse_User extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: string email = 2;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GWorkspaceListResponse_User().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GWorkspaceListResponse_User().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GWorkspaceListResponse_User().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GWorkspaceListResponse_User, a, b);\n    }\n}\nGWorkspaceListResponse_User.runtime = proto3;\nGWorkspaceListResponse_User.typeName = \"domain.GWorkspaceListResponse.User\";\nGWorkspaceListResponse_User.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n//# sourceMappingURL=integrations_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file integrations_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { CsvGetIntegrationDataRequest, CsvGetIntegrationDataResponse, CsvSetIntegrationDataRequest, CsvSetIntegrationDataResponse, EntraClearAuthorizationRequest, EntraClearAuthorizationResponse, EntraFinishAuthorizationRequest, EntraFinishAuthorizationResponse, EntraGetAuthorizeUriRequest, EntraGetAuthorizeUriResponse, EntraGetTenantRequest, EntraGetTenantResponse, GWorkspaceClearAuthorizationRequest, GWorkspaceClearAuthorizationResponse, GWorkspaceFinishAuthorizationRequest, GWorkspaceFinishAuthorizationResponse, GWorkspaceGetAuthorizeUriRequest, GWorkspaceGetAuthorizeUriResponse, GWorkspaceListRequest, GWorkspaceListResponse } from \"./integrations_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.IntegrationsService\n */\nexport const IntegrationsService = {\n    typeName: \"domain.IntegrationsService\",\n    methods: {\n        /**\n         * no errors\n         *\n         * @generated from rpc domain.IntegrationsService.EntraGetAuthorizeUri\n         */\n        entraGetAuthorizeUri: {\n            name: \"EntraGetAuthorizeUri\",\n            I: EntraGetAuthorizeUriRequest,\n            O: EntraGetAuthorizeUriResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - BadRequest (10400): result_query_string failed to parse\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationNotFound (60400)\n         * - OrganizationInsufficientAccess (60100)\n         * - IntegrationUnauthorized (80401): if authorization failed for unknown reasons\n         * - IntegrationNotInitialized (80400): the user canceled the authorization flow\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.IntegrationsService.EntraFinishAuthorization\n         */\n        entraFinishAuthorization: {\n            name: \"EntraFinishAuthorization\",\n            I: EntraFinishAuthorizationRequest,\n            O: EntraFinishAuthorizationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationNotFound (60400)\n         * - OrganizationInsufficientAccess (60100)\n         * - IntegrationNotInitialized (80400)\n         * - IntegrationUnauthorized (80401)\n         * - IntegrationInternal (80500)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.IntegrationsService.EntraGetTenant\n         */\n        entraGetTenant: {\n            name: \"EntraGetTenant\",\n            I: EntraGetTenantRequest,\n            O: EntraGetTenantResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationNotFound (60400)\n         * - OrganizationInsufficientAccess (60100)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.IntegrationsService.EntraClearAuthorization\n         */\n        entraClearAuthorization: {\n            name: \"EntraClearAuthorization\",\n            I: EntraClearAuthorizationRequest,\n            O: EntraClearAuthorizationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationInsufficientAccess (60100)\n         * - OrganizationNotFound (60400)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.IntegrationsService.CsvSetIntegrationData\n         */\n        csvSetIntegrationData: {\n            name: \"CsvSetIntegrationData\",\n            I: CsvSetIntegrationDataRequest,\n            O: CsvSetIntegrationDataResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationInsufficientAccess (60100)\n         * - OrganizationNotFound (60400)\n         * - IntegrationNotInitialized (80400)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.IntegrationsService.CsvGetIntegrationData\n         */\n        csvGetIntegrationData: {\n            name: \"CsvGetIntegrationData\",\n            I: CsvGetIntegrationDataRequest,\n            O: CsvGetIntegrationDataResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationInsufficientAccess (60100)\n         * - IntegrationUnauthorized (80401): if authorization initialization failed for unknown reasons\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.IntegrationsService.GWorkspaceGetAuthorizeUri\n         */\n        gWorkspaceGetAuthorizeUri: {\n            name: \"GWorkspaceGetAuthorizeUri\",\n            I: GWorkspaceGetAuthorizeUriRequest,\n            O: GWorkspaceGetAuthorizeUriResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationNotFound (60400)\n         * - OrganizationInsufficientAccess (60100)\n         * - IntegrationUnauthorized (80401): if authorization failed for unknown reasons\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.IntegrationsService.GWorkspaceFinishAuthorization\n         */\n        gWorkspaceFinishAuthorization: {\n            name: \"GWorkspaceFinishAuthorization\",\n            I: GWorkspaceFinishAuthorizationRequest,\n            O: GWorkspaceFinishAuthorizationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationNotFound (60400)\n         * - OrganizationInsufficientAccess (60100)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.IntegrationsService.GWorkspaceClearAuthorization\n         */\n        gWorkspaceClearAuthorization: {\n            name: \"GWorkspaceClearAuthorization\",\n            I: GWorkspaceClearAuthorizationRequest,\n            O: GWorkspaceClearAuthorizationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationNotFound (60400)\n         * - OrganizationInsufficientAccess (60100)\n         * - IntegrationNotInitialized (80400)\n         * - IntegrationUnauthorized (80401)\n         * - IntegrationInternal (80500)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.IntegrationsService.GWorkspaceList\n         */\n        gWorkspaceList: {\n            name: \"GWorkspaceList\",\n            I: GWorkspaceListRequest,\n            O: GWorkspaceListResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=integrations_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file lfd_overrides_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, Timestamp } from \"@bufbuild/protobuf\";\n/**\n * @generated from message domain.ReplaceLFDOverridesRequest\n */\nexport class ReplaceLFDOverridesRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * id field from json will be used as identifier,\n         * inserting or updating override as necessary\n         *\n         * @generated from field: repeated string override_json = 1;\n         */\n        this.overrideJson = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ReplaceLFDOverridesRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ReplaceLFDOverridesRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ReplaceLFDOverridesRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ReplaceLFDOverridesRequest, a, b);\n    }\n}\nReplaceLFDOverridesRequest.runtime = proto3;\nReplaceLFDOverridesRequest.typeName = \"domain.ReplaceLFDOverridesRequest\";\nReplaceLFDOverridesRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"override_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.ReplaceLFDOverridesResponse\n */\nexport class ReplaceLFDOverridesResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ReplaceLFDOverridesResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ReplaceLFDOverridesResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ReplaceLFDOverridesResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ReplaceLFDOverridesResponse, a, b);\n    }\n}\nReplaceLFDOverridesResponse.runtime = proto3;\nReplaceLFDOverridesResponse.typeName = \"domain.ReplaceLFDOverridesResponse\";\nReplaceLFDOverridesResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.DeleteLFDOverridesRequest\n */\nexport class DeleteLFDOverridesRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string override_ids = 1;\n         */\n        this.overrideIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteLFDOverridesRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteLFDOverridesRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteLFDOverridesRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteLFDOverridesRequest, a, b);\n    }\n}\nDeleteLFDOverridesRequest.runtime = proto3;\nDeleteLFDOverridesRequest.typeName = \"domain.DeleteLFDOverridesRequest\";\nDeleteLFDOverridesRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"override_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.DeleteLFDOverridesResponse\n */\nexport class DeleteLFDOverridesResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteLFDOverridesResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteLFDOverridesResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteLFDOverridesResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteLFDOverridesResponse, a, b);\n    }\n}\nDeleteLFDOverridesResponse.runtime = proto3;\nDeleteLFDOverridesResponse.typeName = \"domain.DeleteLFDOverridesResponse\";\nDeleteLFDOverridesResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.ListLFDOverridesRequest\n */\nexport class ListLFDOverridesRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListLFDOverridesRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListLFDOverridesRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListLFDOverridesRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListLFDOverridesRequest, a, b);\n    }\n}\nListLFDOverridesRequest.runtime = proto3;\nListLFDOverridesRequest.typeName = \"domain.ListLFDOverridesRequest\";\nListLFDOverridesRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"last_known_overrides_update_time\", kind: \"message\", T: Timestamp },\n]);\n/**\n * @generated from message domain.ListLFDOverridesResponse\n */\nexport class ListLFDOverridesResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * empty if last_known_overrides_update_time matches latest, otherwise contains all rules\n         *\n         * @generated from field: repeated string overrides_json = 2;\n         */\n        this.overridesJson = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListLFDOverridesResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListLFDOverridesResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListLFDOverridesResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListLFDOverridesResponse, a, b);\n    }\n}\nListLFDOverridesResponse.runtime = proto3;\nListLFDOverridesResponse.typeName = \"domain.ListLFDOverridesResponse\";\nListLFDOverridesResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"overrides_update_time\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"overrides_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n//# sourceMappingURL=lfd_overrides_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file lfd_overrides_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { DeleteLFDOverridesRequest, DeleteLFDOverridesResponse, ListLFDOverridesRequest, ListLFDOverridesResponse, ReplaceLFDOverridesRequest, ReplaceLFDOverridesResponse } from \"./lfd_overrides_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.LFDOverridesService\n */\nexport const LFDOverridesService = {\n    typeName: \"domain.LFDOverridesService\",\n    methods: {\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - BadRequest (10400): if json is malformed or missing required attributes\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.LFDOverridesService.Replace\n         */\n        replace: {\n            name: \"Replace\",\n            I: ReplaceLFDOverridesRequest,\n            O: ReplaceLFDOverridesResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.LFDOverridesService.Delete\n         */\n        delete: {\n            name: \"Delete\",\n            I: DeleteLFDOverridesRequest,\n            O: DeleteLFDOverridesResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.LFDOverridesService.List\n         */\n        list: {\n            name: \"List\",\n            I: ListLFDOverridesRequest,\n            O: ListLFDOverridesResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=lfd_overrides_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file login_inbox_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\nimport { VaultMessageType } from \"./vault_message_type_pb.js\";\n/**\n * @generated from message domain.ShowInboxRequest\n */\nexport class ShowInboxRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string slug = 1;\n         */\n        this.slug = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ShowInboxRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ShowInboxRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ShowInboxRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ShowInboxRequest, a, b);\n    }\n}\nShowInboxRequest.runtime = proto3;\nShowInboxRequest.typeName = \"domain.ShowInboxRequest\";\nShowInboxRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"slug\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ShowInboxResponse\n */\nexport class ShowInboxResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: string generation_id = 2;\n         */\n        this.generationId = \"\";\n        /**\n         * @generated from field: bytes public_key = 3;\n         */\n        this.publicKey = new Uint8Array(0);\n        /**\n         * @generated from field: string metadata = 4;\n         */\n        this.metadata = \"\";\n        /**\n         * @generated from field: string url = 6;\n         */\n        this.url = \"\";\n        /**\n         * the url prefix without trailing slash (\"https://heylogin.me\")\n         *\n         * @generated from field: string base_url = 7;\n         */\n        this.baseUrl = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ShowInboxResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ShowInboxResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ShowInboxResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ShowInboxResponse, a, b);\n    }\n}\nShowInboxResponse.runtime = proto3;\nShowInboxResponse.typeName = \"domain.ShowInboxResponse\";\nShowInboxResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"public_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"organization_data\", kind: \"message\", T: ShowInboxResponse_OrganizationData },\n    { no: 6, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"base_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ShowInboxResponse.OrganizationData\n */\nexport class ShowInboxResponse_OrganizationData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * @generated from field: string icon = 2;\n         */\n        this.icon = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ShowInboxResponse_OrganizationData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ShowInboxResponse_OrganizationData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ShowInboxResponse_OrganizationData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ShowInboxResponse_OrganizationData, a, b);\n    }\n}\nShowInboxResponse_OrganizationData.runtime = proto3;\nShowInboxResponse_OrganizationData.typeName = \"domain.ShowInboxResponse.OrganizationData\";\nShowInboxResponse_OrganizationData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"icon\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateLoginInboxMessageRequest\n */\nexport class CreateLoginInboxMessageRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: string generation_id = 2;\n         */\n        this.generationId = \"\";\n        /**\n         * @generated from field: domain.VaultMessageType type = 3;\n         */\n        this.type = VaultMessageType.UNKNOWN;\n        /**\n         * @generated from field: bytes encrypted_data = 4;\n         */\n        this.encryptedData = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateLoginInboxMessageRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateLoginInboxMessageRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateLoginInboxMessageRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateLoginInboxMessageRequest, a, b);\n    }\n}\nCreateLoginInboxMessageRequest.runtime = proto3;\nCreateLoginInboxMessageRequest.typeName = \"domain.CreateLoginInboxMessageRequest\";\nCreateLoginInboxMessageRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"type\", kind: \"enum\", T: proto3.getEnumType(VaultMessageType) },\n    { no: 4, name: \"encrypted_data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.CreateLoginInboxMessageResponse\n */\nexport class CreateLoginInboxMessageResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string inbox_message_id = 1;\n         */\n        this.inboxMessageId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateLoginInboxMessageResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateLoginInboxMessageResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateLoginInboxMessageResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateLoginInboxMessageResponse, a, b);\n    }\n}\nCreateLoginInboxMessageResponse.runtime = proto3;\nCreateLoginInboxMessageResponse.typeName = \"domain.CreateLoginInboxMessageResponse\";\nCreateLoginInboxMessageResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"inbox_message_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n//# sourceMappingURL=login_inbox_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file login_inbox_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { CreateLoginInboxMessageRequest, CreateLoginInboxMessageResponse, ShowInboxRequest, ShowInboxResponse } from \"./login_inbox_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.LoginInboxService\n */\nexport const LoginInboxService = {\n    typeName: \"domain.LoginInboxService\",\n    methods: {\n        /**\n         * errors:\n         * - VaultNotFound (50400): no vault for this slug\n         * - VaultInboxSlugInvalid (50470)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.LoginInboxService.Show\n         */\n        show: {\n            name: \"Show\",\n            I: ShowInboxRequest,\n            O: ShowInboxResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - VaultNotFound (50400)\n         * - InvalidVaultMessageType (50463): vault message type not allowed for this endpoint\n         * - VaultOutOfSync (50100)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.LoginInboxService.CreateMessage\n         */\n        createMessage: {\n            name: \"CreateMessage\",\n            I: CreateLoginInboxMessageRequest,\n            O: CreateLoginInboxMessageResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=login_inbox_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file organization_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { BoolValue, Message, proto3, protoInt64, StringValue, Timestamp } from \"@bufbuild/protobuf\";\nimport { ProfileData, ProfileRegenerateData } from \"./profile_pb.js\";\nimport { AuthenticatorData } from \"./authenticator_pb.js\";\nimport { VaultCreationData, VaultPairCreationData, VaultRegenerateData } from \"./vault_service_pb.js\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\nimport { UnlockTimeLimit } from \"./unlock_time_limit_pb.js\";\nimport { ProfileProfileLock, VaultProfileLock } from \"./locks_pb.js\";\nimport { SubscriptionPlan } from \"./subscription_plan_pb.js\";\n/**\n * @generated from message domain.SubscriptionStatus\n */\nexport class SubscriptionStatus extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from oneof domain.SubscriptionStatus.status\n         */\n        this.status = { case: undefined };\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SubscriptionStatus().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SubscriptionStatus().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SubscriptionStatus().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SubscriptionStatus, a, b);\n    }\n}\nSubscriptionStatus.runtime = proto3;\nSubscriptionStatus.typeName = \"domain.SubscriptionStatus\";\nSubscriptionStatus.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"status_paddle_active\", kind: \"message\", T: SubscriptionStatus_PaddleActive, oneof: \"status\" },\n    { no: 2, name: \"status_paddle_past_due\", kind: \"message\", T: SubscriptionStatus_PaddlePastDue, oneof: \"status\" },\n    { no: 3, name: \"status_paddle_paused_delinquent\", kind: \"message\", T: SubscriptionStatus_PaddlePausedDelinquent, oneof: \"status\" },\n    { no: 4, name: \"status_paddle_paused_voluntary\", kind: \"message\", T: SubscriptionStatus_PaddlePausedVoluntary, oneof: \"status\" },\n    { no: 5, name: \"status_paddle_deleted\", kind: \"message\", T: SubscriptionStatus_PaddleDeleted, oneof: \"status\" },\n    { no: 6, name: \"status_trial\", kind: \"message\", T: SubscriptionStatus_Trial, oneof: \"status\" },\n    { no: 7, name: \"status_custom\", kind: \"message\", T: SubscriptionStatus_Custom, oneof: \"status\" },\n    { no: 8, name: \"status_active_free\", kind: \"message\", T: SubscriptionStatus_ActiveFree, oneof: \"status\" },\n    { no: 9, name: \"status_example\", kind: \"message\", T: SubscriptionStatus_Example, oneof: \"status\" },\n]);\n/**\n * https://developer.paddle.com/webhook-reference/ZG9jOjI1MzUzOTk0-subscription-created\n * status == \"active\"\n *\n * @generated from message domain.SubscriptionStatus.PaddleActive\n */\nexport class SubscriptionStatus_PaddleActive extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string base_url = 1;\n         */\n        this.baseUrl = \"\";\n        /**\n         * @generated from field: int32 free_members = 3;\n         */\n        this.freeMembers = 0;\n        /**\n         * @generated from field: string email = 4;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SubscriptionStatus_PaddleActive().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SubscriptionStatus_PaddleActive().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SubscriptionStatus_PaddleActive().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SubscriptionStatus_PaddleActive, a, b);\n    }\n}\nSubscriptionStatus_PaddleActive.runtime = proto3;\nSubscriptionStatus_PaddleActive.typeName = \"domain.SubscriptionStatus.PaddleActive\";\nSubscriptionStatus_PaddleActive.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"base_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"next_bill_date\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"free_members\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * https://developer.paddle.com/webhook-reference/ZG9jOjI1MzUzOTk1-subscription-updated\n * status == \"past_due\"\n *\n * @generated from message domain.SubscriptionStatus.PaddlePastDue\n */\nexport class SubscriptionStatus_PaddlePastDue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string base_url = 1;\n         */\n        this.baseUrl = \"\";\n        /**\n         * @generated from field: int32 free_members = 3;\n         */\n        this.freeMembers = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SubscriptionStatus_PaddlePastDue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SubscriptionStatus_PaddlePastDue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SubscriptionStatus_PaddlePastDue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SubscriptionStatus_PaddlePastDue, a, b);\n    }\n}\nSubscriptionStatus_PaddlePastDue.runtime = proto3;\nSubscriptionStatus_PaddlePastDue.typeName = \"domain.SubscriptionStatus.PaddlePastDue\";\nSubscriptionStatus_PaddlePastDue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"base_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"next_bill_date\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"free_members\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n/**\n * https://developer.paddle.com/webhook-reference/ZG9jOjI1MzUzOTk1-subscription-updated\n * status == \"paused\" && paused_reason == \"delinquent\"\n *\n * @generated from message domain.SubscriptionStatus.PaddlePausedDelinquent\n */\nexport class SubscriptionStatus_PaddlePausedDelinquent extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string base_url = 1;\n         */\n        this.baseUrl = \"\";\n        /**\n         * @generated from field: int32 free_members = 4;\n         */\n        this.freeMembers = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SubscriptionStatus_PaddlePausedDelinquent().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SubscriptionStatus_PaddlePausedDelinquent().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SubscriptionStatus_PaddlePausedDelinquent().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SubscriptionStatus_PaddlePausedDelinquent, a, b);\n    }\n}\nSubscriptionStatus_PaddlePausedDelinquent.runtime = proto3;\nSubscriptionStatus_PaddlePausedDelinquent.typeName = \"domain.SubscriptionStatus.PaddlePausedDelinquent\";\nSubscriptionStatus_PaddlePausedDelinquent.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"base_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"paused_at\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"paused_from\", kind: \"message\", T: Timestamp },\n    { no: 4, name: \"free_members\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n/**\n * https://developer.paddle.com/webhook-reference/ZG9jOjI1MzUzOTk1-subscription-updated\n * status == \"paused\" && paused_reason == \"voluntary\"\n *\n * @generated from message domain.SubscriptionStatus.PaddlePausedVoluntary\n */\nexport class SubscriptionStatus_PaddlePausedVoluntary extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string base_url = 1;\n         */\n        this.baseUrl = \"\";\n        /**\n         * @generated from field: int32 free_members = 4;\n         */\n        this.freeMembers = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SubscriptionStatus_PaddlePausedVoluntary().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SubscriptionStatus_PaddlePausedVoluntary().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SubscriptionStatus_PaddlePausedVoluntary().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SubscriptionStatus_PaddlePausedVoluntary, a, b);\n    }\n}\nSubscriptionStatus_PaddlePausedVoluntary.runtime = proto3;\nSubscriptionStatus_PaddlePausedVoluntary.typeName = \"domain.SubscriptionStatus.PaddlePausedVoluntary\";\nSubscriptionStatus_PaddlePausedVoluntary.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"base_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"paused_at\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"paused_from\", kind: \"message\", T: Timestamp },\n    { no: 4, name: \"free_members\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n/**\n * https://developer.paddle.com/webhook-reference/ZG9jOjI1MzUzOTk2-subscription-cancelled\n * status == \"deleted\"\n *\n * @generated from message domain.SubscriptionStatus.PaddleDeleted\n */\nexport class SubscriptionStatus_PaddleDeleted extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: int32 free_members = 2;\n         */\n        this.freeMembers = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SubscriptionStatus_PaddleDeleted().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SubscriptionStatus_PaddleDeleted().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SubscriptionStatus_PaddleDeleted().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SubscriptionStatus_PaddleDeleted, a, b);\n    }\n}\nSubscriptionStatus_PaddleDeleted.runtime = proto3;\nSubscriptionStatus_PaddleDeleted.typeName = \"domain.SubscriptionStatus.PaddleDeleted\";\nSubscriptionStatus_PaddleDeleted.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"cancellation_effective_date\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"free_members\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n/**\n * if not subscribed via paddle, while trial is active\n *\n * @generated from message domain.SubscriptionStatus.Trial\n */\nexport class SubscriptionStatus_Trial extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SubscriptionStatus_Trial().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SubscriptionStatus_Trial().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SubscriptionStatus_Trial().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SubscriptionStatus_Trial, a, b);\n    }\n}\nSubscriptionStatus_Trial.runtime = proto3;\nSubscriptionStatus_Trial.typeName = \"domain.SubscriptionStatus.Trial\";\nSubscriptionStatus_Trial.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"trial_end_date\", kind: \"message\", T: Timestamp },\n]);\n/**\n * if not subscribed via paddle, but currently free due to free users\n * note it's currently not possible to combine paddle and appsumo. we might\n * add that later by adding the free_members field to paddle statuses.\n *\n * @generated from message domain.SubscriptionStatus.ActiveFree\n */\nexport class SubscriptionStatus_ActiveFree extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: int32 free_members = 1;\n         */\n        this.freeMembers = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SubscriptionStatus_ActiveFree().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SubscriptionStatus_ActiveFree().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SubscriptionStatus_ActiveFree().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SubscriptionStatus_ActiveFree, a, b);\n    }\n}\nSubscriptionStatus_ActiveFree.runtime = proto3;\nSubscriptionStatus_ActiveFree.typeName = \"domain.SubscriptionStatus.ActiveFree\";\nSubscriptionStatus_ActiveFree.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"free_members\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n/**\n * custom license message, displayed as passthrough text\n *\n * @generated from message domain.SubscriptionStatus.Custom\n */\nexport class SubscriptionStatus_Custom extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string left = 1;\n         */\n        this.left = \"\";\n        /**\n         * @generated from field: string right = 2;\n         */\n        this.right = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SubscriptionStatus_Custom().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SubscriptionStatus_Custom().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SubscriptionStatus_Custom().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SubscriptionStatus_Custom, a, b);\n    }\n}\nSubscriptionStatus_Custom.runtime = proto3;\nSubscriptionStatus_Custom.typeName = \"domain.SubscriptionStatus.Custom\";\nSubscriptionStatus_Custom.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"left\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"right\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * example license, displayed as passthrough text, used for demos\n *\n * @generated from message domain.SubscriptionStatus.Example\n */\nexport class SubscriptionStatus_Example extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string left = 1;\n         */\n        this.left = \"\";\n        /**\n         * @generated from field: string right = 2;\n         */\n        this.right = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SubscriptionStatus_Example().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SubscriptionStatus_Example().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SubscriptionStatus_Example().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SubscriptionStatus_Example, a, b);\n    }\n}\nSubscriptionStatus_Example.runtime = proto3;\nSubscriptionStatus_Example.typeName = \"domain.SubscriptionStatus.Example\";\nSubscriptionStatus_Example.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"left\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"right\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateOrganizationRequest\n */\nexport class CreateOrganizationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * @generated from field: string icon = 2;\n         */\n        this.icon = \"\";\n        /**\n         * @generated from field: string email = 17;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: bytes authenticator_block = 5;\n         */\n        this.authenticatorBlock = new Uint8Array(0);\n        /**\n         * @generated from field: bytes authenticator_block_signature = 6;\n         */\n        this.authenticatorBlockSignature = new Uint8Array(0);\n        /**\n         * @generated from field: bytes personal_vault_superuser_encrypted_storable_vault_key = 8;\n         */\n        this.personalVaultSuperuserEncryptedStorableVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes personal_vault_superuser_encrypted_high_security_vault_key = 9;\n         */\n        this.personalVaultSuperuserEncryptedHighSecurityVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes personal_vault_superuser_encrypted_vault_message_private_key = 18;\n         */\n        this.personalVaultSuperuserEncryptedVaultMessagePrivateKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes team_vault_superuser_encrypted_storable_vault_key = 11;\n         */\n        this.teamVaultSuperuserEncryptedStorableVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes team_vault_superuser_encrypted_high_security_vault_key = 12;\n         */\n        this.teamVaultSuperuserEncryptedHighSecurityVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes team_vault_superuser_encrypted_vault_message_private_key = 19;\n         */\n        this.teamVaultSuperuserEncryptedVaultMessagePrivateKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes team_associated_vault_superuser_encrypted_storable_vault_key = 13;\n         */\n        this.teamAssociatedVaultSuperuserEncryptedStorableVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes team_associated_vault_superuser_encrypted_high_security_vault_key = 14;\n         */\n        this.teamAssociatedVaultSuperuserEncryptedHighSecurityVaultKey = new Uint8Array(0);\n        /**\n         * @generated from field: bytes team_associated_vault_superuser_encrypted_vault_message_private_key = 20;\n         */\n        this.teamAssociatedVaultSuperuserEncryptedVaultMessagePrivateKey = new Uint8Array(0);\n        /**\n         * optional\n         *\n         * @generated from field: string contact_json = 15;\n         */\n        this.contactJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateOrganizationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateOrganizationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateOrganizationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateOrganizationRequest, a, b);\n    }\n}\nCreateOrganizationRequest.runtime = proto3;\nCreateOrganizationRequest.typeName = \"domain.CreateOrganizationRequest\";\nCreateOrganizationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"icon\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 17, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 16, name: \"user_profile\", kind: \"message\", T: ProfileData },\n    { no: 21, name: \"admin_profile\", kind: \"message\", T: ProfileData },\n    { no: 3, name: \"authenticator\", kind: \"message\", T: AuthenticatorData },\n    { no: 4, name: \"legacy_admin_vault_data\", kind: \"message\", T: VaultCreationData },\n    { no: 5, name: \"authenticator_block\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 6, name: \"authenticator_block_signature\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 23, name: \"admin_vault_data\", kind: \"message\", T: VaultCreationData },\n    { no: 7, name: \"personal_vault_data\", kind: \"message\", T: VaultCreationData },\n    { no: 8, name: \"personal_vault_superuser_encrypted_storable_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 9, name: \"personal_vault_superuser_encrypted_high_security_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 18, name: \"personal_vault_superuser_encrypted_vault_message_private_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 10, name: \"team_vault_data\", kind: \"message\", T: VaultPairCreationData },\n    { no: 11, name: \"team_vault_superuser_encrypted_storable_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 12, name: \"team_vault_superuser_encrypted_high_security_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 19, name: \"team_vault_superuser_encrypted_vault_message_private_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 13, name: \"team_associated_vault_superuser_encrypted_storable_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 14, name: \"team_associated_vault_superuser_encrypted_high_security_vault_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 20, name: \"team_associated_vault_superuser_encrypted_vault_message_private_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 15, name: \"contact_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 22, name: \"parent_organization_info\", kind: \"message\", T: CreateOrganizationRequest_ParentOrganizationInfo },\n]);\n/**\n * @generated from message domain.CreateOrganizationRequest.ParentOrganizationInfo\n */\nexport class CreateOrganizationRequest_ParentOrganizationInfo extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateOrganizationRequest_ParentOrganizationInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateOrganizationRequest_ParentOrganizationInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateOrganizationRequest_ParentOrganizationInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateOrganizationRequest_ParentOrganizationInfo, a, b);\n    }\n}\nCreateOrganizationRequest_ParentOrganizationInfo.runtime = proto3;\nCreateOrganizationRequest_ParentOrganizationInfo.typeName = \"domain.CreateOrganizationRequest.ParentOrganizationInfo\";\nCreateOrganizationRequest_ParentOrganizationInfo.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CreateOrganizationResponse\n */\nexport class CreateOrganizationResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 2;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: string super_user_id = 3;\n         */\n        this.superUserId = \"\";\n        /**\n         * @generated from field: string authenticator_id = 4;\n         */\n        this.authenticatorId = \"\";\n        /**\n         * @generated from field: string legacy_admin_vault_id = 5;\n         */\n        this.legacyAdminVaultId = \"\";\n        /**\n         * @generated from field: string personal_vault_id = 6;\n         */\n        this.personalVaultId = \"\";\n        /**\n         * @generated from field: string team_vault_id = 7;\n         */\n        this.teamVaultId = \"\";\n        /**\n         * @generated from field: string team_associated_vault_id = 8;\n         */\n        this.teamAssociatedVaultId = \"\";\n        /**\n         * @generated from field: string profile_id = 9;\n         */\n        this.profileId = \"\";\n        /**\n         * @generated from field: string admin_profile_id = 10;\n         */\n        this.adminProfileId = \"\";\n        /**\n         * @generated from field: string admin_vault_id = 11;\n         */\n        this.adminVaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateOrganizationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateOrganizationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateOrganizationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateOrganizationResponse, a, b);\n    }\n}\nCreateOrganizationResponse.runtime = proto3;\nCreateOrganizationResponse.typeName = \"domain.CreateOrganizationResponse\";\nCreateOrganizationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"super_user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"legacy_admin_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"personal_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"team_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"team_associated_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"admin_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"admin_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.UpdateOrganizationRequest\n */\nexport class UpdateOrganizationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateOrganizationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateOrganizationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateOrganizationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateOrganizationRequest, a, b);\n    }\n}\nUpdateOrganizationRequest.runtime = proto3;\nUpdateOrganizationRequest.typeName = \"domain.UpdateOrganizationRequest\";\nUpdateOrganizationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"message\", T: StringValue },\n    { no: 3, name: \"icon\", kind: \"message\", T: StringValue },\n    { no: 4, name: \"restrict_create_team\", kind: \"message\", T: BoolValue },\n    { no: 5, name: \"auditlog_enable\", kind: \"message\", T: BoolValue },\n    { no: 11, name: \"child_organization_management_enable\", kind: \"message\", T: BoolValue },\n    { no: 8, name: \"restrict_personal_logins\", kind: \"message\", T: BoolValue },\n    { no: 7, name: \"monitored_domains\", kind: \"message\", T: UpdateOrganizationRequest_StringArray },\n    { no: 9, name: \"password_policy\", kind: \"message\", T: StringValue },\n    { no: 10, name: \"unlock_time_limit\", kind: \"message\", T: UnlockTimeLimit },\n    { no: 12, name: \"client_settings\", kind: \"message\", T: StringValue },\n]);\n/**\n * @generated from message domain.UpdateOrganizationRequest.StringArray\n */\nexport class UpdateOrganizationRequest_StringArray extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string value = 1;\n         */\n        this.value = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateOrganizationRequest_StringArray().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateOrganizationRequest_StringArray().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateOrganizationRequest_StringArray().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateOrganizationRequest_StringArray, a, b);\n    }\n}\nUpdateOrganizationRequest_StringArray.runtime = proto3;\nUpdateOrganizationRequest_StringArray.typeName = \"domain.UpdateOrganizationRequest.StringArray\";\nUpdateOrganizationRequest_StringArray.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.UpdateOrganizationResponse\n */\nexport class UpdateOrganizationResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateOrganizationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateOrganizationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateOrganizationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateOrganizationResponse, a, b);\n    }\n}\nUpdateOrganizationResponse.runtime = proto3;\nUpdateOrganizationResponse.typeName = \"domain.UpdateOrganizationResponse\";\nUpdateOrganizationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.ModifyMembersRequest\n */\nexport class ModifyMembersRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: repeated domain.ModifyMembersRequest.CreateProfileOperation create_profile_ops = 7;\n         */\n        this.createProfileOps = [];\n        /**\n         * @generated from field: repeated domain.ModifyMembersRequest.UpdateProfileOperation update_profile_ops = 8;\n         */\n        this.updateProfileOps = [];\n        /**\n         * @generated from field: repeated string delete_profile_ids = 9;\n         */\n        this.deleteProfileIds = [];\n        /**\n         * required if admins are added and admin vault is not regenerated\n         *\n         * @generated from field: string legacy_admin_vault_generation_id = 10;\n         */\n        this.legacyAdminVaultGenerationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ModifyMembersRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ModifyMembersRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ModifyMembersRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ModifyMembersRequest, a, b);\n    }\n}\nModifyMembersRequest.runtime = proto3;\nModifyMembersRequest.typeName = \"domain.ModifyMembersRequest\";\nModifyMembersRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"create_profile_ops\", kind: \"message\", T: ModifyMembersRequest_CreateProfileOperation, repeated: true },\n    { no: 8, name: \"update_profile_ops\", kind: \"message\", T: ModifyMembersRequest_UpdateProfileOperation, repeated: true },\n    { no: 9, name: \"delete_profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 5, name: \"legacy_admin_vault_regenerate_data\", kind: \"message\", T: VaultRegenerateData },\n    { no: 10, name: \"legacy_admin_vault_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ModifyMembersRequest.CreateProfileOperation\n */\nexport class ModifyMembersRequest_CreateProfileOperation extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bool is_admin = 2;\n         */\n        this.isAdmin = false;\n        /**\n         * @generated from field: string email = 6;\n         */\n        this.email = \"\";\n        /**\n         * @generated from field: bool create_start_code_and_send_mail = 8;\n         */\n        this.createStartCodeAndSendMail = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ModifyMembersRequest_CreateProfileOperation().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ModifyMembersRequest_CreateProfileOperation().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ModifyMembersRequest_CreateProfileOperation().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ModifyMembersRequest_CreateProfileOperation, a, b);\n    }\n}\nModifyMembersRequest_CreateProfileOperation.runtime = proto3;\nModifyMembersRequest_CreateProfileOperation.typeName = \"domain.ModifyMembersRequest.CreateProfileOperation\";\nModifyMembersRequest_CreateProfileOperation.fields = proto3.util.newFieldList(() => [\n    { no: 2, name: \"is_admin\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"personal_vault_data\", kind: \"message\", T: VaultCreationData },\n    { no: 4, name: \"profile\", kind: \"message\", T: ProfileData },\n    { no: 5, name: \"legacy_admin_vault_lock\", kind: \"message\", T: VaultProfileLock },\n    { no: 9, name: \"admin_profile_lock\", kind: \"message\", T: ProfileProfileLock },\n    { no: 6, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"create_start_code_and_send_mail\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.ModifyMembersRequest.UpdateProfileOperation\n */\nexport class ModifyMembersRequest_UpdateProfileOperation extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string profile_id = 1;\n         */\n        this.profileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ModifyMembersRequest_UpdateProfileOperation().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ModifyMembersRequest_UpdateProfileOperation().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ModifyMembersRequest_UpdateProfileOperation().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ModifyMembersRequest_UpdateProfileOperation, a, b);\n    }\n}\nModifyMembersRequest_UpdateProfileOperation.runtime = proto3;\nModifyMembersRequest_UpdateProfileOperation.typeName = \"domain.ModifyMembersRequest.UpdateProfileOperation\";\nModifyMembersRequest_UpdateProfileOperation.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"is_admin\", kind: \"message\", T: BoolValue },\n    { no: 4, name: \"admin_profile_lock\", kind: \"message\", T: ProfileProfileLock },\n]);\n/**\n * @generated from message domain.ModifyMembersResponse\n */\nexport class ModifyMembersResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string personal_vault_ids = 2;\n         */\n        this.personalVaultIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ModifyMembersResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ModifyMembersResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ModifyMembersResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ModifyMembersResponse, a, b);\n    }\n}\nModifyMembersResponse.runtime = proto3;\nModifyMembersResponse.typeName = \"domain.ModifyMembersResponse\";\nModifyMembersResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"personal_vault_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.CreateServiceProfileRequest\n */\nexport class CreateServiceProfileRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateServiceProfileRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateServiceProfileRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateServiceProfileRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateServiceProfileRequest, a, b);\n    }\n}\nCreateServiceProfileRequest.runtime = proto3;\nCreateServiceProfileRequest.typeName = \"domain.CreateServiceProfileRequest\";\nCreateServiceProfileRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"profile\", kind: \"message\", T: ProfileData },\n    { no: 3, name: \"downstream_admin_profile_lock\", kind: \"message\", T: ProfileProfileLock },\n]);\n/**\n * @generated from message domain.CreateServiceProfileResponse\n */\nexport class CreateServiceProfileResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string profile_id = 2;\n         */\n        this.profileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateServiceProfileResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateServiceProfileResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateServiceProfileResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateServiceProfileResponse, a, b);\n    }\n}\nCreateServiceProfileResponse.runtime = proto3;\nCreateServiceProfileResponse.typeName = \"domain.CreateServiceProfileResponse\";\nCreateServiceProfileResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.LeaveOrganizationRequest\n */\nexport class LeaveOrganizationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new LeaveOrganizationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new LeaveOrganizationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new LeaveOrganizationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(LeaveOrganizationRequest, a, b);\n    }\n}\nLeaveOrganizationRequest.runtime = proto3;\nLeaveOrganizationRequest.typeName = \"domain.LeaveOrganizationRequest\";\nLeaveOrganizationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.LeaveOrganizationResponse\n */\nexport class LeaveOrganizationResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new LeaveOrganizationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new LeaveOrganizationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new LeaveOrganizationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(LeaveOrganizationResponse, a, b);\n    }\n}\nLeaveOrganizationResponse.runtime = proto3;\nLeaveOrganizationResponse.typeName = \"domain.LeaveOrganizationResponse\";\nLeaveOrganizationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.AcceptInviteRequest\n */\nexport class AcceptInviteRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AcceptInviteRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AcceptInviteRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AcceptInviteRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AcceptInviteRequest, a, b);\n    }\n}\nAcceptInviteRequest.runtime = proto3;\nAcceptInviteRequest.typeName = \"domain.AcceptInviteRequest\";\nAcceptInviteRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.AcceptInviteResponse\n */\nexport class AcceptInviteResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AcceptInviteResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AcceptInviteResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AcceptInviteResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AcceptInviteResponse, a, b);\n    }\n}\nAcceptInviteResponse.runtime = proto3;\nAcceptInviteResponse.typeName = \"domain.AcceptInviteResponse\";\nAcceptInviteResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.RedeemCouponRequest\n */\nexport class RedeemCouponRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: string coupon_text = 2;\n         */\n        this.couponText = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RedeemCouponRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RedeemCouponRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RedeemCouponRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RedeemCouponRequest, a, b);\n    }\n}\nRedeemCouponRequest.runtime = proto3;\nRedeemCouponRequest.typeName = \"domain.RedeemCouponRequest\";\nRedeemCouponRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"coupon_text\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.RedeemCouponResponse\n */\nexport class RedeemCouponResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RedeemCouponResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RedeemCouponResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RedeemCouponResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RedeemCouponResponse, a, b);\n    }\n}\nRedeemCouponResponse.runtime = proto3;\nRedeemCouponResponse.typeName = \"domain.RedeemCouponResponse\";\nRedeemCouponResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.DeleteOrganizationRequest\n */\nexport class DeleteOrganizationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteOrganizationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteOrganizationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteOrganizationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteOrganizationRequest, a, b);\n    }\n}\nDeleteOrganizationRequest.runtime = proto3;\nDeleteOrganizationRequest.typeName = \"domain.DeleteOrganizationRequest\";\nDeleteOrganizationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.DeleteOrganizationResponse\n */\nexport class DeleteOrganizationResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteOrganizationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteOrganizationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteOrganizationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteOrganizationResponse, a, b);\n    }\n}\nDeleteOrganizationResponse.runtime = proto3;\nDeleteOrganizationResponse.typeName = \"domain.DeleteOrganizationResponse\";\nDeleteOrganizationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.GetSubscriptionDetailsRequest\n */\nexport class GetSubscriptionDetailsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetSubscriptionDetailsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetSubscriptionDetailsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetSubscriptionDetailsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetSubscriptionDetailsRequest, a, b);\n    }\n}\nGetSubscriptionDetailsRequest.runtime = proto3;\nGetSubscriptionDetailsRequest.typeName = \"domain.GetSubscriptionDetailsRequest\";\nGetSubscriptionDetailsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetSubscriptionDetailsResponse\n */\nexport class GetSubscriptionDetailsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.GetSubscriptionDetailsResponse.Payment payments = 1;\n         */\n        this.payments = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetSubscriptionDetailsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetSubscriptionDetailsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetSubscriptionDetailsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetSubscriptionDetailsResponse, a, b);\n    }\n}\nGetSubscriptionDetailsResponse.runtime = proto3;\nGetSubscriptionDetailsResponse.typeName = \"domain.GetSubscriptionDetailsResponse\";\nGetSubscriptionDetailsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"payments\", kind: \"message\", T: GetSubscriptionDetailsResponse_Payment, repeated: true },\n    { no: 4, name: \"paddle_subscription\", kind: \"message\", T: GetSubscriptionDetailsResponse_PaddleSubscription },\n    { no: 5, name: \"status\", kind: \"message\", T: SubscriptionStatus },\n]);\n/**\n * see https://developer.paddle.com/webhook-reference/ZG9jOjI1MzUzOTk3-subscription-payment-succeeded\n *\n * @generated from message domain.GetSubscriptionDetailsResponse.Payment\n */\nexport class GetSubscriptionDetailsResponse_Payment extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string receipt_url = 2;\n         */\n        this.receiptUrl = \"\";\n        /**\n         * @generated from field: int64 sale_gross_cents = 3;\n         */\n        this.saleGrossCents = protoInt64.zero;\n        /**\n         * @generated from field: int64 payment_tax_cents = 4;\n         */\n        this.paymentTaxCents = protoInt64.zero;\n        /**\n         * @generated from field: string currency = 5;\n         */\n        this.currency = \"\";\n        /**\n         * @generated from field: string order_id = 6;\n         */\n        this.orderId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetSubscriptionDetailsResponse_Payment().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetSubscriptionDetailsResponse_Payment().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetSubscriptionDetailsResponse_Payment().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetSubscriptionDetailsResponse_Payment, a, b);\n    }\n}\nGetSubscriptionDetailsResponse_Payment.runtime = proto3;\nGetSubscriptionDetailsResponse_Payment.typeName = \"domain.GetSubscriptionDetailsResponse.Payment\";\nGetSubscriptionDetailsResponse_Payment.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"event_time\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"receipt_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"sale_gross_cents\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 4, name: \"payment_tax_cents\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 5, name: \"currency\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"order_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetSubscriptionDetailsResponse.PaddleSubscription\n */\nexport class GetSubscriptionDetailsResponse_PaddleSubscription extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: domain.SubscriptionPlan plan = 1;\n         */\n        this.plan = SubscriptionPlan.UNKNOWN;\n        /**\n         * @generated from field: int32 quantity = 2;\n         */\n        this.quantity = 0;\n        /**\n         * @generated from field: int32 unit_price_cents = 3;\n         */\n        this.unitPriceCents = 0;\n        /**\n         * @generated from field: int32 total_price_cents = 4;\n         */\n        this.totalPriceCents = 0;\n        /**\n         * @generated from field: string currency = 5;\n         */\n        this.currency = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetSubscriptionDetailsResponse_PaddleSubscription().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetSubscriptionDetailsResponse_PaddleSubscription().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetSubscriptionDetailsResponse_PaddleSubscription().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetSubscriptionDetailsResponse_PaddleSubscription, a, b);\n    }\n}\nGetSubscriptionDetailsResponse_PaddleSubscription.runtime = proto3;\nGetSubscriptionDetailsResponse_PaddleSubscription.typeName = \"domain.GetSubscriptionDetailsResponse.PaddleSubscription\";\nGetSubscriptionDetailsResponse_PaddleSubscription.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"plan\", kind: \"enum\", T: proto3.getEnumType(SubscriptionPlan) },\n    { no: 2, name: \"quantity\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"unit_price_cents\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"total_price_cents\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 5, name: \"currency\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"next_bill_date\", kind: \"message\", T: Timestamp },\n]);\n/**\n * @generated from message domain.RegenerateOrganizationProfileRequest\n */\nexport class RegenerateOrganizationProfileRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * optional, regenerates to free profile if empty\n         *\n         * @generated from field: string user_id = 3;\n         */\n        this.userId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegenerateOrganizationProfileRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegenerateOrganizationProfileRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegenerateOrganizationProfileRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegenerateOrganizationProfileRequest, a, b);\n    }\n}\nRegenerateOrganizationProfileRequest.runtime = proto3;\nRegenerateOrganizationProfileRequest.typeName = \"domain.RegenerateOrganizationProfileRequest\";\nRegenerateOrganizationProfileRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"profile\", kind: \"message\", T: ProfileRegenerateData },\n    { no: 3, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.RegenerateOrganizationProfileResponse\n */\nexport class RegenerateOrganizationProfileResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegenerateOrganizationProfileResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegenerateOrganizationProfileResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegenerateOrganizationProfileResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegenerateOrganizationProfileResponse, a, b);\n    }\n}\nRegenerateOrganizationProfileResponse.runtime = proto3;\nRegenerateOrganizationProfileResponse.typeName = \"domain.RegenerateOrganizationProfileResponse\";\nRegenerateOrganizationProfileResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.ClaimPreliminaryProfileRequest\n */\nexport class ClaimPreliminaryProfileRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string profile_id = 1;\n         */\n        this.profileId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ClaimPreliminaryProfileRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ClaimPreliminaryProfileRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ClaimPreliminaryProfileRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ClaimPreliminaryProfileRequest, a, b);\n    }\n}\nClaimPreliminaryProfileRequest.runtime = proto3;\nClaimPreliminaryProfileRequest.typeName = \"domain.ClaimPreliminaryProfileRequest\";\nClaimPreliminaryProfileRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ClaimPreliminaryProfileResponse\n */\nexport class ClaimPreliminaryProfileResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ClaimPreliminaryProfileResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ClaimPreliminaryProfileResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ClaimPreliminaryProfileResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ClaimPreliminaryProfileResponse, a, b);\n    }\n}\nClaimPreliminaryProfileResponse.runtime = proto3;\nClaimPreliminaryProfileResponse.typeName = \"domain.ClaimPreliminaryProfileResponse\";\nClaimPreliminaryProfileResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.RegenerateAdminProfileRequest\n */\nexport class RegenerateAdminProfileRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegenerateAdminProfileRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegenerateAdminProfileRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegenerateAdminProfileRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegenerateAdminProfileRequest, a, b);\n    }\n}\nRegenerateAdminProfileRequest.runtime = proto3;\nRegenerateAdminProfileRequest.typeName = \"domain.RegenerateAdminProfileRequest\";\nRegenerateAdminProfileRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"profile\", kind: \"message\", T: ProfileRegenerateData },\n    { no: 3, name: \"admin_vault_data\", kind: \"message\", T: VaultCreationData },\n]);\n/**\n * @generated from message domain.RegenerateAdminProfileResponse\n */\nexport class RegenerateAdminProfileResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string admin_profile_id = 2;\n         */\n        this.adminProfileId = \"\";\n        /**\n         * @generated from field: string admin_profile_key_generation_id = 3;\n         */\n        this.adminProfileKeyGenerationId = \"\";\n        /**\n         * this is only set on admin vault creation\n         * TODO: remove this once all organizations have the new admin vaults\n         *\n         * @generated from field: string admin_vault_id = 4;\n         */\n        this.adminVaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegenerateAdminProfileResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegenerateAdminProfileResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegenerateAdminProfileResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegenerateAdminProfileResponse, a, b);\n    }\n}\nRegenerateAdminProfileResponse.runtime = proto3;\nRegenerateAdminProfileResponse.typeName = \"domain.RegenerateAdminProfileResponse\";\nRegenerateAdminProfileResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"admin_profile_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"admin_profile_key_generation_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"admin_vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.RenewProfileStartCodeRequest\n */\nexport class RenewProfileStartCodeRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: repeated string profile_ids = 2;\n         */\n        this.profileIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RenewProfileStartCodeRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RenewProfileStartCodeRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RenewProfileStartCodeRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RenewProfileStartCodeRequest, a, b);\n    }\n}\nRenewProfileStartCodeRequest.runtime = proto3;\nRenewProfileStartCodeRequest.typeName = \"domain.RenewProfileStartCodeRequest\";\nRenewProfileStartCodeRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.RenewProfileStartCodeResponse\n */\nexport class RenewProfileStartCodeResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RenewProfileStartCodeResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RenewProfileStartCodeResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RenewProfileStartCodeResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RenewProfileStartCodeResponse, a, b);\n    }\n}\nRenewProfileStartCodeResponse.runtime = proto3;\nRenewProfileStartCodeResponse.typeName = \"domain.RenewProfileStartCodeResponse\";\nRenewProfileStartCodeResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.SendStartCodeEmailRequest\n */\nexport class SendStartCodeEmailRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: repeated string profile_ids = 2;\n         */\n        this.profileIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SendStartCodeEmailRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SendStartCodeEmailRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SendStartCodeEmailRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SendStartCodeEmailRequest, a, b);\n    }\n}\nSendStartCodeEmailRequest.runtime = proto3;\nSendStartCodeEmailRequest.typeName = \"domain.SendStartCodeEmailRequest\";\nSendStartCodeEmailRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.SendStartCodeEmailResponse\n */\nexport class SendStartCodeEmailResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SendStartCodeEmailResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SendStartCodeEmailResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SendStartCodeEmailResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SendStartCodeEmailResponse, a, b);\n    }\n}\nSendStartCodeEmailResponse.runtime = proto3;\nSendStartCodeEmailResponse.typeName = \"domain.SendStartCodeEmailResponse\";\nSendStartCodeEmailResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.RevokeProfileStartCodeRequest\n */\nexport class RevokeProfileStartCodeRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: repeated string profile_ids = 2;\n         */\n        this.profileIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RevokeProfileStartCodeRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RevokeProfileStartCodeRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RevokeProfileStartCodeRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RevokeProfileStartCodeRequest, a, b);\n    }\n}\nRevokeProfileStartCodeRequest.runtime = proto3;\nRevokeProfileStartCodeRequest.typeName = \"domain.RevokeProfileStartCodeRequest\";\nRevokeProfileStartCodeRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.RevokeProfileStartCodeResponse\n */\nexport class RevokeProfileStartCodeResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RevokeProfileStartCodeResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RevokeProfileStartCodeResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RevokeProfileStartCodeResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RevokeProfileStartCodeResponse, a, b);\n    }\n}\nRevokeProfileStartCodeResponse.runtime = proto3;\nRevokeProfileStartCodeResponse.typeName = \"domain.RevokeProfileStartCodeResponse\";\nRevokeProfileStartCodeResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.GetOrganizationDeletionInfoRequest\n */\nexport class GetOrganizationDeletionInfoRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: string token = 2;\n         */\n        this.token = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetOrganizationDeletionInfoRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetOrganizationDeletionInfoRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetOrganizationDeletionInfoRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetOrganizationDeletionInfoRequest, a, b);\n    }\n}\nGetOrganizationDeletionInfoRequest.runtime = proto3;\nGetOrganizationDeletionInfoRequest.typeName = \"domain.GetOrganizationDeletionInfoRequest\";\nGetOrganizationDeletionInfoRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetOrganizationDeletionInfoResponse\n */\nexport class GetOrganizationDeletionInfoResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_name = 1;\n         */\n        this.organizationName = \"\";\n        /**\n         * @generated from field: string requested_by_email = 2;\n         */\n        this.requestedByEmail = \"\";\n        /**\n         * @generated from field: int32 user_count = 3;\n         */\n        this.userCount = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetOrganizationDeletionInfoResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetOrganizationDeletionInfoResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetOrganizationDeletionInfoResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetOrganizationDeletionInfoResponse, a, b);\n    }\n}\nGetOrganizationDeletionInfoResponse.runtime = proto3;\nGetOrganizationDeletionInfoResponse.typeName = \"domain.GetOrganizationDeletionInfoResponse\";\nGetOrganizationDeletionInfoResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"requested_by_email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"user_count\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"requested_at\", kind: \"message\", T: Timestamp },\n]);\n/**\n * @generated from message domain.DeleteOrganizationWithTokenRequest\n */\nexport class DeleteOrganizationWithTokenRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: string token = 2;\n         */\n        this.token = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteOrganizationWithTokenRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteOrganizationWithTokenRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteOrganizationWithTokenRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteOrganizationWithTokenRequest, a, b);\n    }\n}\nDeleteOrganizationWithTokenRequest.runtime = proto3;\nDeleteOrganizationWithTokenRequest.typeName = \"domain.DeleteOrganizationWithTokenRequest\";\nDeleteOrganizationWithTokenRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.DeleteOrganizationWithTokenResponse\n */\nexport class DeleteOrganizationWithTokenResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteOrganizationWithTokenResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteOrganizationWithTokenResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteOrganizationWithTokenResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteOrganizationWithTokenResponse, a, b);\n    }\n}\nDeleteOrganizationWithTokenResponse.runtime = proto3;\nDeleteOrganizationWithTokenResponse.typeName = \"domain.DeleteOrganizationWithTokenResponse\";\nDeleteOrganizationWithTokenResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.RemoveOrganizationDeletionTokenRequest\n */\nexport class RemoveOrganizationDeletionTokenRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: string token = 2;\n         */\n        this.token = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RemoveOrganizationDeletionTokenRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RemoveOrganizationDeletionTokenRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RemoveOrganizationDeletionTokenRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RemoveOrganizationDeletionTokenRequest, a, b);\n    }\n}\nRemoveOrganizationDeletionTokenRequest.runtime = proto3;\nRemoveOrganizationDeletionTokenRequest.typeName = \"domain.RemoveOrganizationDeletionTokenRequest\";\nRemoveOrganizationDeletionTokenRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.RemoveOrganizationDeletionTokenResponse\n */\nexport class RemoveOrganizationDeletionTokenResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RemoveOrganizationDeletionTokenResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RemoveOrganizationDeletionTokenResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RemoveOrganizationDeletionTokenResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RemoveOrganizationDeletionTokenResponse, a, b);\n    }\n}\nRemoveOrganizationDeletionTokenResponse.runtime = proto3;\nRemoveOrganizationDeletionTokenResponse.typeName = \"domain.RemoveOrganizationDeletionTokenResponse\";\nRemoveOrganizationDeletionTokenResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.GetBreachDataRequest\n */\nexport class GetBreachDataRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetBreachDataRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetBreachDataRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetBreachDataRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetBreachDataRequest, a, b);\n    }\n}\nGetBreachDataRequest.runtime = proto3;\nGetBreachDataRequest.typeName = \"domain.GetBreachDataRequest\";\nGetBreachDataRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetBreachDataResponse\n */\nexport class GetBreachDataResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.GetBreachDataResponse.MonitoredDomain domains = 1;\n         */\n        this.domains = [];\n        /**\n         * @generated from field: float total_pwn_count_billions = 3;\n         */\n        this.totalPwnCountBillions = 0;\n        /**\n         * @generated from field: int32 total_breach_count = 4;\n         */\n        this.totalBreachCount = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetBreachDataResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetBreachDataResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetBreachDataResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetBreachDataResponse, a, b);\n    }\n}\nGetBreachDataResponse.runtime = proto3;\nGetBreachDataResponse.typeName = \"domain.GetBreachDataResponse\";\nGetBreachDataResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"domains\", kind: \"message\", T: GetBreachDataResponse_MonitoredDomain, repeated: true },\n    { no: 2, name: \"last_check_date\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"total_pwn_count_billions\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 4, name: \"total_breach_count\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n/**\n * corresponds to https://haveibeenpwned.com/API/v3#BreachModel\n *\n * @generated from message domain.GetBreachDataResponse.BreachModel\n */\nexport class GetBreachDataResponse_BreachModel extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * @generated from field: string title = 2;\n         */\n        this.title = \"\";\n        /**\n         * @generated from field: repeated string data_classes = 5;\n         */\n        this.dataClasses = [];\n        /**\n         * will be proxied via static.heylogin.app\n         *\n         * @generated from field: string logo_path = 6;\n         */\n        this.logoPath = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetBreachDataResponse_BreachModel().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetBreachDataResponse_BreachModel().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetBreachDataResponse_BreachModel().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetBreachDataResponse_BreachModel, a, b);\n    }\n}\nGetBreachDataResponse_BreachModel.runtime = proto3;\nGetBreachDataResponse_BreachModel.typeName = \"domain.GetBreachDataResponse.BreachModel\";\nGetBreachDataResponse_BreachModel.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"title\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"breach_date\", kind: \"message\", T: Timestamp },\n    { no: 4, name: \"added_date\", kind: \"message\", T: Timestamp },\n    { no: 5, name: \"data_classes\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 6, name: \"logo_path\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetBreachDataResponse.Breach\n */\nexport class GetBreachDataResponse_Breach extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string aliases = 2;\n         */\n        this.aliases = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetBreachDataResponse_Breach().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetBreachDataResponse_Breach().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetBreachDataResponse_Breach().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetBreachDataResponse_Breach, a, b);\n    }\n}\nGetBreachDataResponse_Breach.runtime = proto3;\nGetBreachDataResponse_Breach.typeName = \"domain.GetBreachDataResponse.Breach\";\nGetBreachDataResponse_Breach.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"model\", kind: \"message\", T: GetBreachDataResponse_BreachModel },\n    { no: 2, name: \"aliases\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.GetBreachDataResponse.MonitoredDomain\n */\nexport class GetBreachDataResponse_MonitoredDomain extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string domain = 1;\n         */\n        this.domain = \"\";\n        /**\n         * @generated from field: repeated domain.GetBreachDataResponse.Breach breaches = 2;\n         */\n        this.breaches = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetBreachDataResponse_MonitoredDomain().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetBreachDataResponse_MonitoredDomain().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetBreachDataResponse_MonitoredDomain().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetBreachDataResponse_MonitoredDomain, a, b);\n    }\n}\nGetBreachDataResponse_MonitoredDomain.runtime = proto3;\nGetBreachDataResponse_MonitoredDomain.typeName = \"domain.GetBreachDataResponse.MonitoredDomain\";\nGetBreachDataResponse_MonitoredDomain.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"domain\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"breaches\", kind: \"message\", T: GetBreachDataResponse_Breach, repeated: true },\n]);\n//# sourceMappingURL=organization_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file organization_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { AcceptInviteRequest, AcceptInviteResponse, CreateOrganizationRequest, CreateOrganizationResponse, CreateServiceProfileRequest, CreateServiceProfileResponse, DeleteOrganizationRequest, DeleteOrganizationResponse, DeleteOrganizationWithTokenRequest, DeleteOrganizationWithTokenResponse, GetBreachDataRequest, GetBreachDataResponse, GetOrganizationDeletionInfoRequest, GetOrganizationDeletionInfoResponse, GetSubscriptionDetailsRequest, GetSubscriptionDetailsResponse, LeaveOrganizationRequest, LeaveOrganizationResponse, ModifyMembersRequest, ModifyMembersResponse, RedeemCouponRequest, RedeemCouponResponse, RegenerateAdminProfileRequest, RegenerateAdminProfileResponse, RegenerateOrganizationProfileRequest, RegenerateOrganizationProfileResponse, RemoveOrganizationDeletionTokenRequest, RemoveOrganizationDeletionTokenResponse, RenewProfileStartCodeRequest, RenewProfileStartCodeResponse, RevokeProfileStartCodeRequest, RevokeProfileStartCodeResponse, SendStartCodeEmailRequest, SendStartCodeEmailResponse, UpdateOrganizationRequest, UpdateOrganizationResponse } from \"./organization_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.OrganizationService\n */\nexport const OrganizationService = {\n    typeName: \"domain.OrganizationService\",\n    methods: {\n        /**\n         * errors:\n         * - EmailTaken (20100): email address taken\n         * - InvalidEmail (20101): invalid email address\n         * - NotAllowedForUserType (20470)\n         * - MissingCredentials (30100): not logged in\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - UserNotFound (20400): no account matching credentials\n         * - MissingAuthenticatorBlock (40430): the request is lacking a follow-up authenticator block\n         * - InvalidAuthenticatorType (40460): The given authenticator is no organization authenticator\n         * - InvalidOrganizationName (60430): name is empty or contains unprintable characters\n         * - OrganizationInvalidContact (60431): contact is not json-formatted\n         * - ProfileNotFound (70400): tried to create with profile when account is not profile enabled\n         * - ProfileAlreadyEnabled (70401): tried to create without profile when account is profile enabled\n         * - ClientOutdated (10426): tried to create admin profile org with legacy admin vault\n         * - Internal (10500): Internal server error\n         *\n         * @generated from rpc domain.OrganizationService.Create\n         */\n        create: {\n            name: \"Create\",\n            I: CreateOrganizationRequest,\n            O: CreateOrganizationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): not logged in\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - OrganizationInsufficientAccess (60100): not admin of the given organzation\n         * - OrganizationNotFound (60400): not member of the given organization\n         * - InvalidOrganizationName (60430): name is empty or contains unprintable characters\n         * - Internal (10500):\n         *\n         * @generated from rpc domain.OrganizationService.Update\n         */\n        update: {\n            name: \"Update\",\n            I: UpdateOrganizationRequest,\n            O: UpdateOrganizationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - EmailTaken (20100): email address taken\n         * - InvalidEmail (20101): invalid email address\n         * - MissingCredentials (30100): not logged in\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - UserNotFound (20400): A user added to the organization was not found\n         * - UserAlreadyInOrganization (60401): A user added to the organization is already in it\n         * - OrganizationInsufficientAccess (60100): Tried to manipulate other members without admin access\n         * - OrganizationMissingAdmin (60410): after the call there would be no admin left\n         * - NotAllowedForUserType (20470): Tried to manipulate a non-default user\n         * - VaultOutOfSync (50100)\n         * - MissingVault (50420): Tried to add admin without admin vault regenerate data\n         * - NotAllowedForProfile (70433): tried to demote an organization manager\n         * - AuditlogSubmissionError (90500)\n         * - Internal (10500):\n         *\n         * @generated from rpc domain.OrganizationService.ModifyMembers\n         */\n        modifyMembers: {\n            name: \"ModifyMembers\",\n            I: ModifyMembersRequest,\n            O: ModifyMembersResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - BadRequest (10400): called on an org without admin profiles\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - NotAllowedForOrganization (60101): organization must have admin profiles enabled\n         * - OrganizationNotFound (60400): not member of the given organization\n         * - UserAlreadyInOrganization (60401): A service user already exists in this organization\n         * - OrganizationInsufficientAccess (60100)\n         * - MissingProfileProfileLock (70412)\n         * - AuditlogSubmissionError (90500)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.OrganizationService.CreateServiceProfile\n         */\n        createServiceProfile: {\n            name: \"CreateServiceProfile\",\n            I: CreateServiceProfileRequest,\n            O: CreateServiceProfileResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): not logged in\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - OrganizationNotFound (60400): not member of the given organization\n         * - OrganizationMissingAdmin (60410): after the call there would be no admin left\n         * - Internal (10500):\n         *\n         * @generated from rpc domain.OrganizationService.Leave\n         */\n        leave: {\n            name: \"Leave\",\n            I: LeaveOrganizationRequest,\n            O: LeaveOrganizationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): not logged in\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - OrganizationNotFound (60400): not member of the given organization\n         * - Internal (10500):\n         *\n         * @generated from rpc domain.OrganizationService.AcceptInvite\n         */\n        acceptInvite: {\n            name: \"AcceptInvite\",\n            I: AcceptInviteRequest,\n            O: AcceptInviteResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): not logged in\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - OrganizationInsufficientAccess (60100): not admin of the given organzation\n         * - OrganizationNotFound (60400): not member of the given organization\n         * - CouponInvalid (60440)\n         * - CouponAlreadyRedeemed (60441)\n         * - Internal (10500):\n         *\n         * @generated from rpc domain.OrganizationService.RedeemCoupon\n         */\n        redeemCoupon: {\n            name: \"RedeemCoupon\",\n            I: RedeemCouponRequest,\n            O: RedeemCouponResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): not logged in\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - OrganizationInsufficientAccess (60100): not admin of the given organzation\n         * - OrganizationNotFound (60400): not member of the given organization\n         * - Internal (10500):\n         *\n         * @generated from rpc domain.OrganizationService.Delete\n         */\n        delete: {\n            name: \"Delete\",\n            I: DeleteOrganizationRequest,\n            O: DeleteOrganizationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * - MissingCredentials (30100): not logged in\n         * - UserNotFound (20400): no account matching credentials\n         * - OrganizationInsufficientAccess (60100): not admin of the given organzation\n         * - OrganizationNotFound (60400): not member of the given organization\n         * - Internal (10500):\n         *\n         * @generated from rpc domain.OrganizationService.GetSubscriptionDetails\n         */\n        getSubscriptionDetails: {\n            name: \"GetSubscriptionDetails\",\n            I: GetSubscriptionDetailsRequest,\n            O: GetSubscriptionDetailsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - UserNotFound (20400): user to assign profile was not found\n         * - OrganizationInsufficientAccess (60100): not admin of the given organzation\n         * - UserAlreadyInOrganization (60401): user to assign profile is already in organization\n         * - OtherProfileEmailConflicts (60450): another profile with this email address exists\n         * - ProfileNotFound (70400): if profile not found, or is user's own profile\n         * - ProfileOutOfSync (70400): if KeyGenerationId is not the null uuid, or authenticator locks are not empty\n         * - MissingProfileAuthenticatorLock (70410)\n         * - AuditlogSubmissionError (90500)\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.OrganizationService.RegenerateOrganizationProfile\n         */\n        regenerateOrganizationProfile: {\n            name: \"RegenerateOrganizationProfile\",\n            I: RegenerateOrganizationProfileRequest,\n            O: RegenerateOrganizationProfileResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - BadRequest (10400): if authenticator locks are not empty and org is admin profile enabled\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - VaultOutOfSync (50100)\n         * - EmptyCommit (50200)\n         * - MissingVault (50420): admin vault creation data is missing\n         * - VaultOutOfSync (50100): admin vault already exists, but creation data was provided\n         * - MissingVaultProfileLock (50411): if vault profile locks do not match all organization vaults\n         * - OrganizationInsufficientAccess (60100)\n         * - ProfileOutOfSync (70400): if KeyGenerationId does not match / is the null uuid for creation\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.OrganizationService.RegenerateAdminProfile\n         */\n        regenerateAdminProfile: {\n            name: \"RegenerateAdminProfile\",\n            I: RegenerateAdminProfileRequest,\n            O: RegenerateAdminProfileResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationInsufficientAccess (60100): not admin of the given organzation\n         * - ProfileNotFound (70400): if profile not found or is not free\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.OrganizationService.RenewProfileStartCode\n         */\n        renewProfileStartCode: {\n            name: \"RenewProfileStartCode\",\n            I: RenewProfileStartCodeRequest,\n            O: RenewProfileStartCodeResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationInsufficientAccess (60100): not admin of the given organzation\n         * - ProfileNotFound (70400): if profile not found, is not free or has no start code\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.OrganizationService.SendStartCodeEmail\n         */\n        sendStartCodeEmail: {\n            name: \"SendStartCodeEmail\",\n            I: SendStartCodeEmailRequest,\n            O: SendStartCodeEmailResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationInsufficientAccess (60100): not admin of the given organzation\n         * - ProfileNotFound (70400): if profile not found or is not free\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.OrganizationService.RevokeProfileStartCode\n         */\n        revokeProfileStartCode: {\n            name: \"RevokeProfileStartCode\",\n            I: RevokeProfileStartCodeRequest,\n            O: RevokeProfileStartCodeResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - OrganizationNotFound (60400)\n         * - InvalidOrganizationDeletionToken (60460)\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.OrganizationService.GetDeletionInfo\n         */\n        getDeletionInfo: {\n            name: \"GetDeletionInfo\",\n            I: GetOrganizationDeletionInfoRequest,\n            O: GetOrganizationDeletionInfoResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - OrganizationNotFound (60400)\n         * - InvalidOrganizationDeletionToken (60460)\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.OrganizationService.DeleteWithToken\n         */\n        deleteWithToken: {\n            name: \"DeleteWithToken\",\n            I: DeleteOrganizationWithTokenRequest,\n            O: DeleteOrganizationWithTokenResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - OrganizationNotFound (60400)\n         * - InvalidOrganizationDeletionToken (60460)\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.OrganizationService.RemoveDeletionToken\n         */\n        removeDeletionToken: {\n            name: \"RemoveDeletionToken\",\n            I: RemoveOrganizationDeletionTokenRequest,\n            O: RemoveOrganizationDeletionTokenResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - OrganizationNotFound (60400)\n         *\n         * @generated from rpc domain.OrganizationService.GetBreachData\n         */\n        getBreachData: {\n            name: \"GetBreachData\",\n            I: GetBreachDataRequest,\n            O: GetBreachDataResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=organization_service_connect.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file profile_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { CheckProfileStartCodeRequest, CheckProfileStartCodeResponse, ClaimWithStartCodeRequest, ClaimWithStartCodeResponse, CreatePrivateProfileRequest, CreatePrivateProfileResponse, DeletePrivateProfileRequest, DeletePrivateProfileResponse, GetProfileInfoRequest, GetProfileInfoResponse, ListProfilesRequest, ListProfilesResponse, ProfileCancelEmailChangeRequest, ProfileCancelEmailChangeResponse, ProfileRequestEmailChangeRequest, ProfileRequestEmailChangeResponse, RegenerateProfilesRequest, RegenerateProfilesResponse, VerifyEmailAddressRequest, VerifyEmailAddressResponse } from \"./profile_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * ProfileService provides methods for handling user accounts.\n *\n * @generated from service domain.ProfileService\n */\nexport const ProfileService = {\n    typeName: \"domain.ProfileService\",\n    methods: {\n        /**\n         * errors:\n         * - EmailTaken (20100): email address taken\n         * - InvalidEmail (20101): invalid email address\n         * - NotAllowedForUserType (20470)\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - ProfileNotFound (70400): account is not profile enabled\n         * - ProfileAlreadyEnabled (70401): private profile already exists\n         * - MissingProfileAuthenticatorLock (70410): a profile lock is missing for an authenticator\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.ProfileService.CreatePrivate\n         */\n        createPrivate: {\n            name: \"CreatePrivate\",\n            I: CreatePrivateProfileRequest,\n            O: CreatePrivateProfileResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - ProfileNotFound (70400): profile could not be found by id\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.ProfileService.DeletePrivate\n         */\n        deletePrivate: {\n            name: \"DeletePrivate\",\n            I: DeletePrivateProfileRequest,\n            O: DeletePrivateProfileResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - VaultOutOfSync (50100): generation_id does not match for some vault\n         * - VaultNotFound (50400): some vault profile lock had an unknown vault_id\n         * - MissingLock (70510): missing locks for one or more authenticators\n         * - ProfileNotFound (70400): some profile could not be found by id\n         * - MissingProfileLock (70410): missing profile locks for one or more authenticators\n         * - ProfileOutOfSync (70411): key_generation_id does not match for some profile\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.ProfileService.Regenerate\n         */\n        regenerate: {\n            name: \"Regenerate\",\n            I: RegenerateProfilesRequest,\n            O: RegenerateProfilesResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - ProfileNotFound (70400): if any profile id could not be found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.ProfileService.List\n         */\n        list: {\n            name: \"List\",\n            I: ListProfilesRequest,\n            O: ListProfilesResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - InvalidEmail (20101)\n         * - EmailTaken (20100)\n         * - ProfileNotFound (70400): profile doesn't exist or can't have an email address\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.ProfileService.RequestEmailChange\n         */\n        requestEmailChange: {\n            name: \"RequestEmailChange\",\n            I: ProfileRequestEmailChangeRequest,\n            O: ProfileRequestEmailChangeResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - PermissionDenied (10100): email change may not be cancelled (in semi-verified state)\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - ProfileNotFound (70400): profile doesn't exist or can't have an email address\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.ProfileService.CancelEmailChange\n         */\n        cancelEmailChange: {\n            name: \"CancelEmailChange\",\n            I: ProfileCancelEmailChangeRequest,\n            O: ProfileCancelEmailChangeResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - PermissionDenied (10100): the credentials provided didn't match the verification token\n         * - InvalidVerificationToken (20460): the verification token provided is invalid or outdated or the email has been verified for another account\n         * - Internal (10500): internal server error\n         * This endpoint can be called with or without credentials. If credentials are given, they must\n         * match with the verification token.\n         *\n         * @generated from rpc domain.ProfileService.VerifyEmailAddress\n         */\n        verifyEmailAddress: {\n            name: \"VerifyEmailAddress\",\n            I: VerifyEmailAddressRequest,\n            O: VerifyEmailAddressResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - ProfileNotFound (70400): profile not found, or is not an organization profile\n         * - ProfileAlreadyConnected (70402)\n         * - ProfileStartCodeInactive (70403)\n         * - UserAlreadyInOrganization (60401)\n         * - StartCodeInvalid (70430)\n         * - StartCodeBlocked (70431)\n         * - EmailTaken (20100)\n         * - AuditlogSubmissionError (90500)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.ProfileService.ClaimWithStartCode\n         */\n        claimWithStartCode: {\n            name: \"ClaimWithStartCode\",\n            I: ClaimWithStartCodeRequest,\n            O: ClaimWithStartCodeResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - ProfileNotFound (70400)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.ProfileService.GetProfileInfo\n         */\n        getProfileInfo: {\n            name: \"GetProfileInfo\",\n            I: GetProfileInfoRequest,\n            O: GetProfileInfoResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - InvalidEmail (20101)\n         * - EmailInviteNotActive (20106)\n         * - ProfileNotFound (70400)\n         * - StartCodeInvalid (70430)\n         * - StartCodeBlocked (70431)\n         * - EmailInviteNotActive (20106)\n         *\n         * @generated from rpc domain.ProfileService.CheckStartCode\n         */\n        checkStartCode: {\n            name: \"CheckStartCode\",\n            I: CheckProfileStartCodeRequest,\n            O: CheckProfileStartCodeResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=profile_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file session_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, StringValue, Timestamp } from \"@bufbuild/protobuf\";\nimport { SyncUpdate, SyncUpdateField } from \"./sync_update_pb.js\";\nimport { UnlockTimeLimit } from \"./unlock_time_limit_pb.js\";\n/**\n * @generated from message domain.DeleteSessionRequest\n */\nexport class DeleteSessionRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string session_id = 1;\n         */\n        this.sessionId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteSessionRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteSessionRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteSessionRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteSessionRequest, a, b);\n    }\n}\nDeleteSessionRequest.runtime = proto3;\nDeleteSessionRequest.typeName = \"domain.DeleteSessionRequest\";\nDeleteSessionRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.DeleteSessionResponse\n */\nexport class DeleteSessionResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteSessionResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteSessionResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteSessionResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteSessionResponse, a, b);\n    }\n}\nDeleteSessionResponse.runtime = proto3;\nDeleteSessionResponse.typeName = \"domain.DeleteSessionResponse\";\nDeleteSessionResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.CreateSessionUnlockRequest\n */\nexport class CreateSessionUnlockRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string session_id = 1;\n         */\n        this.sessionId = \"\";\n        /**\n         * @generated from field: bytes encrypted_secret = 2;\n         */\n        this.encryptedSecret = new Uint8Array(0);\n        /**\n         * @generated from field: string authenticator_id = 3;\n         */\n        this.authenticatorId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateSessionUnlockRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateSessionUnlockRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateSessionUnlockRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateSessionUnlockRequest, a, b);\n    }\n}\nCreateSessionUnlockRequest.runtime = proto3;\nCreateSessionUnlockRequest.typeName = \"domain.CreateSessionUnlockRequest\";\nCreateSessionUnlockRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"encrypted_secret\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"max_expires_at\", kind: \"message\", T: Timestamp },\n]);\n/**\n * @generated from message domain.CreateSessionUnlockResponse\n */\nexport class CreateSessionUnlockResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateSessionUnlockResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateSessionUnlockResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateSessionUnlockResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateSessionUnlockResponse, a, b);\n    }\n}\nCreateSessionUnlockResponse.runtime = proto3;\nCreateSessionUnlockResponse.typeName = \"domain.CreateSessionUnlockResponse\";\nCreateSessionUnlockResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.DeleteSessionUnlockRequest\n */\nexport class DeleteSessionUnlockRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string session_id = 1;\n         */\n        this.sessionId = \"\";\n        /**\n         * @generated from field: bool only_pending_request = 2;\n         */\n        this.onlyPendingRequest = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteSessionUnlockRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteSessionUnlockRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteSessionUnlockRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteSessionUnlockRequest, a, b);\n    }\n}\nDeleteSessionUnlockRequest.runtime = proto3;\nDeleteSessionUnlockRequest.typeName = \"domain.DeleteSessionUnlockRequest\";\nDeleteSessionUnlockRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"only_pending_request\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.DeleteSessionUnlockResponse\n */\nexport class DeleteSessionUnlockResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteSessionUnlockResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteSessionUnlockResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteSessionUnlockResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteSessionUnlockResponse, a, b);\n    }\n}\nDeleteSessionUnlockResponse.runtime = proto3;\nDeleteSessionUnlockResponse.typeName = \"domain.DeleteSessionUnlockResponse\";\nDeleteSessionUnlockResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.RequestSessionUnlockRequest\n */\nexport class RequestSessionUnlockRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RequestSessionUnlockRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RequestSessionUnlockRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RequestSessionUnlockRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RequestSessionUnlockRequest, a, b);\n    }\n}\nRequestSessionUnlockRequest.runtime = proto3;\nRequestSessionUnlockRequest.typeName = \"domain.RequestSessionUnlockRequest\";\nRequestSessionUnlockRequest.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.RequestSessionUnlockResponse\n */\nexport class RequestSessionUnlockResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RequestSessionUnlockResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RequestSessionUnlockResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RequestSessionUnlockResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RequestSessionUnlockResponse, a, b);\n    }\n}\nRequestSessionUnlockResponse.runtime = proto3;\nRequestSessionUnlockResponse.typeName = \"domain.RequestSessionUnlockResponse\";\nRequestSessionUnlockResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.ExtendSessionUnlockRequest\n */\nexport class ExtendSessionUnlockRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ExtendSessionUnlockRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ExtendSessionUnlockRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ExtendSessionUnlockRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ExtendSessionUnlockRequest, a, b);\n    }\n}\nExtendSessionUnlockRequest.runtime = proto3;\nExtendSessionUnlockRequest.typeName = \"domain.ExtendSessionUnlockRequest\";\nExtendSessionUnlockRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"last_user_activity\", kind: \"message\", T: Timestamp },\n]);\n/**\n * @generated from message domain.ExtendSessionUnlockResponse\n */\nexport class ExtendSessionUnlockResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ExtendSessionUnlockResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ExtendSessionUnlockResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ExtendSessionUnlockResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ExtendSessionUnlockResponse, a, b);\n    }\n}\nExtendSessionUnlockResponse.runtime = proto3;\nExtendSessionUnlockResponse.typeName = \"domain.ExtendSessionUnlockResponse\";\nExtendSessionUnlockResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.SendSessionMessageRequest\n */\nexport class SendSessionMessageRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * key values are session ids\n         *\n         * @generated from field: repeated domain.SendSessionMessageRequest.Message messages = 1;\n         */\n        this.messages = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SendSessionMessageRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SendSessionMessageRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SendSessionMessageRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SendSessionMessageRequest, a, b);\n    }\n}\nSendSessionMessageRequest.runtime = proto3;\nSendSessionMessageRequest.typeName = \"domain.SendSessionMessageRequest\";\nSendSessionMessageRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"messages\", kind: \"message\", T: SendSessionMessageRequest_Message, repeated: true },\n]);\n/**\n * @generated from message domain.SendSessionMessageRequest.Message\n */\nexport class SendSessionMessageRequest_Message extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string session_id = 1;\n         */\n        this.sessionId = \"\";\n        /**\n         * @generated from field: bytes payload = 2;\n         */\n        this.payload = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SendSessionMessageRequest_Message().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SendSessionMessageRequest_Message().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SendSessionMessageRequest_Message().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SendSessionMessageRequest_Message, a, b);\n    }\n}\nSendSessionMessageRequest_Message.runtime = proto3;\nSendSessionMessageRequest_Message.typeName = \"domain.SendSessionMessageRequest.Message\";\nSendSessionMessageRequest_Message.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"payload\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * empty response\n *\n * @generated from message domain.SendSessionMessageResponse\n */\nexport class SendSessionMessageResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SendSessionMessageResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SendSessionMessageResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SendSessionMessageResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SendSessionMessageResponse, a, b);\n    }\n}\nSendSessionMessageResponse.runtime = proto3;\nSendSessionMessageResponse.typeName = \"domain.SendSessionMessageResponse\";\nSendSessionMessageResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.UpdateSessionRequest\n */\nexport class UpdateSessionRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string session_id = 1;\n         */\n        this.sessionId = \"\";\n        /**\n         * list of additional fields to include in the sync update triggered by this request\n         *\n         * @generated from field: repeated domain.SyncUpdateField fields_to_update = 2;\n         */\n        this.fieldsToUpdate = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateSessionRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateSessionRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateSessionRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateSessionRequest, a, b);\n    }\n}\nUpdateSessionRequest.runtime = proto3;\nUpdateSessionRequest.typeName = \"domain.UpdateSessionRequest\";\nUpdateSessionRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"fields_to_update\", kind: \"enum\", T: proto3.getEnumType(SyncUpdateField), repeated: true },\n    { no: 3, name: \"client_settings\", kind: \"message\", T: StringValue },\n    { no: 4, name: \"enabled_profiles\", kind: \"message\", T: UpdateSessionRequest_EnabledProfiles },\n    { no: 5, name: \"unlock_time_limit\", kind: \"message\", T: UnlockTimeLimit },\n    { no: 6, name: \"fcm_device_token\", kind: \"message\", T: StringValue },\n]);\n/**\n * @generated from message domain.UpdateSessionRequest.EnabledProfiles\n */\nexport class UpdateSessionRequest_EnabledProfiles extends Message {\n    constructor(data) {\n        super();\n        /**\n         * if empty, all profiles are enabled.\n         * if all profiles are listed, this value will be normalized to empty\n         * non existent profiles will be filtered out\n         *\n         * @generated from field: repeated string profile_ids = 1;\n         */\n        this.profileIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateSessionRequest_EnabledProfiles().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateSessionRequest_EnabledProfiles().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateSessionRequest_EnabledProfiles().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateSessionRequest_EnabledProfiles, a, b);\n    }\n}\nUpdateSessionRequest_EnabledProfiles.runtime = proto3;\nUpdateSessionRequest_EnabledProfiles.typeName = \"domain.UpdateSessionRequest.EnabledProfiles\";\nUpdateSessionRequest_EnabledProfiles.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"profile_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.UpdateSessionResponse\n */\nexport class UpdateSessionResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpdateSessionResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpdateSessionResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpdateSessionResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpdateSessionResponse, a, b);\n    }\n}\nUpdateSessionResponse.runtime = proto3;\nUpdateSessionResponse.typeName = \"domain.UpdateSessionResponse\";\nUpdateSessionResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * deprecated, use UpdateSession endpoint\n *\n * @generated from message domain.SetClientSettingsRequest\n */\nexport class SetClientSettingsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string session_id = 1;\n         */\n        this.sessionId = \"\";\n        /**\n         * @generated from field: string client_settings = 2;\n         */\n        this.clientSettings = \"\";\n        /**\n         * list of additional fields to include in the sync update triggered by this request\n         *\n         * @generated from field: repeated domain.SyncUpdateField fields_to_update = 3;\n         */\n        this.fieldsToUpdate = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SetClientSettingsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SetClientSettingsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SetClientSettingsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SetClientSettingsRequest, a, b);\n    }\n}\nSetClientSettingsRequest.runtime = proto3;\nSetClientSettingsRequest.typeName = \"domain.SetClientSettingsRequest\";\nSetClientSettingsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"client_settings\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"fields_to_update\", kind: \"enum\", T: proto3.getEnumType(SyncUpdateField), repeated: true },\n]);\n/**\n * @generated from message domain.SetClientSettingsResponse\n */\nexport class SetClientSettingsResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SetClientSettingsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SetClientSettingsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SetClientSettingsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SetClientSettingsResponse, a, b);\n    }\n}\nSetClientSettingsResponse.runtime = proto3;\nSetClientSettingsResponse.typeName = \"domain.SetClientSettingsResponse\";\nSetClientSettingsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n//# sourceMappingURL=session_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file session_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { CreateSessionUnlockRequest, CreateSessionUnlockResponse, DeleteSessionRequest, DeleteSessionResponse, DeleteSessionUnlockRequest, DeleteSessionUnlockResponse, ExtendSessionUnlockRequest, ExtendSessionUnlockResponse, RequestSessionUnlockRequest, RequestSessionUnlockResponse, SendSessionMessageRequest, SendSessionMessageResponse, SetClientSettingsRequest, SetClientSettingsResponse, UpdateSessionRequest, UpdateSessionResponse } from \"./session_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * SessionService provides methods for session management.\n * (1) Client calls ListSessions to get a list of the users open sessions.\n * (2) Client calls DeleteSession to remove a session from the server.\n *     The client with the corresponding token can no longer access the server\n *     and must log in again\n *\n * @generated from service domain.SessionService\n */\nexport const SessionService = {\n    typeName: \"domain.SessionService\",\n    methods: {\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - SessionNotFound (20410): session_id not in database\n         * - PermissionDenied (10100) : session does not belong to user\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.SessionService.DeleteSession\n         */\n        deleteSession: {\n            name: \"DeleteSession\",\n            I: DeleteSessionRequest,\n            O: DeleteSessionResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - InvalidTimeout (20420): expires_at ist already expired\n         * - AuthenticatorNotFound (40400): authenticator does not belong to user\n         * - SessionNotFound (20410): session does not belong to user\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.SessionService.CreateSessionUnlock\n         */\n        createSessionUnlock: {\n            name: \"CreateSessionUnlock\",\n            I: CreateSessionUnlockRequest,\n            O: CreateSessionUnlockResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - SessionNotFound (20410): session not in database or does not belong to user\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.SessionService.DeleteSessionUnlock\n         */\n        deleteSessionUnlock: {\n            name: \"DeleteSessionUnlock\",\n            I: DeleteSessionUnlockRequest,\n            O: DeleteSessionUnlockResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - SessionNotFound (20410): session not in database or does not belong to user\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.SessionService.RequestSessionUnlock\n         */\n        requestSessionUnlock: {\n            name: \"RequestSessionUnlock\",\n            I: RequestSessionUnlockRequest,\n            O: RequestSessionUnlockResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - SessionNotFound (20410)\n         * - SessionNotUnlocked (20431)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.SessionService.ExtendSessionUnlock\n         */\n        extendSessionUnlock: {\n            name: \"ExtendSessionUnlock\",\n            I: ExtendSessionUnlockRequest,\n            O: ExtendSessionUnlockResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * TODO Note: currently only sends FCM messages, thus only works for authenticator sessions\n         * Note: This call does not throw an error even if no messages was actually sent.\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.SessionService.SendSessionMessage\n         */\n        sendSessionMessage: {\n            name: \"SendSessionMessage\",\n            I: SendSessionMessageRequest,\n            O: SendSessionMessageResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - SessionNotFound (20410): session not in database or does not belong to user\n         * - MalformedClientSettings (20480): the client settings are not valid JSON\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.SessionService.Update\n         */\n        update: {\n            name: \"Update\",\n            I: UpdateSessionRequest,\n            O: UpdateSessionResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * deprecated, use UpdateSession endpoint\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - SessionNotFound (20410): session not in database or does not belong to user\n         * - MalformedClientSettings (20480): the client settings are not valid JSON\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.SessionService.SetClientSettings\n         */\n        setClientSettings: {\n            name: \"SetClientSettings\",\n            I: SetClientSettingsRequest,\n            O: SetClientSettingsResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=session_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file share_link_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from message domain.PreviewShareLinkRequest\n */\nexport class PreviewShareLinkRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * NOTE: this is no uuid but an uniuri\n         *\n         * @generated from field: string share_link_id = 1;\n         */\n        this.shareLinkId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new PreviewShareLinkRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new PreviewShareLinkRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new PreviewShareLinkRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(PreviewShareLinkRequest, a, b);\n    }\n}\nPreviewShareLinkRequest.runtime = proto3;\nPreviewShareLinkRequest.typeName = \"domain.PreviewShareLinkRequest\";\nPreviewShareLinkRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"share_link_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.PreviewShareLinkResponse\n */\nexport class PreviewShareLinkResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes encrypted_payload = 1;\n         */\n        this.encryptedPayload = new Uint8Array(0);\n        /**\n         * @generated from field: string sender_email = 2;\n         */\n        this.senderEmail = \"\";\n        /**\n         * @generated from field: string organization_name = 3;\n         */\n        this.organizationName = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new PreviewShareLinkResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new PreviewShareLinkResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new PreviewShareLinkResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(PreviewShareLinkResponse, a, b);\n    }\n}\nPreviewShareLinkResponse.runtime = proto3;\nPreviewShareLinkResponse.typeName = \"domain.PreviewShareLinkResponse\";\nPreviewShareLinkResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"encrypted_payload\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 2, name: \"sender_email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"organization_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ShowShareLinkRequest\n */\nexport class ShowShareLinkRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * NOTE: this is no uuid but an uniuri\n         *\n         * @generated from field: string share_link_id = 1;\n         */\n        this.shareLinkId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ShowShareLinkRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ShowShareLinkRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ShowShareLinkRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ShowShareLinkRequest, a, b);\n    }\n}\nShowShareLinkRequest.runtime = proto3;\nShowShareLinkRequest.typeName = \"domain.ShowShareLinkRequest\";\nShowShareLinkRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"share_link_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.ShowShareLinkResponse\n */\nexport class ShowShareLinkResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes encrypted_payload = 1;\n         */\n        this.encryptedPayload = new Uint8Array(0);\n        /**\n         * @generated from field: bytes encrypted_protected_secret = 2;\n         */\n        this.encryptedProtectedSecret = new Uint8Array(0);\n        /**\n         * @generated from field: string sender_email = 3;\n         */\n        this.senderEmail = \"\";\n        /**\n         * @generated from field: string organization_name = 4;\n         */\n        this.organizationName = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ShowShareLinkResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ShowShareLinkResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ShowShareLinkResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ShowShareLinkResponse, a, b);\n    }\n}\nShowShareLinkResponse.runtime = proto3;\nShowShareLinkResponse.typeName = \"domain.ShowShareLinkResponse\";\nShowShareLinkResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"encrypted_payload\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 2, name: \"encrypted_protected_secret\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"sender_email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"organization_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n//# sourceMappingURL=share_link_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file share_link_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { PreviewShareLinkRequest, PreviewShareLinkResponse, ShowShareLinkRequest, ShowShareLinkResponse } from \"./share_link_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.ShareLinkService\n */\nexport const ShareLinkService = {\n    typeName: \"domain.ShareLinkService\",\n    methods: {\n        /**\n         * errors:\n         * - ShareLinkNotFound (110400): share link not found or already used\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.ShareLinkService.Preview\n         */\n        preview: {\n            name: \"Preview\",\n            I: PreviewShareLinkRequest,\n            O: PreviewShareLinkResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - ShareLinkNotFound (110400): share link not found or already used\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.ShareLinkService.Show\n         */\n        show: {\n            name: \"Show\",\n            I: ShowShareLinkRequest,\n            O: ShowShareLinkResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=share_link_service_connect.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file support_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { ReportPageRequest, ReportPageResponse, SendMessageRequest, SendMessageResponse } from \"./support_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.SupportService\n */\nexport const SupportService = {\n    typeName: \"domain.SupportService\",\n    methods: {\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - OrganizationNotFound (60400): not member of the given organization\n         * - ProfileNotFound (): not a profile of this user\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.SupportService.SendMessage\n         */\n        sendMessage: {\n            name: \"SendMessage\",\n            I: SendMessageRequest,\n            O: SendMessageResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * @generated from rpc domain.SupportService.ReportPage\n         */\n        reportPage: {\n            name: \"ReportPage\",\n            I: ReportPageRequest,\n            O: ReportPageResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=support_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file sync_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\n/**\n * @generated from message domain.StreamingSyncRequest\n */\nexport class StreamingSyncRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bool reset_and_request_session_unlock = 1;\n         */\n        this.resetAndRequestSessionUnlock = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new StreamingSyncRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new StreamingSyncRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new StreamingSyncRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(StreamingSyncRequest, a, b);\n    }\n}\nStreamingSyncRequest.runtime = proto3;\nStreamingSyncRequest.typeName = \"domain.StreamingSyncRequest\";\nStreamingSyncRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"reset_and_request_session_unlock\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.LongPollSyncRequest\n */\nexport class LongPollSyncRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bool reset_and_request_session_unlock = 1;\n         */\n        this.resetAndRequestSessionUnlock = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new LongPollSyncRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new LongPollSyncRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new LongPollSyncRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(LongPollSyncRequest, a, b);\n    }\n}\nLongPollSyncRequest.runtime = proto3;\nLongPollSyncRequest.typeName = \"domain.LongPollSyncRequest\";\nLongPollSyncRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"reset_and_request_session_unlock\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * @generated from message domain.SyncRequest\n */\nexport class SyncRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string fcm_message_id = 1;\n         */\n        this.fcmMessageId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncRequest, a, b);\n    }\n}\nSyncRequest.runtime = proto3;\nSyncRequest.typeName = \"domain.SyncRequest\";\nSyncRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"fcm_message_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SyncResponse\n */\nexport class SyncResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SyncResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SyncResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SyncResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SyncResponse, a, b);\n    }\n}\nSyncResponse.runtime = proto3;\nSyncResponse.typeName = \"domain.SyncResponse\";\nSyncResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n//# sourceMappingURL=sync_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file sync_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { LongPollSyncRequest, StreamingSyncRequest, SyncRequest, SyncResponse } from \"./sync_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * SyncService provides methods for synchronizing state from the backend to\n * clients.\n *\n * @generated from service domain.SyncService\n */\nexport const SyncService = {\n    typeName: \"domain.SyncService\",\n    methods: {\n        /**\n         * The StreamingSync call is an event stream that will send a SyncResponse to the client whenever\n         * updates are available. This only includes updates that originate from a different client-id\n         * than the StreamingSync call.\n         *\n         * This call takes an optional request_session_unlock parameter, which requests the session to be\n         * unlocked if set. This allows clients to refresh their StreamingSync connection at the same time\n         * as requesting an unlock, which is a typical initiation point for user interaction.\n         *\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - SessionNotFound (20410): session not in database or does not belong to user\n         * - Timeout (10200): timed out\n         *\n         * @generated from rpc domain.SyncService.StreamingSync\n         */\n        streamingSync: {\n            name: \"StreamingSync\",\n            I: StreamingSyncRequest,\n            O: SyncResponse,\n            kind: MethodKind.ServerStreaming,\n        },\n        /**\n         * The Sync call is a single unary request for a SyncResponse, but returns only once the user\n         * syncVersion is bigger than the client-specified one.\n         *\n         * This call takes an optional request_session_unlock parameter, as above.\n         *\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - SessionNotFound (20410): session not in database or does not belong to user\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.SyncService.LongPollSync\n         */\n        longPollSync: {\n            name: \"LongPollSync\",\n            I: LongPollSyncRequest,\n            O: SyncResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * The Sync call is a single unary request for a SyncResponse.\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.SyncService.Sync\n         */\n        sync: {\n            name: \"Sync\",\n            I: SyncRequest,\n            O: SyncResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=sync_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file user_confirmation_data.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\nimport { UserConfirmationType } from \"./user_confirmation_type_pb.js\";\n/**\n * @generated from message domain.UserConfirmationData\n */\nexport class UserConfirmationData extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: domain.UserConfirmationType type = 1;\n         */\n        this.type = UserConfirmationType.UNKNOWN;\n        /**\n         * similar to AuditlogEvent, so that ones can be derived from this\n         *\n         * @generated from field: string vaultId = 2;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: string loginId = 3;\n         */\n        this.loginId = \"\";\n        /**\n         * @generated from field: string profileId = 4;\n         */\n        this.profileId = \"\";\n        /**\n         * @generated from field: string organizationId = 5;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UserConfirmationData().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UserConfirmationData().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UserConfirmationData().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UserConfirmationData, a, b);\n    }\n}\nUserConfirmationData.runtime = proto3;\nUserConfirmationData.typeName = \"domain.UserConfirmationData\";\nUserConfirmationData.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"type\", kind: \"enum\", T: proto3.getEnumType(UserConfirmationType) },\n    { no: 2, name: \"vaultId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"loginId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"profileId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"organizationId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n//# sourceMappingURL=user_confirmation_data_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file user_confirmation_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\nimport { UserConfirmationData } from \"./user_confirmation_data_pb.js\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\nimport { UserConfirmationResultType } from \"./user_confirmation_result_type_pb.js\";\n/**\n * @generated from message domain.CreateUserConfirmationRequest\n */\nexport class CreateUserConfirmationRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateUserConfirmationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateUserConfirmationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateUserConfirmationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateUserConfirmationRequest, a, b);\n    }\n}\nCreateUserConfirmationRequest.runtime = proto3;\nCreateUserConfirmationRequest.typeName = \"domain.CreateUserConfirmationRequest\";\nCreateUserConfirmationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"data\", kind: \"message\", T: UserConfirmationData },\n]);\n/**\n * @generated from message domain.CreateUserConfirmationResponse\n */\nexport class CreateUserConfirmationResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 2;\n         */\n        this.id = \"\";\n        /**\n         * Optional, sent when user has a security key\n         *\n         * @generated from field: string webauthn_options_json = 3;\n         */\n        this.webauthnOptionsJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateUserConfirmationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateUserConfirmationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateUserConfirmationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateUserConfirmationResponse, a, b);\n    }\n}\nCreateUserConfirmationResponse.runtime = proto3;\nCreateUserConfirmationResponse.typeName = \"domain.CreateUserConfirmationResponse\";\nCreateUserConfirmationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n    { no: 2, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"webauthn_options_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetUserConfirmationRequest\n */\nexport class GetUserConfirmationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetUserConfirmationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetUserConfirmationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetUserConfirmationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetUserConfirmationRequest, a, b);\n    }\n}\nGetUserConfirmationRequest.runtime = proto3;\nGetUserConfirmationRequest.typeName = \"domain.GetUserConfirmationRequest\";\nGetUserConfirmationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.GetUserConfirmationResponse\n */\nexport class GetUserConfirmationResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string requesting_session_id = 1;\n         */\n        this.requestingSessionId = \"\";\n        /**\n         * @generated from field: string fallback_string = 3;\n         */\n        this.fallbackString = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetUserConfirmationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetUserConfirmationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetUserConfirmationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetUserConfirmationResponse, a, b);\n    }\n}\nGetUserConfirmationResponse.runtime = proto3;\nGetUserConfirmationResponse.typeName = \"domain.GetUserConfirmationResponse\";\nGetUserConfirmationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"requesting_session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"data\", kind: \"message\", T: UserConfirmationData },\n    { no: 3, name: \"fallback_string\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SendUserConfirmationResultRequest\n */\nexport class SendUserConfirmationResultRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: domain.UserConfirmationResultType type = 2;\n         */\n        this.type = UserConfirmationResultType.OPEN;\n        /**\n         * Optional, if present allows web session to confirm its own operation with a webauthn response\n         *\n         * @generated from field: string webauthn_response_json = 3;\n         */\n        this.webauthnResponseJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SendUserConfirmationResultRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SendUserConfirmationResultRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SendUserConfirmationResultRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SendUserConfirmationResultRequest, a, b);\n    }\n}\nSendUserConfirmationResultRequest.runtime = proto3;\nSendUserConfirmationResultRequest.typeName = \"domain.SendUserConfirmationResultRequest\";\nSendUserConfirmationResultRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto3.getEnumType(UserConfirmationResultType) },\n    { no: 3, name: \"webauthn_response_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.SendUserConfirmationResultResponse\n */\nexport class SendUserConfirmationResultResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SendUserConfirmationResultResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SendUserConfirmationResultResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SendUserConfirmationResultResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SendUserConfirmationResultResponse, a, b);\n    }\n}\nSendUserConfirmationResultResponse.runtime = proto3;\nSendUserConfirmationResultResponse.typeName = \"domain.SendUserConfirmationResultResponse\";\nSendUserConfirmationResultResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.RetrieveUserConfirmationResultRequest\n */\nexport class RetrieveUserConfirmationResultRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RetrieveUserConfirmationResultRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RetrieveUserConfirmationResultRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RetrieveUserConfirmationResultRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RetrieveUserConfirmationResultRequest, a, b);\n    }\n}\nRetrieveUserConfirmationResultRequest.runtime = proto3;\nRetrieveUserConfirmationResultRequest.typeName = \"domain.RetrieveUserConfirmationResultRequest\";\nRetrieveUserConfirmationResultRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.RetrieveUserConfirmationResultResponse\n */\nexport class RetrieveUserConfirmationResultResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: domain.UserConfirmationResultType result_type = 1;\n         */\n        this.resultType = UserConfirmationResultType.OPEN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RetrieveUserConfirmationResultResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RetrieveUserConfirmationResultResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RetrieveUserConfirmationResultResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RetrieveUserConfirmationResultResponse, a, b);\n    }\n}\nRetrieveUserConfirmationResultResponse.runtime = proto3;\nRetrieveUserConfirmationResultResponse.typeName = \"domain.RetrieveUserConfirmationResultResponse\";\nRetrieveUserConfirmationResultResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"result_type\", kind: \"enum\", T: proto3.getEnumType(UserConfirmationResultType) },\n]);\n/**\n * @generated from message domain.CancelUserConfirmationRequest\n */\nexport class CancelUserConfirmationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CancelUserConfirmationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CancelUserConfirmationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CancelUserConfirmationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CancelUserConfirmationRequest, a, b);\n    }\n}\nCancelUserConfirmationRequest.runtime = proto3;\nCancelUserConfirmationRequest.typeName = \"domain.CancelUserConfirmationRequest\";\nCancelUserConfirmationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.CancelUserConfirmationResponse\n */\nexport class CancelUserConfirmationResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CancelUserConfirmationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CancelUserConfirmationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CancelUserConfirmationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CancelUserConfirmationResponse, a, b);\n    }\n}\nCancelUserConfirmationResponse.runtime = proto3;\nCancelUserConfirmationResponse.typeName = \"domain.CancelUserConfirmationResponse\";\nCancelUserConfirmationResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n//# sourceMappingURL=user_confirmation_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file user_confirmation_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { CancelUserConfirmationRequest, CancelUserConfirmationResponse, CreateUserConfirmationRequest, CreateUserConfirmationResponse, GetUserConfirmationRequest, GetUserConfirmationResponse, RetrieveUserConfirmationResultRequest, RetrieveUserConfirmationResultResponse, SendUserConfirmationResultRequest, SendUserConfirmationResultResponse } from \"./user_confirmation_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.UserConfirmationService\n */\nexport const UserConfirmationService = {\n    typeName: \"domain.UserConfirmationService\",\n    methods: {\n        /**\n         * errors:\n         * - BadRequest (10400): user confirmation data is invalid\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.UserConfirmationService.Create\n         */\n        create: {\n            name: \"Create\",\n            I: CreateUserConfirmationRequest,\n            O: CreateUserConfirmationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - UserConfirmationNotFound (120400)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.UserConfirmationService.Get\n         */\n        get: {\n            name: \"Get\",\n            I: GetUserConfirmationRequest,\n            O: GetUserConfirmationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Restricted to authenticator sessions, unless called with webauthn_credential_data filled.\n         * errors:\n         * - BadRequest (10400): invalid result type was sent, or by session that is not self unlocking\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - UserConfirmationNotFound (120400)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.UserConfirmationService.SendResult\n         */\n        sendResult: {\n            name: \"SendResult\",\n            I: SendUserConfirmationResultRequest,\n            O: SendUserConfirmationResultResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Restricted to session which created the UserConfirmation. Calling this endpoint clears the\n         * UserConfirmation on the backend as well.\n         * errors:\n         * - BadRequest (10400): user confirmation did not have a result yet, or did not belong to session\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - UserConfirmationNotFound (120400)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.UserConfirmationService.RetrieveResult\n         */\n        retrieveResult: {\n            name: \"RetrieveResult\",\n            I: RetrieveUserConfirmationResultRequest,\n            O: RetrieveUserConfirmationResultResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Restricted to session which created the UserConfirmation. This endpoint is idempotent, and\n         * returns success if a confirmation was already cancelled or resolved.\n         * errors:\n         * - BadRequest (10400): user confirmation did not belong to session\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.UserConfirmationService.Cancel\n         */\n        cancel: {\n            name: \"Cancel\",\n            I: CancelUserConfirmationRequest,\n            O: CancelUserConfirmationResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=user_confirmation_service_connect.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file vault_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { CreateCommitRequest, CreateCommitResponse, CreateGenerationRequest, CreateGenerationResponse, CreateInboxVaultRequest, CreateInboxVaultResponse, CreateTeamRequest, CreateTeamResponse, DeleteInboxVaultRequest, DeleteInboxVaultResponse, DeleteTeamRequest, DeleteTeamResponse, ListCommitsRequest, ListCommitsResponse, ListMessagePublicKeysRequest, ListMessagePublicKeysResponse, ModifyTeamUsersRequest, ModifyTeamUsersResponse, UpdateInboxRequest, UpdateInboxResponse } from \"./vault_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * @generated from service domain.VaultService\n */\nexport const VaultService = {\n    typeName: \"domain.VaultService\",\n    methods: {\n        /**\n         * errors:\n         * - BadRequest (10400): trying to update share link from another vault\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - VaultNotFound (50400)\n         * - InvalidUpdateTime (50430): invalid update time\n         * - VaultDirty (50450): vault needs to be regenerated before commit can be made (is flagged dirty)\n         * - EmptyCommit (50200): commit blob is empty\n         * - PermissionDenied (10100): insufficient permissions\n         * - VaultOutOfSync (50100): latest_commit_id does not match, or generation_id of message does not match\n         * - NotAllowedForVault (50110): target vault of vault message not valid\n         * - MissingVaultMessagePublicKey (50461): the vault has no message public key, but it is required for the operation\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.VaultService.CreateCommit\n         */\n        createCommit: {\n            name: \"CreateCommit\",\n            I: CreateCommitRequest,\n            O: CreateCommitResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - VaultNotFound (50400): vault not found\n         * - EmptyCommit (50200): commit blob is empty\n         * - PermissionDenied (10100): insufficient permissions\n         * - VaultOutOfSync (50100): latest_commit_id does not match, or generation_id of message does not match\n         * - NotAllowedForVault (50110): target vault of vault message not valid\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.VaultService.CreateGeneration\n         */\n        createGeneration: {\n            name: \"CreateGeneration\",\n            I: CreateGenerationRequest,\n            O: CreateGenerationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - VaultNotFound (50400): vault not found\n         * - PermissionDenied (10100): insufficient permissions\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.VaultService.ListCommits\n         */\n        listCommits: {\n            name: \"ListCommits\",\n            I: ListCommitsRequest,\n            O: ListCommitsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Create creates a new vault for the authenticated user.\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - UserNotFound (20400): user not found\n         * - InvalidVaultType (50431): given vault types are not allowed\n         * - OrganizationInsufficientAccess (60100): user may not create team in specified organization\n         * - OrganizationNotFound (60400): organization does not exist or user is not a member\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.VaultService.CreateTeam\n         */\n        createTeam: {\n            name: \"CreateTeam\",\n            I: CreateTeamRequest,\n            O: CreateTeamResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - VaultNotFound (50400): vault not found\n         * - PermissionDenied (10100): insufficient permissions\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.VaultService.DeleteTeam\n         */\n        deleteTeam: {\n            name: \"DeleteTeam\",\n            I: DeleteTeamRequest,\n            O: DeleteTeamResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - UserNotFound (20400): one of the users to add was not found\n         * - NotAllowedForUserType (20470): tried to add/remove an organization user\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - NotAllowedForVault (50110): tried to change users on a personal vault\n         * - VaultNotFound (50400): vault not found or associated vault id does not match\n         * - EmptyCommit (50200): commit blob is empty\n         * - InvalidUpdateTime (50430): invalid update time\n         * - VaultOutOfSync (50100): latest_commit_id, generation_id or assoc_generation_id does not match\n         * - MissingLock (50410): a lock is missing for regneration or no keks were provided for a new authenticator\n         * - MissingVault (50420): missing associated regenerate data\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.VaultService.ModifyTeamUsers\n         */\n        modifyTeamUsers: {\n            name: \"ModifyTeamUsers\",\n            I: ModifyTeamUsersRequest,\n            O: ModifyTeamUsersResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100): missing credentials\n         * - InvalidCredentials (30420): the credentials provided are invalid (e.g. session was deleted)\n         * - MissingVaultAuthenticatorLock (50410): a vault authenticator lock is missing\n         * - MissingVault (50420): missing VaultPairCreationData\n         * - MissingEncryptedVaultMessagePrivateKey (50460): a lock is missing the encrypted private key\n         * - MissingVaultMessagePublicKey (50461): no message public key was provided\n         * - VaultInboxSlugInvalid (50470): the inbox slug is invalid\n         * - VaultInboxSlugTaken (50471): the inbox slug is already in use\n         * - OrganizationInsufficientAccess (60100): not allowed to create vaults in organization\n         * - OrganizationNotFound (60400): organization not found or no access\n         * - ProfileNotFound (70400): the profile was not found for the user\n         * - ProfileAlreadyEnabled (70401): got authenticatelocks for profile-enabled user\n         * - ProfileOutOfSync (70411): ProfileLock does not have curren KeyGenerationId\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.VaultService.CreateInboxVault\n         */\n        createInboxVault: {\n            name: \"CreateInboxVault\",\n            I: CreateInboxVaultRequest,\n            O: CreateInboxVaultResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - PermissionDenied (10100): no access to the vault\n         * - NotAllowedForVault (50110): specified vault is not an inbox Vault\n         * - VaultInboxSlugInvalid (50470)\n         * - VaultInboxSlugTaken (50471)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.VaultService.UpdateInbox\n         */\n        updateInbox: {\n            name: \"UpdateInbox\",\n            I: UpdateInboxRequest,\n            O: UpdateInboxResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - VaultNotFound (50400)\n         * - NotAllowedForVault (50110): specified vault is not an inbox Vault\n         * - PermissionDenied (10100): no access to the vault\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.VaultService.DeleteInboxVault\n         */\n        deleteInboxVault: {\n            name: \"DeleteInboxVault\",\n            I: DeleteInboxVaultRequest,\n            O: DeleteInboxVaultResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Note this method does not throw VaultNotFound.\n         * Missing vaults will just be missing from the result.\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - OrganizationNotFound (60400)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.VaultService.ListMessagePublicKeys\n         */\n        listMessagePublicKeys: {\n            name: \"ListMessagePublicKeys\",\n            I: ListMessagePublicKeysRequest,\n            O: ListMessagePublicKeysResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=vault_service_connect.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file webauthn_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, Timestamp } from \"@bufbuild/protobuf\";\nimport { CredentialType } from \"./credential_type_pb.js\";\nimport { WebauthnPrfSupportStatus } from \"./webauthn_prf_support_status_pb.js\";\nimport { SyncUpdate } from \"./sync_update_pb.js\";\n/**\n * @generated from message domain.RegisterCredentialInitRequest\n */\nexport class RegisterCredentialInitRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: domain.CredentialType credential_type = 1;\n         */\n        this.credentialType = CredentialType.UNKNOWN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegisterCredentialInitRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegisterCredentialInitRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegisterCredentialInitRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegisterCredentialInitRequest, a, b);\n    }\n}\nRegisterCredentialInitRequest.runtime = proto3;\nRegisterCredentialInitRequest.typeName = \"domain.RegisterCredentialInitRequest\";\nRegisterCredentialInitRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"credential_type\", kind: \"enum\", T: proto3.getEnumType(CredentialType) },\n]);\n/**\n * @generated from message domain.RegisterCredentialInitResponse\n */\nexport class RegisterCredentialInitResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string request_id = 1;\n         */\n        this.requestId = \"\";\n        /**\n         * @generated from field: string options_json = 2;\n         */\n        this.optionsJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegisterCredentialInitResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegisterCredentialInitResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegisterCredentialInitResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegisterCredentialInitResponse, a, b);\n    }\n}\nRegisterCredentialInitResponse.runtime = proto3;\nRegisterCredentialInitResponse.typeName = \"domain.RegisterCredentialInitResponse\";\nRegisterCredentialInitResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"options_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.RegisterCredentialForAccountCreationInitRequest\n */\nexport class RegisterCredentialForAccountCreationInitRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegisterCredentialForAccountCreationInitRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegisterCredentialForAccountCreationInitRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegisterCredentialForAccountCreationInitRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegisterCredentialForAccountCreationInitRequest, a, b);\n    }\n}\nRegisterCredentialForAccountCreationInitRequest.runtime = proto3;\nRegisterCredentialForAccountCreationInitRequest.typeName = \"domain.RegisterCredentialForAccountCreationInitRequest\";\nRegisterCredentialForAccountCreationInitRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.RegisterCredentialForAccountCreationInitResponse\n */\nexport class RegisterCredentialForAccountCreationInitResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string request_id = 1;\n         */\n        this.requestId = \"\";\n        /**\n         * @generated from field: string options_json = 2;\n         */\n        this.optionsJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegisterCredentialForAccountCreationInitResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegisterCredentialForAccountCreationInitResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegisterCredentialForAccountCreationInitResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegisterCredentialForAccountCreationInitResponse, a, b);\n    }\n}\nRegisterCredentialForAccountCreationInitResponse.runtime = proto3;\nRegisterCredentialForAccountCreationInitResponse.typeName = \"domain.RegisterCredentialForAccountCreationInitResponse\";\nRegisterCredentialForAccountCreationInitResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"options_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.RegisterCredentialFinishRequest\n */\nexport class RegisterCredentialFinishRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string request_id = 1;\n         */\n        this.requestId = \"\";\n        /**\n         * @generated from field: string response_json = 2;\n         */\n        this.responseJson = \"\";\n        /**\n         * @generated from field: domain.WebauthnPrfSupportStatus prf_support_status = 3;\n         */\n        this.prfSupportStatus = WebauthnPrfSupportStatus.UNKNOWN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegisterCredentialFinishRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegisterCredentialFinishRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegisterCredentialFinishRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegisterCredentialFinishRequest, a, b);\n    }\n}\nRegisterCredentialFinishRequest.runtime = proto3;\nRegisterCredentialFinishRequest.typeName = \"domain.RegisterCredentialFinishRequest\";\nRegisterCredentialFinishRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"response_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"prf_support_status\", kind: \"enum\", T: proto3.getEnumType(WebauthnPrfSupportStatus) },\n]);\n/**\n * @generated from message domain.RegisterCredentialFinishResponse\n */\nexport class RegisterCredentialFinishResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RegisterCredentialFinishResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RegisterCredentialFinishResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RegisterCredentialFinishResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RegisterCredentialFinishResponse, a, b);\n    }\n}\nRegisterCredentialFinishResponse.runtime = proto3;\nRegisterCredentialFinishResponse.typeName = \"domain.RegisterCredentialFinishResponse\";\nRegisterCredentialFinishResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.UnlockSessionInitRequest\n */\nexport class UnlockSessionInitRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UnlockSessionInitRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UnlockSessionInitRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UnlockSessionInitRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UnlockSessionInitRequest, a, b);\n    }\n}\nUnlockSessionInitRequest.runtime = proto3;\nUnlockSessionInitRequest.typeName = \"domain.UnlockSessionInitRequest\";\nUnlockSessionInitRequest.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.UnlockSessionInitResponse\n */\nexport class UnlockSessionInitResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string request_id = 1;\n         */\n        this.requestId = \"\";\n        /**\n         * @generated from field: string options_json = 2;\n         */\n        this.optionsJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UnlockSessionInitResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UnlockSessionInitResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UnlockSessionInitResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UnlockSessionInitResponse, a, b);\n    }\n}\nUnlockSessionInitResponse.runtime = proto3;\nUnlockSessionInitResponse.typeName = \"domain.UnlockSessionInitResponse\";\nUnlockSessionInitResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"options_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.UnlockSessionFinishRequest\n */\nexport class UnlockSessionFinishRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string request_id = 1;\n         */\n        this.requestId = \"\";\n        /**\n         * @generated from field: string response_json = 2;\n         */\n        this.responseJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UnlockSessionFinishRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UnlockSessionFinishRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UnlockSessionFinishRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UnlockSessionFinishRequest, a, b);\n    }\n}\nUnlockSessionFinishRequest.runtime = proto3;\nUnlockSessionFinishRequest.typeName = \"domain.UnlockSessionFinishRequest\";\nUnlockSessionFinishRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"response_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"max_expires_at\", kind: \"message\", T: Timestamp },\n]);\n/**\n * @generated from message domain.UnlockSessionFinishResponse\n */\nexport class UnlockSessionFinishResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UnlockSessionFinishResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UnlockSessionFinishResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UnlockSessionFinishResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UnlockSessionFinishResponse, a, b);\n    }\n}\nUnlockSessionFinishResponse.runtime = proto3;\nUnlockSessionFinishResponse.typeName = \"domain.UnlockSessionFinishResponse\";\nUnlockSessionFinishResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n/**\n * @generated from message domain.DeleteCredentialsRequest\n */\nexport class DeleteCredentialsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string webauthn_ids = 1;\n         */\n        this.webauthnIds = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteCredentialsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteCredentialsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteCredentialsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteCredentialsRequest, a, b);\n    }\n}\nDeleteCredentialsRequest.runtime = proto3;\nDeleteCredentialsRequest.typeName = \"domain.DeleteCredentialsRequest\";\nDeleteCredentialsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"webauthn_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message domain.DeleteCredentialsResponse\n */\nexport class DeleteCredentialsResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteCredentialsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteCredentialsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteCredentialsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteCredentialsResponse, a, b);\n    }\n}\nDeleteCredentialsResponse.runtime = proto3;\nDeleteCredentialsResponse.typeName = \"domain.DeleteCredentialsResponse\";\nDeleteCredentialsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sync_update\", kind: \"message\", T: SyncUpdate },\n]);\n//# sourceMappingURL=webauthn_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file webauthn_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { DeleteCredentialsRequest, DeleteCredentialsResponse, RegisterCredentialFinishRequest, RegisterCredentialFinishResponse, RegisterCredentialForAccountCreationInitRequest, RegisterCredentialForAccountCreationInitResponse, RegisterCredentialInitRequest, RegisterCredentialInitResponse, UnlockSessionFinishRequest, UnlockSessionFinishResponse, UnlockSessionInitRequest, UnlockSessionInitResponse } from \"./webauthn_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * WebauthnService provides methods for management and use of webauthn credentials.\n *\n * @generated from service domain.WebauthnService\n */\nexport const WebauthnService = {\n    typeName: \"domain.WebauthnService\",\n    methods: {\n        /**\n         * errors:\n         * - BadRequest (10400): if an unknown credential type is given\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - SessionNotUnlocked (20431)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.WebauthnService.RegisterCredentialInit\n         */\n        registerCredentialInit: {\n            name: \"RegisterCredentialInit\",\n            I: RegisterCredentialInitRequest,\n            O: RegisterCredentialInitResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - InvalidEmail (20101)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.WebauthnService.RegisterCredentialForAccountCreationInit\n         */\n        registerCredentialForAccountCreationInit: {\n            name: \"RegisterCredentialForAccountCreationInit\",\n            I: RegisterCredentialForAccountCreationInitRequest,\n            O: RegisterCredentialForAccountCreationInitResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - SessionNotUnlocked (20431)\n         * - WebauthnValidateError (80400): there is a cryptographic error with the response\n         * - WebauthnDataError (80401): there is a parsing error with the response\n         * - WebauthnInvalidTransport (80403): credential had an invalid transport (for its type)\n         * - WebauthnRequestNotFound (80402): the request_id was not found, or timed out\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.WebauthnService.RegisterCredentialFinish\n         */\n        registerCredentialFinish: {\n            name: \"RegisterCredentialFinish\",\n            I: RegisterCredentialFinishRequest,\n            O: RegisterCredentialFinishResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - SessionNotUnlocked (20431): session can't be unlocked due to missing encrypted_session_unlock\n         * - MissingWebauthnCredential (80404): if no webauthn credentials are registered\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.WebauthnService.UnlockSessionInit\n         */\n        unlockSessionInit: {\n            name: \"UnlockSessionInit\",\n            I: UnlockSessionInitRequest,\n            O: UnlockSessionInitResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - InvalidTimeout (20420): expires_at is already expired\n         * - WebauthnValidateError (80400): there is a cryptographic error with the response\n         * - WebauthnDataError (80401): there is a parsing error with the response\n         * - WebauthnRequestNotFound (80402): the request_id was not found, or timed out\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.WebauthnService.UnlockSessionFinish\n         */\n        unlockSessionFinish: {\n            name: \"UnlockSessionFinish\",\n            I: UnlockSessionFinishRequest,\n            O: UnlockSessionFinishResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - MissingCredentials (30100)\n         * - InvalidCredentials (30420)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.WebauthnService.DeleteCredentials\n         */\n        deleteCredentials: {\n            name: \"DeleteCredentials\",\n            I: DeleteCredentialsRequest,\n            O: DeleteCredentialsResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=webauthn_service_connect.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport default class HealthServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    ping() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.ping({});\n        });\n    }\n}\n//# sourceMappingURL=health.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nexport default class IntegrationsServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    entraFinishAuthorization(resultQueryString) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.entraFinishAuthorization({ resultQueryString });\n            return {\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n                organizationId: requireFieldNotEmpty(resp.organizationId),\n            };\n        });\n    }\n    entraGetAuthorizeUri(organizationId, redirectUri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.entraGetAuthorizeUri({ organizationId, redirectUri });\n            return requireFieldNotEmpty(resp.uri);\n        });\n    }\n    entraGetTenant(organizationId, forceRefresh, cancelToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.entraGetTenant({ organizationId, forceRefresh }, { signal: cancelToken === null || cancelToken === void 0 ? void 0 : cancelToken.signal });\n            return {\n                updatedAt: requireFieldNotEmpty(resp.updatedAt).toDate(),\n                users: resp.users.map((u) => ({\n                    id: u.entraUserId,\n                    email: u.email,\n                    groups: u.memberOf,\n                })),\n                groups: resp.groups.map((g) => ({\n                    id: g.entraGroupId,\n                    name: g.name,\n                })),\n            };\n        });\n    }\n    entraClearAuthorization(organizationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.entraClearAuthorization({ organizationId });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    csvSetIntegrationData(organizationId, dataJson, cancelToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.csvSetIntegrationData({ organizationId, dataJson: dataJson !== null && dataJson !== void 0 ? dataJson : undefined }, { signal: cancelToken === null || cancelToken === void 0 ? void 0 : cancelToken.signal });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    csvGetIntegrationData(organizationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.csvGetIntegrationData({ organizationId });\n            return requireFieldNotEmpty(resp.dataJson);\n        });\n    }\n    googleWorkspaceGetAuthorizationUri(organizationId, redirectUri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.gWorkspaceGetAuthorizeUri({ organizationId, redirectUri });\n            return requireFieldNotEmpty(resp.uri);\n        });\n    }\n    googleWorkspaceFinishAuthorization(resultQueryString) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.gWorkspaceFinishAuthorization({ resultQueryString });\n            return {\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n                organizationId: requireFieldNotEmpty(resp.organizationId),\n            };\n        });\n    }\n    googleWorkspaceClearAuthorization(organizationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.gWorkspaceClearAuthorization({ organizationId });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    googleWorkspaceList(organizationId, forceRefresh = false, cancelToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.gWorkspaceList({ organizationId, forceRefresh }, { signal: cancelToken === null || cancelToken === void 0 ? void 0 : cancelToken.signal });\n            return {\n                updatedAt: requireFieldNotEmpty(resp.updatedAt).toDate(),\n                users: resp.users.map((u) => ({\n                    id: u.id,\n                    email: u.email,\n                })),\n            };\n        });\n    }\n}\n//# sourceMappingURL=integrations.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Timestamp } from '@bufbuild/protobuf';\nimport { requireFieldNotEmpty } from './grpcUtils';\nexport default class LFDOverridesClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    list(lastKnownOverridesUpdateTime) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.list({\n                lastKnownOverridesUpdateTime: lastKnownOverridesUpdateTime\n                    ? Timestamp.fromDate(lastKnownOverridesUpdateTime)\n                    : undefined,\n            });\n            return {\n                overridesJson: resp.overridesJson,\n                overridesUpdateTime: requireFieldNotEmpty(resp.overridesUpdateTime).toDate(),\n            };\n        });\n    }\n}\n//# sourceMappingURL=lfdOverrides.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LFDOverridesService } from './espb/lfd_overrides_service_connect';\nimport EspbServiceClientFactory from './EspbServiceClientFactory';\nexport default class LFDOverridesAdminClient {\n    constructor(baseUri, authToken, clientType, clientId = null, clientVersion = null) {\n        this.baseUri = baseUri;\n        this.authToken = authToken;\n        this.clientType = clientType;\n        this.clientId = clientId;\n        this.clientVersion = clientVersion;\n        const factory = new EspbServiceClientFactory({\n            authTokens: {\n                lfdOverridesAdmin: authToken,\n            },\n            clientId,\n            clientType,\n            clientVersion,\n            baseUri,\n            clientOperationId: null,\n            clientOperationName: null,\n            syncVersion: null,\n            syncSuperUsers: false,\n            permissionUserId: null,\n        });\n        this.espbClient = factory.createServiceClient(LFDOverridesService);\n    }\n    replace(...overrideJson) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.replace({ overrideJson });\n        });\n    }\n    delete(...overrideIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.delete({ overrideIds });\n        });\n    }\n}\n//# sourceMappingURL=lfdOverridesAdminClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { requireFieldNotEmpty } from './grpcUtils';\nexport default class LoginInboxServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    show(slug) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.show({ slug });\n            let organizationData;\n            const orgDataGrpc = resp.organizationData;\n            if (orgDataGrpc) {\n                organizationData = {\n                    name: requireFieldNotEmpty(orgDataGrpc.name),\n                    icon: (_a = orgDataGrpc.icon) !== null && _a !== void 0 ? _a : null,\n                };\n            }\n            return {\n                vaultId: requireFieldNotEmpty(resp.vaultId),\n                generationId: requireFieldNotEmpty(resp.generationId),\n                publicKey: resp.publicKey,\n                metadataJson: requireFieldNotEmpty(resp.metadata),\n                organizationData,\n                url: requireFieldNotEmpty(resp.url),\n                baseUrl: requireFieldNotEmpty(resp.baseUrl),\n            };\n        });\n    }\n    createMessage(vaultId, generationId, type, encryptedData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.createMessage({ vaultId, generationId, type, encryptedData });\n        });\n    }\n}\n//# sourceMappingURL=loginInbox.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UpdateOrganizationRequest_StringArray, } from './espb/organization_service_pb';\nimport { knownEnumOrDefault, requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nimport { toPbVaultProfileLock, toPbProfileRegenerateData, SubscriptionPlan, } from './types';\nimport { toPbVaultCreationData, toVaultPairCreationData, toVaultRegenerateData } from './vaults';\nexport default class OrganizationServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    create({ name, email, icon, userProfile, orgAuth, adminProfile, legacyAdminVaultDto, authenticatorBlock, personalVaultDto, personalVaultSuperuserLock, teamVaultDto, teamVaultSuperuserLock, teamAssociatedVaultSuperuserLock, contactJson, parentOrganizationInfo, adminVaultDto, }) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.create({\n                name: name,\n                email: email,\n                icon: icon !== null && icon !== void 0 ? icon : undefined,\n                userProfile: userProfile !== null && userProfile !== void 0 ? userProfile : undefined,\n                adminProfile,\n                authenticator: orgAuth,\n                adminVaultData: adminVaultDto ? toPbVaultCreationData(adminVaultDto) : undefined,\n                legacyAdminVaultData: legacyAdminVaultDto\n                    ? toPbVaultCreationData(legacyAdminVaultDto)\n                    : undefined,\n                authenticatorBlock: authenticatorBlock ? authenticatorBlock.blob : undefined,\n                authenticatorBlockSignature: authenticatorBlock ? authenticatorBlock.signature : undefined,\n                personalVaultData: toPbVaultCreationData(personalVaultDto),\n                personalVaultSuperuserEncryptedStorableVaultKey: personalVaultSuperuserLock === null || personalVaultSuperuserLock === void 0 ? void 0 : personalVaultSuperuserLock.encryptedStorableVaultKey,\n                personalVaultSuperuserEncryptedHighSecurityVaultKey: personalVaultSuperuserLock === null || personalVaultSuperuserLock === void 0 ? void 0 : personalVaultSuperuserLock.encryptedHighSecurityVaultKey,\n                personalVaultSuperuserEncryptedVaultMessagePrivateKey: (_a = personalVaultSuperuserLock === null || personalVaultSuperuserLock === void 0 ? void 0 : personalVaultSuperuserLock.encryptedVaultMessagePrivateKey) !== null && _a !== void 0 ? _a : undefined,\n                teamVaultData: teamVaultDto ? toVaultPairCreationData(teamVaultDto) : undefined,\n                teamVaultSuperuserEncryptedStorableVaultKey: teamVaultSuperuserLock === null || teamVaultSuperuserLock === void 0 ? void 0 : teamVaultSuperuserLock.encryptedStorableVaultKey,\n                teamVaultSuperuserEncryptedHighSecurityVaultKey: teamVaultSuperuserLock === null || teamVaultSuperuserLock === void 0 ? void 0 : teamVaultSuperuserLock.encryptedHighSecurityVaultKey,\n                teamVaultSuperuserEncryptedVaultMessagePrivateKey: (_b = teamVaultSuperuserLock === null || teamVaultSuperuserLock === void 0 ? void 0 : teamVaultSuperuserLock.encryptedVaultMessagePrivateKey) !== null && _b !== void 0 ? _b : undefined,\n                teamAssociatedVaultSuperuserEncryptedStorableVaultKey: teamAssociatedVaultSuperuserLock === null || teamAssociatedVaultSuperuserLock === void 0 ? void 0 : teamAssociatedVaultSuperuserLock.encryptedStorableVaultKey,\n                teamAssociatedVaultSuperuserEncryptedHighSecurityVaultKey: teamAssociatedVaultSuperuserLock === null || teamAssociatedVaultSuperuserLock === void 0 ? void 0 : teamAssociatedVaultSuperuserLock.encryptedHighSecurityVaultKey,\n                teamAssociatedVaultSuperuserEncryptedVaultMessagePrivateKey: (_c = teamAssociatedVaultSuperuserLock === null || teamAssociatedVaultSuperuserLock === void 0 ? void 0 : teamAssociatedVaultSuperuserLock.encryptedVaultMessagePrivateKey) !== null && _c !== void 0 ? _c : undefined,\n                contactJson: contactJson,\n                parentOrganizationInfo,\n            });\n            return {\n                organizationId: requireFieldNotEmpty(resp.organizationId),\n                profileId: requireFieldNotEmpty(resp.profileId),\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n            };\n        });\n    }\n    update(organizationId, { name, icon, restrictCreateTeam, restrictPersonalLogins, auditlogEnable, childOrganizationManagementEnable, monitoredDomains, passwordPolicy, unlockTimeLimit, clientSettings, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.update({\n                organizationId,\n                name,\n                icon: icon === null ? '' : icon,\n                restrictCreateTeam,\n                restrictPersonalLogins,\n                auditlogEnable,\n                childOrganizationManagementEnable,\n                monitoredDomains: monitoredDomains\n                    ? new UpdateOrganizationRequest_StringArray({ value: monitoredDomains })\n                    : undefined,\n                passwordPolicy: passwordPolicy === null ? '' : passwordPolicy,\n                unlockTimeLimit,\n                clientSettings,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    modifyMembers(orgId, createProfiles, updateProfiles, deleteProfileIds, legacyAdminVaultRegData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.modifyMembers({\n                legacyAdminVaultRegenerateData: legacyAdminVaultRegData\n                    ? toVaultRegenerateData(legacyAdminVaultRegData)\n                    : undefined,\n                organizationId: orgId,\n                createProfileOps: createProfiles.map((p) => {\n                    var _a;\n                    return ({\n                        userId: (_a = p.userId) !== null && _a !== void 0 ? _a : undefined,\n                        email: p.email,\n                        isAdmin: p.isAdmin,\n                        profile: p.profileDto,\n                        legacyAdminVaultLock: p.legacyAdminVaultLock\n                            ? toPbVaultProfileLock(p.legacyAdminVaultLock)\n                            : undefined,\n                        adminProfileLock: p.adminProfileLock,\n                        personalVaultData: toPbVaultCreationData(p.personalVaultDto),\n                        createStartCodeAndSendMail: p.createStartCodeAndSendMail,\n                    });\n                }),\n                updateProfileOps: updateProfiles.map((p) => ({\n                    profileId: p.profileId,\n                    isAdmin: p.isAdmin,\n                    adminProfileLock: p.adminProfileLock,\n                })),\n                deleteProfileIds: deleteProfileIds,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    createServiceProfile(orgId, profile, downstreamAdminProfileLock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createServiceProfile({\n                organizationId: orgId,\n                profile,\n                downstreamAdminProfileLock,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    acceptInvitation(organizationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.acceptInvite({ organizationId });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    redeemCoupon(organizationId, couponText) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.redeemCoupon({ organizationId, couponText });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    leave(organizationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.leave({ organizationId });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    getSubscriptionDetails(organizationId) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.getSubscriptionDetails({ organizationId });\n            const payments = resp.payments.map((p) => ({\n                eventTime: requireFieldNotEmpty(p.eventTime).toDate(),\n                receiptUrl: requireFieldNotEmpty(p.receiptUrl),\n                saleGrossCents: Number(p.saleGrossCents),\n                paymentTaxCents: Number(p.paymentTaxCents),\n                currency: requireFieldNotEmpty(p.currency),\n                orderId: requireFieldNotEmpty(p.orderId),\n            }));\n            return {\n                payments,\n                paddleSubscription: resp.paddleSubscription\n                    ? Object.assign(Object.assign({}, resp.paddleSubscription), { subscriptionPlan: knownEnumOrDefault(resp.paddleSubscription.plan, SubscriptionPlan), nextBillDate: (_a = resp.paddleSubscription.nextBillDate) === null || _a === void 0 ? void 0 : _a.toDate() }) : undefined,\n                status: toSubscriptionStatus(resp.status),\n            };\n        });\n    }\n    regenerateUser(organizationId, userId, p) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.regenerateOrganizationProfile({\n                organizationId,\n                userId: userId !== null && userId !== void 0 ? userId : undefined,\n                profile: toPbProfileRegenerateData(p),\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    regenerateAdmin(orgId, p, adminVault) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.regenerateAdminProfile({\n                organizationId: orgId,\n                profile: toPbProfileRegenerateData(p),\n                adminVaultData: adminVault ? toPbVaultCreationData(adminVault) : undefined,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    delete(organizationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.delete({ organizationId });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    renewProfileStartCode(organizationId, ...profileIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.renewProfileStartCode({ organizationId, profileIds });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    sendStartCodeEmail(organizationId, ...profileIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.sendStartCodeEmail({ organizationId, profileIds });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    revokeProfileStartCode(organizationId, ...profileIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.revokeProfileStartCode({ organizationId, profileIds });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    getDeletionInfo(organizationId, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.getDeletionInfo({ organizationId, token });\n            return {\n                organizationName: resp.organizationName,\n                requestedAt: requireFieldNotEmpty(resp.requestedAt).toDate(),\n                requestedByEmail: resp.requestedByEmail,\n                userCount: resp.userCount,\n            };\n        });\n    }\n    deleteWithToken(organizationId, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.deleteWithToken({ organizationId, token });\n        });\n    }\n    removeDeletionToken(organizationId, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.removeDeletionToken({ organizationId, token });\n        });\n    }\n    getBreachData(organizationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.getBreachData({ organizationId });\n            return Object.assign(Object.assign({}, resp), { lastCheckDate: requireFieldNotEmpty(resp.lastCheckDate).toDate(), domains: resp.domains.map((domain) => (Object.assign(Object.assign({}, domain), { breaches: domain.breaches.map((breach) => {\n                        const model = requireFieldNotEmpty(breach.model);\n                        return Object.assign(Object.assign({}, breach), { model: Object.assign(Object.assign({}, model), { breachDate: requireFieldNotEmpty(model === null || model === void 0 ? void 0 : model.breachDate).toDate(), addedDate: requireFieldNotEmpty(model === null || model === void 0 ? void 0 : model.addedDate).toDate() }) });\n                    }) }))) });\n        });\n    }\n}\nfunction toSubscriptionStatus(ps) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    if (ps == undefined) {\n        return undefined;\n    }\n    switch (ps === null || ps === void 0 ? void 0 : ps.status.case) {\n        case 'statusTrial':\n            const trial = requireFieldNotEmpty(ps.status.value);\n            return {\n                status: 'trial',\n                trialEndDate: requireFieldNotEmpty((_a = trial.trialEndDate) === null || _a === void 0 ? void 0 : _a.toDate()),\n            };\n        case 'statusPaddleActive':\n            const active = requireFieldNotEmpty(ps.status.value);\n            return {\n                status: 'paddleActive',\n                freeMembers: active.freeMembers,\n                nextBillDate: requireFieldNotEmpty((_b = active.nextBillDate) === null || _b === void 0 ? void 0 : _b.toDate()),\n                baseUrl: requireFieldNotEmpty(active.baseUrl),\n                email: requireFieldNotEmpty(active.email),\n            };\n        case 'statusPaddlePastDue':\n            const pastDue = requireFieldNotEmpty(ps.status.value);\n            return {\n                status: 'paddlePastDue',\n                freeMembers: pastDue.freeMembers,\n                nextBillDate: requireFieldNotEmpty((_c = pastDue.nextBillDate) === null || _c === void 0 ? void 0 : _c.toDate()),\n                baseUrl: requireFieldNotEmpty(pastDue.baseUrl),\n            };\n        case 'statusPaddlePausedVoluntary':\n            const pausedVoluntary = requireFieldNotEmpty(ps.status.value);\n            return {\n                status: 'paddlePausedVoluntary',\n                freeMembers: pausedVoluntary.freeMembers,\n                baseUrl: requireFieldNotEmpty(pausedVoluntary.baseUrl),\n                pausedAt: requireFieldNotEmpty((_d = pausedVoluntary.pausedAt) === null || _d === void 0 ? void 0 : _d.toDate()),\n                pausedFrom: requireFieldNotEmpty((_e = pausedVoluntary.pausedFrom) === null || _e === void 0 ? void 0 : _e.toDate()),\n            };\n        case 'statusPaddlePausedDelinquent':\n            const pausedDelinquent = requireFieldNotEmpty(ps.status.value);\n            return {\n                status: 'paddlePausedDelinquent',\n                freeMembers: pausedDelinquent.freeMembers,\n                baseUrl: requireFieldNotEmpty(pausedDelinquent.baseUrl),\n                pausedAt: requireFieldNotEmpty((_f = pausedDelinquent.pausedAt) === null || _f === void 0 ? void 0 : _f.toDate()),\n                pausedFrom: requireFieldNotEmpty((_g = pausedDelinquent.pausedFrom) === null || _g === void 0 ? void 0 : _g.toDate()),\n            };\n        case 'statusPaddleDeleted':\n            const deleted = requireFieldNotEmpty(ps.status.value);\n            return {\n                status: 'paddleDeleted',\n                freeMembers: deleted.freeMembers,\n                cancellationEffectiveDate: requireFieldNotEmpty((_h = deleted.cancellationEffectiveDate) === null || _h === void 0 ? void 0 : _h.toDate()),\n            };\n        case 'statusActiveFree':\n            const activeFree = requireFieldNotEmpty(ps.status.value);\n            return {\n                status: 'activeFree',\n                freeMembers: activeFree.freeMembers,\n            };\n        case 'statusCustom':\n            const custom = requireFieldNotEmpty(ps.status.value);\n            return {\n                status: 'custom',\n                left: custom.left,\n                right: custom.right,\n            };\n        case 'statusExample':\n            const example = requireFieldNotEmpty(ps.status.value);\n            return {\n                status: 'example',\n                left: example.left,\n                right: example.right,\n            };\n    }\n    return undefined;\n}\n//# sourceMappingURL=organizations.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto as toSyncDto } from './sync';\nimport { toPbProfileRegenerateData, } from './types';\nimport { toPbVaultCreationData } from './vaults';\nexport default class ProfileServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    regenerate(profiles) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.regenerate({\n                profiles: profiles.map(toPbProfileRegenerateData),\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    list(profileIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.list({ profileIds });\n            return resp.profiles.map((p) => {\n                const profile = Object.assign(Object.assign({}, p), { organizationId: p.organizationId || null, email: p.email || null });\n                return profile;\n            });\n        });\n    }\n    createPrivate(email, privateProfile, privateVault) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createPrivate({\n                email,\n                privateProfile,\n                privateVault: toPbVaultCreationData(privateVault),\n            });\n            return {\n                privateProfileId: requireFieldNotEmpty(resp.privateProfileId),\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n            };\n        });\n    }\n    deletePrivate(privateProfileId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.deletePrivate({ privateProfileId });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    requestEmailChange(profileId, email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.requestEmailChange({ profileId, email });\n            return Object.assign(Object.assign({}, resp), { syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)) });\n        });\n    }\n    cancelEmailChange(profileId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.cancelEmailChange({ profileId });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    verifyEmailAddress(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.espbClient.verifyEmailAddress({ token });\n            return {\n                email: requireFieldNotEmpty(response.email),\n            };\n        });\n    }\n    getProfileInfo(profileId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.getProfileInfo({ profileId });\n            return {\n                email: resp.email,\n                organizationId: resp.organizationId,\n                organizationName: resp.organizationName,\n                organizationIcon: resp.organizationIcon || undefined,\n            };\n        });\n    }\n    checkStartCode(email, startCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.checkStartCode({ email, startCode });\n        });\n    }\n    claimWithStartCode(profileId, startCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.claimWithStartCode({ profileId, startCode });\n            return {\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n                organizationId: resp.organizationId,\n            };\n        });\n    }\n}\n//# sourceMappingURL=profiles.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Timestamp } from '@bufbuild/protobuf';\nimport { requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nexport default class SessionServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    deleteSession(sessionId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.deleteSession({ sessionId });\n            const syncUpdate = resp.syncUpdate;\n            return syncUpdate ? toSyncDto(syncUpdate) : null;\n        });\n    }\n    createSessionUnlock(sessionId, authenticatorId, encryptedSecret, maxExpiresAt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.createSessionUnlock({\n                sessionId,\n                authenticatorId: authenticatorId,\n                encryptedSecret: encryptedSecret,\n                maxExpiresAt: Timestamp.fromDate(maxExpiresAt),\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    extendSessionUnlock(lastUserActivity) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.extendSessionUnlock({\n                lastUserActivity: Timestamp.fromDate(lastUserActivity),\n            });\n            const syncUpdate = resp.syncUpdate;\n            return syncUpdate ? toSyncDto(syncUpdate) : null;\n        });\n    }\n    deleteSessionUnlock(sessionId, onlyPendingRequest = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.deleteSessionUnlock({\n                sessionId,\n                onlyPendingRequest: onlyPendingRequest,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    requestSessionUnlock() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.requestSessionUnlock({});\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    sendSessionMessage(messages) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.sendSessionMessage({ messages });\n        });\n    }\n    update(sessionId, fieldsToUpdate, { clientSettings, enabledProfileIds, unlockTimeLimit, fcmDeviceToken, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.update({\n                sessionId,\n                fieldsToUpdate,\n                clientSettings,\n                enabledProfiles: enabledProfileIds ? { profileIds: enabledProfileIds } : undefined,\n                unlockTimeLimit,\n                fcmDeviceToken,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n}\n//# sourceMappingURL=sessions.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport default class ShareLinkServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    preview(shareLinkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.preview({ shareLinkId });\n            return {\n                encryptedPayload: resp.encryptedPayload,\n                organizationName: resp.organizationName || undefined,\n                senderEmail: resp.senderEmail,\n            };\n        });\n    }\n    show(shareLinkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.show({ shareLinkId });\n            return {\n                encryptedPayload: resp.encryptedPayload,\n                encryptedProtectedSecret: resp.encryptedProtectedSecret,\n                organizationName: resp.organizationName || undefined,\n                senderEmail: resp.senderEmail,\n            };\n        });\n    }\n}\n//# sourceMappingURL=shareLinks.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport default class SupportServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    sendMessage(subject, message, profileId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.sendMessage({ subject, message, profileId });\n        });\n    }\n    reportPage(url, problem, comment, screenshot, hasLogin, hasHideSecretsLogin) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.reportPage({\n                url: url !== null && url !== void 0 ? url : undefined,\n                problem,\n                comment,\n                screenshot: screenshot !== null && screenshot !== void 0 ? screenshot : undefined,\n                hasLogin: hasLogin,\n                hasHideSecretsLogin: hasHideSecretsLogin,\n            });\n        });\n    }\n}\n//# sourceMappingURL=support.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { knownEnumOrDefault, requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nimport { UserConfirmationResultType, UserConfirmationType, } from './types';\nexport default class UserConfirmationServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    create({ type, loginId = '', vaultId = '', profileId = '', organizationId = '', }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.create({\n                data: { type, loginId, vaultId, profileId, organizationId },\n            });\n            return {\n                id: requireFieldNotEmpty(resp.id),\n                syncUpdate: toSyncDto(requireFieldNotEmpty(resp.syncUpdate)),\n                webauthnOptionsJson: resp.webauthnOptionsJson || undefined,\n            };\n        });\n    }\n    get(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.get({ id });\n            const data = requireFieldNotEmpty(resp.data);\n            return {\n                fallbackString: resp.fallbackString,\n                requestingSessionId: resp.requestingSessionId,\n                data: {\n                    type: knownEnumOrDefault(data.type, UserConfirmationType),\n                    vaultId: data.vaultId || undefined,\n                    loginId: data.loginId || undefined,\n                    profileId: data.profileId || undefined,\n                    organizationId: data.organizationId || undefined,\n                },\n            };\n        });\n    }\n    sendResult(id, type, webauthnResponseJson) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.sendResult({ id, type, webauthnResponseJson });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    retrieveResult(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.retrieveResult({ id });\n            return {\n                resultType: knownEnumOrDefault(resp.resultType, UserConfirmationResultType),\n            };\n        });\n    }\n    cancel(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.cancel({ id });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n}\n//# sourceMappingURL=userConfirmations.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Timestamp } from '@bufbuild/protobuf';\nimport { requireFieldNotEmpty } from './grpcUtils';\nimport { toSyncDto } from './sync';\nexport default class WebauthnServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    unlockSessionInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.unlockSessionInit({});\n            return {\n                optionsJson: requireFieldNotEmpty(resp.optionsJson),\n                requestId: requireFieldNotEmpty(resp.requestId),\n            };\n        });\n    }\n    unlockSessionFinish(requestId, responseJson, maxExpiresAt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.unlockSessionFinish({\n                requestId,\n                responseJson,\n                maxExpiresAt: Timestamp.fromDate(maxExpiresAt),\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    registerCredentialInit(credentialType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.registerCredentialInit({ credentialType });\n            return {\n                optionsJson: requireFieldNotEmpty(resp.optionsJson),\n                requestId: requireFieldNotEmpty(resp.requestId),\n            };\n        });\n    }\n    RegisterCredentialForAccountCreationInit(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.registerCredentialForAccountCreationInit({ email });\n            return {\n                optionsJson: requireFieldNotEmpty(resp.optionsJson),\n                requestId: requireFieldNotEmpty(resp.requestId),\n            };\n        });\n    }\n    registerCredentialFinish(requestId, responseJson, prfSupportStatus) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.registerCredentialFinish({\n                requestId,\n                responseJson,\n                prfSupportStatus,\n            });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n    deleteCredentials(webauthnIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.deleteCredentials({ webauthnIds });\n            return toSyncDto(requireFieldNotEmpty(resp.syncUpdate));\n        });\n    }\n}\n//# sourceMappingURL=webauthn.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport AccountServiceClient from './accounts';\nimport AuditlogAdminClient from './auditlogAdminClient';\nimport AuditlogWriteClient from './auditlogWriteClient';\nimport AuthenticatorServiceClient from './authenticators';\nimport ChannelServiceClient from './channels';\nimport ChildOrganizationServiceClient from './childOrganizations';\nimport CredentialServiceClient from './credentials';\nimport { AccountService as EspbAccountService } from './espb/account_service_connect';\nimport { AuthenticatorService as EspbAuthenticatorService } from './espb/authenticator_service_connect';\nimport { ChannelService as EspbChannelService } from './espb/channel_service_connect';\nimport { ChildOrganizationService as EspbChildOrganizationService } from './espb/child_organization_service_connect';\nimport { CredentialService as EspbCredentialService } from './espb/credential_service_connect';\nimport { HealthService as EspbHealthService } from './espb/health_service_connect';\nimport { IntegrationsService as EspbIntegrationsService } from './espb/integrations_service_connect';\nimport { LFDOverridesService as EspbLFDOverridesService } from './espb/lfd_overrides_service_connect';\nimport { LoginInboxService as EspbLoginInboxService } from './espb/login_inbox_service_connect';\nimport { OrganizationService as EspbOrganizationService } from './espb/organization_service_connect';\nimport { ProfileService as EspbProfileService } from './espb/profile_service_connect';\nimport { SessionService as EspbSessionService } from './espb/session_service_connect';\nimport { ShareLinkService as EspbShareLinkService } from './espb/share_link_service_connect';\nimport { SupportService as EspbSupportService } from './espb/support_service_connect';\nimport { SyncService as EspbSyncService } from './espb/sync_service_connect';\nimport { UserConfirmationService as EspbUserConfirmationService } from './espb/user_confirmation_service_connect';\nimport { VaultService as EspbVaultService } from './espb/vault_service_connect';\nimport { WebauthnService as EspbWebauthnService } from './espb/webauthn_service_connect';\nimport EspbServiceClientFactory from './EspbServiceClientFactory';\nimport HealthServiceClient from './health';\nimport IntegrationsServiceClient from './integrations';\nimport LFDOverridesClient from './lfdOverrides';\nimport LFDOverridesAdminClient from './lfdOverridesAdminClient';\nimport LoginInboxServiceClient from './loginInbox';\nimport OrganizationServiceClient from './organizations';\nimport ProfileServiceClient from './profiles';\nimport SessionServiceClient from './sessions';\nimport ShareLinkServiceClient from './shareLinks';\nimport SupportServiceClient from './support';\nimport { SyncServiceClient } from './sync';\nimport UserConfirmationServiceClient from './userConfirmations';\nimport VaultServiceClient from './vaults';\nimport WebauthnServiceClient from './webauthn';\nexport default class BackendClient {\n    constructor(config) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.config = Object.assign({ auditlogBaseUri: config.backendBaseUri, syncSuperUsers: false }, config);\n        const authTokens = {\n            backend: (_a = this.config.loginData) === null || _a === void 0 ? void 0 : _a.token,\n        };\n        this.espbClientFactory = new EspbServiceClientFactory({\n            authTokens,\n            clientId: (_b = this.config.clientId) !== null && _b !== void 0 ? _b : null,\n            clientType: this.config.clientType,\n            clientVersion: (_c = this.config.clientVersion) !== null && _c !== void 0 ? _c : null,\n            baseUri: this.config.backendBaseUri,\n            clientOperationId: (_d = this.config.clientOperationId) !== null && _d !== void 0 ? _d : null,\n            clientOperationName: (_e = this.config.clientOperationName) !== null && _e !== void 0 ? _e : null,\n            syncVersion: (_f = this.config.syncVersion) !== null && _f !== void 0 ? _f : null,\n            syncSuperUsers: this.config.syncSuperUsers,\n            permissionUserId: (_g = this.config.permissionUserId) !== null && _g !== void 0 ? _g : null,\n        });\n        this.account = new AccountServiceClient(this.espbClientFactory.createServiceClient(EspbAccountService));\n        this.credential = new CredentialServiceClient(this.espbClientFactory.createServiceClient(EspbCredentialService));\n        this.vault = new VaultServiceClient(this.espbClientFactory.createServiceClient(EspbVaultService));\n        this.authenticator = new AuthenticatorServiceClient(this.espbClientFactory.createServiceClient(EspbAuthenticatorService));\n        this.channel = new ChannelServiceClient(this.espbClientFactory.createServiceClient(EspbChannelService));\n        this.sync = new SyncServiceClient(this.espbClientFactory.createServiceClient(EspbSyncService));\n        this.session = new SessionServiceClient(this.espbClientFactory.createServiceClient(EspbSessionService));\n        this.support = new SupportServiceClient(this.espbClientFactory.createServiceClient(EspbSupportService));\n        this.organization = new OrganizationServiceClient(this.espbClientFactory.createServiceClient(EspbOrganizationService));\n        this.profile = new ProfileServiceClient(this.espbClientFactory.createServiceClient(EspbProfileService));\n        this.loginInbox = new LoginInboxServiceClient(this.espbClientFactory.createServiceClient(EspbLoginInboxService));\n        this.integrations = new IntegrationsServiceClient(this.espbClientFactory.createServiceClient(EspbIntegrationsService));\n        this.webauthn = new WebauthnServiceClient(this.espbClientFactory.createServiceClient(EspbWebauthnService));\n        this.lfdOverrides = new LFDOverridesClient(this.espbClientFactory.createServiceClient(EspbLFDOverridesService));\n        this.health = new HealthServiceClient(this.espbClientFactory.createServiceClient(EspbHealthService));\n        this.shareLinks = new ShareLinkServiceClient(this.espbClientFactory.createServiceClient(EspbShareLinkService));\n        this.userConfirmations = new UserConfirmationServiceClient(this.espbClientFactory.createServiceClient(EspbUserConfirmationService));\n        this.childOrganization = new ChildOrganizationServiceClient(this.espbClientFactory.createServiceClient(EspbChildOrganizationService));\n    }\n    withLogin(loginData) {\n        return this.withConfig({ loginData });\n    }\n    withClientId(clientId) {\n        return this.withConfig({ clientId });\n    }\n    withSyncVersion(syncVersion) {\n        if (syncVersion === this.config.syncVersion) {\n            return this;\n        }\n        return this.withConfig({ syncVersion });\n    }\n    withPermissionUserId(permissionUserId) {\n        if (permissionUserId === this.config.permissionUserId) {\n            return this;\n        }\n        return this.withConfig({ permissionUserId });\n    }\n    withSyncSuperUsers(syncSuperUsers) {\n        if (syncSuperUsers === this.config.syncSuperUsers) {\n            return this;\n        }\n        return this.withConfig({ syncSuperUsers });\n    }\n    withClientOperation(clientOperationId, clientOperationName, syncVersion) {\n        return this.withConfig({ clientOperationId, clientOperationName, syncVersion });\n    }\n    withConfig(newConfig) {\n        return new BackendClient(Object.assign(Object.assign({}, this.config), newConfig));\n    }\n    getSessionId() {\n        return this.ensureLoginData().sessionId;\n    }\n    ensureLoginData() {\n        if (!this.config.loginData) {\n            throw new Error('Login Data is missing!');\n        }\n        return this.config.loginData;\n    }\n    setFcmDeviceToken(deviceToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.authenticator.setDeviceToken(deviceToken);\n        });\n    }\n    deleteSession(sessionId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.session.deleteSession(sessionId);\n        });\n    }\n    getAuditlogWriteClient(authToken) {\n        return new AuditlogWriteClient(this.config.auditlogBaseUri, authToken.token, this.config.clientType, this.config.clientId, this.config.clientVersion);\n    }\n    getAuditlogAdminClient(authToken) {\n        return new AuditlogAdminClient(this.config.auditlogBaseUri, authToken.token, this.config.clientType, this.config.clientId, this.config.clientVersion);\n    }\n    getLFDOverridesAdminClient(authToken) {\n        return new LFDOverridesAdminClient(this.config.backendBaseUri, authToken.token, this.config.clientType, this.config.clientId, this.config.clientVersion);\n    }\n}\n//# sourceMappingURL=backendClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Emittery from 'emittery';\nimport { trackError } from './promiseUtils';\nclass CancelToken {\n    constructor() {\n        this.isCancelled = false;\n        // eslint-disable-next-line @typescript-eslint/ban-types -- we actually want the empty object here, since we use it as a map\n        this.emitter = new Emittery.Typed();\n    }\n    static create() {\n        return new CancelToken();\n    }\n    cancel() {\n        this.performCancel().catch(trackError);\n    }\n    onCancel(cancelHandler) {\n        if (this.isCancelled) {\n            cancelHandler();\n        }\n        else {\n            this.emitter.on('cancel', cancelHandler);\n        }\n    }\n    offCancel(cancelHandler) {\n        this.emitter.off('cancel', cancelHandler);\n    }\n    get signal() {\n        if (!this.abortController) {\n            this.abortController = new AbortController();\n            if (this.isCancelled) {\n                this.abortController.abort();\n            }\n        }\n        return this.abortController.signal;\n    }\n    performCancel() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isCancelled) {\n                this.isCancelled = true;\n                yield this.emitter.emit('cancel');\n                this.emitter.clearListeners('cancel');\n                (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n            }\n        });\n    }\n}\nexport default CancelToken;\n//# sourceMappingURL=cancelToken.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file authenticator_reply.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\n/**\n * @generated from message domain.AuthenticatorReply\n */\nexport class AuthenticatorReply extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from oneof domain.AuthenticatorReply.reply_oneof\n         */\n        this.replyOneof = { case: undefined };\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AuthenticatorReply().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AuthenticatorReply().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AuthenticatorReply().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AuthenticatorReply, a, b);\n    }\n}\nAuthenticatorReply.runtime = proto3;\nAuthenticatorReply.typeName = \"domain.AuthenticatorReply\";\nAuthenticatorReply.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"encrypted_secret_reply\", kind: \"message\", T: EncryptedSecretAuthenticatorReply, oneof: \"reply_oneof\" },\n]);\n/**\n * @generated from message domain.EncryptedSecretAuthenticatorReply\n */\nexport class EncryptedSecretAuthenticatorReply extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes encrypted_secret = 1;\n         */\n        this.encryptedSecret = new Uint8Array(0);\n        /**\n         * @generated from field: bool registration = 2;\n         */\n        this.registration = false;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EncryptedSecretAuthenticatorReply().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EncryptedSecretAuthenticatorReply().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EncryptedSecretAuthenticatorReply().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EncryptedSecretAuthenticatorReply, a, b);\n    }\n}\nEncryptedSecretAuthenticatorReply.runtime = proto3;\nEncryptedSecretAuthenticatorReply.typeName = \"domain.EncryptedSecretAuthenticatorReply\";\nEncryptedSecretAuthenticatorReply.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"encrypted_secret\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 2, name: \"registration\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n//# sourceMappingURL=authenticator_reply_pb.js.map","// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file testing_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { Message, proto3, Timestamp } from \"@bufbuild/protobuf\";\nimport { AuthenticatorBlock, AuthenticatorData } from \"./authenticator_pb.js\";\nimport { LicenseType } from \"./license_type_pb.js\";\nimport { VaultMessageType } from \"./vault_message_type_pb.js\";\nimport { CredentialType } from \"./credential_type_pb.js\";\n/**\n * @generated from message domain.TestingDropLatestCommitRequest\n */\nexport class TestingDropLatestCommitRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingDropLatestCommitRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingDropLatestCommitRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingDropLatestCommitRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingDropLatestCommitRequest, a, b);\n    }\n}\nTestingDropLatestCommitRequest.runtime = proto3;\nTestingDropLatestCommitRequest.typeName = \"domain.TestingDropLatestCommitRequest\";\nTestingDropLatestCommitRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.TestingDropLatestCommitResponse\n */\nexport class TestingDropLatestCommitResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string latest_commit_id = 1;\n         */\n        this.latestCommitId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingDropLatestCommitResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingDropLatestCommitResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingDropLatestCommitResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingDropLatestCommitResponse, a, b);\n    }\n}\nTestingDropLatestCommitResponse.runtime = proto3;\nTestingDropLatestCommitResponse.typeName = \"domain.TestingDropLatestCommitResponse\";\nTestingDropLatestCommitResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"latest_commit_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.TestingListEmailsRequest\n */\nexport class TestingListEmailsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingListEmailsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingListEmailsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingListEmailsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingListEmailsRequest, a, b);\n    }\n}\nTestingListEmailsRequest.runtime = proto3;\nTestingListEmailsRequest.typeName = \"domain.TestingListEmailsRequest\";\nTestingListEmailsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.TestingListEmailsResponse\n */\nexport class TestingListEmailsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated domain.TestingListEmailsResponse.Email emails = 1;\n         */\n        this.emails = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingListEmailsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingListEmailsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingListEmailsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingListEmailsResponse, a, b);\n    }\n}\nTestingListEmailsResponse.runtime = proto3;\nTestingListEmailsResponse.typeName = \"domain.TestingListEmailsResponse\";\nTestingListEmailsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"emails\", kind: \"message\", T: TestingListEmailsResponse_Email, repeated: true },\n]);\n/**\n * @generated from message domain.TestingListEmailsResponse.Email\n */\nexport class TestingListEmailsResponse_Email extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string to = 1;\n         */\n        this.to = \"\";\n        /**\n         * @generated from field: string template = 2;\n         */\n        this.template = \"\";\n        /**\n         * @generated from field: map<string, string> data = 3;\n         */\n        this.data = {};\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingListEmailsResponse_Email().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingListEmailsResponse_Email().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingListEmailsResponse_Email().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingListEmailsResponse_Email, a, b);\n    }\n}\nTestingListEmailsResponse_Email.runtime = proto3;\nTestingListEmailsResponse_Email.typeName = \"domain.TestingListEmailsResponse.Email\";\nTestingListEmailsResponse_Email.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"to\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"template\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"data\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: { kind: \"scalar\", T: 9 /* ScalarType.STRING */ } },\n]);\n/**\n * @generated from message domain.TestingSetServerSideSettingsRequest\n */\nexport class TestingSetServerSideSettingsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string user_id = 1;\n         */\n        this.userId = \"\";\n        /**\n         * @generated from field: string server_side_settings = 2;\n         */\n        this.serverSideSettings = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingSetServerSideSettingsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingSetServerSideSettingsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingSetServerSideSettingsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingSetServerSideSettingsRequest, a, b);\n    }\n}\nTestingSetServerSideSettingsRequest.runtime = proto3;\nTestingSetServerSideSettingsRequest.typeName = \"domain.TestingSetServerSideSettingsRequest\";\nTestingSetServerSideSettingsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"server_side_settings\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.TestingSetServerSideSettingsResponse\n */\nexport class TestingSetServerSideSettingsResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingSetServerSideSettingsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingSetServerSideSettingsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingSetServerSideSettingsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingSetServerSideSettingsResponse, a, b);\n    }\n}\nTestingSetServerSideSettingsResponse.runtime = proto3;\nTestingSetServerSideSettingsResponse.typeName = \"domain.TestingSetServerSideSettingsResponse\";\nTestingSetServerSideSettingsResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingDeleteUserRequest\n */\nexport class TestingDeleteUserRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string user_id = 1;\n         */\n        this.userId = \"\";\n        /**\n         * @generated from field: string email = 2;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingDeleteUserRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingDeleteUserRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingDeleteUserRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingDeleteUserRequest, a, b);\n    }\n}\nTestingDeleteUserRequest.runtime = proto3;\nTestingDeleteUserRequest.typeName = \"domain.TestingDeleteUserRequest\";\nTestingDeleteUserRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.TestingDeleteUserResponse\n */\nexport class TestingDeleteUserResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingDeleteUserResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingDeleteUserResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingDeleteUserResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingDeleteUserResponse, a, b);\n    }\n}\nTestingDeleteUserResponse.runtime = proto3;\nTestingDeleteUserResponse.typeName = \"domain.TestingDeleteUserResponse\";\nTestingDeleteUserResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingAddAuthenticatorRequest\n */\nexport class TestingAddAuthenticatorRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string user_id = 1;\n         */\n        this.userId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingAddAuthenticatorRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingAddAuthenticatorRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingAddAuthenticatorRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingAddAuthenticatorRequest, a, b);\n    }\n}\nTestingAddAuthenticatorRequest.runtime = proto3;\nTestingAddAuthenticatorRequest.typeName = \"domain.TestingAddAuthenticatorRequest\";\nTestingAddAuthenticatorRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"authenticator\", kind: \"message\", T: AuthenticatorData },\n    { no: 3, name: \"block\", kind: \"message\", T: AuthenticatorBlock },\n]);\n/**\n * @generated from message domain.TestingAddAuthenticatorResponse\n */\nexport class TestingAddAuthenticatorResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string authenticator_id = 1;\n         */\n        this.authenticatorId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingAddAuthenticatorResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingAddAuthenticatorResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingAddAuthenticatorResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingAddAuthenticatorResponse, a, b);\n    }\n}\nTestingAddAuthenticatorResponse.runtime = proto3;\nTestingAddAuthenticatorResponse.typeName = \"domain.TestingAddAuthenticatorResponse\";\nTestingAddAuthenticatorResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.TestingDeleteAuthenticatorRequest\n */\nexport class TestingDeleteAuthenticatorRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string authenticator_id = 1;\n         */\n        this.authenticatorId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingDeleteAuthenticatorRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingDeleteAuthenticatorRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingDeleteAuthenticatorRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingDeleteAuthenticatorRequest, a, b);\n    }\n}\nTestingDeleteAuthenticatorRequest.runtime = proto3;\nTestingDeleteAuthenticatorRequest.typeName = \"domain.TestingDeleteAuthenticatorRequest\";\nTestingDeleteAuthenticatorRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.TestingDeleteAuthenticatorResponse\n */\nexport class TestingDeleteAuthenticatorResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingDeleteAuthenticatorResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingDeleteAuthenticatorResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingDeleteAuthenticatorResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingDeleteAuthenticatorResponse, a, b);\n    }\n}\nTestingDeleteAuthenticatorResponse.runtime = proto3;\nTestingDeleteAuthenticatorResponse.typeName = \"domain.TestingDeleteAuthenticatorResponse\";\nTestingDeleteAuthenticatorResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingEditAuthenticatorRequest\n */\nexport class TestingEditAuthenticatorRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string authenticator_id = 1;\n         */\n        this.authenticatorId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingEditAuthenticatorRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingEditAuthenticatorRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingEditAuthenticatorRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingEditAuthenticatorRequest, a, b);\n    }\n}\nTestingEditAuthenticatorRequest.runtime = proto3;\nTestingEditAuthenticatorRequest.typeName = \"domain.TestingEditAuthenticatorRequest\";\nTestingEditAuthenticatorRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"authenticator_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"data\", kind: \"message\", T: AuthenticatorData },\n]);\n/**\n * empty\n *\n * @generated from message domain.TestingEditAuthenticatorResponse\n */\nexport class TestingEditAuthenticatorResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingEditAuthenticatorResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingEditAuthenticatorResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingEditAuthenticatorResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingEditAuthenticatorResponse, a, b);\n    }\n}\nTestingEditAuthenticatorResponse.runtime = proto3;\nTestingEditAuthenticatorResponse.typeName = \"domain.TestingEditAuthenticatorResponse\";\nTestingEditAuthenticatorResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingDeleteAuthenticatorBlockRequest\n */\nexport class TestingDeleteAuthenticatorBlockRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bytes hash = 1;\n         */\n        this.hash = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingDeleteAuthenticatorBlockRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingDeleteAuthenticatorBlockRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingDeleteAuthenticatorBlockRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingDeleteAuthenticatorBlockRequest, a, b);\n    }\n}\nTestingDeleteAuthenticatorBlockRequest.runtime = proto3;\nTestingDeleteAuthenticatorBlockRequest.typeName = \"domain.TestingDeleteAuthenticatorBlockRequest\";\nTestingDeleteAuthenticatorBlockRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"hash\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.TestingDeleteAuthenticatorBlockResponse\n */\nexport class TestingDeleteAuthenticatorBlockResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingDeleteAuthenticatorBlockResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingDeleteAuthenticatorBlockResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingDeleteAuthenticatorBlockResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingDeleteAuthenticatorBlockResponse, a, b);\n    }\n}\nTestingDeleteAuthenticatorBlockResponse.runtime = proto3;\nTestingDeleteAuthenticatorBlockResponse.typeName = \"domain.TestingDeleteAuthenticatorBlockResponse\";\nTestingDeleteAuthenticatorBlockResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingDeleteVaultRequest\n */\nexport class TestingDeleteVaultRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingDeleteVaultRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingDeleteVaultRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingDeleteVaultRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingDeleteVaultRequest, a, b);\n    }\n}\nTestingDeleteVaultRequest.runtime = proto3;\nTestingDeleteVaultRequest.typeName = \"domain.TestingDeleteVaultRequest\";\nTestingDeleteVaultRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.TestingDeleteVaultResponse\n */\nexport class TestingDeleteVaultResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingDeleteVaultResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingDeleteVaultResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingDeleteVaultResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingDeleteVaultResponse, a, b);\n    }\n}\nTestingDeleteVaultResponse.runtime = proto3;\nTestingDeleteVaultResponse.typeName = \"domain.TestingDeleteVaultResponse\";\nTestingDeleteVaultResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingInjectPaddleWebhookRequest\n */\nexport class TestingInjectPaddleWebhookRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string data_json = 1;\n         */\n        this.dataJson = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingInjectPaddleWebhookRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingInjectPaddleWebhookRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingInjectPaddleWebhookRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingInjectPaddleWebhookRequest, a, b);\n    }\n}\nTestingInjectPaddleWebhookRequest.runtime = proto3;\nTestingInjectPaddleWebhookRequest.typeName = \"domain.TestingInjectPaddleWebhookRequest\";\nTestingInjectPaddleWebhookRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"data_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.TestingInjectPaddleWebhookResponse\n */\nexport class TestingInjectPaddleWebhookResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingInjectPaddleWebhookResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingInjectPaddleWebhookResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingInjectPaddleWebhookResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingInjectPaddleWebhookResponse, a, b);\n    }\n}\nTestingInjectPaddleWebhookResponse.runtime = proto3;\nTestingInjectPaddleWebhookResponse.typeName = \"domain.TestingInjectPaddleWebhookResponse\";\nTestingInjectPaddleWebhookResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingUpdatePaddleRequest\n */\nexport class TestingUpdatePaddleRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingUpdatePaddleRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingUpdatePaddleRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingUpdatePaddleRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingUpdatePaddleRequest, a, b);\n    }\n}\nTestingUpdatePaddleRequest.runtime = proto3;\nTestingUpdatePaddleRequest.typeName = \"domain.TestingUpdatePaddleRequest\";\nTestingUpdatePaddleRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.TestingUpdatePaddleResponse\n */\nexport class TestingUpdatePaddleResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingUpdatePaddleResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingUpdatePaddleResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingUpdatePaddleResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingUpdatePaddleResponse, a, b);\n    }\n}\nTestingUpdatePaddleResponse.runtime = proto3;\nTestingUpdatePaddleResponse.typeName = \"domain.TestingUpdatePaddleResponse\";\nTestingUpdatePaddleResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingCreateCouponRequest\n */\nexport class TestingCreateCouponRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string coupon_text = 1;\n         */\n        this.couponText = \"\";\n        /**\n         * @generated from field: int32 free_members = 2;\n         */\n        this.freeMembers = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingCreateCouponRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingCreateCouponRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingCreateCouponRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingCreateCouponRequest, a, b);\n    }\n}\nTestingCreateCouponRequest.runtime = proto3;\nTestingCreateCouponRequest.typeName = \"domain.TestingCreateCouponRequest\";\nTestingCreateCouponRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"coupon_text\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"free_members\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n/**\n * empty\n *\n * @generated from message domain.TestingCreateCouponResponse\n */\nexport class TestingCreateCouponResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingCreateCouponResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingCreateCouponResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingCreateCouponResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingCreateCouponResponse, a, b);\n    }\n}\nTestingCreateCouponResponse.runtime = proto3;\nTestingCreateCouponResponse.typeName = \"domain.TestingCreateCouponResponse\";\nTestingCreateCouponResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingUpdateOrganizationRequest\n */\nexport class TestingUpdateOrganizationRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string organization_id = 1;\n         */\n        this.organizationId = \"\";\n        /**\n         * @generated from field: domain.LicenseType license_type = 3;\n         */\n        this.licenseType = LicenseType.UNKNOWN;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingUpdateOrganizationRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingUpdateOrganizationRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingUpdateOrganizationRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingUpdateOrganizationRequest, a, b);\n    }\n}\nTestingUpdateOrganizationRequest.runtime = proto3;\nTestingUpdateOrganizationRequest.typeName = \"domain.TestingUpdateOrganizationRequest\";\nTestingUpdateOrganizationRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"organization_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"created_at\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"license_type\", kind: \"enum\", T: proto3.getEnumType(LicenseType) },\n]);\n/**\n * empty\n *\n * @generated from message domain.TestingUpdateOrganizationResponse\n */\nexport class TestingUpdateOrganizationResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingUpdateOrganizationResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingUpdateOrganizationResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingUpdateOrganizationResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingUpdateOrganizationResponse, a, b);\n    }\n}\nTestingUpdateOrganizationResponse.runtime = proto3;\nTestingUpdateOrganizationResponse.typeName = \"domain.TestingUpdateOrganizationResponse\";\nTestingUpdateOrganizationResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.CreateVaultMessageRequest\n */\nexport class CreateVaultMessageRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        /**\n         * @generated from field: domain.VaultMessageType type = 2;\n         */\n        this.type = VaultMessageType.UNKNOWN;\n        /**\n         * @generated from field: bytes data = 3;\n         */\n        this.data = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateVaultMessageRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateVaultMessageRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateVaultMessageRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateVaultMessageRequest, a, b);\n    }\n}\nCreateVaultMessageRequest.runtime = proto3;\nCreateVaultMessageRequest.typeName = \"domain.CreateVaultMessageRequest\";\nCreateVaultMessageRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto3.getEnumType(VaultMessageType) },\n    { no: 3, name: \"data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n/**\n * @generated from message domain.CreateVaultMessageResponse\n */\nexport class CreateVaultMessageResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string message_id = 1;\n         */\n        this.messageId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CreateVaultMessageResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CreateVaultMessageResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CreateVaultMessageResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CreateVaultMessageResponse, a, b);\n    }\n}\nCreateVaultMessageResponse.runtime = proto3;\nCreateVaultMessageResponse.typeName = \"domain.CreateVaultMessageResponse\";\nCreateVaultMessageResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"message_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.TestingWebauthnCreateCredentialRequest\n */\nexport class TestingWebauthnCreateCredentialRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string user_id = 1;\n         */\n        this.userId = \"\";\n        /**\n         * @generated from field: domain.CredentialType credential_type = 2;\n         */\n        this.credentialType = CredentialType.UNKNOWN;\n        /**\n         * @generated from field: string credential_json = 3;\n         */\n        this.credentialJson = \"\";\n        /**\n         * @generated from field: string session_id = 4;\n         */\n        this.sessionId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingWebauthnCreateCredentialRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingWebauthnCreateCredentialRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingWebauthnCreateCredentialRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingWebauthnCreateCredentialRequest, a, b);\n    }\n}\nTestingWebauthnCreateCredentialRequest.runtime = proto3;\nTestingWebauthnCreateCredentialRequest.typeName = \"domain.TestingWebauthnCreateCredentialRequest\";\nTestingWebauthnCreateCredentialRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"credential_type\", kind: \"enum\", T: proto3.getEnumType(CredentialType) },\n    { no: 3, name: \"credential_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"session_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.TestingWebauthnCreateCredentialResponse\n */\nexport class TestingWebauthnCreateCredentialResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string webauthn_id = 1;\n         */\n        this.webauthnId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingWebauthnCreateCredentialResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingWebauthnCreateCredentialResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingWebauthnCreateCredentialResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingWebauthnCreateCredentialResponse, a, b);\n    }\n}\nTestingWebauthnCreateCredentialResponse.runtime = proto3;\nTestingWebauthnCreateCredentialResponse.typeName = \"domain.TestingWebauthnCreateCredentialResponse\";\nTestingWebauthnCreateCredentialResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"webauthn_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.TestingManipulateVaultRequest\n */\nexport class TestingManipulateVaultRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string vault_id = 1;\n         */\n        this.vaultId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingManipulateVaultRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingManipulateVaultRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingManipulateVaultRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingManipulateVaultRequest, a, b);\n    }\n}\nTestingManipulateVaultRequest.runtime = proto3;\nTestingManipulateVaultRequest.typeName = \"domain.TestingManipulateVaultRequest\";\nTestingManipulateVaultRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"vault_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"dirty\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 3, name: \"message_public_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n]);\n/**\n * @generated from message domain.TestingManipulateVaultResponse\n */\nexport class TestingManipulateVaultResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingManipulateVaultResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingManipulateVaultResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingManipulateVaultResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingManipulateVaultResponse, a, b);\n    }\n}\nTestingManipulateVaultResponse.runtime = proto3;\nTestingManipulateVaultResponse.typeName = \"domain.TestingManipulateVaultResponse\";\nTestingManipulateVaultResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingCancelUserStreamingRequest\n */\nexport class TestingCancelUserStreamingRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string user_id = 1;\n         */\n        this.userId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingCancelUserStreamingRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingCancelUserStreamingRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingCancelUserStreamingRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingCancelUserStreamingRequest, a, b);\n    }\n}\nTestingCancelUserStreamingRequest.runtime = proto3;\nTestingCancelUserStreamingRequest.typeName = \"domain.TestingCancelUserStreamingRequest\";\nTestingCancelUserStreamingRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"user_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.TestingCancelUserStreamingResponse\n */\nexport class TestingCancelUserStreamingResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingCancelUserStreamingResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingCancelUserStreamingResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingCancelUserStreamingResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingCancelUserStreamingResponse, a, b);\n    }\n}\nTestingCancelUserStreamingResponse.runtime = proto3;\nTestingCancelUserStreamingResponse.typeName = \"domain.TestingCancelUserStreamingResponse\";\nTestingCancelUserStreamingResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message domain.TestingGetEmailStateRequest\n */\nexport class TestingGetEmailStateRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string email = 1;\n         */\n        this.email = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingGetEmailStateRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingGetEmailStateRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingGetEmailStateRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingGetEmailStateRequest, a, b);\n    }\n}\nTestingGetEmailStateRequest.runtime = proto3;\nTestingGetEmailStateRequest.typeName = \"domain.TestingGetEmailStateRequest\";\nTestingGetEmailStateRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"email\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message domain.TestingGetEmailStateResponse\n */\nexport class TestingGetEmailStateResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bool private_profile_exists = 1;\n         */\n        this.privateProfileExists = false;\n        /**\n         * @generated from field: int32 free_org_profile_count = 2;\n         */\n        this.freeOrgProfileCount = 0;\n        /**\n         * @generated from field: int32 connected_org_profile_count = 3;\n         */\n        this.connectedOrgProfileCount = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TestingGetEmailStateResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TestingGetEmailStateResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TestingGetEmailStateResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TestingGetEmailStateResponse, a, b);\n    }\n}\nTestingGetEmailStateResponse.runtime = proto3;\nTestingGetEmailStateResponse.typeName = \"domain.TestingGetEmailStateResponse\";\nTestingGetEmailStateResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"private_profile_exists\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"free_org_profile_count\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"connected_org_profile_count\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n//# sourceMappingURL=testing_service_pb.js.map","// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file testing_service.proto (package domain, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\nimport { CreateVaultMessageRequest, CreateVaultMessageResponse, TestingAddAuthenticatorRequest, TestingAddAuthenticatorResponse, TestingCancelUserStreamingRequest, TestingCancelUserStreamingResponse, TestingCreateCouponRequest, TestingCreateCouponResponse, TestingDeleteAuthenticatorBlockRequest, TestingDeleteAuthenticatorBlockResponse, TestingDeleteAuthenticatorRequest, TestingDeleteAuthenticatorResponse, TestingDeleteUserRequest, TestingDeleteUserResponse, TestingDeleteVaultRequest, TestingDeleteVaultResponse, TestingDropLatestCommitRequest, TestingDropLatestCommitResponse, TestingEditAuthenticatorRequest, TestingEditAuthenticatorResponse, TestingGetEmailStateRequest, TestingGetEmailStateResponse, TestingInjectPaddleWebhookRequest, TestingInjectPaddleWebhookResponse, TestingListEmailsRequest, TestingListEmailsResponse, TestingManipulateVaultRequest, TestingManipulateVaultResponse, TestingSetServerSideSettingsRequest, TestingSetServerSideSettingsResponse, TestingUpdateOrganizationRequest, TestingUpdateOrganizationResponse, TestingUpdatePaddleRequest, TestingUpdatePaddleResponse, TestingWebauthnCreateCredentialRequest, TestingWebauthnCreateCredentialResponse } from \"./testing_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * NOTE: prefix all rpcs and messages with \"Testing\" to avoid collisions with proper messages\n *\n * @generated from service domain.TestingService\n */\nexport const TestingService = {\n    typeName: \"domain.TestingService\",\n    methods: {\n        /**\n         * errors:\n         * - VaultNotFound (50400): vault not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.TestingService.TestingDropLatestCommit\n         */\n        testingDropLatestCommit: {\n            name: \"TestingDropLatestCommit\",\n            I: TestingDropLatestCommitRequest,\n            O: TestingDropLatestCommitResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * no errors\n         *\n         * @generated from rpc domain.TestingService.TestingListEmails\n         */\n        testingListEmails: {\n            name: \"TestingListEmails\",\n            I: TestingListEmailsRequest,\n            O: TestingListEmailsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.TestingService.TestingSetServerSideSettings\n         */\n        testingSetServerSideSettings: {\n            name: \"TestingSetServerSideSettings\",\n            I: TestingSetServerSideSettingsRequest,\n            O: TestingSetServerSideSettingsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - UserNotFound (20400): user not found\n         * - Internal (10500): internal server error\n         * NOTE: this endpoint is mapped to the corresponding admin interface endpoint\n         *\n         * @generated from rpc domain.TestingService.TestingDeleteUser\n         */\n        testingDeleteUser: {\n            name: \"TestingDeleteUser\",\n            I: TestingDeleteUserRequest,\n            O: TestingDeleteUserResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - UserNotFound (20400): user not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.TestingService.TestingAddAuthenticator\n         */\n        testingAddAuthenticator: {\n            name: \"TestingAddAuthenticator\",\n            I: TestingAddAuthenticatorRequest,\n            O: TestingAddAuthenticatorResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - AuthenticatorNotFound (40400): authenticator not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.TestingService.TestingDeleteAuthenticator\n         */\n        testingDeleteAuthenticator: {\n            name: \"TestingDeleteAuthenticator\",\n            I: TestingDeleteAuthenticatorRequest,\n            O: TestingDeleteAuthenticatorResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - AuthenticatorNotFound (40400): authenticator not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.TestingService.TestingEditAuthenticator\n         */\n        testingEditAuthenticator: {\n            name: \"TestingEditAuthenticator\",\n            I: TestingEditAuthenticatorRequest,\n            O: TestingEditAuthenticatorResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - AuthenticatorBlockNotFound (40440): the authenticator block with given hash was not found\n         * - Internal (10500): internal server error\n         *\n         * @generated from rpc domain.TestingService.TestingDeleteAuthenticatorBlock\n         */\n        testingDeleteAuthenticatorBlock: {\n            name: \"TestingDeleteAuthenticatorBlock\",\n            I: TestingDeleteAuthenticatorBlockRequest,\n            O: TestingDeleteAuthenticatorBlockResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - VaultNotFound (50400)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.TestingService.TestingDeleteVault\n         */\n        testingDeleteVault: {\n            name: \"TestingDeleteVault\",\n            I: TestingDeleteVaultRequest,\n            O: TestingDeleteVaultResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - Internal (10500)\n         * - OrganizationNotFound (60400)\n         *\n         * @generated from rpc domain.TestingService.TestingInjectPaddleWebhook\n         */\n        testingInjectPaddleWebhook: {\n            name: \"TestingInjectPaddleWebhook\",\n            I: TestingInjectPaddleWebhookRequest,\n            O: TestingInjectPaddleWebhookResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.TestingService.TestingUpdatePaddle\n         */\n        testingUpdatePaddle: {\n            name: \"TestingUpdatePaddle\",\n            I: TestingUpdatePaddleRequest,\n            O: TestingUpdatePaddleResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.TestingService.TestingCreateCoupon\n         */\n        testingCreateCoupon: {\n            name: \"TestingCreateCoupon\",\n            I: TestingCreateCouponRequest,\n            O: TestingCreateCouponResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - Internal (10500)\n         * - OrganizationNotFound (60400)\n         *\n         * @generated from rpc domain.TestingService.TestingUpdateOrganization\n         */\n        testingUpdateOrganization: {\n            name: \"TestingUpdateOrganization\",\n            I: TestingUpdateOrganizationRequest,\n            O: TestingUpdateOrganizationResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - VaultNotFound (50400)\n         * - InvalidVaultMessageType (50463): The message provided has invalid type\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.TestingService.CreateVaultMessage\n         */\n        createVaultMessage: {\n            name: \"CreateVaultMessage\",\n            I: CreateVaultMessageRequest,\n            O: CreateVaultMessageResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * errors:\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.TestingService.TestingWebauthnCreateCredential\n         */\n        testingWebauthnCreateCredential: {\n            name: \"TestingWebauthnCreateCredential\",\n            I: TestingWebauthnCreateCredentialRequest,\n            O: TestingWebauthnCreateCredentialResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * this endpoint can be used to manipulate vaults in a couple of ways\n         * errors:\n         * - VaultNotFound (50400)\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.TestingService.TestingManipulateVault\n         */\n        testingManipulateVault: {\n            name: \"TestingManipulateVault\",\n            I: TestingManipulateVaultRequest,\n            O: TestingManipulateVaultResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * this endpoint cancels all active streaming sync\n         * no errors\n         *\n         * @generated from rpc domain.TestingService.TestingCancelUserStreaming\n         */\n        testingCancelUserStreaming: {\n            name: \"TestingCancelUserStreaming\",\n            I: TestingCancelUserStreamingRequest,\n            O: TestingCancelUserStreamingResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * this endpoint give information of how and where an email address is used\n         * - Internal (10500)\n         *\n         * @generated from rpc domain.TestingService.TestingGetEmailState\n         */\n        testingGetEmailState: {\n            name: \"TestingGetEmailState\",\n            I: TestingGetEmailStateRequest,\n            O: TestingGetEmailStateResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n//# sourceMappingURL=testing_service_connect.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Timestamp } from '@bufbuild/protobuf';\nimport { LicenseType } from './espb/license_type_pb';\nimport { requireFieldNotEmpty } from './grpcUtils';\nexport default class TestingServiceClient {\n    constructor(espbClient) {\n        this.espbClient = espbClient;\n    }\n    dropLatestCommit(vaultId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.testingDropLatestCommit({ vaultId });\n            return requireFieldNotEmpty(resp.latestCommitId);\n        });\n    }\n    listEmails(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.testingListEmails({ email });\n            return resp.emails;\n        });\n    }\n    setServerSideSettings(userId, settingsJson) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingSetServerSideSettings({\n                userId,\n                serverSideSettings: settingsJson,\n            });\n        });\n    }\n    deleteUser(userId, email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingDeleteUser({ userId, email });\n        });\n    }\n    addAuthenticator(userId, authenticator, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resp = yield this.espbClient.testingAddAuthenticator({\n                userId,\n                authenticator,\n                block,\n            });\n            return requireFieldNotEmpty(resp.authenticatorId);\n        });\n    }\n    deleteAuthenticator(authenticatorId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingDeleteAuthenticator({ authenticatorId });\n        });\n    }\n    editAuthenticator(authenticatorId, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingEditAuthenticator({ authenticatorId, data });\n        });\n    }\n    deleteAuthenticatorBlock(hash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingDeleteAuthenticatorBlock({ hash });\n        });\n    }\n    deleteVault(vaultId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingDeleteVault({ vaultId });\n        });\n    }\n    manipulateVault(vaultId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingManipulateVault(Object.assign({ vaultId }, options));\n        });\n    }\n    injectPaddleWebhook(json) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dataJson = JSON.stringify(json);\n            yield this.espbClient.testingInjectPaddleWebhook({ dataJson });\n        });\n    }\n    createCoupon(couponText, freeMembers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingCreateCoupon({ couponText, freeMembers });\n        });\n    }\n    updateOrganization(organizationId, { createdAt, licenseType }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingUpdateOrganization({\n                organizationId,\n                createdAt: createdAt ? Timestamp.fromDate(createdAt) : undefined,\n                licenseType: licenseType !== null && licenseType !== void 0 ? licenseType : LicenseType.UNKNOWN,\n            });\n        });\n    }\n    createVaultMessage(vaultId, type, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.createVaultMessage({ vaultId, type, data });\n        });\n    }\n    webauthnCreateCredential(userId, credentialType, credentialJson, sessionId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingWebauthnCreateCredential({\n                userId,\n                sessionId: sessionId !== null && sessionId !== void 0 ? sessionId : undefined,\n                credentialJson,\n                credentialType,\n            });\n        });\n    }\n    cancelUserStreaming(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.espbClient.testingCancelUserStreaming({ userId });\n        });\n    }\n    getEmailState(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.espbClient.testingGetEmailState({ email });\n        });\n    }\n}\n//# sourceMappingURL=testing.js.map","export type WebExtErrorType = keyof typeof ERRORS;\n\nexport function isWebExtError(obj: unknown, ...errorTypes: WebExtErrorType[]) {\n  const message = getMessage(obj);\n  if (message === undefined) {\n    return false;\n  }\n  return errorTypes.some((errorType) => {\n    const matcher = ERRORS[errorType];\n    return typeof matcher === 'string' ? matcher === message : matcher.test(message);\n  });\n}\n\nfunction hasMessageProperty(obj: unknown): obj is { message: string } {\n  return (\n    typeof obj === 'object' && obj !== null && 'message' in obj && typeof obj.message === 'string'\n  );\n}\n\n// Most browsers use an object with a `message` property as an error, but Orion returns a plain\n// string. We handle both cases here\nfunction getMessage(obj: unknown) {\n  if (typeof obj === 'string') {\n    return obj;\n  }\n  if (hasMessageProperty(obj)) {\n    return obj.message;\n  }\n  return undefined;\n}\n\n/**\n * Web extension errors are stringly typed and can also differ between browsers. We keep this object\n * of error messages we're interested in for easier matching.\n */\nconst ERRORS = {\n  // Happens in content scripts on sending messages, after the extension has been unloaded (e.g.\n  // during update or uninstall).\n  CONTEXT_INVALIDATED: 'Extension context invalidated.',\n  TAB_DRAG_IN_PROGRESS: 'Tabs cannot be edited right now (user may be dragging a tab).',\n  COULD_NOT_ESTABLISH_CONNECTION: 'Could not establish connection. Receiving end does not exist.',\n  MISSING_HOST_PERMISSION_FOR_TAB: 'Missing host permission for the tab',\n  TAB_CLOSED: 'The tab was closed.',\n  NO_TAB_WITH_ID: /^No tab with id: \\d+\\.$/, // Chrome\n  INVALID_TAB_ID: /^Invalid tab ID: \\d+$/, // Firefox\n  ACTIVE_TAB_PERMISSION_NOT_IN_EFFECT:\n    \"The 'activeTab' permission is not in effect because this extension has not been in invoked.\",\n  CAPTURE_TAB_IMAGE_READBACK_FAILED: 'Failed to capture tab: image readback failed',\n  CANNOT_ACCESS_CONTENTS_OF_URL:\n    'Cannot access contents of url \"\". Extension manifest must request permission to access this host.',\n  ALL_URLS_OR_ACTIVE_TAB_PERMISSION_REQUIRED:\n    \"Either the '<all_urls>' or 'activeTab' permission is required.\",\n  UNEXPECTED_ERROR: 'An unexpected error occurred',\n  ERROR_CAPTURING_VISIBLE_TAB: 'Error capturing visible tab.',\n  INVALID_VALUE_FOR_BOUNDS:\n    'Invalid value for bounds. Bounds must be at least 50% within visible screen space.',\n  CLOSED_BEFORE_RESPONSE_RECEIVED:\n    'A listener indicated an asynchronous response by returning true, but the message channel closed before a response was received',\n  PERMISSION_ERROR:\n    \"Invalid call to tabs.captureVisibleTab(). Either the 'activeTab' permission or granted host permissions for the current website are required.\",\n} as const;\n","import browser from 'webextension-polyfill';\n\nimport {\n  Achievement,\n  LoginId,\n  OrganizationId,\n  trackError,\n  UserId,\n  VaultId,\n} from 'backend-client-web';\nimport {\n  AuditlogEvent,\n  CustomField,\n  EnqueuedAutosnatchId,\n  OverrideLibrary,\n  PasswordGeneratorSettings,\n  ProtectedValue,\n  TotpParameters,\n  Unprotect,\n  UnprotectedValue,\n  UserClientSettings,\n  UUID,\n  WebpageOverride,\n} from 'client-core';\nimport { UnlockDeviceType } from 'client-web-sdk/headless';\nimport { TotpAlgorithm } from 'vault-crypto';\n\nimport { HeyproblemsInfo } from './entrypoints/background/HeyproblemsMessageHandler';\nimport {\n  ContentLogin,\n  AutosnatchLogin,\n  AutosnatchId,\n  ContentScriptRestorationState,\n  AutosnatchTargetOptionGroup,\n  GlobalSearchState,\n  ContentScriptMode,\n  ScreenSize,\n} from './types';\nimport { isWebExtError, WebExtErrorType } from './webExtErrors';\n\n/**\n * A message to the background script, asking it to provide all logins for the sending tab's url. If\n * not sent from a tab, the active tab is used instead.\n */\nexport interface GetLogins {\n  type: 'GetLogins';\n  all?: boolean;\n}\nexport type GetLoginsResponse =\n  | {\n      logins: readonly ContentLogin[];\n    }\n  | undefined;\n\n/**\n * A message directing the background script to perform a sync. After the sync, the DataUpdate\n * message will be sent to indicate completion.\n */\nexport interface RequestSync {\n  type: 'RequestSync';\n}\n\n/**\n * A message to the background script, asking it to provide the user\n */\nexport interface GetUser {\n  type: 'GetUser';\n}\nexport interface GetUserResponse {\n  userId?: UserId;\n  clientId?: UUID;\n  displayEmail?: string;\n  userClientSettings?: UserClientSettings;\n}\n\n/**\n * A message to the background script, asking it to provide the possible autosnatch targets\n */\nexport interface GetAutosnatchTargets {\n  type: 'GetAutosnatchTargets';\n}\nexport type GetAutosnatchTargetsResponse =\n  | {\n      hasDisabledProfiles: boolean;\n      targetGroups: AutosnatchTargetOptionGroup[];\n    }\n  | undefined;\n\n/**\n * A message asking the background to process a snatched login\n */\nexport interface LoginSnatched {\n  type: 'LoginSnatched';\n  login: AutosnatchLogin;\n}\n\n/**\n * A message asking the background undo an autosnatch\n */\nexport interface UndoAutosnatch {\n  type: 'UndoAutosnatch';\n  id: AutosnatchId;\n}\n\n/**\n * A message asking the background mark the listed autosnatches as seen\n */\nexport interface MarkAutosnatchesSeen {\n  type: 'MarkAutosnatchesSeen';\n  ids: readonly AutosnatchId[];\n}\n\n/**\n * TODO\n */\nexport interface SaveContentScriptState {\n  type: 'SaveContentScriptState';\n  state: ContentScriptRestorationState;\n}\n\n/**\n * TODO\n */\nexport interface GetContentScriptState {\n  type: 'GetContentScriptState';\n}\n\n/**\n * Tell the bg script to add the given achievement.\n */\nexport interface AddAchievements {\n  type: 'AddAchievements';\n  achievements: Achievement[];\n}\n\n/**\n * Set or update an in-progress registration for the given url\n */\nexport interface SetGeneratedPasswordForUrl {\n  type: 'SetGeneratedPasswordForUrl';\n  url: string;\n  username: string | undefined;\n  password: string;\n  autosnatchId: EnqueuedAutosnatchId;\n}\n\n/**\n * Update fields in an existing autosnatch that is waiting for form submission\n */\nexport interface UpdateAutosnatchLogin {\n  type: 'UpdateAutosnatchLogin';\n  login: Pick<AutosnatchLogin, 'autosnatchId'> & Partial<AutosnatchLogin>;\n}\n\n/**\n * Archives a login created by and in-progress registrations\n */\nexport interface ArchiveAddUsernameLogin {\n  type: 'ArchiveAddUsernameLogin';\n  loginId: LoginId;\n}\n\n/**\n * Trigger a heyproblems report\n */\nexport interface SendHeyproblemsReport {\n  type: 'SendHeyproblemsReport';\n  info: HeyproblemsInfo;\n}\n\n/**\n * A message indicating that the data in the ClientCore held by the background script was updated.\n * The popup and the content script respond to this message by reloading their data.\n */\nexport interface DataUpdate {\n  type: 'DataUpdate';\n}\n\n/**\n * A message indicating that the data in the ClientCore was locked or unlocked.\n */\nexport interface UnlockStateUpdate {\n  type: 'UnlockStateUpdate';\n  isUnlocked: boolean;\n}\n\n/**\n * A message directing the content script to fill out a login form with the provided username &\n * password combo.\n */\nexport interface FillForm {\n  type: 'FillForm';\n  username: string;\n  password: string;\n  customFields: Unprotect<CustomField>[];\n  totp?: string;\n  totpAlgorithm?: TotpAlgorithm;\n  totpDigits?: number;\n  totpPeriod?: number;\n  hideSecrets: boolean;\n}\n\n/**\n * A message directing the content script to fill out the active input element with the given value\n */\nexport interface FillActive {\n  type: 'FillActive';\n  value: string;\n}\n\n/**\n * A message indicating to the content script that its tab's url has changed.\n */\nexport interface UrlUpdate {\n  type: 'UrlUpdate';\n  url: string;\n}\n\n/**\n * A message to the background script from the content script running on the webapp's page\n * indicating that the content script has extracted ClientCoreParameters.\n */\nexport interface WebappClientCoreParametersExtracted {\n  type: 'WebappClientCoreParametersExtracted';\n  // CCP contains Uint8Arrays which won't transfer on chrome when not encoded as json.\n  clientCoreParametersJSON: string;\n}\n\n/**\n * A message to the background script asking for its ClientCoreParameters\n */\nexport interface GetClientCoreParameters {\n  type: 'GetClientCoreParameters';\n}\n\n/**\n * A message to the background script asking if the client has received the client outdated backend\n * error.\n */\nexport interface IsClientOutdated {\n  type: 'IsClientOutdated';\n}\n\n/**\n * A message to the background script asking for the value of the \"extensionDisabled\" site setting.\n */\nexport interface GetDisabledSiteSettingForUrl {\n  type: 'GetDisabledSiteSettingForUrl';\n  url: string;\n}\n\n/**\n * A message to the background script setting the value of the \"extensionDisabled\" site setting.\n */\nexport interface SetDisabledSiteSettingForUrl {\n  type: 'SetDisabledSiteSettingForUrl';\n  url: string;\n  disabled: boolean;\n}\n\n/**\n * Make the background script run totp qr code detection for the sending tab.\n */\nexport interface DetectTotpQrSecretForTab {\n  type: 'DetectTotpQrSecretForTab';\n  rects: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n  }[];\n  devicePixelRatio: number;\n}\nexport type DetectTotpQrSecretForTabResponse =\n  | {\n      status: 'found';\n      totpParameters: TotpParameters;\n      x: number;\n      y: number;\n    }\n  | { status: 'retryLater' }\n  | { status: 'notFound' };\n\n/**\n * Get the autosnatch settings\n */\nexport interface GetAutosnatchSettings {\n  type: 'GetAutosnatchSettings';\n}\nexport type GetAutosnatchSettingsResponse = {\n  targetVaultId: VaultId | undefined;\n  disabled: boolean;\n};\n\n/**\n * Set the autosnatch settings\n */\nexport interface SetAutosnatchSettings {\n  type: 'SetAutosnatchSettings';\n  targetVaultId?: VaultId;\n  disabled?: boolean;\n}\n\n/**\n * Write the settings for the password generator to the meta vault\n */\nexport interface SavePasswordGeneratorSettings {\n  type: 'SavePasswordGeneratorSettings';\n  settings: PasswordGeneratorSettings;\n}\n\n/**\n * Get the settings for the password generator from the meta vault\n */\nexport interface GetPasswordGeneratorSettings {\n  type: 'GetPasswordGeneratorSettings';\n}\nexport type GetPasswordGeneratorSettingsResponse =\n  | {\n      settings: PasswordGeneratorSettings | null;\n    }\n  | undefined;\n\n/**\n * Tell the bg script to write the given auditlog event\n */\nexport interface WriteAuditlogEvent {\n  type: 'WriteAuditlogEvent';\n  organizationId: OrganizationId;\n  event: AuditlogEvent;\n}\n\nexport interface RequestForceRefreshClientCoreParameters {\n  type: 'RequestForceRefreshClientCoreParameters';\n}\n\n/**\n * Ask the content script if it is still processing the autosnatch with the given id\n */\nexport interface GetIsAutosnatchActive {\n  type: 'GetIsAutosnatchActive';\n  autosnatchId: AutosnatchId;\n}\n\n/**\n * Ask the content script for the device type to show for an unlock\n */\nexport interface GetUnlockDeviceType {\n  type: 'GetUnlockDeviceType';\n}\n\n/**\n * Ask the content script to provide the up to date override library\n */\nexport interface GetOverrideLibrary {\n  type: 'GetOverrideLibrary';\n}\n\n/**\n * Ask the content script to send these overrides to the backend\n */\nexport interface ReplaceOverrides {\n  type: 'ReplaceOverrides';\n  overrides: WebpageOverride[];\n}\n\n/**\n * Ask the content script to delete the override with this id from the backend\n */\nexport interface DeleteOverrides {\n  type: 'DeleteOverrides';\n  overrideIds: UUID[];\n}\n\n/**\n *  A message indicating that the overrides held in the background script were changed.\n */\nexport interface OverridesUpdate {\n  type: 'OverridesUpdate';\n}\n\n/**\n * Ask the content script to load overrides from the backend now\n */\nexport interface ForceOverrideUpdate {\n  type: 'ForceOverrideUpdate';\n}\n\n/**\n * A message sent to the background script from the global search window to persist its state.\n */\nexport interface SaveGlobalSearchState {\n  type: 'SaveGlobalSearchState';\n  state: GlobalSearchState;\n}\n\n/**\n * Message to the content script to resize the global search window to the given height.\n */\nexport interface SetGlobalSearchHeight {\n  type: 'SetGlobalSearchHeight';\n  height: number;\n}\n\n/**\n * Message to the content script from the global search window to open the given url. We need to do\n * this via the webext api from the background script since it may otherwise trigger the browser's\n * popup blocker (e.g. in Firefox).\n */\nexport interface GlobalSearchOpenUrl {\n  type: 'GlobalSearchOpenUrl';\n  url: string;\n}\n\n/**\n * Message to the content script from the popup to request the mode of the content script in the\n * given tab.\n */\nexport interface GetContentScriptMode {\n  type: 'GetContentScriptMode';\n}\n\n/**\n * Message to the background script from the content script indicating a content script mode change\n */\nexport interface ContentScriptModeChanged {\n  type: 'ContentScriptModeChanged';\n  mode: ContentScriptMode;\n}\n\n/**\n * Message to the background script to start watching for requests triggered by the tab sending this\n * message. Once all requests are completed the message will return. This allows the content script\n * to ignore autosnatches while requests triggered by a form fill are in flight.\n */\nexport interface WaitForSenderTabRequestsSettled {\n  type: 'WaitForSenderTabRequestsSettled';\n  timeoutMs: number;\n}\n\n/**\n * Ask the background script for the shortcut for global search\n */\nexport interface GetGlobalSearchShortcut {\n  type: 'GetGlobalSearchShortcut';\n}\nexport interface GetGlobalSearchShortcutResponse {\n  type: 'GetGlobalSearchShortcutResponse';\n  globalSearchShortcut?: string;\n}\n\n/**\n * Ask the background script to open the global search window\n */\nexport interface OpenGlobalSearchWindow {\n  type: 'OpenGlobalSearchWindow';\n}\n\n/**\n * Ask the background script to open the shortcut settings\n */\nexport interface OpenShortcutSettings {\n  type: 'OpenShortcutSettings';\n}\n\n/**\n * Ask the background script to remove the given value from the clipboard after a timeout\n */\nexport interface SetClearValueFromClipboardAfterTimeout {\n  type: 'SetClearValueFromClipboardAfterTimeout';\n  clearAfterTimeout: boolean;\n  value: string;\n}\n\n/**\n * Message from the background script to the webauthn unlock iframe. Includes the request options,\n * and instructs the iframe to call navigator.credentials.get\n */\nexport interface TriggerWebauthnUnlockInIframe {\n  type: 'TriggerWebauthnUnlockInIframe';\n  requestOptionsJSON: string;\n}\n\n/**\n * Ping the background script that there was user activity\n */\nexport interface PingActivity {\n  type: 'PingActivity';\n}\n\n/**\n * Message to offscreen document asking for screen size\n */\nexport interface GetScreenSize {\n  type: 'GetScreenSize';\n}\n\n/**\n * Message to offscreen document or content script asking to remove the given value from the clipboard\n */\nexport interface ClearValueFromClipboard {\n  type: 'ClearValueFromClipboard';\n  value: string;\n}\n\n/**\n * Message to background script asking to unprotect a value\n */\nexport interface GetUnprotectedValue {\n  type: 'GetUnprotectedValue';\n  value: ProtectedValue;\n  vaultId: VaultId;\n}\n\n/**\n * A message that can be sent to the runtime\n */\nexport type RuntimeMessage =\n  | GetLogins\n  | RequestSync\n  | DataUpdate\n  | UnlockStateUpdate\n  | GetUser\n  | GetAutosnatchTargets\n  | LoginSnatched\n  | UndoAutosnatch\n  | MarkAutosnatchesSeen\n  | SaveContentScriptState\n  | GetContentScriptState\n  | AddAchievements\n  | SetGeneratedPasswordForUrl\n  | UpdateAutosnatchLogin\n  | ArchiveAddUsernameLogin\n  | SendHeyproblemsReport\n  | WebappClientCoreParametersExtracted\n  | GetClientCoreParameters\n  | IsClientOutdated\n  | GetDisabledSiteSettingForUrl\n  | SetDisabledSiteSettingForUrl\n  | DetectTotpQrSecretForTab\n  | GetAutosnatchSettings\n  | SetAutosnatchSettings\n  | SavePasswordGeneratorSettings\n  | GetPasswordGeneratorSettings\n  | WriteAuditlogEvent\n  | RequestForceRefreshClientCoreParameters\n  | GetUnlockDeviceType\n  | GetOverrideLibrary\n  | ReplaceOverrides\n  | DeleteOverrides\n  | ForceOverrideUpdate\n  | SaveGlobalSearchState\n  | SetGlobalSearchHeight\n  | GlobalSearchOpenUrl\n  | WaitForSenderTabRequestsSettled\n  | GetGlobalSearchShortcut\n  | OpenGlobalSearchWindow\n  | OpenShortcutSettings\n  | SetClearValueFromClipboardAfterTimeout\n  | PingActivity\n  | GetScreenSize\n  | ClearValueFromClipboard\n  | GetUnprotectedValue\n  | ContentScriptModeChanged;\n\n/**\n * A message that can be sent to the content script.\n */\nexport type ContentScriptMessage =\n  | FillForm\n  | UrlUpdate\n  | DataUpdate\n  | UnlockStateUpdate\n  | FillActive\n  | GetIsAutosnatchActive\n  | OverridesUpdate\n  | GetContentScriptMode\n  | GetGlobalSearchShortcutResponse\n  | TriggerWebauthnUnlockInIframe\n  | ClearValueFromClipboard;\n\n/**\n * A message that can be sent to/received by the background or the content script\n */\nexport type Message = RuntimeMessage | ContentScriptMessage;\n\ntype MessageType = Message['type'];\n\ntype MessageResponseMap = {\n  GetLogins: GetLoginsResponse;\n  GetUser: GetUserResponse;\n  GetAutosnatchTargets: GetAutosnatchTargetsResponse;\n  HasRecentLogin: boolean;\n  GetContentScriptState: ContentScriptRestorationState | undefined;\n  SetGeneratedPasswordForUrl: LoginId;\n  SendHeyproblemsReport: boolean;\n  // CCP contains Uint8Arrays which won't transfer on chrome when not encoded as json.\n  GetClientCoreParameters: { clientCoreParametersJSON: string } | undefined;\n  IsClientOutdated: boolean;\n  GetDisabledSiteSettingForUrl:\n    | { disabled: boolean; host: string }\n    | { disabled: undefined; host: string | undefined };\n  DetectTotpQrSecretForTab: DetectTotpQrSecretForTabResponse;\n  GetAutosnatchSettings: GetAutosnatchSettingsResponse;\n  GetPasswordGeneratorSettings: GetPasswordGeneratorSettingsResponse;\n  GetIsAutosnatchActive: boolean;\n  GetUnlockDeviceType: UnlockDeviceType;\n  GetOverrideLibrary: OverrideLibrary;\n  GetContentScriptMode: ContentScriptMode | undefined;\n  GetGlobalSearchShortcut: GetGlobalSearchShortcutResponse;\n  TriggerWebauthnUnlockInIframe: string | undefined;\n  GetScreenSize: ScreenSize;\n  GetUnprotectedValue: UnprotectedValue | undefined;\n};\n\nexport type MessageResponse<M extends Message> = M['type'] extends keyof MessageResponseMap\n  ? MessageResponseMap[M['type']]\n  : undefined | void;\n\n// We wrap all message responses in an envelope. The extension API represents no response as\n// undefined (and sometimes also randomly returns null). Wrapping responses in an envelope allows us\n// to reliably distinguish these cases.\ntype MessageResponseEnvelope<T> = { value: T };\n\nfunction isMessageResponseEnvelope(response: unknown): response is MessageResponseEnvelope<any> {\n  return typeof response === 'object' && response !== null;\n}\n\ntype MessageHandler<M extends Message> = (\n  msg: M,\n  sender: browser.Runtime.MessageSender,\n) => Promise<MessageResponse<M>> | MessageResponse<M>;\n\ntype MessageFromType<T extends MessageType> = Extract<Message, { type: T }>;\n\nexport const messageError = Symbol('messageError');\n\nexport async function sendMessage<M extends RuntimeMessage>(\n  m: M,\n): Promise<MessageResponse<M> | typeof messageError> {\n  return doSendMessage(() => browser.runtime.sendMessage(m));\n}\n\nexport async function sendMessageToTab<M extends ContentScriptMessage>(\n  tabId: number,\n  m: M,\n  frameId?: number,\n): Promise<MessageResponse<M> | typeof messageError> {\n  return doSendMessage(() => browser.tabs.sendMessage(tabId, m, { frameId }));\n}\n\nasync function doSendMessage(send: () => Promise<any>) {\n  try {\n    const response = await send();\n    if (response === null || response === undefined) {\n      // We sometimes get stray null results when messages can't be sent anymore. We get undefined\n      // if there's no handler for the given message type at the moment. Don't report, but return as\n      // an error for upstream.\n      return messageError;\n    }\n    if (isMessageResponseEnvelope(response)) {\n      return response.value;\n    }\n    trackError(\n      new Error(`Received unexpected response sending message: ${JSON.stringify(response)}`),\n    );\n    return messageError;\n  } catch (e) {\n    reportMessageError(e);\n    return messageError;\n  }\n}\n\nexport async function sendMessageToAllTabs<M extends ContentScriptMessage>(\n  m: M,\n): Promise<MessageResponse<M>[]> {\n  const tabs = await browser.tabs.query({});\n  const tabMessages = tabs.map((t) =>\n    t.id ? sendMessageToTab(t.id, m) : Promise.resolve(messageError),\n  );\n  const results = await Promise.allSettled(tabMessages);\n  return results.flatMap((r) => {\n    if (r.status !== 'fulfilled') {\n      return [];\n    }\n    const { value } = r;\n    return value !== messageError ? [value] : [];\n  });\n}\n\nexport async function broadcastMessage<M extends ContentScriptMessage & RuntimeMessage>(m: M) {\n  return Promise.allSettled([sendMessage(m), sendMessageToAllTabs(m)]);\n}\n\nexport type ComposedMessageListener = (\n  message: Message,\n  sender: browser.Runtime.MessageSender,\n) => Promise<MessageResponseEnvelope<MessageResponse<Message>>> | undefined;\n\nexport function makeMessageListener(\n  handlers: {\n    [T in MessageType]?: MessageHandler<MessageFromType<T>>;\n  },\n): ComposedMessageListener {\n  // CAUTION, don't make the message listener async! Doing that will lead to message flakiness and\n  // hard to reproduce bugs. If there's multiple message listeners registered only one of them is\n  // allowed to send a response. Browsers seem to take the listener that responds with a truthy\n  // value. Since async functions always return a promise the every registered listener will try to\n  // respond. Refer to the following links for more info:\n  //\n  // - https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage#sect5\n  // - https://issues.chromium.org/issues/40753031#comment11\n  return <M extends Message>(msg: M, sender: browser.Runtime.MessageSender) => {\n    const handler = handlers[msg.type] as MessageHandler<M> | undefined;\n    if (handler) {\n      try {\n        return (async (): Promise<MessageResponseEnvelope<MessageResponse<M>>> => {\n          const value = await handler(msg, sender);\n\n          // Response is wrapped in an envelope, to allow us to distinguish messages where the\n          // response is undefined from situations where there is no handler. Without the envelope\n          // these would both be represented as plain undefined.\n          return { value };\n        })();\n      } catch (e) {\n        reportMessageError(e);\n      }\n    }\n    // We return undefined here to signal that we don't have a handler for this message type. If\n    // there's another message handler registered somewhere that handles this message type the\n    // browser will prefer that response and return it to the message sender. Note that if all\n    // handlers return undefined, the undefined response will be propagated to the message sender.\n    // That case is handled in sendMessage/sendMessageToTab above.\n    return undefined;\n  };\n}\n\nconst IGNORED_ERROR_MESSAGES: WebExtErrorType[] = [\n  // happens when the other side goes away unexpectedly (e.g. tab close)\n  'COULD_NOT_ESTABLISH_CONNECTION',\n  // for urls on which extensions are never allowed to run (e.g. chrome://*, some about:* pages)\n  'MISSING_HOST_PERMISSION_FOR_TAB',\n  // Sending message to tab that was closed in the meantime\n  'TAB_CLOSED',\n  'NO_TAB_WITH_ID', // Chrome\n  'INVALID_TAB_ID', // Firefox\n  // Should be handled by polyfill, but isn't - https://github.com/mozilla/webextension-polyfill/issues/384\n  'CLOSED_BEFORE_RESPONSE_RECEIVED',\n  // Seems to happen in Firefox for some messages: https://sentry.heylogin.dev/organizations/heylogin/issues/755\n  'UNEXPECTED_ERROR',\n  // No need to report this one.\n  // FIXME: When this error comes up, the content script is no longer in a functional state and we\n  // might as well unload it entirely. This happens e.g. with lingering content scripts after the\n  // extension is unloaded/reloaded.\n  'CONTEXT_INVALIDATED',\n];\n\nfunction reportMessageError(e: unknown) {\n  if (isWebExtError(e, ...IGNORED_ERROR_MESSAGES)) {\n    return;\n  }\n  trackError(new Error('Failed to send message', { cause: e }));\n}\n"],"names":["global","module","this","isThenable","proxyTarget","value","message","ScalarType","LongType","WireType","makeReadOptions","makeWriteOptions","readField","writeField","readScalar","writeScalar","val","a","MethodKind","MethodIdempotency","RegistrationInfoStatus","ErrorGroup","BackendClientErrorCode","DomainError","__read","__spread","__assign","__values","IS_DEBUG_BUILD","logger","SyncPromise","Scope","Session","Hub","exception","AuthenticatorType","CredentialType","SessionType","Achievement","VaultType","WebauthnPrfSupportStatus","OrganizationType","LicenseType","PrimaryLoginDevice","ProfileType","MaintenanceTask","SyncUpdateField","SubscriptionError","Emittery","Sentry.withScope","Sentry.captureException","ChannelRecipient","AuditlogEventTypeGroup","AuditlogEventType","ErrorCode","ReportPageProblem","SubscriptionPlan","UserConfirmationResultType","UserConfirmationType","UserType","VaultMessageType","ClientType","v","isWebExtError","obj","errorTypes","getMessage","undefined","some","errorType","matcher","ERRORS","test","hasMessageProperty","CONTEXT_INVALIDATED","TAB_DRAG_IN_PROGRESS","COULD_NOT_ESTABLISH_CONNECTION","MISSING_HOST_PERMISSION_FOR_TAB","TAB_CLOSED","NO_TAB_WITH_ID","INVALID_TAB_ID","ACTIVE_TAB_PERMISSION_NOT_IN_EFFECT","CAPTURE_TAB_IMAGE_READBACK_FAILED","CANNOT_ACCESS_CONTENTS_OF_URL","ALL_URLS_OR_ACTIVE_TAB_PERMISSION_REQUIRED","UNEXPECTED_ERROR","ERROR_CAPTURING_VISIBLE_TAB","INVALID_VALUE_FOR_BOUNDS","CLOSED_BEFORE_RESPONSE_RECEIVED","PERMISSION_ERROR","isMessageResponseEnvelope","response","messageError","Symbol","sendMessage","m","doSendMessage","browser","runtime","sendMessageToTab","tabId","frameId","tabs","send","Error","JSON","stringify","e","reportMessageError","makeMessageListener","handlers","msg","sender","handler","type","IGNORED_ERROR_MESSAGES","cause"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49]}