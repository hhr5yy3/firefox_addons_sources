class LeakMonitoring extends React.Component{constructor(e){super(e),this.state={showMe:!0}}onClose(){this.dismissAlert(),this.closeMe()}getNewSecurityBreaches(e){return e.breaches.length?e.breaches.filter(e=>!e.isDismissedFromSlider):[]}closeMe(){this.setState({showMe:!1})}leakInfoGA(e){GA(GA_MAIN_CATEGORY,"Leak Monitoring",e||"")}dismissAlert(){this.props.dismissLeakAlerts()}takeAction(){this.leakInfoGA("Take Action"),this.dismissAlert(),this.closeMe(),goToTab(BREACHES_URL)}goodNews(){return React.createElement("div",{className:"good-msg"},translate("noBreaches"))}breachesInfoTxt(e){let t=" ";return e.length>1?t+=`${e.length} ${translate("securityBreaches")}`:t+=e[0].name,t}getLogoArr(e){const t={};return e.forEach(e=>{t[e.iconUrl]=!0}),Object.keys(t)}securityAlert(e){return React.createElement("div",null,translate("breachesAlert"),React.createElement("span",{className:"security-breaches"},this.breachesInfoTxt(e)))}render(){const e=this.state.showMe;var t=this.props;const a=t.leakInfo,s=t.leakMonitoringOn,r=t.user,n=this.getNewSecurityBreaches(a),i=!n.length;return e&&r.isPremiumUser&&s&&(a.newInfo||!i)?React.createElement("div",{className:"master-slider-wrapper"},React.createElement("div",{className:"slider-item slider-body-wrapper leak-info-container"},React.createElement("div",{className:"header "+(i?"good":"")},React.createElement(SvgComponent,{svg:"leak-monitoring-icon",className:"data-leak-icon"}),React.createElement("span",{className:"title"},translate("dataLeakMonitoring")),React.createElement(SvgComponent,{svg:"x-small-icon",className:"close-btn",onClick:()=>this.onClose()})),React.createElement("div",{className:"security-alert-container"},React.createElement("div",{className:"leak-info-body"},React.createElement("div",{className:"user-info"},r.picture?React.createElement("span",{className:"user-img",style:{"background-image":`url('${r.picture}')`}}):React.createElement("span",{className:"user-img avatar"},r.name&&r.name[0])),i?this.goodNews():this.securityAlert(n)),!i&&React.createElement("span",{onClick:()=>this.takeAction(),className:"cta-btn"},translate("takeAction"))))):React.createElement("div",null)}}function mapStateToProps(e){return{leakInfo:e.leakMonitoring,leakMonitoringOn:e.settings.leakMonitoring,user:e.user}}function mapDispatchToProps(e){return{dismissLeakAlerts:()=>e(dismissLeakAlerts())}}LeakMonitoring=ReactRedux.connect(mapStateToProps,mapDispatchToProps)(LeakMonitoring);