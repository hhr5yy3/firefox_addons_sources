class ScorecardLink extends React.Component{constructor(e){super(e),this.info=e.info}onLinkClick(){goToTab(`${FULL_REPORT_URL+this.info.host}?${WOT_PRODUCT}=addon`),GA("Search Popup","Full Scorecard "+this.info.shieldColor,this.info.host)}addReviewClick(){const e=this.props.user.uid;GA("Search Popup","Add review",this.info.host),e&&this.props.newReview(e,this.info.host),window.postMessage({type:OPEN_ADD_REVIEW},"*")}render(){const e=this.props.commentsCount;return React.createElement("div",null,void 0===e&&React.createElement(LottieAnimation,{animationName:"popup-reviews-count.json"}),0===e&&React.createElement("span",{className:"shield__viewaway small",onClick:()=>this.addReviewClick()},translate("beTheFirstToReview"),React.createElement(SvgIcon,{className:"shield__open-in-new",svg:"open-in-new.svg"})),e>0&&React.createElement("span",{className:"shield__viewaway",onClick:()=>this.onLinkClick()},translate("viewFullScorecard"),React.createElement(SvgIcon,{className:"shield__open-in-new",svg:"open-in-new.svg"})))}}function mapStateToProps(e,n){const t=e.ratings[n.info.host];return{commentsCount:t?t.commentsCount:void 0,user:e.user}}function mapDispatchToProps(e){return{newReview:function(){return e(newReview.apply(void 0,arguments))}}}ScorecardLink=ReactRedux.connect(mapStateToProps,mapDispatchToProps)(ScorecardLink);