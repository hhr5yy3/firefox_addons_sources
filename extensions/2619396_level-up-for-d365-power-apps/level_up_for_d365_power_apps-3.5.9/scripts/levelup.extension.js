/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 7);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/scripts/inject/levelup.common.utility.ts":
/*!******************************************************!*\
  !*** ./app/scripts/inject/levelup.common.utility.ts ***!
  \******************************************************/
/*! exports provided: Utility */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Utility", function() { return Utility; });
/* harmony import */ var xrm_webapi_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xrm-webapi-client */ "./node_modules/xrm-webapi-client/dist/WebApiClient.min.js");
/* harmony import */ var xrm_webapi_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xrm_webapi_client__WEBPACK_IMPORTED_MODULE_0__);
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

var Utility = /** @class */ (function () {
    function Utility(_document, _window, _xrm, _clientUrl) {
        this._document = _document;
        this._window = _window;
        this._xrm = _xrm;
        this._clientUrl = _clientUrl;
        var version = _xrm.Page.context.getVersion ? _xrm.Page.context.getVersion() : window['APPLICATION_VERSION'];
        this._is2016OrGreater = version.startsWith('8') || version.startsWith('9');
        this._currentUserId = _xrm.Page.context.getUserId().substr(1, 36);
        this._version = version;
    }
    Object.defineProperty(Utility.prototype, "environmentDetail", {
        get: function () {
            return this._environmentDetail;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Utility.prototype, "formDocument", {
        get: function () {
            return this._document;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Utility.prototype, "formWindow", {
        get: function () {
            return this._window;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Utility.prototype, "Xrm", {
        get: function () {
            return this._xrm;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Utility.prototype, "clientUrl", {
        get: function () {
            return this._clientUrl;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Utility.prototype, "clientUrlForParams", {
        get: function () {
            return this._clientUrl + (this._clientUrl.indexOf('appid') > -1 ? '&' : '/main.aspx?');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Utility.prototype, "is2016OrGreater", {
        get: function () {
            return this._is2016OrGreater;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Utility.prototype, "currentUserId", {
        get: function () {
            return this._currentUserId;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Utility.prototype, "version", {
        get: function () {
            return this._version;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Utility.prototype, "isOnline", {
        get: function () {
            return ((this._xrm.Page.context.isOffice365 && this._xrm.Page.context.isOffice365()) ||
                (this._xrm.Page.context.isOnPremises && !this._xrm.Page.context.isOnPremises()));
        },
        enumerable: false,
        configurable: true
    });
    Utility.prototype.fetch = function (entityName, attributes, filter, id, fetchXML) {
        var headers = new Headers({
            Accept: 'application/json',
            'Content-Type': 'application/json; charset=utf-8',
        });
        var serviceUrl = Xrm.Page.context.getClientUrl() + "/XRMServices/2011/OrganizationData.svc/" + entityName;
        if (this._is2016OrGreater) {
            headers = new Headers({
                Accept: 'application/json',
                'Content-Type': 'application/json; charset=utf-8',
                'OData-MaxVersion': '4.0',
                'OData-Version': '4.0',
                Prefer: 'odata.include-annotations="*"',
            });
            serviceUrl = Xrm.Page.context.getClientUrl() + "/api/data/v" + Xrm.Page.context
                .getVersion()
                .substr(0, 3) + "/" + entityName;
        }
        if (id) {
            serviceUrl += "(" + id + ")";
        }
        if (attributes) {
            serviceUrl += "?$select=" + attributes;
        }
        if (filter) {
            serviceUrl += "&$filter=" + filter;
        }
        if (fetchXML) {
            serviceUrl += "?fetchXml=" + encodeURI(fetchXML);
        }
        return fetch(serviceUrl, {
            method: 'GET',
            headers: headers,
            credentials: 'include',
        })
            .then(function (response) { return response.json(); })
            .then(function (c) {
            if (c.d) {
                return c.d.results;
            }
            else if (c.value) {
                return c.value;
            }
            return c;
        })
            .catch(function (err) {
            console.log(err);
        });
    };
    Utility.prototype.messageExtension = function (message, category) {
        var extensionMessage = {
            type: 'Page',
            category: category,
            content: message,
        };
        var levelUpEvent = new CustomEvent('levelup', {
            detail: extensionMessage,
        });
        levelUpEvent.initEvent('levelup', false, false);
        document.dispatchEvent(levelUpEvent);
    };
    Utility.injectScript = function (file) {
        var scriptTag = document.createElement('script');
        scriptTag.setAttribute('type', 'text/javascript');
        scriptTag.setAttribute('src', file);
        document.body.appendChild(scriptTag);
    };
    Utility.enableExtension = function (isEnable) {
        chrome.runtime.sendMessage({
            type: 'Page',
            content: isEnable ? 'On' : 'Off',
            category: 'Extension',
        });
    };
    Utility.copy = function (valueToCopy) {
        var t = document.createElement('input');
        t.setAttribute('id', 'copy');
        t.setAttribute('value', valueToCopy);
        document.body.appendChild(t);
        t.select();
        document.execCommand('copy');
        t.remove();
    };
    Utility.prototype.retrieveEnvironmentDetails = function () {
        return __awaiter(this, void 0, void 0, function () {
            var request, _a, e_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        request = xrm_webapi_client__WEBPACK_IMPORTED_MODULE_0___default.a.Requests.RetrieveCurrentOrganizationRequest.with({
                            urlParams: {
                                AccessType: "Microsoft.Dynamics.CRM.EndpointAccessType'Default'",
                            },
                        });
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        _a = this;
                        return [4 /*yield*/, xrm_webapi_client__WEBPACK_IMPORTED_MODULE_0___default.a.Execute(request)];
                    case 2:
                        _a._environmentDetail = (_b.sent()).Detail;
                        return [3 /*break*/, 4];
                    case 3:
                        e_1 = _b.sent();
                        console.warn('Level up: No RetrieveCurrentOrganizationRequest');
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    return Utility;
}());



/***/ }),

/***/ "./app/scripts/inject/levelup.forms.ts":
/*!*********************************************!*\
  !*** ./app/scripts/inject/levelup.forms.ts ***!
  \*********************************************/
/*! exports provided: Forms */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Forms", function() { return Forms; });
/* harmony import */ var _levelup_common_utility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./levelup.common.utility */ "./app/scripts/inject/levelup.common.utility.ts");
/// <reference path="../../tsd/externals.d.ts" />
/// <reference path="../../tsd/xrm.d.ts" />

var Forms = /** @class */ (function () {
    function Forms(utility) {
        this.utility = utility;
    }
    Forms.prototype.clearLogicalNames = function () {
        this.utility.formDocument.querySelectorAll('.levelupschema').forEach(function (x) { return x.remove(); });
    };
    Forms.prototype.entityMetadata = function () {
        var _this = this;
        this.utility.fetch("EntityDefinitions", 'LogicalName,ObjectTypeCode').then(function (records) {
            var resultsArray = [{ cells: ['Entity Logical Name', 'Object Type Code'] }];
            // sort by object type code
            records.sort(function (r1, r2) {
                return r1.ObjectTypeCode - r2.ObjectTypeCode;
            });
            records.forEach(function (r) {
                resultsArray.push({ cells: [r.LogicalName, r.ObjectTypeCode] });
            });
            _this.utility.messageExtension(resultsArray, 'entityMetadata');
        });
    };
    Forms.prototype.displayLogicalNames = function () {
        var _this = this;
        this.utility.formDocument.querySelectorAll('.levelupschema').forEach(function (x) { return x.remove(); });
        var createSchemaNameInput = function (controlName, controlNode) {
            var schemaNameInput = _this.utility.formDocument.createElement('input');
            schemaNameInput.setAttribute('type', 'text');
            schemaNameInput.setAttribute('class', 'levelupschema');
            schemaNameInput.setAttribute('style', 'background: darkslategray; color: #f9fcfe; font-size: 14px;');
            schemaNameInput.value = controlName;
            if (controlNode && controlNode.parentNode) {
                controlNode.parentNode.insertBefore(schemaNameInput, controlNode);
            }
        };
        this.utility.Xrm.Page.ui.controls.forEach(function (c) {
            var controlName = c.getName(), controlType = c.getControlType(), controlNode = _this.utility.formDocument.getElementById(controlName) ||
                _this.utility.formDocument.querySelector("label[id$=\"" + controlName + "-field-label\"]");
            if (!controlNode) {
                return;
            }
            if (!c.getAttribute) {
                createSchemaNameInput(controlName, _this.utility.formDocument.getElementById(controlName + "_d"));
            }
            else {
                if (!c.getVisible()) {
                    return;
                }
                createSchemaNameInput(c.getAttribute().getName(), controlNode);
            }
        });
        this.utility.Xrm.Page.ui.tabs.forEach(function (t) {
            var tabName = t.getName();
            if (t.getVisible()) {
                createSchemaNameInput(tabName, _this.utility.formDocument.querySelector("div[name=\"" + tabName + "\"]") ||
                    _this.utility.formDocument.querySelector("li[data-id$=\"tablist-" + tabName + "\"]"));
            }
            t.sections.forEach(function (s) {
                var sectionName = s.getName();
                if (s.getVisible()) {
                    createSchemaNameInput(sectionName, _this.utility.formDocument.querySelector("table[name=\"" + sectionName + "\"]") ||
                        _this.utility.formDocument.querySelector("section[data-id$=\"" + sectionName + "\"]"));
                }
            });
        });
    };
    Forms.prototype.godMode = function () {
        var selectedTab = this.utility.Xrm.Page.ui.tabs.get(function (x) { return x.getDisplayState() === 'expanded'; })[0];
        this.utility.Xrm.Page.data.entity.attributes.forEach(function (a) { return a.setRequiredLevel('none'); });
        this.utility.Xrm.Page.ui.controls.forEach(function (c) {
            c.setVisible(true);
            if (c.setDisabled) {
                c.setDisabled(false);
            }
            if (c.clearNotification) {
                c.clearNotification();
            }
        });
        this.utility.Xrm.Page.ui.tabs.forEach(function (t) {
            t.setVisible(true);
            t.setDisplayState('expanded');
            t.sections.forEach(function (s) { return s.setVisible(true); });
        });
        if (selectedTab.setFocus) {
            selectedTab.setDisplayState('expanded');
            selectedTab.setFocus();
        }
    };
    Forms.prototype.formProperties = function () {
        var id = this.utility.Xrm.Page.data.entity.getId();
        var etc = this.utility.Xrm.Page.context.getQueryStringParameters().etc;
        Mscrm.RibbonActions.openFormProperties(id, etc);
    };
    Forms.prototype.copyRecordUrl = function () {
        var entityId = this.utility.Xrm.Page.data.entity.getId();
        if (entityId) {
            var locationUrl = this.utility.clientUrlForParams + "etn=" + this.utility.Xrm.Page.data.entity.getEntityName() + "&id=" + entityId + "&newWindow=true&pagetype=entityrecord";
            try {
                _levelup_common_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].copy(locationUrl);
                alert('Record URL has been copied to clipboard');
            }
            catch (e) {
                prompt('Ctrl+C to copy. OK to close.', locationUrl);
            }
        }
        else {
            alert('This record has not been saved. Please save and run this command again');
        }
    };
    Forms.prototype.copyRecordId = function () {
        var entityId = this.utility.Xrm.Page.data.entity.getId().toLowerCase();
        if (entityId) {
            try {
                _levelup_common_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].copy(entityId.substr(1, 36));
                alert('Record Id has been copied to clipboard');
            }
            catch (e) {
                prompt('Ctrl+C to copy. OK to close.', entityId);
            }
        }
        else {
            alert('This record has not been saved. Please save and run this command again');
        }
    };
    Forms.prototype.openRecordWebApi = function () {
        var _this = this;
        if (!this.utility.is2016OrGreater) {
            alert('This feature only works on CRM instances > v8');
            return;
        }
        var entityId = this.utility.Xrm.Page.data.entity.getId();
        if (entityId) {
            var entityName = this.utility.Xrm.Page.data.entity.getEntityName();
            this.utility.fetch("EntityDefinitions(LogicalName='" + entityName + "')", 'EntitySetName').then(function (entity) {
                if (entity && entity.EntitySetName) {
                    var url = _this.utility.Xrm.Page.context.getClientUrl() + "/api/data/v" + Xrm.Page.context
                        .getVersion()
                        .substr(0, 3) + "/" + entity.EntitySetName + "(" + entityId.substr(1, 36) + ")";
                    window.open(url, '_blank');
                }
            });
        }
    };
    Forms.prototype.highlightDirtyFields = function () {
        var _this = this;
        this.utility.Xrm.Page.ui.controls.forEach(function (c) {
            if (c.getAttribute) {
                var dirtyAttribute = c.getAttribute();
                if (!dirtyAttribute || !dirtyAttribute.getIsDirty())
                    return;
                var attributeNode = _this.utility.formWindow.document.getElementById(dirtyAttribute.getName()) ||
                    _this.utility.formDocument.querySelector("div[data-id=\"" + dirtyAttribute.getName() + "-FieldSectionItemContainer\"]") ||
                    _this.utility.formDocument.querySelector("label[id$=\"" + dirtyAttribute.getName() + "-field-label\"]");
                if (!attributeNode)
                    return;
                attributeNode.setAttribute('style', 'border: 1px solid red');
            }
        });
    };
    Forms.prototype.refreshAllSubgrids = function () {
        this.utility.Xrm.Page.ui.controls.forEach(function (c) {
            if (c.getControlType() === 'subgrid') {
                c.refresh();
            }
        });
    };
    Forms.prototype.populateMin = function () {
        if (this.utility.Xrm.Page.ui.getFormType() !== 1) {
            alert('This action cannot be run against an existing record.');
            return;
        }
        this.utility.Xrm.Page.data.entity.attributes.forEach(function (a) {
            if (a.getRequiredLevel() === 'required' && !a.getValue()) {
                switch (a.getAttributeType()) {
                    case 'memo':
                        a.setValue('memo');
                        break;
                    case 'string':
                        a.setValue('string');
                        break;
                    case 'boolean':
                        a.setValue(false);
                        break;
                    case 'datetime':
                        a.setValue(new Date());
                        break;
                    case 'decimal':
                    case 'double':
                    case 'integer':
                    case 'money':
                        a.setValue(a.getMin());
                        break;
                    case 'optionset':
                        var options = a.getOptions();
                        a.setValue(options[0].value);
                        break;
                }
            }
        });
    };
    Forms.prototype.optionSetValues = function () {
        var _this = this;
        this.utility.Xrm.Page.getControl().forEach(function (c) {
            if (c.getControlType() !== 'optionset')
                return;
            var attribute = c.getAttribute(), selectedOptionValue = attribute.getValue(), options = attribute.getOptions(), isClearOptions = options.some(function (o) {
                return o.text.indexOf(' (') === -1;
            });
            if (isClearOptions) {
                c.clearOptions();
            }
            options.forEach(function (o) {
                if (o.text && o.text.indexOf(' (') === -1) {
                    o.text = o.text + ' (' + o.value + ')';
                }
                c.addOption(o);
            });
            if (selectedOptionValue && isClearOptions) {
                attribute.setValue(selectedOptionValue);
            }
            var selectElement = _this.utility.formDocument.getElementById(attribute.getName() + "_i");
            if (selectElement) {
                selectElement.parentElement.removeAttribute('style');
                selectElement.parentElement.removeAttribute('class');
            }
        });
    };
    Forms.prototype.cloneRecord = function () {
        var extraq = '', entityName = this.utility.Xrm.Page.data.entity.getEntityName(), fieldCount = 0, isFieldCountLimitExceeded = false;
        this.utility.Xrm.Page.data.entity.attributes.forEach(function (c) {
            if (fieldCount > 45) {
                isFieldCountLimitExceeded = true;
                return;
            }
            var attributeType = c.getAttributeType(), attributeName = c.getName(), attributeValue = c.getValue();
            if (!attributeValue ||
                attributeName === 'createdon' ||
                attributeName === 'modifiedon' ||
                attributeName === 'createdby' ||
                attributeName === 'modifiedby' ||
                attributeName === 'processid' ||
                attributeName === 'stageid' ||
                attributeName === 'ownerid' ||
                attributeName.startsWith('transactioncurrency'))
                return;
            if (attributeType === 'lookup' &&
                !c.getIsPartyList() &&
                attributeValue.length > 0) {
                var lookupValue = c;
                extraq += attributeName + 'name=' + attributeValue[0].name + '&';
                fieldCount++;
                if (attributeName === 'customerid' ||
                    attributeName === 'parentcustomerid' ||
                    (typeof lookupValue.getLookupTypes === 'function' &&
                        Array.isArray(lookupValue.getLookupTypes()) &&
                        lookupValue.getLookupTypes().length > 1)) {
                    extraq += attributeName + 'type=' + attributeValue[0].entityType + '&';
                    fieldCount++;
                }
                attributeValue = attributeValue[0].id;
            }
            if (attributeType === 'datetime') {
                attributeValue = attributeValue.toDateString();
            }
            extraq += attributeName + '=' + attributeValue + '&';
            fieldCount++;
        });
        if (isFieldCountLimitExceeded) {
            alert('This form contains more than 45 fields and cannot be cloned');
        }
        else {
            var newWindowUrl = this.utility.clientUrlForParams +
                'etn=' +
                entityName +
                '&pagetype=entityrecord' +
                '&extraqs=?' +
                encodeURIComponent(extraq);
            window.open(newWindowUrl);
        }
    };
    Forms.prototype.refresh = function () {
        var _this = this;
        this.utility.Xrm.Page.data.refresh(false).then(function () {
            _this.utility.Xrm.Page.data.entity.addOnSave(function (econtext) {
                var eventArgs = econtext.getEventArgs();
                if (eventArgs.getSaveMode() === 70 || eventArgs.getSaveMode() === 2) {
                    eventArgs.preventDefault();
                }
            });
            alert('Form refreshed without save. Autosave turned off.');
        }, function (error) {
            alert(error.message);
        });
    };
    Forms.prototype.workflows = function () {
        var _this = this;
        var attributes = 'WorkflowId,Name,Category,Mode,RunAs,IsManaged,SubProcess,OnDemand,TriggerOnCreate,TriggerOnDelete,TriggerOnUpdateAttributeList,StateCode', entityName = this.utility.Xrm.Page.data.entity.getEntityName(), entitySetName = this.utility.is2016OrGreater ? 'workflows' : 'WorkflowSet';
        if (this.utility.is2016OrGreater) {
            attributes = attributes.toLowerCase();
        }
        var filter = this.utility.is2016OrGreater
            ? "type eq 1 and (category eq 0 or category eq 2 or category eq 2 or category eq 3) and  primaryentity eq '" + entityName + "'"
            : "Type/Value eq 1 and PrimaryEntity eq '" + entityName + "' and (Category/Value eq 0 or Category/Value eq 2 or Category/Value eq 3)";
        this.utility
            .fetch(entitySetName, attributes, filter)
            .then(function (workflows) {
            // CRM2015 Data doesn't return attributes in order specified on select
            var results = workflows.map(function (workflow) {
                var resultRow = [
                    { key: 'workflowid', value: '' },
                    { key: 'name', value: '' },
                    { key: 'category', value: '' },
                    { key: 'mode', value: '' },
                    { key: 'runas', value: '' },
                    { key: 'ismanaged', value: '' },
                    { key: 'subprocess', value: '' },
                    { key: 'ondemand', value: '' },
                    { key: 'triggeroncreate', value: '' },
                    { key: 'triggerondelete', value: '' },
                    { key: 'triggeronupdateattributelist', value: '' },
                    { key: 'statecode', value: '' },
                ];
                Object.keys(workflow)
                    .filter(function (o) { return o.indexOf('_') === -1 && o.indexOf('@') === -1; })
                    .forEach(function (p) {
                    var keyName = p.toLowerCase(), workflowKeyValue = workflow[p];
                    if (keyName === 'category') {
                        workflowKeyValue =
                            workflowKeyValue === 0 || workflowKeyValue.Value === 0
                                ? 'Process'
                                : workflowKeyValue === 2 || workflowKeyValue.Value === 2
                                    ? 'Business Rule'
                                    : 'Action';
                    }
                    else if (keyName === 'mode') {
                        workflowKeyValue = workflowKeyValue === 0 || workflowKeyValue.Value === 0 ? 'Background' : 'Real-time';
                    }
                    else if (keyName === 'runas') {
                        workflowKeyValue =
                            workflowKeyValue === 0 || workflowKeyValue.Value === 0
                                ? 'Owner'
                                : workflowKeyValue === 1 || workflowKeyValue.Value === 1
                                    ? 'User'
                                    : '';
                    }
                    else if (keyName === 'ismanaged') {
                        workflowKeyValue = workflowKeyValue || workflowKeyValue.Value ? 'Managed' : 'Unmanaged';
                    }
                    else if (keyName === 'subprocess' || keyName === 'ondemand' || keyName === 'triggeroncreate' || keyName === 'triggerondelete') {
                        workflowKeyValue = workflowKeyValue || workflowKeyValue.Value ? '&#10004;' : '';
                    }
                    else if (keyName === 'triggeronupdateattributelist') {
                        workflowKeyValue = workflowKeyValue ? workflowKeyValue.replace(/,/g, '<br>') : '';
                    }
                    else if (keyName === 'statecode') {
                        workflowKeyValue = workflowKeyValue === 0 || workflowKeyValue.Value === 0 ? 'Draft' : 'Activated';
                    }
                    else if (keyName === 'workflowid') {
                        workflowKeyValue = _this.utility.clientUrl.substr(0, _this.utility.clientUrl.lastIndexOf('/')) + "/sfa/workflow/edit.aspx?id=" + workflowKeyValue + "&newWindow=true";
                    }
                    resultRow.find(function (k) { return k.key === keyName; }).value = workflowKeyValue;
                });
                return resultRow;
            });
            // Sort results by category, then by name
            results = results ? results.sort(function (a, b) { return (a[2].value < b[2].value) ? 1 : (a[2].value === b[2].value) ? ((a[1].value > b[1].value) ? 1 : -1) : -1; }) : results;
            _this.utility.messageExtension(results, 'workflows');
        })
            .catch(function (err) {
            console.log(err);
        });
    };
    Forms.prototype.openLookupNewWindow = function () {
        var currentControl = this.utility.Xrm.Page.ui.getCurrentControl();
        if (currentControl.getControlType() === 'lookup') {
            var currentLookup = currentControl.getAttribute().getValue();
            if (currentLookup) {
                var entityName = currentLookup[0].type, entityId = currentLookup[0].id;
                var url = this.utility.clientUrlForParams + "etc=" + entityName + "&id=" + entityId + "&newWindow=true&pagetype=entityrecord";
                window.open(url, '_blank');
            }
        }
        else {
            alert('The currently selected control is not a lookup');
        }
    };
    Forms.prototype.allFields = function () {
        var _this = this;
        var entityId = this.utility.Xrm.Page.data.entity.getId();
        if (entityId) {
            var entityName = this.utility.Xrm.Page.data.entity.getEntityName();
            var resultsArray_1 = [{ cells: ['Attribute Name', 'Value'] }];
            this.utility.fetch("EntityDefinitions(LogicalName='" + entityName + "')", 'EntitySetName').then(function (entity) {
                if (entity && entity.EntitySetName) {
                    _this.utility.fetch(entity.EntitySetName, null, null, entityId.substr(1, 36).toLowerCase()).then(function (r) {
                        var keys = Object.keys(r);
                        keys.forEach(function (k) {
                            resultsArray_1.push({ cells: [k, r[k]] });
                        });
                        console.log(r);
                        _this.utility.messageExtension(resultsArray_1, 'allFields');
                    });
                }
            });
        }
    };
    Forms.prototype.toggleTabs = function () {
        this.utility.Xrm.Page.ui.tabs.forEach(function (t) {
            var currentState = t.getDisplayState();
            t.setDisplayState(currentState === 'expanded' ? 'collapsed' : 'expanded');
        });
    };
    Forms.prototype.optionSets = function () {
        var optionSets = this.utility.Xrm.Page.getControl()
            .filter(function (x) { return x.getControlType() === 'boolean' || x.getControlType() === 'optionset'; })
            .map(function (x) { return ({ name: x.getName(), options: x.getAttribute().getOptions() }); });
        this.utility.messageExtension(optionSets, 'optionsets');
    };
    Forms.prototype.blurFields = function () {
        setFilter(this.utility.Xrm.Page.getAttribute(), this.utility.formDocument, 'blur(5px)');
    };
    Forms.prototype.resetBlur = function () {
        setFilter(this.utility.Xrm.Page.getAttribute(), this.utility.formDocument, '');
    };
    return Forms;
}());

function setFilter(attributes, formDocument, filter) {
    attributes.forEach(function (x) {
        var e = (document.querySelector("div[data-id=\"" + x.getName() + "-FieldSectionItemContainer\"] div[data-lp-id]"));
        if (e) {
            e.style.filter = filter;
        }
    });
    formDocument.querySelector("h1[data-id='header_title']").style.filter = filter;
    formDocument
        .querySelectorAll('.wj-row[aria-label="Data"], #headerControlsList > div[role="presentation"] > div:first-child, div[data-lp-id$="MscrmControls.FieldControls.TextBoxControl"], div[data-lp-id^="MscrmControls.Containers.QuickForm"] div[data-lp-id^="MscrmControls.FieldControls.TextBoxControl"]')
        .forEach(function (e) { return (e.style.filter = filter); });
}


/***/ }),

/***/ "./app/scripts/inject/levelup.grid.ts":
/*!********************************************!*\
  !*** ./app/scripts/inject/levelup.grid.ts ***!
  \********************************************/
/*! exports provided: Grid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return Grid; });
/// <reference path="levelup.common.utility.ts" />
var Grid = /** @class */ (function () {
    function Grid(utility) {
        this.utility = utility;
    }
    Grid.prototype.quickFindFields = function () {
        var _this = this;
        var currentView = this.utility.formDocument.querySelector('span.ms-crm-View-Name'), resultsArray = [{ cells: ['Quick Find Attribute'] }], etc = this.utility.Xrm.Page.context.getQueryStringParameters().etc, 
        // @ts-ignore
        entityName = this.utility.Xrm.Internal.getEntityName(parseInt(etc));
        // @ts-ignore
        if (!entityName && this.utility.Xrm.Utility.getPageContext) {
            // @ts-ignore
            var view = this.utility.Xrm.Utility.getPageContext().input;
            entityName = view.entityName;
        }
        if (entityName) {
            var attributes = 'FetchXml', entitySetName = this.utility.is2016OrGreater ? 'savedqueries' : 'SavedQuerySet';
            if (this.utility.is2016OrGreater) {
                attributes = attributes.toLowerCase();
            }
            var filter = this.utility.is2016OrGreater
                ? "isquickfindquery eq true and querytype eq 4 and returnedtypecode eq '" + entityName + "'"
                : "IsQuickFindQuery eq true and QueryType eq 4 and ReturnedTypeCode eq '" + entityName + "'";
            this.utility.fetch(entitySetName, attributes, filter).then(function (view) {
                var quickFindFields = [];
                if (_this.utility.is2016OrGreater) {
                    quickFindFields = Array.from(new DOMParser().parseFromString(view[0].fetchxml, 'text/html').querySelectorAll('condition')).map(function (x) { return x.getAttribute('attribute'); });
                }
                else {
                    quickFindFields = Array.from(new DOMParser().parseFromString(view[0].FetchXml, 'text/html').querySelectorAll('condition')).map(function (x) { return x.getAttribute('attribute'); });
                }
                quickFindFields.forEach(function (x) { return resultsArray.push({ cells: [x] }); });
                _this.utility.messageExtension(resultsArray, 'quickFindFields');
            });
        }
        else {
            alert('The current page is not a grid');
        }
    };
    Grid.prototype.openGrid = function () {
        var currentView = this.utility.formDocument.querySelector('span.ms-crm-View-Name'), etc = this.utility.Xrm.Page.context.getQueryStringParameters().etc, etn, viewId, viewType;
        // @ts-ignore
        if ((!currentView || !etc) && this.utility.Xrm.Utility.getPageContext) {
            // @ts-ignore
            var view = this.utility.Xrm.Utility.getPageContext().input;
            etn = view.entityName;
            viewId = view.viewId;
            viewType = view.viewType;
        }
        if (etn) {
            if (!viewId) {
                window.open(this.utility.clientUrlForParams + "etn=" + etn + "&newWindow=true&pagetype=entitylist", '_blank');
            }
            else {
                var viewTypeCode = void 0;
                if (viewType === 'savedquery')
                    viewTypeCode = 1039;
                if (viewType === 'userquery')
                    viewTypeCode = 4230;
                window.open(this.utility.clientUrlForParams + "pagetype=entitylist&etn=" + etn + "&viewid=" + viewId + "&viewType=" + viewTypeCode, '_blank');
            }
        }
        else if (currentView && etc) {
            var viewType_1 = currentView.getAttribute('currentviewtype'), viewId_1 = currentView.getAttribute('currentview'), viewUrl = this.utility.clientUrlForParams + "etc=" + etc + "&viewtype=" + viewType_1 + "&viewid=" + viewId_1 + "&newWindow=true&pagetype=entitylist";
            window.open(viewUrl, '_blank');
        }
        else {
            alert('The current page is not a grid');
        }
    };
    Grid.prototype.blurView = function () {
        setFilter(this.utility.formDocument, 'blur(5px)');
    };
    Grid.prototype.resetViewBlur = function () {
        setFilter(this.utility.formDocument, '');
    };
    return Grid;
}());

function setFilter(formDocument, filter) {
    formDocument.querySelectorAll('.wj-row[aria-label="Data"]').forEach(function (e) { return (e.style.filter = filter); });
}


/***/ }),

/***/ "./app/scripts/inject/levelup.navigation.ts":
/*!**************************************************!*\
  !*** ./app/scripts/inject/levelup.navigation.ts ***!
  \**************************************************/
/*! exports provided: Navigation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Navigation", function() { return Navigation; });
/// <reference path="levelup.common.utility.ts" />
/// <reference path="../../tsd/xrm.d.ts" />
var Navigation = /** @class */ (function () {
    function Navigation(utility) {
        this.utility = utility;
    }
    Navigation.prototype.openRecord = function (entityName, entityId) {
        if (!entityName) {
            entityName = prompt('Entity?', '');
        }
        if (entityName && !entityId) {
            entityId = prompt('Id?', '');
        }
        if (entityId) {
            window.open(this.utility.clientUrlForParams + "etn=" + entityName + "&id=" + entityId + "&newWindow=true&pagetype=entityrecord", '_blank');
        }
    };
    Navigation.prototype.newRecord = function () {
        var entityName = prompt('Entity?', '');
        if (entityName) {
            window.open(this.utility.clientUrlForParams + "etn=" + entityName + "&newWindow=true&pagetype=entityrecord", '_blank');
        }
    };
    Navigation.prototype.openSecurity = function () {
        window.top.document
            .getElementById('navBar')
            // @ts-ignore
            .control.raiseNavigateRequest({ uri: '/tools/AdminSecurity/adminsecurity_area.aspx?pagemode=iframe&' });
    };
    Navigation.prototype.openSystemJobs = function () {
        this.openList('asyncoperation');
    };
    Navigation.prototype.openSolutions = function () {
        if (this.utility.isOnline) {
            window.open("https://make.powerapps.com/environments/" + this.utility.environmentDetail.EnvironmentId + "/solutions", '_blank');
        }
        else {
            this.openList('solution');
        }
    };
    Navigation.prototype.openProcesses = function () {
        this.openList('workflow');
    };
    Navigation.prototype.openMain = function () {
        window.open("" + this.utility.clientUrl, '_blank');
    };
    Navigation.prototype.openAdvFind = function () {
        if (!this.utility.Xrm.Page.data || !this.utility.Xrm.Page.data.entity) {
            window.open(this.utility.clientUrlForParams + "pagetype=advancedfind", '_blank');
        }
        else {
            var entityName = this.utility.Xrm.Page.data.entity.getEntityName();
            window.open(this.utility.clientUrlForParams + "extraqs=EntityCode%3d" + this.utility.Xrm.Internal.getEntityCode(entityName) + "&pagetype=advancedfind", '_blank');
        }
    };
    Navigation.prototype.mocaClient = function () {
        var url = (Xrm.Page.context.isOffice365 && Xrm.Page.context.isOffice365()) ||
            (Xrm.Page.context.isOnPremises && !Xrm.Page.context.isOnPremises())
            ? Xrm.Page.context.getClientUrl()
            : window.location.origin;
        window.open(url + "/nga/main.htm?org=" + this.utility.Xrm.Page.context.getOrgUniqueName() + "&server=" + Xrm.Page.context.getClientUrl());
    };
    Navigation.prototype.myUserRecord = function () {
        this.openRecord('systemuser', this.utility.Xrm.Page.context.getUserId());
    };
    Navigation.prototype.myMailbox = function () {
        var _this = this;
        var attributes = 'MailboxId';
        var entity = 'MailboxSet';
        var filter = "RegardingObjectId/Id eq (guid'" + this.utility.currentUserId + "')";
        if (this.utility.is2016OrGreater) {
            entity = 'mailboxes';
            attributes = attributes.toLocaleLowerCase();
            filter = "_regardingobjectid_value eq " + this.utility.currentUserId;
        }
        this.utility
            .fetch(entity, attributes, filter)
            .then(function (results) {
            if (results.length > 0) {
                _this.openRecord('mailbox', results[0].MailboxId || results[0].mailboxid);
            }
        })
            .catch(function (err) {
            console.log(err);
        });
    };
    Navigation.prototype.diagnostics = function () {
        if (Xrm.Internal.isUci && Xrm.Internal.isUci()) {
            window.open(Xrm.Page.context.getClientUrl() + "/tools/diagnostics/diag.aspx/GetMetrics");
        }
        else {
            window.open(this.utility.clientUrl + "/tools/diagnostics/diag.aspx", '_blank');
        }
    };
    Navigation.prototype.perfCenter = function () {
        if (Xrm.Internal.isUci && Xrm.Internal.isUci() && !location.search.includes('perf=')) {
            window.location.href = this.utility.clientUrl + "&perf=true";
        }
        else {
            Mscrm.Performance.PerformanceCenter.get_instance().TogglePerformanceResultsVisibility();
        }
    };
    Navigation.prototype.instancePicker = function () {
        if ((Xrm.Page.context.isOffice365 && Xrm.Page.context.isOffice365()) ||
            (Xrm.Page.context.isOnPremises && !Xrm.Page.context.isOnPremises())) {
            var clientUrl = Xrm.Page.context.getClientUrl();
            window.open("https://port" + clientUrl.substr(clientUrl.indexOf('.')) + "/G/Instances/InstancePicker.aspx?redirect=False", '_blank');
        }
        else {
            alert('Instance picker is available only for Dynamics 365/Dynamics CRM Online');
        }
    };
    Navigation.prototype.openList = function (entityName) {
        if (!entityName) {
            entityName = prompt('Entity?', '');
        }
        if (entityName) {
            window.open(this.utility.clientUrlForParams + "etn=" + entityName + "&pagetype=entitylist");
        }
    };
    Navigation.prototype.openMailboxes = function () {
        this.openList('mailbox');
    };
    Navigation.prototype.openPPAC = function () {
        window.open('https://admin.powerplatform.microsoft.com/analytics/d365ce');
    };
    Navigation.prototype.solutionHistory = function () {
        if ((Xrm.Page.context.isOffice365 && Xrm.Page.context.isOffice365()) ||
            (Xrm.Page.context.isOnPremises && !Xrm.Page.context.isOnPremises())) {
            window.open("https://make.powerapps.com/environments/" + this.utility.environmentDetail.EnvironmentId + "/history", '_blank');
        }
        else {
            this.openList('msdyn_solutionhistory');
        }
    };
    Navigation.prototype.debugRibbon = function () {
        if (Xrm.Internal.isUci && Xrm.Internal.isUci() && !location.search.includes('ribbondebug=')) {
            window.location.href = location.href + "&ribbondebug=true";
        }
    };
    Navigation.prototype.formMonitor = function () {
        if (Xrm.Internal.isUci && Xrm.Internal.isUci() && !location.search.includes('monitor=')) {
            window.location.href = location.href + "&monitor=true";
        }
    };
    return Navigation;
}());



/***/ }),

/***/ "./app/scripts/inject/levelup.servicecalls.ts":
/*!****************************************************!*\
  !*** ./app/scripts/inject/levelup.servicecalls.ts ***!
  \****************************************************/
/*! exports provided: Service */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Service", function() { return Service; });
/// <reference path="levelup.common.utility.ts" />
var Service = /** @class */ (function () {
    function Service(utility) {
        this.utility = utility;
    }
    Service.prototype.environmentDetails = function () {
        var _this = this;
        if (!this.utility.is2016OrGreater) {
            alert('This functionality is not available on this version of CRM');
            return;
        }
        var resultsArray = [{ cells: ['Name', 'Value'] }];
        var keys = Object.keys(this.utility.environmentDetail);
        keys.forEach(function (k) {
            if (k !== 'Endpoints') {
                resultsArray.push({ cells: [k, _this.utility.environmentDetail[k]] });
            }
        });
        console.log(this.utility.environmentDetail);
        this.utility.messageExtension(resultsArray, 'environment');
    };
    Service.prototype.environmentSettings = function () {
        var _this = this;
        var entity = this.utility.is2016OrGreater ? 'organizations' : 'OrganizationSet';
        this.utility
            .fetch(entity)
            .then(function (c) {
            var settings = {};
            var settingsArray = [];
            if (c.length > 0) {
                settings = c[0];
            }
            for (var s in settings) {
                if (s.indexOf('@') == -1 && s.indexOf('_') == -1) {
                    settingsArray.push({ name: s, value: settings[s] });
                }
            }
            _this.utility.messageExtension(settingsArray, 'Settings');
        })
            .catch(function (err) {
            console.log(err);
        });
    };
    Service.prototype.myRoles = function () {
        var _this = this;
        var resultsArray = [{ cells: ['Name', 'Role Id'] }];
        var attributes = 'RoleId,Name';
        var entity = 'RoleSet';
        var filter = Xrm.Page.context
            .getUserRoles()
            .map(function (x) { return "RoleId eq (guid'" + x + "')"; })
            .join(' or ');
        if (this.utility.is2016OrGreater) {
            entity = 'roles';
            attributes = attributes.toLocaleLowerCase();
            filter = Xrm.Page.context
                .getUserRoles()
                .map(function (x) { return "roleid eq " + x; })
                .join(' or ');
        }
        this.utility
            .fetch(entity, attributes, filter)
            .then(function (results) {
            results.forEach(function (r) {
                resultsArray.push({
                    cells: Object.keys(r)
                        .sort()
                        .filter(function (x) { return !x.startsWith('@') && !x.startsWith('_'); })
                        .map(function (key) { return r[key]; }),
                });
            });
            _this.utility.messageExtension(resultsArray, 'myRoles');
        })
            .catch(function (err) {
            console.log(err);
        });
    };
    Service.prototype.allUserRoles = function () {
        var _this = this;
        var resultsArray = [{ cells: ['Business Unit', 'Role', 'User', 'AD Name'] }];
        this.utility
            .fetch('systemusers', null, null, null, "\n        <fetch>\n          <entity name='systemuser' >\n              <attribute name='domainname' />\n              <attribute name='businessunitid' />\n              <attribute name='fullname' />\n              <filter>\n                  <condition entityname='role' attribute='parentroleid' operator='null' />\n              </filter>\n              <link-entity name='systemuserroles' from='systemuserid' to='systemuserid' link-type='outer' alias='systemuserroles' >\n                  <attribute name='roleid' />\n                  <attribute name='systemuserid' />\n                  <link-entity name='role' from='roleid' to='roleid' link-type='outer' alias='role' >\n                      <attribute name='name' />\n                      <order attribute='name' />\n                  </link-entity>\n              </link-entity>\n          </entity>\n        </fetch>")
            .then(function (entities) {
            console.log(entities);
            var cells = entities.forEach(function (attributes) {
                var roleId = attributes['systemuserroles.roleid'] || 'No Role', roleName = attributes['role.name'] || 'No Role', userId = attributes['systemuserid'], userName = attributes['fullname'];
                resultsArray.push({
                    bu: attributes['_businessunitid_value@OData.Community.Display.V1.FormattedValue'],
                    role: {
                        id: roleId,
                        name: roleName,
                        url: _this.utility.clientUrlForParams + "etn=role&id=" + roleId + "&newWindow=true&pagetype=entityrecord",
                    },
                    user: {
                        id: userId,
                        name: userName,
                        url: _this.utility.clientUrlForParams + "etn=systemuser&id=" + userId + "&newWindow=true&pagetype=entityrecord",
                    },
                    adname: attributes['domainname'],
                });
            });
            _this.utility.messageExtension(resultsArray, 'allUserRoles');
        })
            .catch(function (err) {
            console.log(err);
        });
    };
    Service.prototype.allUsers = function () {
        var _this = this;
        var _a, _b, _c, _d;
        var userId = (_d = (_c = (_b = (_a = this.utility.Xrm) === null || _a === void 0 ? void 0 : _a.Utility) === null || _b === void 0 ? void 0 : _b.getGlobalContext) === null || _c === void 0 ? void 0 : _c.call(_b).getUserId()) !== null && _d !== void 0 ? _d : this.utility.Xrm.Page.context.getUserId();
        this.utility
            .fetch('systemusers', null, null, null, "\n        <fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='true' >\n          <entity name='systemuser' >\n            <attribute name='fullname' />\n            <attribute name='azureactivedirectoryobjectid' />\n            <filter>\n              <condition attribute='islicensed' operator='eq' value='1' />\n              <condition attribute='isdisabled' operator='eq' value='0' />\n              <condition attribute='systemuserid' operator='neq' value='" + userId + "' />              \n            </filter>\n            <order attribute='fullname' descending='false' />\n            <link-entity name='systemuserroles' from='systemuserid' to='systemuserid' visible='false' intersect='true' >\n              <link-entity name='role' from='roleid' to='roleid' alias='r' />\n            </link-entity>\n          </entity>\n        </fetch>")
            .then(function (entities) {
            _this.utility.messageExtension(entities, 'allUsers');
        })
            .catch(function (err) {
            console.log(err);
        });
    };
    Service.prototype.entityMetadata = function () {
        var _this = this;
        this.utility
            .fetch("EntityDefinitions", 'LogicalName,ObjectTypeCode,LogicalCollectionName,ChangeTrackingEnabled,DisplayName')
            .then(function (records) {
            var resultsArray = [
                {
                    cells: [
                        'Entity Logical Name',
                        'Object Type Code',
                        'Logical Collection Name',
                        'Change Tracking Enabled',
                        'Display Name',
                    ],
                },
            ];
            // sort by object type code
            records.sort(function (r1, r2) {
                if (r1.LogicalName > r2.LogicalName)
                    return 1;
                else if (r1.LogicalName < r2.LogicalName)
                    return -1;
                return 0;
            });
            records.forEach(function (r) {
                var _a, _b;
                resultsArray.push({
                    cells: [
                        r.LogicalName,
                        r.ObjectTypeCode,
                        r.LogicalCollectionName,
                        r.ChangeTrackingEnabled,
                        (_b = (_a = r.DisplayName) === null || _a === void 0 ? void 0 : _a.UserLocalizedLabel) === null || _b === void 0 ? void 0 : _b.Label,
                    ],
                });
            });
            _this.utility.messageExtension(resultsArray, 'entityMetadata');
        });
    };
    return Service;
}());



/***/ }),

/***/ "./app/scripts/levelup.extension.ts":
/*!******************************************!*\
  !*** ./app/scripts/levelup.extension.ts ***!
  \******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _inject_levelup_common_utility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inject/levelup.common.utility */ "./app/scripts/inject/levelup.common.utility.ts");
/* harmony import */ var _inject_levelup_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inject/levelup.forms */ "./app/scripts/inject/levelup.forms.ts");
/* harmony import */ var _inject_levelup_servicecalls__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./inject/levelup.servicecalls */ "./app/scripts/inject/levelup.servicecalls.ts");
/* harmony import */ var _inject_levelup_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./inject/levelup.navigation */ "./app/scripts/inject/levelup.navigation.ts");
/* harmony import */ var _inject_levelup_grid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./inject/levelup.grid */ "./app/scripts/inject/levelup.grid.ts");
/// <reference path="../tsd/xrm.d.ts" />
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





window.addEventListener('message', function (event) {
    return __awaiter(this, void 0, void 0, function () {
        var utility, formWindow, formDocument, xrm, source, clientUrl, cleanedClientUrl, clientUrlForParams, contentPanels, message;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    // home.dynamics.com also messaging. Ignore.
                    if (location.origin !== event.origin)
                        return [2 /*return*/];
                    source = event.source;
                    if (!(source.Xrm && event.data.type)) return [3 /*break*/, 3];
                    clientUrl = (source.Xrm.Page.context.getCurrentAppUrl && source.Xrm.Page.context.getCurrentAppUrl()) ||
                        source.Xrm.Page.context.getClientUrl();
                    cleanedClientUrl = !clientUrl.endsWith(Xrm.Page.context.getOrgUniqueName())
                        ? clientUrl
                        : clientUrl.substr(0, clientUrl.lastIndexOf('/'));
                    if (!cleanedClientUrl.startsWith(event.origin))
                        return [2 /*return*/];
                    clientUrlForParams = clientUrl;
                    contentPanels = Array.from(document.querySelectorAll('iframe')).filter(function (d) {
                        return d.style.visibility !== 'hidden';
                    });
                    if (!clientUrl.includes('main.aspx')) {
                        clientUrlForParams += '/main.aspx';
                    }
                    if (source.Xrm.Internal.isUci && Xrm.Internal.isUci()) {
                        formWindow = window;
                        formDocument = document;
                        xrm = window.Xrm;
                        utility = new _inject_levelup_common_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"](formDocument, formWindow, xrm, clientUrl);
                    }
                    else if (contentPanels && contentPanels.length > 0) {
                        formWindow = contentPanels[0].contentWindow;
                        formDocument = contentPanels[0].contentDocument;
                        xrm = formWindow.Xrm;
                        if (!xrm) {
                            formWindow = window;
                            formDocument = document;
                            xrm = window.Xrm;
                        }
                        utility = new _inject_levelup_common_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"](formDocument, formWindow, xrm, clientUrl);
                    }
                    if (!utility.is2016OrGreater) return [3 /*break*/, 2];
                    return [4 /*yield*/, utility.retrieveEnvironmentDetails()];
                case 1:
                    _a.sent();
                    _a.label = 2;
                case 2:
                    if (event.data.category === 'Forms' && !xrm.Page.data) {
                        alert('This command can only be performed in the context of a form');
                        return [2 /*return*/];
                    }
                    try {
                        message = event.data;
                        switch (message.category) {
                            case 'Forms':
                                new _inject_levelup_forms__WEBPACK_IMPORTED_MODULE_1__["Forms"](utility)[message.type]();
                                break;
                            case 'API':
                                new _inject_levelup_servicecalls__WEBPACK_IMPORTED_MODULE_2__["Service"](utility)[message.type]();
                                break;
                            case 'Grid':
                                new _inject_levelup_grid__WEBPACK_IMPORTED_MODULE_4__["Grid"](utility)[message.type]();
                                break;
                            case 'Navigation':
                                new _inject_levelup_navigation__WEBPACK_IMPORTED_MODULE_3__["Navigation"](utility)[message.type]();
                                break;
                        }
                    }
                    catch (e) {
                        console.error(e);
                    }
                    _a.label = 3;
                case 3: return [2 /*return*/];
            }
        });
    });
});


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(/*! setimmediate */ "./node_modules/setimmediate/setImmediate.js");
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/xrm-webapi-client/dist/WebApiClient.min.js":
/*!*****************************************************************!*\
  !*** ./node_modules/xrm-webapi-client/dist/WebApiClient.min.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, setImmediate) {/*! @preserve
* MIT License
*
* Copyright (c) 2016 Florian Krönert
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
*/

/* @preserve
* The Bluebird license is included below as Terser keeps removing it (https://github.com/terser/terser/issues/575)
*/

/* @preserve
* The MIT License (MIT)
* 
* Copyright (c) 2013-2018 Petka Antonov
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
* 
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
* */
!function(e,t){ true?module.exports=t():undefined}(this,(function(){return(()=>{var e={624:(e,t,r)=>{var n;n=function(){var e,t,n;return function e(t,r,n){function i(o,s){if(!r[o]){if(!t[o]){var l="function"==typeof _dereq_&&_dereq_;if(!s&&l)return l(o,!0);if(a)return a(o,!0);var u=new Error("Cannot find module '"+o+"'");throw u.code="MODULE_NOT_FOUND",u}var c=r[o]={exports:{}};t[o][0].call(c.exports,(function(e){var r=t[o][1][e];return i(r||e)}),c,c.exports,e,t,r,n)}return r[o].exports}for(var a="function"==typeof _dereq_&&_dereq_,o=0;o<n.length;o++)i(n[o]);return i}({1:[function(e,t,r){"use strict";t.exports=function(e){var t=e._SomePromiseArray;function r(e){var r=new t(e),n=r.promise();return r.setHowMany(1),r.setUnwrap(),r.init(),n}e.any=function(e){return r(e)},e.prototype.any=function(){return r(this)}}},{}],2:[function(e,t,r){"use strict";var n;try{throw new Error}catch(e){n=e}var i=e("./schedule"),a=e("./queue");function o(){this._customScheduler=!1,this._isTickUsed=!1,this._lateQueue=new a(16),this._normalQueue=new a(16),this._haveDrainedQueues=!1;var e=this;this.drainQueues=function(){e._drainQueues()},this._schedule=i}function s(e){for(;e.length()>0;)l(e)}function l(e){var t=e.shift();if("function"!=typeof t)t._settlePromises();else{var r=e.shift(),n=e.shift();t.call(r,n)}}o.prototype.setScheduler=function(e){var t=this._schedule;return this._schedule=e,this._customScheduler=!0,t},o.prototype.hasCustomScheduler=function(){return this._customScheduler},o.prototype.haveItemsQueued=function(){return this._isTickUsed||this._haveDrainedQueues},o.prototype.fatalError=function(e,t){t?(process.stderr.write("Fatal "+(e instanceof Error?e.stack:e)+"\n"),process.exit(2)):this.throwLater(e)},o.prototype.throwLater=function(e,t){if(1===arguments.length&&(t=e,e=function(){throw t}),"undefined"!=typeof setTimeout)setTimeout((function(){e(t)}),0);else try{this._schedule((function(){e(t)}))}catch(e){throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n")}},o.prototype.invokeLater=function(e,t,r){this._lateQueue.push(e,t,r),this._queueTick()},o.prototype.invoke=function(e,t,r){this._normalQueue.push(e,t,r),this._queueTick()},o.prototype.settlePromises=function(e){this._normalQueue._pushOne(e),this._queueTick()},o.prototype._drainQueues=function(){s(this._normalQueue),this._reset(),this._haveDrainedQueues=!0,s(this._lateQueue)},o.prototype._queueTick=function(){this._isTickUsed||(this._isTickUsed=!0,this._schedule(this.drainQueues))},o.prototype._reset=function(){this._isTickUsed=!1},t.exports=o,t.exports.firstLineError=n},{"./queue":26,"./schedule":29}],3:[function(e,t,r){"use strict";t.exports=function(e,t,r,n){var i=!1,a=function(e,t){this._reject(t)},o=function(e,t){t.promiseRejectionQueued=!0,t.bindingPromise._then(a,a,null,this,e)},s=function(e,t){0==(50397184&this._bitField)&&this._resolveCallback(t.target)},l=function(e,t){t.promiseRejectionQueued||this._reject(e)};e.prototype.bind=function(a){i||(i=!0,e.prototype._propagateFrom=n.propagateFromFunction(),e.prototype._boundValue=n.boundValueFunction());var u=r(a),c=new e(t);c._propagateFrom(this,1);var p=this._target();if(c._setBoundTo(u),u instanceof e){var h={promiseRejectionQueued:!1,promise:c,target:p,bindingPromise:u};p._then(t,o,void 0,c,h),u._then(s,l,void 0,c,h),c._setOnCancel(u)}else c._resolveCallback(p);return c},e.prototype._setBoundTo=function(e){void 0!==e?(this._bitField=2097152|this._bitField,this._boundTo=e):this._bitField=-2097153&this._bitField},e.prototype._isBound=function(){return 2097152==(2097152&this._bitField)},e.bind=function(t,r){return e.resolve(r).bind(t)}}},{}],4:[function(e,t,r){"use strict";var n;"undefined"!=typeof Promise&&(n=Promise);var i=e("./promise")();i.noConflict=function(){try{Promise===i&&(Promise=n)}catch(e){}return i},t.exports=i},{"./promise":22}],5:[function(e,t,r){"use strict";var n=Object.create;if(n){var i=n(null),a=n(null);i[" size"]=a[" size"]=0}t.exports=function(t){var r=e("./util"),n=r.canEvaluate;function i(e){var n=function(e,n){var i;if(null!=e&&(i=e[n]),"function"!=typeof i){var a="Object "+r.classString(e)+" has no method '"+r.toString(n)+"'";throw new t.TypeError(a)}return i}(e,this.pop());return n.apply(e,this)}function a(e){return e[this]}function o(e){var t=+this;return t<0&&(t=Math.max(0,t+e.length)),e[t]}r.isIdentifier,t.prototype.call=function(e){var t=[].slice.call(arguments,1);return t.push(e),this._then(i,void 0,void 0,t,void 0)},t.prototype.get=function(e){var t;if("number"==typeof e)t=o;else if(n){var r=(void 0)(e);t=null!==r?r:a}else t=a;return this._then(t,void 0,void 0,e,void 0)}}},{"./util":36}],6:[function(e,t,r){"use strict";t.exports=function(t,r,n,i){var a=e("./util"),o=a.tryCatch,s=a.errorObj,l=t._async;t.prototype.break=t.prototype.cancel=function(){if(!i.cancellation())return this._warn("cancellation is disabled");for(var e=this,t=e;e._isCancellable();){if(!e._cancelBy(t)){t._isFollowing()?t._followee().cancel():t._cancelBranched();break}var r=e._cancellationParent;if(null==r||!r._isCancellable()){e._isFollowing()?e._followee().cancel():e._cancelBranched();break}e._isFollowing()&&e._followee().cancel(),e._setWillBeCancelled(),t=e,e=r}},t.prototype._branchHasCancelled=function(){this._branchesRemainingToCancel--},t.prototype._enoughBranchesHaveCancelled=function(){return void 0===this._branchesRemainingToCancel||this._branchesRemainingToCancel<=0},t.prototype._cancelBy=function(e){return e===this?(this._branchesRemainingToCancel=0,this._invokeOnCancel(),!0):(this._branchHasCancelled(),!!this._enoughBranchesHaveCancelled()&&(this._invokeOnCancel(),!0))},t.prototype._cancelBranched=function(){this._enoughBranchesHaveCancelled()&&this._cancel()},t.prototype._cancel=function(){this._isCancellable()&&(this._setCancelled(),l.invoke(this._cancelPromises,this,void 0))},t.prototype._cancelPromises=function(){this._length()>0&&this._settlePromises()},t.prototype._unsetOnCancel=function(){this._onCancelField=void 0},t.prototype._isCancellable=function(){return this.isPending()&&!this._isCancelled()},t.prototype.isCancellable=function(){return this.isPending()&&!this.isCancelled()},t.prototype._doInvokeOnCancel=function(e,t){if(a.isArray(e))for(var r=0;r<e.length;++r)this._doInvokeOnCancel(e[r],t);else if(void 0!==e)if("function"==typeof e){if(!t){var n=o(e).call(this._boundValue());n===s&&(this._attachExtraTrace(n.e),l.throwLater(n.e))}}else e._resultCancelled(this)},t.prototype._invokeOnCancel=function(){var e=this._onCancel();this._unsetOnCancel(),l.invoke(this._doInvokeOnCancel,this,e)},t.prototype._invokeInternalOnCancel=function(){this._isCancellable()&&(this._doInvokeOnCancel(this._onCancel(),!0),this._unsetOnCancel())},t.prototype._resultCancelled=function(){this.cancel()}}},{"./util":36}],7:[function(e,t,r){"use strict";t.exports=function(t){var r=e("./util"),n=e("./es5").keys,i=r.tryCatch,a=r.errorObj;return function(e,o,s){return function(l){var u=s._boundValue();e:for(var c=0;c<e.length;++c){var p=e[c];if(p===Error||null!=p&&p.prototype instanceof Error){if(l instanceof p)return i(o).call(u,l)}else if("function"==typeof p){var h=i(p).call(u,l);if(h===a)return h;if(h)return i(o).call(u,l)}else if(r.isObject(l)){for(var v=n(p),d=0;d<v.length;++d){var f=v[d];if(p[f]!=l[f])continue e}return i(o).call(u,l)}}return t}}}},{"./es5":13,"./util":36}],8:[function(e,t,r){"use strict";t.exports=function(e){var t=!1,r=[];function n(){this._trace=new n.CapturedTrace(i())}function i(){var e=r.length-1;if(e>=0)return r[e]}return e.prototype._promiseCreated=function(){},e.prototype._pushContext=function(){},e.prototype._popContext=function(){return null},e._peekContext=e.prototype._peekContext=function(){},n.prototype._pushContext=function(){void 0!==this._trace&&(this._trace._promiseCreated=null,r.push(this._trace))},n.prototype._popContext=function(){if(void 0!==this._trace){var e=r.pop(),t=e._promiseCreated;return e._promiseCreated=null,t}return null},n.CapturedTrace=null,n.create=function(){if(t)return new n},n.deactivateLongStackTraces=function(){},n.activateLongStackTraces=function(){var r=e.prototype._pushContext,a=e.prototype._popContext,o=e._peekContext,s=e.prototype._peekContext,l=e.prototype._promiseCreated;n.deactivateLongStackTraces=function(){e.prototype._pushContext=r,e.prototype._popContext=a,e._peekContext=o,e.prototype._peekContext=s,e.prototype._promiseCreated=l,t=!1},t=!0,e.prototype._pushContext=n.prototype._pushContext,e.prototype._popContext=n.prototype._popContext,e._peekContext=e.prototype._peekContext=i,e.prototype._promiseCreated=function(){var e=this._peekContext();e&&null==e._promiseCreated&&(e._promiseCreated=this)}},n}},{}],9:[function(e,t,r){"use strict";t.exports=function(t,r,n,i){var a,o,s,l,u=t._async,c=e("./errors").Warning,p=e("./util"),h=e("./es5"),v=p.canAttachTrace,d=/[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/,f=/\((?:timers\.js):\d+:\d+\)/,b=/[\/<\(](.+?):(\d+):(\d+)\)?\s*$/,m=null,y=null,_=!1,w=!(0==p.env("BLUEBIRD_DEBUG")),R=!(0==p.env("BLUEBIRD_WARNINGS")||!w&&!p.env("BLUEBIRD_WARNINGS")),g=!(0==p.env("BLUEBIRD_LONG_STACK_TRACES")||!w&&!p.env("BLUEBIRD_LONG_STACK_TRACES")),O=0!=p.env("BLUEBIRD_W_FORGOTTEN_RETURN")&&(R||!!p.env("BLUEBIRD_W_FORGOTTEN_RETURN"));!function(){var e=[];function r(){for(var t=0;t<e.length;++t)e[t]._notifyUnhandledRejection();n()}function n(){e.length=0}l=function(t){e.push(t),setTimeout(r,1)},h.defineProperty(t,"_unhandledRejectionCheck",{value:r}),h.defineProperty(t,"_unhandledRejectionClear",{value:n})}(),t.prototype.suppressUnhandledRejections=function(){var e=this._target();e._bitField=-1048577&e._bitField|524288},t.prototype._ensurePossibleRejectionHandled=function(){0==(524288&this._bitField)&&(this._setRejectionIsUnhandled(),l(this))},t.prototype._notifyUnhandledRejectionIsHandled=function(){X("rejectionHandled",a,void 0,this)},t.prototype._setReturnedNonUndefined=function(){this._bitField=268435456|this._bitField},t.prototype._returnedNonUndefined=function(){return 0!=(268435456&this._bitField)},t.prototype._notifyUnhandledRejection=function(){if(this._isRejectionUnhandled()){var e=this._settledValue();this._setUnhandledRejectionIsNotified(),X("unhandledRejection",o,e,this)}},t.prototype._setUnhandledRejectionIsNotified=function(){this._bitField=262144|this._bitField},t.prototype._unsetUnhandledRejectionIsNotified=function(){this._bitField=-262145&this._bitField},t.prototype._isUnhandledRejectionNotified=function(){return(262144&this._bitField)>0},t.prototype._setRejectionIsUnhandled=function(){this._bitField=1048576|this._bitField},t.prototype._unsetRejectionIsUnhandled=function(){this._bitField=-1048577&this._bitField,this._isUnhandledRejectionNotified()&&(this._unsetUnhandledRejectionIsNotified(),this._notifyUnhandledRejectionIsHandled())},t.prototype._isRejectionUnhandled=function(){return(1048576&this._bitField)>0},t.prototype._warn=function(e,t,r){return V(e,t,r||this)},t.onPossiblyUnhandledRejection=function(e){var r=t._getContext();o=p.contextBind(r,e)},t.onUnhandledRejectionHandled=function(e){var r=t._getContext();a=p.contextBind(r,e)};var q=function(){};t.longStackTraces=function(){if(u.haveItemsQueued()&&!te.longStackTraces)throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");if(!te.longStackTraces&&$()){var e=t.prototype._captureStackTrace,n=t.prototype._attachExtraTrace,i=t.prototype._dereferenceTrace;te.longStackTraces=!0,q=function(){if(u.haveItemsQueued()&&!te.longStackTraces)throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");t.prototype._captureStackTrace=e,t.prototype._attachExtraTrace=n,t.prototype._dereferenceTrace=i,r.deactivateLongStackTraces(),te.longStackTraces=!1},t.prototype._captureStackTrace=U,t.prototype._attachExtraTrace=B,t.prototype._dereferenceTrace=M,r.activateLongStackTraces()}},t.hasLongStackTraces=function(){return te.longStackTraces&&$()};var T={unhandledrejection:{before:function(){var e=p.global.onunhandledrejection;return p.global.onunhandledrejection=null,e},after:function(e){p.global.onunhandledrejection=e}},rejectionhandled:{before:function(){var e=p.global.onrejectionhandled;return p.global.onrejectionhandled=null,e},after:function(e){p.global.onrejectionhandled=e}}},j=function(){var e=function(e,t){if(!e)return!p.global.dispatchEvent(t);var r;try{return r=e.before(),!p.global.dispatchEvent(t)}finally{e.after(r)}};try{if("function"==typeof CustomEvent){var t=new CustomEvent("CustomEvent");return p.global.dispatchEvent(t),function(t,r){t=t.toLowerCase();var n=new CustomEvent(t,{detail:r,cancelable:!0});return h.defineProperty(n,"promise",{value:r.promise}),h.defineProperty(n,"reason",{value:r.reason}),e(T[t],n)}}return"function"==typeof Event?(t=new Event("CustomEvent"),p.global.dispatchEvent(t),function(t,r){t=t.toLowerCase();var n=new Event(t,{cancelable:!0});return n.detail=r,h.defineProperty(n,"promise",{value:r.promise}),h.defineProperty(n,"reason",{value:r.reason}),e(T[t],n)}):((t=document.createEvent("CustomEvent")).initCustomEvent("testingtheevent",!1,!0,{}),p.global.dispatchEvent(t),function(t,r){t=t.toLowerCase();var n=document.createEvent("CustomEvent");return n.initCustomEvent(t,!1,!0,r),e(T[t],n)})}catch(e){}return function(){return!1}}(),S=p.isNode?function(){return process.emit.apply(process,arguments)}:p.global?function(e){var t="on"+e.toLowerCase(),r=p.global[t];return!!r&&(r.apply(p.global,[].slice.call(arguments,1)),!0)}:function(){return!1};function P(e,t){return{promise:t}}var C={promiseCreated:P,promiseFulfilled:P,promiseRejected:P,promiseResolved:P,promiseCancelled:P,promiseChained:function(e,t,r){return{promise:t,child:r}},warning:function(e,t){return{warning:t}},unhandledRejection:function(e,t,r){return{reason:t,promise:r}},rejectionHandled:P},E=function(e){var t=!1;try{t=S.apply(null,arguments)}catch(e){u.throwLater(e),t=!0}var r=!1;try{r=j(e,C[e].apply(null,arguments))}catch(e){u.throwLater(e),r=!0}return r||t};function k(){return!1}function F(e,t,r){var n=this;try{e(t,r,(function(e){if("function"!=typeof e)throw new TypeError("onCancel must be a function, got: "+p.toString(e));n._attachCancellationCallback(e)}))}catch(e){return e}}function x(e){if(!this._isCancellable())return this;var t=this._onCancel();void 0!==t?p.isArray(t)?t.push(e):this._setOnCancel([t,e]):this._setOnCancel(e)}function A(){return this._onCancelField}function G(e){this._onCancelField=e}function I(){this._cancellationParent=void 0,this._onCancelField=void 0}function D(e,t){if(0!=(1&t)){this._cancellationParent=e;var r=e._branchesRemainingToCancel;void 0===r&&(r=0),e._branchesRemainingToCancel=r+1}0!=(2&t)&&e._isBound()&&this._setBoundTo(e._boundTo)}t.config=function(e){if("longStackTraces"in(e=Object(e))&&(e.longStackTraces?t.longStackTraces():!e.longStackTraces&&t.hasLongStackTraces()&&q()),"warnings"in e){var r=e.warnings;te.warnings=!!r,O=te.warnings,p.isObject(r)&&"wForgottenReturn"in r&&(O=!!r.wForgottenReturn)}if("cancellation"in e&&e.cancellation&&!te.cancellation){if(u.haveItemsQueued())throw new Error("cannot enable cancellation after promises are in use");t.prototype._clearCancellationData=I,t.prototype._propagateFrom=D,t.prototype._onCancel=A,t.prototype._setOnCancel=G,t.prototype._attachCancellationCallback=x,t.prototype._execute=F,N=D,te.cancellation=!0}if("monitoring"in e&&(e.monitoring&&!te.monitoring?(te.monitoring=!0,t.prototype._fireEvent=E):!e.monitoring&&te.monitoring&&(te.monitoring=!1,t.prototype._fireEvent=k)),"asyncHooks"in e&&p.nodeSupportsAsyncResource){var a=te.asyncHooks,o=!!e.asyncHooks;a!==o&&(te.asyncHooks=o,o?n():i())}return t},t.prototype._fireEvent=k,t.prototype._execute=function(e,t,r){try{e(t,r)}catch(e){return e}},t.prototype._onCancel=function(){},t.prototype._setOnCancel=function(e){},t.prototype._attachCancellationCallback=function(e){},t.prototype._captureStackTrace=function(){},t.prototype._attachExtraTrace=function(){},t.prototype._dereferenceTrace=function(){},t.prototype._clearCancellationData=function(){},t.prototype._propagateFrom=function(e,t){};var N=function(e,t){0!=(2&t)&&e._isBound()&&this._setBoundTo(e._boundTo)};function L(){var e=this._boundTo;return void 0!==e&&e instanceof t?e.isFulfilled()?e.value():void 0:e}function U(){this._trace=new Y(this._peekContext())}function B(e,t){if(v(e)){var r=this._trace;if(void 0!==r&&t&&(r=r._parent),void 0!==r)r.attachExtraTrace(e);else if(!e.__stackCleaned__){var n=Q(e);p.notEnumerableProp(e,"stack",n.message+"\n"+n.stack.join("\n")),p.notEnumerableProp(e,"__stackCleaned__",!0)}}}function M(){this._trace=void 0}function V(e,r,n){if(te.warnings){var i,a=new c(e);if(r)n._attachExtraTrace(a);else if(te.longStackTraces&&(i=t._peekContext()))i.attachExtraTrace(a);else{var o=Q(a);a.stack=o.message+"\n"+o.stack.join("\n")}E("warning",a)||K(a,"",!0)}}function H(e){for(var t=[],r=0;r<e.length;++r){var n=e[r],i="    (No stack trace)"===n||m.test(n),a=i&&z(n);i&&!a&&(_&&" "!==n.charAt(0)&&(n="    "+n),t.push(n))}return t}function Q(e){var t=e.stack,r=e.toString();return t="string"==typeof t&&t.length>0?function(e){for(var t=e.stack.replace(/\s+$/g,"").split("\n"),r=0;r<t.length;++r){var n=t[r];if("    (No stack trace)"===n||m.test(n))break}return r>0&&"SyntaxError"!=e.name&&(t=t.slice(r)),t}(e):["    (No stack trace)"],{message:r,stack:"SyntaxError"==e.name?t:H(t)}}function K(e,t,r){if("undefined"!=typeof console){var n;if(p.isObject(e)){var i=e.stack;n=t+y(i,e)}else n=t+String(e);"function"==typeof s?s(n,r):"function"!=typeof console.log&&"object"!=typeof console.log||console.log(n)}}function X(e,t,r,n){var i=!1;try{"function"==typeof t&&(i=!0,"rejectionHandled"===e?t(n):t(r,n))}catch(e){u.throwLater(e)}"unhandledRejection"===e?E(e,r,n)||i||K(r,"Unhandled rejection "):E(e,n)}function W(e){var t;if("function"==typeof e)t="[function "+(e.name||"anonymous")+"]";else{if(t=e&&"function"==typeof e.toString?e.toString():p.toString(e),/\[object [a-zA-Z0-9$_]+\]/.test(t))try{t=JSON.stringify(e)}catch(e){}0===t.length&&(t="(empty array)")}return"(<"+function(e){var t=41;return e.length<t?e:e.substr(0,t-3)+"..."}(t)+">, no stack trace)"}function $(){return"function"==typeof ee}var z=function(){return!1},J=/[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;function Z(e){var t=e.match(J);if(t)return{fileName:t[1],line:parseInt(t[2],10)}}function Y(e){this._parent=e,this._promisesCreated=0;var t=this._length=1+(void 0===e?0:e._length);ee(this,Y),t>32&&this.uncycle()}p.inherits(Y,Error),r.CapturedTrace=Y,Y.prototype.uncycle=function(){var e=this._length;if(!(e<2)){for(var t=[],r={},n=0,i=this;void 0!==i;++n)t.push(i),i=i._parent;for(n=(e=this._length=n)-1;n>=0;--n){var a=t[n].stack;void 0===r[a]&&(r[a]=n)}for(n=0;n<e;++n){var o=r[t[n].stack];if(void 0!==o&&o!==n){o>0&&(t[o-1]._parent=void 0,t[o-1]._length=1),t[n]._parent=void 0,t[n]._length=1;var s=n>0?t[n-1]:this;o<e-1?(s._parent=t[o+1],s._parent.uncycle(),s._length=s._parent._length+1):(s._parent=void 0,s._length=1);for(var l=s._length+1,u=n-2;u>=0;--u)t[u]._length=l,l++;return}}}},Y.prototype.attachExtraTrace=function(e){if(!e.__stackCleaned__){this.uncycle();for(var t=Q(e),r=t.message,n=[t.stack],i=this;void 0!==i;)n.push(H(i.stack.split("\n"))),i=i._parent;!function(e){for(var t=e[0],r=1;r<e.length;++r){for(var n=e[r],i=t.length-1,a=t[i],o=-1,s=n.length-1;s>=0;--s)if(n[s]===a){o=s;break}for(s=o;s>=0;--s){var l=n[s];if(t[i]!==l)break;t.pop(),i--}t=n}}(n),function(e){for(var t=0;t<e.length;++t)(0===e[t].length||t+1<e.length&&e[t][0]===e[t+1][0])&&(e.splice(t,1),t--)}(n),p.notEnumerableProp(e,"stack",function(e,t){for(var r=0;r<t.length-1;++r)t[r].push("From previous event:"),t[r]=t[r].join("\n");return r<t.length&&(t[r]=t[r].join("\n")),e+"\n"+t.join("\n")}(r,n)),p.notEnumerableProp(e,"__stackCleaned__",!0)}};var ee=function(){var e=/^\s*at\s*/,t=function(e,t){return"string"==typeof e?e:void 0!==t.name&&void 0!==t.message?t.toString():W(t)};if("number"==typeof Error.stackTraceLimit&&"function"==typeof Error.captureStackTrace){Error.stackTraceLimit+=6,m=e,y=t;var r=Error.captureStackTrace;return z=function(e){return d.test(e)},function(e,t){Error.stackTraceLimit+=6,r(e,t),Error.stackTraceLimit-=6}}var n,i=new Error;if("string"==typeof i.stack&&i.stack.split("\n")[0].indexOf("stackDetection@")>=0)return m=/@/,y=t,_=!0,function(e){e.stack=(new Error).stack};try{throw new Error}catch(e){n="stack"in e}return!("stack"in i)&&n&&"number"==typeof Error.stackTraceLimit?(m=e,y=t,function(e){Error.stackTraceLimit+=6;try{throw new Error}catch(t){e.stack=t.stack}Error.stackTraceLimit-=6}):(y=function(e,t){return"string"==typeof e?e:"object"!=typeof t&&"function"!=typeof t||void 0===t.name||void 0===t.message?W(t):t.toString()},null)}();"undefined"!=typeof console&&void 0!==console.warn&&(s=function(e){console.warn(e)},p.isNode&&process.stderr.isTTY?s=function(e,t){var r=t?"[33m":"[31m";console.warn(r+e+"[0m\n")}:p.isNode||"string"!=typeof(new Error).stack||(s=function(e,t){console.warn("%c"+e,t?"color: darkorange":"color: red")}));var te={warnings:R,longStackTraces:!1,cancellation:!1,monitoring:!1,asyncHooks:!1};return g&&t.longStackTraces(),{asyncHooks:function(){return te.asyncHooks},longStackTraces:function(){return te.longStackTraces},warnings:function(){return te.warnings},cancellation:function(){return te.cancellation},monitoring:function(){return te.monitoring},propagateFromFunction:function(){return N},boundValueFunction:function(){return L},checkForgottenReturns:function(e,t,r,n,i){if(void 0===e&&null!==t&&O){if(void 0!==i&&i._returnedNonUndefined())return;if(0==(65535&n._bitField))return;r&&(r+=" ");var a="",o="";if(t._trace){for(var s=t._trace.stack.split("\n"),l=H(s),u=l.length-1;u>=0;--u){var c=l[u];if(!f.test(c)){var p=c.match(b);p&&(a="at "+p[1]+":"+p[2]+":"+p[3]+" ");break}}if(l.length>0){var h=l[0];for(u=0;u<s.length;++u)if(s[u]===h){u>0&&(o="\n"+s[u-1]);break}}}var v="a promise was created in a "+r+"handler "+a+"but was not returned from it, see http://goo.gl/rRqMUw"+o;n._warn(v,!0,t)}},setBounds:function(e,t){if($()){for(var r,n,i=(e.stack||"").split("\n"),a=(t.stack||"").split("\n"),o=-1,s=-1,l=0;l<i.length;++l)if(u=Z(i[l])){r=u.fileName,o=u.line;break}for(l=0;l<a.length;++l){var u;if(u=Z(a[l])){n=u.fileName,s=u.line;break}}o<0||s<0||!r||!n||r!==n||o>=s||(z=function(e){if(d.test(e))return!0;var t=Z(e);return!!(t&&t.fileName===r&&o<=t.line&&t.line<=s)})}},warn:V,deprecated:function(e,t){var r=e+" is deprecated and will be removed in a future version.";return t&&(r+=" Use "+t+" instead."),V(r)},CapturedTrace:Y,fireDomEvent:j,fireGlobalEvent:S}}},{"./errors":12,"./es5":13,"./util":36}],10:[function(e,t,r){"use strict";t.exports=function(e){function t(){return this.value}function r(){throw this.reason}e.prototype.return=e.prototype.thenReturn=function(r){return r instanceof e&&r.suppressUnhandledRejections(),this._then(t,void 0,void 0,{value:r},void 0)},e.prototype.throw=e.prototype.thenThrow=function(e){return this._then(r,void 0,void 0,{reason:e},void 0)},e.prototype.catchThrow=function(e){if(arguments.length<=1)return this._then(void 0,r,void 0,{reason:e},void 0);var t=arguments[1],n=function(){throw t};return this.caught(e,n)},e.prototype.catchReturn=function(r){if(arguments.length<=1)return r instanceof e&&r.suppressUnhandledRejections(),this._then(void 0,t,void 0,{value:r},void 0);var n=arguments[1];n instanceof e&&n.suppressUnhandledRejections();var i=function(){return n};return this.caught(r,i)}}},{}],11:[function(e,t,r){"use strict";t.exports=function(e,t){var r=e.reduce,n=e.all;function i(){return n(this)}e.prototype.each=function(e){return r(this,e,t,0)._then(i,void 0,void 0,this,void 0)},e.prototype.mapSeries=function(e){return r(this,e,t,t)},e.each=function(e,n){return r(e,n,t,0)._then(i,void 0,void 0,e,void 0)},e.mapSeries=function(e,n){return r(e,n,t,t)}}},{}],12:[function(e,t,r){"use strict";var n,i,a=e("./es5"),o=a.freeze,s=e("./util"),l=s.inherits,u=s.notEnumerableProp;function c(e,t){function r(n){if(!(this instanceof r))return new r(n);u(this,"message","string"==typeof n?n:t),u(this,"name",e),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):Error.call(this)}return l(r,Error),r}var p=c("Warning","warning"),h=c("CancellationError","cancellation error"),v=c("TimeoutError","timeout error"),d=c("AggregateError","aggregate error");try{n=TypeError,i=RangeError}catch(e){n=c("TypeError","type error"),i=c("RangeError","range error")}for(var f="join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse".split(" "),b=0;b<f.length;++b)"function"==typeof Array.prototype[f[b]]&&(d.prototype[f[b]]=Array.prototype[f[b]]);a.defineProperty(d.prototype,"length",{value:0,configurable:!1,writable:!0,enumerable:!0}),d.prototype.isOperational=!0;var m=0;function y(e){if(!(this instanceof y))return new y(e);u(this,"name","OperationalError"),u(this,"message",e),this.cause=e,this.isOperational=!0,e instanceof Error?(u(this,"message",e.message),u(this,"stack",e.stack)):Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}d.prototype.toString=function(){var e=Array(4*m+1).join(" "),t="\n"+e+"AggregateError of:\n";m++,e=Array(4*m+1).join(" ");for(var r=0;r<this.length;++r){for(var n=this[r]===this?"[Circular AggregateError]":this[r]+"",i=n.split("\n"),a=0;a<i.length;++a)i[a]=e+i[a];t+=(n=i.join("\n"))+"\n"}return m--,t},l(y,Error);var _=Error.__BluebirdErrorTypes__;_||(_=o({CancellationError:h,TimeoutError:v,OperationalError:y,RejectionError:y,AggregateError:d}),a.defineProperty(Error,"__BluebirdErrorTypes__",{value:_,writable:!1,enumerable:!1,configurable:!1})),t.exports={Error,TypeError:n,RangeError:i,CancellationError:_.CancellationError,OperationalError:_.OperationalError,TimeoutError:_.TimeoutError,AggregateError:_.AggregateError,Warning:p}},{"./es5":13,"./util":36}],13:[function(e,t,r){var n=function(){"use strict";return void 0===this}();if(n)t.exports={freeze:Object.freeze,defineProperty:Object.defineProperty,getDescriptor:Object.getOwnPropertyDescriptor,keys:Object.keys,names:Object.getOwnPropertyNames,getPrototypeOf:Object.getPrototypeOf,isArray:Array.isArray,isES5:n,propertyIsWritable:function(e,t){var r=Object.getOwnPropertyDescriptor(e,t);return!(r&&!r.writable&&!r.set)}};else{var i={}.hasOwnProperty,a={}.toString,o={}.constructor.prototype,s=function(e){var t=[];for(var r in e)i.call(e,r)&&t.push(r);return t};t.exports={isArray:function(e){try{return"[object Array]"===a.call(e)}catch(e){return!1}},keys:s,names:s,defineProperty:function(e,t,r){return e[t]=r.value,e},getDescriptor:function(e,t){return{value:e[t]}},freeze:function(e){return e},getPrototypeOf:function(e){try{return Object(e).constructor.prototype}catch(e){return o}},isES5:n,propertyIsWritable:function(){return!0}}}},{}],14:[function(e,t,r){"use strict";t.exports=function(e,t){var r=e.map;e.prototype.filter=function(e,n){return r(this,e,n,t)},e.filter=function(e,n,i){return r(e,n,i,t)}}},{}],15:[function(e,t,r){"use strict";t.exports=function(t,r,n){var i=e("./util"),a=t.CancellationError,o=i.errorObj,s=e("./catch_filter")(n);function l(e,t,r){this.promise=e,this.type=t,this.handler=r,this.called=!1,this.cancelPromise=null}function u(e){this.finallyHandler=e}function c(e,t){return null!=e.cancelPromise&&(arguments.length>1?e.cancelPromise._reject(t):e.cancelPromise._cancel(),e.cancelPromise=null,!0)}function p(){return v.call(this,this.promise._target()._settledValue())}function h(e){if(!c(this,e))return o.e=e,o}function v(e){var i=this.promise,s=this.handler;if(!this.called){this.called=!0;var l=this.isFinallyHandler()?s.call(i._boundValue()):s.call(i._boundValue(),e);if(l===n)return l;if(void 0!==l){i._setReturnedNonUndefined();var v=r(l,i);if(v instanceof t){if(null!=this.cancelPromise){if(v._isCancelled()){var d=new a("late cancellation observer");return i._attachExtraTrace(d),o.e=d,o}v.isPending()&&v._attachCancellationCallback(new u(this))}return v._then(p,h,void 0,this,void 0)}}}return i.isRejected()?(c(this),o.e=e,o):(c(this),e)}return l.prototype.isFinallyHandler=function(){return 0===this.type},u.prototype._resultCancelled=function(){c(this.finallyHandler)},t.prototype._passThrough=function(e,t,r,n){return"function"!=typeof e?this.then():this._then(r,n,void 0,new l(this,t,e),void 0)},t.prototype.lastly=t.prototype.finally=function(e){return this._passThrough(e,0,v,v)},t.prototype.tap=function(e){return this._passThrough(e,1,v)},t.prototype.tapCatch=function(e){var r=arguments.length;if(1===r)return this._passThrough(e,1,void 0,v);var n,a=new Array(r-1),o=0;for(n=0;n<r-1;++n){var l=arguments[n];if(!i.isObject(l))return t.reject(new TypeError("tapCatch statement predicate: expecting an object but got "+i.classString(l)));a[o++]=l}a.length=o;var u=arguments[n];return this._passThrough(s(a,u,this),1,void 0,v)},l}},{"./catch_filter":7,"./util":36}],16:[function(e,t,r){"use strict";t.exports=function(t,r,n,i,a,o){var s=e("./errors").TypeError,l=e("./util"),u=l.errorObj,c=l.tryCatch,p=[];function h(e,r,i,a){if(o.cancellation()){var s=new t(n),l=this._finallyPromise=new t(n);this._promise=s.lastly((function(){return l})),s._captureStackTrace(),s._setOnCancel(this)}else(this._promise=new t(n))._captureStackTrace();this._stack=a,this._generatorFunction=e,this._receiver=r,this._generator=void 0,this._yieldHandlers="function"==typeof i?[i].concat(p):p,this._yieldedPromise=null,this._cancellationPhase=!1}l.inherits(h,a),h.prototype._isResolved=function(){return null===this._promise},h.prototype._cleanup=function(){this._promise=this._generator=null,o.cancellation()&&null!==this._finallyPromise&&(this._finallyPromise._fulfill(),this._finallyPromise=null)},h.prototype._promiseCancelled=function(){if(!this._isResolved()){var e;if(void 0!==this._generator.return)this._promise._pushContext(),e=c(this._generator.return).call(this._generator,void 0),this._promise._popContext();else{var r=new t.CancellationError("generator .return() sentinel");t.coroutine.returnSentinel=r,this._promise._attachExtraTrace(r),this._promise._pushContext(),e=c(this._generator.throw).call(this._generator,r),this._promise._popContext()}this._cancellationPhase=!0,this._yieldedPromise=null,this._continue(e)}},h.prototype._promiseFulfilled=function(e){this._yieldedPromise=null,this._promise._pushContext();var t=c(this._generator.next).call(this._generator,e);this._promise._popContext(),this._continue(t)},h.prototype._promiseRejected=function(e){this._yieldedPromise=null,this._promise._attachExtraTrace(e),this._promise._pushContext();var t=c(this._generator.throw).call(this._generator,e);this._promise._popContext(),this._continue(t)},h.prototype._resultCancelled=function(){if(this._yieldedPromise instanceof t){var e=this._yieldedPromise;this._yieldedPromise=null,e.cancel()}},h.prototype.promise=function(){return this._promise},h.prototype._run=function(){this._generator=this._generatorFunction.call(this._receiver),this._receiver=this._generatorFunction=void 0,this._promiseFulfilled(void 0)},h.prototype._continue=function(e){var r=this._promise;if(e===u)return this._cleanup(),this._cancellationPhase?r.cancel():r._rejectCallback(e.e,!1);var n=e.value;if(!0===e.done)return this._cleanup(),this._cancellationPhase?r.cancel():r._resolveCallback(n);var a=i(n,this._promise);if(a instanceof t||(a=function(e,r,n){for(var a=0;a<r.length;++a){n._pushContext();var o=c(r[a])(e);if(n._popContext(),o===u){n._pushContext();var s=t.reject(u.e);return n._popContext(),s}var l=i(o,n);if(l instanceof t)return l}return null}(a,this._yieldHandlers,this._promise),null!==a)){var o=(a=a._target())._bitField;0==(50397184&o)?(this._yieldedPromise=a,a._proxy(this,null)):0!=(33554432&o)?t._async.invoke(this._promiseFulfilled,this,a._value()):0!=(16777216&o)?t._async.invoke(this._promiseRejected,this,a._reason()):this._promiseCancelled()}else this._promiseRejected(new s("A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n".replace("%s",String(n))+"From coroutine:\n"+this._stack.split("\n").slice(1,-7).join("\n")))},t.coroutine=function(e,t){if("function"!=typeof e)throw new s("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");var r=Object(t).yieldHandler,n=h,i=(new Error).stack;return function(){var t=e.apply(this,arguments),a=new n(void 0,void 0,r,i),o=a.promise();return a._generator=t,a._promiseFulfilled(void 0),o}},t.coroutine.addYieldHandler=function(e){if("function"!=typeof e)throw new s("expecting a function but got "+l.classString(e));p.push(e)},t.spawn=function(e){if(o.deprecated("Promise.spawn()","Promise.coroutine()"),"function"!=typeof e)return r("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");var n=new h(e,this),i=n.promise();return n._run(t.spawn),i}}},{"./errors":12,"./util":36}],17:[function(e,t,r){"use strict";t.exports=function(t,r,n,i,a){var o=e("./util");o.canEvaluate,o.tryCatch,o.errorObj,t.join=function(){var e,t=arguments.length-1;t>0&&"function"==typeof arguments[t]&&(e=arguments[t]);var n=[].slice.call(arguments);e&&n.pop();var i=new r(n).promise();return void 0!==e?i.spread(e):i}}},{"./util":36}],18:[function(e,t,r){"use strict";t.exports=function(t,r,n,i,a,o){var s=e("./util"),l=s.tryCatch,u=s.errorObj,c=t._async;function p(e,r,n,i){this.constructor$(e),this._promise._captureStackTrace();var o=t._getContext();if(this._callback=s.contextBind(o,r),this._preservedValues=i===a?new Array(this.length()):null,this._limit=n,this._inFlight=0,this._queue=[],c.invoke(this._asyncInit,this,void 0),s.isArray(e))for(var l=0;l<e.length;++l){var u=e[l];u instanceof t&&u.suppressUnhandledRejections()}}function h(e,r,i,a){if("function"!=typeof r)return n("expecting a function but got "+s.classString(r));var o=0;if(void 0!==i){if("object"!=typeof i||null===i)return t.reject(new TypeError("options argument must be an object but it is "+s.classString(i)));if("number"!=typeof i.concurrency)return t.reject(new TypeError("'concurrency' must be a number but it is "+s.classString(i.concurrency)));o=i.concurrency}return new p(e,r,o="number"==typeof o&&isFinite(o)&&o>=1?o:0,a).promise()}s.inherits(p,r),p.prototype._asyncInit=function(){this._init$(void 0,-2)},p.prototype._init=function(){},p.prototype._promiseFulfilled=function(e,r){var n=this._values,a=this.length(),s=this._preservedValues,c=this._limit;if(r<0){if(n[r=-1*r-1]=e,c>=1&&(this._inFlight--,this._drainQueue(),this._isResolved()))return!0}else{if(c>=1&&this._inFlight>=c)return n[r]=e,this._queue.push(r),!1;null!==s&&(s[r]=e);var p=this._promise,h=this._callback,v=p._boundValue();p._pushContext();var d=l(h).call(v,e,r,a),f=p._popContext();if(o.checkForgottenReturns(d,f,null!==s?"Promise.filter":"Promise.map",p),d===u)return this._reject(d.e),!0;var b=i(d,this._promise);if(b instanceof t){var m=(b=b._target())._bitField;if(0==(50397184&m))return c>=1&&this._inFlight++,n[r]=b,b._proxy(this,-1*(r+1)),!1;if(0==(33554432&m))return 0!=(16777216&m)?(this._reject(b._reason()),!0):(this._cancel(),!0);d=b._value()}n[r]=d}return++this._totalResolved>=a&&(null!==s?this._filter(n,s):this._resolve(n),!0)},p.prototype._drainQueue=function(){for(var e=this._queue,t=this._limit,r=this._values;e.length>0&&this._inFlight<t;){if(this._isResolved())return;var n=e.pop();this._promiseFulfilled(r[n],n)}},p.prototype._filter=function(e,t){for(var r=t.length,n=new Array(r),i=0,a=0;a<r;++a)e[a]&&(n[i++]=t[a]);n.length=i,this._resolve(n)},p.prototype.preservedValues=function(){return this._preservedValues},t.prototype.map=function(e,t){return h(this,e,t,null)},t.map=function(e,t,r,n){return h(e,t,r,n)}}},{"./util":36}],19:[function(e,t,r){"use strict";t.exports=function(t,r,n,i,a){var o=e("./util"),s=o.tryCatch;t.method=function(e){if("function"!=typeof e)throw new t.TypeError("expecting a function but got "+o.classString(e));return function(){var n=new t(r);n._captureStackTrace(),n._pushContext();var i=s(e).apply(this,arguments),o=n._popContext();return a.checkForgottenReturns(i,o,"Promise.method",n),n._resolveFromSyncValue(i),n}},t.attempt=t.try=function(e){if("function"!=typeof e)return i("expecting a function but got "+o.classString(e));var n,l=new t(r);if(l._captureStackTrace(),l._pushContext(),arguments.length>1){a.deprecated("calling Promise.try with more than 1 argument");var u=arguments[1],c=arguments[2];n=o.isArray(u)?s(e).apply(c,u):s(e).call(c,u)}else n=s(e)();var p=l._popContext();return a.checkForgottenReturns(n,p,"Promise.try",l),l._resolveFromSyncValue(n),l},t.prototype._resolveFromSyncValue=function(e){e===o.errorObj?this._rejectCallback(e.e,!1):this._resolveCallback(e,!0)}}},{"./util":36}],20:[function(e,t,r){"use strict";var n=e("./util"),i=n.maybeWrapAsError,a=e("./errors").OperationalError,o=e("./es5"),s=/^(?:name|message|stack|cause)$/;function l(e){var t;if(function(e){return e instanceof Error&&o.getPrototypeOf(e)===Error.prototype}(e)){(t=new a(e)).name=e.name,t.message=e.message,t.stack=e.stack;for(var r=o.keys(e),i=0;i<r.length;++i){var l=r[i];s.test(l)||(t[l]=e[l])}return t}return n.markAsOriginatingFromRejection(e),e}t.exports=function(e,t){return function(r,n){if(null!==e){if(r){var a=l(i(r));e._attachExtraTrace(a),e._reject(a)}else if(t){var o=[].slice.call(arguments,1);e._fulfill(o)}else e._fulfill(n);e=null}}}},{"./errors":12,"./es5":13,"./util":36}],21:[function(e,t,r){"use strict";t.exports=function(t){var r=e("./util"),n=t._async,i=r.tryCatch,a=r.errorObj;function o(e,t){if(!r.isArray(e))return s.call(this,e,t);var o=i(t).apply(this._boundValue(),[null].concat(e));o===a&&n.throwLater(o.e)}function s(e,t){var r=this._boundValue(),o=void 0===e?i(t).call(r,null):i(t).call(r,null,e);o===a&&n.throwLater(o.e)}function l(e,t){if(!e){var r=new Error(e+"");r.cause=e,e=r}var o=i(t).call(this._boundValue(),e);o===a&&n.throwLater(o.e)}t.prototype.asCallback=t.prototype.nodeify=function(e,t){if("function"==typeof e){var r=s;void 0!==t&&Object(t).spread&&(r=o),this._then(r,l,void 0,this,e)}return this}}},{"./util":36}],22:[function(e,t,r){"use strict";t.exports=function(){var r=function(){return new m("circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n")},n=function(){return new F.PromiseInspection(this._target())},i=function(e){return F.reject(new m(e))};function a(){}var o={},s=e("./util");s.setReflectHandler(n);var l=function(){var e=process.domain;return void 0===e?null:e},u=function(){return{domain:l(),async:null}},c=s.isNode&&s.nodeSupportsAsyncResource?e("async_hooks").AsyncResource:null,p=function(){return{domain:l(),async:new c("Bluebird::Promise")}},h=s.isNode?u:function(){return null};s.notEnumerableProp(F,"_getContext",h);var v=e("./es5"),d=e("./async"),f=new d;v.defineProperty(F,"_async",{value:f});var b=e("./errors"),m=F.TypeError=b.TypeError;F.RangeError=b.RangeError;var y=F.CancellationError=b.CancellationError;F.TimeoutError=b.TimeoutError,F.OperationalError=b.OperationalError,F.RejectionError=b.OperationalError,F.AggregateError=b.AggregateError;var _=function(){},w={},R={},g=e("./thenables")(F,_),O=e("./promise_array")(F,_,g,i,a),q=e("./context")(F),T=q.create,j=e("./debuggability")(F,q,(function(){h=p,s.notEnumerableProp(F,"_getContext",p)}),(function(){h=u,s.notEnumerableProp(F,"_getContext",u)})),S=(j.CapturedTrace,e("./finally")(F,g,R)),P=e("./catch_filter")(R),C=e("./nodeback"),E=s.errorObj,k=s.tryCatch;function F(e){e!==_&&function(e,t){if(null==e||e.constructor!==F)throw new m("the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n");if("function"!=typeof t)throw new m("expecting a function but got "+s.classString(t))}(this,e),this._bitField=0,this._fulfillmentHandler0=void 0,this._rejectionHandler0=void 0,this._promise0=void 0,this._receiver0=void 0,this._resolveFromExecutor(e),this._promiseCreated(),this._fireEvent("promiseCreated",this)}function x(e){this.promise._resolveCallback(e)}function A(e){this.promise._rejectCallback(e,!1)}function G(e){var t=new F(_);t._fulfillmentHandler0=e,t._rejectionHandler0=e,t._promise0=e,t._receiver0=e}return F.prototype.toString=function(){return"[object Promise]"},F.prototype.caught=F.prototype.catch=function(e){var t=arguments.length;if(t>1){var r,n=new Array(t-1),a=0;for(r=0;r<t-1;++r){var o=arguments[r];if(!s.isObject(o))return i("Catch statement predicate: expecting an object but got "+s.classString(o));n[a++]=o}if(n.length=a,"function"!=typeof(e=arguments[r]))throw new m("The last argument to .catch() must be a function, got "+s.toString(e));return this.then(void 0,P(n,e,this))}return this.then(void 0,e)},F.prototype.reflect=function(){return this._then(n,n,void 0,this,void 0)},F.prototype.then=function(e,t){if(j.warnings()&&arguments.length>0&&"function"!=typeof e&&"function"!=typeof t){var r=".then() only accepts functions but was passed: "+s.classString(e);arguments.length>1&&(r+=", "+s.classString(t)),this._warn(r)}return this._then(e,t,void 0,void 0,void 0)},F.prototype.done=function(e,t){this._then(e,t,void 0,void 0,void 0)._setIsFinal()},F.prototype.spread=function(e){return"function"!=typeof e?i("expecting a function but got "+s.classString(e)):this.all()._then(e,void 0,void 0,w,void 0)},F.prototype.toJSON=function(){var e={isFulfilled:!1,isRejected:!1,fulfillmentValue:void 0,rejectionReason:void 0};return this.isFulfilled()?(e.fulfillmentValue=this.value(),e.isFulfilled=!0):this.isRejected()&&(e.rejectionReason=this.reason(),e.isRejected=!0),e},F.prototype.all=function(){return arguments.length>0&&this._warn(".all() was passed arguments but it does not take any"),new O(this).promise()},F.prototype.error=function(e){return this.caught(s.originatesFromRejection,e)},F.getNewLibraryCopy=t.exports,F.is=function(e){return e instanceof F},F.fromNode=F.fromCallback=function(e){var t=new F(_);t._captureStackTrace();var r=arguments.length>1&&!!Object(arguments[1]).multiArgs,n=k(e)(C(t,r));return n===E&&t._rejectCallback(n.e,!0),t._isFateSealed()||t._setAsyncGuaranteed(),t},F.all=function(e){return new O(e).promise()},F.cast=function(e){var t=g(e);return t instanceof F||((t=new F(_))._captureStackTrace(),t._setFulfilled(),t._rejectionHandler0=e),t},F.resolve=F.fulfilled=F.cast,F.reject=F.rejected=function(e){var t=new F(_);return t._captureStackTrace(),t._rejectCallback(e,!0),t},F.setScheduler=function(e){if("function"!=typeof e)throw new m("expecting a function but got "+s.classString(e));return f.setScheduler(e)},F.prototype._then=function(e,t,r,n,i){var a=void 0!==i,o=a?i:new F(_),l=this._target(),u=l._bitField;a||(o._propagateFrom(this,3),o._captureStackTrace(),void 0===n&&0!=(2097152&this._bitField)&&(n=0!=(50397184&u)?this._boundValue():l===this?void 0:this._boundTo),this._fireEvent("promiseChained",this,o));var c=h();if(0!=(50397184&u)){var p,v,d=l._settlePromiseCtx;0!=(33554432&u)?(v=l._rejectionHandler0,p=e):0!=(16777216&u)?(v=l._fulfillmentHandler0,p=t,l._unsetRejectionIsUnhandled()):(d=l._settlePromiseLateCancellationObserver,v=new y("late cancellation observer"),l._attachExtraTrace(v),p=t),f.invoke(d,l,{handler:s.contextBind(c,p),promise:o,receiver:n,value:v})}else l._addCallbacks(e,t,o,n,c);return o},F.prototype._length=function(){return 65535&this._bitField},F.prototype._isFateSealed=function(){return 0!=(117506048&this._bitField)},F.prototype._isFollowing=function(){return 67108864==(67108864&this._bitField)},F.prototype._setLength=function(e){this._bitField=-65536&this._bitField|65535&e},F.prototype._setFulfilled=function(){this._bitField=33554432|this._bitField,this._fireEvent("promiseFulfilled",this)},F.prototype._setRejected=function(){this._bitField=16777216|this._bitField,this._fireEvent("promiseRejected",this)},F.prototype._setFollowing=function(){this._bitField=67108864|this._bitField,this._fireEvent("promiseResolved",this)},F.prototype._setIsFinal=function(){this._bitField=4194304|this._bitField},F.prototype._isFinal=function(){return(4194304&this._bitField)>0},F.prototype._unsetCancelled=function(){this._bitField=-65537&this._bitField},F.prototype._setCancelled=function(){this._bitField=65536|this._bitField,this._fireEvent("promiseCancelled",this)},F.prototype._setWillBeCancelled=function(){this._bitField=8388608|this._bitField},F.prototype._setAsyncGuaranteed=function(){if(!f.hasCustomScheduler()){var e=this._bitField;this._bitField=e|(536870912&e)>>2^134217728}},F.prototype._setNoAsyncGuarantee=function(){this._bitField=-134217729&(536870912|this._bitField)},F.prototype._receiverAt=function(e){var t=0===e?this._receiver0:this[4*e-4+3];if(t!==o)return void 0===t&&this._isBound()?this._boundValue():t},F.prototype._promiseAt=function(e){return this[4*e-4+2]},F.prototype._fulfillmentHandlerAt=function(e){return this[4*e-4+0]},F.prototype._rejectionHandlerAt=function(e){return this[4*e-4+1]},F.prototype._boundValue=function(){},F.prototype._migrateCallback0=function(e){e._bitField;var t=e._fulfillmentHandler0,r=e._rejectionHandler0,n=e._promise0,i=e._receiverAt(0);void 0===i&&(i=o),this._addCallbacks(t,r,n,i,null)},F.prototype._migrateCallbackAt=function(e,t){var r=e._fulfillmentHandlerAt(t),n=e._rejectionHandlerAt(t),i=e._promiseAt(t),a=e._receiverAt(t);void 0===a&&(a=o),this._addCallbacks(r,n,i,a,null)},F.prototype._addCallbacks=function(e,t,r,n,i){var a=this._length();if(a>=65531&&(a=0,this._setLength(0)),0===a)this._promise0=r,this._receiver0=n,"function"==typeof e&&(this._fulfillmentHandler0=s.contextBind(i,e)),"function"==typeof t&&(this._rejectionHandler0=s.contextBind(i,t));else{var o=4*a-4;this[o+2]=r,this[o+3]=n,"function"==typeof e&&(this[o+0]=s.contextBind(i,e)),"function"==typeof t&&(this[o+1]=s.contextBind(i,t))}return this._setLength(a+1),a},F.prototype._proxy=function(e,t){this._addCallbacks(void 0,void 0,t,e,null)},F.prototype._resolveCallback=function(e,t){if(0==(117506048&this._bitField)){if(e===this)return this._rejectCallback(r(),!1);var n=g(e,this);if(!(n instanceof F))return this._fulfill(e);t&&this._propagateFrom(n,2);var i=n._target();if(i!==this){var a=i._bitField;if(0==(50397184&a)){var o=this._length();o>0&&i._migrateCallback0(this);for(var s=1;s<o;++s)i._migrateCallbackAt(this,s);this._setFollowing(),this._setLength(0),this._setFollowee(n)}else if(0!=(33554432&a))this._fulfill(i._value());else if(0!=(16777216&a))this._reject(i._reason());else{var l=new y("late cancellation observer");i._attachExtraTrace(l),this._reject(l)}}else this._reject(r())}},F.prototype._rejectCallback=function(e,t,r){var n=s.ensureErrorObject(e),i=n===e;if(!i&&!r&&j.warnings()){var a="a promise was rejected with a non-error: "+s.classString(e);this._warn(a,!0)}this._attachExtraTrace(n,!!t&&i),this._reject(e)},F.prototype._resolveFromExecutor=function(e){if(e!==_){var t=this;this._captureStackTrace(),this._pushContext();var r=!0,n=this._execute(e,(function(e){t._resolveCallback(e)}),(function(e){t._rejectCallback(e,r)}));r=!1,this._popContext(),void 0!==n&&t._rejectCallback(n,!0)}},F.prototype._settlePromiseFromHandler=function(e,t,r,n){var i=n._bitField;if(0==(65536&i)){var a;n._pushContext(),t===w?r&&"number"==typeof r.length?a=k(e).apply(this._boundValue(),r):(a=E).e=new m("cannot .spread() a non-array: "+s.classString(r)):a=k(e).call(t,r);var o=n._popContext();0==(65536&(i=n._bitField))&&(a===R?n._reject(r):a===E?n._rejectCallback(a.e,!1):(j.checkForgottenReturns(a,o,"",n,this),n._resolveCallback(a)))}},F.prototype._target=function(){for(var e=this;e._isFollowing();)e=e._followee();return e},F.prototype._followee=function(){return this._rejectionHandler0},F.prototype._setFollowee=function(e){this._rejectionHandler0=e},F.prototype._settlePromise=function(e,t,r,i){var o=e instanceof F,s=this._bitField,l=0!=(134217728&s);0!=(65536&s)?(o&&e._invokeInternalOnCancel(),r instanceof S&&r.isFinallyHandler()?(r.cancelPromise=e,k(t).call(r,i)===E&&e._reject(E.e)):t===n?e._fulfill(n.call(r)):r instanceof a?r._promiseCancelled(e):o||e instanceof O?e._cancel():r.cancel()):"function"==typeof t?o?(l&&e._setAsyncGuaranteed(),this._settlePromiseFromHandler(t,r,i,e)):t.call(r,i,e):r instanceof a?r._isResolved()||(0!=(33554432&s)?r._promiseFulfilled(i,e):r._promiseRejected(i,e)):o&&(l&&e._setAsyncGuaranteed(),0!=(33554432&s)?e._fulfill(i):e._reject(i))},F.prototype._settlePromiseLateCancellationObserver=function(e){var t=e.handler,r=e.promise,n=e.receiver,i=e.value;"function"==typeof t?r instanceof F?this._settlePromiseFromHandler(t,n,i,r):t.call(n,i,r):r instanceof F&&r._reject(i)},F.prototype._settlePromiseCtx=function(e){this._settlePromise(e.promise,e.handler,e.receiver,e.value)},F.prototype._settlePromise0=function(e,t,r){var n=this._promise0,i=this._receiverAt(0);this._promise0=void 0,this._receiver0=void 0,this._settlePromise(n,e,i,t)},F.prototype._clearCallbackDataAtIndex=function(e){var t=4*e-4;this[t+2]=this[t+3]=this[t+0]=this[t+1]=void 0},F.prototype._fulfill=function(e){var t=this._bitField;if(!((117506048&t)>>>16)){if(e===this){var n=r();return this._attachExtraTrace(n),this._reject(n)}this._setFulfilled(),this._rejectionHandler0=e,(65535&t)>0&&(0!=(134217728&t)?this._settlePromises():f.settlePromises(this),this._dereferenceTrace())}},F.prototype._reject=function(e){var t=this._bitField;if(!((117506048&t)>>>16)){if(this._setRejected(),this._fulfillmentHandler0=e,this._isFinal())return f.fatalError(e,s.isNode);(65535&t)>0?f.settlePromises(this):this._ensurePossibleRejectionHandled()}},F.prototype._fulfillPromises=function(e,t){for(var r=1;r<e;r++){var n=this._fulfillmentHandlerAt(r),i=this._promiseAt(r),a=this._receiverAt(r);this._clearCallbackDataAtIndex(r),this._settlePromise(i,n,a,t)}},F.prototype._rejectPromises=function(e,t){for(var r=1;r<e;r++){var n=this._rejectionHandlerAt(r),i=this._promiseAt(r),a=this._receiverAt(r);this._clearCallbackDataAtIndex(r),this._settlePromise(i,n,a,t)}},F.prototype._settlePromises=function(){var e=this._bitField,t=65535&e;if(t>0){if(0!=(16842752&e)){var r=this._fulfillmentHandler0;this._settlePromise0(this._rejectionHandler0,r,e),this._rejectPromises(t,r)}else{var n=this._rejectionHandler0;this._settlePromise0(this._fulfillmentHandler0,n,e),this._fulfillPromises(t,n)}this._setLength(0)}this._clearCancellationData()},F.prototype._settledValue=function(){var e=this._bitField;return 0!=(33554432&e)?this._rejectionHandler0:0!=(16777216&e)?this._fulfillmentHandler0:void 0},"undefined"!=typeof Symbol&&Symbol.toStringTag&&v.defineProperty(F.prototype,Symbol.toStringTag,{get:function(){return"Object"}}),F.defer=F.pending=function(){return j.deprecated("Promise.defer","new Promise"),{promise:new F(_),resolve:x,reject:A}},s.notEnumerableProp(F,"_makeSelfResolutionError",r),e("./method")(F,_,g,i,j),e("./bind")(F,_,g,j),e("./cancel")(F,O,i,j),e("./direct_resolve")(F),e("./synchronous_inspection")(F),e("./join")(F,O,g,_,f),F.Promise=F,F.version="3.7.2",e("./call_get.js")(F),e("./generators.js")(F,i,_,g,a,j),e("./map.js")(F,O,i,g,_,j),e("./nodeify.js")(F),e("./promisify.js")(F,_),e("./props.js")(F,O,g,i),e("./race.js")(F,_,g,i),e("./reduce.js")(F,O,i,g,_,j),e("./settle.js")(F,O,j),e("./some.js")(F,O,i),e("./timers.js")(F,_,j),e("./using.js")(F,i,g,T,_,j),e("./any.js")(F),e("./each.js")(F,_),e("./filter.js")(F,_),s.toFastProperties(F),s.toFastProperties(F.prototype),G({a:1}),G({b:2}),G({c:3}),G(1),G((function(){})),G(void 0),G(!1),G(new F(_)),j.setBounds(d.firstLineError,s.lastLineError),F}},{"./any.js":1,"./async":2,"./bind":3,"./call_get.js":5,"./cancel":6,"./catch_filter":7,"./context":8,"./debuggability":9,"./direct_resolve":10,"./each.js":11,"./errors":12,"./es5":13,"./filter.js":14,"./finally":15,"./generators.js":16,"./join":17,"./map.js":18,"./method":19,"./nodeback":20,"./nodeify.js":21,"./promise_array":23,"./promisify.js":24,"./props.js":25,"./race.js":27,"./reduce.js":28,"./settle.js":30,"./some.js":31,"./synchronous_inspection":32,"./thenables":33,"./timers.js":34,"./using.js":35,"./util":36,async_hooks:void 0}],23:[function(e,t,r){"use strict";t.exports=function(t,r,n,i,a){var o=e("./util");function s(e){var n=this._promise=new t(r);e instanceof t&&(n._propagateFrom(e,3),e.suppressUnhandledRejections()),n._setOnCancel(this),this._values=e,this._length=0,this._totalResolved=0,this._init(void 0,-2)}return o.isArray,o.inherits(s,a),s.prototype.length=function(){return this._length},s.prototype.promise=function(){return this._promise},s.prototype._init=function e(r,a){var s=n(this._values,this._promise);if(s instanceof t){var l=(s=s._target())._bitField;if(this._values=s,0==(50397184&l))return this._promise._setAsyncGuaranteed(),s._then(e,this._reject,void 0,this,a);if(0==(33554432&l))return 0!=(16777216&l)?this._reject(s._reason()):this._cancel();s=s._value()}if(null!==(s=o.asArray(s)))0!==s.length?this._iterate(s):-5===a?this._resolveEmptyArray():this._resolve(function(e){switch(e){case-2:return[];case-3:return{};case-6:return new Map}}(a));else{var u=i("expecting an array or an iterable object but got "+o.classString(s)).reason();this._promise._rejectCallback(u,!1)}},s.prototype._iterate=function(e){var r=this.getActualLength(e.length);this._length=r,this._values=this.shouldCopyValues()?new Array(r):this._values;for(var i=this._promise,a=!1,o=null,s=0;s<r;++s){var l=n(e[s],i);o=l instanceof t?(l=l._target())._bitField:null,a?null!==o&&l.suppressUnhandledRejections():null!==o?0==(50397184&o)?(l._proxy(this,s),this._values[s]=l):a=0!=(33554432&o)?this._promiseFulfilled(l._value(),s):0!=(16777216&o)?this._promiseRejected(l._reason(),s):this._promiseCancelled(s):a=this._promiseFulfilled(l,s)}a||i._setAsyncGuaranteed()},s.prototype._isResolved=function(){return null===this._values},s.prototype._resolve=function(e){this._values=null,this._promise._fulfill(e)},s.prototype._cancel=function(){!this._isResolved()&&this._promise._isCancellable()&&(this._values=null,this._promise._cancel())},s.prototype._reject=function(e){this._values=null,this._promise._rejectCallback(e,!1)},s.prototype._promiseFulfilled=function(e,t){return this._values[t]=e,++this._totalResolved>=this._length&&(this._resolve(this._values),!0)},s.prototype._promiseCancelled=function(){return this._cancel(),!0},s.prototype._promiseRejected=function(e){return this._totalResolved++,this._reject(e),!0},s.prototype._resultCancelled=function(){if(!this._isResolved()){var e=this._values;if(this._cancel(),e instanceof t)e.cancel();else for(var r=0;r<e.length;++r)e[r]instanceof t&&e[r].cancel()}},s.prototype.shouldCopyValues=function(){return!0},s.prototype.getActualLength=function(e){return e},s}},{"./util":36}],24:[function(e,t,r){"use strict";t.exports=function(t,r){var n={},i=e("./util"),a=e("./nodeback"),o=i.withAppended,s=i.maybeWrapAsError,l=i.canEvaluate,u=e("./errors").TypeError,c={__isPromisified__:!0},p=new RegExp("^(?:"+["arity","length","name","arguments","caller","callee","prototype","__isPromisified__"].join("|")+")$"),h=function(e){return i.isIdentifier(e)&&"_"!==e.charAt(0)&&"constructor"!==e};function v(e){return!p.test(e)}function d(e){try{return!0===e.__isPromisified__}catch(e){return!1}}function f(e,t,r){var n=i.getDataPropertyOrDefault(e,t+r,c);return!!n&&d(n)}function b(e,t,r,n){for(var a=i.inheritedDataKeys(e),o=[],s=0;s<a.length;++s){var l=a[s],c=e[l],p=n===h||h(l);"function"!=typeof c||d(c)||f(e,l,t)||!n(l,c,e,p)||o.push(l,c)}return function(e,t,r){for(var n=0;n<e.length;n+=2){var i=e[n];if(r.test(i))for(var a=i.replace(r,""),o=0;o<e.length;o+=2)if(e[o]===a)throw new u("Cannot promisify an API that has normal methods with '%s'-suffix\n\n    See http://goo.gl/MqrFmX\n".replace("%s",t))}}(o,t,r),o}var m=l?void 0:function(e,l,u,c,p,h){var v=function(){return this}(),d=e;function f(){var i=l;l===n&&(i=this);var u=new t(r);u._captureStackTrace();var c="string"==typeof d&&this!==v?this[d]:e,p=a(u,h);try{c.apply(i,o(arguments,p))}catch(e){u._rejectCallback(s(e),!0,!0)}return u._isFateSealed()||u._setAsyncGuaranteed(),u}return"string"==typeof d&&(e=c),i.notEnumerableProp(f,"__isPromisified__",!0),f};function y(e,t,r,a,o){for(var s=new RegExp(t.replace(/([$])/,"\\$")+"$"),l=b(e,t,s,r),u=0,c=l.length;u<c;u+=2){var p=l[u],h=l[u+1],v=p+t;if(a===m)e[v]=m(p,n,p,h,t,o);else{var d=a(h,(function(){return m(p,n,p,h,t,o)}));i.notEnumerableProp(d,"__isPromisified__",!0),e[v]=d}}return i.toFastProperties(e),e}t.promisify=function(e,t){if("function"!=typeof e)throw new u("expecting a function but got "+i.classString(e));if(d(e))return e;var r=function(e,t,r){return m(e,t,void 0,e,null,r)}(e,void 0===(t=Object(t)).context?n:t.context,!!t.multiArgs);return i.copyDescriptors(e,r,v),r},t.promisifyAll=function(e,t){if("function"!=typeof e&&"object"!=typeof e)throw new u("the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n");var r=!!(t=Object(t)).multiArgs,n=t.suffix;"string"!=typeof n&&(n="Async");var a=t.filter;"function"!=typeof a&&(a=h);var o=t.promisifier;if("function"!=typeof o&&(o=m),!i.isIdentifier(n))throw new RangeError("suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n");for(var s=i.inheritedDataKeys(e),l=0;l<s.length;++l){var c=e[s[l]];"constructor"!==s[l]&&i.isClass(c)&&(y(c.prototype,n,a,o,r),y(c,n,a,o,r))}return y(e,n,a,o,r)}}},{"./errors":12,"./nodeback":20,"./util":36}],25:[function(e,t,r){"use strict";t.exports=function(t,r,n,i){var a,o=e("./util"),s=o.isObject,l=e("./es5");"function"==typeof Map&&(a=Map);var u=function(){var e=0,t=0;function r(r,n){this[e]=r,this[e+t]=n,e++}return function(n){t=n.size,e=0;var i=new Array(2*n.size);return n.forEach(r,i),i}}();function c(e){var t,r=!1;if(void 0!==a&&e instanceof a)t=u(e),r=!0;else{var n=l.keys(e),i=n.length;t=new Array(2*i);for(var o=0;o<i;++o){var s=n[o];t[o]=e[s],t[o+i]=s}}this.constructor$(t),this._isMap=r,this._init$(void 0,r?-6:-3)}function p(e){var r,a=n(e);return s(a)?(r=a instanceof t?a._then(t.props,void 0,void 0,void 0,void 0):new c(a).promise(),a instanceof t&&r._propagateFrom(a,2),r):i("cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n")}o.inherits(c,r),c.prototype._init=function(){},c.prototype._promiseFulfilled=function(e,t){if(this._values[t]=e,++this._totalResolved>=this._length){var r;if(this._isMap)r=function(e){for(var t=new a,r=e.length/2|0,n=0;n<r;++n){var i=e[r+n],o=e[n];t.set(i,o)}return t}(this._values);else{r={};for(var n=this.length(),i=0,o=this.length();i<o;++i)r[this._values[i+n]]=this._values[i]}return this._resolve(r),!0}return!1},c.prototype.shouldCopyValues=function(){return!1},c.prototype.getActualLength=function(e){return e>>1},t.prototype.props=function(){return p(this)},t.props=function(e){return p(e)}}},{"./es5":13,"./util":36}],26:[function(e,t,r){"use strict";function n(e){this._capacity=e,this._length=0,this._front=0}n.prototype._willBeOverCapacity=function(e){return this._capacity<e},n.prototype._pushOne=function(e){var t=this.length();this._checkCapacity(t+1),this[this._front+t&this._capacity-1]=e,this._length=t+1},n.prototype.push=function(e,t,r){var n=this.length()+3;if(this._willBeOverCapacity(n))return this._pushOne(e),this._pushOne(t),void this._pushOne(r);var i=this._front+n-3;this._checkCapacity(n);var a=this._capacity-1;this[i+0&a]=e,this[i+1&a]=t,this[i+2&a]=r,this._length=n},n.prototype.shift=function(){var e=this._front,t=this[e];return this[e]=void 0,this._front=e+1&this._capacity-1,this._length--,t},n.prototype.length=function(){return this._length},n.prototype._checkCapacity=function(e){this._capacity<e&&this._resizeTo(this._capacity<<1)},n.prototype._resizeTo=function(e){var t=this._capacity;this._capacity=e,function(e,t,r,n,i){for(var a=0;a<i;++a)r[a+n]=e[a+t],e[a+t]=void 0}(this,0,this,t,this._front+this._length&t-1)},t.exports=n},{}],27:[function(e,t,r){"use strict";t.exports=function(t,r,n,i){var a=e("./util");function o(e,s){var l,u=n(e);if(u instanceof t)return(l=u).then((function(e){return o(e,l)}));if(null===(e=a.asArray(e)))return i("expecting an array or an iterable object but got "+a.classString(e));var c=new t(r);void 0!==s&&c._propagateFrom(s,3);for(var p=c._fulfill,h=c._reject,v=0,d=e.length;v<d;++v){var f=e[v];(void 0!==f||v in e)&&t.cast(f)._then(p,h,void 0,c,null)}return c}t.race=function(e){return o(e,void 0)},t.prototype.race=function(){return o(this,void 0)}}},{"./util":36}],28:[function(e,t,r){"use strict";t.exports=function(t,r,n,i,a,o){var s=e("./util"),l=s.tryCatch;function u(e,r,n,i){this.constructor$(e);var o=t._getContext();this._fn=s.contextBind(o,r),void 0!==n&&(n=t.resolve(n))._attachCancellationCallback(this),this._initialValue=n,this._currentCancellable=null,this._eachValues=i===a?Array(this._length):0===i?null:void 0,this._promise._captureStackTrace(),this._init$(void 0,-5)}function c(e,t){this.isFulfilled()?t._resolve(e):t._reject(e)}function p(e,t,r,i){return"function"!=typeof t?n("expecting a function but got "+s.classString(t)):new u(e,t,r,i).promise()}function h(e){this.accum=e,this.array._gotAccum(e);var r=i(this.value,this.array._promise);return r instanceof t?(this.array._currentCancellable=r,r._then(v,void 0,void 0,this,void 0)):v.call(this,r)}function v(e){var r,n=this.array,i=n._promise,a=l(n._fn);i._pushContext(),(r=void 0!==n._eachValues?a.call(i._boundValue(),e,this.index,this.length):a.call(i._boundValue(),this.accum,e,this.index,this.length))instanceof t&&(n._currentCancellable=r);var s=i._popContext();return o.checkForgottenReturns(r,s,void 0!==n._eachValues?"Promise.each":"Promise.reduce",i),r}s.inherits(u,r),u.prototype._gotAccum=function(e){void 0!==this._eachValues&&null!==this._eachValues&&e!==a&&this._eachValues.push(e)},u.prototype._eachComplete=function(e){return null!==this._eachValues&&this._eachValues.push(e),this._eachValues},u.prototype._init=function(){},u.prototype._resolveEmptyArray=function(){this._resolve(void 0!==this._eachValues?this._eachValues:this._initialValue)},u.prototype.shouldCopyValues=function(){return!1},u.prototype._resolve=function(e){this._promise._resolveCallback(e),this._values=null},u.prototype._resultCancelled=function(e){if(e===this._initialValue)return this._cancel();this._isResolved()||(this._resultCancelled$(),this._currentCancellable instanceof t&&this._currentCancellable.cancel(),this._initialValue instanceof t&&this._initialValue.cancel())},u.prototype._iterate=function(e){var r,n;this._values=e;var i=e.length;void 0!==this._initialValue?(r=this._initialValue,n=0):(r=t.resolve(e[0]),n=1),this._currentCancellable=r;for(var a=n;a<i;++a){var o=e[a];o instanceof t&&o.suppressUnhandledRejections()}if(!r.isRejected())for(;n<i;++n){var s={accum:null,value:e[n],index:n,length:i,array:this};r=r._then(h,void 0,void 0,s,void 0),0==(127&n)&&r._setNoAsyncGuarantee()}void 0!==this._eachValues&&(r=r._then(this._eachComplete,void 0,void 0,this,void 0)),r._then(c,c,void 0,r,this)},t.prototype.reduce=function(e,t){return p(this,e,t,null)},t.reduce=function(e,t,r,n){return p(e,t,r,n)}}},{"./util":36}],29:[function(e,t,n){"use strict";var i,a,o,s,l,u=e("./util"),c=u.getNativePromise();if(u.isNode&&"undefined"==typeof MutationObserver){var p=r.g.setImmediate,h=process.nextTick;i=u.isRecentNode?function(e){p.call(r.g,e)}:function(e){h.call(process,e)}}else if("function"==typeof c&&"function"==typeof c.resolve){var v=c.resolve();i=function(e){v.then(e)}}else i="undefined"==typeof MutationObserver||"undefined"!=typeof window&&window.navigator&&(window.navigator.standalone||window.cordova)||!("classList"in document.documentElement)?"undefined"!=typeof setImmediate?function(e){setImmediate(e)}:"undefined"!=typeof setTimeout?function(e){setTimeout(e,0)}:function(){throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n")}:(a=document.createElement("div"),o={attributes:!0},s=!1,l=document.createElement("div"),new MutationObserver((function(){a.classList.toggle("foo"),s=!1})).observe(l,o),function(e){var t=new MutationObserver((function(){t.disconnect(),e()}));t.observe(a,o),s||(s=!0,l.classList.toggle("foo"))});t.exports=i},{"./util":36}],30:[function(e,t,r){"use strict";t.exports=function(t,r,n){var i=t.PromiseInspection;function a(e){this.constructor$(e)}e("./util").inherits(a,r),a.prototype._promiseResolved=function(e,t){return this._values[e]=t,++this._totalResolved>=this._length&&(this._resolve(this._values),!0)},a.prototype._promiseFulfilled=function(e,t){var r=new i;return r._bitField=33554432,r._settledValueField=e,this._promiseResolved(t,r)},a.prototype._promiseRejected=function(e,t){var r=new i;return r._bitField=16777216,r._settledValueField=e,this._promiseResolved(t,r)},t.settle=function(e){return n.deprecated(".settle()",".reflect()"),new a(e).promise()},t.allSettled=function(e){return new a(e).promise()},t.prototype.settle=function(){return t.settle(this)}}},{"./util":36}],31:[function(e,t,r){"use strict";t.exports=function(t,r,n){var i=e("./util"),a=e("./errors").RangeError,o=e("./errors").AggregateError,s=i.isArray,l={};function u(e){this.constructor$(e),this._howMany=0,this._unwrap=!1,this._initialized=!1}function c(e,t){if((0|t)!==t||t<0)return n("expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n");var r=new u(e),i=r.promise();return r.setHowMany(t),r.init(),i}i.inherits(u,r),u.prototype._init=function(){if(this._initialized)if(0!==this._howMany){this._init$(void 0,-5);var e=s(this._values);!this._isResolved()&&e&&this._howMany>this._canPossiblyFulfill()&&this._reject(this._getRangeError(this.length()))}else this._resolve([])},u.prototype.init=function(){this._initialized=!0,this._init()},u.prototype.setUnwrap=function(){this._unwrap=!0},u.prototype.howMany=function(){return this._howMany},u.prototype.setHowMany=function(e){this._howMany=e},u.prototype._promiseFulfilled=function(e){return this._addFulfilled(e),this._fulfilled()===this.howMany()&&(this._values.length=this.howMany(),1===this.howMany()&&this._unwrap?this._resolve(this._values[0]):this._resolve(this._values),!0)},u.prototype._promiseRejected=function(e){return this._addRejected(e),this._checkOutcome()},u.prototype._promiseCancelled=function(){return this._values instanceof t||null==this._values?this._cancel():(this._addRejected(l),this._checkOutcome())},u.prototype._checkOutcome=function(){if(this.howMany()>this._canPossiblyFulfill()){for(var e=new o,t=this.length();t<this._values.length;++t)this._values[t]!==l&&e.push(this._values[t]);return e.length>0?this._reject(e):this._cancel(),!0}return!1},u.prototype._fulfilled=function(){return this._totalResolved},u.prototype._rejected=function(){return this._values.length-this.length()},u.prototype._addRejected=function(e){this._values.push(e)},u.prototype._addFulfilled=function(e){this._values[this._totalResolved++]=e},u.prototype._canPossiblyFulfill=function(){return this.length()-this._rejected()},u.prototype._getRangeError=function(e){var t="Input array must contain at least "+this._howMany+" items but contains only "+e+" items";return new a(t)},u.prototype._resolveEmptyArray=function(){this._reject(this._getRangeError(0))},t.some=function(e,t){return c(e,t)},t.prototype.some=function(e){return c(this,e)},t._SomePromiseArray=u}},{"./errors":12,"./util":36}],32:[function(e,t,r){"use strict";t.exports=function(e){function t(e){void 0!==e?(e=e._target(),this._bitField=e._bitField,this._settledValueField=e._isFateSealed()?e._settledValue():void 0):(this._bitField=0,this._settledValueField=void 0)}t.prototype._settledValue=function(){return this._settledValueField};var r=t.prototype.value=function(){if(!this.isFulfilled())throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n");return this._settledValue()},n=t.prototype.error=t.prototype.reason=function(){if(!this.isRejected())throw new TypeError("cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n");return this._settledValue()},i=t.prototype.isFulfilled=function(){return 0!=(33554432&this._bitField)},a=t.prototype.isRejected=function(){return 0!=(16777216&this._bitField)},o=t.prototype.isPending=function(){return 0==(50397184&this._bitField)},s=t.prototype.isResolved=function(){return 0!=(50331648&this._bitField)};t.prototype.isCancelled=function(){return 0!=(8454144&this._bitField)},e.prototype.__isCancelled=function(){return 65536==(65536&this._bitField)},e.prototype._isCancelled=function(){return this._target().__isCancelled()},e.prototype.isCancelled=function(){return 0!=(8454144&this._target()._bitField)},e.prototype.isPending=function(){return o.call(this._target())},e.prototype.isRejected=function(){return a.call(this._target())},e.prototype.isFulfilled=function(){return i.call(this._target())},e.prototype.isResolved=function(){return s.call(this._target())},e.prototype.value=function(){return r.call(this._target())},e.prototype.reason=function(){var e=this._target();return e._unsetRejectionIsUnhandled(),n.call(e)},e.prototype._value=function(){return this._settledValue()},e.prototype._reason=function(){return this._unsetRejectionIsUnhandled(),this._settledValue()},e.PromiseInspection=t}},{}],33:[function(e,t,r){"use strict";t.exports=function(t,r){var n=e("./util"),i=n.errorObj,a=n.isObject,o={}.hasOwnProperty;return function(e,s){if(a(e)){if(e instanceof t)return e;var l=function(e){try{return function(e){return e.then}(e)}catch(e){return i.e=e,i}}(e);if(l===i){s&&s._pushContext();var u=t.reject(l.e);return s&&s._popContext(),u}if("function"==typeof l)return function(e){try{return o.call(e,"_promise0")}catch(e){return!1}}(e)?(u=new t(r),e._then(u._fulfill,u._reject,void 0,u,null),u):function(e,a,o){var s=new t(r),l=s;o&&o._pushContext(),s._captureStackTrace(),o&&o._popContext();var u=!0,c=n.tryCatch(a).call(e,p,h);function p(e){s&&(s._resolveCallback(e),s=null)}function h(e){s&&(s._rejectCallback(e,u,!0),s=null)}return u=!1,s&&c===i&&(s._rejectCallback(c.e,!0,!0),s=null),l}(e,l,s)}return e}}},{"./util":36}],34:[function(e,t,r){"use strict";t.exports=function(t,r,n){var i=e("./util"),a=t.TimeoutError;function o(e){this.handle=e}o.prototype._resultCancelled=function(){clearTimeout(this.handle)};var s=function(e){return l(+this).thenReturn(e)},l=t.delay=function(e,i){var a,l;return void 0!==i?(a=t.resolve(i)._then(s,null,null,e,void 0),n.cancellation()&&i instanceof t&&a._setOnCancel(i)):(a=new t(r),l=setTimeout((function(){a._fulfill()}),+e),n.cancellation()&&a._setOnCancel(new o(l)),a._captureStackTrace()),a._setAsyncGuaranteed(),a};function u(e){return clearTimeout(this.handle),e}function c(e){throw clearTimeout(this.handle),e}t.prototype.delay=function(e){return l(e,this)},t.prototype.timeout=function(e,t){var r,s;e=+e;var l=new o(setTimeout((function(){r.isPending()&&function(e,t,r){var n;n="string"!=typeof t?t instanceof Error?t:new a("operation timed out"):new a(t),i.markAsOriginatingFromRejection(n),e._attachExtraTrace(n),e._reject(n),null!=r&&r.cancel()}(r,t,s)}),e));return n.cancellation()?(s=this.then(),(r=s._then(u,c,void 0,l,void 0))._setOnCancel(l)):r=this._then(u,c,void 0,l,void 0),r}}},{"./util":36}],35:[function(e,t,r){"use strict";t.exports=function(t,r,n,i,a,o){var s=e("./util"),l=e("./errors").TypeError,u=e("./util").inherits,c=s.errorObj,p=s.tryCatch,h={};function v(e){setTimeout((function(){throw e}),0)}function d(e,r){var i=0,o=e.length,s=new t(a);return function a(){if(i>=o)return s._fulfill();var l=function(e){var t=n(e);return t!==e&&"function"==typeof e._isDisposable&&"function"==typeof e._getDisposer&&e._isDisposable()&&t._setDisposable(e._getDisposer()),t}(e[i++]);if(l instanceof t&&l._isDisposable()){try{l=n(l._getDisposer().tryDispose(r),e.promise)}catch(e){return v(e)}if(l instanceof t)return l._then(a,v,null,null,null)}a()}(),s}function f(e,t,r){this._data=e,this._promise=t,this._context=r}function b(e,t,r){this.constructor$(e,t,r)}function m(e){return f.isDisposer(e)?(this.resources[this.index]._setDisposable(e),e.promise()):e}function y(e){this.length=e,this.promise=null,this[e-1]=null}f.prototype.data=function(){return this._data},f.prototype.promise=function(){return this._promise},f.prototype.resource=function(){return this.promise().isFulfilled()?this.promise().value():h},f.prototype.tryDispose=function(e){var t=this.resource(),r=this._context;void 0!==r&&r._pushContext();var n=t!==h?this.doDispose(t,e):null;return void 0!==r&&r._popContext(),this._promise._unsetDisposable(),this._data=null,n},f.isDisposer=function(e){return null!=e&&"function"==typeof e.resource&&"function"==typeof e.tryDispose},u(b,f),b.prototype.doDispose=function(e,t){return this.data().call(e,e,t)},y.prototype._resultCancelled=function(){for(var e=this.length,r=0;r<e;++r){var n=this[r];n instanceof t&&n.cancel()}},t.using=function(){var e=arguments.length;if(e<2)return r("you must pass at least 2 arguments to Promise.using");var i,a=arguments[e-1];if("function"!=typeof a)return r("expecting a function but got "+s.classString(a));var l=!0;2===e&&Array.isArray(arguments[0])?(e=(i=arguments[0]).length,l=!1):(i=arguments,e--);for(var u=new y(e),h=0;h<e;++h){var v=i[h];if(f.isDisposer(v)){var b=v;(v=v.promise())._setDisposable(b)}else{var _=n(v);_ instanceof t&&(v=_._then(m,null,null,{resources:u,index:h},void 0))}u[h]=v}var w=new Array(u.length);for(h=0;h<w.length;++h)w[h]=t.resolve(u[h]).reflect();var R=t.all(w).then((function(e){for(var t=0;t<e.length;++t){var r=e[t];if(r.isRejected())return c.e=r.error(),c;if(!r.isFulfilled())return void R.cancel();e[t]=r.value()}g._pushContext(),a=p(a);var n=l?a.apply(void 0,e):a(e),i=g._popContext();return o.checkForgottenReturns(n,i,"Promise.using",g),n})),g=R.lastly((function(){var e=new t.PromiseInspection(R);return d(u,e)}));return u.promise=g,g._setOnCancel(u),g},t.prototype._setDisposable=function(e){this._bitField=131072|this._bitField,this._disposer=e},t.prototype._isDisposable=function(){return(131072&this._bitField)>0},t.prototype._getDisposer=function(){return this._disposer},t.prototype._unsetDisposable=function(){this._bitField=-131073&this._bitField,this._disposer=void 0},t.prototype.disposer=function(e){if("function"==typeof e)return new b(e,this,i());throw new l}}},{"./errors":12,"./util":36}],36:[function(e,t,n){"use strict";var i=e("./es5"),a="undefined"==typeof navigator,o={e:{}},s,l="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==r.g?r.g:void 0!==this?this:null;function u(){try{var e=s;return s=null,e.apply(this,arguments)}catch(e){return o.e=e,o}}function c(e){return s=e,u}var p=function(e,t){var r={}.hasOwnProperty;function n(){for(var n in this.constructor=e,this.constructor$=t,t.prototype)r.call(t.prototype,n)&&"$"!==n.charAt(n.length-1)&&(this[n+"$"]=t.prototype[n])}return n.prototype=t.prototype,e.prototype=new n,e.prototype};function h(e){return null==e||!0===e||!1===e||"string"==typeof e||"number"==typeof e}function v(e){return"function"==typeof e||"object"==typeof e&&null!==e}function d(e){return h(e)?new Error(j(e)):e}function f(e,t){var r,n=e.length,i=new Array(n+1);for(r=0;r<n;++r)i[r]=e[r];return i[r]=t,i}function b(e,t,r){if(!i.isES5)return{}.hasOwnProperty.call(e,t)?e[t]:void 0;var n=Object.getOwnPropertyDescriptor(e,t);return null!=n?null==n.get&&null==n.set?n.value:r:void 0}function m(e,t,r){if(h(e))return e;var n={value:r,configurable:!0,enumerable:!1,writable:!0};return i.defineProperty(e,t,n),e}function y(e){throw e}var _=function(){var e=[Array.prototype,Object.prototype,Function.prototype],t=function(t){for(var r=0;r<e.length;++r)if(e[r]===t)return!0;return!1};if(i.isES5){var r=Object.getOwnPropertyNames;return function(e){for(var n=[],a=Object.create(null);null!=e&&!t(e);){var o;try{o=r(e)}catch(e){return n}for(var s=0;s<o.length;++s){var l=o[s];if(!a[l]){a[l]=!0;var u=Object.getOwnPropertyDescriptor(e,l);null!=u&&null==u.get&&null==u.set&&n.push(l)}}e=i.getPrototypeOf(e)}return n}}var n={}.hasOwnProperty;return function(r){if(t(r))return[];var i=[];e:for(var a in r)if(n.call(r,a))i.push(a);else{for(var o=0;o<e.length;++o)if(n.call(e[o],a))continue e;i.push(a)}return i}}(),w=/this\s*\.\s*\S+\s*=/;function R(e){try{if("function"==typeof e){var t=i.names(e.prototype),r=i.isES5&&t.length>1,n=t.length>0&&!(1===t.length&&"constructor"===t[0]),a=w.test(e+"")&&i.names(e).length>0;if(r||n||a)return!0}return!1}catch(e){return!1}}function g(e){function t(){}t.prototype=e;var r=new t;function n(){return typeof r.foo}return n(),n(),e}var O=/^[a-z$_][a-z$_0-9]*$/i;function q(e){return O.test(e)}function T(e,t,r){for(var n=new Array(e),i=0;i<e;++i)n[i]=t+i+r;return n}function j(e){try{return e+""}catch(e){return"[no string representation]"}}function S(e){return e instanceof Error||null!==e&&"object"==typeof e&&"string"==typeof e.message&&"string"==typeof e.name}function P(e){try{m(e,"isOperational",!0)}catch(e){}}function C(e){return null!=e&&(e instanceof Error.__BluebirdErrorTypes__.OperationalError||!0===e.isOperational)}function E(e){return S(e)&&i.propertyIsWritable(e,"stack")}var k="stack"in new Error?function(e){return E(e)?e:new Error(j(e))}:function(e){if(E(e))return e;try{throw new Error(j(e))}catch(e){return e}};function F(e){return{}.toString.call(e)}function x(e,t,r){for(var n=i.names(e),a=0;a<n.length;++a){var o=n[a];if(r(o))try{i.defineProperty(t,o,i.getDescriptor(e,o))}catch(e){}}}var A=function(e){return i.isArray(e)?e:null};if("undefined"!=typeof Symbol&&Symbol.iterator){var G="function"==typeof Array.from?function(e){return Array.from(e)}:function(e){for(var t,r=[],n=e[Symbol.iterator]();!(t=n.next()).done;)r.push(t.value);return r};A=function(e){return i.isArray(e)?e:null!=e&&"function"==typeof e[Symbol.iterator]?G(e):null}}var I="undefined"!=typeof process&&"[object process]"===F(process).toLowerCase(),D="undefined"!=typeof process&&void 0!==process.env,N;function L(e){return D?process.env[e]:void 0}function U(){if("function"==typeof Promise)try{if("[object Promise]"===F(new Promise((function(){}))))return Promise}catch(e){}}function B(e,t){if(null===e||"function"!=typeof t||t===N)return t;null!==e.domain&&(t=e.domain.bind(t));var r=e.async;if(null!==r){var n=t;t=function(){var e=new Array(2).concat([].slice.call(arguments));return e[0]=n,e[1]=this,r.runInAsyncScope.apply(r,e)}}return t}var M={setReflectHandler:function(e){N=e},isClass:R,isIdentifier:q,inheritedDataKeys:_,getDataPropertyOrDefault:b,thrower:y,isArray:i.isArray,asArray:A,notEnumerableProp:m,isPrimitive:h,isObject:v,isError:S,canEvaluate:a,errorObj:o,tryCatch:c,inherits:p,withAppended:f,maybeWrapAsError:d,toFastProperties:g,filledRange:T,toString:j,canAttachTrace:E,ensureErrorObject:k,originatesFromRejection:C,markAsOriginatingFromRejection:P,classString:F,copyDescriptors:x,isNode:I,hasEnvVariables:D,env:L,global:l,getNativePromise:U,contextBind:B},V;M.isRecentNode=M.isNode&&(process.versions&&process.versions.node?V=process.versions.node.split(".").map(Number):process.version&&(V=process.version.split(".").map(Number)),0===V[0]&&V[1]>10||V[0]>0),M.nodeSupportsAsyncResource=M.isNode&&function(){var t=!1;try{t="function"==typeof e("async_hooks").AsyncResource.prototype.runInAsyncScope}catch(e){t=!1}return t}(),M.isNode&&M.toFastProperties(process);try{throw new Error}catch(e){M.lastLineError=e}t.exports=M},{"./es5":13,async_hooks:void 0}]},{},[4])(4)},e.exports=n(),"undefined"!=typeof window&&null!==window?window.P=window.Promise:"undefined"!=typeof self&&null!==self&&(self.P=self.Promise)},553:e=>{!function(t){"use strict";var r=function(e){var t=e||{};this.name=t.name||"batch_AAA123",this.changeSets=t.changeSets||[],this.requests=t.requests||[],this.headers=t.headers||[],this.async=t.async,this.isOverLengthGet=t.isOverLengthGet};r.prototype.buildPayload=function(){for(var e="",t=0;t<this.changeSets.length;t++){e+="--"+this.name+"\n",e+="Content-Type: multipart/mixed;boundary="+this.changeSets[t].name+"\n\n",e+=this.changeSets[t].stringify()}for(var r=0;r<this.requests.length;r++){e+="--"+this.name+"\n",e+="Content-Type: application/http\n",e+="Content-Transfer-Encoding:binary\n\n",e+=this.requests[r].stringify(),r===this.requests.length-1&&(e+="--"+this.name+"--\n")}return e},e.exports=r}()},803:e=>{!function(t){"use strict";var r=function(e){var t=e||{};this.method=t.method,this.url=t.url,this.payload=t.payload,this.headers=t.headers||[],this.contentId=t.contentId};r.prototype.stringify=function(){var e="";this.contentId&&(e+="Content-ID: "+this.contentId+"\n\n"),e+=this.method+" "+this.url+" HTTP/1.1\n";for(var t=0;t<this.headers.length;t++){var r=this.headers[t];-1===["accept","content-type"].indexOf(r.key.toLowerCase())&&(e+=r.key+": "+r.value+"\n")}return"get"===this.method.toLowerCase()?e+="Accept: application/json\n\n":e+="Content-Type: application/json;type=entry\n\n",this.payload?e+=JSON.stringify(this.payload):"delete"===this.method.toLowerCase()&&(e+=JSON.stringify({})),e},e.exports=r}()},956:(e,t,r)=>{!function(t){"use strict";var n=r(997);e.exports=function(e){var t=e||{};if(this.name=t.name,this.changeSetResponses=t.changeSetResponses||[],this.batchResponses=t.batchResponses||[],this.isFaulted=t.isFaulted||!1,this.errors=t.errors||[],t.xhr){var r=t.xhr,i=r.responseText,a=r.getResponseHeader("Content-Type");this.name=a.substring(a.indexOf("boundary=")).replace("boundary=","");for(var o=i.match(/boundary=changesetresponse.*/g),s=0;o&&s<o.length;s++){for(var l=o[s].replace("boundary=",""),u=new RegExp("--"+l+"[\\S\\s]*?(?=--"+l+")","gm"),c={name:l,responses:[]},p=i.match(u),h=0;h<p.length;h++){var v=new n.Response({rawData:p[h]});v.payload&&v.payload.error&&(this.isFaulted=!0,this.errors.push(v.payload.error)),c.responses.push(v)}this.changeSetResponses.push(c)}for(var d=new RegExp("--"+this.name+"[\\r\\n]+Content-Type: application\\/http[\\S\\s]*?(?=--"+this.name+")","gm"),f=i.match(d),b=0;f&&b<f.length;b++){var m=new n.Response({rawData:f[b]});m.payload&&m.payload.error&&(this.isFaulted=!0,this.errors.push(m.payload.error)),this.batchResponses.push(m)}}}}()},943:e=>{!function(t){"use strict";var r=1,n=function(e){var t=e||{};this.name=t.name||"changeset_"+r++,this.requests=t.requests||[]};n.prototype.stringify=function(){for(var e="",t=1,r=0;r<this.requests.length;r++){e+="--"+this.name+"\n",e+="Content-Type: application/http\n",e+="Content-Transfer-Encoding:binary\n";var n=this.requests[r];n.contentId=n.contentId||t++,e+=n.stringify()+"\n",r===this.requests.length-1&&(e+="--"+this.name+"--\n\n")}return e},e.exports=n}()},997:(e,t,r)=>{
/* @preserve
 * MIT License
 *
 * Copyright (c) 2016 Florian Krönert
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
*/
!function(t){"use strict";var n={};n.ApiVersion="8.0",n.Version="v4.0.9",n.ReturnAllPages=!1,n.PrettifyErrors=!0,n.Async=!0,n.ClientUrl=null,n.Token=null;var i=r(624).noConflict();function a(){var e="undefined"!=typeof GetGlobalContext?GetGlobalContext():"undefined"!=typeof Xrm?Xrm.Page.context:void 0;if(e)return e.getClientUrl();if(n.ClientUrl)return n.ClientUrl;throw new Error("Failed to retrieve client url, is ClientGlobalContext.aspx available?")}function o(e,t){return e||t?e&&!t?e:!e&&t?t:(e.value=e.value.concat(t.value),delete e["@odata.nextLink"],delete e["@Microsoft.Dynamics.CRM.fetchxmlpagingcookie"],e):null}function s(e){return e?e.replace("{","").replace("}",""):e}n.GetSetName=function(e,t){if(t)return t;switch(e.slice(-1)){case"s":return e+"es";case"y":return e.substring(0,e.length-1)+"ies";default:return e+"s"}};var l=[{key:"Accept",value:"application/json"},{key:"OData-Version",value:"4.0"},{key:"OData-MaxVersion",value:"4.0"},{key:"Content-Type",value:"application/json; charset=utf-8"}];function u(e){if(!e.key||void 0===e.value)throw new Error("Each request header needs a key and a value!");if("string"!=typeof e.key)throw new Error("Header key "+e.key+" is not a string");if("string"!=typeof e.value)throw new Error("Header value "+e.value+" for key "+e.key+" is not a string")}function c(e,t){if(t)for(var r=0;r<t.length;r++){var n=t[r];u(n),e.setRequestHeader(n.key,n.value)}}function p(e){var t=e||{};if(!t.entityName&&!t.overriddenSetName||!t.entityId&&!t.alternateKey)throw new Error("Need entity name or overridden set name and entity id or alternate key for getting record url!");var r=n.GetApiUrl()+n.GetSetName(t.entityName,t.overriddenSetName);return t.alternateKey?r+=O(t):r+="("+s(t.entityId)+")",r}function h(e){if(e&&e.response){var t=y(e);if(t instanceof n.BatchResponse){var r="";return t.errors.length>0&&(r=t.errors.map((function(e){return e.code+": "+e.message})).join("\n\r")),e.status+" - "+r}var i=JSON.parse(e.response);if(n.PrettifyErrors){var a="";return i.error&&(a=i.error.message),e.statusText+": "+a}return i.xhrStatusText=e.statusText,JSON.stringify(i)}return""}function v(e){return e["@odata.nextLink"]}function d(e){return e["@Microsoft.Dynamics.CRM.fetchxmlpagingcookie"]}function f(e,t){var r=new DOMParser,n=r.parseFromString(e,"text/xml").documentElement.getAttribute("pagingcookie");n&&0===n.indexOf("%253ccookie%2520page")&&(n=unescape(n));var i=unescape(n),a=parseInt(/<cookie page="([\d]+)">/.exec(i)[1])+1,o=r.parseFromString(t.fetchXml,"text/xml"),s=o.documentElement;return s.setAttribute("page",a),s.setAttribute("paging-cookie",i),(new XMLSerializer).serializeToString(o)}function b(e,t){e._previousResponse=t}function m(){var e=[];if(!arguments)return e;for(var t=0;t<arguments.length;t++){var r=arguments[t];if(r&&Array.isArray(r))for(var n=0;n<r.length;n++){var i=r[n];u(i);for(var a=!0,o=0;o<e.length;o++)if(e[o].key===i.key){a=!1;break}a&&e.push(i)}}return e}function y(e){return function(e){return e&&/^--batchresponse_[a-fA-F0-9\-]+$/m.test(e)}(e.responseText)?new n.BatchResponse({xhr:e}):JSON.parse(e.responseText)}function _(e,t){return e&&"get"===e.toLowerCase()&&t&&t.length>2048}function w(e,t,r,a){var s=new XMLHttpRequest,u=new i((function(t,r){s.onload=function(){if(4===s.readyState)if(200===s.status){var i=y(s);i instanceof n.BatchResponse&&(a.isOverLengthGet?i=i.batchResponses[0].payload:t(i));var l=v(i),u=d(i),c=!("@Microsoft.Dynamics.CRM.morerecords"in i)||i["@Microsoft.Dynamics.CRM.morerecords"];if(i=o(a._previousResponse,i),c&&l&&(n.ReturnAllPages||a.returnAllPages))b(a,i),t(w("GET",l,null,a));else if(a.fetchXml&&c&&u&&(n.ReturnAllPages||a.returnAllPages)){var p=f(u,a);b(a,i),a.fetchXml=p,t(n.Retrieve(a))}else t(i)}else 201===s.status?t(y(s)):204===s.status?"post"===e.toLowerCase()?t(s.getResponseHeader("OData-EntityId")):t(s.statusText):r(new Error(h(s)))},s.onerror=function(){r(new Error(h(s)))}})),p=[];if(_(e,t)){var R=new n.Batch({requests:[new n.BatchRequest({method:e,url:t,payload:r,headers:a.headers})],async:!0,isOverLengthGet:!0});return n.SendBatch(R)}return s.open(e,t,!0),p=m(p,a.headers,l),c(s,p),r?"string"==typeof r?s.send(r):s.send(JSON.stringify(r)):s.send(),u}function R(e,t,r,i){var a,s=new XMLHttpRequest,u=[];if(_(e,t)){var p=new n.Batch({requests:[new n.BatchRequest({method:e,url:t,payload:r,headers:i.headers})],async:!1,isOverLengthGet:!0});return n.SendBatch(p)}if(s.open(e,t,!1),c(s,u=m(u,i.headers,l)),r?"string"==typeof r?s.send(r):s.send(JSON.stringify(r)):s.send(),4===s.readyState){if(200===s.status){if((a=y(s))instanceof n.BatchResponse){if(!i.isOverLengthGet)return a;a=a.batchResponses[0].payload}var w=v(a),g=d(a),O=!("@Microsoft.Dynamics.CRM.morerecords"in a)||a["@Microsoft.Dynamics.CRM.morerecords"];if(a=o(i._previousResponse,a),O&&w&&(n.ReturnAllPages||i.returnAllPages))b(i,a),R("GET",w,null,i);else if(i.fetchXml&&O&&g&&(n.ReturnAllPages||i.returnAllPages)){var q=f(g,i);b(i,a),i.fetchXml=q,n.Retrieve(i)}}else if(201===s.status)a=y(s);else{if(204!==s.status)throw new Error(h(s));a="post"===e.toLowerCase()?s.getResponseHeader("OData-EntityId"):s.statusText}return a}}function g(e){return void 0!==e.async?e.async:n.Async}function O(e){if(!e||!e.alternateKey)return"";for(var t="(",r=0;r<e.alternateKey.length;r++){var n=e.alternateKey[r],i=n.value;"number"!=typeof n.value&&(i="'"+n.value+"'"),t+=n.property+"="+i,r+1===e.alternateKey.length?t+=")":t+=","}return t}n.GetDefaultHeaders=function(){return l},n.AppendToDefaultHeaders=function(){if(arguments.length)for(var e=0;e<arguments.length;e++){var t=arguments[e];u(t),l.push(t)}},n.SendRequest=function(e,t,r,i){var a=i||{};return Array.isArray(a)&&(a={headers:a}),n.Token&&(a.headers=a.headers||[],a.headers.push({key:"Authorization",value:"Bearer "+n.Token})),a.asBatch?new n.BatchRequest({method:e,url:t,payload:r,headers:a.headers}):g(a)?w(e,t,r,a):R(e,t,r,a)},n.Configure=function(e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])},n.GetApiUrl=function(){return a()+"/api/data/v"+n.ApiVersion+"/"},n.Create=function(e){var t=e||{};if(!t.entityName&&!t.overriddenSetName||!t.entity)throw new Error("Entity name and entity object have to be passed!");var r=n.GetApiUrl()+n.GetSetName(t.entityName,t.overriddenSetName);return n.SendRequest("POST",r,t.entity,t)},n.Retrieve=function(e){var t=e||{};if(!t.entityName&&!t.overriddenSetName)throw new Error("Entity name has to be passed!");var r=n.GetApiUrl()+n.GetSetName(t.entityName,t.overriddenSetName);return t.entityId?r+="("+s(t.entityId)+")":t.fetchXml?r+="?fetchXml="+escape(t.fetchXml):t.alternateKey&&(r+=O(t)),t.queryParams&&(r+=t.queryParams),n.SendRequest("GET",r,null,t)},n.Update=function(e){var t=e||{};if(!t.entity)throw new Error("Update object has to be passed!");var r=p(t);return n.SendRequest("PATCH",r,t.entity,t)},n.Delete=function(e){var t=e||{},r=p(t);return t.queryParams&&(r+=t.queryParams),n.SendRequest("DELETE",r,null,t)},n.Associate=function(e){var t=e||{};if(!t.relationShip)throw new Error("Relationship has to be passed!");if(!t.source||!t.target)throw new Error("Source and target have to be passed!");var r=p(t.target)+("/"+t.relationShip+"/$ref"),i={"@odata.id":p(t.source)};return n.SendRequest("POST",r,i,t)},n.Disassociate=function(e){var t=e||{};if(!t.relationShip)throw new Error("Relationship has to be passed!");if(!t.source||!t.target)throw new Error("Source and target have to be passed!");if(!t.source.entityId)throw new Error("Source needs entityId set!");var r=p(t.target)+("/"+t.relationShip+"("+s(t.source.entityId)+")/$ref");return n.SendRequest("DELETE",r,null,t)},n.Execute=function(e){if(!e)throw new Error("You need to pass a request!");if(!(e instanceof n.Requests.Request))throw new Error("Request for execution must be in prototype chain of WebApiClient.Request");return n.SendRequest(e.method,e.buildUrl(),e.payload,e)},n.SendBatch=function(e){if(!e)throw new Error("You need to pass a batch!");if(!(e instanceof n.Batch))throw new Error("Batch for execution must be a WebApiClient.Batch object");var t=n.GetApiUrl()+"$batch";e.headers=e.headers||[],e.headers.push({key:"Content-Type",value:"multipart/mixed;boundary="+e.name});var r=e.buildPayload();return n.SendRequest("POST",t,r,e)},n.Expand=function(e){for(var t=e||{},r=t.records,a=[],o=g(e),s=0;s<r.length;s++){var l=r[s];for(var u in l)if(l.hasOwnProperty(u)){var c=u.replace("@odata.nextLink","");c&&c!==u&&(l[c]=n.SendRequest("GET",l[u],null,t),delete l[u])}o&&a.push(i.props(l))}return o?i.all(a):r},e.exports=n}()},999:(e,t,r)=>{!function(t){"use strict";var n=r(997);var i={Request:function(){this.method="",this.name="",this.bound=!1,this.entityName="",this.entityId="",this.payload=null,this.headers=null,this.urlParams=null,this.async=!0}};i.Request.prototype.with=function(e){var t=Object.create(this);for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t},i.Request.prototype.buildUrl=function(){var e=n.GetApiUrl();if(this.bound&&this.entityId){var t=this.entityId.replace("{","").replace("}","");e+=n.GetSetName(this.entityName)+"("+t+")/"}return this.bound&&-1===this.name.indexOf("Microsoft.Dynamics.CRM.")&&(e+="Microsoft.Dynamics.CRM."),e+=this.name,this.urlParams?e=function(e,t){var r=1;for(var n in t)t.hasOwnProperty(n)&&(e+=1===r?"?@p1=":"&@p"+r+"=",r++,e+=t[n]);return e}(e=function(e,t){e+="(";var r=1;for(var n in t)t.hasOwnProperty(n)&&(1!==r&&(e+=","),e+=n+"=@p"+r++);return e+")"}(e,this.urlParams),this.urlParams):e+="()",e},i.CalculateRollupFieldRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"CalculateRollupField",writeable:!0}}),i.CalculateTotalTimeIncidentRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"CalculateTotalTimeIncident",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"incident",writeable:!0}}),i.CheckIncomingEmailRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"CheckIncomingEmail",writeable:!0}}),i.CheckPromoteEmailRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"CheckPromoteEmail",writeable:!0}}),i.DownloadReportDefinitionRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"DownloadReportDefinition",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"report",writeable:!0}}),i.ExpandCalendarRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"ExpandCalendar",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"calendar",writeable:!0}}),i.ExportFieldTranslationRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"ExportFieldTranslation",writeable:!0}}),i.FetchXmlToQueryExpressionRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"FetchXmlToQueryExpression",writeable:!0}}),i.FindParentResourceGroupRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"FindParentResourceGroup",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"resourcegroup",writeable:!0}}),i.GetAllTimeZonesWithDisplayNameRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"GetAllTimeZonesWithDisplayName",writeable:!0},bound:{value:!0,writeable:!0}}),i.GetDefaultPriceLevelRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"GetDefaultPriceLevel",writeable:!0},bound:{value:!0,writeable:!0}}),i.GetDistinctValuesImportFileRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"GetDistinctValuesImportFile",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"importfile",writeable:!0}}),i.GetHeaderColumnsImportFileRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"GetHeaderColumnsImportFile",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"importfile",writeable:!0}}),i.GetQuantityDecimalRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"GetQuantityDecimal",writeable:!0},bound:{value:!0,writeable:!0}}),i.GetReportHistoryLimitRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"GetReportHistoryLimit",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"report",writeable:!0}}),i.GetTimeZoneCodeByLocalizedNameRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"GetTimeZoneCodeByLocalizedName",writeable:!0}}),i.GetValidManyToManyRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"GetValidManyToMany",writeable:!0}}),i.GetValidReferencedEntitiesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"GetValidReferencedEntities",writeable:!0}}),i.GetValidReferencingEntitiesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"GetValidReferencingEntities",writeable:!0}}),i.IncrementKnowledgeArticleViewCountRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"IncrementKnowledgeArticleViewCount",writeable:!0}}),i.InitializeFromRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"InitializeFrom",writeable:!0}}),i.IsComponentCustomizableRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"IsComponentCustomizable",writeable:!0}}),i.IsDataEncryptionActiveRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"IsDataEncryptionActive",writeable:!0}}),i.IsValidStateTransitionRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"IsValidStateTransition",writeable:!0}}),i.QueryMultipleSchedulesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"QueryMultipleSchedules",writeable:!0}}),i.QueryScheduleRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"QuerySchedule",writeable:!0}}),i.RetrieveAbsoluteAndSiteCollectionUrlRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveAbsoluteAndSiteCollectionUrl",writeable:!0},bound:{value:!0,writeable:!0}}),i.RetrieveActivePathRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveActivePath",writeable:!0}}),i.RetrieveAllChildUsersSystemUserRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveAllChildUsersSystemUser",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"systemuser",writeable:!0}}),i.RetrieveAllEntitiesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveAllEntities",writeable:!0}}),i.RetrieveApplicationRibbonRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveApplicationRibbon",writeable:!0}}),i.RetrieveAuditPartitionListRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveAuditPartitionList",writeable:!0}}),i.RetrieveAvailableLanguagesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveAvailableLanguages",writeable:!0}}),i.RetrieveBusinessHierarchyBusinessUnitRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveBusinessHierarchyBusinessUnit",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"businessunit",writeable:!0}}),i.RetrieveByGroupResourceRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveByGroupResource",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"resourcegroup",writeable:!0}}),i.RetrieveByResourceResourceGroupRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveByResourceResourceGroup",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"resource",writeable:!0}}),i.RetrieveByResourcesServiceRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveByResourcesService",writeable:!0}}),i.RetrieveByTopIncidentProductKbArticleRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveByTopIncidentProductKbArticle",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"product",writeable:!0}}),i.RetrieveByTopIncidentSubjectKbArticleRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveByTopIncidentSubjectKbArticle",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"subject",writeable:!0}}),i.RetrieveCurrentOrganizationRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveCurrentOrganization",writeable:!0}}),i.RetrieveDataEncryptionKeyRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveDataEncryptionKey",writeable:!0}}),i.RetrieveDependenciesForDeleteRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveDependenciesForDelete",writeable:!0}}),i.RetrieveDependenciesForUninstallRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveDependenciesForUninstall",writeable:!0}}),i.RetrieveDependentComponentsRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveDependentComponents",writeable:!0}}),i.RetrieveDeploymentLicenseTypeRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveDeploymentLicenseType",writeable:!0}}),i.RetrieveDeprovisionedLanguagesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveDeprovisionedLanguages",writeable:!0}}),i.RetrieveDuplicatesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveDuplicates",writeable:!0}}),i.RetrieveEntityChangesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveEntityChanges",writeable:!0}}),i.RetrieveEntityRibbonRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveEntityRibbon",writeable:!0}}),i.RetrieveExchangeAppointmentsRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveExchangeAppointments",writeable:!0}}),i.RetrieveExchangeRateRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveExchangeRate",writeable:!0}}),i.RetrieveFilteredFormsRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveFilteredForms",writeable:!0},bound:{value:!0,writeable:!0}}),i.RetrieveFormattedImportJobResultsRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveFormattedImportJobResults",writeable:!0}}),i.RetrieveInstalledLanguagePacksRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveInstalledLanguagePacks",writeable:!0}}),i.RetrieveInstalledLanguagePackVersionRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveInstalledLanguagePackVersion",writeable:!0}}),i.RetrieveLicenseInfoRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveLicenseInfo",writeable:!0}}),i.RetrieveLocLabelsRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveLocLabels",writeable:!0}}),i.RetrieveMailboxTrackingFoldersRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveMailboxTrackingFolders",writeable:!0}}),i.RetrieveMembersBulkOperationRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveMembersBulkOperation",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"bulkoperation",writeable:!0}}),i.RetrieveMissingComponentsRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveMissingComponents",writeable:!0}}),i.RetrieveMissingDependenciesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveMissingDependencies",writeable:!0}}),i.RetrieveOrganizationResourcesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveOrganizationResources",writeable:!0}}),i.RetrieveParentGroupsResourceGroupRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveParentGroupsResourceGroup",writeable:!0}}),i.RetrieveParsedDataImportFileRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveParsedDataImportFile",writeable:!0}}),i.RetrievePersonalWallRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrievePersonalWall",writeable:!0},bound:{value:!0,writeable:!0}}),i.RetrievePrincipalAccessRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrievePrincipalAccess",writeable:!0},bound:{value:!0,writeable:!0}}),i.RetrievePrincipalAttributePrivilegesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrievePrincipalAttributePrivileges",writeable:!0},bound:{value:!0,writeable:!0}}),i.RetrievePrincipalSyncAttributeMappingsRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrievePrincipalSyncAttributeMappings",writeable:!0},bound:{value:!0,writeable:!0}}),i.RetrievePrivilegeSetRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrievePrivilegeSet",writeable:!0},bound:{value:!0,writeable:!0}}),i.RetrieveProcessInstancesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveProcessInstances",writeable:!0}}),i.RetrieveProductPropertiesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveProductProperties",writeable:!0},bound:{value:!0,writeable:!0}}),i.RetrieveProvisionedLanguagePackVersionRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveProvisionedLanguagePackVersion",writeable:!0}}),i.RetrieveProvisionedLanguagesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveProvisionedLanguages",writeable:!0}}),i.RetrieveRecordWallRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveRecordWall",writeable:!0},bound:{value:!0,writeable:!0}}),i.RetrieveRequiredComponentsRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveRequiredComponents",writeable:!0}}),i.RetrieveRolePrivilegesRoleRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveRolePrivilegesRole",writeable:!0}}),i.RetrieveSubGroupsResourceGroupRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveSubGroupsResourceGroup",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"resourcegroup",writeable:!0}}),i.RetrieveTeamPrivilegesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveTeamPrivileges",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"team",writeable:!0}}),i.RetrieveTimestampRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveTimestamp",writeable:!0}}),i.RetrieveUnpublishedMultipleRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveUnpublishedMultiple",writeable:!0},bound:{value:!0,writeable:!0}}),i.RetrieveUserPrivilegesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveUserPrivileges",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"systemuser",writeable:!0}}),i.RetrieveUserQueuesRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveUserQueues",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"systemuser",writeable:!0}}),i.RetrieveVersionRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"RetrieveVersion",writeable:!0}}),i.RollupRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"Rollup",writeable:!0}}),i.SearchRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"Search",writeable:!0}}),i.SearchByBodyKbArticleRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"SearchByBodyKbArticle",writeable:!0},bound:{value:!0,writeable:!0}}),i.SearchByKeywordsKbArticleRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"SearchByKeywordsKbArticle",writeable:!0},bound:{value:!0,writeable:!0}}),i.SearchByTitleKbArticleRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"SearchByTitleKbArticle",writeable:!0},bound:{value:!0,writeable:!0}}),i.ValidateRecurrenceRuleRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"ValidateRecurrenceRule",writeable:!0}}),i.WhoAmIRequest=Object.create(i.Request.prototype,{method:{value:"GET",writeable:!0},name:{value:"WhoAmI",writeable:!0}}),i.AddItemCampaignRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddItemCampaign",writeable:!0},bound:{value:!0,writeable:!0}}),i.AddItemCampaignActivityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddItemCampaignActivity",writeable:!0}}),i.AddListMembersListRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddListMembersList",writeable:!0}}),i.AddMemberListRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddMemberList",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"list",writeable:!0}}),i.AddMembersTeamRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddMembersTeam",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"team",writeable:!0}}),i.AddPrincipalToQueueRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddPrincipalToQueue",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"queue",writeable:!0}}),i.AddPrivilegesRoleRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddPrivilegesRole",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"role",writeable:!0}}),i.AddRecurrenceRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddRecurrence",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"appointment",writeable:!0}}),i.AddSolutionComponentRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddSolutionComponent",writeable:!0}}),i.AddToQueueRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddToQueue",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"queue",writeable:!0}}),i.AddUserToRecordTeamRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AddUserToRecordTeam",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"systemuser",writeable:!0}}),i.ApplyRecordCreationAndUpdateRuleRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ApplyRecordCreationAndUpdateRule",writeable:!0}}),i.ApplyRoutingRuleRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ApplyRoutingRule",writeable:!0}}),i.AutoMapEntityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"AutoMapEntity",writeable:!0}}),i.BookRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"Book",writeable:!0}}),i.BulkDeleteRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"BulkDelete",writeable:!0}}),i.BulkDetectDuplicatesRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"BulkDetectDuplicates",writeable:!0}}),i.CalculateActualValueOpportunityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CalculateActualValueOpportunity",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"opportunity",writeable:!0}}),i.CalculatePriceRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CalculatePrice",writeable:!0}}),i.CanBeReferencedRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CanBeReferenced",writeable:!0}}),i.CanBeReferencingRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CanBeReferencing",writeable:!0}}),i.CancelContractRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CancelContract",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"contract",writeable:!0}}),i.CancelSalesOrderRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CancelSalesOrder",writeable:!0}}),i.CanManyToManyRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CanManyToMany",writeable:!0}}),i.CloneAsPatchRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CloneAsPatch",writeable:!0}}),i.CloneAsSolutionRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CloneAsSolution",writeable:!0}}),i.CloneContractRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CloneContract",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"contract",writeable:!0}}),i.CloneMobileOfflineProfileRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CloneMobileOfflineProfile",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"mobileofflineprofile",writeable:!0}}),i.CloneProductRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CloneProduct",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"product",writeable:!0}}),i.CloseIncidentRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CloseIncident",writeable:!0}}),i.CloseQuoteRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CloseQuote",writeable:!0}}),i.CompoundUpdateDuplicateDetectionRuleRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CompoundUpdateDuplicateDetectionRule",writeable:!0}}),i.ConvertOwnerTeamToAccessTeamRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ConvertOwnerTeamToAccessTeam",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"team",writeable:!0}}),i.ConvertProductToKitRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ConvertProductToKit",writeable:!0}}),i.ConvertQuoteToSalesOrderRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ConvertQuoteToSalesOrder",writeable:!0}}),i.ConvertSalesOrderToInvoiceRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ConvertSalesOrderToInvoice",writeable:!0}}),i.CopyCampaignRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CopyCampaign",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"campaign",writeable:!0}}),i.CopyCampaignResponseRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CopyCampaignResponse",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"campaignresponse",writeable:!0}}),i.CopyDynamicListToStaticRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CopyDynamicListToStatic",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"list",writeable:!0}}),i.CopyMembersListRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CopyMembersList",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"list",writeable:!0}}),i.CopySystemFormRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CopySystemForm",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"systemform",writeable:!0}}),i.CreateActivitiesListRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CreateActivitiesList",writeable:!0}}),i.CreateCustomerRelationshipsRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CreateCustomerRelationships",writeable:!0}}),i.CreateExceptionRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CreateException",writeable:!0},bound:{value:!0,writeable:!0}}),i.CreateInstanceRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CreateInstance",writeable:!0}}),i.CreateKnowledgeArticleTranslationRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CreateKnowledgeArticleTranslation",writeable:!0}}),i.CreateKnowledgeArticleVersionRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CreateKnowledgeArticleVersion",writeable:!0}}),i.CreateWorkflowFromTemplateRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"CreateWorkflowFromTemplate",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"workflow",writeable:!0}}),i.DeleteAndPromoteRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"DeleteAndPromote",writeable:!0}}),i.DeleteAuditDataRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"DeleteAuditData",writeable:!0}}),i.DeleteOpenInstancesRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"DeleteOpenInstances",writeable:!0}}),i.DeleteOptionValueRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"DeleteOptionValue",writeable:!0}}),i.DeliverIncomingEmailRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"DeliverIncomingEmail",writeable:!0},bound:{value:!0,writeable:!0}}),i.DeliverPromoteEmailRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"DeliverPromoteEmail",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"email",writeable:!0}}),i.DeprovisionLanguageRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"DeprovisionLanguage",writeable:!0}}),i.DistributeCampaignActivityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"DistributeCampaignActivity",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"campaignactivity",writeable:!0}}),i.ExecuteWorkflowRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ExecuteWorkflow",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"workflow",writeable:!0}}),i.ExportMappingsImportMapRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ExportMappingsImportMap",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"importmap",writeable:!0}}),i.ExportSolutionRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ExportSolution",writeable:!0}}),i.ExportTranslationRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ExportTranslation",writeable:!0},bound:{value:!0,writeable:!0}}),i.FulfillSalesOrderRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"FulfillSalesOrder",writeable:!0},bound:{value:!0,writeable:!0}}),i.FullTextSearchKnowledgeArticleRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"FullTextSearchKnowledgeArticle",writeable:!0}}),i.GenerateInvoiceFromOpportunityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"GenerateInvoiceFromOpportunity",writeable:!0}}),i.GenerateQuoteFromOpportunityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"GenerateQuoteFromOpportunity",writeable:!0}}),i.GenerateSalesOrderFromOpportunityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"GenerateSalesOrderFromOpportunity",writeable:!0}}),i.GenerateSocialProfileRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"GenerateSocialProfile",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"socialprofile",writeable:!0}}),i.GetInvoiceProductsFromOpportunityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"GetInvoiceProductsFromOpportunity",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"invoice",writeable:!0}}),i.GetQuoteProductsFromOpportunityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"GetQuoteProductsFromOpportunity",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"quote",writeable:!0}}),i.GetSalesOrderProductsFromOpportunityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"GetSalesOrderProductsFromOpportunity",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"salesorder",writeable:!0}}),i.GetTrackingTokenEmailRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"GetTrackingTokenEmail",writeable:!0}}),i.ImportFieldTranslationRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ImportFieldTranslation",writeable:!0}}),i.ImportMappingsImportMapRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ImportMappingsImportMap",writeable:!0}}),i.ImportRecordsImportRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ImportRecordsImport",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"import",writeable:!0}}),i.ImportSolutionRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ImportSolution",writeable:!0}}),i.ImportTranslationRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ImportTranslation",writeable:!0}}),i.InsertOptionValueRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"InsertOptionValue",writeable:!0}}),i.InsertStatusValueRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"InsertStatusValue",writeable:!0}}),i.InstallSampleDataRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"InstallSampleData",writeable:!0}}),i.InstantiateFiltersRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"InstantiateFilters",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"systemuser",writeable:!0}}),i.InstantiateTemplateRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"InstantiateTemplate",writeable:!0}}),i.LockInvoicePricingRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"LockInvoicePricing",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"invoice",writeable:!0}}),i.LockSalesOrderPricingRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"LockSalesOrderPricing",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"salesorder",writeable:!0}}),i.LoseOpportunityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"LoseOpportunity",writeable:!0}}),i.MergeRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"Merge",writeable:!0}}),i.OrderOptionRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"OrderOption",writeable:!0}}),i.ParseImportRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ParseImport",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"import",writeable:!0}}),i.PickFromQueueRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"PickFromQueue",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"queueitem",writeable:!0}}),i.ProcessInboundEmailRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ProcessInboundEmail",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"email",writeable:!0}}),i.PropagateByExpressionRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"PropagateByExpression",writeable:!0}}),i.ProvisionLanguageRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ProvisionLanguage",writeable:!0}}),i.PublishAllXmlRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"PublishAllXml",writeable:!0}}),i.PublishDuplicateRuleRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"PublishDuplicateRule",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"duplicaterule",writeable:!0}}),i.PublishProductHierarchyRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"PublishProductHierarchy",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"product",writeable:!0}}),i.PublishThemeRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"PublishTheme",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"theme",writeable:!0}}),i.PublishXmlRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"PublishXml",writeable:!0}}),i.QualifyLeadRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"QualifyLead",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"lead",writeable:!0}}),i.QualifyMemberListRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"QualifyMemberList",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"list",writeable:!0}}),i.QueryExpressionToFetchXmlRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"QueryExpressionToFetchXml",writeable:!0}}),i.ReassignObjectsOwnerRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ReassignObjectsOwner",writeable:!0}}),i.ReassignObjectsSystemUserRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ReassignObjectsSystemUser",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"systemuser",writeable:!0}}),i.RecalculateRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"Recalculate",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"goal",writeable:!0}}),i.ReleaseToQueueRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ReleaseToQueue",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"queueitem",writeable:!0}}),i.RemoveFromQueueRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RemoveFromQueue",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"queueitem",writeable:!0}}),i.RemoveMembersTeamRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RemoveMembersTeam",writeable:!0},bound:{value:!0,writeable:!0}}),i.RemoveParentRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RemoveParent",writeable:!0}}),i.RemovePrivilegeRoleRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RemovePrivilegeRole",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"role",writeable:!0}}),i.RemoveSolutionComponentRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RemoveSolutionComponent",writeable:!0}}),i.RemoveUserFromRecordTeamRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RemoveUserFromRecordTeam",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"systemuser",writeable:!0}}),i.RenewContractRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RenewContract",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"contract",writeable:!0}}),i.RenewEntitlementRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RenewEntitlement",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"entitlement",writeable:!0}}),i.ReplacePrivilegesRoleRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ReplacePrivilegesRole",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"role",writeable:!0}}),i.RescheduleRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"Reschedule",writeable:!0}}),i.ResetUserFiltersRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ResetUserFilters",writeable:!0}}),i.RevertProductRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RevertProduct",writeable:!0}}),i.ReviseQuoteRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ReviseQuote",writeable:!0}}),i.RevokeAccessRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RevokeAccess",writeable:!0}}),i.RouteToRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"RouteTo",writeable:!0}}),i.SendBulkMailRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SendBulkMail",writeable:!0}}),i.SendEmailRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SendEmail",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"email",writeable:!0}}),i.SendEmailFromTemplateRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SendEmailFromTemplate",writeable:!0}}),i.SendFaxRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SendFax",writeable:!0}}),i.SendTemplateRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SendTemplate",writeable:!0}}),i.SetBusinessEquipmentRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SetBusinessEquipment",writeable:!0}}),i.SetBusinessSystemUserRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SetBusinessSystemUser",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"systemuser",writeable:!0}}),i.SetDataEncryptionKeyRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SetDataEncryptionKey",writeable:!0}}),i.SetFeatureStatusRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SetFeatureStatus",writeable:!0}}),i.SetLocLabelsRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SetLocLabels",writeable:!0}}),i.SetParentSystemUserRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SetParentSystemUser",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"systemuser",writeable:!0}}),i.SetProcessRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SetProcess",writeable:!0}}),i.SetReportRelatedRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"SetReportRelated",writeable:!0}}),i.TransformImportRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"TransformImport",writeable:!0}}),i.TriggerServiceEndpointCheckRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"TriggerServiceEndpointCheck",writeable:!0},bound:{value:!0,writeable:!0},entityName:{value:"serviceendpoint",writeable:!0}}),i.UninstallSampleDataRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"UninstallSampleData",writeable:!0}}),i.UnlockInvoicePricingRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"UnlockInvoicePricing",writeable:!0}}),i.UnlockSalesOrderPricingRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"UnlockSalesOrderPricing",writeable:!0}}),i.UnpublishDuplicateRuleRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"UnpublishDuplicateRule",writeable:!0}}),i.UpdateFeatureConfigRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"UpdateFeatureConfig",writeable:!0}}),i.UpdateOptionValueRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"UpdateOptionValue",writeable:!0}}),i.UpdateProductPropertiesRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"UpdateProductProperties",writeable:!0}}),i.UpdateSolutionComponentRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"UpdateSolutionComponent",writeable:!0}}),i.UpdateStateValueRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"UpdateStateValue",writeable:!0}}),i.ValidateRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"Validate",writeable:!0}}),i.ValidateSavedQueryRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"ValidateSavedQuery",writeable:!0},bound:{value:!0,writeable:!0}}),i.WinOpportunityRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"WinOpportunity",writeable:!0}}),i.WinQuoteRequest=Object.create(i.Request.prototype,{method:{value:"POST",writeable:!0},name:{value:"WinQuote",writeable:!0}}),e.exports=i}()},185:e=>{!function(t){"use strict";e.exports=function(e){var t=e||{};if(t.rawData){var r=t.rawData;this.contentId=function(e){var t=/^Content-ID: ([0-9]+)$/m.exec(e);return t&&t.length>1?t[1]:null}(r),this.payload=function(e){var t=/^{[\s\S]*}/m.exec(e);return t&&t.length>0?JSON.parse(t[0]):null}(r),this.status=function(e){var t=/^HTTP\/1\.1 ([0-9]{3,3}).*$/m.exec(e);return t&&t.length>1?t[1]:null}(r),this.headers=function(e){var t=/HTTP\/1.1.*[\r\n]+([\S\s]*)?(?={|$)/g.exec(e);if(t&&t.length>1){for(var r={},n=t[1].split(/[\r\n]/),i=0;i<n.length;i++){var a=n[i],o=a.indexOf(": "),s=a.substring(0,o);if(s){var l=a.substring(o+2);r[s]=l}}return r}return null}(r)}else this.contentId=t.contentId,this.payload=t.payload,this.status=t.status,this.headers=t.headers}}()},18:(e,t,r)=>{var n=r(997);
/* @preserve
 * The Bluebird license is included below as Terser keeps removing it (https://github.com/terser/terser/issues/575)
 */
/* @preserve
 * The MIT License (MIT)
 * 
 * Copyright (c) 2013-2018 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */n.Promise=r(624).noConflict(),n.Requests=r(999),n.Batch=r(553),n.ChangeSet=r(943),n.BatchRequest=r(803),n.BatchResponse=r(956),n.Response=r(185),e.exports=n}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,r),a.exports}r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}();var n=r(18);return n})()}));
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js"), __webpack_require__(/*! ./../../timers-browserify/main.js */ "./node_modules/timers-browserify/main.js").setImmediate))

/***/ }),

/***/ 7:
/*!************************************************!*\
  !*** multi ./app/scripts/levelup.extension.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /workspaces/Levelup-for-Dynamics-CRM/app/scripts/levelup.extension.ts */"./app/scripts/levelup.extension.ts");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,