{"version":3,"file":"serviceWorker.js","mappings":"mBAGAA,KAAKC,iBAAiB,WAAYC,IAChCC,QAAQC,KAAK,2BAA4BF,EAAM,IAGjDF,KAAKC,iBAAiB,YAAaC,IACjCC,QAAQC,KAAK,2BAA4BF,EAAM,IAIjDF,KAAKC,iBAAiB,QAASC,IAC7B,MAAM,MAAEG,EAAQ,aAAY,KAAEC,EAAO,iBAAoBJ,EAAMK,KAAKC,OAEpEN,EAAMO,UACJT,MAAMU,cAAcC,iBAAiBN,EAAO,CAC1CC,OACAM,KAJS,qCAMZ,IAGHZ,KAAKC,iBAAiB,qBAAsBC,IAC1CW,QAAQC,WAAW,sDACnBZ,EAAMa,aAAaC,OAAO,IAG5BhB,KAAKC,iBAAiB,0BAA2BC,IAC/CC,QAAQC,KAAK,wCAAyCF,EAAM,IAG9DF,KAAKC,iBAAiB,eAAgBC,IACpCC,QAAQC,KAAK,6BAA8BF,EAAM,IAGnDF,KAAKC,iBAAiB,SAAUC,IAC9BC,QAAQc,MAAM,uBAAwBf,EAAM,G","sources":["webpack://clickandread-addon/./src/background/notification/serviceWorker.js"],"sourcesContent":["import { API_SERVER_URL } from \"../../lib/constants\";\n\n// This code executes in its own worker or thread\nself.addEventListener(\"install\", (event) => {\n  console.info(\"Service Worker installed\", event);\n});\n\nself.addEventListener(\"activate\", (event) => {\n  console.info(\"Service Worker activated\", event);\n});\n\n// Event listener for push event.\nself.addEventListener(\"push\", (event) => {\n  const { title = \"Test title\", body = \"Test message.\" } = event.data.json();\n  const icon = \"../assets/img/icon_1024x1024.png\";\n  event.waitUntil(\n    self?.registration?.showNotification(title, {\n      body,\n      icon,\n    }) // Show a notification with title and message\n  ); // Keep the service worker alive until the notification is created\n});\n\nself.addEventListener(\"notificationclick\", (event) => {\n  clients.openWindow(`${API_SERVER_URL}/notification/history`);\n  event.notification.close();\n});\n\nself.addEventListener(\"pushsubscriptionchange\", (event) => {\n  console.info(\"Service Worker pushsubscriptionchange\", event);\n});\n\nself.addEventListener(\"statechange\", (event) => {\n  console.info(\"Service Worker statechange\", event);\n});\n\nself.addEventListener(\"error\", (event) => {\n  console.error(\"Service Worker error\", event);\n});\n"],"names":["self","addEventListener","event","console","info","title","body","data","json","waitUntil","registration","showNotification","icon","clients","openWindow","notification","close","error"],"sourceRoot":""}