(self.webpackChunkAwesomeScreenshot=self.webpackChunkAwesomeScreenshot||[]).push([[537],{2138:(e,t,n)=>{"use strict";n.d(t,{R_:()=>y,ez:()=>b});var r=n(6500),i=n(1350),a=2,o=.16,s=.05,c=.05,l=.15,u=5,f=4,d=[{index:7,opacity:.15},{index:6,opacity:.25},{index:5,opacity:.3},{index:5,opacity:.45},{index:5,opacity:.65},{index:5,opacity:.85},{index:4,opacity:.9},{index:3,opacity:.95},{index:2,opacity:.97},{index:1,opacity:.98}];function h(e){var t=e.r,n=e.g,i=e.b,a=(0,r.py)(t,n,i);return{h:360*a.h,s:a.s,v:a.v}}function p(e){var t=e.r,n=e.g,i=e.b;return"#".concat((0,r.vq)(t,n,i,!1))}function v(e,t,n){var r;return(r=Math.round(e.h)>=60&&Math.round(e.h)<=240?n?Math.round(e.h)-a*t:Math.round(e.h)+a*t:n?Math.round(e.h)+a*t:Math.round(e.h)-a*t)<0?r+=360:r>=360&&(r-=360),r}function m(e,t,n){return 0===e.h&&0===e.s?e.s:((r=n?e.s-o*t:t===f?e.s+o:e.s+s*t)>1&&(r=1),n&&t===u&&r>.1&&(r=.1),r<.06&&(r=.06),Number(r.toFixed(2)));var r}function g(e,t,n){var r;return(r=n?e.v+c*t:e.v-l*t)>1&&(r=1),Number(r.toFixed(2))}function y(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=[],r=(0,i.uA)(e),a=u;a>0;a-=1){var o=h(r),s=p((0,i.uA)({h:v(o,a,!0),s:m(o,a,!0),v:g(o,a,!0)}));n.push(s)}n.push(p(r));for(var c=1;c<=f;c+=1){var l=h(r),y=p((0,i.uA)({h:v(l,c),s:m(l,c),v:g(l,c)}));n.push(y)}return"dark"===t.theme?d.map((function(e){var r,a,o,s=e.index,c=e.opacity;return p((r=(0,i.uA)(t.backgroundColor||"#141414"),a=(0,i.uA)(n[s]),o=100*c/100,{r:(a.r-r.r)*o+r.r,g:(a.g-r.g)*o+r.g,b:(a.b-r.b)*o+r.b}))})):n}var b={red:"#F5222D",volcano:"#FA541C",orange:"#FA8C16",gold:"#FAAD14",yellow:"#FADB14",lime:"#A0D911",green:"#52C41A",cyan:"#13C2C2",blue:"#1890FF",geekblue:"#2F54EB",purple:"#722ED1",magenta:"#EB2F96",grey:"#666666"},w={},N={};Object.keys(b).forEach((function(e){w[e]=y(b[e]),w[e].primary=w[e][5],N[e]=y(b[e],{theme:"dark",backgroundColor:"#141414"}),N[e].primary=N[e][5]}));w.red,w.volcano,w.gold,w.orange,w.yellow,w.lime,w.green,w.cyan,w.blue,w.geekblue,w.purple,w.magenta,w.grey},2287:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"}}]},name:"up",theme:"outlined"}},6165:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var r=n(1413),i=n(4925),a=n(7294),o=n(8086),s=n.n(o),c=n(1755),l=a.forwardRef((function(e,t){var n=e.className,o=e.component,l=e.viewBox,u=e.spin,f=e.rotate,d=e.tabIndex,h=e.onClick,p=e.children,v=(0,i.Z)(e,["className","component","viewBox","spin","rotate","tabIndex","onClick","children"]);(0,c.Kp)(Boolean(o||p),"Should have `component` prop or `children`."),(0,c.C3)();var m=s()("anticon",n),g=s()({"anticon-spin":!!u}),y=f?{msTransform:"rotate(".concat(f,"deg)"),transform:"rotate(".concat(f,"deg)")}:void 0,b=(0,r.Z)((0,r.Z)({},c.vD),{},{className:g,style:y,viewBox:l});l||delete b.viewBox;var w=d;return void 0===w&&h&&(w=-1),a.createElement("span",Object.assign({role:"img"},v,{ref:t,tabIndex:w,onClick:h,className:m}),o?a.createElement(o,Object.assign({},b),p):p?((0,c.Kp)(Boolean(l)||1===a.Children.count(p)&&a.isValidElement(p)&&"use"===a.Children.only(p).type,"Make sure that you provide correct `viewBox` prop (default `0 0 1024 1024`) to the icon."),a.createElement("svg",Object.assign({},b,{viewBox:l}),p)):null)}));l.displayName="AntdIcon";const u=l},6700:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z"}}]},name:"arrow-left",theme:"outlined"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="ArrowLeftOutlined";const s=r.forwardRef(o)},5175:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294),i=n(8820),a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i.Z}))};o.displayName="CopyOutlined";const s=r.forwardRef(o)},7858:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z"}}]},name:"crown",theme:"filled"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="CrownFilled";const s=r.forwardRef(o)},8485:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zm-126 534.1H250.3l-53.8-409.4 139.8 86.1L512 252.9l175.7 234.4 139.8-86.1-53.9 409.4zM512 509c-62.1 0-112.6 50.5-112.6 112.6S449.9 734.2 512 734.2s112.6-50.5 112.6-112.6S574.1 509 512 509zm0 160.9c-26.6 0-48.2-21.6-48.2-48.3 0-26.6 21.6-48.3 48.2-48.3s48.2 21.6 48.2 48.3c0 26.6-21.6 48.3-48.2 48.3z"}}]},name:"crown",theme:"outlined"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="CrownOutlined";const s=r.forwardRef(o)},3695:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-200 0H360v-72h304v72z"}}]},name:"delete",theme:"filled"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="DeleteFilled";const s=r.forwardRef(o)},4804:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294),i=n(6023),a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i.Z}))};o.displayName="DownOutlined";const s=r.forwardRef(o)},5483:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M880 298.4H521L403.7 186.2a8.15 8.15 0 00-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32z"}}]},name:"folder",theme:"filled"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="FolderFilled";const s=r.forwardRef(o)},1816:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 00-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z"}}]},name:"folder-open",theme:"outlined"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="FolderOpenOutlined";const s=r.forwardRef(o)},3258:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M880 298.4H521L403.7 186.2a8.15 8.15 0 00-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32zM840 768H184V256h188.5l119.6 114.4H840V768z"}}]},name:"folder",theme:"outlined"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="FolderOutlined";const s=r.forwardRef(o)},9090:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294),i=n(5294),a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i.Z}))};o.displayName="LoadingOutlined";const s=r.forwardRef(o)},5035:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M868 732h-70.3c-4.8 0-9.3 2.1-12.3 5.8-7 8.5-14.5 16.7-22.4 24.5a353.84 353.84 0 01-112.7 75.9A352.8 352.8 0 01512.4 866c-47.9 0-94.3-9.4-137.9-27.8a353.84 353.84 0 01-112.7-75.9 353.28 353.28 0 01-76-112.5C167.3 606.2 158 559.9 158 512s9.4-94.2 27.8-137.8c17.8-42.1 43.4-80 76-112.5s70.5-58.1 112.7-75.9c43.6-18.4 90-27.8 137.9-27.8 47.9 0 94.3 9.3 137.9 27.8 42.2 17.8 80.1 43.4 112.7 75.9 7.9 7.9 15.3 16.1 22.4 24.5 3 3.7 7.6 5.8 12.3 5.8H868c6.3 0 10.2-7 6.7-12.3C798 160.5 663.8 81.6 511.3 82 271.7 82.6 79.6 277.1 82 516.4 84.4 751.9 276.2 942 512.4 942c152.1 0 285.7-78.8 362.3-197.7 3.4-5.3-.4-12.3-6.7-12.3zm88.9-226.3L815 393.7c-5.3-4.2-13-.4-13 6.3v76H488c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h314v76c0 6.7 7.8 10.5 13 6.3l141.9-112a8 8 0 000-12.6z"}}]},name:"logout",theme:"outlined"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="LogoutOutlined";const s=r.forwardRef(o)},4302:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 110.8V792H136V270.8l-27.6-21.5 39.3-50.5 42.8 33.3h643.1l42.8-33.3 39.3 50.5-27.7 21.5zM833.6 232L512 482 190.4 232l-42.8-33.3-39.3 50.5 27.6 21.5 341.6 265.6a55.99 55.99 0 0068.7 0L888 270.8l27.6-21.5-39.3-50.5-42.7 33.2z"}}]},name:"mail",theme:"outlined"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="MailOutlined";const s=r.forwardRef(o)},9101:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"}},{tag:"path",attrs:{d:"M192 474h672q8 0 8 8v60q0 8-8 8H160q-8 0-8-8v-60q0-8 8-8z"}}]},name:"plus",theme:"outlined"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="PlusOutlined";const s=r.forwardRef(o)},9879:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z"}}]},name:"reload",theme:"outlined"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="ReloadOutlined";const s=r.forwardRef(o)},4616:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z"}}]},name:"setting",theme:"outlined"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="SettingOutlined";const s=r.forwardRef(o)},4029:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294),i=n(2287),a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i.Z}))};o.displayName="UpOutlined";const s=r.forwardRef(o)},9366:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7294);const i={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z"}}]},name:"user",theme:"outlined"};var a=n(6252),o=function(e,t){return r.createElement(a.Z,Object.assign({},e,{ref:t,icon:i}))};o.displayName="UserOutlined";const s=r.forwardRef(o)},1755:(e,t,n)=>{"use strict";n.d(t,{C3:()=>g,H9:()=>p,Kp:()=>l,R_:()=>d,pw:()=>h,r:()=>u,vD:()=>v});var r=n(1413),i=n(1002),a=n(2138),o=n(7294),s=n(334),c=n(8186);function l(e,t){(0,s.ZP)(e,"[@ant-design/icons] ".concat(t))}function u(e){return"object"===(0,i.Z)(e)&&"string"==typeof e.name&&"string"==typeof e.theme&&("object"===(0,i.Z)(e.icon)||"function"==typeof e.icon)}function f(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object.keys(e).reduce((function(t,n){var r=e[n];if("class"===n)t.className=r,delete t.class;else t[n]=r;return t}),{})}function d(e,t,n){return n?o.createElement(e.tag,(0,r.Z)((0,r.Z)({key:t},f(e.attrs)),n),(e.children||[]).map((function(n,r){return d(n,"".concat(t,"-").concat(e.tag,"-").concat(r))}))):o.createElement(e.tag,(0,r.Z)({key:t},f(e.attrs)),(e.children||[]).map((function(n,r){return d(n,"".concat(t,"-").concat(e.tag,"-").concat(r))})))}function h(e){return(0,a.R_)(e)[0]}function p(e){return e?Array.isArray(e)?e:[e]:[]}var v={width:"1em",height:"1em",fill:"currentColor","aria-hidden":"true",focusable:"false"},m=!1,g=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"\n.anticon {\n  display: inline-block;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.anticon > * {\n  line-height: 1;\n}\n\n.anticon svg {\n  display: inline-block;\n}\n\n.anticon::before {\n  display: none;\n}\n\n.anticon .anticon-icon {\n  display: block;\n}\n\n.anticon[tabindex] {\n  cursor: pointer;\n}\n\n.anticon-spin::before,\n.anticon-spin {\n  display: inline-block;\n  -webkit-animation: loadingCircle 1s infinite linear;\n  animation: loadingCircle 1s infinite linear;\n}\n\n@-webkit-keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n";(0,o.useEffect)((function(){m||((0,c.insertCss)(e,{prepend:!0}),m=!0)}),[])}},8787:(e,t,n)=>{"use strict";n.d(t,{E:()=>i,Y:()=>a});var r=n(3355),i=(0,r.b)("success","processing","error","default","warning"),a=(0,r.b)("pink","red","yellow","orange","cyan","green","blue","purple","geekblue","magenta","volcano","gold","lime")},1808:(e,t,n)=>{"use strict";n.d(t,{fk:()=>o,jD:()=>a});var r,i=n(8924),a=function(){return(0,i.Z)()&&window.document.documentElement},o=function(){if(!a())return!1;if(void 0!==r)return r;var e=document.createElement("div");return e.style.display="flex",e.style.flexDirection="column",e.style.rowGap="1px",e.appendChild(document.createElement("div")),e.appendChild(document.createElement("div")),document.body.appendChild(e),r=1===e.scrollHeight,document.body.removeChild(e),r}},5462:(e,t,n)=>{"use strict";n.d(t,{Z:()=>Ut});var r=n(5215),i=n.n(r),a=n(334);const o={getNow:function(){return i()()},getFixedDate:function(e){return i()(e,"YYYY-MM-DD")},getEndDate:function(e){return e.clone().endOf("month")},getWeekDay:function(e){var t=e.clone().locale("en_US");return t.weekday()+t.localeData().firstDayOfWeek()},getYear:function(e){return e.year()},getMonth:function(e){return e.month()},getDate:function(e){return e.date()},getHour:function(e){return e.hour()},getMinute:function(e){return e.minute()},getSecond:function(e){return e.second()},addYear:function(e,t){return e.clone().add(t,"year")},addMonth:function(e,t){return e.clone().add(t,"month")},addDate:function(e,t){return e.clone().add(t,"day")},setYear:function(e,t){return e.clone().year(t)},setMonth:function(e,t){return e.clone().month(t)},setDate:function(e,t){return e.clone().date(t)},setHour:function(e,t){return e.clone().hour(t)},setMinute:function(e,t){return e.clone().minute(t)},setSecond:function(e,t){return e.clone().second(t)},isAfter:function(e,t){return e.isAfter(t)},isValidate:function(e){return e.isValid()},locale:{getWeekFirstDay:function(e){return i()().locale(e).localeData().firstDayOfWeek()},getWeekFirstDate:function(e,t){return t.clone().locale(e).weekday(0)},getWeek:function(e,t){return t.clone().locale(e).week()},getShortWeekDays:function(e){return i()().locale(e).localeData().weekdaysMin()},getShortMonths:function(e){return i()().locale(e).localeData().monthsShort()},format:function(e,t,n){return t.clone().locale(e).format(n)},parse:function(e,t,n){for(var r=[],o=0;o<n.length;o+=1){var s=n[o],c=t;if(s.includes("wo")||s.includes("Wo")){var l=(s=s.replace(/wo/g,"w").replace(/Wo/g,"W")).match(/[-YyMmDdHhSsWwGg]+/g),u=c.match(/[-\d]+/g);l&&u?(s=l.join(""),c=u.join("")):r.push(s.replace(/o/g,""))}var f=i()(c,s,e,!0);if(f.isValid())return f}for(var d=0;d<r.length;d+=1){var h=i()(t,r[d],e,!1);if(h.isValid())return(0,a.ET)(!1,"Not match any format strictly and fallback to fuzzy match. Please help to fire a issue about this."),h}return null}}};var s=n(7462),c=n(3355),l=n(7294),u=n(1577);var f=n(4942),d=n(9439),h=n(208),p=n(6228),v=n.n(p),m=n(8423),g=n(3124),y=n(8787),b=n(1790),w=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n};const N=function(e){var t,n=e.prefixCls,r=e.className,i=e.checked,a=e.onChange,o=e.onClick,c=w(e,["prefixCls","className","checked","onChange","onClick"]),u=(0,l.useContext(g.E_).getPrefixCls)("tag",n),d=v()(u,(t={},(0,f.Z)(t,"".concat(u,"-checkable"),!0),(0,f.Z)(t,"".concat(u,"-checkable-checked"),i),t),r);return l.createElement("span",(0,s.Z)({},c,{className:d,onClick:function(e){null==a||a(!i),null==o||o(e)}}))};var x=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},S=new RegExp("^(".concat(y.Y.join("|"),")(-inverse)?$")),k=new RegExp("^(".concat(y.E.join("|"),")$")),C=function(e,t){var n,r=e.prefixCls,i=e.className,a=e.style,o=e.children,c=e.icon,u=e.color,p=e.onClose,y=e.closeIcon,w=e.closable,N=void 0!==w&&w,C=x(e,["prefixCls","className","style","children","icon","color","onClose","closeIcon","closable"]),L=l.useContext(g.E_),A=L.getPrefixCls,E=L.direction,P=l.useState(!0),_=(0,d.Z)(P,2),I=_[0],O=_[1];l.useEffect((function(){"visible"in C&&O(C.visible)}),[C.visible]);var M=function(){return!!u&&(S.test(u)||k.test(u))},D=(0,s.Z)({backgroundColor:u&&!M()?u:void 0},a),F=M(),Z=A("tag",r),j=v()(Z,(n={},(0,f.Z)(n,"".concat(Z,"-").concat(u),F),(0,f.Z)(n,"".concat(Z,"-has-color"),u&&!F),(0,f.Z)(n,"".concat(Z,"-hidden"),!I),(0,f.Z)(n,"".concat(Z,"-rtl"),"rtl"===E),n),i),R=function(e){e.stopPropagation(),null==p||p(e),e.defaultPrevented||"visible"in C||O(!1)},T="onClick"in C||o&&"a"===o.type,B=(0,m.Z)(C,["visible"]),q=c||null,K=q?l.createElement(l.Fragment,null,q,l.createElement("span",null,o)):o,U=l.createElement("span",(0,s.Z)({},B,{ref:t,className:j,style:D}),K,N?y?l.createElement("span",{className:"".concat(Z,"-close-icon"),onClick:R},y):l.createElement(h.Z,{className:"".concat(Z,"-close-icon"),onClick:R}):null);return T?l.createElement(b.Z,null,U):U},L=l.forwardRef(C);L.CheckableTag=N;const A=L;var E=n(1413);const P={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"}}]},name:"calendar",theme:"outlined"};var _=n(7713),I=function(e,t){return l.createElement(_.Z,(0,E.Z)((0,E.Z)({},e),{},{ref:t,icon:P}))};I.displayName="CalendarOutlined";const O=l.forwardRef(I);const M={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"}},{tag:"path",attrs:{d:"M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z"}}]},name:"clock-circle",theme:"outlined"};var D=function(e,t){return l.createElement(_.Z,(0,E.Z)((0,E.Z)({},e),{},{ref:t,icon:M}))};D.displayName="ClockCircleOutlined";const F=l.forwardRef(D);var Z=n(7195);const j={icon:{tag:"svg",attrs:{viewBox:"0 0 1024 1024",focusable:"false"},children:[{tag:"path",attrs:{d:"M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z"}}]},name:"swap-right",theme:"outlined"};var R=function(e,t){return l.createElement(_.Z,(0,E.Z)((0,E.Z)({},e),{},{ref:t,icon:j}))};R.displayName="SwapRightOutlined";const T=l.forwardRef(R);var B=n(5671),q=n(3144),K=n(9340),U=n(8557),z=n(858),H=n.n(z),V=n(1770),W=n(1002),Y=n(5105);const G=l.createContext({});var $={visibility:"hidden"};const X=function(e){var t=e.prefixCls,n=e.prevIcon,r=void 0===n?"‹":n,i=e.nextIcon,a=void 0===i?"›":i,o=e.superPrevIcon,s=void 0===o?"«":o,c=e.superNextIcon,u=void 0===c?"»":c,f=e.onSuperPrev,d=e.onSuperNext,h=e.onPrev,p=e.onNext,v=e.children,m=l.useContext(G),g=m.hideNextBtn,y=m.hidePrevBtn;return l.createElement("div",{className:t},f&&l.createElement("button",{type:"button",onClick:f,tabIndex:-1,className:"".concat(t,"-super-prev-btn"),style:y?$:{}},s),h&&l.createElement("button",{type:"button",onClick:h,tabIndex:-1,className:"".concat(t,"-prev-btn"),style:y?$:{}},r),l.createElement("div",{className:"".concat(t,"-view")},v),p&&l.createElement("button",{type:"button",onClick:p,tabIndex:-1,className:"".concat(t,"-next-btn"),style:g?$:{}},a),d&&l.createElement("button",{type:"button",onClick:d,tabIndex:-1,className:"".concat(t,"-super-next-btn"),style:g?$:{}},u))};const J=function(e){var t=e.prefixCls,n=e.generateConfig,r=e.viewDate,i=e.onPrevDecades,a=e.onNextDecades;if(l.useContext(G).hideHeader)return null;var o="".concat(t,"-header"),c=n.getYear(r),u=Math.floor(c/ge)*ge,f=u+ge-1;return l.createElement(X,(0,s.Z)({},e,{prefixCls:o,onSuperPrev:i,onSuperNext:a}),u,"-",f)};function Q(e,t,n,r,i){var a=e.setHour(t,n);return a=e.setMinute(a,r),a=e.setSecond(a,i)}function ee(e,t,n){if(!n)return t;var r=t;return r=e.setHour(r,e.getHour(n)),r=e.setMinute(r,e.getMinute(n)),r=e.setSecond(r,e.getSecond(n))}function te(e,t){var n=e.getYear(t),r=e.getMonth(t)+1,i=e.getEndDate(e.getFixedDate("".concat(n,"-").concat(r,"-01"))),a=e.getDate(i),o=r<10?"0".concat(r):"".concat(r);return"".concat(n,"-").concat(o,"-").concat(a)}function ne(e){for(var t=e.prefixCls,n=e.disabledDate,r=e.onSelect,i=e.picker,a=e.rowNum,o=e.colNum,s=e.prefixColumn,c=e.rowClassName,u=e.baseDate,d=e.getCellClassName,h=e.getCellText,p=e.getCellNode,v=e.getCellDate,m=e.generateConfig,g=e.titleCell,y=e.headerCells,b=l.useContext(G),w=b.onDateMouseEnter,N=b.onDateMouseLeave,x=b.mode,S="".concat(t,"-cell"),k=[],C=0;C<a;C+=1){for(var L=[],A=void 0,P=function(e){var t,a=v(u,C*o+e),c=Ie({cellDate:a,mode:x,disabledDate:n,generateConfig:m});0===e&&(A=a,s&&L.push(s(A)));var y=g&&g(a);L.push(l.createElement("td",{key:e,title:y,className:H()(S,(0,E.Z)((t={},(0,f.Z)(t,"".concat(S,"-disabled"),c),(0,f.Z)(t,"".concat(S,"-start"),1===h(a)||"year"===i&&Number(y)%10==0),(0,f.Z)(t,"".concat(S,"-end"),y===te(m,a)||"year"===i&&Number(y)%10==9),t),d(a))),onClick:function(){c||r(a)},onMouseEnter:function(){!c&&w&&w(a)},onMouseLeave:function(){!c&&N&&N(a)}},p?p(a):l.createElement("div",{className:"".concat(S,"-inner")},h(a))))},_=0;_<o;_+=1)P(_);k.push(l.createElement("tr",{key:C,className:c&&c(A)},L))}return l.createElement("div",{className:"".concat(t,"-body")},l.createElement("table",{className:"".concat(t,"-content")},y&&l.createElement("thead",null,l.createElement("tr",null,y)),l.createElement("tbody",null,k)))}const re=function(e){var t=me-1,n=e.prefixCls,r=e.viewDate,i=e.generateConfig,a="".concat(n,"-cell"),o=i.getYear(r),c=Math.floor(o/me)*me,u=Math.floor(o/ge)*ge,d=u+ge-1,h=i.setYear(r,u-Math.ceil((12*me-ge)/2));return l.createElement(ne,(0,s.Z)({},e,{rowNum:4,colNum:3,baseDate:h,getCellText:function(e){var n=i.getYear(e);return"".concat(n,"-").concat(n+t)},getCellClassName:function(e){var n,r=i.getYear(e),o=r+t;return n={},(0,f.Z)(n,"".concat(a,"-in-view"),u<=r&&o<=d),(0,f.Z)(n,"".concat(a,"-selected"),r===c),n},getCellDate:function(e,t){return i.addYear(e,t*me)}}))};var ie=n(3433),ae=n(5164),oe=n(5110),se=new Map;function ce(e,t,n){if(se.get(e)&&cancelAnimationFrame(se.get(e)),n<=0)se.set(e,requestAnimationFrame((function(){e.scrollTop=t})));else{var r=(t-e.scrollTop)/n*10;se.set(e,requestAnimationFrame((function(){e.scrollTop+=r,e.scrollTop!==t&&ce(e,t,n-10)})))}}function le(e,t){var n=t.onLeftRight,r=t.onCtrlLeftRight,i=t.onUpDown,a=t.onPageUpDown,o=t.onEnter,s=e.which,c=e.ctrlKey,l=e.metaKey;switch(s){case Y.Z.LEFT:if(c||l){if(r)return r(-1),!0}else if(n)return n(-1),!0;break;case Y.Z.RIGHT:if(c||l){if(r)return r(1),!0}else if(n)return n(1),!0;break;case Y.Z.UP:if(i)return i(-1),!0;break;case Y.Z.DOWN:if(i)return i(1),!0;break;case Y.Z.PAGE_UP:if(a)return a(-1),!0;break;case Y.Z.PAGE_DOWN:if(a)return a(1),!0;break;case Y.Z.ENTER:if(o)return o(),!0}return!1}function ue(e,t,n,r){var i=e;if(!i)switch(t){case"time":i=r?"hh:mm:ss a":"HH:mm:ss";break;case"week":i="gggg-wo";break;case"month":i="YYYY-MM";break;case"quarter":i="YYYY-[Q]Q";break;case"year":i="YYYY";break;default:i=n?"YYYY-MM-DD HH:mm:ss":"YYYY-MM-DD"}return i}function fe(e,t,n){var r="time"===e?8:10,i="function"==typeof t?t(n.getNow()).length:t.length;return Math.max(r,i)+2}var de=null,he=new Set;var pe={year:function(e){return"month"===e||"date"===e?"year":e},month:function(e){return"date"===e?"month":e},quarter:function(e){return"month"===e||"date"===e?"quarter":e},week:function(e){return"date"===e?"week":e},time:null,date:null};function ve(e,t){return e.some((function(e){return e&&e.contains(t)}))}var me=10,ge=10*me;const ye=function(e){var t=e.prefixCls,n=e.onViewDateChange,r=e.generateConfig,i=e.viewDate,a=e.operationRef,o=e.onSelect,c=e.onPanelChange,u="".concat(t,"-decade-panel");a.current={onKeyDown:function(e){return le(e,{onLeftRight:function(e){o(r.addYear(i,e*me),"key")},onCtrlLeftRight:function(e){o(r.addYear(i,e*ge),"key")},onUpDown:function(e){o(r.addYear(i,e*me*3),"key")},onEnter:function(){c("year",i)}})}};var f=function(e){var t=r.addYear(i,e*ge);n(t),c(null,t)};return l.createElement("div",{className:u},l.createElement(J,(0,s.Z)({},e,{prefixCls:t,onPrevDecades:function(){f(-1)},onNextDecades:function(){f(1)}})),l.createElement(re,(0,s.Z)({},e,{prefixCls:t,onSelect:function(e){o(e,"mouse"),c("year",e)}})))};function be(e,t){return!e&&!t||!(!e||!t)&&void 0}function we(e,t,n){var r=be(t,n);return"boolean"==typeof r?r:e.getYear(t)===e.getYear(n)}function Ne(e,t){return Math.floor(e.getMonth(t)/3)+1}function xe(e,t,n){var r=be(t,n);return"boolean"==typeof r?r:we(e,t,n)&&Ne(e,t)===Ne(e,n)}function Se(e,t,n){var r=be(t,n);return"boolean"==typeof r?r:we(e,t,n)&&e.getMonth(t)===e.getMonth(n)}function ke(e,t,n){var r=be(t,n);return"boolean"==typeof r?r:e.getYear(t)===e.getYear(n)&&e.getMonth(t)===e.getMonth(n)&&e.getDate(t)===e.getDate(n)}function Ce(e,t,n,r){var i=be(n,r);return"boolean"==typeof i?i:e.locale.getWeek(t,n)===e.locale.getWeek(t,r)}function Le(e,t,n){return ke(e,t,n)&&function(e,t,n){var r=be(t,n);return"boolean"==typeof r?r:e.getHour(t)===e.getHour(n)&&e.getMinute(t)===e.getMinute(n)&&e.getSecond(t)===e.getSecond(n)}(e,t,n)}function Ae(e,t,n,r){return!!(t&&n&&r)&&(!ke(e,t,r)&&!ke(e,n,r)&&e.isAfter(r,t)&&e.isAfter(n,r))}function Ee(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;switch(t){case"year":return n.addYear(e,10*r);case"quarter":case"month":return n.addYear(e,r);default:return n.addMonth(e,r)}}function Pe(e,t){var n=t.generateConfig,r=t.locale,i=t.format;return"function"==typeof i?i(e):n.locale.format(r.locale,e,i)}function _e(e,t){var n=t.generateConfig,r=t.locale,i=t.formatList;return e&&"function"!=typeof i[0]?n.locale.parse(r.locale,e,i):null}function Ie(e){var t=e.cellDate,n=e.mode,r=e.disabledDate,i=e.generateConfig;if(!r)return!1;var a=function(e,n,a){for(var o=n;o<=a;){var s=void 0;switch(e){case"date":if(s=i.setDate(t,o),!r(s))return!1;break;case"month":if(!Ie({cellDate:s=i.setMonth(t,o),mode:"month",generateConfig:i,disabledDate:r}))return!1;break;case"year":if(!Ie({cellDate:s=i.setYear(t,o),mode:"year",generateConfig:i,disabledDate:r}))return!1}o+=1}return!0};switch(n){case"date":case"week":return r(t);case"month":return a("date",1,i.getDate(i.getEndDate(t)));case"quarter":var o=3*Math.floor(i.getMonth(t)/3);return a("month",o,o+2);case"year":return a("month",0,11);case"decade":var s=i.getYear(t),c=Math.floor(s/me)*me;return a("year",c,c+me-1)}}const Oe=function(e){if(l.useContext(G).hideHeader)return null;var t=e.prefixCls,n=e.generateConfig,r=e.locale,i=e.value,a=e.format,o="".concat(t,"-header");return l.createElement(X,{prefixCls:o},i?Pe(i,{locale:r,format:a,generateConfig:n}):" ")};var Me=n(6982);const De=function(e){var t=e.prefixCls,n=e.units,r=e.onSelect,i=e.value,a=e.active,o=e.hideDisabledOptions,s="".concat(t,"-cell"),c=l.useContext(G).open,u=(0,l.useRef)(null),d=(0,l.useRef)(new Map),h=(0,l.useRef)();return(0,l.useLayoutEffect)((function(){var e=d.current.get(i);e&&!1!==c&&ce(u.current,e.offsetTop,120)}),[i]),(0,l.useLayoutEffect)((function(){if(c){var e=d.current.get(i);e&&(h.current=(t=e,n=function(){ce(u.current,e.offsetTop,0)},function e(){(0,oe.Z)(t)?n():r=(0,ae.Z)((function(){e()}))}(),function(){ae.Z.cancel(r)}))}var t,n,r;return function(){var e;null===(e=h.current)||void 0===e||e.call(h)}}),[c]),l.createElement("ul",{className:H()("".concat(t,"-column"),(0,f.Z)({},"".concat(t,"-column-active"),a)),ref:u,style:{position:"relative"}},n.map((function(e){var t;return o&&e.disabled?null:l.createElement("li",{key:e.value,ref:function(t){d.current.set(e.value,t)},className:H()(s,(t={},(0,f.Z)(t,"".concat(s,"-disabled"),e.disabled),(0,f.Z)(t,"".concat(s,"-selected"),i===e.value),t)),onClick:function(){e.disabled||r(e.value)}},l.createElement("div",{className:"".concat(s,"-inner")},e.label))})))};function Fe(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"0",r=String(e);r.length<t;)r="".concat(n).concat(e);return r}function Ze(e){return null==e?[]:Array.isArray(e)?e:[e]}function je(e){var t={};return Object.keys(e).forEach((function(n){"data-"!==n.substr(0,5)&&"aria-"!==n.substr(0,5)&&"role"!==n&&"name"!==n||"data-__"===n.substr(0,7)||(t[n]=e[n])})),t}function Re(e,t){return e?e[t]:null}function Te(e,t,n){var r=[Re(e,0),Re(e,1)];return r[n]="function"==typeof t?t(r[n]):t,r[0]||r[1]?r:null}function Be(e,t){if(e.length!==t.length)return!0;for(var n=0;n<e.length;n+=1)if(e[n].disabled!==t[n].disabled)return!0;return!1}function qe(e,t,n,r){for(var i=[],a=e;a<=t;a+=n)i.push({label:Fe(a,2),value:a,disabled:(r||[]).includes(a)});return i}const Ke=function(e){var t,n=e.generateConfig,r=e.prefixCls,i=e.operationRef,a=e.activeColumnIndex,o=e.value,s=e.showHour,c=e.showMinute,u=e.showSecond,f=e.use12Hours,h=e.hourStep,p=void 0===h?1:h,v=e.minuteStep,m=void 0===v?1:v,g=e.secondStep,y=void 0===g?1:g,b=e.disabledHours,w=e.disabledMinutes,N=e.disabledSeconds,x=e.disabledTime,S=e.hideDisabledOptions,k=e.onSelect,C=[],L="".concat(r,"-content"),A="".concat(r,"-time-panel"),P=o?n.getHour(o):-1,_=P,I=o?n.getMinute(o):-1,O=o?n.getSecond(o):-1,M=n.getNow(),D=l.useMemo((function(){if(x){var e=x(M);return[e.disabledHours,e.disabledMinutes,e.disabledSeconds]}return[b,w,N]}),[b,w,N,x,M]),F=(0,d.Z)(D,3),Z=F[0],j=F[1],R=F[2],T=function(e,t,r,i){var a=o||n.getNow(),s=Math.max(0,t),c=Math.max(0,r),l=Math.max(0,i);return a=Q(n,a,f&&e?s+12:s,c,l)},B=qe(0,23,p,Z&&Z()),q=(0,Me.Z)((function(){return B}),B,Be);f&&(t=_>=12,_%=12);var K=l.useMemo((function(){if(!f)return[!1,!1];var e=[!0,!0];return q.forEach((function(t){var n=t.disabled,r=t.value;n||(r>=12?e[1]=!1:e[0]=!1)})),e}),[f,q]),U=(0,d.Z)(K,2),z=U[0],H=U[1],V=l.useMemo((function(){return f?q.filter(t?function(e){return e.value>=12}:function(e){return e.value<12}).map((function(e){var t=e.value%12,n=0===t?"12":Fe(t,2);return(0,E.Z)((0,E.Z)({},e),{},{label:n,value:t})})):q}),[f,t,q]),W=qe(0,59,m,j&&j(P)),Y=qe(0,59,y,R&&R(P,I));function G(e,t,n,r,i){!1!==e&&C.push({node:l.cloneElement(t,{prefixCls:A,value:n,active:a===C.length,onSelect:i,units:r,hideDisabledOptions:S}),onSelect:i,value:n,units:r})}i.current={onUpDown:function(e){var t=C[a];if(t)for(var n=t.units.findIndex((function(e){return e.value===t.value})),r=t.units.length,i=1;i<r;i+=1){var o=t.units[(n+e*i+r)%r];if(!0!==o.disabled){t.onSelect(o.value);break}}}},G(s,l.createElement(De,{key:"hour"}),_,V,(function(e){k(T(t,e,I,O),"mouse")})),G(c,l.createElement(De,{key:"minute"}),I,W,(function(e){k(T(t,_,e,O),"mouse")})),G(u,l.createElement(De,{key:"second"}),O,Y,(function(e){k(T(t,_,I,e),"mouse")}));var $=-1;return"boolean"==typeof t&&($=t?1:0),G(!0===f,l.createElement(De,{key:"12hours"}),$,[{label:"AM",value:0,disabled:z},{label:"PM",value:1,disabled:H}],(function(e){k(T(!!e,_,I,O),"mouse")})),l.createElement("div",{className:L},C.map((function(e){return e.node})))};const Ue=function(e){var t=e.generateConfig,n=e.format,r=void 0===n?"HH:mm:ss":n,i=e.prefixCls,a=e.active,o=e.operationRef,c=e.showHour,u=e.showMinute,h=e.showSecond,p=e.use12Hours,v=void 0!==p&&p,m=e.onSelect,g=e.value,y="".concat(i,"-time-panel"),b=l.useRef(),w=l.useState(-1),N=(0,d.Z)(w,2),x=N[0],S=N[1],k=[c,u,h,v].filter((function(e){return!1!==e})).length;return o.current={onKeyDown:function(e){return le(e,{onLeftRight:function(e){S((x+e+k)%k)},onUpDown:function(e){-1===x?S(0):b.current&&b.current.onUpDown(e)},onEnter:function(){m(g||t.getNow(),"key"),S(-1)}})},onBlur:function(){S(-1)}},l.createElement("div",{className:H()(y,(0,f.Z)({},"".concat(y,"-active"),a))},l.createElement(Oe,(0,s.Z)({},e,{format:r,prefixCls:i})),l.createElement(Ke,(0,s.Z)({},e,{prefixCls:i,activeColumnIndex:x,operationRef:b})))};const ze=l.createContext({});function He(e){var t=e.cellPrefixCls,n=e.generateConfig,r=e.rangedValue,i=e.hoverRangedValue,a=e.isInView,o=e.isSameCell,s=e.offsetCell,c=e.today,l=e.value;return function(e){var u,d=s(e,-1),h=s(e,1),p=Re(r,0),v=Re(r,1),m=Re(i,0),g=Re(i,1),y=Ae(n,m,g,e);function b(e){return o(p,e)}function w(e){return o(v,e)}var N=o(m,e),x=o(g,e),S=(y||x)&&(!a(d)||w(d)),k=(y||N)&&(!a(h)||b(h));return u={},(0,f.Z)(u,"".concat(t,"-in-view"),a(e)),(0,f.Z)(u,"".concat(t,"-in-range"),Ae(n,p,v,e)),(0,f.Z)(u,"".concat(t,"-range-start"),b(e)),(0,f.Z)(u,"".concat(t,"-range-end"),w(e)),(0,f.Z)(u,"".concat(t,"-range-start-single"),b(e)&&!v),(0,f.Z)(u,"".concat(t,"-range-end-single"),w(e)&&!p),(0,f.Z)(u,"".concat(t,"-range-start-near-hover"),b(e)&&(o(d,m)||Ae(n,m,g,d))),(0,f.Z)(u,"".concat(t,"-range-end-near-hover"),w(e)&&(o(h,g)||Ae(n,m,g,h))),(0,f.Z)(u,"".concat(t,"-range-hover"),y),(0,f.Z)(u,"".concat(t,"-range-hover-start"),N),(0,f.Z)(u,"".concat(t,"-range-hover-end"),x),(0,f.Z)(u,"".concat(t,"-range-hover-edge-start"),S),(0,f.Z)(u,"".concat(t,"-range-hover-edge-end"),k),(0,f.Z)(u,"".concat(t,"-range-hover-edge-start-near-range"),S&&o(d,v)),(0,f.Z)(u,"".concat(t,"-range-hover-edge-end-near-range"),k&&o(h,p)),(0,f.Z)(u,"".concat(t,"-today"),o(c,e)),(0,f.Z)(u,"".concat(t,"-selected"),o(l,e)),u}}const Ve=function(e){var t=e.prefixCls,n=e.generateConfig,r=e.prefixColumn,i=e.locale,a=e.rowCount,o=e.viewDate,c=e.value,u=e.dateRender,f=l.useContext(ze),d=f.rangedValue,h=f.hoverRangedValue,p=function(e,t,n){var r=t.locale.getWeekFirstDay(e),i=t.setDate(n,1),a=t.getWeekDay(i),o=t.addDate(i,r-a);return t.getMonth(o)===t.getMonth(n)&&t.getDate(o)>1&&(o=t.addDate(o,-7)),o}(i.locale,n,o),v="".concat(t,"-cell"),m=n.locale.getWeekFirstDay(i.locale),g=n.getNow(),y=[],b=i.shortWeekDays||(n.locale.getShortWeekDays?n.locale.getShortWeekDays(i.locale):[]);r&&y.push(l.createElement("th",{key:"empty","aria-label":"empty cell"}));for(var w=0;w<7;w+=1)y.push(l.createElement("th",{key:w},b[(w+m)%7]));var N=He({cellPrefixCls:v,today:g,value:c,generateConfig:n,rangedValue:r?null:d,hoverRangedValue:r?null:h,isSameCell:function(e,t){return ke(n,e,t)},isInView:function(e){return Se(n,e,o)},offsetCell:function(e,t){return n.addDate(e,t)}}),x=u?function(e){return u(e,g)}:void 0;return l.createElement(ne,(0,s.Z)({},e,{rowNum:a,colNum:7,baseDate:p,getCellNode:x,getCellText:n.getDate,getCellClassName:N,getCellDate:n.addDate,titleCell:function(e){return Pe(e,{locale:i,format:"YYYY-MM-DD",generateConfig:n})},headerCells:y}))};const We=function(e){var t=e.prefixCls,n=e.generateConfig,r=e.locale,i=e.viewDate,a=e.onNextMonth,o=e.onPrevMonth,c=e.onNextYear,u=e.onPrevYear,f=e.onYearClick,d=e.onMonthClick;if(l.useContext(G).hideHeader)return null;var h="".concat(t,"-header"),p=r.shortMonths||(n.locale.getShortMonths?n.locale.getShortMonths(r.locale):[]),v=n.getMonth(i),m=l.createElement("button",{type:"button",key:"year",onClick:f,tabIndex:-1,className:"".concat(t,"-year-btn")},Pe(i,{locale:r,format:r.yearFormat,generateConfig:n})),g=l.createElement("button",{type:"button",key:"month",onClick:d,tabIndex:-1,className:"".concat(t,"-month-btn")},r.monthFormat?Pe(i,{locale:r,format:r.monthFormat,generateConfig:n}):p[v]),y=r.monthBeforeYear?[g,m]:[m,g];return l.createElement(X,(0,s.Z)({},e,{prefixCls:h,onSuperPrev:u,onPrev:o,onNext:a,onSuperNext:c}),y)};const Ye=function(e){var t=e.prefixCls,n=e.panelName,r=void 0===n?"date":n,i=e.keyboardConfig,a=e.active,o=e.operationRef,c=e.generateConfig,u=e.value,d=e.viewDate,h=e.onViewDateChange,p=e.onPanelChange,v=e.onSelect,m="".concat(t,"-").concat(r,"-panel");o.current={onKeyDown:function(e){return le(e,(0,E.Z)({onLeftRight:function(e){v(c.addDate(u||d,e),"key")},onCtrlLeftRight:function(e){v(c.addYear(u||d,e),"key")},onUpDown:function(e){v(c.addDate(u||d,7*e),"key")},onPageUpDown:function(e){v(c.addMonth(u||d,e),"key")}},i))}};var g=function(e){var t=c.addYear(d,e);h(t),p(null,t)},y=function(e){var t=c.addMonth(d,e);h(t),p(null,t)};return l.createElement("div",{className:H()(m,(0,f.Z)({},"".concat(m,"-active"),a))},l.createElement(We,(0,s.Z)({},e,{prefixCls:t,value:u,viewDate:d,onPrevYear:function(){g(-1)},onNextYear:function(){g(1)},onPrevMonth:function(){y(-1)},onNextMonth:function(){y(1)},onMonthClick:function(){p("month",d)},onYearClick:function(){p("year",d)}})),l.createElement(Ve,(0,s.Z)({},e,{onSelect:function(e){return v(e,"mouse")},prefixCls:t,value:u,viewDate:d,rowCount:6})))};var Ge=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t}("date","time");const $e=function(e){var t=e.prefixCls,n=e.operationRef,r=e.generateConfig,i=e.value,a=e.defaultValue,o=e.disabledTime,c=e.showTime,u=e.onSelect,h="".concat(t,"-datetime-panel"),p=l.useState(null),v=(0,d.Z)(p,2),m=v[0],g=v[1],y=l.useRef({}),b=l.useRef({}),w="object"===(0,W.Z)(c)?(0,E.Z)({},c):{},N=function(e){b.current.onBlur&&b.current.onBlur(e),g(null)};n.current={onKeyDown:function(e){if(e.which===Y.Z.TAB){var t=(n=e.shiftKey?-1:1,r=Ge.indexOf(m)+n,Ge[r]||null);return g(t),t&&e.preventDefault(),!0}var n,r;if(m){var i="date"===m?y:b;return i.current&&i.current.onKeyDown&&i.current.onKeyDown(e),!0}return!![Y.Z.LEFT,Y.Z.RIGHT,Y.Z.UP,Y.Z.DOWN].includes(e.which)&&(g("date"),!0)},onBlur:N,onClose:N};var x=function(e,t){var n=e;"date"===t&&!i&&w.defaultValue?(n=r.setHour(n,r.getHour(w.defaultValue)),n=r.setMinute(n,r.getMinute(w.defaultValue)),n=r.setSecond(n,r.getSecond(w.defaultValue))):"time"===t&&!i&&a&&(n=r.setYear(n,r.getYear(a)),n=r.setMonth(n,r.getMonth(a)),n=r.setDate(n,r.getDate(a))),u&&u(n,"mouse")},S=o?o(i||null):{};return l.createElement("div",{className:H()(h,(0,f.Z)({},"".concat(h,"-active"),m))},l.createElement(Ye,(0,s.Z)({},e,{operationRef:y,active:"date"===m,onSelect:function(e){x(ee(r,e,i||"object"!==(0,W.Z)(c)?null:c.defaultValue),"date")}})),l.createElement(Ue,(0,s.Z)({},e,{format:void 0},w,S,{disabledTime:null,defaultValue:void 0,operationRef:b,active:"time"===m,onSelect:function(e){x(e,"time")}})))};const Xe=function(e){var t=e.prefixCls,n=e.generateConfig,r=e.locale,i=e.value,a="".concat(t,"-cell"),o="".concat(t,"-week-panel-row");return l.createElement(Ye,(0,s.Z)({},e,{panelName:"week",prefixColumn:function(e){return l.createElement("td",{key:"week",className:H()(a,"".concat(a,"-week"))},n.locale.getWeek(r.locale,e))},rowClassName:function(e){return H()(o,(0,f.Z)({},"".concat(o,"-selected"),Ce(n,r.locale,i,e)))},keyboardConfig:{onLeftRight:null}}))};const Je=function(e){var t=e.prefixCls,n=e.generateConfig,r=e.locale,i=e.viewDate,a=e.onNextYear,o=e.onPrevYear,c=e.onYearClick;if(l.useContext(G).hideHeader)return null;var u="".concat(t,"-header");return l.createElement(X,(0,s.Z)({},e,{prefixCls:u,onSuperPrev:o,onSuperNext:a}),l.createElement("button",{type:"button",onClick:c,className:"".concat(t,"-year-btn")},Pe(i,{locale:r,format:r.yearFormat,generateConfig:n})))};const Qe=function(e){var t=e.prefixCls,n=e.locale,r=e.value,i=e.viewDate,a=e.generateConfig,o=e.monthCellRender,c=l.useContext(ze),u=c.rangedValue,f=c.hoverRangedValue,d=He({cellPrefixCls:"".concat(t,"-cell"),value:r,generateConfig:a,rangedValue:u,hoverRangedValue:f,isSameCell:function(e,t){return Se(a,e,t)},isInView:function(){return!0},offsetCell:function(e,t){return a.addMonth(e,t)}}),h=n.shortMonths||(a.locale.getShortMonths?a.locale.getShortMonths(n.locale):[]),p=a.setMonth(i,0),v=o?function(e){return o(e,n)}:void 0;return l.createElement(ne,(0,s.Z)({},e,{rowNum:4,colNum:3,baseDate:p,getCellNode:v,getCellText:function(e){return n.monthFormat?Pe(e,{locale:n,format:n.monthFormat,generateConfig:a}):h[a.getMonth(e)]},getCellClassName:d,getCellDate:a.addMonth,titleCell:function(e){return Pe(e,{locale:n,format:"YYYY-MM",generateConfig:a})}}))};const et=function(e){var t=e.prefixCls,n=e.operationRef,r=e.onViewDateChange,i=e.generateConfig,a=e.value,o=e.viewDate,c=e.onPanelChange,u=e.onSelect,f="".concat(t,"-month-panel");n.current={onKeyDown:function(e){return le(e,{onLeftRight:function(e){u(i.addMonth(a||o,e),"key")},onCtrlLeftRight:function(e){u(i.addYear(a||o,e),"key")},onUpDown:function(e){u(i.addMonth(a||o,3*e),"key")},onEnter:function(){c("date",a||o)}})}};var d=function(e){var t=i.addYear(o,e);r(t),c(null,t)};return l.createElement("div",{className:f},l.createElement(Je,(0,s.Z)({},e,{prefixCls:t,onPrevYear:function(){d(-1)},onNextYear:function(){d(1)},onYearClick:function(){c("year",o)}})),l.createElement(Qe,(0,s.Z)({},e,{prefixCls:t,onSelect:function(e){u(e,"mouse"),c("date",e)}})))};const tt=function(e){var t=e.prefixCls,n=e.generateConfig,r=e.locale,i=e.viewDate,a=e.onNextYear,o=e.onPrevYear,c=e.onYearClick;if(l.useContext(G).hideHeader)return null;var u="".concat(t,"-header");return l.createElement(X,(0,s.Z)({},e,{prefixCls:u,onSuperPrev:o,onSuperNext:a}),l.createElement("button",{type:"button",onClick:c,className:"".concat(t,"-year-btn")},Pe(i,{locale:r,format:r.yearFormat,generateConfig:n})))};const nt=function(e){var t=e.prefixCls,n=e.locale,r=e.value,i=e.viewDate,a=e.generateConfig,o=l.useContext(ze),c=o.rangedValue,u=o.hoverRangedValue,f=He({cellPrefixCls:"".concat(t,"-cell"),value:r,generateConfig:a,rangedValue:c,hoverRangedValue:u,isSameCell:function(e,t){return xe(a,e,t)},isInView:function(){return!0},offsetCell:function(e,t){return a.addMonth(e,3*t)}}),d=a.setDate(a.setMonth(i,0),1);return l.createElement(ne,(0,s.Z)({},e,{rowNum:1,colNum:4,baseDate:d,getCellText:function(e){return Pe(e,{locale:n,format:n.quarterFormat||"[Q]Q",generateConfig:a})},getCellClassName:f,getCellDate:function(e,t){return a.addMonth(e,3*t)},titleCell:function(e){return Pe(e,{locale:n,format:"YYYY-[Q]Q",generateConfig:a})}}))};const rt=function(e){var t=e.prefixCls,n=e.operationRef,r=e.onViewDateChange,i=e.generateConfig,a=e.value,o=e.viewDate,c=e.onPanelChange,u=e.onSelect,f="".concat(t,"-quarter-panel");n.current={onKeyDown:function(e){return le(e,{onLeftRight:function(e){u(i.addMonth(a||o,3*e),"key")},onCtrlLeftRight:function(e){u(i.addYear(a||o,e),"key")},onUpDown:function(e){u(i.addYear(a||o,e),"key")}})}};var d=function(e){var t=i.addYear(o,e);r(t),c(null,t)};return l.createElement("div",{className:f},l.createElement(tt,(0,s.Z)({},e,{prefixCls:t,onPrevYear:function(){d(-1)},onNextYear:function(){d(1)},onYearClick:function(){c("year",o)}})),l.createElement(nt,(0,s.Z)({},e,{prefixCls:t,onSelect:function(e){u(e,"mouse")}})))};const it=function(e){var t=e.prefixCls,n=e.generateConfig,r=e.viewDate,i=e.onPrevDecade,a=e.onNextDecade,o=e.onDecadeClick;if(l.useContext(G).hideHeader)return null;var c="".concat(t,"-header"),u=n.getYear(r),f=Math.floor(u/ot)*ot,d=f+ot-1;return l.createElement(X,(0,s.Z)({},e,{prefixCls:c,onSuperPrev:i,onSuperNext:a}),l.createElement("button",{type:"button",onClick:o,className:"".concat(t,"-decade-btn")},f,"-",d))};const at=function(e){var t=e.prefixCls,n=e.value,r=e.viewDate,i=e.locale,a=e.generateConfig,o=l.useContext(ze),c=o.rangedValue,u=o.hoverRangedValue,f="".concat(t,"-cell"),d=a.getYear(r),h=Math.floor(d/ot)*ot,p=h+ot-1,v=a.setYear(r,h-Math.ceil((12-ot)/2)),m=He({cellPrefixCls:f,value:n,generateConfig:a,rangedValue:c,hoverRangedValue:u,isSameCell:function(e,t){return we(a,e,t)},isInView:function(e){var t=a.getYear(e);return h<=t&&t<=p},offsetCell:function(e,t){return a.addYear(e,t)}});return l.createElement(ne,(0,s.Z)({},e,{rowNum:4,colNum:3,baseDate:v,getCellText:a.getYear,getCellClassName:m,getCellDate:a.addYear,titleCell:function(e){return Pe(e,{locale:i,format:"YYYY",generateConfig:a})}}))};var ot=10;const st=function(e){var t=e.prefixCls,n=e.operationRef,r=e.onViewDateChange,i=e.generateConfig,a=e.value,o=e.viewDate,c=e.sourceMode,u=e.onSelect,f=e.onPanelChange,d="".concat(t,"-year-panel");n.current={onKeyDown:function(e){return le(e,{onLeftRight:function(e){u(i.addYear(a||o,e),"key")},onCtrlLeftRight:function(e){u(i.addYear(a||o,e*ot),"key")},onUpDown:function(e){u(i.addYear(a||o,3*e),"key")},onEnter:function(){f("date"===c?"date":"month",a||o)}})}};var h=function(e){var t=i.addYear(o,10*e);r(t),f(null,t)};return l.createElement("div",{className:d},l.createElement(it,(0,s.Z)({},e,{prefixCls:t,onPrevDecade:function(){h(-1)},onNextDecade:function(){h(1)},onDecadeClick:function(){f("decade",o)}})),l.createElement(at,(0,s.Z)({},e,{prefixCls:t,onSelect:function(e){f("date"===c?"date":"month",e),u(e,"mouse")}})))};function ct(e,t,n){return n?l.createElement("div",{className:"".concat(e,"-footer-extra")},n(t)):null}function lt(e){var t,n,r=e.prefixCls,i=e.rangeList,a=void 0===i?[]:i,o=e.components,s=void 0===o?{}:o,c=e.needConfirmButton,u=e.onNow,f=e.onOk,d=e.okDisabled,h=e.showNow,p=e.locale;if(a.length){var v=s.rangeItem||"span";t=l.createElement(l.Fragment,null,a.map((function(e){var t=e.label,n=e.onClick,i=e.onMouseEnter,a=e.onMouseLeave;return l.createElement("li",{key:t,className:"".concat(r,"-preset")},l.createElement(v,{onClick:n,onMouseEnter:i,onMouseLeave:a},t))})))}if(c){var m=s.button||"button";u&&!t&&!1!==h&&(t=l.createElement("li",{className:"".concat(r,"-now")},l.createElement("a",{className:"".concat(r,"-now-btn"),onClick:u},p.now))),n=c&&l.createElement("li",{className:"".concat(r,"-ok")},l.createElement(m,{disabled:d,onClick:f},p.ok))}return t||n?l.createElement("ul",{className:"".concat(r,"-ranges")},t,n):null}const ut=function(e){var t,n=e.prefixCls,r=void 0===n?"rc-picker":n,i=e.className,o=e.style,c=e.locale,u=e.generateConfig,h=e.value,p=e.defaultValue,v=e.pickerValue,m=e.defaultPickerValue,g=e.disabledDate,y=e.mode,b=e.picker,w=void 0===b?"date":b,N=e.tabIndex,x=void 0===N?0:N,S=e.showNow,k=e.showTime,C=e.showToday,L=e.renderExtraFooter,A=e.hideHeader,P=e.onSelect,_=e.onChange,I=e.onPanelChange,O=e.onMouseDown,M=e.onPickerValueChange,D=e.onOk,F=e.components,Z=e.direction,j=e.hourStep,R=void 0===j?1:j,T=e.minuteStep,B=void 0===T?1:T,q=e.secondStep,K=void 0===q?1:q,U="date"===w&&!!k||"time"===w,z=24%R==0,$=60%B==0,X=60%K==0,J=l.useContext(G),te=J.operationRef,ne=J.panelRef,re=J.onSelect,ie=J.hideRanges,ae=J.defaultOpenValue,oe=l.useContext(ze),se=oe.inRange,ce=oe.panelPosition,le=oe.rangedValue,ue=oe.hoverRangedValue,fe=l.useRef({}),de=l.useRef(!0),he=(0,V.Z)(null,{value:h,defaultValue:p,postState:function(e){return!e&&ae&&"time"===w?ae:e}}),ve=(0,d.Z)(he,2),me=ve[0],ge=ve[1],be=(0,V.Z)(null,{value:v,defaultValue:m||me,postState:function(e){var t=u.getNow();if(!e)return t;if(!me&&k){var n="object"===(0,W.Z)(k)?k.defaultValue:p;return ee(u,Array.isArray(e)?e[0]:e,n||t)}return Array.isArray(e)?e[0]:e}}),we=(0,d.Z)(be,2),Ne=we[0],xe=we[1],Se=function(e){xe(e),M&&M(e)},ke=function(e){var t=pe[w];return t?t(e):e},Ce=(0,V.Z)((function(){return"time"===w?"time":ke("date")}),{value:y}),Ae=(0,d.Z)(Ce,2),Ee=Ae[0],Pe=Ae[1];l.useEffect((function(){Pe(w)}),[w]);var _e,Ie=l.useState((function(){return Ee})),Oe=(0,d.Z)(Ie,2),Me=Oe[0],De=Oe[1],Fe=function(e,t){(Ee===w||arguments.length>2&&void 0!==arguments[2]&&arguments[2])&&(ge(e),P&&P(e),re&&re(e,t),!_||Le(u,e,me)||(null==g?void 0:g(e))||_(e))},Ze=function(e){return fe.current&&fe.current.onKeyDown?([Y.Z.LEFT,Y.Z.RIGHT,Y.Z.UP,Y.Z.DOWN,Y.Z.PAGE_UP,Y.Z.PAGE_DOWN,Y.Z.ENTER].includes(e.which)&&e.preventDefault(),fe.current.onKeyDown(e)):((0,a.ZP)(!1,"Panel not correct handle keyDown event. Please help to fire issue about this."),!1)};te&&"right"!==ce&&(te.current={onKeyDown:Ze,onClose:function(){fe.current&&fe.current.onClose&&fe.current.onClose()}}),l.useEffect((function(){h&&!de.current&&xe(h)}),[h]),l.useEffect((function(){de.current=!1}),[]);var je,Re,Te,Be=(0,E.Z)((0,E.Z)({},e),{},{operationRef:fe,prefixCls:r,viewDate:Ne,value:me,onViewDateChange:Se,sourceMode:Me,onPanelChange:function(e,t){var n=ke(e||Ee);De(Ee),Pe(n),I&&(Ee!==n||Le(u,Ne,Ne))&&I(t,n)},disabledDate:g});switch(delete Be.onChange,delete Be.onSelect,Ee){case"decade":_e=l.createElement(ye,(0,s.Z)({},Be,{onSelect:function(e,t){Se(e),Fe(e,t)}}));break;case"year":_e=l.createElement(st,(0,s.Z)({},Be,{onSelect:function(e,t){Se(e),Fe(e,t)}}));break;case"month":_e=l.createElement(et,(0,s.Z)({},Be,{onSelect:function(e,t){Se(e),Fe(e,t)}}));break;case"quarter":_e=l.createElement(rt,(0,s.Z)({},Be,{onSelect:function(e,t){Se(e),Fe(e,t)}}));break;case"week":_e=l.createElement(Xe,(0,s.Z)({},Be,{onSelect:function(e,t){Se(e),Fe(e,t)}}));break;case"time":delete Be.showTime,_e=l.createElement(Ue,(0,s.Z)({},Be,"object"===(0,W.Z)(k)?k:null,{onSelect:function(e,t){Se(e),Fe(e,t)}}));break;default:_e=k?l.createElement($e,(0,s.Z)({},Be,{onSelect:function(e,t){Se(e),Fe(e,t)}})):l.createElement(Ye,(0,s.Z)({},Be,{onSelect:function(e,t){Se(e),Fe(e,t)}}))}if(ie||(je=ct(r,Ee,L),Re=lt({prefixCls:r,components:F,needConfirmButton:U,okDisabled:!me||g&&g(me),locale:c,showNow:S,onNow:U&&function(){var e=u.getNow(),t=function(e,t,n,r,i,a){var o=Math.floor(e/r)*r;if(o<e)return[o,60-i,60-a];var s=Math.floor(t/i)*i;return s<t?[o,s,60-a]:[o,s,Math.floor(n/a)*a]}(u.getHour(e),u.getMinute(e),u.getSecond(e),z?R:1,$?B:1,X?K:1),n=Q(u,e,t[0],t[1],t[2]);Fe(n,"submit")},onOk:function(){me&&(Fe(me,"submit",!0),D&&D(me))}})),C&&"date"===Ee&&"date"===w&&!k){var qe=u.getNow(),Ke="".concat(r,"-today-btn"),He=g&&g(qe);Te=l.createElement("a",{className:H()(Ke,He&&"".concat(Ke,"-disabled")),"aria-disabled":He,onClick:function(){He||Fe(qe,"mouse",!0)}},c.today)}return l.createElement(G.Provider,{value:(0,E.Z)((0,E.Z)({},J),{},{mode:Ee,hideHeader:"hideHeader"in e?A:J.hideHeader,hidePrevBtn:se&&"right"===ce,hideNextBtn:se&&"left"===ce})},l.createElement("div",{tabIndex:x,className:H()("".concat(r,"-panel"),i,(t={},(0,f.Z)(t,"".concat(r,"-panel-has-range"),le&&le[0]&&le[1]),(0,f.Z)(t,"".concat(r,"-panel-has-range-hover"),ue&&ue[0]&&ue[1]),(0,f.Z)(t,"".concat(r,"-panel-rtl"),"rtl"===Z),t)),style:o,onKeyDown:Ze,onBlur:function(e){fe.current&&fe.current.onBlur&&fe.current.onBlur(e)},onMouseDown:O,ref:ne},_e,je||Re||Te?l.createElement("div",{className:"".concat(r,"-footer")},je,Re,Te):null))};var ft=n(45),dt={bottomLeft:{points:["tl","bl"],offset:[0,4],overflow:{adjustX:1,adjustY:1}},bottomRight:{points:["tr","br"],offset:[0,4],overflow:{adjustX:1,adjustY:1}},topLeft:{points:["bl","tl"],offset:[0,-4],overflow:{adjustX:0,adjustY:1}},topRight:{points:["br","tr"],offset:[0,-4],overflow:{adjustX:0,adjustY:1}}};const ht=function(e){var t,n=e.prefixCls,r=e.popupElement,i=e.popupStyle,a=e.visible,o=e.dropdownClassName,s=e.dropdownAlign,c=e.transitionName,u=e.getPopupContainer,d=e.children,h=e.range,p=e.popupPlacement,v=e.direction,m="".concat(n,"-dropdown");return l.createElement(ft.Z,{showAction:[],hideAction:[],popupPlacement:void 0!==p?p:"rtl"===v?"bottomRight":"bottomLeft",builtinPlacements:dt,prefixCls:m,popupTransitionName:c,popup:r,popupAlign:s,popupVisible:a,popupClassName:H()(o,(t={},(0,f.Z)(t,"".concat(m,"-range"),h),(0,f.Z)(t,"".concat(m,"-rtl"),"rtl"===v),t)),popupStyle:i,getPopupContainer:u},d)};function pt(e){var t=e.open,n=e.value,r=e.isClickOutside,i=e.triggerOpen,a=e.forwardKeyDown,o=e.onKeyDown,s=e.blurToCancel,c=e.onSubmit,u=e.onCancel,f=e.onFocus,h=e.onBlur,p=(0,l.useState)(!1),v=(0,d.Z)(p,2),m=v[0],g=v[1],y=(0,l.useState)(!1),b=(0,d.Z)(y,2),w=b[0],N=b[1],x=(0,l.useRef)(!1),S=(0,l.useRef)(!1),k=(0,l.useRef)(!1),C={onMouseDown:function(){g(!0),i(!0)},onKeyDown:function(e){if(o(e,(function(){k.current=!0})),!k.current){switch(e.which){case Y.Z.ENTER:return t?!1!==c()&&g(!0):i(!0),void e.preventDefault();case Y.Z.TAB:return void(m&&t&&!e.shiftKey?(g(!1),e.preventDefault()):!m&&t&&!a(e)&&e.shiftKey&&(g(!0),e.preventDefault()));case Y.Z.ESC:return g(!0),void u()}t||[Y.Z.SHIFT].includes(e.which)?m||a(e):i(!0)}},onFocus:function(e){g(!0),N(!0),f&&f(e)},onBlur:function(e){!x.current&&r(document.activeElement)?(s?setTimeout((function(){for(var e=document.activeElement;e&&e.shadowRoot;)e=e.shadowRoot.activeElement;r(e)&&u()}),0):t&&(i(!1),S.current&&c()),N(!1),h&&h(e)):x.current=!1}};return(0,l.useEffect)((function(){S.current=!1}),[t]),(0,l.useEffect)((function(){S.current=!0}),[n]),(0,l.useEffect)((function(){return e=function(e){var n=function(e){var t,n=e.target;return e.composed&&n.shadowRoot&&(null===(t=e.composedPath)||void 0===t?void 0:t.call(e)[0])||n}(e);if(t){var a=r(n);a?w&&!a||i(!1):(x.current=!0,requestAnimationFrame((function(){x.current=!1})))}},!de&&"undefined"!=typeof window&&window.addEventListener&&(de=function(e){(0,ie.Z)(he).forEach((function(t){t(e)}))},window.addEventListener("mousedown",de)),he.add(e),function(){he.delete(e),0===he.size&&(window.removeEventListener("mousedown",de),de=null)};var e})),[C,{focused:w,typing:m}]}function vt(e){var t=e.valueTexts,n=e.onTextChange,r=l.useState(""),i=(0,d.Z)(r,2),a=i[0],o=i[1],s=l.useRef([]);function c(){o(s.current[0])}return s.current=t,l.useEffect((function(){t.every((function(e){return e!==a}))&&c()}),[t.join("||")]),[a,function(e){o(e),n(e)},c]}var mt=n(6774),gt=n.n(mt);function yt(e,t){var n=t.formatList,r=t.generateConfig,i=t.locale;return(0,Me.Z)((function(){if(!e)return[[""],""];for(var t="",a=[],o=0;o<n.length;o+=1){var s=n[o],c=Pe(e,{generateConfig:r,locale:i,format:s});a.push(c),0===o&&(t=c)}return[a,t]}),[e,n],(function(e,t){return e[0]!==t[0]||!gt()(e[1],t[1])}))}function bt(e,t){var n=t.formatList,r=t.generateConfig,i=t.locale,a=(0,l.useState)(null),o=(0,d.Z)(a,2),s=o[0],c=o[1],u=(0,l.useRef)(null);function f(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];cancelAnimationFrame(u.current),t?c(e):u.current=requestAnimationFrame((function(){c(e)}))}var h=yt(s,{formatList:n,generateConfig:r,locale:i}),p=(0,d.Z)(h,2)[1];function v(){f(null,arguments.length>0&&void 0!==arguments[0]&&arguments[0])}return(0,l.useEffect)((function(){v(!0)}),[e]),(0,l.useEffect)((function(){return function(){return cancelAnimationFrame(u.current)}}),[]),[p,function(e){f(e)},v]}function wt(e){var t,n=e.prefixCls,r=void 0===n?"rc-picker":n,i=e.id,o=e.tabIndex,c=e.style,u=e.className,h=e.dropdownClassName,p=e.dropdownAlign,v=e.popupStyle,m=e.transitionName,g=e.generateConfig,y=e.locale,b=e.inputReadOnly,w=e.allowClear,N=e.autoFocus,x=e.showTime,S=e.picker,k=void 0===S?"date":S,C=e.format,L=e.use12Hours,A=e.value,P=e.defaultValue,_=e.open,I=e.defaultOpen,O=e.defaultOpenValue,M=e.suffixIcon,D=e.clearIcon,F=e.disabled,Z=e.disabledDate,j=e.placeholder,R=e.getPopupContainer,T=e.pickerRef,B=e.panelRender,q=e.onChange,K=e.onOpenChange,U=e.onFocus,z=e.onBlur,W=e.onMouseDown,Y=e.onMouseUp,$=e.onMouseEnter,X=e.onMouseLeave,J=e.onContextMenu,Q=e.onClick,ee=e.onKeyDown,te=e.onSelect,ne=e.direction,re=e.autoComplete,ie=void 0===re?"off":re,ae=e.inputRender,oe=l.useRef(null),se="date"===k&&!!x||"time"===k;var ce=Ze(ue(C,k,x,L)),le=l.useRef(null),de=l.useRef(null),he=l.useRef(null),pe=(0,V.Z)(null,{value:A,defaultValue:P}),me=(0,d.Z)(pe,2),ge=me[0],ye=me[1],be=l.useState(ge),we=(0,d.Z)(be,2),Ne=we[0],xe=we[1],Se=l.useRef(null),ke=(0,V.Z)(!1,{value:_,defaultValue:I,postState:function(e){return!F&&e},onChange:function(e){K&&K(e),!e&&Se.current&&Se.current.onClose&&Se.current.onClose()}}),Ce=(0,d.Z)(ke,2),Ae=Ce[0],Ee=Ce[1],Ie=yt(Ne,{formatList:ce,generateConfig:g,locale:y}),Oe=(0,d.Z)(Ie,2),Me=Oe[0],De=Oe[1],Fe=vt({valueTexts:Me,onTextChange:function(e){var t=_e(e,{locale:y,formatList:ce,generateConfig:g});!t||Z&&Z(t)||xe(t)}}),Re=(0,d.Z)(Fe,3),Te=Re[0],Be=Re[1],qe=Re[2],Ke=function(e){xe(e),ye(e),q&&!Le(g,ge,e)&&q(e,e?Pe(e,{generateConfig:g,locale:y,format:ce[0]}):"")},Ue=function(e){F&&e||Ee(e)},ze=pt({blurToCancel:se,open:Ae,value:Te,triggerOpen:Ue,forwardKeyDown:function(e){return Ae&&Se.current&&Se.current.onKeyDown?Se.current.onKeyDown(e):((0,a.ZP)(!1,"Picker not correct forward KeyDown operation. Please help to fire issue about this."),!1)},isClickOutside:function(e){return!ve([le.current,de.current,he.current],e)},onSubmit:function(){return!(!Ne||Z&&Z(Ne))&&(Ke(Ne),Ue(!1),qe(),!0)},onCancel:function(){Ue(!1),xe(ge),qe()},onKeyDown:function(e,t){null==ee||ee(e,t)},onFocus:U,onBlur:z}),He=(0,d.Z)(ze,2),Ve=He[0],We=He[1],Ye=We.focused,Ge=We.typing;l.useEffect((function(){Ae||(xe(ge),Me.length&&""!==Me[0]?De!==Te&&qe():Be(""))}),[Ae,Me]),l.useEffect((function(){Ae||qe()}),[k]),l.useEffect((function(){xe(ge)}),[ge]),T&&(T.current={focus:function(){oe.current&&oe.current.focus()},blur:function(){oe.current&&oe.current.blur()}});var $e=bt(Te,{formatList:ce,generateConfig:g,locale:y}),Xe=(0,d.Z)($e,3),Je=Xe[0],Qe=Xe[1],et=Xe[2],tt=(0,E.Z)((0,E.Z)({},e),{},{className:void 0,style:void 0,pickerValue:void 0,onPickerValueChange:void 0,onChange:null}),nt=l.createElement(ut,(0,s.Z)({},tt,{generateConfig:g,className:H()((0,f.Z)({},"".concat(r,"-panel-focused"),!Ge)),value:Ne,locale:y,tabIndex:-1,onSelect:function(e){null==te||te(e),xe(e)},direction:ne,onPanelChange:function(t,n){var r=e.onPanelChange;et(!0),null==r||r(t,n)}}));B&&(nt=B(nt));var rt,it,at=l.createElement("div",{className:"".concat(r,"-panel-container"),onMouseDown:function(e){e.preventDefault()}},nt);M&&(rt=l.createElement("span",{className:"".concat(r,"-suffix")},M)),w&&ge&&!F&&(it=l.createElement("span",{onMouseDown:function(e){e.preventDefault(),e.stopPropagation()},onMouseUp:function(e){e.preventDefault(),e.stopPropagation(),Ke(null),Ue(!1)},className:"".concat(r,"-clear"),role:"button"},D||l.createElement("span",{className:"".concat(r,"-clear-btn")})));var ot=(0,E.Z)((0,E.Z)((0,E.Z)({id:i,tabIndex:o,disabled:F,readOnly:b||"function"==typeof ce[0]||!Ge,value:Je||Te,onChange:function(e){Be(e.target.value)},autoFocus:N,placeholder:j,ref:oe,title:Te},Ve),{},{size:fe(k,ce[0],g)},je(e)),{},{autoComplete:ie}),st=ae?ae(ot):l.createElement("input",ot);var ct="rtl"===ne?"bottomRight":"bottomLeft";return l.createElement(G.Provider,{value:{operationRef:Se,hideHeader:"time"===k,panelRef:le,onSelect:function(e,t){("submit"===t||"key"!==t&&!se)&&(Ke(e),Ue(!1))},open:Ae,defaultOpenValue:O,onDateMouseEnter:Qe,onDateMouseLeave:et}},l.createElement(ht,{visible:Ae,popupElement:at,popupStyle:v,prefixCls:r,dropdownClassName:h,dropdownAlign:p,getPopupContainer:R,transitionName:m,popupPlacement:ct,direction:ne},l.createElement("div",{ref:he,className:H()(r,u,(t={},(0,f.Z)(t,"".concat(r,"-disabled"),F),(0,f.Z)(t,"".concat(r,"-focused"),Ye),(0,f.Z)(t,"".concat(r,"-rtl"),"rtl"===ne),t)),style:c,onMouseDown:W,onMouseUp:function(){Y&&Y.apply(void 0,arguments),oe.current&&(oe.current.focus(),Ue(!0))},onMouseEnter:$,onMouseLeave:X,onContextMenu:J,onClick:Q},l.createElement("div",{className:H()("".concat(r,"-input"),(0,f.Z)({},"".concat(r,"-input-placeholder"),!!Je)),ref:de},st,rt,it))))}const Nt=function(e){(0,K.Z)(n,e);var t=(0,U.Z)(n);function n(){var e;(0,B.Z)(this,n);for(var r=arguments.length,i=new Array(r),a=0;a<r;a++)i[a]=arguments[a];return(e=t.call.apply(t,[this].concat(i))).pickerRef=l.createRef(),e.focus=function(){e.pickerRef.current&&e.pickerRef.current.focus()},e.blur=function(){e.pickerRef.current&&e.pickerRef.current.blur()},e}return(0,q.Z)(n,[{key:"render",value:function(){return l.createElement(wt,(0,s.Z)({},this.props,{pickerRef:this.pickerRef}))}}]),n}(l.Component);function xt(e,t,n,r){var i=Ee(e,n,r,1);function a(n){return n(e,t)?"same":n(i,t)?"closing":"far"}switch(n){case"year":return a((function(e,t){return function(e,t,n){var r=be(t,n);return"boolean"==typeof r?r:Math.floor(e.getYear(t)/10)===Math.floor(e.getYear(n)/10)}(r,e,t)}));case"quarter":case"month":return a((function(e,t){return we(r,e,t)}));default:return a((function(e,t){return Se(r,e,t)}))}}function St(e){var t=e.values,n=e.picker,r=e.defaultDates,i=e.generateConfig,a=l.useState((function(){return[Re(r,0),Re(r,1)]})),o=(0,d.Z)(a,2),s=o[0],c=o[1],u=l.useState(null),f=(0,d.Z)(u,2),h=f[0],p=f[1],v=Re(t,0),m=Re(t,1);return[function(e){return s[e]?s[e]:Re(h,e)||function(e,t,n,r){var i=Re(e,0),a=Re(e,1);if(0===t)return i;if(i&&a)switch(xt(i,a,n,r)){case"same":case"closing":return i;default:return Ee(a,n,r,-1)}return i}(t,e,n,i)||v||m||i.getNow()},function(e,n){if(e){var r=Te(h,e,n);c(Te(s,null,n)||[null,null]);var i=(n+1)%2;Re(t,i)||(r=Te(r,e,i)),p(r)}else(v||m)&&p(null)}]}function kt(e,t){return e&&e[0]&&e[1]&&t.isAfter(e[0],e[1])?[e[1],e[0]]:e}function Ct(e,t,n,r){return!!e||(!(!r||!r[t])||!!n[(t+1)%2])}function Lt(e){var t,n,r,i=e.prefixCls,o=void 0===i?"rc-picker":i,c=e.id,u=e.style,h=e.className,p=e.popupStyle,v=e.dropdownClassName,m=e.transitionName,g=e.dropdownAlign,y=e.getPopupContainer,b=e.generateConfig,w=e.locale,N=e.placeholder,x=e.autoFocus,S=e.disabled,k=e.format,C=e.picker,L=void 0===C?"date":C,A=e.showTime,P=e.use12Hours,_=e.separator,I=void 0===_?"~":_,O=e.value,M=e.defaultValue,D=e.defaultPickerValue,F=e.open,Z=e.defaultOpen,j=e.disabledDate,R=e.disabledTime,T=e.dateRender,B=e.panelRender,q=e.ranges,K=e.allowEmpty,U=e.allowClear,z=e.suffixIcon,Y=e.clearIcon,$=e.pickerRef,X=e.inputReadOnly,J=e.mode,Q=e.renderExtraFooter,ee=e.onChange,te=e.onOpenChange,ne=e.onPanelChange,re=e.onCalendarChange,ie=e.onFocus,ae=e.onBlur,oe=e.onMouseDown,se=e.onMouseUp,ce=e.onMouseEnter,le=e.onMouseLeave,de=e.onClick,he=e.onOk,pe=e.onKeyDown,me=e.components,ge=e.order,ye=e.direction,be=e.activePickerIndex,we=e.autoComplete,Se=void 0===we?"off":we,Ae="date"===L&&!!A||"time"===L,Ie=(0,l.useRef)({}),Oe=(0,l.useRef)(null),Me=(0,l.useRef)(null),De=(0,l.useRef)(null),Fe=(0,l.useRef)(null),Be=(0,l.useRef)(null),qe=(0,l.useRef)(null),Ke=(0,l.useRef)(null),Ue=(0,l.useRef)(null);var He=Ze(ue(k,L,A,P)),Ve=(0,V.Z)(0,{value:be}),We=(0,d.Z)(Ve,2),Ye=We[0],Ge=We[1],$e=(0,l.useRef)(null),Xe=l.useMemo((function(){return Array.isArray(S)?S:[S||!1,S||!1]}),[S]),Je=(0,V.Z)(null,{value:O,defaultValue:M,postState:function(e){return"time"!==L||ge?kt(e,b):e}}),Qe=(0,d.Z)(Je,2),et=Qe[0],tt=Qe[1],nt=St({values:et,picker:L,defaultDates:D,generateConfig:b}),rt=(0,d.Z)(nt,2),it=rt[0],at=rt[1],ot=(0,V.Z)(et,{postState:function(e){var t=e;if(Xe[0]&&Xe[1])return t;for(var n=0;n<2;n+=1)!Xe[n]||Re(t,n)||Re(K,n)||(t=Te(t,b.getNow(),n));return t}}),st=(0,d.Z)(ot,2),ft=st[0],dt=st[1],mt=(0,V.Z)([L,L],{value:J}),gt=(0,d.Z)(mt,2),wt=gt[0],Nt=gt[1];(0,l.useEffect)((function(){Nt([L,L])}),[L]);var xt=function(e,t){Nt(e),ne&&ne(t,e)},Lt=function(e,t,n){var r=e.picker,i=e.locale,a=e.selectedValue,o=e.disabledDate,s=e.disabled,c=e.generateConfig,u=Re(a,0),f=Re(a,1);function d(e){return c.locale.getWeekFirstDate(i.locale,e)}function h(e){return 100*c.getYear(e)+c.getMonth(e)}function p(e){return 10*c.getYear(e)+Ne(c,e)}return[l.useCallback((function(e){if(o&&o(e))return!0;if(s[1]&&f)return!ke(c,e,f)&&c.isAfter(e,f);if(t&&f)switch(r){case"quarter":return p(e)>p(f);case"month":return h(e)>h(f);case"week":return d(e)>d(f);default:return!ke(c,e,f)&&c.isAfter(e,f)}return!1}),[o,s[1],f,t]),l.useCallback((function(e){if(o&&o(e))return!0;if(s[0]&&u)return!ke(c,e,f)&&c.isAfter(u,e);if(n&&u)switch(r){case"quarter":return p(e)<p(u);case"month":return h(e)<h(u);case"week":return d(e)<d(u);default:return!ke(c,e,u)&&c.isAfter(u,e)}return!1}),[o,s[0],u,n])]}({picker:L,selectedValue:ft,locale:w,disabled:Xe,disabledDate:j,generateConfig:b},Ie.current[1],Ie.current[0]),At=(0,d.Z)(Lt,2),Et=At[0],Pt=At[1],_t=(0,V.Z)(!1,{value:F,defaultValue:Z,postState:function(e){return!Xe[Ye]&&e},onChange:function(e){te&&te(e),!e&&$e.current&&$e.current.onClose&&$e.current.onClose()}}),It=(0,d.Z)(_t,2),Ot=It[0],Mt=It[1],Dt=Ot&&0===Ye,Ft=Ot&&1===Ye,Zt=(0,l.useState)(0),jt=(0,d.Z)(Zt,2),Rt=jt[0],Tt=jt[1];(0,l.useEffect)((function(){!Ot&&Oe.current&&Tt(Oe.current.offsetWidth)}),[Ot]);var Bt=l.useRef();function qt(e,t){if(e)clearTimeout(Bt.current),Ie.current[t]=!0,Ge(t),Mt(e),Ot||at(null,t);else if(Ye===t){Mt(e);var n=Ie.current;Bt.current=setTimeout((function(){n===Ie.current&&(Ie.current={})}))}}function Kt(e){qt(!0,e),setTimeout((function(){var t=[qe,Ke][e];t.current&&t.current.focus()}),0)}function Ut(e,t){var n=e,r=Re(n,0),i=Re(n,1);r&&i&&b.isAfter(r,i)&&("week"===L&&!Ce(b,w.locale,r,i)||"quarter"===L&&!xe(b,r,i)||"week"!==L&&"quarter"!==L&&"time"!==L&&!ke(b,r,i)?(0===t?(n=[r,null],i=null):(r=null,n=[null,i]),Ie.current=(0,f.Z)({},t,!0)):"time"===L&&!1===ge||(n=kt(n,b))),dt(n);var a=n&&n[0]?Pe(n[0],{generateConfig:b,locale:w,format:He[0]}):"",o=n&&n[1]?Pe(n[1],{generateConfig:b,locale:w,format:He[0]}):"";re&&re(n,[a,o],{range:0===t?"start":"end"});var s=Ct(r,0,Xe,K),c=Ct(i,1,Xe,K);(null===n||s&&c)&&(tt(n),!ee||Le(b,Re(et,0),r)&&Le(b,Re(et,1),i)||ee(n,[a,o]));var l=null;0!==t||Xe[1]?1!==t||Xe[0]||(l=0):l=1,null===l||l===Ye||Ie.current[l]&&Re(n,l)||!Re(n,t)?qt(!1,t):Kt(l)}var zt=function(e){return Ot&&$e.current&&$e.current.onKeyDown?$e.current.onKeyDown(e):((0,a.ZP)(!1,"Picker not correct forward KeyDown operation. Please help to fire issue about this."),!1)},Ht={formatList:He,generateConfig:b,locale:w},Vt=yt(Re(ft,0),Ht),Wt=(0,d.Z)(Vt,2),Yt=Wt[0],Gt=Wt[1],$t=yt(Re(ft,1),Ht),Xt=(0,d.Z)($t,2),Jt=Xt[0],Qt=Xt[1],en=function(e,t){var n=_e(e,{locale:w,formatList:He,generateConfig:b});n&&!(0===t?Et:Pt)(n)&&(dt(Te(ft,n,t)),at(n,t))},tn=vt({valueTexts:Yt,onTextChange:function(e){return en(e,0)}}),nn=(0,d.Z)(tn,3),rn=nn[0],an=nn[1],on=nn[2],sn=vt({valueTexts:Jt,onTextChange:function(e){return en(e,1)}}),cn=(0,d.Z)(sn,3),ln=cn[0],un=cn[1],fn=cn[2],dn=(0,l.useState)(null),hn=(0,d.Z)(dn,2),pn=hn[0],vn=hn[1],mn=(0,l.useState)(null),gn=(0,d.Z)(mn,2),yn=gn[0],bn=gn[1],wn=bt(rn,{formatList:He,generateConfig:b,locale:w}),Nn=(0,d.Z)(wn,3),xn=Nn[0],Sn=Nn[1],kn=Nn[2],Cn=bt(ln,{formatList:He,generateConfig:b,locale:w}),Ln=(0,d.Z)(Cn,3),An=Ln[0],En=Ln[1],Pn=Ln[2],_n=function(e,t){return{blurToCancel:Ae,forwardKeyDown:zt,onBlur:ae,isClickOutside:function(e){return!ve([Me.current,De.current,Fe.current,Oe.current],e)},onFocus:function(t){Ge(e),ie&&ie(t)},triggerOpen:function(t){qt(t,e)},onSubmit:function(){if(!ft||j&&j(ft[e]))return!1;Ut(ft,e),t()},onCancel:function(){qt(!1,e),dt(et),t()}}},In=pt((0,E.Z)((0,E.Z)({},_n(0,on)),{},{open:Dt,value:rn,onKeyDown:function(e,t){null==pe||pe(e,t)}})),On=(0,d.Z)(In,2),Mn=On[0],Dn=On[1],Fn=Dn.focused,Zn=Dn.typing,jn=pt((0,E.Z)((0,E.Z)({},_n(1,fn)),{},{open:Ft,value:ln,onKeyDown:function(e,t){null==pe||pe(e,t)}})),Rn=(0,d.Z)(jn,2),Tn=Rn[0],Bn=Rn[1],qn=Bn.focused,Kn=Bn.typing,Un=et&&et[0]?Pe(et[0],{locale:w,format:"YYYYMMDDHHmmss",generateConfig:b}):"",zn=et&&et[1]?Pe(et[1],{locale:w,format:"YYYYMMDDHHmmss",generateConfig:b}):"";(0,l.useEffect)((function(){Ot||(dt(et),Yt.length&&""!==Yt[0]?Gt!==rn&&on():an(""),Jt.length&&""!==Jt[0]?Qt!==ln&&fn():un(""))}),[Ot,Yt,Jt]),(0,l.useEffect)((function(){dt(et)}),[Un,zn]),$&&($.current={focus:function(){qe.current&&qe.current.focus()},blur:function(){qe.current&&qe.current.blur(),Ke.current&&Ke.current.blur()}});var Hn=Object.keys(q||{}).map((function(e){var t=q[e],n="function"==typeof t?t():t;return{label:e,onClick:function(){Ut(n,null),qt(!1,Ye)},onMouseEnter:function(){vn(n)},onMouseLeave:function(){vn(null)}}}));function Vn(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=null;Ot&&yn&&yn[0]&&yn[1]&&b.isAfter(yn[1],yn[0])&&(r=yn);var i=A;if(A&&"object"===(0,W.Z)(A)&&A.defaultValue){var a=A.defaultValue;i=(0,E.Z)((0,E.Z)({},A),{},{defaultValue:Re(a,Ye)||void 0})}var c=null;return T&&(c=function(e,t){return T(e,t,{range:Ye?"end":"start"})}),l.createElement(ze.Provider,{value:{inRange:!0,panelPosition:t,rangedValue:pn||ft,hoverRangedValue:r}},l.createElement(ut,(0,s.Z)({},e,n,{dateRender:c,showTime:i,mode:wt[Ye],generateConfig:b,style:void 0,direction:ye,disabledDate:0===Ye?Et:Pt,disabledTime:function(e){return!!R&&R(e,0===Ye?"start":"end")},className:H()((0,f.Z)({},"".concat(o,"-panel-focused"),0===Ye?!Zn:!Kn)),value:Re(ft,Ye),locale:w,tabIndex:-1,onPanelChange:function(e,n){0===Ye&&kn(!0),1===Ye&&Pn(!0),xt(Te(wt,n,Ye),Te(ft,e,Ye));var r=e;"right"===t&&wt[Ye]===n&&(r=Ee(r,n,b,-1)),at(r,Ye)},onOk:null,onSelect:void 0,onChange:void 0,defaultValue:Re(ft,0===Ye?1:0)})))}var Wn=0,Yn=0;if(Ye&&De.current&&Be.current&&Me.current){Wn=De.current.offsetWidth+Be.current.offsetWidth;var Gn=Ue.current.offsetLeft>Wn?Ue.current.offsetLeft-Wn:Ue.current.offsetLeft;Me.current.offsetWidth&&Ue.current.offsetWidth&&Wn>Me.current.offsetWidth-Ue.current.offsetWidth-("rtl"===ye?0:Gn)&&(Yn=Wn)}var $n="rtl"===ye?{right:Wn}:{left:Wn};var Xn,Jn,Qn=l.createElement("div",{className:H()("".concat(o,"-range-wrapper"),"".concat(o,"-").concat(L,"-range-wrapper")),style:{minWidth:Rt}},l.createElement("div",{ref:Ue,className:"".concat(o,"-range-arrow"),style:$n}),function(){var e,t=ct(o,wt[Ye],Q),n=lt({prefixCls:o,components:me,needConfirmButton:Ae,okDisabled:!Re(ft,Ye)||j&&j(ft[Ye]),locale:w,rangeList:Hn,onOk:function(){Re(ft,Ye)&&(Ut(ft,Ye),he&&he(ft))}});if("time"===L||A)e=Vn();else{var r=it(Ye),i=Ee(r,L,b),a=wt[Ye]===L,s=Vn(!!a&&"left",{pickerValue:r,onPickerValueChange:function(e){at(e,Ye)}}),c=Vn("right",{pickerValue:i,onPickerValueChange:function(e){at(Ee(e,L,b,-1),Ye)}});e="rtl"===ye?l.createElement(l.Fragment,null,c,a&&s):l.createElement(l.Fragment,null,s,a&&c)}var u=l.createElement(l.Fragment,null,l.createElement("div",{className:"".concat(o,"-panels")},e),(t||n)&&l.createElement("div",{className:"".concat(o,"-footer")},t,n));return B&&(u=B(u)),l.createElement("div",{className:"".concat(o,"-panel-container"),style:{marginLeft:Yn},ref:Me,onMouseDown:function(e){e.preventDefault()}},u)}());z&&(Xn=l.createElement("span",{className:"".concat(o,"-suffix")},z)),U&&(Re(et,0)&&!Xe[0]||Re(et,1)&&!Xe[1])&&(Jn=l.createElement("span",{onMouseDown:function(e){e.preventDefault(),e.stopPropagation()},onMouseUp:function(e){e.preventDefault(),e.stopPropagation();var t=et;Xe[0]||(t=Te(t,null,0)),Xe[1]||(t=Te(t,null,1)),Ut(t,null),qt(!1,Ye)},className:"".concat(o,"-clear")},Y||l.createElement("span",{className:"".concat(o,"-clear-btn")})));var er={size:fe(L,He[0],b)},tr=0,nr=0;De.current&&Fe.current&&Be.current&&(0===Ye?nr=De.current.offsetWidth:(tr=Wn,nr=Fe.current.offsetWidth));var rr="rtl"===ye?{right:tr}:{left:tr};return l.createElement(G.Provider,{value:{operationRef:$e,hideHeader:"time"===L,onDateMouseEnter:function(e){bn(Te(ft,e,Ye)),0===Ye?Sn(e):En(e)},onDateMouseLeave:function(){bn(Te(ft,null,Ye)),0===Ye?kn():Pn()},hideRanges:!0,onSelect:function(e,t){var n=Te(ft,e,Ye);"submit"===t||"key"!==t&&!Ae?(Ut(n,Ye),0===Ye?kn():Pn()):dt(n)},open:Ot}},l.createElement(ht,{visible:Ot,popupElement:Qn,popupStyle:p,prefixCls:o,dropdownClassName:v,dropdownAlign:g,getPopupContainer:y,transitionName:m,range:!0,direction:ye},l.createElement("div",(0,s.Z)({ref:Oe,className:H()(o,"".concat(o,"-range"),h,(t={},(0,f.Z)(t,"".concat(o,"-disabled"),Xe[0]&&Xe[1]),(0,f.Z)(t,"".concat(o,"-focused"),0===Ye?Fn:qn),(0,f.Z)(t,"".concat(o,"-rtl"),"rtl"===ye),t)),style:u,onClick:function(e){de&&de(e),Ot||qe.current.contains(e.target)||Ke.current.contains(e.target)||(Xe[0]?Xe[1]||Kt(1):Kt(0))},onMouseEnter:ce,onMouseLeave:le,onMouseDown:function(e){oe&&oe(e),!Ot||!Fn&&!qn||qe.current.contains(e.target)||Ke.current.contains(e.target)||e.preventDefault()},onMouseUp:se},je(e)),l.createElement("div",{className:H()("".concat(o,"-input"),(n={},(0,f.Z)(n,"".concat(o,"-input-active"),0===Ye),(0,f.Z)(n,"".concat(o,"-input-placeholder"),!!xn),n)),ref:De},l.createElement("input",(0,s.Z)({id:c,disabled:Xe[0],readOnly:X||"function"==typeof He[0]||!Zn,value:xn||rn,onChange:function(e){an(e.target.value)},autoFocus:x,placeholder:Re(N,0)||"",ref:qe},Mn,er,{autoComplete:Se}))),l.createElement("div",{className:"".concat(o,"-range-separator"),ref:Be},I),l.createElement("div",{className:H()("".concat(o,"-input"),(r={},(0,f.Z)(r,"".concat(o,"-input-active"),1===Ye),(0,f.Z)(r,"".concat(o,"-input-placeholder"),!!An),r)),ref:Fe},l.createElement("input",(0,s.Z)({disabled:Xe[1],readOnly:X||"function"==typeof He[0]||!Kn,value:An||ln,onChange:function(e){un(e.target.value)},placeholder:Re(N,1)||"",ref:Ke},Tn,er,{autoComplete:Se}))),l.createElement("div",{className:"".concat(o,"-active-bar"),style:(0,E.Z)((0,E.Z)({},rr),{},{width:nr,position:"absolute"})}),Xn,Jn)))}const At=function(e){(0,K.Z)(n,e);var t=(0,U.Z)(n);function n(){var e;(0,B.Z)(this,n);for(var r=arguments.length,i=new Array(r),a=0;a<r;a++)i[a]=arguments[a];return(e=t.call.apply(t,[this].concat(i))).pickerRef=l.createRef(),e.focus=function(){e.pickerRef.current&&e.pickerRef.current.focus()},e.blur=function(){e.pickerRef.current&&e.pickerRef.current.blur()},e}return(0,q.Z)(n,[{key:"render",value:function(){return l.createElement(Lt,(0,s.Z)({},this.props,{pickerRef:this.pickerRef}))}}]),n}(l.Component),Et=Nt;var Pt=n(8866),_t=n(7647),It=n(5223),Ot=n(7667),Mt=n(9708),Dt=n(7870);function Ft(e,t,n){return void 0!==n?n:"year"===e&&t.lang.yearPlaceholder?t.lang.yearPlaceholder:"quarter"===e&&t.lang.quarterPlaceholder?t.lang.quarterPlaceholder:"month"===e&&t.lang.monthPlaceholder?t.lang.monthPlaceholder:"week"===e&&t.lang.weekPlaceholder?t.lang.weekPlaceholder:"time"===e&&t.timePickerLocale.placeholder?t.timePickerLocale.placeholder:t.lang.placeholder}function Zt(e,t,n){return void 0!==n?n:"year"===e&&t.lang.yearPlaceholder?t.lang.rangeYearPlaceholder:"quarter"===e&&t.lang.quarterPlaceholder?t.lang.rangeQuarterPlaceholder:"month"===e&&t.lang.monthPlaceholder?t.lang.rangeMonthPlaceholder:"week"===e&&t.lang.weekPlaceholder?t.lang.rangeWeekPlaceholder:"time"===e&&t.timePickerLocale.placeholder?t.timePickerLocale.rangePlaceholder:t.lang.rangePlaceholder}function jt(e,t){var n={adjustX:1,adjustY:1};switch(t){case"bottomLeft":return{points:["tl","bl"],offset:[0,4],overflow:n};case"bottomRight":return{points:["tr","br"],offset:[0,4],overflow:n};case"topLeft":return{points:["bl","tl"],offset:[0,-4],overflow:n};case"topRight":return{points:["br","tr"],offset:[0,-4],overflow:n};default:return"rtl"===e?{points:["tr","br"],offset:[0,4],overflow:n}:{points:["tl","bl"],offset:[0,4],overflow:n}}}var Rt=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n};var Tt=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n};var Bt={button:function(e){return l.createElement(u.Z,(0,s.Z)({size:"small",type:"primary"},e))},rangeItem:function(e){return l.createElement(A,(0,s.Z)({color:"blue"},e))}};function qt(e){var t,n=e.format,r=e.picker,i=e.showHour,a=e.showMinute,o=e.showSecond,c=e.use12Hours,l=(t=n,t?Array.isArray(t)?t:[t]:[])[0],u=(0,s.Z)({},e);return l&&"string"==typeof l&&(l.includes("s")||void 0!==o||(u.showSecond=!1),l.includes("m")||void 0!==a||(u.showMinute=!1),l.includes("H")||l.includes("h")||void 0!==i||(u.showHour=!1),(l.includes("a")||l.includes("A"))&&void 0===c&&(u.use12Hours=!0)),"time"===r?u:("function"==typeof l&&delete u.format,{showTime:u})}(0,c.b)("bottomLeft","bottomRight","topLeft","topRight");const Kt=function(e){var t=function(e){function t(t,n){var r=(0,l.forwardRef)((function(n,r){var i=n.prefixCls,a=n.getPopupContainer,o=n.className,c=n.size,u=n.bordered,d=void 0===u||u,h=n.placement,p=n.placeholder,m=n.disabled,y=n.status,b=Tt(n,["prefixCls","getPopupContainer","className","size","bordered","placement","placeholder","disabled","status"]),w=(0,l.useContext)(g.E_),N=w.getPrefixCls,x=w.direction,S=w.getPopupContainer,k=N("picker",i),C=l.useRef(null),L=n.format,A=n.showTime;(0,l.useImperativeHandle)(r,(function(){return{focus:function(){var e;return null===(e=C.current)||void 0===e?void 0:e.focus()},blur:function(){var e;return null===(e=C.current)||void 0===e?void 0:e.blur()}}}));var E={showToday:!0},P={};t&&(P.picker=t);var _=t||n.picker;P=(0,s.Z)((0,s.Z)((0,s.Z)({},P),A?qt((0,s.Z)({format:L,picker:_},A)):{}),"time"===_?qt((0,s.Z)((0,s.Z)({format:L},n),{picker:_})):{});var I=N(),M=l.useContext(_t.Z),D=c||M,j=l.useContext(Pt.Z),R=m||j,T=(0,l.useContext)(It.aM),B=T.hasFeedback,q=T.status,K=T.feedbackIcon,U=l.createElement(l.Fragment,null,"time"===_?l.createElement(F,null):l.createElement(O,null),B&&K);return l.createElement(Ot.Z,{componentName:"DatePicker",defaultLocale:Dt.Z},(function(t){var r,i=(0,s.Z)((0,s.Z)({},t),n.locale);return l.createElement(Et,(0,s.Z)({ref:C,placeholder:Ft(_,i,p),suffixIcon:U,dropdownAlign:jt(x,h),clearIcon:l.createElement(Z.Z,null),prevIcon:l.createElement("span",{className:"".concat(k,"-prev-icon")}),nextIcon:l.createElement("span",{className:"".concat(k,"-next-icon")}),superPrevIcon:l.createElement("span",{className:"".concat(k,"-super-prev-icon")}),superNextIcon:l.createElement("span",{className:"".concat(k,"-super-next-icon")}),allowClear:!0,transitionName:"".concat(I,"-slide-up")},E,b,P,{locale:i.lang,className:v()((r={},(0,f.Z)(r,"".concat(k,"-").concat(D),D),(0,f.Z)(r,"".concat(k,"-borderless"),!d),r),(0,Mt.Z)(k,(0,Mt.F)(q,y),B),o),prefixCls:k,getPopupContainer:a||S,generateConfig:e,components:Bt,direction:x,disabled:R}))}))}));return n&&(r.displayName=n),r}return{DatePicker:t(),WeekPicker:t("week","WeekPicker"),MonthPicker:t("month","MonthPicker"),YearPicker:t("year","YearPicker"),TimePicker:t("time","TimePicker"),QuarterPicker:t("quarter","QuarterPicker")}}(e),n=t.DatePicker,r=t.WeekPicker,i=t.MonthPicker,a=t.YearPicker,o=t.TimePicker,c=t.QuarterPicker,u=function(e){return(0,l.forwardRef)((function(t,n){var r=t.prefixCls,i=t.getPopupContainer,a=t.className,o=t.placement,c=t.size,u=t.disabled,d=t.bordered,h=void 0===d||d,p=t.placeholder,m=t.status,y=Rt(t,["prefixCls","getPopupContainer","className","placement","size","disabled","bordered","placeholder","status"]),b=l.useRef(null),w=(0,l.useContext)(g.E_),N=w.getPrefixCls,x=w.direction,S=w.getPopupContainer,k=N("picker",r),C=t.format,L=t.showTime,A=t.picker,E=N(),P={};P=(0,s.Z)((0,s.Z)((0,s.Z)({},P),L?qt((0,s.Z)({format:C,picker:A},L)):{}),"time"===A?qt((0,s.Z)((0,s.Z)({format:C},t),{picker:A})):{});var _=l.useContext(_t.Z),I=c||_,M=l.useContext(Pt.Z),D=u||M,j=(0,l.useContext)(It.aM),R=j.hasFeedback,B=j.status,q=j.feedbackIcon,K=l.createElement(l.Fragment,null,"time"===A?l.createElement(F,null):l.createElement(O,null),R&&q);return(0,l.useImperativeHandle)(n,(function(){return{focus:function(){var e;return null===(e=b.current)||void 0===e?void 0:e.focus()},blur:function(){var e;return null===(e=b.current)||void 0===e?void 0:e.blur()}}})),l.createElement(Ot.Z,{componentName:"DatePicker",defaultLocale:Dt.Z},(function(n){var r,c=(0,s.Z)((0,s.Z)({},n),t.locale);return l.createElement(At,(0,s.Z)({separator:l.createElement("span",{"aria-label":"to",className:"".concat(k,"-separator")},l.createElement(T,null)),disabled:D,ref:b,dropdownAlign:jt(x,o),placeholder:Zt(A,c,p),suffixIcon:K,clearIcon:l.createElement(Z.Z,null),prevIcon:l.createElement("span",{className:"".concat(k,"-prev-icon")}),nextIcon:l.createElement("span",{className:"".concat(k,"-next-icon")}),superPrevIcon:l.createElement("span",{className:"".concat(k,"-super-prev-icon")}),superNextIcon:l.createElement("span",{className:"".concat(k,"-super-next-icon")}),allowClear:!0,transitionName:"".concat(E,"-slide-up")},y,P,{className:v()((r={},(0,f.Z)(r,"".concat(k,"-").concat(I),I),(0,f.Z)(r,"".concat(k,"-borderless"),!h),r),(0,Mt.Z)(k,(0,Mt.F)(B,m),R),a),locale:c.lang,prefixCls:k,getPopupContainer:i||S,generateConfig:e,components:Bt,direction:x}))}))}))}(e),d=n;return d.WeekPicker=r,d.MonthPicker=i,d.YearPicker=a,d.RangePicker=u,d.TimePicker=o,d.QuarterPicker=c,d};const Ut=Kt(o)},9263:(e,t,n)=>{"use strict";n(2648),n(1337)},641:(e,t,n)=>{"use strict";n.d(t,{Z:()=>H});var r=n(7462),i=n(1002),a=n(9439),o=n(4942),s=n(1413),c=n(7294);const l={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"}}]},name:"right",theme:"outlined"};var u=n(7713),f=function(e,t){return c.createElement(u.Z,(0,s.Z)((0,s.Z)({},e),{},{ref:t,icon:l}))};f.displayName="RightOutlined";const d=c.forwardRef(f);var h=n(6228),p=n.n(h),v=n(4925),m=n(45),g=n(1452),y=n.n(g),b={adjustX:1,adjustY:1},w=[0,0];const N={topLeft:{points:["bl","tl"],overflow:b,offset:[0,-4],targetOffset:w},topCenter:{points:["bc","tc"],overflow:b,offset:[0,-4],targetOffset:w},topRight:{points:["br","tr"],overflow:b,offset:[0,-4],targetOffset:w},bottomLeft:{points:["tl","bl"],overflow:b,offset:[0,4],targetOffset:w},bottomCenter:{points:["tc","bc"],overflow:b,offset:[0,4],targetOffset:w},bottomRight:{points:["tr","br"],overflow:b,offset:[0,4],targetOffset:w}};var x=n(5105),S=n(5164),k=n(8603),C=x.Z.ESC,L=x.Z.TAB;var A=["arrow","prefixCls","transitionName","animation","align","placement","placements","getPopupContainer","showAction","hideAction","overlayClassName","overlayStyle","visible","trigger","autoFocus"];function E(e,t){var n=e.arrow,r=void 0!==n&&n,i=e.prefixCls,l=void 0===i?"rc-dropdown":i,u=e.transitionName,f=e.animation,d=e.align,h=e.placement,p=void 0===h?"bottomLeft":h,g=e.placements,b=void 0===g?N:g,w=e.getPopupContainer,x=e.showAction,E=e.hideAction,P=e.overlayClassName,_=e.overlayStyle,I=e.visible,O=e.trigger,M=void 0===O?["hover"]:O,D=e.autoFocus,F=(0,v.Z)(e,A),Z=c.useState(),j=(0,a.Z)(Z,2),R=j[0],T=j[1],B="visible"in e?I:R,q=c.useRef(null);c.useImperativeHandle(t,(function(){return q.current})),function(e){var t=e.visible,n=e.setTriggerVisible,r=e.triggerRef,i=e.onVisibleChange,a=e.autoFocus,o=c.useRef(!1),s=function(){var e,a,o,s;t&&r.current&&(null===(e=r.current)||void 0===e||null===(a=e.triggerRef)||void 0===a||null===(o=a.current)||void 0===o||null===(s=o.focus)||void 0===s||s.call(o),n(!1),"function"==typeof i&&i(!1))},l=function(){var e,t,n,i,a=(0,k.tS)(null===(e=r.current)||void 0===e||null===(t=e.popupRef)||void 0===t||null===(n=t.current)||void 0===n||null===(i=n.getElement)||void 0===i?void 0:i.call(n))[0];return!!(null==a?void 0:a.focus)&&(a.focus(),o.current=!0,!0)},u=function(e){switch(e.keyCode){case C:s();break;case L:var t=!1;o.current||(t=l()),t?e.preventDefault():s()}};c.useEffect((function(){return t?(window.addEventListener("keydown",u),a&&(0,S.Z)(l,3),function(){window.removeEventListener("keydown",u),o.current=!1}):function(){o.current=!1}}),[t])}({visible:B,setTriggerVisible:T,triggerRef:q,onVisibleChange:e.onVisibleChange,autoFocus:D});var K,U,z,H,V,W,Y=function(){var t,n="function"==typeof(t=e.overlay)?t():t;return c.createElement(c.Fragment,null,r&&c.createElement("div",{className:"".concat(l,"-arrow")}),n)},G=E;return G||-1===M.indexOf("contextMenu")||(G=["click"]),c.createElement(m.Z,(0,s.Z)((0,s.Z)({builtinPlacements:b},F),{},{prefixCls:l,ref:q,popupClassName:y()(P,(0,o.Z)({},"".concat(l,"-show-arrow"),r)),popupStyle:_,action:M,showAction:x,hideAction:G||[],popupPlacement:p,popupAlign:d,popupTransitionName:u,popupAnimation:f,popupVisible:B,stretch:(V=e.minOverlayWidthMatchTrigger,W=e.alignPoint,("minOverlayWidthMatchTrigger"in e?V:!W)?"minWidth":""),popup:"function"==typeof e.overlay?Y:Y(),onPopupVisibleChange:function(t){var n=e.onVisibleChange;T(t),"function"==typeof n&&n(t)},onPopupClick:function(t){var n=e.onOverlayClick;T(!1),n&&n(t)},getPopupContainer:w}),(U=e.children,z=U.props?U.props:{},H=y()(z.className,void 0!==(K=e.openClassName)?K:"".concat(l,"-open")),B&&U?c.cloneElement(U,{className:H}):U))}const P=c.forwardRef(E);var _=n(6680),I=n(1770),O=n(3124),M=n(6529),D=n(636),F=n(6159),Z=n(3355),j=n(5452),R=n(1577),T=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},B=R.Z.Group,q=function(e){var t=c.useContext(O.E_),n=t.getPopupContainer,i=t.getPrefixCls,o=t.direction,s=e.prefixCls,l=e.type,u=void 0===l?"default":l,f=e.disabled,d=e.loading,h=e.onClick,v=e.htmlType,m=e.children,g=e.className,y=e.overlay,b=e.trigger,w=e.align,N=e.visible,x=e.onVisibleChange,S=e.placement,k=e.getPopupContainer,C=e.href,L=e.icon,A=void 0===L?c.createElement(j.Z,null):L,E=e.title,P=e.buttonsRender,_=void 0===P?function(e){return e}:P,I=e.mouseEnterDelay,M=e.mouseLeaveDelay,D=e.overlayClassName,F=e.overlayStyle,Z=e.destroyPopupOnHide,q=T(e,["prefixCls","type","disabled","loading","onClick","htmlType","children","className","overlay","trigger","align","visible","onVisibleChange","placement","getPopupContainer","href","icon","title","buttonsRender","mouseEnterDelay","mouseLeaveDelay","overlayClassName","overlayStyle","destroyPopupOnHide"]),K=i("dropdown-button",s),U={align:w,overlay:y,disabled:f,trigger:f?[]:b,onVisibleChange:x,getPopupContainer:k||n,mouseEnterDelay:I,mouseLeaveDelay:M,overlayClassName:D,overlayStyle:F,destroyPopupOnHide:Z};"visible"in e&&(U.visible=N),U.placement="placement"in e?S:"rtl"===o?"bottomLeft":"bottomRight";var H=_([c.createElement(R.Z,{type:u,disabled:f,loading:d,onClick:h,htmlType:v,href:C,title:E},m),c.createElement(R.Z,{type:u,icon:A})]),V=(0,a.Z)(H,2),W=V[0],Y=V[1];return c.createElement(B,(0,r.Z)({},q,{className:p()(K,g)}),W,c.createElement(z,(0,r.Z)({},U),Y))};q.__ANT_BUTTON=!0;const K=q;(0,Z.b)("topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","top","bottom");var U=function(e){var t,n=c.useContext(O.E_),s=n.getPopupContainer,l=n.getPrefixCls,u=n.direction,f=e.arrow,h=e.prefixCls,v=e.children,m=e.trigger,g=e.disabled,y=e.getPopupContainer,b=e.overlayClassName,w=e.visible,N=e.onVisibleChange,x=l("dropdown",h),S=c.Children.only(v),k=(0,F.Tm)(S,{className:p()("".concat(x,"-trigger"),(0,o.Z)({},"".concat(x,"-rtl"),"rtl"===u),S.props.className),disabled:g}),C=g?[]:m;C&&-1!==C.indexOf("contextMenu")&&(t=!0);var L,A,E,Z,j=(0,I.Z)(!1,{value:w}),R=(0,a.Z)(j,2),T=R[0],B=R[1],q=(0,_.Z)((function(e){null==N||N(e),B(e)})),K=p()(b,(0,o.Z)({},"".concat(x,"-rtl"),"rtl"===u)),U=(0,D.Z)({arrowPointAtCenter:"object"===(0,i.Z)(f)&&f.pointAtCenter,autoAdjustOverflow:!0}),z=c.useCallback((function(){B(!1)}),[]);return c.createElement(P,(0,r.Z)({alignPoint:t},e,{visible:T,builtinPlacements:U,arrow:!!f,overlayClassName:K,prefixCls:x,getPopupContainer:y||s,transitionName:(L=l(),A=e.placement,E=void 0===A?"":A,Z=e.transitionName,void 0!==Z?Z:E.indexOf("top")>=0?"".concat(L,"-slide-down"):"".concat(L,"-slide-up")),trigger:C,overlay:function(){var t,n=e.overlay;return t="function"==typeof n?n():n,t=c.Children.only("string"==typeof t?c.createElement("span",null,t):t),c.createElement(M.J,{prefixCls:"".concat(x,"-menu"),expandIcon:c.createElement("span",{className:"".concat(x,"-menu-submenu-arrow")},c.createElement(d,{className:"".concat(x,"-menu-submenu-arrow-icon")})),mode:"vertical",selectable:!1,onClick:z,validator:function(e){e.mode}},t)},placement:function(){var t=e.placement;return t?t.includes("Center")?t.slice(0,t.indexOf("Center")):t:"rtl"===u?"bottomRight":"bottomLeft"}(),onVisibleChange:q}),k)};U.Button=K,U.defaultProps={mouseEnterDelay:.15,mouseLeaveDelay:.1};const z=U,H=U},3170:(e,t,n)=>{"use strict";n(1337),n(2648),n(1104)},8592:(e,t,n)=>{"use strict";n.d(t,{Z:()=>X});var r=n(7462),i=n(4942),a=n(1002),o=n(9439),s=n(3622),c=n(1413),l=n(7294),u=n(2287),f=n(7713),d=function(e,t){return l.createElement(f.Z,(0,c.Z)((0,c.Z)({},e),{},{ref:t,icon:u.Z}))};d.displayName="UpOutlined";const h=l.forwardRef(d);var p=n(6228),v=n.n(p),m=n(4925),g=n(1960),y=n.n(g),b=n(5105),w=n(8410),N=n(2550),x=n(5671),S=n(3144);function k(){return"function"==typeof BigInt}function C(e){var t=e.trim(),n=t.startsWith("-");n&&(t=t.slice(1)),(t=t.replace(/(\.\d*[^0])0*$/,"$1").replace(/\.0*$/,"").replace(/^0+/,"")).startsWith(".")&&(t="0".concat(t));var r=t||"0",i=r.split("."),a=i[0]||"0",o=i[1]||"0";"0"===a&&"0"===o&&(n=!1);var s=n?"-":"";return{negative:n,negativeStr:s,trimStr:r,integerStr:a,decimalStr:o,fullStr:"".concat(s).concat(r)}}function L(e){var t=String(e);return!Number.isNaN(Number(t))&&t.includes("e")}function A(e){var t=String(e);if(L(e)){var n=Number(t.slice(t.indexOf("e-")+2)),r=t.match(/\.(\d+)/);return(null==r?void 0:r[1])&&(n+=r[1].length),n}return t.includes(".")&&P(t)?t.length-t.indexOf(".")-1:0}function E(e){var t=String(e);if(L(e)){if(e>Number.MAX_SAFE_INTEGER)return String(k()?BigInt(e).toString():Number.MAX_SAFE_INTEGER);if(e<Number.MIN_SAFE_INTEGER)return String(k()?BigInt(e).toString():Number.MIN_SAFE_INTEGER);t=e.toFixed(A(t))}return C(t).fullStr}function P(e){return"number"==typeof e?!Number.isNaN(e):!!e&&(/^\s*-?\d+(\.\d+)?\s*$/.test(e)||/^\s*-?\d+\.\s*$/.test(e)||/^\s*-?\.\d+\s*$/.test(e))}function _(e){var t="number"==typeof e?E(e):C(e).fullStr;return t.includes(".")?C(t.replace(/(\d)\.(\d)/g,"$1$2.")).fullStr:e+"0"}var I=function(){function e(t){(0,x.Z)(this,e),this.origin="",this.number=void 0,this.empty=void 0,(t||0===t)&&String(t).trim()?(this.origin=String(t),this.number=Number(t)):this.empty=!0}return(0,S.Z)(e,[{key:"negate",value:function(){return new e(-this.toNumber())}},{key:"add",value:function(t){if(this.isInvalidate())return new e(t);var n=Number(t);if(Number.isNaN(n))return this;var r=this.number+n;if(r>Number.MAX_SAFE_INTEGER)return new e(Number.MAX_SAFE_INTEGER);if(r<Number.MIN_SAFE_INTEGER)return new e(Number.MIN_SAFE_INTEGER);var i=Math.max(A(this.number),A(n));return new e(r.toFixed(i))}},{key:"isEmpty",value:function(){return this.empty}},{key:"isNaN",value:function(){return Number.isNaN(this.number)}},{key:"isInvalidate",value:function(){return this.isEmpty()||this.isNaN()}},{key:"equals",value:function(e){return this.toNumber()===(null==e?void 0:e.toNumber())}},{key:"lessEquals",value:function(e){return this.add(e.negate().toString()).toNumber()<=0}},{key:"toNumber",value:function(){return this.number}},{key:"toString",value:function(){return!(arguments.length>0&&void 0!==arguments[0])||arguments[0]?this.isInvalidate()?"":E(this.number):this.origin}}]),e}(),O=function(){function e(t){if((0,x.Z)(this,e),this.origin="",this.negative=void 0,this.integer=void 0,this.decimal=void 0,this.decimalLen=void 0,this.empty=void 0,this.nan=void 0,(t||0===t)&&String(t).trim())if(this.origin=String(t),"-"!==t){var n=t;if(L(n)&&(n=Number(n)),P(n="string"==typeof n?n:E(n))){var r=C(n);this.negative=r.negative;var i=r.trimStr.split(".");this.integer=BigInt(i[0]);var a=i[1]||"0";this.decimal=BigInt(a),this.decimalLen=a.length}else this.nan=!0}else this.nan=!0;else this.empty=!0}return(0,S.Z)(e,[{key:"getMark",value:function(){return this.negative?"-":""}},{key:"getIntegerStr",value:function(){return this.integer.toString()}},{key:"getDecimalStr",value:function(){return this.decimal.toString().padStart(this.decimalLen,"0")}},{key:"alignDecimal",value:function(e){var t="".concat(this.getMark()).concat(this.getIntegerStr()).concat(this.getDecimalStr().padEnd(e,"0"));return BigInt(t)}},{key:"negate",value:function(){var t=new e(this.toString());return t.negative=!t.negative,t}},{key:"add",value:function(t){if(this.isInvalidate())return new e(t);var n=new e(t);if(n.isInvalidate())return this;var r=Math.max(this.getDecimalStr().length,n.getDecimalStr().length),i=C((this.alignDecimal(r)+n.alignDecimal(r)).toString()),a=i.negativeStr,o=i.trimStr,s="".concat(a).concat(o.padStart(r+1,"0"));return new e("".concat(s.slice(0,-r),".").concat(s.slice(-r)))}},{key:"isEmpty",value:function(){return this.empty}},{key:"isNaN",value:function(){return this.nan}},{key:"isInvalidate",value:function(){return this.isEmpty()||this.isNaN()}},{key:"equals",value:function(e){return this.toString()===(null==e?void 0:e.toString())}},{key:"lessEquals",value:function(e){return this.add(e.negate().toString()).toNumber()<=0}},{key:"toNumber",value:function(){return this.isNaN()?NaN:Number(this.toString())}},{key:"toString",value:function(){return!(arguments.length>0&&void 0!==arguments[0])||arguments[0]?this.isInvalidate()?"":C("".concat(this.getMark()).concat(this.getIntegerStr(),".").concat(this.getDecimalStr())).fullStr:this.origin}}]),e}();function M(e){return k()?new O(e):new I(e)}function D(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(""===e)return"";var i=C(e),a=i.negativeStr,o=i.integerStr,s=i.decimalStr,c="".concat(t).concat(s),l="".concat(a).concat(o);if(n>=0){var u=Number(s[n]);return u>=5&&!r?D(M(e).add("".concat(a,"0.").concat("0".repeat(n)).concat(10-u)).toString(),t,n,r):0===n?l:"".concat(l).concat(t).concat(s.padEnd(n,"0").slice(0,n))}return".0"===c?l:"".concat(l).concat(c)}var F=n(1131);function Z(e){var t=e.prefixCls,n=e.upNode,a=e.downNode,o=e.upDisabled,s=e.downDisabled,c=e.onStep,u=l.useRef(),f=l.useRef();f.current=c;var d=function(e,t){e.preventDefault(),f.current(t),u.current=setTimeout((function e(){f.current(t),u.current=setTimeout(e,200)}),600)},h=function(){clearTimeout(u.current)};if(l.useEffect((function(){return h}),[]),(0,F.Z)())return null;var p="".concat(t,"-handler"),v=y()(p,"".concat(p,"-up"),(0,i.Z)({},"".concat(p,"-up-disabled"),o)),m=y()(p,"".concat(p,"-down"),(0,i.Z)({},"".concat(p,"-down-disabled"),s)),g={unselectable:"on",role:"button",onMouseUp:h,onMouseLeave:h};return l.createElement("div",{className:"".concat(p,"-wrap")},l.createElement("span",(0,r.Z)({},g,{onMouseDown:function(e){d(e,!0)},"aria-label":"Increase Value","aria-disabled":o,className:v}),n||l.createElement("span",{unselectable:"on",className:"".concat(t,"-handler-up-inner")})),l.createElement("span",(0,r.Z)({},g,{onMouseDown:function(e){d(e,!1)},"aria-label":"Decrease Value","aria-disabled":s,className:m}),a||l.createElement("span",{unselectable:"on",className:"".concat(t,"-handler-down-inner")})))}var j=n(334);var R=n(5164);var T=["prefixCls","className","style","min","max","step","defaultValue","value","disabled","readOnly","upHandler","downHandler","keyboard","controls","stringMode","parser","formatter","precision","decimalSeparator","onChange","onInput","onPressEnter","onStep"],B=function(e,t){return e||t.isEmpty()?t.toString():t.toNumber()},q=function(e){var t=M(e);return t.isInvalidate()?null:t},K=l.forwardRef((function(e,t){var n,s=e.prefixCls,c=void 0===s?"rc-input-number":s,u=e.className,f=e.style,d=e.min,h=e.max,p=e.step,v=void 0===p?1:p,g=e.defaultValue,x=e.value,S=e.disabled,k=e.readOnly,C=e.upHandler,L=e.downHandler,I=e.keyboard,O=e.controls,F=void 0===O||O,K=e.stringMode,U=e.parser,z=e.formatter,H=e.precision,V=e.decimalSeparator,W=e.onChange,Y=e.onInput,G=e.onPressEnter,$=e.onStep,X=(0,m.Z)(e,T),J="".concat(c,"-input"),Q=l.useRef(null),ee=l.useState(!1),te=(0,o.Z)(ee,2),ne=te[0],re=te[1],ie=l.useRef(!1),ae=l.useRef(!1),oe=l.useRef(!1),se=l.useState((function(){return M(null!=x?x:g)})),ce=(0,o.Z)(se,2),le=ce[0],ue=ce[1];var fe=l.useCallback((function(e,t){if(!t)return H>=0?H:Math.max(A(e),A(v))}),[H,v]),de=l.useCallback((function(e){var t=String(e);if(U)return U(t);var n=t;return V&&(n=n.replace(V,".")),n.replace(/[^\w.-]+/g,"")}),[U,V]),he=l.useRef(""),pe=l.useCallback((function(e,t){if(z)return z(e,{userTyping:t,input:String(he.current)});var n="number"==typeof e?E(e):e;if(!t){var r=fe(n,t);if(P(n)&&(V||r>=0))n=D(n,V||".",r)}return n}),[z,fe,V]),ve=l.useState((function(){var e=null!=g?g:x;return le.isInvalidate()&&["string","number"].includes((0,a.Z)(e))?Number.isNaN(e)?"":e:pe(le.toString(),!1)})),me=(0,o.Z)(ve,2),ge=me[0],ye=me[1];function be(e,t){ye(pe(e.isInvalidate()?e.toString(!1):e.toString(!t),t))}he.current=ge;var we,Ne,xe,Se,ke,Ce=l.useMemo((function(){return q(h)}),[h,H]),Le=l.useMemo((function(){return q(d)}),[d,H]),Ae=l.useMemo((function(){return!(!Ce||!le||le.isInvalidate())&&Ce.lessEquals(le)}),[Ce,le]),Ee=l.useMemo((function(){return!(!Le||!le||le.isInvalidate())&&le.lessEquals(Le)}),[Le,le]),Pe=(we=Q.current,Ne=ne,xe=(0,l.useRef)(null),[function(){try{var e=we.selectionStart,t=we.selectionEnd,n=we.value,r=n.substring(0,e),i=n.substring(t);xe.current={start:e,end:t,value:n,beforeTxt:r,afterTxt:i}}catch(e){}},function(){if(we&&xe.current&&Ne)try{var e=we.value,t=xe.current,n=t.beforeTxt,r=t.afterTxt,i=t.start,a=e.length;if(e.endsWith(r))a=e.length-xe.current.afterTxt.length;else if(e.startsWith(n))a=n.length;else{var o=n[i-1],s=e.indexOf(o,i-1);-1!==s&&(a=s+1)}we.setSelectionRange(a,a)}catch(e){(0,j.ZP)(!1,"Something warning of cursor restore. Please fire issue about this: ".concat(e.message))}}]),_e=(0,o.Z)(Pe,2),Ie=_e[0],Oe=_e[1],Me=function(e){return Ce&&!e.lessEquals(Ce)?Ce:Le&&!Le.lessEquals(e)?Le:null},De=function(e){return!Me(e)},Fe=function(e,t){var n,r=e,i=De(r)||r.isEmpty();if(r.isEmpty()||t||(r=Me(r)||r,i=!0),!k&&!S&&i){var a=r.toString(),o=fe(a,t);return o>=0&&(r=M(D(a,".",o)),De(r)||(r=M(D(a,".",o,!0)))),r.equals(le)||(n=r,void 0===x&&ue(n),null==W||W(r.isEmpty()?null:B(K,r)),void 0===x&&be(r,t)),r}return le},Ze=(Se=(0,l.useRef)(0),ke=function(){R.Z.cancel(Se.current)},(0,l.useEffect)((function(){return ke}),[]),function(e){ke(),Se.current=(0,R.Z)((function(){e()}))}),je=function e(t){if(Ie(),ye(t),!ae.current){var n=M(de(t));n.isNaN()||Fe(n,!0)}null==Y||Y(t),Ze((function(){var n=t;U||(n=t.replace(/。/g,".")),n!==t&&e(n)}))},Re=function(e){var t;if(!(e&&Ae||!e&&Ee)){ie.current=!1;var n=M(oe.current?_(v):v);e||(n=n.negate());var r=(le||M(0)).add(n.toString()),i=Fe(r,!1);null==$||$(B(K,i),{offset:oe.current?_(v):v,type:e?"up":"down"}),null===(t=Q.current)||void 0===t||t.focus()}},Te=function(e){var t=M(de(ge)),n=t;n=t.isNaN()?le:Fe(t,e),void 0!==x?be(le,!1):n.isNaN()||be(n,!1)};return(0,w.o)((function(){le.isInvalidate()||be(le,!1)}),[H]),(0,w.o)((function(){var e=M(x);ue(e);var t=M(de(ge));e.equals(t)&&ie.current&&!z||be(e,ie.current)}),[x]),(0,w.o)((function(){z&&Oe()}),[ge]),l.createElement("div",{className:y()(c,u,(n={},(0,i.Z)(n,"".concat(c,"-focused"),ne),(0,i.Z)(n,"".concat(c,"-disabled"),S),(0,i.Z)(n,"".concat(c,"-readonly"),k),(0,i.Z)(n,"".concat(c,"-not-a-number"),le.isNaN()),(0,i.Z)(n,"".concat(c,"-out-of-range"),!le.isInvalidate()&&!De(le)),n)),style:f,onFocus:function(){re(!0)},onBlur:function(){Te(!1),re(!1),ie.current=!1},onKeyDown:function(e){var t=e.which,n=e.shiftKey;ie.current=!0,oe.current=!!n,t===b.Z.ENTER&&(ae.current||(ie.current=!1),Te(!1),null==G||G(e)),!1!==I&&!ae.current&&[b.Z.UP,b.Z.DOWN].includes(t)&&(Re(b.Z.UP===t),e.preventDefault())},onKeyUp:function(){ie.current=!1,oe.current=!1},onCompositionStart:function(){ae.current=!0},onCompositionEnd:function(){ae.current=!1,je(Q.current.value)},onBeforeInput:function(){ie.current=!0}},F&&l.createElement(Z,{prefixCls:c,upNode:C,downNode:L,upDisabled:Ae,downDisabled:Ee,onStep:Re}),l.createElement("div",{className:"".concat(J,"-wrap")},l.createElement("input",(0,r.Z)({autoComplete:"off",role:"spinbutton","aria-valuemin":d,"aria-valuemax":h,"aria-valuenow":le.isInvalidate()?null:le.toString(),step:v},X,{ref:(0,N.sQ)(Q,t),className:J,value:ge,onChange:function(e){je(e.target.value)},disabled:S,readOnly:k}))))}));K.displayName="InputNumber";const U=K;var z=n(3124),H=n(8866),V=n(7647),W=n(5223),Y=n(6159),G=n(9708),$=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n};const X=l.forwardRef((function(e,t){var n,c=l.useContext(z.E_),u=c.getPrefixCls,f=c.direction,d=l.useContext(V.Z),p=l.useState(!1),m=(0,o.Z)(p,2),g=m[0],y=m[1],b=l.useRef(null);l.useImperativeHandle(t,(function(){return b.current}));var w=e.className,N=e.size,x=e.disabled,S=e.prefixCls,k=e.addonBefore,C=e.addonAfter,L=e.prefix,A=e.bordered,E=void 0===A||A,P=e.readOnly,_=e.status,I=e.controls,O=$(e,["className","size","disabled","prefixCls","addonBefore","addonAfter","prefix","bordered","readOnly","status","controls"]),M=u("input-number",S),D=l.createElement(h,{className:"".concat(M,"-handler-up-inner")}),F=l.createElement(s.Z,{className:"".concat(M,"-handler-down-inner")}),Z="boolean"==typeof I?I:void 0;"object"===(0,a.Z)(I)&&(D=void 0===I.upIcon?D:l.createElement("span",{className:"".concat(M,"-handler-up-inner")},I.upIcon),F=void 0===I.downIcon?F:l.createElement("span",{className:"".concat(M,"-handler-down-inner")},I.downIcon));var j=(0,l.useContext)(W.aM),R=j.hasFeedback,T=j.status,B=j.isFormItemInput,q=j.feedbackIcon,K=(0,G.F)(T,_),X=N||d,J=l.useContext(H.Z),Q=x||J,ee=v()((n={},(0,i.Z)(n,"".concat(M,"-lg"),"large"===X),(0,i.Z)(n,"".concat(M,"-sm"),"small"===X),(0,i.Z)(n,"".concat(M,"-rtl"),"rtl"===f),(0,i.Z)(n,"".concat(M,"-borderless"),!E),(0,i.Z)(n,"".concat(M,"-in-form-item"),B),n),(0,G.Z)(M,K),w),te=l.createElement(U,(0,r.Z)({ref:b,disabled:Q,className:ee,upHandler:D,downHandler:F,prefixCls:M,readOnly:P,controls:Z},O));if(null!=L||R){var ne,re=v()("".concat(M,"-affix-wrapper"),(0,G.Z)("".concat(M,"-affix-wrapper"),K,R),(ne={},(0,i.Z)(ne,"".concat(M,"-affix-wrapper-focused"),g),(0,i.Z)(ne,"".concat(M,"-affix-wrapper-disabled"),e.disabled),(0,i.Z)(ne,"".concat(M,"-affix-wrapper-sm"),"small"===d),(0,i.Z)(ne,"".concat(M,"-affix-wrapper-lg"),"large"===d),(0,i.Z)(ne,"".concat(M,"-affix-wrapper-rtl"),"rtl"===f),(0,i.Z)(ne,"".concat(M,"-affix-wrapper-readonly"),P),(0,i.Z)(ne,"".concat(M,"-affix-wrapper-borderless"),!E),(0,i.Z)(ne,"".concat(w),!(k||C)&&w),ne));te=l.createElement("div",{className:re,style:e.style,onMouseUp:function(){return b.current.focus()}},L&&l.createElement("span",{className:"".concat(M,"-prefix")},L),(0,Y.Tm)(te,{style:null,value:e.value,onFocus:function(t){var n;y(!0),null===(n=e.onFocus)||void 0===n||n.call(e,t)},onBlur:function(t){var n;y(!1),null===(n=e.onBlur)||void 0===n||n.call(e,t)}}),R&&l.createElement("span",{className:"".concat(M,"-suffix")},q))}if(null!=k||null!=C){var ie,ae="".concat(M,"-group"),oe="".concat(ae,"-addon"),se=k?l.createElement("div",{className:oe},k):null,ce=C?l.createElement("div",{className:oe},C):null,le=v()("".concat(M,"-wrapper"),ae,(0,i.Z)({},"".concat(ae,"-rtl"),"rtl"===f)),ue=v()("".concat(M,"-group-wrapper"),(ie={},(0,i.Z)(ie,"".concat(M,"-group-wrapper-sm"),"small"===d),(0,i.Z)(ie,"".concat(M,"-group-wrapper-lg"),"large"===d),(0,i.Z)(ie,"".concat(M,"-group-wrapper-rtl"),"rtl"===f),ie),(0,G.Z)("".concat(M,"-group-wrapper"),K,R),w);te=l.createElement("div",{className:ue,style:e.style},l.createElement("div",{className:le},se&&l.createElement(W.Ux,{status:!0,override:!0},se),(0,Y.Tm)(te,{style:null,disabled:Q}),ce&&l.createElement(W.Ux,{status:!0,override:!0},ce)))}return te}))},1819:(e,t,n)=>{"use strict";n(1337)},6529:(e,t,n)=>{"use strict";n.d(t,{J:()=>s,Z:()=>c});var r=n(7462),i=n(7294),a=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},o=i.createContext(null),s=function(e){var t=e.children,n=a(e,["children"]),s=i.useContext(o),c=i.useMemo((function(){return(0,r.Z)((0,r.Z)({},s),n)}),[s,n.prefixCls,n.mode,n.selectable]);return i.createElement(o.Provider,{value:c},t)};const c=o},8993:(e,t,n)=>{"use strict";n.d(t,{Z:()=>gt});var r=n(5671),i=n(3144),a=n(9340),o=n(8557),s=n(7462),c=n(5452),l=n(6228),u=n.n(l),f=n(4942),d=n(1413),h=n(3433),p=n(9439),v=n(4925),m=n(7294),g=n(1740),y=n.n(g),b=n(6774),w=n.n(b),N=n(1770),x=n(334),S=n(6278),k=n(5105),C=n(8423),L=n(6982),A=["children","locked"],E=m.createContext(null);function P(e){var t=e.children,n=e.locked,r=(0,v.Z)(e,A),i=m.useContext(E),a=(0,L.Z)((function(){return e=i,t=r,n=(0,d.Z)({},e),Object.keys(t).forEach((function(e){var r=t[e];void 0!==r&&(n[e]=r)})),n;var e,t,n}),[i,r],(function(e,t){return!(n||e[0]===t[0]&&w()(e[1],t[1]))}));return m.createElement(E.Provider,{value:a},t)}function _(e,t,n,r){var i=m.useContext(E),a=i.activeKey,o=i.onActive,s=i.onInactive,c={active:a===e};return t||(c.onMouseEnter=function(t){null==n||n({key:e,domEvent:t}),o(e)},c.onMouseLeave=function(t){null==r||r({key:e,domEvent:t}),s(e)}),c}var I=["item"];function O(e){var t=e.item,n=(0,v.Z)(e,I);return Object.defineProperty(n,"item",{get:function(){return(0,x.ZP)(!1,"`info.item` is deprecated since we will move to function component that not provides React Node instance in future."),t}}),n}function M(e){var t=e.icon,n=e.props,r=e.children;return("function"==typeof t?m.createElement(t,(0,d.Z)({},n)):t)||r||null}function D(e){var t=m.useContext(E),n=t.mode,r=t.rtl,i=t.inlineIndent;if("inline"!==n)return null;return r?{paddingRight:e*i}:{paddingLeft:e*i}}var F=[],Z=m.createContext(null);function j(){return m.useContext(Z)}var R=m.createContext(F);function T(e){var t=m.useContext(R);return m.useMemo((function(){return void 0!==e?[].concat((0,h.Z)(t),[e]):t}),[t,e])}var B=m.createContext(null),q=m.createContext(null);function K(e,t){return void 0===e?null:"".concat(e,"-").concat(t)}function U(e){return K(m.useContext(q),e)}const z=m.createContext({});var H=["title","attribute","elementRef"],V=["style","className","eventKey","warnKey","disabled","itemIcon","children","role","onMouseEnter","onMouseLeave","onClick","onKeyDown","onFocus"],W=["active"],Y=function(e){(0,a.Z)(n,e);var t=(0,o.Z)(n);function n(){return(0,r.Z)(this,n),t.apply(this,arguments)}return(0,i.Z)(n,[{key:"render",value:function(){var e=this.props,t=e.title,n=e.attribute,r=e.elementRef,i=(0,v.Z)(e,H),a=(0,C.Z)(i,["eventKey"]);return(0,x.ZP)(!n,"`attribute` of Menu.Item is deprecated. Please pass attribute directly."),m.createElement(S.Z.Item,(0,s.Z)({},n,{title:"string"==typeof t?t:void 0},a,{ref:r}))}}]),n}(m.Component),G=function(e){var t,n=e.style,r=e.className,i=e.eventKey,a=(e.warnKey,e.disabled),o=e.itemIcon,c=e.children,l=e.role,u=e.onMouseEnter,p=e.onMouseLeave,g=e.onClick,b=e.onKeyDown,w=e.onFocus,N=(0,v.Z)(e,V),x=U(i),S=m.useContext(E),C=S.prefixCls,L=S.onItemClick,A=S.disabled,P=S.overflowDisabled,I=S.itemIcon,F=S.selectedKeys,Z=S.onActive,j=m.useContext(z)._internalRenderMenuItem,R="".concat(C,"-item"),B=m.useRef(),q=m.useRef(),K=A||a,H=T(i);var G=function(e){return{key:i,keyPath:(0,h.Z)(H).reverse(),item:B.current,domEvent:e}},$=o||I,X=_(i,K,u,p),J=X.active,Q=(0,v.Z)(X,W),ee=F.includes(i),te=D(H.length),ne={};"option"===e.role&&(ne["aria-selected"]=ee);var re=m.createElement(Y,(0,s.Z)({ref:B,elementRef:q,role:null===l?"none":l||"menuitem",tabIndex:a?null:-1,"data-menu-id":P&&x?null:x},N,Q,ne,{component:"li","aria-disabled":a,style:(0,d.Z)((0,d.Z)({},te),n),className:y()(R,(t={},(0,f.Z)(t,"".concat(R,"-active"),J),(0,f.Z)(t,"".concat(R,"-selected"),ee),(0,f.Z)(t,"".concat(R,"-disabled"),K),t),r),onClick:function(e){if(!K){var t=G(e);null==g||g(O(t)),L(t)}},onKeyDown:function(e){if(null==b||b(e),e.which===k.Z.ENTER){var t=G(e);null==g||g(O(t)),L(t)}},onFocus:function(e){Z(i),null==w||w(e)}}),c,m.createElement(M,{props:(0,d.Z)((0,d.Z)({},e),{},{isSelected:ee}),icon:$}));return j&&(re=j(re,e,{selected:ee})),re};const $=function(e){var t=e.eventKey,n=j(),r=T(t);return m.useEffect((function(){if(n)return n.registerPath(t,r),function(){n.unregisterPath(t,r)}}),[r]),n?null:m.createElement(G,e)};var X=n(1002),J=n(344),Q=["label","children","key","type"];function ee(e,t){return(0,J.Z)(e).map((function(e,n){if(m.isValidElement(e)){var r,i,a=e.key,o=null!==(r=null===(i=e.props)||void 0===i?void 0:i.eventKey)&&void 0!==r?r:a;null==o&&(o="tmp_key-".concat([].concat((0,h.Z)(t),[n]).join("-")));var s={key:o,eventKey:o};return m.cloneElement(e,s)}return e}))}function te(e){return(e||[]).map((function(e,t){if(e&&"object"===(0,X.Z)(e)){var n=e.label,r=e.children,i=e.key,a=e.type,o=(0,v.Z)(e,Q),c=null!=i?i:"tmp-".concat(t);return r||"group"===a?"group"===a?m.createElement(We,(0,s.Z)({key:c},o,{title:n}),te(r)):m.createElement(Ne,(0,s.Z)({key:c},o,{title:n}),te(r)):"divider"===a?m.createElement(Ye,(0,s.Z)({key:c},o)):m.createElement($,(0,s.Z)({key:c},o),n)}return null})).filter((function(e){return e}))}function ne(e,t,n){var r=e;return t&&(r=te(t)),ee(r,n)}function re(e){var t=m.useRef(e);t.current=e;var n=m.useCallback((function(){for(var e,n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return null===(e=t.current)||void 0===e?void 0:e.call.apply(e,[t].concat(r))}),[]);return e?n:void 0}var ie=["className","children"],ae=function(e,t){var n=e.className,r=e.children,i=(0,v.Z)(e,ie),a=m.useContext(E),o=a.prefixCls,c=a.mode,l=a.rtl;return m.createElement("ul",(0,s.Z)({className:y()(o,l&&"".concat(o,"-rtl"),"".concat(o,"-sub"),"".concat(o,"-").concat("inline"===c?"inline":"vertical"),n)},i,{"data-menu-list":!0,ref:t}),r)},oe=m.forwardRef(ae);oe.displayName="SubMenuList";const se=oe;var ce=n(45),le=n(5164),ue={adjustX:1,adjustY:1},fe={topLeft:{points:["bl","tl"],overflow:ue,offset:[0,-7]},bottomLeft:{points:["tl","bl"],overflow:ue,offset:[0,7]},leftTop:{points:["tr","tl"],overflow:ue,offset:[-4,0]},rightTop:{points:["tl","tr"],overflow:ue,offset:[4,0]}},de={topLeft:{points:["bl","tl"],overflow:ue,offset:[0,-7]},bottomLeft:{points:["tl","bl"],overflow:ue,offset:[0,7]},rightTop:{points:["tr","tl"],overflow:ue,offset:[-4,0]},leftTop:{points:["tl","tr"],overflow:ue,offset:[4,0]}};function he(e,t,n){return t||(n?n[e]||n.other:void 0)}var pe={horizontal:"bottomLeft",vertical:"rightTop","vertical-left":"rightTop","vertical-right":"leftTop"};function ve(e){var t=e.prefixCls,n=e.visible,r=e.children,i=e.popup,a=e.popupClassName,o=e.popupOffset,s=e.disabled,c=e.mode,l=e.onVisibleChange,u=m.useContext(E),h=u.getPopupContainer,v=u.rtl,g=u.subMenuOpenDelay,b=u.subMenuCloseDelay,w=u.builtinPlacements,N=u.triggerSubMenuAction,x=u.forceSubMenuRender,S=u.rootClassName,k=u.motion,C=u.defaultMotions,L=m.useState(!1),A=(0,p.Z)(L,2),P=A[0],_=A[1],I=v?(0,d.Z)((0,d.Z)({},de),w):(0,d.Z)((0,d.Z)({},fe),w),O=pe[c],M=he(c,k,C),D=(0,d.Z)((0,d.Z)({},M),{},{leavedClassName:"".concat(t,"-hidden"),removeOnLeave:!1,motionAppear:!0}),F=m.useRef();return m.useEffect((function(){return F.current=(0,le.Z)((function(){_(n)})),function(){le.Z.cancel(F.current)}}),[n]),m.createElement(ce.Z,{prefixCls:t,popupClassName:y()("".concat(t,"-popup"),(0,f.Z)({},"".concat(t,"-rtl"),v),a,S),stretch:"horizontal"===c?"minWidth":null,getPopupContainer:h,builtinPlacements:I,popupPlacement:O,popupVisible:P,popup:i,popupAlign:o&&{offset:o},action:s?[]:[N],mouseEnterDelay:g,mouseLeaveDelay:b,onPopupVisibleChange:l,forceRender:x,popupMotion:D},r)}var me=n(3587);function ge(e){var t=e.id,n=e.open,r=e.keyPath,i=e.children,a="inline",o=m.useContext(E),c=o.prefixCls,l=o.forceSubMenuRender,u=o.motion,f=o.defaultMotions,h=o.mode,v=m.useRef(!1);v.current=h===a;var g=m.useState(!v.current),y=(0,p.Z)(g,2),b=y[0],w=y[1],N=!!v.current&&n;m.useEffect((function(){v.current&&w(!1)}),[h]);var x=(0,d.Z)({},he(a,u,f));r.length>1&&(x.motionAppear=!1);var S=x.onVisibleChanged;return x.onVisibleChanged=function(e){return v.current||e||w(!0),null==S?void 0:S(e)},b?null:m.createElement(P,{mode:a,locked:!v.current},m.createElement(me.ZP,(0,s.Z)({visible:N},x,{forceRender:l,removeOnLeave:!1,leavedClassName:"".concat(c,"-hidden")}),(function(e){var n=e.className,r=e.style;return m.createElement(se,{id:t,className:n,style:r},i)})))}var ye=["style","className","title","eventKey","warnKey","disabled","internalPopupClose","children","itemIcon","expandIcon","popupClassName","popupOffset","onClick","onMouseEnter","onMouseLeave","onTitleClick","onTitleMouseEnter","onTitleMouseLeave"],be=["active"],we=function(e){var t,n=e.style,r=e.className,i=e.title,a=e.eventKey,o=(e.warnKey,e.disabled),c=e.internalPopupClose,l=e.children,u=e.itemIcon,h=e.expandIcon,g=e.popupClassName,b=e.popupOffset,w=e.onClick,N=e.onMouseEnter,x=e.onMouseLeave,k=e.onTitleClick,C=e.onTitleMouseEnter,L=e.onTitleMouseLeave,A=(0,v.Z)(e,ye),I=U(a),F=m.useContext(E),Z=F.prefixCls,j=F.mode,R=F.openKeys,q=F.disabled,K=F.overflowDisabled,H=F.activeKey,V=F.selectedKeys,W=F.itemIcon,Y=F.expandIcon,G=F.onItemClick,$=F.onOpenChange,X=F.onActive,J=m.useContext(z)._internalRenderSubMenuItem,Q=m.useContext(B).isSubPathKey,ee=T(),te="".concat(Z,"-submenu"),ne=q||o,ie=m.useRef(),ae=m.useRef();var oe=u||W,ce=h||Y,le=R.includes(a),ue=!K&&le,fe=Q(V,a),de=_(a,ne,C,L),he=de.active,pe=(0,v.Z)(de,be),me=m.useState(!1),we=(0,p.Z)(me,2),Ne=we[0],xe=we[1],Se=function(e){ne||xe(e)},ke=m.useMemo((function(){return he||"inline"!==j&&(Ne||Q([H],a))}),[j,he,H,Ne,a,Q]),Ce=D(ee.length),Le=re((function(e){null==w||w(O(e)),G(e)})),Ae=I&&"".concat(I,"-popup"),Ee=m.createElement("div",(0,s.Z)({role:"menuitem",style:Ce,className:"".concat(te,"-title"),tabIndex:ne?null:-1,ref:ie,title:"string"==typeof i?i:null,"data-menu-id":K&&I?null:I,"aria-expanded":ue,"aria-haspopup":!0,"aria-controls":Ae,"aria-disabled":ne,onClick:function(e){ne||(null==k||k({key:a,domEvent:e}),"inline"===j&&$(a,!le))},onFocus:function(){X(a)}},pe),i,m.createElement(M,{icon:"horizontal"!==j?ce:null,props:(0,d.Z)((0,d.Z)({},e),{},{isOpen:ue,isSubMenu:!0})},m.createElement("i",{className:"".concat(te,"-arrow")}))),Pe=m.useRef(j);if("inline"!==j&&(Pe.current=ee.length>1?"vertical":j),!K){var _e=Pe.current;Ee=m.createElement(ve,{mode:_e,prefixCls:te,visible:!c&&ue&&"inline"!==j,popupClassName:g,popupOffset:b,popup:m.createElement(P,{mode:"horizontal"===_e?"vertical":_e},m.createElement(se,{id:Ae,ref:ae},l)),disabled:ne,onVisibleChange:function(e){"inline"!==j&&$(a,e)}},Ee)}var Ie=m.createElement(S.Z.Item,(0,s.Z)({role:"none"},A,{component:"li",style:n,className:y()(te,"".concat(te,"-").concat(j),r,(t={},(0,f.Z)(t,"".concat(te,"-open"),ue),(0,f.Z)(t,"".concat(te,"-active"),ke),(0,f.Z)(t,"".concat(te,"-selected"),fe),(0,f.Z)(t,"".concat(te,"-disabled"),ne),t)),onMouseEnter:function(e){Se(!0),null==N||N({key:a,domEvent:e})},onMouseLeave:function(e){Se(!1),null==x||x({key:a,domEvent:e})}}),Ee,!K&&m.createElement(ge,{id:Ae,open:ue,keyPath:ee},l));return J&&(Ie=J(Ie,e,{selected:fe,active:ke,open:ue,disabled:ne})),m.createElement(P,{onItemClick:Le,mode:"horizontal"===j?"vertical":j,itemIcon:oe,expandIcon:ce},Ie)};function Ne(e){var t,n=e.eventKey,r=e.children,i=T(n),a=ee(r,i),o=j();return m.useEffect((function(){if(o)return o.registerPath(n,i),function(){o.unregisterPath(n,i)}}),[i]),t=o?a:m.createElement(we,e,a),m.createElement(R.Provider,{value:i},t)}var xe=n(8603),Se=k.Z.LEFT,ke=k.Z.RIGHT,Ce=k.Z.UP,Le=k.Z.DOWN,Ae=k.Z.ENTER,Ee=k.Z.ESC,Pe=k.Z.HOME,_e=k.Z.END,Ie=[Ce,Le,Se,ke];function Oe(e,t){return(0,xe.tS)(e,!0).filter((function(e){return t.has(e)}))}function Me(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(!e)return null;var i=Oe(e,t),a=i.length,o=i.findIndex((function(e){return n===e}));return r<0?-1===o?o=a-1:o-=1:r>0&&(o+=1),i[o=(o+a)%a]}function De(e,t,n,r,i,a,o,s,c,l){var u=m.useRef(),d=m.useRef();d.current=t;var h=function(){le.Z.cancel(u.current)};return m.useEffect((function(){return function(){h()}}),[]),function(p){var v=p.which;if([].concat(Ie,[Ae,Ee,Pe,_e]).includes(v)){var m,g,y,b=function(){return m=new Set,g=new Map,y=new Map,a().forEach((function(e){var t=document.querySelector("[data-menu-id='".concat(K(r,e),"']"));t&&(m.add(t),y.set(t,e),g.set(e,t))})),m};b();var w=function(e,t){for(var n=e||document.activeElement;n;){if(t.has(n))return n;n=n.parentElement}return null}(g.get(t),m),N=y.get(w),x=function(e,t,n,r){var i,a,o,s,c="prev",l="next",u="children",d="parent";if("inline"===e&&r===Ae)return{inlineTrigger:!0};var h=(i={},(0,f.Z)(i,Ce,c),(0,f.Z)(i,Le,l),i),p=(a={},(0,f.Z)(a,Se,n?l:c),(0,f.Z)(a,ke,n?c:l),(0,f.Z)(a,Le,u),(0,f.Z)(a,Ae,u),a),v=(o={},(0,f.Z)(o,Ce,c),(0,f.Z)(o,Le,l),(0,f.Z)(o,Ae,u),(0,f.Z)(o,Ee,d),(0,f.Z)(o,Se,n?u:d),(0,f.Z)(o,ke,n?d:u),o);switch(null===(s={inline:h,horizontal:p,vertical:v,inlineSub:h,horizontalSub:v,verticalSub:v}["".concat(e).concat(t?"":"Sub")])||void 0===s?void 0:s[r]){case c:return{offset:-1,sibling:!0};case l:return{offset:1,sibling:!0};case d:return{offset:-1,sibling:!1};case u:return{offset:1,sibling:!1};default:return null}}(e,1===o(N,!0).length,n,v);if(!x&&v!==Pe&&v!==_e)return;(Ie.includes(v)||[Pe,_e].includes(v))&&p.preventDefault();var S=function(e){if(e){var t=e,n=e.querySelector("a");(null==n?void 0:n.getAttribute("href"))&&(t=n);var r=y.get(e);s(r),h(),u.current=(0,le.Z)((function(){d.current===r&&t.focus()}))}};if([Pe,_e].includes(v)||x.sibling||!w){var k,C,L=Oe(k=w&&"inline"!==e?function(e){for(var t=e;t;){if(t.getAttribute("data-menu-list"))return t;t=t.parentElement}return null}(w):i.current,m);C=v===Pe?L[0]:v===_e?L[L.length-1]:Me(k,m,w,x.offset),S(C)}else if(x.inlineTrigger)c(N);else if(x.offset>0)c(N,!0),h(),u.current=(0,le.Z)((function(){b();var e=w.getAttribute("aria-controls"),t=Me(document.getElementById(e),m);S(t)}),5);else if(x.offset<0){var A=o(N,!0),E=A[A.length-2],P=g.get(E);c(E,!1),S(P)}}null==l||l(p)}}var Fe=Math.random().toFixed(5).toString().slice(2),Ze=0;var je="__RC_UTIL_PATH_SPLIT__",Re=function(e){return e.join(je)},Te="rc-menu-more";function Be(){var e=m.useState({}),t=(0,p.Z)(e,2)[1],n=(0,m.useRef)(new Map),r=(0,m.useRef)(new Map),i=m.useState([]),a=(0,p.Z)(i,2),o=a[0],s=a[1],c=(0,m.useRef)(0),l=(0,m.useRef)(!1),u=(0,m.useCallback)((function(e,i){var a=Re(i);r.current.set(a,e),n.current.set(e,a),c.current+=1;var o,s=c.current;o=function(){s===c.current&&(l.current||t({}))},Promise.resolve().then(o)}),[]),f=(0,m.useCallback)((function(e,t){var i=Re(t);r.current.delete(i),n.current.delete(e)}),[]),d=(0,m.useCallback)((function(e){s(e)}),[]),v=(0,m.useCallback)((function(e,t){var r=n.current.get(e)||"",i=r.split(je);return t&&o.includes(i[0])&&i.unshift(Te),i}),[o]),g=(0,m.useCallback)((function(e,t){return e.some((function(e){return v(e,!0).includes(t)}))}),[v]),y=(0,m.useCallback)((function(e){var t="".concat(n.current.get(e)).concat(je),i=new Set;return(0,h.Z)(r.current.keys()).forEach((function(e){e.startsWith(t)&&i.add(r.current.get(e))})),i}),[]);return m.useEffect((function(){return function(){l.current=!0}}),[]),{registerPath:u,unregisterPath:f,refreshOverflowKeys:d,isSubPathKey:g,getKeyPath:v,getKeys:function(){var e=(0,h.Z)(n.current.keys());return o.length&&e.push(Te),e},getSubPathKeys:y}}var qe=["prefixCls","rootClassName","style","className","tabIndex","items","children","direction","id","mode","inlineCollapsed","disabled","disabledOverflow","subMenuOpenDelay","subMenuCloseDelay","forceSubMenuRender","defaultOpenKeys","openKeys","activeKey","defaultActiveFirst","selectable","multiple","defaultSelectedKeys","selectedKeys","onSelect","onDeselect","inlineIndent","motion","defaultMotions","triggerSubMenuAction","builtinPlacements","itemIcon","expandIcon","overflowedIndicator","overflowedIndicatorPopupClassName","getPopupContainer","onClick","onOpenChange","onKeyDown","openAnimation","openTransitionName","_internalRenderMenuItem","_internalRenderSubMenuItem"],Ke=[],Ue=m.forwardRef((function(e,t){var n,r,i=e.prefixCls,a=void 0===i?"rc-menu":i,o=e.rootClassName,c=e.style,l=e.className,u=e.tabIndex,g=void 0===u?0:u,b=e.items,x=e.children,k=e.direction,C=e.id,L=e.mode,A=void 0===L?"vertical":L,E=e.inlineCollapsed,_=e.disabled,I=e.disabledOverflow,M=e.subMenuOpenDelay,D=void 0===M?.1:M,F=e.subMenuCloseDelay,j=void 0===F?.1:F,R=e.forceSubMenuRender,T=e.defaultOpenKeys,U=e.openKeys,H=e.activeKey,V=e.defaultActiveFirst,W=e.selectable,Y=void 0===W||W,G=e.multiple,X=void 0!==G&&G,J=e.defaultSelectedKeys,Q=e.selectedKeys,ee=e.onSelect,te=e.onDeselect,ie=e.inlineIndent,ae=void 0===ie?24:ie,oe=e.motion,se=e.defaultMotions,ce=e.triggerSubMenuAction,le=void 0===ce?"hover":ce,ue=e.builtinPlacements,fe=e.itemIcon,de=e.expandIcon,he=e.overflowedIndicator,pe=void 0===he?"...":he,ve=e.overflowedIndicatorPopupClassName,me=e.getPopupContainer,ge=e.onClick,ye=e.onOpenChange,be=e.onKeyDown,we=(e.openAnimation,e.openTransitionName,e._internalRenderMenuItem),xe=e._internalRenderSubMenuItem,Se=(0,v.Z)(e,qe),ke=m.useMemo((function(){return ne(x,b,Ke)}),[x,b]),Ce=m.useState(!1),Le=(0,p.Z)(Ce,2),Ae=Le[0],Ee=Le[1],Pe=m.useRef(),_e=function(e){var t=(0,N.Z)(e,{value:e}),n=(0,p.Z)(t,2),r=n[0],i=n[1];return m.useEffect((function(){Ze+=1;var e="".concat(Fe,"-").concat(Ze);i("rc-menu-uuid-".concat(e))}),[]),r}(C),Ie="rtl"===k;var Oe=m.useMemo((function(){return"inline"!==A&&"vertical"!==A||!E?[A,!1]:["vertical",E]}),[A,E]),Me=(0,p.Z)(Oe,2),je=Me[0],Re=Me[1],Ue=m.useState(0),ze=(0,p.Z)(Ue,2),He=ze[0],Ve=ze[1],We=He>=ke.length-1||"horizontal"!==je||I,Ye=(0,N.Z)(T,{value:U,postState:function(e){return e||Ke}}),Ge=(0,p.Z)(Ye,2),$e=Ge[0],Xe=Ge[1],Je=function(e){Xe(e),null==ye||ye(e)},Qe=m.useState($e),et=(0,p.Z)(Qe,2),tt=et[0],nt=et[1],rt="inline"===je,it=m.useRef(!1);m.useEffect((function(){rt&&nt($e)}),[$e]),m.useEffect((function(){it.current&&(rt?Xe(tt):Je(Ke))}),[rt]),m.useEffect((function(){return it.current=!0,function(){it.current=!1}}),[]);var at=Be(),ot=at.registerPath,st=at.unregisterPath,ct=at.refreshOverflowKeys,lt=at.isSubPathKey,ut=at.getKeyPath,ft=at.getKeys,dt=at.getSubPathKeys,ht=m.useMemo((function(){return{registerPath:ot,unregisterPath:st}}),[ot,st]),pt=m.useMemo((function(){return{isSubPathKey:lt}}),[lt]);m.useEffect((function(){ct(We?Ke:ke.slice(He+1).map((function(e){return e.key})))}),[He,We]);var vt=(0,N.Z)(H||V&&(null===(n=ke[0])||void 0===n?void 0:n.key),{value:H}),mt=(0,p.Z)(vt,2),gt=mt[0],yt=mt[1],bt=re((function(e){yt(e)})),wt=re((function(){yt(void 0)}));(0,m.useImperativeHandle)(t,(function(){return{list:Pe.current,focus:function(e){var t,n,r,i,a=null!=gt?gt:null===(t=ke.find((function(e){return!e.props.disabled})))||void 0===t?void 0:t.key;a&&(null===(n=Pe.current)||void 0===n||null===(r=n.querySelector("li[data-menu-id='".concat(K(_e,a),"']")))||void 0===r||null===(i=r.focus)||void 0===i||i.call(r,e))}}}));var Nt=(0,N.Z)(J||[],{value:Q,postState:function(e){return Array.isArray(e)?e:null==e?Ke:[e]}}),xt=(0,p.Z)(Nt,2),St=xt[0],kt=xt[1],Ct=re((function(e){null==ge||ge(O(e)),function(e){if(Y){var t,n=e.key,r=St.includes(n);t=X?r?St.filter((function(e){return e!==n})):[].concat((0,h.Z)(St),[n]):[n],kt(t);var i=(0,d.Z)((0,d.Z)({},e),{},{selectedKeys:t});r?null==te||te(i):null==ee||ee(i)}!X&&$e.length&&"inline"!==je&&Je(Ke)}(e)})),Lt=re((function(e,t){var n=$e.filter((function(t){return t!==e}));if(t)n.push(e);else if("inline"!==je){var r=dt(e);n=n.filter((function(e){return!r.has(e)}))}w()($e,n)||Je(n)})),At=re(me),Et=De(je,gt,Ie,_e,Pe,ft,ut,yt,(function(e,t){var n=null!=t?t:!$e.includes(e);Lt(e,n)}),be);m.useEffect((function(){Ee(!0)}),[]);var Pt=m.useMemo((function(){return{_internalRenderMenuItem:we,_internalRenderSubMenuItem:xe}}),[we,xe]),_t="horizontal"!==je||I?ke:ke.map((function(e,t){return m.createElement(P,{key:e.key,overflowDisabled:t>He},e)})),It=m.createElement(S.Z,(0,s.Z)({id:C,ref:Pe,prefixCls:"".concat(a,"-overflow"),component:"ul",itemComponent:$,className:y()(a,"".concat(a,"-root"),"".concat(a,"-").concat(je),l,(r={},(0,f.Z)(r,"".concat(a,"-inline-collapsed"),Re),(0,f.Z)(r,"".concat(a,"-rtl"),Ie),r),o),dir:k,style:c,role:"menu",tabIndex:g,data:_t,renderRawItem:function(e){return e},renderRawRest:function(e){var t=e.length,n=t?ke.slice(-t):null;return m.createElement(Ne,{eventKey:Te,title:pe,disabled:We,internalPopupClose:0===t,popupClassName:ve},n)},maxCount:"horizontal"!==je||I?S.Z.INVALIDATE:S.Z.RESPONSIVE,ssr:"full","data-menu-list":!0,onVisibleChange:function(e){Ve(e)},onKeyDown:Et},Se));return m.createElement(z.Provider,{value:Pt},m.createElement(q.Provider,{value:_e},m.createElement(P,{prefixCls:a,rootClassName:o,mode:je,openKeys:$e,rtl:Ie,disabled:_,motion:Ae?oe:null,defaultMotions:Ae?se:null,activeKey:gt,onActive:bt,onInactive:wt,selectedKeys:St,inlineIndent:ae,subMenuOpenDelay:D,subMenuCloseDelay:j,forceSubMenuRender:R,builtinPlacements:ue,triggerSubMenuAction:le,getPopupContainer:At,itemIcon:fe,expandIcon:de,onItemClick:Ct,onOpenChange:Lt},m.createElement(B.Provider,{value:pt},It),m.createElement("div",{style:{display:"none"},"aria-hidden":!0},m.createElement(Z.Provider,{value:ht},ke)))))}));var ze=["className","title","eventKey","children"],He=["children"],Ve=function(e){var t=e.className,n=e.title,r=(e.eventKey,e.children),i=(0,v.Z)(e,ze),a=m.useContext(E).prefixCls,o="".concat(a,"-item-group");return m.createElement("li",(0,s.Z)({},i,{onClick:function(e){return e.stopPropagation()},className:y()(o,t)}),m.createElement("div",{className:"".concat(o,"-title"),title:"string"==typeof n?n:void 0},n),m.createElement("ul",{className:"".concat(o,"-list")},r))};function We(e){var t=e.children,n=(0,v.Z)(e,He),r=ee(t,T(n.eventKey));return j()?r:m.createElement(Ve,(0,C.Z)(n,["warnKey"]),r)}function Ye(e){var t=e.className,n=e.style,r=m.useContext(E).prefixCls;return j()?null:m.createElement("li",{className:y()("".concat(r,"-item-divider"),t),style:n})}var Ge=Ue;Ge.Item=$,Ge.SubMenu=Ne,Ge.ItemGroup=We,Ge.Divider=Ye;const $e=Ge;var Xe,Je=n(6680),Qe=n(3124),et=m.createContext({});Xe=0;var tt=n(3603),nt=n(6159),rt=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n};const it=function(e){var t=e.prefixCls,n=e.className,r=e.dashed,i=rt(e,["prefixCls","className","dashed"]),a=(0,m.useContext(Qe.E_).getPrefixCls)("menu",t),o=u()((0,f.Z)({},"".concat(a,"-item-divider-dashed"),!!r),n);return m.createElement(Ye,(0,s.Z)({className:o},i))};var at=n(5777);const ot=(0,m.createContext)({prefixCls:"",firstLevel:!0,inlineCollapsed:!1});var st=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},ct=function(e){(0,a.Z)(n,e);var t=(0,o.Z)(n);function n(){var e;return(0,r.Z)(this,n),(e=t.apply(this,arguments)).renderItem=function(t){var n,r,i=t.siderCollapsed,a=e.context,o=a.prefixCls,c=a.firstLevel,l=a.inlineCollapsed,d=a.direction,h=a.disableMenuItemTitleTooltip,p=e.props,v=p.className,g=p.children,y=e.props,b=y.title,w=y.icon,N=y.danger,x=st(y,["title","icon","danger"]),S=b;void 0===b?S=c?g:"":!1===b&&(S="");var k={title:S};i||l||(k.title=null,k.visible=!1);var C=(0,J.Z)(g).length,L=m.createElement($,(0,s.Z)({},x,{className:u()((n={},(0,f.Z)(n,"".concat(o,"-item-danger"),N),(0,f.Z)(n,"".concat(o,"-item-only-child"),1===(w?C+1:C)),n),v),title:"string"==typeof b?b:void 0}),(0,nt.Tm)(w,{className:u()((0,nt.l$)(w)?null===(r=w.props)||void 0===r?void 0:r.className:"","".concat(o,"-item-icon"))}),e.renderItemChildren(l));return h||(L=m.createElement(at.Z,(0,s.Z)({},k,{placement:"rtl"===d?"left":"right",overlayClassName:"".concat(o,"-inline-collapsed-tooltip")}),L)),L},e}return(0,i.Z)(n,[{key:"renderItemChildren",value:function(e){var t=this.context,n=t.prefixCls,r=t.firstLevel,i=this.props,a=i.icon,o=i.children,s=m.createElement("span",{className:"".concat(n,"-title-content")},o);return(!a||(0,nt.l$)(o)&&"span"===o.type)&&o&&e&&r&&"string"==typeof o?m.createElement("div",{className:"".concat(n,"-inline-collapsed-noicon")},o.charAt(0)):s}},{key:"render",value:function(){return m.createElement(et.Consumer,null,this.renderItem)}}]),n}(m.Component);ct.contextType=ot;const lt=function(e){var t,n,r=e.popupClassName,i=e.icon,a=e.title,o=e.theme,c=m.useContext(ot),l=c.prefixCls,f=c.inlineCollapsed,d=c.antdMenuTheme,h=T();if(i){var p=(0,nt.l$)(a)&&"span"===a.type;n=m.createElement(m.Fragment,null,(0,nt.Tm)(i,{className:u()((0,nt.l$)(i)?null===(t=i.props)||void 0===t?void 0:t.className:"","".concat(l,"-item-icon"))}),p?a:m.createElement("span",{className:"".concat(l,"-title-content")},a))}else n=f&&!h.length&&a&&"string"==typeof a?m.createElement("div",{className:"".concat(l,"-inline-collapsed-noicon")},a.charAt(0)):m.createElement("span",{className:"".concat(l,"-title-content")},a);var v=m.useMemo((function(){return(0,s.Z)((0,s.Z)({},c),{firstLevel:!1})}),[c]);return m.createElement(ot.Provider,{value:v},m.createElement(Ne,(0,s.Z)({},(0,C.Z)(e,["icon"]),{title:n,popupClassName:u()(l,"".concat(l,"-").concat(o||d),r)})))};var ut=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n};function ft(e){return(e||[]).map((function(e,t){if(e&&"object"===(0,X.Z)(e)){var n=e,r=n.label,i=n.children,a=n.key,o=n.type,c=ut(n,["label","children","key","type"]),l=null!=a?a:"tmp-".concat(t);return i||"group"===o?"group"===o?m.createElement(We,(0,s.Z)({key:l},c,{title:r}),ft(i)):m.createElement(lt,(0,s.Z)({key:l},c,{title:r}),ft(i)):"divider"===o?m.createElement(it,(0,s.Z)({key:l},c)):m.createElement(ct,(0,s.Z)({key:l},c),r)}return null})).filter((function(e){return e}))}function dt(e){return m.useMemo((function(){return e?ft(e):e}),[e])}var ht=n(6529),pt=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},vt=(0,m.forwardRef)((function(e,t){var n,r=m.useContext(ht.Z)||{},i=m.useContext(Qe.E_),a=i.getPrefixCls,o=i.getPopupContainer,l=i.direction,f=a(),d=e.prefixCls,h=e.className,p=e.theme,v=void 0===p?"light":p,g=e.expandIcon,y=e._internalDisableMenuItemTitleTooltip,b=e.inlineCollapsed,w=e.siderCollapsed,N=e.items,x=e.children,S=e.mode,k=e.selectable,L=e.onClick,A=pt(e,["prefixCls","className","theme","expandIcon","_internalDisableMenuItemTitleTooltip","inlineCollapsed","siderCollapsed","items","children","mode","selectable","onClick"]),E=(0,C.Z)(A,["collapsedWidth"]),P=dt(N)||x;null===(n=r.validator)||void 0===n||n.call(r,{mode:S});var _,I=(0,Je.Z)((function(){var e;null==L||L.apply(void 0,arguments),null===(e=null==r?void 0:r.onClick)||void 0===e||e.call(r)})),O=r.mode||S,M=null!=k?k:r.selectable,D=m.useMemo((function(){return void 0!==w?w:b}),[b,w]),F={horizontal:{motionName:"".concat(f,"-slide-up")},inline:tt.ZP,other:{motionName:"".concat(f,"-zoom-big")}},Z=a("menu",d||r.prefixCls),j=u()("".concat(Z,"-").concat(v),h);_="function"==typeof g?g:(0,nt.Tm)(g||r.expandIcon,{className:"".concat(Z,"-submenu-expand-icon")});var R=m.useMemo((function(){return{prefixCls:Z,inlineCollapsed:D||!1,antdMenuTheme:v,direction:l,firstLevel:!0,disableMenuItemTitleTooltip:y}}),[Z,D,v,l,y]);return m.createElement(ht.Z.Provider,{value:null},m.createElement(ot.Provider,{value:R},m.createElement($e,(0,s.Z)({getPopupContainer:o,overflowedIndicator:m.createElement(c.Z,null),overflowedIndicatorPopupClassName:"".concat(Z,"-").concat(v),mode:O,selectable:M,onClick:I},E,{inlineCollapsed:D,className:j,prefixCls:Z,direction:l,defaultMotions:F,expandIcon:_,ref:t}),P)))})),mt=function(e){(0,a.Z)(n,e);var t=(0,o.Z)(n);function n(){var e;return(0,r.Z)(this,n),(e=t.apply(this,arguments)).focus=function(t){var n;null===(n=e.menu)||void 0===n||n.focus(t)},e}return(0,i.Z)(n,[{key:"render",value:function(){var e=this;return m.createElement(et.Consumer,null,(function(t){return m.createElement(vt,(0,s.Z)({ref:function(t){e.menu=t}},e.props,t))}))}}]),n}(m.Component);mt.Divider=it,mt.Item=ct,mt.SubMenu=lt,mt.ItemGroup=We;const gt=mt},1104:(e,t,n)=>{"use strict";n(1337),n(1886)},9255:(e,t,n)=>{"use strict";n(1337)},4458:(e,t,n)=>{"use strict";n.d(t,{Z:()=>V});var r=n(4942),i=n(7462),a=n(9735),o=n(9065),s=n(7195),c=n(208),l=n(6228),u=n.n(l),f=n(8423),d=n(7294),h=n(3124),p=n(3355),v=n(2138),m=n(4925),g=n(1762),y=n.n(g),b={className:"",percent:0,prefixCls:"rc-progress",strokeColor:"#2db7f5",strokeLinecap:"round",strokeWidth:1,style:{},trailColor:"#D9D9D9",trailWidth:1,gapPosition:"bottom"},w=function(){var e=(0,d.useRef)([]),t=(0,d.useRef)(null);return(0,d.useEffect)((function(){var n=Date.now(),r=!1;e.current.forEach((function(e){if(e){r=!0;var i=e.style;i.transitionDuration=".3s, .3s, .3s, .06s",t.current&&n-t.current<100&&(i.transitionDuration="0s, 0s")}})),r&&(t.current=Date.now())})),e.current},N=["className","percent","prefixCls","strokeColor","strokeLinecap","strokeWidth","style","trailColor","trailWidth","transition"],x=function(e){var t=e.className,n=e.percent,r=e.prefixCls,a=e.strokeColor,o=e.strokeLinecap,s=e.strokeWidth,c=e.style,l=e.trailColor,u=e.trailWidth,f=e.transition,h=(0,m.Z)(e,N);delete h.gapPosition;var p=Array.isArray(n)?n:[n],v=Array.isArray(a)?a:[a],g=w(),b=s/2,x=100-s/2,S="M ".concat("round"===o?b:0,",").concat(b,"\n         L ").concat("round"===o?x:100,",").concat(b),k="0 0 100 ".concat(s),C=0;return d.createElement("svg",(0,i.Z)({className:y()("".concat(r,"-line"),t),viewBox:k,preserveAspectRatio:"none",style:c},h),d.createElement("path",{className:"".concat(r,"-line-trail"),d:S,strokeLinecap:o,stroke:l,strokeWidth:u||s,fillOpacity:"0"}),p.map((function(e,t){var n=1;switch(o){case"round":n=1-s/100;break;case"square":n=1-s/2/100;break;default:n=1}var i={strokeDasharray:"".concat(e*n,"px, 100px"),strokeDashoffset:"-".concat(C,"px"),transition:f||"stroke-dashoffset 0.3s ease 0s, stroke-dasharray .3s ease 0s, stroke 0.3s linear"},a=v[t]||v[v.length-1];return C+=e,d.createElement("path",{key:t,className:"".concat(r,"-line-path"),d:S,strokeLinecap:o,stroke:a,strokeWidth:s,fillOpacity:"0",ref:function(e){g[t]=e},style:i})})))};x.defaultProps=b,x.displayName="Line";var S=n(1002),k=n(9439),C=n(8924),L=0,A=(0,C.Z)();const E=function(e){var t=d.useState(),n=(0,k.Z)(t,2),r=n[0],i=n[1];return d.useEffect((function(){var e;i("rc_progress_".concat((A?(e=L,L+=1):e="TEST_OR_SSR",e)))}),[]),e||r};var P=["id","prefixCls","strokeWidth","trailWidth","gapDegree","gapPosition","trailColor","strokeLinecap","style","className","strokeColor","percent"];function _(e){return+e.replace("%","")}function I(e){var t=null!=e?e:[];return Array.isArray(t)?t:[t]}var O=100,M=function(e,t,n,r){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,s=arguments.length>7?arguments[7]:void 0,c=i>0?90+i/2:-90,l=2*Math.PI*e,u=l*((360-i)/360),f=t/100*360*((360-i)/360),d=0===i?0:{bottom:0,top:180,left:90,right:-90}[a],h=(100-n)/100*u;return"round"===o&&100!==n&&(h+=s/2)>=u&&(h=u-.01),{stroke:"string"==typeof r?r:void 0,strokeDasharray:"".concat(u,"px ").concat(l),strokeDashoffset:h,transform:"rotate(".concat(c+f+d,"deg)"),transformOrigin:"50% 50%",transition:"stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s, opacity .3s ease 0s",fillOpacity:0}},D=function(e){var t,n=e.id,r=e.prefixCls,a=e.strokeWidth,o=e.trailWidth,s=e.gapDegree,c=e.gapPosition,l=e.trailColor,u=e.strokeLinecap,f=e.style,h=e.className,p=e.strokeColor,v=e.percent,g=(0,m.Z)(e,P),b=E(n),N="".concat(b,"-gradient"),x=50-a/2,k=M(x,0,100,l,s,c,u,a),C=I(v),L=I(p),A=L.find((function(e){return e&&"object"===(0,S.Z)(e)})),D=w();return d.createElement("svg",(0,i.Z)({className:y()("".concat(r,"-circle"),h),viewBox:"0 0 ".concat(O," ").concat(O),style:f,id:n},g),A&&d.createElement("defs",null,d.createElement("linearGradient",{id:N,x1:"100%",y1:"0%",x2:"0%",y2:"0%"},Object.keys(A).sort((function(e,t){return _(e)-_(t)})).map((function(e,t){return d.createElement("stop",{key:t,offset:e,stopColor:A[e]})})))),d.createElement("circle",{className:"".concat(r,"-circle-trail"),r:x,cx:50,cy:50,stroke:l,strokeLinecap:u,strokeWidth:o||a,style:k}),(t=0,C.map((function(e,n){var i=L[n]||L[L.length-1],o=i&&"object"===(0,S.Z)(i)?"url(#".concat(N,")"):void 0,l=M(x,t,e,i,s,c,u,a);return t+=e,d.createElement("circle",{key:n,className:"".concat(r,"-circle-path"),r:x,cx:50,cy:50,stroke:o,strokeLinecap:u,strokeWidth:a,opacity:0===e?0:1,style:l,ref:function(e){D[n]=e}})})).reverse()))};D.defaultProps=b,D.displayName="Circle";const F=D;function Z(e){return!e||e<0?0:e>100?100:e}function j(e){var t=e.success,n=e.successPercent;return t&&"progress"in t&&(n=t.progress),t&&"percent"in t&&(n=t.percent),n}const R=function(e){var t,n,i,a=e.prefixCls,o=e.width,s=e.strokeWidth,c=e.trailColor,l=void 0===c?null:c,f=e.strokeLinecap,h=void 0===f?"round":f,p=e.gapPosition,m=e.gapDegree,g=e.type,y=e.children,b=e.success,w=o||120,N={width:w,height:w,fontSize:.15*w+6},x=s||6,S=p||"dashboard"===g&&"bottom"||void 0,k="[object Object]"===Object.prototype.toString.call(e.strokeColor),C=function(e){var t=e.success,n=void 0===t?{}:t,r=e.strokeColor;return[n.strokeColor||v.ez.green,r||null]}({success:b,strokeColor:e.strokeColor}),L=u()("".concat(a,"-inner"),(0,r.Z)({},"".concat(a,"-circle-gradient"),k));return d.createElement("div",{className:L,style:N},d.createElement(F,{percent:(t=e,n=t.percent,i=Z(j({success:t.success,successPercent:t.successPercent})),[i,Z(Z(n)-i)]),strokeWidth:x,trailWidth:x,strokeColor:C,strokeLinecap:h,trailColor:l,prefixCls:a,gapDegree:m||0===m?m:"dashboard"===g?75:void 0,gapPosition:S}),y)};var T=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},B=function(e,t){var n,r,i=e.from,a=void 0===i?v.ez.blue:i,o=e.to,s=void 0===o?v.ez.blue:o,c=e.direction,l=void 0===c?"rtl"===t?"to left":"to right":c,u=T(e,["from","to","direction"]);if(0!==Object.keys(u).length){var f=(n=u,r=[],Object.keys(n).forEach((function(e){var t=parseFloat(e.replace(/%/g,""));isNaN(t)||r.push({key:t,value:n[e]})})),(r=r.sort((function(e,t){return e.key-t.key}))).map((function(e){var t=e.key,n=e.value;return"".concat(n," ").concat(t,"%")})).join(", "));return{backgroundImage:"linear-gradient(".concat(l,", ").concat(f,")")}}return{backgroundImage:"linear-gradient(".concat(l,", ").concat(a,", ").concat(s,")")}};const q=function(e){var t=e.prefixCls,n=e.direction,r=e.percent,a=e.strokeWidth,o=e.size,s=e.strokeColor,c=e.strokeLinecap,l=void 0===c?"round":c,u=e.children,f=e.trailColor,h=void 0===f?null:f,p=e.success,v=s&&"string"!=typeof s?B(s,n):{background:s},m="square"===l||"butt"===l?0:void 0,g={backgroundColor:h||void 0,borderRadius:m},y=(0,i.Z)({width:"".concat(Z(r),"%"),height:a||("small"===o?6:8),borderRadius:m},v),b=j(e),w={width:"".concat(Z(b),"%"),height:a||("small"===o?6:8),borderRadius:m,backgroundColor:null==p?void 0:p.strokeColor},N=void 0!==b?d.createElement("div",{className:"".concat(t,"-success-bg"),style:w}):null;return d.createElement(d.Fragment,null,d.createElement("div",{className:"".concat(t,"-outer")},d.createElement("div",{className:"".concat(t,"-inner"),style:g},d.createElement("div",{className:"".concat(t,"-bg"),style:y}),N)),u)};const K=function(e){for(var t=e.size,n=e.steps,i=e.percent,a=void 0===i?0:i,o=e.strokeWidth,s=void 0===o?8:o,c=e.strokeColor,l=e.trailColor,f=void 0===l?null:l,h=e.prefixCls,p=e.children,v=Math.round(n*(a/100)),m="small"===t?2:14,g=new Array(n),y=0;y<n;y++){var b=Array.isArray(c)?c[y]:c;g[y]=d.createElement("div",{key:y,className:u()("".concat(h,"-steps-item"),(0,r.Z)({},"".concat(h,"-steps-item-active"),y<=v-1)),style:{backgroundColor:y<=v-1?b:f,width:m,height:s}})}return d.createElement("div",{className:"".concat(h,"-steps-outer")},g,p)};var U=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},z=((0,p.b)("line","circle","dashboard"),(0,p.b)("normal","exception","active","success"));const H=function(e){var t,n=e.prefixCls,l=e.className,p=e.steps,v=e.strokeColor,m=e.percent,g=void 0===m?0:m,y=e.size,b=void 0===y?"default":y,w=e.showInfo,N=void 0===w||w,x=e.type,S=void 0===x?"line":x,k=U(e,["prefixCls","className","steps","strokeColor","percent","size","showInfo","type"]);var C,L,A,E=d.useContext(h.E_),P=E.getPrefixCls,_=E.direction,I=P("progress",n),O=(L=e.status,z.indexOf(L)<0&&(C=j(e),parseInt(void 0!==C?C.toString():g.toString(),10)>=100)?"success":L||"normal"),M=function(t,n){var r,i=e.format,l=j(e);if(!N)return null;var u="line"===S;return i||"exception"!==n&&"success"!==n?r=(i||function(e){return"".concat(e,"%")})(Z(g),Z(l)):"exception"===n?r=u?d.createElement(s.Z,null):d.createElement(c.Z,null):"success"===n&&(r=u?d.createElement(a.Z,null):d.createElement(o.Z,null)),d.createElement("span",{className:"".concat(t,"-text"),title:"string"==typeof r?r:void 0},r)}(I,O),D=Array.isArray(v)?v[0]:v,F="string"==typeof v||Array.isArray(v)?v:void 0;"line"===S?A=p?d.createElement(K,(0,i.Z)({},e,{strokeColor:F,prefixCls:I,steps:p}),M):d.createElement(q,(0,i.Z)({},e,{strokeColor:D,prefixCls:I,direction:_}),M):"circle"!==S&&"dashboard"!==S||(A=d.createElement(R,(0,i.Z)({},e,{strokeColor:D,prefixCls:I,progressStatus:O}),M));var T=u()(I,(t={},(0,r.Z)(t,"".concat(I,"-").concat(("dashboard"===S?"circle":p&&"steps")||S),!0),(0,r.Z)(t,"".concat(I,"-status-").concat(O),!0),(0,r.Z)(t,"".concat(I,"-show-info"),N),(0,r.Z)(t,"".concat(I,"-").concat(b),b),(0,r.Z)(t,"".concat(I,"-rtl"),"rtl"===_),t),l);return d.createElement("div",(0,i.Z)({},(0,f.Z)(k,["status","format","trailColor","strokeWidth","width","gapDegree","gapPosition","strokeLinecap","success","successPercent"]),{className:T}),A)},V=H},1837:(e,t,n)=>{"use strict";n(1337)},2530:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>_});var r=n(7462),i=n(4942),a=n(9439),o=n(6228),s=n.n(o),c=n(1770),l=n(7294),u=n(3124),f=n(7647);var d=l.createContext(null),h=d.Provider;const p=d;var v=l.createContext(null),m=v.Provider,g=n(132),y=n(2550),b=n(8866),w=n(5223),N=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},x=function(e,t){var n,a=l.useContext(p),o=l.useContext(v),c=l.useContext(u.E_),f=c.getPrefixCls,d=c.direction,h=l.useRef(),m=(0,y.sQ)(t,h),x=(0,l.useContext)(w.aM).isFormItemInput,S=e.prefixCls,k=e.className,C=e.children,L=e.style,A=e.disabled,E=N(e,["prefixCls","className","children","style","disabled"]),P=f("radio",S),_="button"===((null==a?void 0:a.optionType)||o)?"".concat(P,"-button"):P,I=(0,r.Z)({},E),O=l.useContext(b.Z);I.disabled=A||O,a&&(I.name=a.name,I.onChange=function(t){var n,r;null===(n=e.onChange)||void 0===n||n.call(e,t),null===(r=null==a?void 0:a.onChange)||void 0===r||r.call(a,t)},I.checked=e.value===a.value,I.disabled=I.disabled||a.disabled);var M=s()("".concat(_,"-wrapper"),(n={},(0,i.Z)(n,"".concat(_,"-wrapper-checked"),I.checked),(0,i.Z)(n,"".concat(_,"-wrapper-disabled"),I.disabled),(0,i.Z)(n,"".concat(_,"-wrapper-rtl"),"rtl"===d),(0,i.Z)(n,"".concat(_,"-wrapper-in-form-item"),x),n),k);return l.createElement("label",{className:M,style:L,onMouseEnter:e.onMouseEnter,onMouseLeave:e.onMouseLeave},l.createElement(g.Z,(0,r.Z)({},I,{type:"radio",prefixCls:_,ref:m})),void 0!==C?l.createElement("span",null,C):null)};const S=l.forwardRef(x);var k=l.forwardRef((function(e,t){var n=l.useContext(u.E_),o=n.getPrefixCls,d=n.direction,p=l.useContext(f.Z),v=(0,c.Z)(e.defaultValue,{value:e.value}),m=(0,a.Z)(v,2),g=m[0],y=m[1];return l.createElement(h,{value:{onChange:function(t){var n=g,r=t.target.value;"value"in e||y(r);var i=e.onChange;i&&r!==n&&i(t)},value:g,disabled:e.disabled,name:e.name,optionType:e.optionType}},function(){var n,a=e.prefixCls,c=e.className,u=void 0===c?"":c,f=e.options,h=e.buttonStyle,v=void 0===h?"outline":h,m=e.disabled,y=e.children,b=e.size,w=e.style,N=e.id,x=e.onMouseEnter,k=e.onMouseLeave,C=o("radio",a),L="".concat(C,"-group"),A=y;f&&f.length>0&&(A=f.map((function(e){return"string"==typeof e||"number"==typeof e?l.createElement(S,{key:e.toString(),prefixCls:C,disabled:m,value:e,checked:g===e},e):l.createElement(S,{key:"radio-group-value-options-".concat(e.value),prefixCls:C,disabled:e.disabled||m,value:e.value,checked:g===e.value,style:e.style},e.label)})));var E=b||p,P=s()(L,"".concat(L,"-").concat(v),(n={},(0,i.Z)(n,"".concat(L,"-").concat(E),E),(0,i.Z)(n,"".concat(L,"-rtl"),"rtl"===d),n),u);return l.createElement("div",(0,r.Z)({},function(e){return Object.keys(e).reduce((function(t,n){return!n.startsWith("data-")&&!n.startsWith("aria-")&&"role"!==n||n.startsWith("data-__")||(t[n]=e[n]),t}),{})}(e),{className:P,style:w,onMouseEnter:x,onMouseLeave:k,id:N,ref:t}),A)}())}));const C=l.memo(k);var L=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},A=function(e,t){var n=l.useContext(u.E_).getPrefixCls,i=e.prefixCls,a=L(e,["prefixCls"]),o=n("radio",i);return l.createElement(m,{value:"button"},l.createElement(S,(0,r.Z)({prefixCls:o},a,{type:"radio",ref:t})))};const E=l.forwardRef(A);var P=S;P.Button=E,P.Group=C,P.__ANT_RADIO=!0;const _=P},4852:(e,t,n)=>{"use strict";n(1337)},1382:(e,t,n)=>{"use strict";n.d(t,{Z:()=>x});var r=n(7462),i=n(4942),a=n(5671),o=n(3144),s=n(9340),c=n(8557),l=n(6228),u=n.n(l),f=n(3279),d=n.n(f),h=n(8423),p=n(7294),v=n(3124),m=n(6159),g=n(3355),y=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},b=((0,g.b)("small","default","large"),null);var w=function(e){(0,s.Z)(n,e);var t=(0,c.Z)(n);function n(e){var o;(0,a.Z)(this,n),(o=t.call(this,e)).debouncifyUpdateSpinning=function(e){var t=(e||o.props).delay;t&&(o.cancelExistingSpin(),o.updateSpinning=d()(o.originalUpdateSpinning,t))},o.updateSpinning=function(){var e=o.props.spinning;o.state.spinning!==e&&o.setState({spinning:e})},o.renderSpin=function(e){var t,n=e.direction,a=o.props,s=a.spinPrefixCls,c=a.className,l=a.size,f=a.tip,d=a.wrapperClassName,v=a.style,g=y(a,["spinPrefixCls","className","size","tip","wrapperClassName","style"]),w=o.state.spinning,N=u()(s,(t={},(0,i.Z)(t,"".concat(s,"-sm"),"small"===l),(0,i.Z)(t,"".concat(s,"-lg"),"large"===l),(0,i.Z)(t,"".concat(s,"-spinning"),w),(0,i.Z)(t,"".concat(s,"-show-text"),!!f),(0,i.Z)(t,"".concat(s,"-rtl"),"rtl"===n),t),c),x=(0,h.Z)(g,["spinning","delay","indicator","prefixCls"]),S=p.createElement("div",(0,r.Z)({},x,{style:v,className:N,"aria-live":"polite","aria-busy":w}),function(e,t){var n=t.indicator,r="".concat(e,"-dot");return null===n?null:(0,m.l$)(n)?(0,m.Tm)(n,{className:u()(n.props.className,r)}):(0,m.l$)(b)?(0,m.Tm)(b,{className:u()(b.props.className,r)}):p.createElement("span",{className:u()(r,"".concat(e,"-dot-spin"))},p.createElement("i",{className:"".concat(e,"-dot-item")}),p.createElement("i",{className:"".concat(e,"-dot-item")}),p.createElement("i",{className:"".concat(e,"-dot-item")}),p.createElement("i",{className:"".concat(e,"-dot-item")}))}(s,o.props),f?p.createElement("div",{className:"".concat(s,"-text")},f):null);if(o.isNestedPattern()){var k=u()("".concat(s,"-container"),(0,i.Z)({},"".concat(s,"-blur"),w));return p.createElement("div",(0,r.Z)({},x,{className:u()("".concat(s,"-nested-loading"),d)}),w&&p.createElement("div",{key:"loading"},S),p.createElement("div",{className:k,key:"container"},o.props.children))}return S};var s=e.spinning,c=function(e,t){return!!e&&!!t&&!isNaN(Number(t))}(s,e.delay);return o.state={spinning:s&&!c},o.originalUpdateSpinning=o.updateSpinning,o.debouncifyUpdateSpinning(e),o}return(0,o.Z)(n,[{key:"componentDidMount",value:function(){this.updateSpinning()}},{key:"componentDidUpdate",value:function(){this.debouncifyUpdateSpinning(),this.updateSpinning()}},{key:"componentWillUnmount",value:function(){this.cancelExistingSpin()}},{key:"cancelExistingSpin",value:function(){var e=this.updateSpinning;e&&e.cancel&&e.cancel()}},{key:"isNestedPattern",value:function(){return!(!this.props||void 0===this.props.children)}},{key:"render",value:function(){return p.createElement(v.C,null,this.renderSpin)}}]),n}(p.Component);w.defaultProps={spinning:!0,size:"default",wrapperClassName:""};var N=function(e){var t=e.prefixCls,n=(0,p.useContext(v.E_).getPrefixCls)("spin",t),i=(0,r.Z)((0,r.Z)({},e),{spinPrefixCls:n});return p.createElement(w,(0,r.Z)({},i))};N.setDefaultIndicator=function(e){b=e};const x=N},2690:(e,t,n)=>{"use strict";n(1337)},8351:(e,t,n)=>{"use strict";n.d(t,{Z:()=>f});var r=n(7462),i=n(7294),a=n(5462),o=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},s=a.Z.TimePicker,c=a.Z.RangePicker,l=i.forwardRef((function(e,t){return i.createElement(c,(0,r.Z)({},e,{dropdownClassName:e.popupClassName,picker:"time",mode:void 0,ref:t}))})),u=i.forwardRef((function(e,t){var n=e.addon,a=e.renderExtraFooter,c=e.popupClassName,l=o(e,["addon","renderExtraFooter","popupClassName"]),u=i.useMemo((function(){return a||(n||void 0)}),[n,a]);return i.createElement(s,(0,r.Z)({},l,{dropdownClassName:c,mode:void 0,ref:t,renderExtraFooter:u}))}));u.RangePicker=l;const f=u},6663:(e,t,n)=>{"use strict";n(1337),n(9263)},679:(e,t,n)=>{"use strict";n.d(t,{Z:()=>mt});var r=n(7462),i=n(4942),a=n(6228),o=n.n(a),s=n(3433),c=n(1413),l=n(9439),u=n(4925),f=n(1002),d=n(7294),h=n(2258),p=n(334);function v(e,t){var n=new Set;return e.forEach((function(e){t.has(e)||n.add(e)})),n}function m(e){var t=e||{},n=t.disabled,r=t.disableCheckbox,i=t.checkable;return!(!n&&!r)||!1===i}function g(e,t,n,r){var i,a=[];i=r||m;var o,s=new Set(e.filter((function(e){var t=!!n[e];return t||a.push(e),t}))),c=new Map,l=0;return Object.keys(n).forEach((function(e){var t=n[e],r=t.level,i=c.get(r);i||(i=new Set,c.set(r,i)),i.add(t),l=Math.max(l,r)})),(0,p.ZP)(!a.length,"Tree missing follow keys: ".concat(a.slice(0,100).map((function(e){return"'".concat(e,"'")})).join(", "))),o=!0===t?function(e,t,n,r){for(var i=new Set(e),a=new Set,o=0;o<=n;o+=1)(t.get(o)||new Set).forEach((function(e){var t=e.key,n=e.node,a=e.children,o=void 0===a?[]:a;i.has(t)&&!r(n)&&o.filter((function(e){return!r(e.node)})).forEach((function(e){i.add(e.key)}))}));for(var s=new Set,c=n;c>=0;c-=1)(t.get(c)||new Set).forEach((function(e){var t=e.parent,n=e.node;if(!r(n)&&e.parent&&!s.has(e.parent.key))if(r(e.parent.node))s.add(t.key);else{var o=!0,c=!1;(t.children||[]).filter((function(e){return!r(e.node)})).forEach((function(e){var t=e.key,n=i.has(t);o&&!n&&(o=!1),c||!n&&!a.has(t)||(c=!0)})),o&&i.add(t.key),c&&a.add(t.key),s.add(t.key)}}));return{checkedKeys:Array.from(i),halfCheckedKeys:Array.from(v(a,i))}}(s,c,l,i):function(e,t,n,r,i){for(var a=new Set(e),o=new Set(t),s=0;s<=r;s+=1)(n.get(s)||new Set).forEach((function(e){var t=e.key,n=e.node,r=e.children,s=void 0===r?[]:r;a.has(t)||o.has(t)||i(n)||s.filter((function(e){return!i(e.node)})).forEach((function(e){a.delete(e.key)}))}));o=new Set;for(var c=new Set,l=r;l>=0;l-=1)(n.get(l)||new Set).forEach((function(e){var t=e.parent,n=e.node;if(!i(n)&&e.parent&&!c.has(e.parent.key))if(i(e.parent.node))c.add(t.key);else{var r=!0,s=!1;(t.children||[]).filter((function(e){return!i(e.node)})).forEach((function(e){var t=e.key,n=a.has(t);r&&!n&&(r=!1),s||!n&&!o.has(t)||(s=!0)})),r||a.delete(t.key),s&&o.add(t.key),c.add(t.key)}}));return{checkedKeys:Array.from(a),halfCheckedKeys:Array.from(v(o,a))}}(s,t.halfCheckedKeys,c,l,i),o}var y=n(8708),b=n(1770),w=n(5105),N=n(6982),x=n(5671),S=n(3144),k=n(7326),C=n(9340),L=n(8557),A=n(4217),E=n(3718),P=n.n(E),_=d.createContext(null),I=function(e){for(var t=e.prefixCls,n=e.level,r=e.isStart,a=e.isEnd,o="".concat(t,"-indent-unit"),s=[],c=0;c<n;c+=1){var l;s.push(d.createElement("span",{key:c,className:P()(o,(l={},(0,i.Z)(l,"".concat(o,"-start"),r[c]),(0,i.Z)(l,"".concat(o,"-end"),a[c]),l))}))}return d.createElement("span",{"aria-hidden":"true",className:"".concat(t,"-indent")},s)};const O=d.memo(I);var M=n(8423),D=n(344),F=["children"];function Z(e,t){return null!=e?e:t}function j(e){var t=e||{},n=t.title||"title";return{title:n,_title:t._title||[n],key:t.key||"key",children:t.children||"children"}}function R(e,t,n){var r=j(n),i=r._title,a=r.key,o=r.children,l=new Set(!0===t?[]:t),u=[];return function e(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return n.map((function(f,d){for(var h,p=X(r?r.pos:"0",d),v=Z(f[a],p),m=0;m<i.length;m+=1){var g=i[m];if(void 0!==f[g]){h=f[g];break}}var y=(0,c.Z)((0,c.Z)({},(0,M.Z)(f,[].concat((0,s.Z)(i),[a,o]))),{},{title:h,key:v,parent:r,pos:p,children:null,data:f,isStart:[].concat((0,s.Z)(r?r.isStart:[]),[0===d]),isEnd:[].concat((0,s.Z)(r?r.isEnd:[]),[d===n.length-1])});return u.push(y),!0===t||l.has(v)?y.children=e(f[o]||[],y):y.children=[],y}))}(e),u}function T(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.initWrapper,r=t.processEntity,i=t.onProcessFinished,a=t.externalGetKey,o=t.childrenPropName,c=t.fieldNames,l=a||(arguments.length>2?arguments[2]:void 0),u={},d={},h={posEntities:u,keyEntities:d};return n&&(h=n(h)||h),function(e,t,n){var r,i=("object"===(0,f.Z)(n)?n:{externalGetKey:n})||{},a=i.childrenPropName,o=i.externalGetKey,c=j(i.fieldNames),l=c.key,u=c.children,d=a||u;o?"string"==typeof o?r=function(e){return e[o]}:"function"==typeof o&&(r=function(e){return o(e)}):r=function(e,t){return Z(e[l],t)},function n(i,a,o,c){var l=i?i[d]:e,u=i?X(o.pos,a):"0",f=i?[].concat((0,s.Z)(c),[i]):[];if(i){var h=r(i,u),p={node:i,index:a,pos:u,key:h,parentPos:o.node?o.pos:null,level:o.level+1,nodes:f};t(p)}l&&l.forEach((function(e,t){n(e,t,{node:i,pos:u,level:o?o.level+1:-1},f)}))}(null)}(e,(function(e){var t=e.node,n=e.index,i=e.pos,a=e.key,o=e.parentPos,s=e.level,c={node:t,nodes:e.nodes,index:n,key:a,pos:i,level:s},l=Z(a,i);u[i]=c,d[l]=c,c.parent=u[o],c.parent&&(c.parent.children=c.parent.children||[],c.parent.children.push(c)),r&&r(c,h)}),{externalGetKey:l,childrenPropName:o,fieldNames:c}),i&&i(h),h}function B(e,t){var n=t.expandedKeys,r=t.selectedKeys,i=t.loadedKeys,a=t.loadingKeys,o=t.checkedKeys,s=t.halfCheckedKeys,c=t.dragOverNodeKey,l=t.dropPosition,u=t.keyEntities[e];return{eventKey:e,expanded:-1!==n.indexOf(e),selected:-1!==r.indexOf(e),loaded:-1!==i.indexOf(e),loading:-1!==a.indexOf(e),checked:-1!==o.indexOf(e),halfChecked:-1!==s.indexOf(e),pos:String(u?u.pos:""),dragOver:c===e&&0===l,dragOverGapTop:c===e&&-1===l,dragOverGapBottom:c===e&&1===l}}function q(e){var t=e.data,n=e.expanded,r=e.selected,i=e.checked,a=e.loaded,o=e.loading,s=e.halfChecked,l=e.dragOver,u=e.dragOverGapTop,f=e.dragOverGapBottom,d=e.pos,h=e.active,v=e.eventKey,m=(0,c.Z)((0,c.Z)({},t),{},{expanded:n,selected:r,checked:i,loaded:a,loading:o,halfChecked:s,dragOver:l,dragOverGapTop:u,dragOverGapBottom:f,pos:d,active:h,key:v});return"props"in m||Object.defineProperty(m,"props",{get:function(){return(0,p.ZP)(!1,"Second param return from event is node data instead of TreeNode instance. Please read value directly instead of reading from `props`."),e}}),m}var K=["eventKey","className","style","dragOver","dragOverGapTop","dragOverGapBottom","isLeaf","isStart","isEnd","expanded","selected","checked","halfChecked","loading","domRef","active","data","onMouseMove","selectable"],U="open",z="close",H=function(e){(0,C.Z)(n,e);var t=(0,L.Z)(n);function n(){var e;(0,x.Z)(this,n);for(var r=arguments.length,i=new Array(r),a=0;a<r;a++)i[a]=arguments[a];return(e=t.call.apply(t,[this].concat(i))).state={dragNodeHighlight:!1},e.selectHandle=void 0,e.onSelectorClick=function(t){(0,e.props.context.onNodeClick)(t,q(e.props)),e.isSelectable()?e.onSelect(t):e.onCheck(t)},e.onSelectorDoubleClick=function(t){(0,e.props.context.onNodeDoubleClick)(t,q(e.props))},e.onSelect=function(t){if(!e.isDisabled()){var n=e.props.context.onNodeSelect;t.preventDefault(),n(t,q(e.props))}},e.onCheck=function(t){if(!e.isDisabled()){var n=e.props,r=n.disableCheckbox,i=n.checked,a=e.props.context.onNodeCheck;if(e.isCheckable()&&!r){t.preventDefault();var o=!i;a(t,q(e.props),o)}}},e.onMouseEnter=function(t){(0,e.props.context.onNodeMouseEnter)(t,q(e.props))},e.onMouseLeave=function(t){(0,e.props.context.onNodeMouseLeave)(t,q(e.props))},e.onContextMenu=function(t){(0,e.props.context.onNodeContextMenu)(t,q(e.props))},e.onDragStart=function(t){var n=e.props.context.onNodeDragStart;t.stopPropagation(),e.setState({dragNodeHighlight:!0}),n(t,(0,k.Z)(e));try{t.dataTransfer.setData("text/plain","")}catch(e){}},e.onDragEnter=function(t){var n=e.props.context.onNodeDragEnter;t.preventDefault(),t.stopPropagation(),n(t,(0,k.Z)(e))},e.onDragOver=function(t){var n=e.props.context.onNodeDragOver;t.preventDefault(),t.stopPropagation(),n(t,(0,k.Z)(e))},e.onDragLeave=function(t){var n=e.props.context.onNodeDragLeave;t.stopPropagation(),n(t,(0,k.Z)(e))},e.onDragEnd=function(t){var n=e.props.context.onNodeDragEnd;t.stopPropagation(),e.setState({dragNodeHighlight:!1}),n(t,(0,k.Z)(e))},e.onDrop=function(t){var n=e.props.context.onNodeDrop;t.preventDefault(),t.stopPropagation(),e.setState({dragNodeHighlight:!1}),n(t,(0,k.Z)(e))},e.onExpand=function(t){var n=e.props,r=n.loading,i=n.context.onNodeExpand;r||i(t,q(e.props))},e.setSelectHandle=function(t){e.selectHandle=t},e.getNodeState=function(){var t=e.props.expanded;return e.isLeaf()?null:t?U:z},e.hasChildren=function(){var t=e.props.eventKey;return!!((e.props.context.keyEntities[t]||{}).children||[]).length},e.isLeaf=function(){var t=e.props,n=t.isLeaf,r=t.loaded,i=e.props.context.loadData,a=e.hasChildren();return!1!==n&&(n||!i&&!a||i&&r&&!a)},e.isDisabled=function(){var t=e.props.disabled;return!(!e.props.context.disabled&&!t)},e.isCheckable=function(){var t=e.props.checkable,n=e.props.context.checkable;return!(!n||!1===t)&&n},e.syncLoadData=function(t){var n=t.expanded,r=t.loading,i=t.loaded,a=e.props.context,o=a.loadData,s=a.onNodeLoad;r||o&&n&&!e.isLeaf()&&(e.hasChildren()||i||s(q(e.props)))},e.isDraggable=function(){var t=e.props,n=t.data,r=t.context.draggable;return!(!r||r.nodeDraggable&&!r.nodeDraggable(n))},e.renderDragHandler=function(){var t=e.props.context,n=t.draggable,r=t.prefixCls;return(null==n?void 0:n.icon)?d.createElement("span",{className:"".concat(r,"-draggable-icon")},n.icon):null},e.renderSwitcherIconDom=function(t){var n=e.props.switcherIcon,r=e.props.context.switcherIcon,i=n||r;return"function"==typeof i?i((0,c.Z)((0,c.Z)({},e.props),{},{isLeaf:t})):i},e.renderSwitcher=function(){var t=e.props.expanded,n=e.props.context.prefixCls;if(e.isLeaf()){var r=e.renderSwitcherIconDom(!0);return!1!==r?d.createElement("span",{className:P()("".concat(n,"-switcher"),"".concat(n,"-switcher-noop"))},r):null}var i=P()("".concat(n,"-switcher"),"".concat(n,"-switcher_").concat(t?U:z)),a=e.renderSwitcherIconDom(!1);return!1!==a?d.createElement("span",{onClick:e.onExpand,className:i},a):null},e.renderCheckbox=function(){var t=e.props,n=t.checked,r=t.halfChecked,i=t.disableCheckbox,a=e.props.context.prefixCls,o=e.isDisabled(),s=e.isCheckable();if(!s)return null;var c="boolean"!=typeof s?s:null;return d.createElement("span",{className:P()("".concat(a,"-checkbox"),n&&"".concat(a,"-checkbox-checked"),!n&&r&&"".concat(a,"-checkbox-indeterminate"),(o||i)&&"".concat(a,"-checkbox-disabled")),onClick:e.onCheck},c)},e.renderIcon=function(){var t=e.props.loading,n=e.props.context.prefixCls;return d.createElement("span",{className:P()("".concat(n,"-iconEle"),"".concat(n,"-icon__").concat(e.getNodeState()||"docu"),t&&"".concat(n,"-icon_loading"))})},e.renderSelector=function(){var t,n,r=e.state.dragNodeHighlight,i=e.props,a=i.title,o=i.selected,s=i.icon,c=i.loading,l=i.data,u=e.props.context,f=u.prefixCls,h=u.showIcon,p=u.icon,v=u.loadData,m=u.titleRender,g=e.isDisabled(),y="".concat(f,"-node-content-wrapper");if(h){var b=s||p;t=b?d.createElement("span",{className:P()("".concat(f,"-iconEle"),"".concat(f,"-icon__customize"))},"function"==typeof b?b(e.props):b):e.renderIcon()}else v&&c&&(t=e.renderIcon());n="function"==typeof a?a(l):m?m(l):a;var w=d.createElement("span",{className:"".concat(f,"-title")},n);return d.createElement("span",{ref:e.setSelectHandle,title:"string"==typeof a?a:"",className:P()("".concat(y),"".concat(y,"-").concat(e.getNodeState()||"normal"),!g&&(o||r)&&"".concat(f,"-node-selected")),onMouseEnter:e.onMouseEnter,onMouseLeave:e.onMouseLeave,onContextMenu:e.onContextMenu,onClick:e.onSelectorClick,onDoubleClick:e.onSelectorDoubleClick},t,w,e.renderDropIndicator())},e.renderDropIndicator=function(){var t=e.props,n=t.disabled,r=t.eventKey,i=e.props.context,a=i.draggable,o=i.dropLevelOffset,s=i.dropPosition,c=i.prefixCls,l=i.indent,u=i.dropIndicatorRender,f=i.dragOverNodeKey,d=i.direction;return!n&&!1!==a&&f===r?u({dropPosition:s,dropLevelOffset:o,indent:l,prefixCls:c,direction:d}):null},e}return(0,S.Z)(n,[{key:"componentDidMount",value:function(){this.syncLoadData(this.props)}},{key:"componentDidUpdate",value:function(){this.syncLoadData(this.props)}},{key:"isSelectable",value:function(){var e=this.props.selectable,t=this.props.context.selectable;return"boolean"==typeof e?e:t}},{key:"render",value:function(){var e,t=this.props,n=t.eventKey,a=t.className,o=t.style,s=t.dragOver,c=t.dragOverGapTop,l=t.dragOverGapBottom,f=t.isLeaf,h=t.isStart,p=t.isEnd,v=t.expanded,m=t.selected,g=t.checked,y=t.halfChecked,b=t.loading,w=t.domRef,N=t.active,x=(t.data,t.onMouseMove),S=t.selectable,k=(0,u.Z)(t,K),C=this.props.context,L=C.prefixCls,E=C.filterTreeNode,_=C.keyEntities,I=C.dropContainerKey,M=C.dropTargetKey,D=C.draggingNodeKey,F=this.isDisabled(),Z=(0,A.Z)(k,{aria:!0,data:!0}),j=(_[n]||{}).level,R=p[p.length-1],T=this.isDraggable(),B=!F&&T,U=D===n,z=void 0!==S?{"aria-selected":!!S}:void 0;return d.createElement("div",(0,r.Z)({ref:w,className:P()(a,"".concat(L,"-treenode"),(e={},(0,i.Z)(e,"".concat(L,"-treenode-disabled"),F),(0,i.Z)(e,"".concat(L,"-treenode-switcher-").concat(v?"open":"close"),!f),(0,i.Z)(e,"".concat(L,"-treenode-checkbox-checked"),g),(0,i.Z)(e,"".concat(L,"-treenode-checkbox-indeterminate"),y),(0,i.Z)(e,"".concat(L,"-treenode-selected"),m),(0,i.Z)(e,"".concat(L,"-treenode-loading"),b),(0,i.Z)(e,"".concat(L,"-treenode-active"),N),(0,i.Z)(e,"".concat(L,"-treenode-leaf-last"),R),(0,i.Z)(e,"".concat(L,"-treenode-draggable"),B),(0,i.Z)(e,"dragging",U),(0,i.Z)(e,"drop-target",M===n),(0,i.Z)(e,"drop-container",I===n),(0,i.Z)(e,"drag-over",!F&&s),(0,i.Z)(e,"drag-over-gap-top",!F&&c),(0,i.Z)(e,"drag-over-gap-bottom",!F&&l),(0,i.Z)(e,"filter-node",E&&E(q(this.props))),e)),style:o,draggable:B,"aria-grabbed":U,onDragStart:B?this.onDragStart:void 0,onDragEnter:T?this.onDragEnter:void 0,onDragOver:T?this.onDragOver:void 0,onDragLeave:T?this.onDragLeave:void 0,onDrop:T?this.onDrop:void 0,onDragEnd:T?this.onDragEnd:void 0,onMouseMove:x},z,Z),d.createElement(O,{prefixCls:L,level:j,isStart:h,isEnd:p}),this.renderDragHandler(),this.renderSwitcher(),this.renderCheckbox(),this.renderSelector())}}]),n}(d.Component),V=function(e){return d.createElement(_.Consumer,null,(function(t){return d.createElement(H,(0,r.Z)({},e,{context:t}))}))};V.displayName="TreeNode",V.defaultProps={title:"---"},V.isTreeNode=1;const W=V;function Y(e,t){if(!e)return[];var n=e.slice(),r=n.indexOf(t);return r>=0&&n.splice(r,1),n}function G(e,t){var n=(e||[]).slice();return-1===n.indexOf(t)&&n.push(t),n}function $(e){return e.split("-")}function X(e,t){return"".concat(e,"-").concat(t)}function J(e,t){var n=[];return function e(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach((function(t){var r=t.key,i=t.children;n.push(r),e(i)}))}(t[e].children),n}function Q(e){if(e.parent){var t=$(e.pos);return Number(t[t.length-1])===e.parent.children.length-1}return!1}function ee(e,t,n,r,i,a,o,s,c,l){var u,f=e.clientX,d=e.clientY,h=e.target.getBoundingClientRect(),p=h.top,v=h.height,m=(("rtl"===l?-1:1)*(((null==i?void 0:i.x)||0)-f)-12)/r,g=s[n.props.eventKey];if(d<p+v/2){var y=o.findIndex((function(e){return e.key===g.key})),b=o[y<=0?0:y-1].key;g=s[b]}var w=g.key,N=g,x=g.key,S=0,k=0;if(!c.includes(w))for(var C=0;C<m&&Q(g);C+=1)g=g.parent,k+=1;var L,A=t.props.data,E=g.node,P=!0;return L=$(g.pos),0===Number(L[L.length-1])&&0===g.level&&d<p+v/2&&a({dragNode:A,dropNode:E,dropPosition:-1})&&g.key===n.props.eventKey?S=-1:(N.children||[]).length&&c.includes(x)?a({dragNode:A,dropNode:E,dropPosition:0})?S=0:P=!1:0===k?m>-1.5?a({dragNode:A,dropNode:E,dropPosition:1})?S=1:P=!1:a({dragNode:A,dropNode:E,dropPosition:0})?S=0:a({dragNode:A,dropNode:E,dropPosition:1})?S=1:P=!1:a({dragNode:A,dropNode:E,dropPosition:1})?S=1:P=!1,{dropPosition:S,dropLevelOffset:k,dropTargetKey:g.key,dropTargetPos:g.pos,dragOverNodeKey:x,dropContainerKey:0===S?null:(null===(u=g.parent)||void 0===u?void 0:u.key)||null,dropAllowed:P}}function te(e,t){if(e)return t.multiple?e.slice():e.length?[e[0]]:e}function ne(e){if(!e)return null;var t;if(Array.isArray(e))t={checkedKeys:e,halfCheckedKeys:void 0};else{if("object"!==(0,f.Z)(e))return(0,p.ZP)(!1,"`checkedKeys` is not an array or an object"),null;t={checkedKeys:e.checked||void 0,halfCheckedKeys:e.halfChecked||void 0}}return t}function re(e,t){var n=new Set;function r(e){if(!n.has(e)){var i=t[e];if(i){n.add(e);var a=i.parent;i.node.disabled||a&&r(a.key)}}}return(e||[]).forEach((function(e){r(e)})),(0,s.Z)(n)}var ie=n(5166),ae=n(3587),oe=["className","style","motion","motionNodes","motionType","onMotionStart","onMotionEnd","active","treeNodeRequiredProps"],se=function(e,t){var n=e.className,i=e.style,a=e.motion,o=e.motionNodes,s=e.motionType,c=e.onMotionStart,f=e.onMotionEnd,h=e.active,p=e.treeNodeRequiredProps,v=(0,u.Z)(e,oe),m=d.useState(!0),g=(0,l.Z)(m,2),y=g[0],b=g[1],w=d.useContext(_).prefixCls,N=d.useRef(!1),x=function(){N.current||f(),N.current=!0};return(0,d.useEffect)((function(){o&&"hide"===s&&y&&b(!1)}),[o]),(0,d.useEffect)((function(){return o&&c(),function(){o&&x()}}),[]),o?d.createElement(ae.ZP,(0,r.Z)({ref:t,visible:y},a,{motionAppear:"show"===s,onAppearEnd:x,onLeaveEnd:x}),(function(e,t){var n=e.className,i=e.style;return d.createElement("div",{ref:t,className:P()("".concat(w,"-treenode-motion"),n),style:i},o.map((function(e){var t=(0,r.Z)({},e.data),n=e.title,i=e.key,a=e.isStart,o=e.isEnd;delete t.children;var s=B(i,p);return d.createElement(W,(0,r.Z)({},t,s,{title:n,active:h,data:e.data,key:i,isStart:a,isEnd:o}))})))})):d.createElement(W,(0,r.Z)({domRef:t,className:n,style:i},v,{active:h}))};se.displayName="MotionTreeNode";const ce=d.forwardRef(se);function le(e,t,n){var r=e.findIndex((function(e){return e.key===n})),i=e[r+1],a=t.findIndex((function(e){return e.key===n}));if(i){var o=t.findIndex((function(e){return e.key===i.key}));return t.slice(a+1,o)}return t.slice(a+1)}var ue=["prefixCls","data","selectable","checkable","expandedKeys","selectedKeys","checkedKeys","loadedKeys","loadingKeys","halfCheckedKeys","keyEntities","disabled","dragging","dragOverNodeKey","dropPosition","motion","height","itemHeight","virtual","focusable","activeItem","focused","tabIndex","onKeyDown","onFocus","onBlur","onActiveChange","onListChangeStart","onListChangeEnd"],fe={width:0,height:0,display:"flex",overflow:"hidden",opacity:0,border:0,padding:0,margin:0},de=function(){},he="RC_TREE_MOTION_".concat(Math.random()),pe={key:he},ve={key:he,level:0,index:0,pos:"0",node:pe,nodes:[pe]},me={parent:null,children:[],pos:ve.pos,data:pe,title:null,key:he,isStart:[],isEnd:[]};function ge(e,t,n,r){return!1!==t&&n?e.slice(0,Math.ceil(n/r)+1):e}function ye(e){return Z(e.key,e.pos)}var be=d.forwardRef((function(e,t){var n=e.prefixCls,i=e.data,a=(e.selectable,e.checkable,e.expandedKeys),o=e.selectedKeys,s=e.checkedKeys,c=e.loadedKeys,f=e.loadingKeys,h=e.halfCheckedKeys,p=e.keyEntities,v=e.disabled,m=e.dragging,g=e.dragOverNodeKey,y=e.dropPosition,b=e.motion,w=e.height,N=e.itemHeight,x=e.virtual,S=e.focusable,k=e.activeItem,C=e.focused,L=e.tabIndex,A=e.onKeyDown,E=e.onFocus,P=e.onBlur,_=e.onActiveChange,I=e.onListChangeStart,O=e.onListChangeEnd,M=(0,u.Z)(e,ue),D=d.useRef(null),F=d.useRef(null);d.useImperativeHandle(t,(function(){return{scrollTo:function(e){D.current.scrollTo(e)},getIndentWidth:function(){return F.current.offsetWidth}}}));var j=d.useState(a),R=(0,l.Z)(j,2),T=R[0],q=R[1],K=d.useState(i),U=(0,l.Z)(K,2),z=U[0],H=U[1],V=d.useState(i),W=(0,l.Z)(V,2),Y=W[0],G=W[1],$=d.useState([]),X=(0,l.Z)($,2),J=X[0],Q=X[1],ee=d.useState(null),te=(0,l.Z)(ee,2),ne=te[0],re=te[1],ae=d.useRef(i);function oe(){var e=ae.current;H(e),G(e),Q([]),re(null),O()}ae.current=i,d.useEffect((function(){q(a);var e=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=e.length,r=t.length;if(1!==Math.abs(n-r))return{add:!1,key:null};function i(e,t){var n=new Map;e.forEach((function(e){n.set(e,!0)}));var r=t.filter((function(e){return!n.has(e)}));return 1===r.length?r[0]:null}return n<r?{add:!0,key:i(e,t)}:{add:!1,key:i(t,e)}}(T,a);if(null!==e.key)if(e.add){var t=z.findIndex((function(t){return t.key===e.key})),n=ge(le(z,i,e.key),x,w,N),r=z.slice();r.splice(t+1,0,me),G(r),Q(n),re("show")}else{var o=i.findIndex((function(t){return t.key===e.key})),s=ge(le(i,z,e.key),x,w,N),c=i.slice();c.splice(o+1,0,me),G(c),Q(s),re("hide")}else z!==i&&(H(i),G(i))}),[a,i]),d.useEffect((function(){m||oe()}),[m]);var se=b?Y:i,pe={expandedKeys:a,selectedKeys:o,loadedKeys:c,loadingKeys:f,checkedKeys:s,halfCheckedKeys:h,dragOverNodeKey:g,dropPosition:y,keyEntities:p};return d.createElement(d.Fragment,null,C&&k&&d.createElement("span",{style:fe,"aria-live":"assertive"},function(e){for(var t=String(e.data.key),n=e;n.parent;)n=n.parent,t="".concat(n.data.key," > ").concat(t);return t}(k)),d.createElement("div",null,d.createElement("input",{style:fe,disabled:!1===S||v,tabIndex:!1!==S?L:null,onKeyDown:A,onFocus:E,onBlur:P,value:"",onChange:de,"aria-label":"for screen reader"})),d.createElement("div",{className:"".concat(n,"-treenode"),"aria-hidden":!0,style:{position:"absolute",pointerEvents:"none",visibility:"hidden",height:0,overflow:"hidden"}},d.createElement("div",{className:"".concat(n,"-indent")},d.createElement("div",{ref:F,className:"".concat(n,"-indent-unit")}))),d.createElement(ie.Z,(0,r.Z)({},M,{data:se,itemKey:ye,height:w,fullHeight:!1,virtual:x,itemHeight:N,prefixCls:"".concat(n,"-list"),ref:D,onVisibleChange:function(e,t){var n=new Set(e);t.filter((function(e){return!n.has(e)})).some((function(e){return ye(e)===he}))&&oe()}}),(function(e){var t=e.pos,n=(0,r.Z)({},e.data),i=e.title,a=e.key,o=e.isStart,s=e.isEnd,c=Z(a,t);delete n.key,delete n.children;var l=B(c,pe);return d.createElement(ce,(0,r.Z)({},n,l,{title:i,active:!!k&&a===k.key,pos:t,data:e.data,isStart:o,isEnd:s,motion:b,motionNodes:a===he?J:null,motionType:ne,onMotionStart:I,onMotionEnd:oe,treeNodeRequiredProps:pe,onMouseMove:function(){_(null)}}))})))}));be.displayName="NodeList";const we=be;var Ne=function(e){(0,C.Z)(n,e);var t=(0,L.Z)(n);function n(){var e;(0,x.Z)(this,n);for(var r=arguments.length,i=new Array(r),a=0;a<r;a++)i[a]=arguments[a];return(e=t.call.apply(t,[this].concat(i))).destroyed=!1,e.delayedDragEnterLogic=void 0,e.loadingRetryTimes={},e.state={keyEntities:{},indent:null,selectedKeys:[],checkedKeys:[],halfCheckedKeys:[],loadedKeys:[],loadingKeys:[],expandedKeys:[],draggingNodeKey:null,dragChildrenKeys:[],dropTargetKey:null,dropPosition:null,dropContainerKey:null,dropLevelOffset:null,dropTargetPos:null,dropAllowed:!0,dragOverNodeKey:null,treeData:[],flattenNodes:[],focused:!1,activeKey:null,listChanging:!1,prevProps:null,fieldNames:j()},e.dragStartMousePosition=null,e.dragNode=void 0,e.currentMouseOverDroppableNodeKey=null,e.listRef=d.createRef(),e.onNodeDragStart=function(t,n){var r=e.state,i=r.expandedKeys,a=r.keyEntities,o=e.props.onDragStart,s=n.props.eventKey;e.dragNode=n,e.dragStartMousePosition={x:t.clientX,y:t.clientY};var c=Y(i,s);e.setState({draggingNodeKey:s,dragChildrenKeys:J(s,a),indent:e.listRef.current.getIndentWidth()}),e.setExpandedKeys(c),window.addEventListener("dragend",e.onWindowDragEnd),null==o||o({event:t,node:q(n.props)})},e.onNodeDragEnter=function(t,n){var r=e.state,i=r.expandedKeys,a=r.keyEntities,o=r.dragChildrenKeys,c=r.flattenNodes,l=r.indent,u=e.props,f=u.onDragEnter,d=u.onExpand,h=u.allowDrop,p=u.direction,v=n.props,m=v.pos,g=v.eventKey,y=(0,k.Z)(e).dragNode;if(e.currentMouseOverDroppableNodeKey!==g&&(e.currentMouseOverDroppableNodeKey=g),y){var b=ee(t,y,n,l,e.dragStartMousePosition,h,c,a,i,p),w=b.dropPosition,N=b.dropLevelOffset,x=b.dropTargetKey,S=b.dropContainerKey,C=b.dropTargetPos,L=b.dropAllowed,A=b.dragOverNodeKey;-1===o.indexOf(x)&&L?(e.delayedDragEnterLogic||(e.delayedDragEnterLogic={}),Object.keys(e.delayedDragEnterLogic).forEach((function(t){clearTimeout(e.delayedDragEnterLogic[t])})),y.props.eventKey!==n.props.eventKey&&(t.persist(),e.delayedDragEnterLogic[m]=window.setTimeout((function(){if(null!==e.state.draggingNodeKey){var r=(0,s.Z)(i),o=a[n.props.eventKey];o&&(o.children||[]).length&&(r=G(i,n.props.eventKey)),"expandedKeys"in e.props||e.setExpandedKeys(r),null==d||d(r,{node:q(n.props),expanded:!0,nativeEvent:t.nativeEvent})}}),800)),y.props.eventKey!==x||0!==N?(e.setState({dragOverNodeKey:A,dropPosition:w,dropLevelOffset:N,dropTargetKey:x,dropContainerKey:S,dropTargetPos:C,dropAllowed:L}),null==f||f({event:t,node:q(n.props),expandedKeys:i})):e.resetDragState()):e.resetDragState()}else e.resetDragState()},e.onNodeDragOver=function(t,n){var r=e.state,i=r.dragChildrenKeys,a=r.flattenNodes,o=r.keyEntities,s=r.expandedKeys,c=r.indent,l=e.props,u=l.onDragOver,f=l.allowDrop,d=l.direction,h=(0,k.Z)(e).dragNode;if(h){var p=ee(t,h,n,c,e.dragStartMousePosition,f,a,o,s,d),v=p.dropPosition,m=p.dropLevelOffset,g=p.dropTargetKey,y=p.dropContainerKey,b=p.dropAllowed,w=p.dropTargetPos,N=p.dragOverNodeKey;-1===i.indexOf(g)&&b&&(h.props.eventKey===g&&0===m?null===e.state.dropPosition&&null===e.state.dropLevelOffset&&null===e.state.dropTargetKey&&null===e.state.dropContainerKey&&null===e.state.dropTargetPos&&!1===e.state.dropAllowed&&null===e.state.dragOverNodeKey||e.resetDragState():v===e.state.dropPosition&&m===e.state.dropLevelOffset&&g===e.state.dropTargetKey&&y===e.state.dropContainerKey&&w===e.state.dropTargetPos&&b===e.state.dropAllowed&&N===e.state.dragOverNodeKey||e.setState({dropPosition:v,dropLevelOffset:m,dropTargetKey:g,dropContainerKey:y,dropTargetPos:w,dropAllowed:b,dragOverNodeKey:N}),null==u||u({event:t,node:q(n.props)}))}},e.onNodeDragLeave=function(t,n){e.currentMouseOverDroppableNodeKey!==n.props.eventKey||t.currentTarget.contains(t.relatedTarget)||(e.resetDragState(),e.currentMouseOverDroppableNodeKey=null);var r=e.props.onDragLeave;null==r||r({event:t,node:q(n.props)})},e.onWindowDragEnd=function(t){e.onNodeDragEnd(t,null,!0),window.removeEventListener("dragend",e.onWindowDragEnd)},e.onNodeDragEnd=function(t,n){var r=e.props.onDragEnd;e.setState({dragOverNodeKey:null}),e.cleanDragState(),null==r||r({event:t,node:q(n.props)}),e.dragNode=null,window.removeEventListener("dragend",e.onWindowDragEnd)},e.onNodeDrop=function(t,n){var r,i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=e.state,o=a.dragChildrenKeys,s=a.dropPosition,l=a.dropTargetKey,u=a.dropTargetPos;if(a.dropAllowed){var f=e.props.onDrop;if(e.setState({dragOverNodeKey:null}),e.cleanDragState(),null!==l){var d=(0,c.Z)((0,c.Z)({},B(l,e.getTreeNodeRequiredProps())),{},{active:(null===(r=e.getActiveItem())||void 0===r?void 0:r.key)===l,data:e.state.keyEntities[l].node}),h=-1!==o.indexOf(l);(0,p.ZP)(!h,"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.");var v=$(u),m={event:t,node:q(d),dragNode:e.dragNode?q(e.dragNode.props):null,dragNodesKeys:[e.dragNode.props.eventKey].concat(o),dropToGap:0!==s,dropPosition:s+Number(v[v.length-1])};i||null==f||f(m),e.dragNode=null}}},e.cleanDragState=function(){null!==e.state.draggingNodeKey&&e.setState({draggingNodeKey:null,dropPosition:null,dropContainerKey:null,dropTargetKey:null,dropLevelOffset:null,dropAllowed:!0,dragOverNodeKey:null}),e.dragStartMousePosition=null,e.currentMouseOverDroppableNodeKey=null},e.triggerExpandActionExpand=function(t,n){var r=e.state,i=r.expandedKeys,a=r.flattenNodes,o=n.expanded,s=n.key;if(!(n.isLeaf||t.shiftKey||t.metaKey||t.ctrlKey)){var l=a.filter((function(e){return e.key===s}))[0],u=q((0,c.Z)((0,c.Z)({},B(s,e.getTreeNodeRequiredProps())),{},{data:l.data}));e.setExpandedKeys(o?Y(i,s):G(i,s)),e.onNodeExpand(t,u)}},e.onNodeClick=function(t,n){var r=e.props,i=r.onClick;"click"===r.expandAction&&e.triggerExpandActionExpand(t,n),null==i||i(t,n)},e.onNodeDoubleClick=function(t,n){var r=e.props,i=r.onDoubleClick;"doubleClick"===r.expandAction&&e.triggerExpandActionExpand(t,n),null==i||i(t,n)},e.onNodeSelect=function(t,n){var r=e.state.selectedKeys,i=e.state,a=i.keyEntities,o=i.fieldNames,s=e.props,c=s.onSelect,l=s.multiple,u=n.selected,f=n[o.key],d=!u,h=(r=d?l?G(r,f):[f]:Y(r,f)).map((function(e){var t=a[e];return t?t.node:null})).filter((function(e){return e}));e.setUncontrolledState({selectedKeys:r}),null==c||c(r,{event:"select",selected:d,node:n,selectedNodes:h,nativeEvent:t.nativeEvent})},e.onNodeCheck=function(t,n,r){var i,a=e.state,o=a.keyEntities,c=a.checkedKeys,l=a.halfCheckedKeys,u=e.props,f=u.checkStrictly,d=u.onCheck,h=n.key,p={event:"check",node:n,checked:r,nativeEvent:t.nativeEvent};if(f){var v=r?G(c,h):Y(c,h);i={checked:v,halfChecked:Y(l,h)},p.checkedNodes=v.map((function(e){return o[e]})).filter((function(e){return e})).map((function(e){return e.node})),e.setUncontrolledState({checkedKeys:v})}else{var m=g([].concat((0,s.Z)(c),[h]),!0,o),y=m.checkedKeys,b=m.halfCheckedKeys;if(!r){var w=new Set(y);w.delete(h);var N=g(Array.from(w),{checked:!1,halfCheckedKeys:b},o);y=N.checkedKeys,b=N.halfCheckedKeys}i=y,p.checkedNodes=[],p.checkedNodesPositions=[],p.halfCheckedKeys=b,y.forEach((function(e){var t=o[e];if(t){var n=t.node,r=t.pos;p.checkedNodes.push(n),p.checkedNodesPositions.push({node:n,pos:r})}})),e.setUncontrolledState({checkedKeys:y},!1,{halfCheckedKeys:b})}null==d||d(i,p)},e.onNodeLoad=function(t){var n=t.key,r=new Promise((function(r,i){e.setState((function(a){var o=a.loadedKeys,s=void 0===o?[]:o,c=a.loadingKeys,l=void 0===c?[]:c,u=e.props,f=u.loadData,d=u.onLoad;return f&&-1===s.indexOf(n)&&-1===l.indexOf(n)?(f(t).then((function(){var i=G(e.state.loadedKeys,n);null==d||d(i,{event:"load",node:t}),e.setUncontrolledState({loadedKeys:i}),e.setState((function(e){return{loadingKeys:Y(e.loadingKeys,n)}})),r()})).catch((function(t){if(e.setState((function(e){return{loadingKeys:Y(e.loadingKeys,n)}})),e.loadingRetryTimes[n]=(e.loadingRetryTimes[n]||0)+1,e.loadingRetryTimes[n]>=10){var a=e.state.loadedKeys;(0,p.ZP)(!1,"Retry for `loadData` many times but still failed. No more retry."),e.setUncontrolledState({loadedKeys:G(a,n)}),r()}i(t)})),{loadingKeys:G(l,n)}):null}))}));return r.catch((function(){})),r},e.onNodeMouseEnter=function(t,n){var r=e.props.onMouseEnter;null==r||r({event:t,node:n})},e.onNodeMouseLeave=function(t,n){var r=e.props.onMouseLeave;null==r||r({event:t,node:n})},e.onNodeContextMenu=function(t,n){var r=e.props.onRightClick;r&&(t.preventDefault(),r({event:t,node:n}))},e.onFocus=function(){var t=e.props.onFocus;e.setState({focused:!0});for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];null==t||t.apply(void 0,r)},e.onBlur=function(){var t=e.props.onBlur;e.setState({focused:!1}),e.onActiveChange(null);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];null==t||t.apply(void 0,r)},e.getTreeNodeRequiredProps=function(){var t=e.state;return{expandedKeys:t.expandedKeys||[],selectedKeys:t.selectedKeys||[],loadedKeys:t.loadedKeys||[],loadingKeys:t.loadingKeys||[],checkedKeys:t.checkedKeys||[],halfCheckedKeys:t.halfCheckedKeys||[],dragOverNodeKey:t.dragOverNodeKey,dropPosition:t.dropPosition,keyEntities:t.keyEntities}},e.setExpandedKeys=function(t){var n=e.state,r=R(n.treeData,t,n.fieldNames);e.setUncontrolledState({expandedKeys:t,flattenNodes:r},!0)},e.onNodeExpand=function(t,n){var r=e.state.expandedKeys,i=e.state,a=i.listChanging,o=i.fieldNames,s=e.props,c=s.onExpand,l=s.loadData,u=n.expanded,f=n[o.key];if(!a){var d=r.indexOf(f),h=!u;if((0,p.ZP)(u&&-1!==d||!u&&-1===d,"Expand state not sync with index check"),r=h?G(r,f):Y(r,f),e.setExpandedKeys(r),null==c||c(r,{node:n,expanded:h,nativeEvent:t.nativeEvent}),h&&l){var v=e.onNodeLoad(n);v&&v.then((function(){var t=R(e.state.treeData,r,o);e.setUncontrolledState({flattenNodes:t})})).catch((function(){var t=Y(e.state.expandedKeys,f);e.setExpandedKeys(t)}))}}},e.onListChangeStart=function(){e.setUncontrolledState({listChanging:!0})},e.onListChangeEnd=function(){setTimeout((function(){e.setUncontrolledState({listChanging:!1})}))},e.onActiveChange=function(t){var n=e.state.activeKey,r=e.props.onActiveChange;n!==t&&(e.setState({activeKey:t}),null!==t&&e.scrollTo({key:t}),null==r||r(t))},e.getActiveItem=function(){var t=e.state,n=t.activeKey,r=t.flattenNodes;return null===n?null:r.find((function(e){return e.key===n}))||null},e.offsetActiveKey=function(t){var n=e.state,r=n.flattenNodes,i=n.activeKey,a=r.findIndex((function(e){return e.key===i}));-1===a&&t<0&&(a=r.length);var o=r[a=(a+t+r.length)%r.length];if(o){var s=o.key;e.onActiveChange(s)}else e.onActiveChange(null)},e.onKeyDown=function(t){var n=e.state,r=n.activeKey,i=n.expandedKeys,a=n.checkedKeys,o=n.fieldNames,s=e.props,l=s.onKeyDown,u=s.checkable,f=s.selectable;switch(t.which){case w.Z.UP:e.offsetActiveKey(-1),t.preventDefault();break;case w.Z.DOWN:e.offsetActiveKey(1),t.preventDefault()}var d=e.getActiveItem();if(d&&d.data){var h=e.getTreeNodeRequiredProps(),p=!1===d.data.isLeaf||!!(d.data[o.children]||[]).length,v=q((0,c.Z)((0,c.Z)({},B(r,h)),{},{data:d.data,active:!0}));switch(t.which){case w.Z.LEFT:p&&i.includes(r)?e.onNodeExpand({},v):d.parent&&e.onActiveChange(d.parent.key),t.preventDefault();break;case w.Z.RIGHT:p&&!i.includes(r)?e.onNodeExpand({},v):d.children&&d.children.length&&e.onActiveChange(d.children[0].key),t.preventDefault();break;case w.Z.ENTER:case w.Z.SPACE:!u||v.disabled||!1===v.checkable||v.disableCheckbox?u||!f||v.disabled||!1===v.selectable||e.onNodeSelect({},v):e.onNodeCheck({},v,!a.includes(r))}}null==l||l(t)},e.setUncontrolledState=function(t){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(!e.destroyed){var i=!1,a=!0,o={};Object.keys(t).forEach((function(n){n in e.props?a=!1:(i=!0,o[n]=t[n])})),!i||n&&!a||e.setState((0,c.Z)((0,c.Z)({},o),r))}},e.scrollTo=function(t){e.listRef.current.scrollTo(t)},e}return(0,S.Z)(n,[{key:"componentDidMount",value:function(){this.destroyed=!1,this.onUpdated()}},{key:"componentDidUpdate",value:function(){this.onUpdated()}},{key:"onUpdated",value:function(){var e=this.props.activeKey;void 0!==e&&e!==this.state.activeKey&&(this.setState({activeKey:e}),null!==e&&this.scrollTo({key:e}))}},{key:"componentWillUnmount",value:function(){window.removeEventListener("dragend",this.onWindowDragEnd),this.destroyed=!0}},{key:"resetDragState",value:function(){this.setState({dragOverNodeKey:null,dropPosition:null,dropLevelOffset:null,dropTargetKey:null,dropContainerKey:null,dropTargetPos:null,dropAllowed:!1})}},{key:"render",value:function(){var e,t,n=this.state,a=n.focused,o=n.flattenNodes,s=n.keyEntities,c=n.draggingNodeKey,l=n.activeKey,u=n.dropLevelOffset,h=n.dropContainerKey,p=n.dropTargetKey,v=n.dropPosition,m=n.dragOverNodeKey,g=n.indent,y=this.props,b=y.prefixCls,w=y.className,N=y.style,x=y.showLine,S=y.focusable,k=y.tabIndex,C=void 0===k?0:k,L=y.selectable,E=y.showIcon,I=y.icon,O=y.switcherIcon,M=y.draggable,D=y.checkable,F=y.checkStrictly,Z=y.disabled,j=y.motion,R=y.loadData,T=y.filterTreeNode,B=y.height,q=y.itemHeight,K=y.virtual,U=y.titleRender,z=y.dropIndicatorRender,H=y.onContextMenu,V=y.onScroll,W=y.direction,Y=y.rootClassName,G=y.rootStyle,$=(0,A.Z)(this.props,{aria:!0,data:!0});return M&&(t="object"===(0,f.Z)(M)?M:"function"==typeof M?{nodeDraggable:M}:{}),d.createElement(_.Provider,{value:{prefixCls:b,selectable:L,showIcon:E,icon:I,switcherIcon:O,draggable:t,draggingNodeKey:c,checkable:D,checkStrictly:F,disabled:Z,keyEntities:s,dropLevelOffset:u,dropContainerKey:h,dropTargetKey:p,dropPosition:v,dragOverNodeKey:m,indent:g,direction:W,dropIndicatorRender:z,loadData:R,filterTreeNode:T,titleRender:U,onNodeClick:this.onNodeClick,onNodeDoubleClick:this.onNodeDoubleClick,onNodeExpand:this.onNodeExpand,onNodeSelect:this.onNodeSelect,onNodeCheck:this.onNodeCheck,onNodeLoad:this.onNodeLoad,onNodeMouseEnter:this.onNodeMouseEnter,onNodeMouseLeave:this.onNodeMouseLeave,onNodeContextMenu:this.onNodeContextMenu,onNodeDragStart:this.onNodeDragStart,onNodeDragEnter:this.onNodeDragEnter,onNodeDragOver:this.onNodeDragOver,onNodeDragLeave:this.onNodeDragLeave,onNodeDragEnd:this.onNodeDragEnd,onNodeDrop:this.onNodeDrop}},d.createElement("div",{role:"tree",className:P()(b,w,Y,(e={},(0,i.Z)(e,"".concat(b,"-show-line"),x),(0,i.Z)(e,"".concat(b,"-focused"),a),(0,i.Z)(e,"".concat(b,"-active-focused"),null!==l),e)),style:G},d.createElement(we,(0,r.Z)({ref:this.listRef,prefixCls:b,style:N,data:o,disabled:Z,selectable:L,checkable:!!D,motion:j,dragging:null!==c,height:B,itemHeight:q,virtual:K,focusable:S,focused:a,tabIndex:C,activeItem:this.getActiveItem(),onFocus:this.onFocus,onBlur:this.onBlur,onKeyDown:this.onKeyDown,onActiveChange:this.onActiveChange,onListChangeStart:this.onListChangeStart,onListChangeEnd:this.onListChangeEnd,onContextMenu:H,onScroll:V},this.getTreeNodeRequiredProps(),$))))}}],[{key:"getDerivedStateFromProps",value:function(e,t){var n,r=t.prevProps,a={prevProps:e};function o(t){return!r&&t in e||r&&r[t]!==e[t]}var s=t.fieldNames;if(o("fieldNames")&&(s=j(e.fieldNames),a.fieldNames=s),o("treeData")?n=e.treeData:o("children")&&((0,p.ZP)(!1,"`children` of Tree is deprecated. Please use `treeData` instead."),n=function e(t){return(0,D.Z)(t).map((function(t){if(!function(e){return e&&e.type&&e.type.isTreeNode}(t))return(0,p.ZP)(!t,"Tree/TreeNode can only accept TreeNode as children."),null;var n=t.key,r=t.props,i=r.children,a=(0,u.Z)(r,F),o=(0,c.Z)({key:n},a),s=e(i);return s.length&&(o.children=s),o})).filter((function(e){return e}))}(e.children)),n){a.treeData=n;var l=T(n,{fieldNames:s});a.keyEntities=(0,c.Z)((0,i.Z)({},he,ve),l.keyEntities)}var f,d=a.keyEntities||t.keyEntities;if(o("expandedKeys")||r&&o("autoExpandParent"))a.expandedKeys=e.autoExpandParent||!r&&e.defaultExpandParent?re(e.expandedKeys,d):e.expandedKeys;else if(!r&&e.defaultExpandAll){var h=(0,c.Z)({},d);delete h[he],a.expandedKeys=Object.keys(h).map((function(e){return h[e].key}))}else!r&&e.defaultExpandedKeys&&(a.expandedKeys=e.autoExpandParent||e.defaultExpandParent?re(e.defaultExpandedKeys,d):e.defaultExpandedKeys);if(a.expandedKeys||delete a.expandedKeys,n||a.expandedKeys){var v=R(n||t.treeData,a.expandedKeys||t.expandedKeys,s);a.flattenNodes=v}if((e.selectable&&(o("selectedKeys")?a.selectedKeys=te(e.selectedKeys,e):!r&&e.defaultSelectedKeys&&(a.selectedKeys=te(e.defaultSelectedKeys,e))),e.checkable)&&(o("checkedKeys")?f=ne(e.checkedKeys)||{}:!r&&e.defaultCheckedKeys?f=ne(e.defaultCheckedKeys)||{}:n&&(f=ne(e.checkedKeys)||{checkedKeys:t.checkedKeys,halfCheckedKeys:t.halfCheckedKeys}),f)){var m=f,y=m.checkedKeys,b=void 0===y?[]:y,w=m.halfCheckedKeys,N=void 0===w?[]:w;if(!e.checkStrictly){var x=g(b,!0,d);b=x.checkedKeys,N=x.halfCheckedKeys}a.checkedKeys=b,a.halfCheckedKeys=N}return o("loadedKeys")&&(a.loadedKeys=e.loadedKeys),a}}]),n}(d.Component);Ne.defaultProps={prefixCls:"rc-tree",showLine:!1,showIcon:!0,selectable:!0,multiple:!1,checkable:!1,disabled:!1,checkStrictly:!1,draggable:!1,defaultExpandParent:!0,autoExpandParent:!1,defaultExpandAll:!1,defaultExpandedKeys:[],defaultCheckedKeys:[],defaultSelectedKeys:[],dropIndicatorRender:function(e){var t=e.dropPosition,n=e.dropLevelOffset,r=e.indent,i={pointerEvents:"none",position:"absolute",right:0,backgroundColor:"red",height:2};switch(t){case-1:i.top=0,i.left=-n*r;break;case 1:i.bottom=0,i.left=-n*r;break;case 0:i.bottom=0,i.left=r}return d.createElement("div",{style:i})},allowDrop:function(){return!0},expandAction:!1},Ne.TreeNode=W;const xe=Ne;const Se=d.createContext(null);const ke=d.createContext(null);function Ce(e){return!e||e.disabled||e.disableCheckbox||!1===e.checkable}function Le(e){return null==e}var Ae={width:0,height:0,display:"flex",overflow:"hidden",opacity:0,border:0,padding:0,margin:0},Ee=function(e,t){var n=(0,h.lk)(),i=n.prefixCls,a=n.multiple,o=n.searchValue,c=n.toggleOpen,u=n.open,f=n.notFoundContent,p=d.useContext(ke),v=p.virtual,m=p.listHeight,g=p.listItemHeight,y=p.treeData,b=p.fieldNames,x=p.onSelect,S=p.dropdownMatchSelectWidth,k=p.treeExpandAction,C=d.useContext(Se),L=C.checkable,A=C.checkedKeys,E=C.halfCheckedKeys,P=C.treeExpandedKeys,_=C.treeDefaultExpandAll,I=C.treeDefaultExpandedKeys,O=C.onTreeExpand,M=C.treeIcon,D=C.showTreeIcon,F=C.switcherIcon,Z=C.treeLine,j=C.treeNodeFilterProp,R=C.loadData,T=C.treeLoadedKeys,B=C.treeMotion,q=C.onTreeLoad,K=C.keyEntities,U=d.useRef(),z=(0,N.Z)((function(){return y}),[u,y],(function(e,t){return t[0]&&e[1]!==t[1]})),H=d.useMemo((function(){return L?{checked:A,halfChecked:E}:null}),[L,A,E]);d.useEffect((function(){var e;u&&!a&&A.length&&(null===(e=U.current)||void 0===e||e.scrollTo({key:A[0]}))}),[u]);var V=String(o).toLowerCase(),W=d.useState(I),Y=(0,l.Z)(W,2),G=Y[0],$=Y[1],X=d.useState(null),J=(0,l.Z)(X,2),Q=J[0],ee=J[1],te=d.useMemo((function(){return P?(0,s.Z)(P):o?Q:G}),[G,Q,P,o]);d.useEffect((function(){o&&ee(function(e,t){var n=[];return function e(r){r.forEach((function(r){n.push(r[t.value]);var i=r[t.children];i&&e(i)}))}(e),n}(y,b))}),[o]);var ne=function(e){e.preventDefault()},re=function(e,t){var n=t.node;L&&Ce(n)||(x(n.key,{selected:!A.includes(n.key)}),a||c(!1))},ie=d.useState(null),ae=(0,l.Z)(ie,2),oe=ae[0],se=ae[1],ce=K[oe];if(d.useImperativeHandle(t,(function(){var e;return{scrollTo:null===(e=U.current)||void 0===e?void 0:e.scrollTo,onKeyDown:function(e){var t;switch(e.which){case w.Z.UP:case w.Z.DOWN:case w.Z.LEFT:case w.Z.RIGHT:null===(t=U.current)||void 0===t||t.onKeyDown(e);break;case w.Z.ENTER:if(ce){var n=(null==ce?void 0:ce.node)||{},r=n.selectable,i=n.value;!1!==r&&re(0,{node:{key:oe},selected:!A.includes(i)})}break;case w.Z.ESC:c(!1)}},onKeyUp:function(){}}})),0===z.length)return d.createElement("div",{role:"listbox",className:"".concat(i,"-empty"),onMouseDown:ne},f);var le={fieldNames:b};return T&&(le.loadedKeys=T),te&&(le.expandedKeys=te),d.createElement("div",{onMouseDown:ne},ce&&u&&d.createElement("span",{style:Ae,"aria-live":"assertive"},ce.node.value),d.createElement(xe,(0,r.Z)({ref:U,focusable:!1,prefixCls:"".concat(i,"-tree"),treeData:z,height:m,itemHeight:g,virtual:!1!==v&&!1!==S,multiple:a,icon:M,showIcon:D,switcherIcon:F,showLine:Z,loadData:o?null:R,motion:B,activeKey:oe,checkable:L,checkStrictly:!0,checkedKeys:H,selectedKeys:L?[]:A,defaultExpandAll:_},le,{onActiveChange:se,onSelect:re,onCheck:re,onExpand:function(e){$(e),ee(e),O&&O(e)},onLoad:q,filterTreeNode:function(e){return!!V&&String(e[j]).toLowerCase().includes(V)},expandAction:k})))},Pe=d.forwardRef(Ee);Pe.displayName="OptionList";const _e=Pe;const Ie=function(){return null};var Oe="SHOW_ALL",Me="SHOW_PARENT",De="SHOW_CHILD";function Fe(e,t,n,r){var i=new Set(e);return t===De?e.filter((function(e){var t=n[e];return!(t&&t.children&&t.children.some((function(e){var t=e.node;return i.has(t[r.value])}))&&t.children.every((function(e){var t=e.node;return Ce(t)||i.has(t[r.value])})))})):t===Me?e.filter((function(e){var t=n[e],r=t?t.parent:null;return!(r&&!Ce(r.node)&&i.has(r.key))})):e}var Ze=["children","value"];function je(e){return(0,D.Z)(e).map((function(e){if(!d.isValidElement(e)||!e.type)return null;var t=e.key,n=e.props,r=n.children,i=n.value,a=(0,u.Z)(n,Ze),o=(0,c.Z)({key:t,value:i},a),s=je(r);return s.length&&(o.children=s),o})).filter((function(e){return e}))}function Re(e){if(!e)return e;var t=(0,c.Z)({},e);return"props"in t||Object.defineProperty(t,"props",{get:function(){return(0,p.ZP)(!1,"New `rc-tree-select` not support return node instance as argument anymore. Please consider to remove `props` access."),t}}),t}function Te(e,t,n){return d.useMemo((function(){return e?n?function(e,t){var n=t.id,r=t.pId,i=t.rootPId,a={},o=[];return e.map((function(e){var t=(0,c.Z)({},e),r=t[n];return a[r]=t,t.key=t.key||r,t})).forEach((function(e){var t=e[r],n=a[t];n&&(n.children=n.children||[],n.children.push(e)),(t===i||!n&&null===i)&&o.push(e)})),o}(e,(0,c.Z)({id:"id",pId:"pId",rootPId:null},!0!==n?n:{})):e:je(t)}),[t,n,e])}function Be(e){var t=d.useRef();t.current=e;var n=d.useCallback((function(){return t.current.apply(t,arguments)}),[]);return n}var qe=["id","prefixCls","value","defaultValue","onChange","onSelect","onDeselect","searchValue","inputValue","onSearch","autoClearSearchValue","filterTreeNode","treeNodeFilterProp","showCheckedStrategy","treeNodeLabelProp","multiple","treeCheckable","treeCheckStrictly","labelInValue","fieldNames","treeDataSimpleMode","treeData","children","loadData","treeLoadedKeys","onTreeLoad","treeDefaultExpandAll","treeExpandedKeys","treeDefaultExpandedKeys","onTreeExpand","treeExpandAction","virtual","listHeight","listItemHeight","onDropdownVisibleChange","dropdownMatchSelectWidth","treeLine","treeIcon","showTreeIcon","switcherIcon","treeMotion"];var Ke=d.forwardRef((function(e,t){var n=e.id,a=e.prefixCls,o=void 0===a?"rc-tree-select":a,v=e.value,m=e.defaultValue,w=e.onChange,N=e.onSelect,x=e.onDeselect,S=e.searchValue,k=e.inputValue,C=e.onSearch,L=e.autoClearSearchValue,A=void 0===L||L,E=e.filterTreeNode,P=e.treeNodeFilterProp,_=void 0===P?"value":P,I=e.showCheckedStrategy,O=void 0===I?De:I,M=e.treeNodeLabelProp,D=e.multiple,F=e.treeCheckable,Z=e.treeCheckStrictly,j=e.labelInValue,R=e.fieldNames,B=e.treeDataSimpleMode,q=e.treeData,K=e.children,U=e.loadData,z=e.treeLoadedKeys,H=e.onTreeLoad,V=e.treeDefaultExpandAll,W=e.treeExpandedKeys,Y=e.treeDefaultExpandedKeys,G=e.onTreeExpand,$=e.treeExpandAction,X=e.virtual,J=e.listHeight,Q=void 0===J?200:J,ee=e.listItemHeight,te=void 0===ee?20:ee,ne=e.onDropdownVisibleChange,re=e.dropdownMatchSelectWidth,ie=void 0===re||re,ae=e.treeLine,oe=e.treeIcon,se=e.showTreeIcon,ce=e.switcherIcon,le=e.treeMotion,ue=(0,u.Z)(e,qe),fe=(0,y.ZP)(n),de=F&&!Z,he=F||Z,pe=Z||j,ve=he||D;var me,ge,ye=d.useMemo((function(){return function(e){var t=e||{},n=t.label,r=t.value||"value";return{_title:n?[n]:["title","label"],value:r,key:r,children:t.children||"children"}}(R)}),[JSON.stringify(R)]),be=(0,b.Z)("",{value:void 0!==S?S:k,postState:function(e){return e||""}}),we=(0,l.Z)(be,2),Ne=we[0],xe=we[1],Ce=Te(q,K,B),Ae=function(e,t){return d.useMemo((function(){return T(e,{fieldNames:t,initWrapper:function(e){return(0,c.Z)((0,c.Z)({},e),{},{valueEntities:new Map})},processEntity:function(e,n){var r=e.node[t.value];n.valueEntities.set(r,e)}})}),[e,t])}(Ce,ye),Ee=Ae.keyEntities,Pe=Ae.valueEntities,Oe=d.useCallback((function(e){var t=[],n=[];return e.forEach((function(e){Pe.has(e)?n.push(e):t.push(e)})),{missingRawValues:t,existRawValues:n}}),[Pe]),Me=function(e,t,n){var r=n.treeNodeFilterProp,a=n.filterTreeNode,o=n.fieldNames.children;return d.useMemo((function(){if(!t||!1===a)return e;var n;if("function"==typeof a)n=a;else{var s=t.toUpperCase();n=function(e,t){var n=t[r];return String(n).toUpperCase().includes(s)}}return function e(r){var a=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return r.map((function(r){var s=r[o],l=a||n(t,Re(r)),u=e(s||[],l);return l||u.length?(0,c.Z)((0,c.Z)({},r),{},(0,i.Z)({isLeaf:void 0},o,u)):null})).filter((function(e){return e}))}(e)}),[e,t,o,r,a])}(Ce,Ne,{fieldNames:ye,treeNodeFilterProp:_,filterTreeNode:E}),Ze=d.useCallback((function(e){if(e){if(M)return e[M];for(var t=ye._title,n=0;n<t.length;n+=1){var r=e[t[n]];if(void 0!==r)return r}}}),[ye,M]),je=d.useCallback((function(e){var t=function(e){return Array.isArray(e)?e:void 0!==e?[e]:[]}(e);return t.map((function(e){return function(e){return!e||"object"!==(0,f.Z)(e)}(e)?{value:e}:e}))}),[]),Ke=d.useCallback((function(e){return je(e).map((function(e){var t,n,r=e.label,i=e.value,a=e.halfChecked,o=Pe.get(i);o&&(r=null!==(n=r)&&void 0!==n?n:Ze(o.node),t=o.node.disabled);return{label:r,value:i,halfChecked:a,disabled:t}}))}),[Pe,Ze,je]),Ue=(0,b.Z)(m,{value:v}),ze=(0,l.Z)(Ue,2),He=ze[0],Ve=ze[1],We=d.useMemo((function(){return je(He)}),[je,He]),Ye=d.useMemo((function(){var e=[],t=[];return We.forEach((function(n){n.halfChecked?t.push(n):e.push(n)})),[e,t]}),[We]),Ge=(0,l.Z)(Ye,2),$e=Ge[0],Xe=Ge[1],Je=d.useMemo((function(){return $e.map((function(e){return e.value}))}),[$e]),Qe=function(e,t,n,r){return d.useMemo((function(){var i=e.map((function(e){return e.value})),a=t.map((function(e){return e.value})),o=i.filter((function(e){return!r[e]}));if(n){var c=g(i,!0,r);i=c.checkedKeys,a=c.halfCheckedKeys}return[Array.from(new Set([].concat((0,s.Z)(o),(0,s.Z)(i)))),a]}),[e,t,n,r])}($e,Xe,de,Ee),et=(0,l.Z)(Qe,2),tt=et[0],nt=et[1],rt=d.useMemo((function(){var e=Fe(tt,O,Ee,ye).map((function(e){var t,n,r;return null!==(t=null===(n=Ee[e])||void 0===n||null===(r=n.node)||void 0===r?void 0:r[ye.value])&&void 0!==t?t:e})).map((function(e){var t=$e.find((function(t){return t.value===e}));return{value:e,label:null==t?void 0:t.label}})),t=Ke(e),n=t[0];return!ve&&n&&Le(n.value)&&Le(n.label)?[]:t.map((function(e){var t;return(0,c.Z)((0,c.Z)({},e),{},{label:null!==(t=e.label)&&void 0!==t?t:e.value})}))}),[ye,ve,tt,$e,Ke,O,Ee]),it=(me=rt,ge=d.useRef({valueLabels:new Map}),d.useMemo((function(){var e=ge.current.valueLabels,t=new Map,n=me.map((function(n){var r,i=n.value,a=null!==(r=n.label)&&void 0!==r?r:e.get(i);return t.set(i,a),(0,c.Z)((0,c.Z)({},n),{},{label:a})}));return ge.current.valueLabels=t,[n]}),[me])),at=(0,l.Z)(it,1)[0],ot=Be((function(e,t,n){var r=Ke(e);if(Ve(r),A&&xe(""),w){var i=e;if(de){var a=Fe(e,O,Ee,ye);i=a.map((function(e){var t=Pe.get(e);return t?t.node[ye.value]:e}))}var o=t||{triggerValue:void 0,selected:void 0},c=o.triggerValue,l=o.selected,u=i;if(Z){var f=Xe.filter((function(e){return!i.includes(e.value)}));u=[].concat((0,s.Z)(u),(0,s.Z)(f))}var h=Ke(u),v={preValue:$e,triggerValue:c},m=!0;(Z||"selection"===n&&!l)&&(m=!1),function(e,t,n,r,i,a){var o=null,s=null;function c(){s||(s=[],function e(r){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"0",c=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return r.map((function(r,l){var u="".concat(i,"-").concat(l),f=r[a.value],h=n.includes(f),p=e(r[a.children]||[],u,h),v=d.createElement(Ie,r,p.map((function(e){return e.node})));if(t===f&&(o=v),h){var m={pos:u,node:v,children:p};return c||s.push(m),m}return null})).filter((function(e){return e}))}(r),s.sort((function(e,t){var r=e.node.props.value,i=t.node.props.value;return n.indexOf(r)-n.indexOf(i)})))}Object.defineProperty(e,"triggerNode",{get:function(){return(0,p.ZP)(!1,"`triggerNode` is deprecated. Please consider decoupling data with node."),c(),o}}),Object.defineProperty(e,"allCheckedNodes",{get:function(){return(0,p.ZP)(!1,"`allCheckedNodes` is deprecated. Please consider decoupling data with node."),c(),i?s:s.map((function(e){return e.node}))}})}(v,c,e,Ce,m,ye),he?v.checked=l:v.selected=l;var g=pe?h:h.map((function(e){return e.value}));w(ve?g:g[0],pe?null:h.map((function(e){return e.label})),v)}})),st=d.useCallback((function(e,t){var n,r=t.selected,i=t.source,a=Ee[e],o=null==a?void 0:a.node,c=null!==(n=null==o?void 0:o[ye.value])&&void 0!==n?n:e;if(ve){var l=r?[].concat((0,s.Z)(Je),[c]):tt.filter((function(e){return e!==c}));if(de){var u,f=Oe(l),d=f.missingRawValues,h=f.existRawValues.map((function(e){return Pe.get(e).key}));if(r)u=g(h,!0,Ee).checkedKeys;else u=g(h,{checked:!1,halfCheckedKeys:nt},Ee).checkedKeys;l=[].concat((0,s.Z)(d),(0,s.Z)(u.map((function(e){return Ee[e].node[ye.value]}))))}ot(l,{selected:r,triggerValue:c},i||"option")}else ot([c],{selected:!0,triggerValue:c},"option");r||!ve?null==N||N(c,Re(o)):null==x||x(c,Re(o))}),[Oe,Pe,Ee,ye,ve,Je,ot,de,N,x,tt,nt]),ct=d.useCallback((function(e){if(ne){var t={};Object.defineProperty(t,"documentClickClose",{get:function(){return(0,p.ZP)(!1,"Second param of `onDropdownVisibleChange` has been removed."),!1}}),ne(e,t)}}),[ne]),lt=Be((function(e,t){var n=e.map((function(e){return e.value}));"clear"!==t.type?t.values.length&&st(t.values[0].value,{selected:!1,source:"selection"}):ot(n,{},"selection")})),ut=d.useMemo((function(){return{virtual:X,dropdownMatchSelectWidth:ie,listHeight:Q,listItemHeight:te,treeData:Me,fieldNames:ye,onSelect:st,treeExpandAction:$}}),[X,ie,Q,te,Me,ye,st,$]),ft=d.useMemo((function(){return{checkable:he,loadData:U,treeLoadedKeys:z,onTreeLoad:H,checkedKeys:tt,halfCheckedKeys:nt,treeDefaultExpandAll:V,treeExpandedKeys:W,treeDefaultExpandedKeys:Y,onTreeExpand:G,treeIcon:oe,treeMotion:le,showTreeIcon:se,switcherIcon:ce,treeLine:ae,treeNodeFilterProp:_,keyEntities:Ee}}),[he,U,z,H,tt,nt,V,W,Y,G,oe,le,se,ce,ae,_,Ee]);return d.createElement(ke.Provider,{value:ut},d.createElement(Se.Provider,{value:ft},d.createElement(h.Ac,(0,r.Z)({ref:t},ue,{id:fe,prefixCls:o,mode:ve?"multiple":void 0,displayValues:at,onDisplayValuesChange:lt,searchValue:Ne,onSearch:function(e){xe(e),null==C||C(e)},OptionList:_e,emptyOptions:!Ce.length,onDropdownVisibleChange:ct,dropdownMatchSelectWidth:ie}))))}));Ke.TreeNode=Ie,Ke.SHOW_ALL=Oe,Ke.SHOW_PARENT=Me,Ke.SHOW_CHILD=De;const Ue=Ke;var ze=n(3124),He=n(5065),Ve=n(8866),We=n(7647),Ye=n(5223),Ge=n(6163);const $e={icon:{tag:"svg",attrs:{viewBox:"0 0 1024 1024",focusable:"false"},children:[{tag:"path",attrs:{d:"M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z"}}]},name:"caret-down",theme:"filled"};var Xe=n(7713),Je=function(e,t){return d.createElement(Xe.Z,(0,c.Z)((0,c.Z)({},e),{},{ref:t,icon:$e}))};Je.displayName="CaretDownFilled";const Qe=d.forwardRef(Je);const et={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494z"}}]},name:"file",theme:"outlined"};var tt=function(e,t){return d.createElement(Xe.Z,(0,c.Z)((0,c.Z)({},e),{},{ref:t,icon:et}))};tt.displayName="FileOutlined";const nt=d.forwardRef(tt);var rt=n(9267);const it={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M328 544h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"}},{tag:"path",attrs:{d:"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"}}]},name:"minus-square",theme:"outlined"};var at=function(e,t){return d.createElement(Xe.Z,(0,c.Z)((0,c.Z)({},e),{},{ref:t,icon:it}))};at.displayName="MinusSquareOutlined";const ot=d.forwardRef(at);const st={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M328 544h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"}},{tag:"path",attrs:{d:"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"}}]},name:"plus-square",theme:"outlined"};var ct=function(e,t){return d.createElement(Xe.Z,(0,c.Z)((0,c.Z)({},e),{},{ref:t,icon:st}))};ct.displayName="PlusSquareOutlined";const lt=d.forwardRef(ct);var ut=n(6159);var ft=n(3603),dt=n(9708),ht=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n},pt=function(e,t){var n,a,s=e.prefixCls,c=e.size,l=e.disabled,u=e.bordered,h=void 0===u||u,p=e.className,v=e.treeCheckable,m=e.multiple,g=e.listHeight,y=void 0===g?256:g,b=e.listItemHeight,w=void 0===b?26:b,N=e.placement,x=e.notFoundContent,S=e.switcherIcon,k=e.treeLine,C=e.getPopupContainer,L=e.dropdownClassName,A=e.treeIcon,E=void 0!==A&&A,P=e.transitionName,_=e.choiceTransitionName,I=void 0===_?"":_,O=e.status,D=e.showArrow,F=e.treeExpandAction,Z=ht(e,["prefixCls","size","disabled","bordered","className","treeCheckable","multiple","listHeight","listItemHeight","placement","notFoundContent","switcherIcon","treeLine","getPopupContainer","dropdownClassName","treeIcon","transitionName","choiceTransitionName","status","showArrow","treeExpandAction"]),j=d.useContext(ze.E_),R=j.getPopupContainer,T=j.getPrefixCls,B=j.renderEmpty,q=j.direction,K=j.virtual,U=j.dropdownMatchSelectWidth,z=d.useContext(We.Z),H=T("select",s),V=T("select-tree",s),W=T("tree-select",s),Y=o()(L,"".concat(W,"-dropdown"),(0,i.Z)({},"".concat(W,"-dropdown-rtl"),"rtl"===q)),G=!(!v&&!m),$=void 0!==D?D:Z.loading||!G,X=(0,d.useContext)(Ye.aM),J=X.status,Q=X.hasFeedback,ee=X.isFormItemInput,te=X.feedbackIcon,ne=(0,dt.F)(J,O),re=(0,Ge.Z)((0,r.Z)((0,r.Z)({},Z),{multiple:G,showArrow:$,hasFeedback:Q,feedbackIcon:te,prefixCls:H})),ie=re.suffixIcon,ae=re.removeIcon,oe=re.clearIcon;a=void 0!==x?x:(B||He.Z)("Select");var se=(0,M.Z)(Z,["suffixIcon","itemIcon","removeIcon","clearIcon","switcherIcon"]),ce=c||z,le=d.useContext(Ve.Z),ue=l||le,fe=o()(!s&&W,(n={},(0,i.Z)(n,"".concat(H,"-lg"),"large"===ce),(0,i.Z)(n,"".concat(H,"-sm"),"small"===ce),(0,i.Z)(n,"".concat(H,"-rtl"),"rtl"===q),(0,i.Z)(n,"".concat(H,"-borderless"),!h),(0,i.Z)(n,"".concat(H,"-in-form-item"),ee),n),(0,dt.Z)(H,ne,Q),p),de=T();return d.createElement(Ue,(0,r.Z)({virtual:K,dropdownMatchSelectWidth:U,disabled:ue},se,{ref:t,prefixCls:H,className:fe,listHeight:y,listItemHeight:w,treeCheckable:v?d.createElement("span",{className:"".concat(H,"-tree-checkbox-inner")}):v,treeLine:!!k,inputIcon:ie,multiple:m,placement:void 0!==N?N:"rtl"===q?"bottomRight":"bottomLeft",removeIcon:ae,clearIcon:oe,switcherIcon:function(e){return function(e,t,n,r){var i,a=r.isLeaf,s=r.expanded;if(r.loading)return d.createElement(rt.Z,{className:"".concat(e,"-switcher-loading-icon")});if(n&&"object"===(0,f.Z)(n)&&(i=n.showLeafIcon),a)return n?"object"!==(0,f.Z)(n)||i?d.createElement(nt,{className:"".concat(e,"-switcher-line-icon")}):d.createElement("span",{className:"".concat(e,"-switcher-leaf-line")}):null;var c="".concat(e,"-switcher-icon"),l="function"==typeof t?t({expanded:!!s}):t;return(0,ut.l$)(l)?(0,ut.Tm)(l,{className:o()(l.props.className||"",c)}):l||(n?s?d.createElement(ot,{className:"".concat(e,"-switcher-line-icon")}):d.createElement(lt,{className:"".concat(e,"-switcher-line-icon")}):d.createElement(Qe,{className:c}))}(V,S,k,e)},showTreeIcon:E,notFoundContent:a,getPopupContainer:C||R,treeMotion:null,dropdownClassName:Y,choiceTransitionName:(0,ft.mL)(de,"",I),transitionName:(0,ft.mL)(de,(0,ft.q0)(N),P),showArrow:Q||D,treeExpandAction:F}))},vt=d.forwardRef(pt);vt.TreeNode=Ie,vt.SHOW_ALL=Oe,vt.SHOW_PARENT=Me,vt.SHOW_CHILD=De;const mt=vt},6080:(e,t,n)=>{"use strict";n(1337),n(4886),n(8032)},5452:(e,t,n)=>{"use strict";n.d(t,{Z:()=>c});var r=n(1413),i=n(7294);const a={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M176 511a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0z"}}]},name:"ellipsis",theme:"outlined"};var o=n(7713),s=function(e,t){return i.createElement(o.Z,(0,r.Z)((0,r.Z)({},e),{},{ref:t,icon:a}))};s.displayName="EllipsisOutlined";const c=i.forwardRef(s)},9669:(e,t,n)=>{e.exports=n(1609)},4184:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function i(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var a=typeof n;if("string"===a||"number"===a)e.push(n);else if(Array.isArray(n)&&n.length){var o=i.apply(null,n);o&&e.push(o)}else if("object"===a)for(var s in n)r.call(n,s)&&n[s]&&e.push(s)}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n)}()},1168:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>hn});var r=Uint8Array,i=Uint16Array,a=Uint32Array,o=new r([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),s=new r([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),c=new r([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),l=function(e,t){for(var n=new i(31),r=0;r<31;++r)n[r]=t+=1<<e[r-1];var o=new a(n[30]);for(r=1;r<30;++r)for(var s=n[r];s<n[r+1];++s)o[s]=s-n[r]<<5|r;return[n,o]},u=l(o,2),f=u[0],d=u[1];f[28]=258,d[258]=28;for(var h=l(s,0),p=h[0],v=h[1],m=new i(32768),g=0;g<32768;++g){var y=(43690&g)>>>1|(21845&g)<<1;y=(61680&(y=(52428&y)>>>2|(13107&y)<<2))>>>4|(3855&y)<<4,m[g]=((65280&y)>>>8|(255&y)<<8)>>>1}var b=function(e,t,n){for(var r=e.length,a=0,o=new i(t);a<r;++a)++o[e[a]-1];var s,c=new i(t);for(a=0;a<t;++a)c[a]=c[a-1]+o[a-1]<<1;if(n){s=new i(1<<t);var l=15-t;for(a=0;a<r;++a)if(e[a])for(var u=a<<4|e[a],f=t-e[a],d=c[e[a]-1]++<<f,h=d|(1<<f)-1;d<=h;++d)s[m[d]>>>l]=u}else for(s=new i(r),a=0;a<r;++a)s[a]=m[c[e[a]-1]++]>>>15-e[a];return s},w=new r(288);for(g=0;g<144;++g)w[g]=8;for(g=144;g<256;++g)w[g]=9;for(g=256;g<280;++g)w[g]=7;for(g=280;g<288;++g)w[g]=8;var N=new r(32);for(g=0;g<32;++g)N[g]=5;var x=b(w,9,0),S=b(w,9,1),k=b(N,5,0),C=b(N,5,1),L=function(e){for(var t=e[0],n=1;n<e.length;++n)e[n]>t&&(t=e[n]);return t},A=function(e,t,n){var r=t/8>>0;return(e[r]|e[r+1]<<8)>>>(7&t)&n},E=function(e,t){var n=t/8>>0;return(e[n]|e[n+1]<<8|e[n+2]<<16)>>>(7&t)},P=function(e){return(e/8>>0)+(7&e&&1)},_=function(e,t,n){(null==t||t<0)&&(t=0),(null==n||n>e.length)&&(n=e.length);var o=new(e instanceof i?i:e instanceof a?a:r)(n-t);return o.set(e.subarray(t,n)),o},I=function(e,t,n){var i=e.length,a=!t||n,l=!n||n.i;n||(n={}),t||(t=new r(3*i));var u=function(e){var n=t.length;if(e>n){var i=new r(Math.max(2*n,e));i.set(t),t=i}},d=n.f||0,h=n.p||0,v=n.b||0,m=n.l,g=n.d,y=n.m,w=n.n,N=8*i;do{if(!m){n.f=d=A(e,h,1);var x=A(e,h+1,3);if(h+=3,!x){var k=e[(q=P(h)+4)-4]|e[q-3]<<8,I=q+k;if(I>i){if(l)throw"unexpected EOF";break}a&&u(v+k),t.set(e.subarray(q,I),v),n.b=v+=k,n.p=h=8*I;continue}if(1==x)m=S,g=C,y=9,w=5;else{if(2!=x)throw"invalid block type";var O=A(e,h,31)+257,M=A(e,h+10,15)+4,D=O+A(e,h+5,31)+1;h+=14;for(var F=new r(D),Z=new r(19),j=0;j<M;++j)Z[c[j]]=A(e,h+3*j,7);h+=3*M;var R=L(Z),T=(1<<R)-1;if(!l&&h+D*(R+7)>N)break;var B=b(Z,R,1);for(j=0;j<D;){var q,K=B[A(e,h,T)];if(h+=15&K,(q=K>>>4)<16)F[j++]=q;else{var U=0,z=0;for(16==q?(z=3+A(e,h,3),h+=2,U=F[j-1]):17==q?(z=3+A(e,h,7),h+=3):18==q&&(z=11+A(e,h,127),h+=7);z--;)F[j++]=U}}var H=F.subarray(0,O),V=F.subarray(O);y=L(H),w=L(V),m=b(H,y,1),g=b(V,w,1)}if(h>N)throw"unexpected EOF"}a&&u(v+131072);for(var W=(1<<y)-1,Y=(1<<w)-1,G=y+w+18;l||h+G<N;){var $=(U=m[E(e,h)&W])>>>4;if((h+=15&U)>N)throw"unexpected EOF";if(!U)throw"invalid length/literal";if($<256)t[v++]=$;else{if(256==$){m=null;break}var X=$-254;if($>264){var J=o[j=$-257];X=A(e,h,(1<<J)-1)+f[j],h+=J}var Q=g[E(e,h)&Y],ee=Q>>>4;if(!Q)throw"invalid distance";h+=15&Q;V=p[ee];if(ee>3){J=s[ee];V+=E(e,h)&(1<<J)-1,h+=J}if(h>N)throw"unexpected EOF";a&&u(v+131072);for(var te=v+X;v<te;v+=4)t[v]=t[v-V],t[v+1]=t[v+1-V],t[v+2]=t[v+2-V],t[v+3]=t[v+3-V];v=te}}n.l=m,n.p=h,n.b=v,m&&(d=1,n.m=y,n.d=g,n.n=w)}while(!d);return v==t.length?t:_(t,0,v)},O=function(e,t,n){n<<=7&t;var r=t/8>>0;e[r]|=n,e[r+1]|=n>>>8},M=function(e,t,n){n<<=7&t;var r=t/8>>0;e[r]|=n,e[r+1]|=n>>>8,e[r+2]|=n>>>16},D=function(e,t){for(var n=[],a=0;a<e.length;++a)e[a]&&n.push({s:a,f:e[a]});var o=n.length,s=n.slice();if(!o)return[new r(0),0];if(1==o){var c=new r(n[0].s+1);return c[n[0].s]=1,[c,1]}n.sort((function(e,t){return e.f-t.f})),n.push({s:-1,f:25001});var l=n[0],u=n[1],f=0,d=1,h=2;for(n[0]={s:-1,f:l.f+u.f,l,r:u};d!=o-1;)l=n[n[f].f<n[h].f?f++:h++],u=n[f!=d&&n[f].f<n[h].f?f++:h++],n[d++]={s:-1,f:l.f+u.f,l,r:u};var p=s[0].s;for(a=1;a<o;++a)s[a].s>p&&(p=s[a].s);var v=new i(p+1),m=F(n[d-1],v,0);if(m>t){a=0;var g=0,y=m-t,b=1<<y;for(s.sort((function(e,t){return v[t.s]-v[e.s]||e.f-t.f}));a<o;++a){var w=s[a].s;if(!(v[w]>t))break;g+=b-(1<<m-v[w]),v[w]=t}for(g>>>=y;g>0;){var N=s[a].s;v[N]<t?g-=1<<t-v[N]++-1:++a}for(;a>=0&&g;--a){var x=s[a].s;v[x]==t&&(--v[x],++g)}m=t}return[new r(v),m]},F=function(e,t,n){return-1==e.s?Math.max(F(e.l,t,n+1),F(e.r,t,n+1)):t[e.s]=n},Z=function(e){for(var t=e.length;t&&!e[--t];);for(var n=new i(++t),r=0,a=e[0],o=1,s=function(e){n[r++]=e},c=1;c<=t;++c)if(e[c]==a&&c!=t)++o;else{if(!a&&o>2){for(;o>138;o-=138)s(32754);o>2&&(s(o>10?o-11<<5|28690:o-3<<5|12305),o=0)}else if(o>3){for(s(a),--o;o>6;o-=6)s(8304);o>2&&(s(o-3<<5|8208),o=0)}for(;o--;)s(a);o=1,a=e[c]}return[n.subarray(0,r),t]},j=function(e,t){for(var n=0,r=0;r<t.length;++r)n+=e[r]*t[r];return n},R=function(e,t,n){var r=n.length,i=P(t+2);e[i]=255&r,e[i+1]=r>>>8,e[i+2]=255^e[i],e[i+3]=255^e[i+1];for(var a=0;a<r;++a)e[i+a+4]=n[a];return 8*(i+4+r)},T=function(e,t,n,r,a,l,u,f,d,h,p){O(t,p++,n),++a[256];for(var v=D(a,15),m=v[0],g=v[1],y=D(l,15),S=y[0],C=y[1],L=Z(m),A=L[0],E=L[1],P=Z(S),_=P[0],I=P[1],F=new i(19),T=0;T<A.length;++T)F[31&A[T]]++;for(T=0;T<_.length;++T)F[31&_[T]]++;for(var B=D(F,7),q=B[0],K=B[1],U=19;U>4&&!q[c[U-1]];--U);var z,H,V,W,Y=h+5<<3,G=j(a,w)+j(l,N)+u,$=j(a,m)+j(l,S)+u+14+3*U+j(F,q)+(2*F[16]+3*F[17]+7*F[18]);if(Y<=G&&Y<=$)return R(t,p,e.subarray(d,d+h));if(O(t,p,1+($<G)),p+=2,$<G){z=b(m,g,0),H=m,V=b(S,C,0),W=S;var X=b(q,K,0);O(t,p,E-257),O(t,p+5,I-1),O(t,p+10,U-4),p+=14;for(T=0;T<U;++T)O(t,p+3*T,q[c[T]]);p+=3*U;for(var J=[A,_],Q=0;Q<2;++Q){var ee=J[Q];for(T=0;T<ee.length;++T){var te=31&ee[T];O(t,p,X[te]),p+=q[te],te>15&&(O(t,p,ee[T]>>>5&127),p+=ee[T]>>>12)}}}else z=x,H=w,V=k,W=N;for(T=0;T<f;++T)if(r[T]>255){te=r[T]>>>18&31;M(t,p,z[te+257]),p+=H[te+257],te>7&&(O(t,p,r[T]>>>23&31),p+=o[te]);var ne=31&r[T];M(t,p,V[ne]),p+=W[ne],ne>3&&(M(t,p,r[T]>>>5&8191),p+=s[ne])}else M(t,p,z[r[T]]),p+=H[r[T]];return M(t,p,z[256]),p+H[256]},B=new a([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),q=new r(0),K=function(e,t,n,c,l,u){var f=e.length,h=new r(c+f+5*(1+Math.floor(f/7e3))+l),p=h.subarray(c,h.length-l),m=0;if(!t||f<8)for(var g=0;g<=f;g+=65535){var y=g+65535;y<f?m=R(p,m,e.subarray(g,y)):(p[g]=u,m=R(p,m,e.subarray(g,f)))}else{for(var b=B[t-1],w=b>>>13,N=8191&b,x=(1<<n)-1,S=new i(32768),k=new i(x+1),C=Math.ceil(n/3),L=2*C,A=function(t){return(e[t]^e[t+1]<<C^e[t+2]<<L)&x},E=new a(25e3),I=new i(288),O=new i(32),M=0,D=0,F=(g=0,0),Z=0,j=0;g<f;++g){var K=A(g),U=32767&g,z=k[K];if(S[U]=z,k[K]=U,Z<=g){var H=f-g;if((M>7e3||F>24576)&&H>423){m=T(e,p,0,E,I,O,D,F,j,g-j,m),F=M=D=0,j=g;for(var V=0;V<286;++V)I[V]=0;for(V=0;V<30;++V)O[V]=0}var W=2,Y=0,G=N,$=U-z&32767;if(H>2&&K==A(g-$))for(var X=Math.min(w,H)-1,J=Math.min(32767,g),Q=Math.min(258,H);$<=J&&--G&&U!=z;){if(e[g+W]==e[g+W-$]){for(var ee=0;ee<Q&&e[g+ee]==e[g+ee-$];++ee);if(ee>W){if(W=ee,Y=$,ee>X)break;var te=Math.min($,ee-2),ne=0;for(V=0;V<te;++V){var re=g-$+V+32768&32767,ie=re-S[re]+32768&32767;ie>ne&&(ne=ie,z=re)}}}$+=(U=z)-(z=S[U])+32768&32767}if(Y){E[F++]=268435456|d[W]<<18|v[Y];var ae=31&d[W],oe=31&v[Y];D+=o[ae]+s[oe],++I[257+ae],++O[oe],Z=g+W,++M}else E[F++]=e[g],++I[e[g]]}}m=T(e,p,u,E,I,O,D,F,j,g-j,m),u||(m=R(p,m,q))}return _(h,0,c+P(m)+l)},U=function(){var e=1,t=0;return{p:function(n){for(var r=e,i=t,a=n.length,o=0;o!=a;){for(var s=Math.min(o+5552,a);o<s;++o)i+=r+=n[o];r%=65521,i%=65521}e=r,t=i},d:function(){return(e>>>8<<16|(255&t)<<8|t>>>8)+2*((255&e)<<23)}}},z=function(e,t,n,r,i){return K(e,null==t.level?6:t.level,null==t.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(e.length)))):12+t.mem,n,r,!i)},H=function(e,t,n){for(;n;++t)e[t]=n,n>>>=8},V=function(e,t){var n=t.level,r=0==n?0:n<6?1:9==n?3:2;e[0]=120,e[1]=r<<6|(r?32-2*r:1)},W=function(e){if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"};function Y(e,t){void 0===t&&(t={});var n=U();n.p(e);var r=z(e,t,2,4);return V(r,t),H(r,r.length-4,n.d()),r}function G(e,t){return I((W(e),e.subarray(2,-4)),t)}var $=function(){return"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:this}();function X(){$.console&&"function"==typeof $.console.log&&$.console.log.apply($.console,arguments)}var J={log:X,warn:function(e){$.console&&("function"==typeof $.console.warn?$.console.warn.apply($.console,arguments):X.call(null,arguments))},error:function(e){$.console&&("function"==typeof $.console.error?$.console.error.apply($.console,arguments):X(e))}};function Q(e,t,n){var r=new XMLHttpRequest;r.open("GET",e),r.responseType="blob",r.onload=function(){ie(r.response,t,n)},r.onerror=function(){J.error("could not download file")},r.send()}function ee(e){var t=new XMLHttpRequest;t.open("HEAD",e,!1);try{t.send()}catch(e){}return t.status>=200&&t.status<=299}function te(e){try{e.dispatchEvent(new MouseEvent("click"))}catch(n){var t=document.createEvent("MouseEvents");t.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),e.dispatchEvent(t)}}var ne,re,ie=$.saveAs||("object"!=typeof window||window!==$?function(){}:"download"in HTMLAnchorElement.prototype?function(e,t,n){var r=$.URL||$.webkitURL,i=document.createElement("a");t=t||e.name||"download",i.download=t,i.rel="noopener","string"==typeof e?(i.href=e,i.origin!==location.origin?ee(i.href)?Q(e,t,n):te(i,i.target="_blank"):te(i)):(i.href=r.createObjectURL(e),setTimeout((function(){r.revokeObjectURL(i.href)}),4e4),setTimeout((function(){te(i)}),0))}:"msSaveOrOpenBlob"in navigator?function(e,t,n){if(t=t||e.name||"download","string"==typeof e)if(ee(e))Q(e,t,n);else{var r=document.createElement("a");r.href=e,r.target="_blank",setTimeout((function(){te(r)}))}else navigator.msSaveOrOpenBlob(function(e,t){return void 0===t?t={autoBom:!1}:"object"!=typeof t&&(J.warn("Deprecated: Expected third argument to be a object"),t={autoBom:!t}),t.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob([String.fromCharCode(65279),e],{type:e.type}):e}(e,n),t)}:function(e,t,n,r){if((r=r||open("","_blank"))&&(r.document.title=r.document.body.innerText="downloading..."),"string"==typeof e)return Q(e,t,n);var i="application/octet-stream"===e.type,a=/constructor/i.test($.HTMLElement)||$.safari,o=/CriOS\/[\d]+/.test(navigator.userAgent);if((o||i&&a)&&"object"==typeof FileReader){var s=new FileReader;s.onloadend=function(){var e=s.result;e=o?e:e.replace(/^data:[^;]*;/,"data:attachment/file;"),r?r.location.href=e:location=e,r=null},s.readAsDataURL(e)}else{var c=$.URL||$.webkitURL,l=c.createObjectURL(e);r?r.location=l:location.href=l,r=null,setTimeout((function(){c.revokeObjectURL(l)}),4e4)}});function ae(e){var t;e=e||"",this.ok=!1,"#"==e.charAt(0)&&(e=e.substr(1,6)),e={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dodgerblue:"1e90ff",feldspar:"d19275",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgrey:"d3d3d3",lightgreen:"90ee90",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslateblue:"8470ff",lightslategray:"778899",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"00ff00",limegreen:"32cd32",linen:"faf0e6",magenta:"ff00ff",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370d8",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"d87093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",red:"ff0000",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",violetred:"d02090",wheat:"f5deb3",white:"ffffff",whitesmoke:"f5f5f5",yellow:"ffff00",yellowgreen:"9acd32"}[e=(e=e.replace(/ /g,"")).toLowerCase()]||e;for(var n=[{re:/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,example:["rgb(123, 234, 45)","rgb(255,234,245)"],process:function(e){return[parseInt(e[1]),parseInt(e[2]),parseInt(e[3])]}},{re:/^(\w{2})(\w{2})(\w{2})$/,example:["#00ff00","336699"],process:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/^(\w{1})(\w{1})(\w{1})$/,example:["#fb0","f0f"],process:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}}],r=0;r<n.length;r++){var i=n[r].re,a=n[r].process,o=i.exec(e);o&&(t=a(o),this.r=t[0],this.g=t[1],this.b=t[2],this.ok=!0)}this.r=this.r<0||isNaN(this.r)?0:this.r>255?255:this.r,this.g=this.g<0||isNaN(this.g)?0:this.g>255?255:this.g,this.b=this.b<0||isNaN(this.b)?0:this.b>255?255:this.b,this.toRGB=function(){return"rgb("+this.r+", "+this.g+", "+this.b+")"},this.toHex=function(){var e=this.r.toString(16),t=this.g.toString(16),n=this.b.toString(16);return 1==e.length&&(e="0"+e),1==t.length&&(t="0"+t),1==n.length&&(n="0"+n),"#"+e+t+n}}function oe(e,t){var n=e[0],r=e[1],i=e[2],a=e[3];n=ce(n,r,i,a,t[0],7,-680876936),a=ce(a,n,r,i,t[1],12,-389564586),i=ce(i,a,n,r,t[2],17,606105819),r=ce(r,i,a,n,t[3],22,-1044525330),n=ce(n,r,i,a,t[4],7,-176418897),a=ce(a,n,r,i,t[5],12,1200080426),i=ce(i,a,n,r,t[6],17,-1473231341),r=ce(r,i,a,n,t[7],22,-45705983),n=ce(n,r,i,a,t[8],7,1770035416),a=ce(a,n,r,i,t[9],12,-1958414417),i=ce(i,a,n,r,t[10],17,-42063),r=ce(r,i,a,n,t[11],22,-1990404162),n=ce(n,r,i,a,t[12],7,1804603682),a=ce(a,n,r,i,t[13],12,-40341101),i=ce(i,a,n,r,t[14],17,-1502002290),n=le(n,r=ce(r,i,a,n,t[15],22,1236535329),i,a,t[1],5,-165796510),a=le(a,n,r,i,t[6],9,-1069501632),i=le(i,a,n,r,t[11],14,643717713),r=le(r,i,a,n,t[0],20,-373897302),n=le(n,r,i,a,t[5],5,-701558691),a=le(a,n,r,i,t[10],9,38016083),i=le(i,a,n,r,t[15],14,-660478335),r=le(r,i,a,n,t[4],20,-405537848),n=le(n,r,i,a,t[9],5,568446438),a=le(a,n,r,i,t[14],9,-1019803690),i=le(i,a,n,r,t[3],14,-187363961),r=le(r,i,a,n,t[8],20,1163531501),n=le(n,r,i,a,t[13],5,-1444681467),a=le(a,n,r,i,t[2],9,-51403784),i=le(i,a,n,r,t[7],14,1735328473),n=ue(n,r=le(r,i,a,n,t[12],20,-1926607734),i,a,t[5],4,-378558),a=ue(a,n,r,i,t[8],11,-2022574463),i=ue(i,a,n,r,t[11],16,1839030562),r=ue(r,i,a,n,t[14],23,-35309556),n=ue(n,r,i,a,t[1],4,-1530992060),a=ue(a,n,r,i,t[4],11,1272893353),i=ue(i,a,n,r,t[7],16,-155497632),r=ue(r,i,a,n,t[10],23,-1094730640),n=ue(n,r,i,a,t[13],4,681279174),a=ue(a,n,r,i,t[0],11,-358537222),i=ue(i,a,n,r,t[3],16,-722521979),r=ue(r,i,a,n,t[6],23,76029189),n=ue(n,r,i,a,t[9],4,-640364487),a=ue(a,n,r,i,t[12],11,-421815835),i=ue(i,a,n,r,t[15],16,530742520),n=fe(n,r=ue(r,i,a,n,t[2],23,-995338651),i,a,t[0],6,-198630844),a=fe(a,n,r,i,t[7],10,1126891415),i=fe(i,a,n,r,t[14],15,-1416354905),r=fe(r,i,a,n,t[5],21,-57434055),n=fe(n,r,i,a,t[12],6,1700485571),a=fe(a,n,r,i,t[3],10,-1894986606),i=fe(i,a,n,r,t[10],15,-1051523),r=fe(r,i,a,n,t[1],21,-2054922799),n=fe(n,r,i,a,t[8],6,1873313359),a=fe(a,n,r,i,t[15],10,-30611744),i=fe(i,a,n,r,t[6],15,-1560198380),r=fe(r,i,a,n,t[13],21,1309151649),n=fe(n,r,i,a,t[4],6,-145523070),a=fe(a,n,r,i,t[11],10,-1120210379),i=fe(i,a,n,r,t[2],15,718787259),r=fe(r,i,a,n,t[9],21,-343485551),e[0]=ye(n,e[0]),e[1]=ye(r,e[1]),e[2]=ye(i,e[2]),e[3]=ye(a,e[3])}function se(e,t,n,r,i,a){return t=ye(ye(t,e),ye(r,a)),ye(t<<i|t>>>32-i,n)}function ce(e,t,n,r,i,a,o){return se(t&n|~t&r,e,t,i,a,o)}function le(e,t,n,r,i,a,o){return se(t&r|n&~r,e,t,i,a,o)}function ue(e,t,n,r,i,a,o){return se(t^n^r,e,t,i,a,o)}function fe(e,t,n,r,i,a,o){return se(n^(t|~r),e,t,i,a,o)}function de(e){var t,n=e.length,r=[1732584193,-271733879,-1732584194,271733878];for(t=64;t<=e.length;t+=64)oe(r,he(e.substring(t-64,t)));e=e.substring(t-64);var i=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(t=0;t<e.length;t++)i[t>>2]|=e.charCodeAt(t)<<(t%4<<3);if(i[t>>2]|=128<<(t%4<<3),t>55)for(oe(r,i),t=0;t<16;t++)i[t]=0;return i[14]=8*n,oe(r,i),r}function he(e){var t,n=[];for(t=0;t<64;t+=4)n[t>>2]=e.charCodeAt(t)+(e.charCodeAt(t+1)<<8)+(e.charCodeAt(t+2)<<16)+(e.charCodeAt(t+3)<<24);return n}ne=$.atob.bind($),re=$.btoa.bind($);var pe="0123456789abcdef".split("");function ve(e){for(var t="",n=0;n<4;n++)t+=pe[e>>8*n+4&15]+pe[e>>8*n&15];return t}function me(e){return String.fromCharCode((255&e)>>0,(65280&e)>>8,(16711680&e)>>16,(4278190080&e)>>24)}function ge(e){return de(e).map(me).join("")}function ye(e,t){return e+t&4294967295}if("5d41402abc4b2a76b9719d911017c592"!=function(e){for(var t=0;t<e.length;t++)e[t]=ve(e[t]);return e.join("")}(de("hello"))){}function be(e,t){var n,r,i,a;if(e!==n){for(var o=(i=e,a=1+(256/e.length>>0),new Array(a+1).join(i)),s=[],c=0;c<256;c++)s[c]=c;var l=0;for(c=0;c<256;c++){var u=s[c];l=(l+u+o.charCodeAt(c))%256,s[c]=s[l],s[l]=u}n=e,r=s}else s=r;var f=t.length,d=0,h=0,p="";for(c=0;c<f;c++)h=(h+(u=s[d=(d+1)%256]))%256,s[d]=s[h],s[h]=u,o=s[(s[d]+s[h])%256],p+=String.fromCharCode(t.charCodeAt(c)^o);return p}var we={print:4,modify:8,copy:16,"annot-forms":32};function Ne(e,t,n,r){this.v=1,this.r=2;let i=192;e.forEach((function(e){if(void 0!==we.perm)throw new Error("Invalid permission: "+e);i+=we[e]})),this.padding="(¿N^NuAd\0NVÿú\b..\0¶Ðh>/\f©þdSiz";let a=(t+this.padding).substr(0,32),o=(n+this.padding).substr(0,32);this.O=this.processOwnerPassword(a,o),this.P=-(1+(255^i)),this.encryptionKey=ge(a+this.O+this.lsbFirstWord(this.P)+this.hexToBytes(r)).substr(0,5),this.U=be(this.encryptionKey,this.padding)}function xe(e){if("object"!=typeof e)throw new Error("Invalid Context passed to initialize PubSub (jsPDF-module)");var t={};this.subscribe=function(e,n,r){if(r=r||!1,"string"!=typeof e||"function"!=typeof n||"boolean"!=typeof r)throw new Error("Invalid arguments passed to PubSub.subscribe (jsPDF-module)");t.hasOwnProperty(e)||(t[e]={});var i=Math.random().toString(35);return t[e][i]=[n,!!r],i},this.unsubscribe=function(e){for(var n in t)if(t[n][e])return delete t[n][e],0===Object.keys(t[n]).length&&delete t[n],!0;return!1},this.publish=function(n){if(t.hasOwnProperty(n)){var r=Array.prototype.slice.call(arguments,1),i=[];for(var a in t[n]){var o=t[n][a];try{o[0].apply(e,r)}catch(e){$.console&&J.error("jsPDF PubSub Error",e.message,e)}o[1]&&i.push(a)}i.length&&i.forEach(this.unsubscribe)}},this.getTopics=function(){return t}}function Se(e){if(!(this instanceof Se))return new Se(e);var t="opacity,stroke-opacity".split(",");for(var n in e)e.hasOwnProperty(n)&&t.indexOf(n)>=0&&(this[n]=e[n]);this.id="",this.objectNumber=-1}function ke(e,t){this.gState=e,this.matrix=t,this.id="",this.objectNumber=-1}function Ce(e,t,n,r,i){if(!(this instanceof Ce))return new Ce(e,t,n,r,i);this.type="axial"===e?2:3,this.coords=t,this.colors=n,ke.call(this,r,i)}function Le(e,t,n,r,i){if(!(this instanceof Le))return new Le(e,t,n,r,i);this.boundingBox=e,this.xStep=t,this.yStep=n,this.stream="",this.cloneIndex=0,ke.call(this,r,i)}function Ae(e){var t,n="string"==typeof arguments[0]?arguments[0]:"p",r=arguments[1],i=arguments[2],a=arguments[3],o=[],s=1,c=16,l="S",u=null;"object"==typeof(e=e||{})&&(n=e.orientation,r=e.unit||r,i=e.format||i,a=e.compress||e.compressPdf||a,null!==(u=e.encryption||null)&&(u.userPassword=u.userPassword||"",u.ownerPassword=u.ownerPassword||"",u.userPermissions=u.userPermissions||[]),s="number"==typeof e.userUnit?Math.abs(e.userUnit):1,void 0!==e.precision&&(t=e.precision),void 0!==e.floatPrecision&&(c=e.floatPrecision),l=e.defaultPathOperation||"S"),o=e.filters||(!0===a?["FlateEncode"]:o),r=r||"mm",n=(""+(n||"P")).toLowerCase();var f=e.putOnlyUsedFonts||!1,d={},h={internal:{},__private__:{}};h.__private__.PubSub=xe;var p="1.3",v=h.__private__.getPdfVersion=function(){return p};h.__private__.setPdfVersion=function(e){p=e};var m={a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],"government-letter":[576,756],legal:[612,1008],"junior-legal":[576,360],ledger:[1224,792],tabloid:[792,1224],"credit-card":[153,243]};h.__private__.getPageFormats=function(){return m};var g=h.__private__.getPageFormat=function(e){return m[e]};i=i||"a4";var y="compat",b="advanced",w=y;function N(){this.saveGraphicsState(),Q(new Ke(ge,0,0,-ge,0,bn()*ge).toString()+" cm"),this.setFontSize(this.getFontSize()/ge),l="n",w=b}function x(){this.restoreGraphicsState(),l="S",w=y}var S=function(e,t){if("bold"==e&&"normal"==t||"bold"==e&&400==t||"normal"==e&&"italic"==t||"bold"==e&&"italic"==t)throw new Error("Invalid Combination of fontweight and fontstyle");return t&&e!==t&&(e=400==t?"italic"==e?"italic":"normal":700==t&&"italic"!==e?"bold":e+""+t),e};h.advancedAPI=function(e){var t=w===y;return t&&N.call(this),"function"!=typeof e||(e(this),t&&x.call(this)),this},h.compatAPI=function(e){var t=w===b;return t&&x.call(this),"function"!=typeof e||(e(this),t&&N.call(this)),this},h.isAdvancedAPI=function(){return w===b};var k,C=function(e){if(w!==b)throw new Error(e+" is only available in 'advanced' API mode. You need to call advancedAPI() first.")},L=h.roundToPrecision=h.__private__.roundToPrecision=function(e,n){var r=t||n;if(isNaN(e)||isNaN(r))throw new Error("Invalid argument passed to jsPDF.roundToPrecision");return e.toFixed(r).replace(/0+$/,"")};k=h.hpf=h.__private__.hpf="number"==typeof c?function(e){if(isNaN(e))throw new Error("Invalid argument passed to jsPDF.hpf");return L(e,c)}:"smart"===c?function(e){if(isNaN(e))throw new Error("Invalid argument passed to jsPDF.hpf");return L(e,e>-1&&e<1?16:5)}:function(e){if(isNaN(e))throw new Error("Invalid argument passed to jsPDF.hpf");return L(e,16)};var A=h.f2=h.__private__.f2=function(e){if(isNaN(e))throw new Error("Invalid argument passed to jsPDF.f2");return L(e,2)},E=h.__private__.f3=function(e){if(isNaN(e))throw new Error("Invalid argument passed to jsPDF.f3");return L(e,3)},P=h.scale=h.__private__.scale=function(e){if(isNaN(e))throw new Error("Invalid argument passed to jsPDF.scale");return w===y?e*ge:w===b?e:void 0},_=function(e){return P(function(e){return w===y?bn()-e:w===b?e:void 0}(e))};h.__private__.setPrecision=h.setPrecision=function(e){"number"==typeof parseInt(e,10)&&(t=parseInt(e,10))};var I,O="00000000000000000000000000000000",M=h.__private__.getFileId=function(){return O},D=h.__private__.setFileId=function(e){return O=void 0!==e&&/^[a-fA-F0-9]{32}$/.test(e)?e.toUpperCase():O.split("").map((function(){return"ABCDEF0123456789".charAt(Math.floor(16*Math.random()))})).join(""),null!==u&&(Pt=new Ne(u.userPermissions,u.userPassword,u.ownerPassword,O)),O};h.setFileId=function(e){return D(e),this},h.getFileId=function(){return M()};var F=h.__private__.convertDateToPDFDate=function(e){var t=e.getTimezoneOffset(),n=t<0?"+":"-",r=Math.floor(Math.abs(t/60)),i=Math.abs(t%60),a=[n,B(r),"'",B(i),"'"].join("");return["D:",e.getFullYear(),B(e.getMonth()+1),B(e.getDate()),B(e.getHours()),B(e.getMinutes()),B(e.getSeconds()),a].join("")},Z=h.__private__.convertPDFDateToDate=function(e){var t=parseInt(e.substr(2,4),10),n=parseInt(e.substr(6,2),10)-1,r=parseInt(e.substr(8,2),10),i=parseInt(e.substr(10,2),10),a=parseInt(e.substr(12,2),10),o=parseInt(e.substr(14,2),10);return new Date(t,n,r,i,a,o,0)},j=h.__private__.setCreationDate=function(e){var t;if(void 0===e&&(e=new Date),e instanceof Date)t=F(e);else{if(!/^D:(20[0-2][0-9]|203[0-7]|19[7-9][0-9])(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])(0[0-9]|[1-5][0-9])(\+0[0-9]|\+1[0-4]|-0[0-9]|-1[0-1])'(0[0-9]|[1-5][0-9])'?$/.test(e))throw new Error("Invalid argument passed to jsPDF.setCreationDate");t=e}return I=t},R=h.__private__.getCreationDate=function(e){var t=I;return"jsDate"===e&&(t=Z(I)),t};h.setCreationDate=function(e){return j(e),this},h.getCreationDate=function(e){return R(e)};var T,B=h.__private__.padd2=function(e){return("0"+parseInt(e)).slice(-2)},q=h.__private__.padd2Hex=function(e){return("00"+(e=e.toString())).substr(e.length)},K=0,U=[],z=[],H=0,V=[],W=[],Y=!1,G=z;h.__private__.setCustomOutputDestination=function(e){Y=!0,G=e};var X=function(e){Y||(G=e)};h.__private__.resetCustomOutputDestination=function(){Y=!1,G=z};var Q=h.__private__.out=function(e){return e=e.toString(),H+=e.length+1,G.push(e),G},ee=h.__private__.write=function(e){return Q(1===arguments.length?e.toString():Array.prototype.join.call(arguments," "))},te=h.__private__.getArrayBuffer=function(e){for(var t=e.length,n=new ArrayBuffer(t),r=new Uint8Array(n);t--;)r[t]=e.charCodeAt(t);return n},ne=[["Helvetica","helvetica","normal","WinAnsiEncoding"],["Helvetica-Bold","helvetica","bold","WinAnsiEncoding"],["Helvetica-Oblique","helvetica","italic","WinAnsiEncoding"],["Helvetica-BoldOblique","helvetica","bolditalic","WinAnsiEncoding"],["Courier","courier","normal","WinAnsiEncoding"],["Courier-Bold","courier","bold","WinAnsiEncoding"],["Courier-Oblique","courier","italic","WinAnsiEncoding"],["Courier-BoldOblique","courier","bolditalic","WinAnsiEncoding"],["Times-Roman","times","normal","WinAnsiEncoding"],["Times-Bold","times","bold","WinAnsiEncoding"],["Times-Italic","times","italic","WinAnsiEncoding"],["Times-BoldItalic","times","bolditalic","WinAnsiEncoding"],["ZapfDingbats","zapfdingbats","normal",null],["Symbol","symbol","normal",null]];h.__private__.getStandardFonts=function(){return ne};var oe=e.fontSize||16;h.__private__.setFontSize=h.setFontSize=function(e){return oe=w===b?e/ge:e,this};var se,ce=h.__private__.getFontSize=h.getFontSize=function(){return w===y?oe:oe*ge},le=e.R2L||!1;h.__private__.setR2L=h.setR2L=function(e){return le=e,this},h.__private__.getR2L=h.getR2L=function(){return le};var ue,fe=h.__private__.setZoomMode=function(e){if(/^\d*\.?\d*%$/.test(e))se=e;else if(isNaN(e)){if(-1===[void 0,null,"fullwidth","fullheight","fullpage","original"].indexOf(e))throw new Error('zoom must be Integer (e.g. 2), a percentage Value (e.g. 300%) or fullwidth, fullheight, fullpage, original. "'+e+'" is not recognized.');se=e}else se=parseInt(e,10)};h.__private__.getZoomMode=function(){return se};var de,he=h.__private__.setPageMode=function(e){if(-1==[void 0,null,"UseNone","UseOutlines","UseThumbs","FullScreen"].indexOf(e))throw new Error('Page mode must be one of UseNone, UseOutlines, UseThumbs, or FullScreen. "'+e+'" is not recognized.');ue=e};h.__private__.getPageMode=function(){return ue};var pe=h.__private__.setLayoutMode=function(e){if(-1==[void 0,null,"continuous","single","twoleft","tworight","two"].indexOf(e))throw new Error('Layout mode must be one of continuous, single, twoleft, tworight. "'+e+'" is not recognized.');de=e};h.__private__.getLayoutMode=function(){return de},h.__private__.setDisplayMode=h.setDisplayMode=function(e,t,n){return fe(e),pe(t),he(n),this};var ve={title:"",subject:"",author:"",keywords:"",creator:""};h.__private__.getDocumentProperty=function(e){if(-1===Object.keys(ve).indexOf(e))throw new Error("Invalid argument passed to jsPDF.getDocumentProperty");return ve[e]},h.__private__.getDocumentProperties=function(){return ve},h.__private__.setDocumentProperties=h.setProperties=h.setDocumentProperties=function(e){for(var t in ve)ve.hasOwnProperty(t)&&e[t]&&(ve[t]=e[t]);return this},h.__private__.setDocumentProperty=function(e,t){if(-1===Object.keys(ve).indexOf(e))throw new Error("Invalid arguments passed to jsPDF.setDocumentProperty");return ve[e]=t};var me,ge,ye,be,we,ke={},Ee={},Pe=[],_e={},Ie={},Oe={},Me={},De=null,Fe=0,Ze=[],je=new xe(h),Re=e.hotfixes||[],Te={},Be={},qe=[],Ke=function(e,t,n,r,i,a){if(!(this instanceof Ke))return new Ke(e,t,n,r,i,a);isNaN(e)&&(e=1),isNaN(t)&&(t=0),isNaN(n)&&(n=0),isNaN(r)&&(r=1),isNaN(i)&&(i=0),isNaN(a)&&(a=0),this._matrix=[e,t,n,r,i,a]};Object.defineProperty(Ke.prototype,"sx",{get:function(){return this._matrix[0]},set:function(e){this._matrix[0]=e}}),Object.defineProperty(Ke.prototype,"shy",{get:function(){return this._matrix[1]},set:function(e){this._matrix[1]=e}}),Object.defineProperty(Ke.prototype,"shx",{get:function(){return this._matrix[2]},set:function(e){this._matrix[2]=e}}),Object.defineProperty(Ke.prototype,"sy",{get:function(){return this._matrix[3]},set:function(e){this._matrix[3]=e}}),Object.defineProperty(Ke.prototype,"tx",{get:function(){return this._matrix[4]},set:function(e){this._matrix[4]=e}}),Object.defineProperty(Ke.prototype,"ty",{get:function(){return this._matrix[5]},set:function(e){this._matrix[5]=e}}),Object.defineProperty(Ke.prototype,"a",{get:function(){return this._matrix[0]},set:function(e){this._matrix[0]=e}}),Object.defineProperty(Ke.prototype,"b",{get:function(){return this._matrix[1]},set:function(e){this._matrix[1]=e}}),Object.defineProperty(Ke.prototype,"c",{get:function(){return this._matrix[2]},set:function(e){this._matrix[2]=e}}),Object.defineProperty(Ke.prototype,"d",{get:function(){return this._matrix[3]},set:function(e){this._matrix[3]=e}}),Object.defineProperty(Ke.prototype,"e",{get:function(){return this._matrix[4]},set:function(e){this._matrix[4]=e}}),Object.defineProperty(Ke.prototype,"f",{get:function(){return this._matrix[5]},set:function(e){this._matrix[5]=e}}),Object.defineProperty(Ke.prototype,"rotation",{get:function(){return Math.atan2(this.shx,this.sx)}}),Object.defineProperty(Ke.prototype,"scaleX",{get:function(){return this.decompose().scale.sx}}),Object.defineProperty(Ke.prototype,"scaleY",{get:function(){return this.decompose().scale.sy}}),Object.defineProperty(Ke.prototype,"isIdentity",{get:function(){return 1===this.sx&&0===this.shy&&0===this.shx&&1===this.sy&&0===this.tx&&0===this.ty}}),Ke.prototype.join=function(e){return[this.sx,this.shy,this.shx,this.sy,this.tx,this.ty].map(k).join(e)},Ke.prototype.multiply=function(e){var t=e.sx*this.sx+e.shy*this.shx,n=e.sx*this.shy+e.shy*this.sy,r=e.shx*this.sx+e.sy*this.shx,i=e.shx*this.shy+e.sy*this.sy,a=e.tx*this.sx+e.ty*this.shx+this.tx,o=e.tx*this.shy+e.ty*this.sy+this.ty;return new Ke(t,n,r,i,a,o)},Ke.prototype.decompose=function(){var e=this.sx,t=this.shy,n=this.shx,r=this.sy,i=this.tx,a=this.ty,o=Math.sqrt(e*e+t*t),s=(e/=o)*n+(t/=o)*r;n-=e*s,r-=t*s;var c=Math.sqrt(n*n+r*r);return s/=c,e*(r/=c)<t*(n/=c)&&(e=-e,t=-t,s=-s,o=-o),{scale:new Ke(o,0,0,c,0,0),translate:new Ke(1,0,0,1,i,a),rotate:new Ke(e,t,-t,e,0,0),skew:new Ke(1,0,s,1,0,0)}},Ke.prototype.toString=function(e){return this.join(" ")},Ke.prototype.inversed=function(){var e=this.sx,t=this.shy,n=this.shx,r=this.sy,i=this.tx,a=this.ty,o=1/(e*r-t*n),s=r*o,c=-t*o,l=-n*o,u=e*o;return new Ke(s,c,l,u,-s*i-l*a,-c*i-u*a)},Ke.prototype.applyToPoint=function(e){var t=e.x*this.sx+e.y*this.shx+this.tx,n=e.x*this.shy+e.y*this.sy+this.ty;return new dn(t,n)},Ke.prototype.applyToRectangle=function(e){var t=this.applyToPoint(e),n=this.applyToPoint(new dn(e.x+e.w,e.y+e.h));return new hn(t.x,t.y,n.x-t.x,n.y-t.y)},Ke.prototype.clone=function(){var e=this.sx,t=this.shy,n=this.shx,r=this.sy,i=this.tx,a=this.ty;return new Ke(e,t,n,r,i,a)},h.Matrix=Ke;var Ue=h.matrixMult=function(e,t){return t.multiply(e)},ze=new Ke(1,0,0,1,0,0);h.unitMatrix=h.identityMatrix=ze;var He=function(e,t){if(!Ie[e]){var n=(t instanceof Ce?"Sh":"P")+(Object.keys(_e).length+1).toString(10);t.id=n,Ie[e]=n,_e[n]=t,je.publish("addPattern",t)}};h.ShadingPattern=Ce,h.TilingPattern=Le,h.addShadingPattern=function(e,t){return C("addShadingPattern()"),He(e,t),this},h.beginTilingPattern=function(e){C("beginTilingPattern()"),vn(e.boundingBox[0],e.boundingBox[1],e.boundingBox[2]-e.boundingBox[0],e.boundingBox[3]-e.boundingBox[1],e.matrix)},h.endTilingPattern=function(e,t){C("endTilingPattern()"),t.stream=W[T].join("\n"),He(e,t),je.publish("endTilingPattern",t),qe.pop().restore()};var Ve=h.__private__.newObject=function(){var e=We();return Ye(e,!0),e},We=h.__private__.newObjectDeferred=function(){return K++,U[K]=function(){return H},K},Ye=function(e,t){return t="boolean"==typeof t&&t,U[e]=H,t&&Q(e+" 0 obj"),e},Ge=h.__private__.newAdditionalObject=function(){var e={objId:We(),content:""};return V.push(e),e},$e=We(),Xe=We(),Je=h.__private__.decodeColorString=function(e){var t=e.split(" ");if(2!==t.length||"g"!==t[1]&&"G"!==t[1])5!==t.length||"k"!==t[4]&&"K"!==t[4]||(t=[(1-t[0])*(1-t[3]),(1-t[1])*(1-t[3]),(1-t[2])*(1-t[3]),"r"]);else{var n=parseFloat(t[0]);t=[n,n,n,"r"]}for(var r="#",i=0;i<3;i++)r+=("0"+Math.floor(255*parseFloat(t[i])).toString(16)).slice(-2);return r},Qe=h.__private__.encodeColorString=function(e){var t;"string"==typeof e&&(e={ch1:e});var n=e.ch1,r=e.ch2,i=e.ch3,a=e.ch4,o="draw"===e.pdfColorType?["G","RG","K"]:["g","rg","k"];if("string"==typeof n&&"#"!==n.charAt(0)){var s=new ae(n);if(s.ok)n=s.toHex();else if(!/^\d*\.?\d*$/.test(n))throw new Error('Invalid color "'+n+'" passed to jsPDF.encodeColorString.')}if("string"==typeof n&&/^#[0-9A-Fa-f]{3}$/.test(n)&&(n="#"+n[1]+n[1]+n[2]+n[2]+n[3]+n[3]),"string"==typeof n&&/^#[0-9A-Fa-f]{6}$/.test(n)){var c=parseInt(n.substr(1),16);n=c>>16&255,r=c>>8&255,i=255&c}if(void 0===r||void 0===a&&n===r&&r===i)if("string"==typeof n)t=n+" "+o[0];else if(2===e.precision)t=A(n/255)+" "+o[0];else t=E(n/255)+" "+o[0];else if(void 0===a||"object"==typeof a){if(a&&!isNaN(a.a)&&0===a.a)return["1.","1.","1.",o[1]].join(" ");if("string"==typeof n)t=[n,r,i,o[1]].join(" ");else if(2===e.precision)t=[A(n/255),A(r/255),A(i/255),o[1]].join(" ");else t=[E(n/255),E(r/255),E(i/255),o[1]].join(" ")}else if("string"==typeof n)t=[n,r,i,a,o[2]].join(" ");else if(2===e.precision)t=[A(n),A(r),A(i),A(a),o[2]].join(" ");else t=[E(n),E(r),E(i),E(a),o[2]].join(" ");return t},et=h.__private__.getFilters=function(){return o},tt=h.__private__.putStream=function(e){var t=(e=e||{}).data||"",n=e.filters||et(),r=e.alreadyAppliedFilters||[],i=e.addLength1||!1,a=t.length,o=e.objectId,s=function(e){return e};if(null!==u&&void 0===o)throw new Error("ObjectId must be passed to putStream for file encryption");null!==u&&(s=Pt.encryptor(o,0));var c={};!0===n&&(n=["FlateEncode"]);var l=e.additionalKeyValues||[],f=(c=void 0!==Ae.API.processDataByFilters?Ae.API.processDataByFilters(t,n):{data:t,reverseChain:[]}).reverseChain+(Array.isArray(r)?r.join(" "):r.toString());if(0!==c.data.length&&(l.push({key:"Length",value:c.data.length}),!0===i&&l.push({key:"Length1",value:a})),0!=f.length)if(f.split("/").length-1==1)l.push({key:"Filter",value:f});else{l.push({key:"Filter",value:"["+f+"]"});for(var d=0;d<l.length;d+=1)if("DecodeParms"===l[d].key){for(var h=[],p=0;p<c.reverseChain.split("/").length-1;p+=1)h.push("null");h.push(l[d].value),l[d].value="["+h.join(" ")+"]"}}Q("<<");for(var v=0;v<l.length;v++)Q("/"+l[v].key+" "+l[v].value);Q(">>"),0!==c.data.length&&(Q("stream"),Q(s(c.data)),Q("endstream"))},nt=h.__private__.putPage=function(e){var t=e.number,n=e.data,r=e.objId,i=e.contentsObjId;Ye(r,!0),Q("<</Type /Page"),Q("/Parent "+e.rootDictionaryObjId+" 0 R"),Q("/Resources "+e.resourceDictionaryObjId+" 0 R"),Q("/MediaBox ["+parseFloat(k(e.mediaBox.bottomLeftX))+" "+parseFloat(k(e.mediaBox.bottomLeftY))+" "+k(e.mediaBox.topRightX)+" "+k(e.mediaBox.topRightY)+"]"),null!==e.cropBox&&Q("/CropBox ["+k(e.cropBox.bottomLeftX)+" "+k(e.cropBox.bottomLeftY)+" "+k(e.cropBox.topRightX)+" "+k(e.cropBox.topRightY)+"]"),null!==e.bleedBox&&Q("/BleedBox ["+k(e.bleedBox.bottomLeftX)+" "+k(e.bleedBox.bottomLeftY)+" "+k(e.bleedBox.topRightX)+" "+k(e.bleedBox.topRightY)+"]"),null!==e.trimBox&&Q("/TrimBox ["+k(e.trimBox.bottomLeftX)+" "+k(e.trimBox.bottomLeftY)+" "+k(e.trimBox.topRightX)+" "+k(e.trimBox.topRightY)+"]"),null!==e.artBox&&Q("/ArtBox ["+k(e.artBox.bottomLeftX)+" "+k(e.artBox.bottomLeftY)+" "+k(e.artBox.topRightX)+" "+k(e.artBox.topRightY)+"]"),"number"==typeof e.userUnit&&1!==e.userUnit&&Q("/UserUnit "+e.userUnit),je.publish("putPage",{objId:r,pageContext:Ze[t],pageNumber:t,page:n}),Q("/Contents "+i+" 0 R"),Q(">>"),Q("endobj");var a=n.join("\n");return w===b&&(a+="\nQ"),Ye(i,!0),tt({data:a,filters:et(),objectId:i}),Q("endobj"),r},rt=h.__private__.putPages=function(){var e,t,n=[];for(e=1;e<=Fe;e++)Ze[e].objId=We(),Ze[e].contentsObjId=We();for(e=1;e<=Fe;e++)n.push(nt({number:e,data:W[e],objId:Ze[e].objId,contentsObjId:Ze[e].contentsObjId,mediaBox:Ze[e].mediaBox,cropBox:Ze[e].cropBox,bleedBox:Ze[e].bleedBox,trimBox:Ze[e].trimBox,artBox:Ze[e].artBox,userUnit:Ze[e].userUnit,rootDictionaryObjId:$e,resourceDictionaryObjId:Xe}));Ye($e,!0),Q("<</Type /Pages");var r="/Kids [";for(t=0;t<Fe;t++)r+=n[t]+" 0 R ";Q(r+"]"),Q("/Count "+Fe),Q(">>"),Q("endobj"),je.publish("postPutPages")},it=function(e){var t=function(e,t){return-1!==e.indexOf(" ")?"("+ht(e,t)+")":ht(e,t)};je.publish("putFont",{font:e,out:Q,newObject:Ve,putStream:tt,pdfEscapeWithNeededParanthesis:t}),!0!==e.isAlreadyPutted&&(e.objectNumber=Ve(),Q("<<"),Q("/Type /Font"),Q("/BaseFont /"+t(e.postScriptName)),Q("/Subtype /Type1"),"string"==typeof e.encoding&&Q("/Encoding /"+e.encoding),Q("/FirstChar 32"),Q("/LastChar 255"),Q(">>"),Q("endobj"))},at=function(e){e.objectNumber=Ve();var t=[];t.push({key:"Type",value:"/XObject"}),t.push({key:"Subtype",value:"/Form"}),t.push({key:"BBox",value:"["+[k(e.x),k(e.y),k(e.x+e.width),k(e.y+e.height)].join(" ")+"]"}),t.push({key:"Matrix",value:"["+e.matrix.toString()+"]"});var n=e.pages[1].join("\n");tt({data:n,additionalKeyValues:t,objectId:e.objectNumber}),Q("endobj")},ot=function(e,t){t||(t=21);var n=Ve(),r=function(e,t){var n,r=[],i=1/(t-1);for(n=0;n<1;n+=i)r.push(n);if(r.push(1),0!=e[0].offset){var a={offset:0,color:e[0].color};e.unshift(a)}if(1!=e[e.length-1].offset){var o={offset:1,color:e[e.length-1].color};e.push(o)}for(var s="",c=0,l=0;l<r.length;l++){for(n=r[l];n>e[c+1].offset;)c++;var u=e[c].offset,f=(n-u)/(e[c+1].offset-u),d=e[c].color,h=e[c+1].color;s+=q(Math.round((1-f)*d[0]+f*h[0]).toString(16))+q(Math.round((1-f)*d[1]+f*h[1]).toString(16))+q(Math.round((1-f)*d[2]+f*h[2]).toString(16))}return s.trim()}(e.colors,t),i=[];i.push({key:"FunctionType",value:"0"}),i.push({key:"Domain",value:"[0.0 1.0]"}),i.push({key:"Size",value:"["+t+"]"}),i.push({key:"BitsPerSample",value:"8"}),i.push({key:"Range",value:"[0.0 1.0 0.0 1.0 0.0 1.0]"}),i.push({key:"Decode",value:"[0.0 1.0 0.0 1.0 0.0 1.0]"}),tt({data:r,additionalKeyValues:i,alreadyAppliedFilters:["/ASCIIHexDecode"],objectId:n}),Q("endobj"),e.objectNumber=Ve(),Q("<< /ShadingType "+e.type),Q("/ColorSpace /DeviceRGB");var a="/Coords ["+k(parseFloat(e.coords[0]))+" "+k(parseFloat(e.coords[1]))+" ";2===e.type?a+=k(parseFloat(e.coords[2]))+" "+k(parseFloat(e.coords[3])):a+=k(parseFloat(e.coords[2]))+" "+k(parseFloat(e.coords[3]))+" "+k(parseFloat(e.coords[4]))+" "+k(parseFloat(e.coords[5])),Q(a+="]"),e.matrix&&Q("/Matrix ["+e.matrix.toString()+"]"),Q("/Function "+n+" 0 R"),Q("/Extend [true true]"),Q(">>"),Q("endobj")},st=function(e,t){var n=We(),r=Ve();t.push({resourcesOid:n,objectOid:r}),e.objectNumber=r;var i=[];i.push({key:"Type",value:"/Pattern"}),i.push({key:"PatternType",value:"1"}),i.push({key:"PaintType",value:"1"}),i.push({key:"TilingType",value:"1"}),i.push({key:"BBox",value:"["+e.boundingBox.map(k).join(" ")+"]"}),i.push({key:"XStep",value:k(e.xStep)}),i.push({key:"YStep",value:k(e.yStep)}),i.push({key:"Resources",value:n+" 0 R"}),e.matrix&&i.push({key:"Matrix",value:"["+e.matrix.toString()+"]"}),tt({data:e.stream,additionalKeyValues:i,objectId:e.objectNumber}),Q("endobj")},ct=function(e){for(var t in e.objectNumber=Ve(),Q("<<"),e)switch(t){case"opacity":Q("/ca "+A(e[t]));break;case"stroke-opacity":Q("/CA "+A(e[t]))}Q(">>"),Q("endobj")},lt=function(e){Ye(e.resourcesOid,!0),Q("<<"),Q("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]"),function(){for(var e in Q("/Font <<"),ke)ke.hasOwnProperty(e)&&(!1===f||!0===f&&d.hasOwnProperty(e))&&Q("/"+e+" "+ke[e].objectNumber+" 0 R");Q(">>")}(),function(){if(Object.keys(_e).length>0){for(var e in Q("/Shading <<"),_e)_e.hasOwnProperty(e)&&_e[e]instanceof Ce&&_e[e].objectNumber>=0&&Q("/"+e+" "+_e[e].objectNumber+" 0 R");je.publish("putShadingPatternDict"),Q(">>")}}(),function(e){if(Object.keys(_e).length>0){for(var t in Q("/Pattern <<"),_e)_e.hasOwnProperty(t)&&_e[t]instanceof h.TilingPattern&&_e[t].objectNumber>=0&&_e[t].objectNumber<e&&Q("/"+t+" "+_e[t].objectNumber+" 0 R");je.publish("putTilingPatternDict"),Q(">>")}}(e.objectOid),function(){if(Object.keys(Oe).length>0){var e;for(e in Q("/ExtGState <<"),Oe)Oe.hasOwnProperty(e)&&Oe[e].objectNumber>=0&&Q("/"+e+" "+Oe[e].objectNumber+" 0 R");je.publish("putGStateDict"),Q(">>")}}(),function(){for(var e in Q("/XObject <<"),Te)Te.hasOwnProperty(e)&&Te[e].objectNumber>=0&&Q("/"+e+" "+Te[e].objectNumber+" 0 R");je.publish("putXobjectDict"),Q(">>")}(),Q(">>"),Q("endobj")},ut=function(){var e=[];(function(){for(var e in ke)ke.hasOwnProperty(e)&&(!1===f||!0===f&&d.hasOwnProperty(e))&&it(ke[e])})(),function(){var e;for(e in Oe)Oe.hasOwnProperty(e)&&ct(Oe[e])}(),function(){for(var e in Te)Te.hasOwnProperty(e)&&at(Te[e])}(),function(e){var t;for(t in _e)_e.hasOwnProperty(t)&&(_e[t]instanceof Ce?ot(_e[t]):_e[t]instanceof Le&&st(_e[t],e))}(e),je.publish("putResources"),e.forEach(lt),lt({resourcesOid:Xe,objectOid:Number.MAX_SAFE_INTEGER}),je.publish("postPutResources")},ft=function(e){Ee[e.fontName]=Ee[e.fontName]||{},Ee[e.fontName][e.fontStyle]=e.id},dt=function(e,t,n,r,i){var a={id:"F"+(Object.keys(ke).length+1).toString(10),postScriptName:e,fontName:t,fontStyle:n,encoding:r,isStandardFont:i||!1,metadata:{}};return je.publish("addFont",{font:a,instance:this}),ke[a.id]=a,ft(a),a.id},ht=h.__private__.pdfEscape=h.pdfEscape=function(e,t){return function(e,t){var n,r,i,a,o,s,c,l,u;if(i=(t=t||{}).sourceEncoding||"Unicode",o=t.outputEncoding,(t.autoencode||o)&&ke[me].metadata&&ke[me].metadata[i]&&ke[me].metadata[i].encoding&&(a=ke[me].metadata[i].encoding,!o&&ke[me].encoding&&(o=ke[me].encoding),!o&&a.codePages&&(o=a.codePages[0]),"string"==typeof o&&(o=a[o]),o)){for(c=!1,s=[],n=0,r=e.length;n<r;n++)(l=o[e.charCodeAt(n)])?s.push(String.fromCharCode(l)):s.push(e[n]),s[n].charCodeAt(0)>>8&&(c=!0);e=s.join("")}for(n=e.length;void 0===c&&0!==n;)e.charCodeAt(n-1)>>8&&(c=!0),n--;if(!c)return e;for(s=t.noBOM?[]:[254,255],n=0,r=e.length;n<r;n++){if((u=(l=e.charCodeAt(n))>>8)>>8)throw new Error("Character at position "+n+" of string '"+e+"' exceeds 16bits. Cannot be encoded into UCS-2 BE");s.push(u),s.push(l-(u<<8))}return String.fromCharCode.apply(void 0,s)}(e,t).replace(/\\/g,"\\\\").replace(/\(/g,"\\(").replace(/\)/g,"\\)")},pt=h.__private__.beginPage=function(e){W[++Fe]=[],Ze[Fe]={objId:0,contentsObjId:0,userUnit:Number(s),artBox:null,bleedBox:null,cropBox:null,trimBox:null,mediaBox:{bottomLeftX:0,bottomLeftY:0,topRightX:Number(e[0]),topRightY:Number(e[1])}},gt(Fe),X(W[T])},vt=function(e,t){var r,a,o;switch(n=t||n,"string"==typeof e&&(r=g(e.toLowerCase()),Array.isArray(r)&&(a=r[0],o=r[1])),Array.isArray(e)&&(a=e[0]*ge,o=e[1]*ge),isNaN(a)&&(a=i[0],o=i[1]),(a>14400||o>14400)&&(J.warn("A page in a PDF can not be wider or taller than 14400 userUnit. jsPDF limits the width/height to 14400"),a=Math.min(14400,a),o=Math.min(14400,o)),i=[a,o],n.substr(0,1)){case"l":o>a&&(i=[o,a]);break;case"p":a>o&&(i=[o,a])}pt(i),Yt(Wt),Q(nn),0!==ln&&Q(ln+" J"),0!==un&&Q(un+" j"),je.publish("addPage",{pageNumber:Fe})},mt=function(e){e>0&&e<=Fe&&(W.splice(e,1),Ze.splice(e,1),Fe--,T>Fe&&(T=Fe),this.setPage(T))},gt=function(e){e>0&&e<=Fe&&(T=e)},yt=h.__private__.getNumberOfPages=h.getNumberOfPages=function(){return W.length-1},bt=function(e,t,n){var r,i=void 0;return n=n||{},e=void 0!==e?e:ke[me].fontName,t=void 0!==t?t:ke[me].fontStyle,r=e.toLowerCase(),void 0!==Ee[r]&&void 0!==Ee[r][t]?i=Ee[r][t]:void 0!==Ee[e]&&void 0!==Ee[e][t]?i=Ee[e][t]:!1===n.disableWarning&&J.warn("Unable to look up font label for font '"+e+"', '"+t+"'. Refer to getFontList() for available fonts."),i||n.noFallback||null==(i=Ee.times[t])&&(i=Ee.times.normal),i},wt=h.__private__.putInfo=function(){var e=Ve(),t=function(e){return e};for(var n in null!==u&&(t=Pt.encryptor(e,0)),Q("<<"),Q("/Producer ("+ht(t("jsPDF "+Ae.version))+")"),ve)ve.hasOwnProperty(n)&&ve[n]&&Q("/"+n.substr(0,1).toUpperCase()+n.substr(1)+" ("+ht(t(ve[n]))+")");Q("/CreationDate ("+ht(t(I))+")"),Q(">>"),Q("endobj")},Nt=h.__private__.putCatalog=function(e){var t=(e=e||{}).rootDictionaryObjId||$e;switch(Ve(),Q("<<"),Q("/Type /Catalog"),Q("/Pages "+t+" 0 R"),se||(se="fullwidth"),se){case"fullwidth":Q("/OpenAction [3 0 R /FitH null]");break;case"fullheight":Q("/OpenAction [3 0 R /FitV null]");break;case"fullpage":Q("/OpenAction [3 0 R /Fit]");break;case"original":Q("/OpenAction [3 0 R /XYZ null null 1]");break;default:var n=""+se;"%"===n.substr(n.length-1)&&(se=parseInt(se)/100),"number"==typeof se&&Q("/OpenAction [3 0 R /XYZ null null "+A(se)+"]")}switch(de||(de="continuous"),de){case"continuous":Q("/PageLayout /OneColumn");break;case"single":Q("/PageLayout /SinglePage");break;case"two":case"twoleft":Q("/PageLayout /TwoColumnLeft");break;case"tworight":Q("/PageLayout /TwoColumnRight")}ue&&Q("/PageMode /"+ue),je.publish("putCatalog"),Q(">>"),Q("endobj")},xt=h.__private__.putTrailer=function(){Q("trailer"),Q("<<"),Q("/Size "+(K+1)),Q("/Root "+K+" 0 R"),Q("/Info "+(K-1)+" 0 R"),null!==u&&Q("/Encrypt "+Pt.oid+" 0 R"),Q("/ID [ <"+O+"> <"+O+"> ]"),Q(">>")},St=h.__private__.putHeader=function(){Q("%PDF-"+p),Q("%ºß¬à")},kt=h.__private__.putXRef=function(){var e="0000000000";Q("xref"),Q("0 "+(K+1)),Q("0000000000 65535 f ");for(var t=1;t<=K;t++)"function"==typeof U[t]?Q((e+U[t]()).slice(-10)+" 00000 n "):void 0!==U[t]?Q((e+U[t]).slice(-10)+" 00000 n "):Q("0000000000 00000 n ")},Ct=h.__private__.buildDocument=function(){K=0,H=0,z=[],U=[],V=[],$e=We(),Xe=We(),X(z),je.publish("buildDocument"),St(),rt(),function(){je.publish("putAdditionalObjects");for(var e=0;e<V.length;e++){var t=V[e];Ye(t.objId,!0),Q(t.content),Q("endobj")}je.publish("postPutAdditionalObjects")}(),ut(),null!==u&&(Pt.oid=Ve(),Q("<<"),Q("/Filter /Standard"),Q("/V "+Pt.v),Q("/R "+Pt.r),Q("/U <"+Pt.toHexString(Pt.U)+">"),Q("/O <"+Pt.toHexString(Pt.O)+">"),Q("/P "+Pt.P),Q(">>"),Q("endobj")),wt(),Nt();var e=H;return kt(),xt(),Q("startxref"),Q(""+e),Q("%%EOF"),X(W[T]),z.join("\n")},Lt=h.__private__.getBlob=function(e){return new Blob([te(e)],{type:"application/pdf"})},At=h.output=h.__private__.output=function(e){return e.foo=function(){try{return e.apply(this,arguments)}catch(e){var t=e.stack||"";~t.indexOf(" at ")&&(t=t.split(" at ")[1]);var n="Error in function "+t.split("\n")[0].split("<")[0]+": "+e.message;if(!$.console)throw new Error(n);$.console.error(n,e),$.alert&&alert(n)}},e.foo.bar=e,e.foo}((function(e,t){switch("string"==typeof(t=t||{})?t={filename:t}:t.filename=t.filename||"generated.pdf",e){case void 0:return Ct();case"save":h.save(t.filename);break;case"arraybuffer":return te(Ct());case"blob":return Lt(Ct());case"bloburi":case"bloburl":if(void 0!==$.URL&&"function"==typeof $.URL.createObjectURL)return $.URL&&$.URL.createObjectURL(Lt(Ct()))||void 0;J.warn("bloburl is not supported by your system, because URL.createObjectURL is not supported by your browser.");break;case"datauristring":case"dataurlstring":var n="",r=Ct();try{n=re(r)}catch(e){n=re(unescape(encodeURIComponent(r)))}return"data:application/pdf;filename="+t.filename+";base64,"+n;case"pdfobjectnewwindow":if("[object Window]"===Object.prototype.toString.call($)){var i='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><script src="'+(t.pdfObjectUrl||"https://cdnjs.cloudflare.com/ajax/libs/pdfobject/2.1.1/pdfobject.min.js")+'"><\/script><script >PDFObject.embed("'+this.output("dataurlstring")+'", '+JSON.stringify(t)+");<\/script></body></html>",a=$.open();return null!==a&&a.document.write(i),a}throw new Error("The option pdfobjectnewwindow just works in a browser-environment.");case"pdfjsnewwindow":if("[object Window]"===Object.prototype.toString.call($)){var o='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe id="pdfViewer" src="'+(t.pdfJsUrl||"examples/PDF.js/web/viewer.html")+"?file=&downloadName="+t.filename+'" width="500px" height="400px" /></body></html>',s=$.open();if(null!==s){s.document.write(o);var c=this;s.document.documentElement.querySelector("#pdfViewer").onload=function(){s.document.title=t.filename,s.document.documentElement.querySelector("#pdfViewer").contentWindow.PDFViewerApplication.open(c.output("bloburl"))}}return s}throw new Error("The option pdfjsnewwindow just works in a browser-environment.");case"dataurlnewwindow":if("[object Window]"!==Object.prototype.toString.call($))throw new Error("The option dataurlnewwindow just works in a browser-environment.");var l='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe src="'+this.output("datauristring",t)+'"></iframe></body></html>',u=$.open();if(null!==u&&(u.document.write(l),u.document.title=t.filename),u||"undefined"==typeof safari)return u;break;case"datauri":case"dataurl":return $.document.location.href=this.output("datauristring",t);default:return null}})),Et=function(e){return!0===Array.isArray(Re)&&Re.indexOf(e)>-1};switch(r){case"pt":ge=1;break;case"mm":ge=72/25.4;break;case"cm":ge=72/2.54;break;case"in":ge=72;break;case"px":ge=1==Et("px_scaling")?.75:96/72;break;case"pc":case"em":ge=12;break;case"ex":ge=6;break;default:throw new Error("Invalid unit: "+r)}var Pt=null;j(),D();var _t=h.__private__.getPageInfo=h.getPageInfo=function(e){if(isNaN(e)||e%1!=0)throw new Error("Invalid argument passed to jsPDF.getPageInfo");return{objId:Ze[e].objId,pageNumber:e,pageContext:Ze[e]}},It=h.__private__.getPageInfoByObjId=function(e){if(isNaN(e)||e%1!=0)throw new Error("Invalid argument passed to jsPDF.getPageInfoByObjId");for(var t in Ze)if(Ze[t].objId===e)break;return _t(t)},Ot=h.__private__.getCurrentPageInfo=h.getCurrentPageInfo=function(){return{objId:Ze[T].objId,pageNumber:T,pageContext:Ze[T]}};h.addPage=function(){return vt.apply(this,arguments),this},h.setPage=function(){return gt.apply(this,arguments),X.call(this,W[T]),this},h.insertPage=function(e){return this.addPage(),this.movePage(T,e),this},h.movePage=function(e,t){var n,r;if(e>t){n=W[e],r=Ze[e];for(var i=e;i>t;i--)W[i]=W[i-1],Ze[i]=Ze[i-1];W[t]=n,Ze[t]=r,this.setPage(t)}else if(e<t){n=W[e],r=Ze[e];for(var a=e;a<t;a++)W[a]=W[a+1],Ze[a]=Ze[a+1];W[t]=n,Ze[t]=r,this.setPage(t)}return this},h.deletePage=function(){return mt.apply(this,arguments),this},h.__private__.text=h.text=function(e,t,n,r,i){var a,o,s,c,l,u,f,h,p=(r=r||{}).scope||this;if("number"==typeof e&&"number"==typeof t&&("string"==typeof n||Array.isArray(n))){var v=n;n=t,t=e,e=v}if(arguments[3]instanceof Ke==0?(s=arguments[4],c=arguments[5],"object"==typeof(f=arguments[3])&&null!==f||("string"==typeof s&&(c=s,s=null),"string"==typeof f&&(c=f,f=null),"number"==typeof f&&(s=f,f=null),r={flags:f,angle:s,align:c})):(C("The transform parameter of text() with a Matrix value"),h=i),isNaN(t)||isNaN(n)||null==e)throw new Error("Invalid arguments passed to jsPDF.text");if(0===e.length)return p;var m,g="",y="number"==typeof r.lineHeightFactor?r.lineHeightFactor:Vt,N=p.internal.scaleFactor;function x(e){return e=e.split("\t").join(Array(r.TabLen||9).join(" ")),ht(e,f)}function S(e){for(var t,n=e.concat(),r=[],i=n.length;i--;)"string"==typeof(t=n.shift())?r.push(t):Array.isArray(e)&&(1===t.length||void 0===t[1]&&void 0===t[2])?r.push(t[0]):r.push([t[0],t[1],t[2]]);return r}function L(e,t){var n;if("string"==typeof e)n=t(e)[0];else if(Array.isArray(e)){for(var r,i,a=e.concat(),o=[],s=a.length;s--;)"string"==typeof(r=a.shift())?o.push(t(r)[0]):Array.isArray(r)&&"string"==typeof r[0]&&(i=t(r[0],r[1],r[2]),o.push([i[0],i[1],i[2]]));n=o}return n}var A=!1,E=!0;if("string"==typeof e)A=!0;else if(Array.isArray(e)){var _=e.concat();o=[];for(var I,O=_.length;O--;)("string"!=typeof(I=_.shift())||Array.isArray(I)&&"string"!=typeof I[0])&&(E=!1);A=E}if(!1===A)throw new Error('Type of text must be string or Array. "'+e+'" is not recognized.');"string"==typeof e&&(e=e.match(/[\r?\n]/)?e.split(/\r\n|\r|\n/g):[e]);var M=oe/p.internal.scaleFactor,D=M*(Vt-1);switch(r.baseline){case"bottom":n-=D;break;case"top":n+=M-D;break;case"hanging":n+=M-2*D;break;case"middle":n+=M/2-D}if((u=r.maxWidth||0)>0&&("string"==typeof e?e=p.splitTextToSize(e,u):"[object Array]"===Object.prototype.toString.call(e)&&(e=e.reduce((function(e,t){return e.concat(p.splitTextToSize(t,u))}),[]))),a={text:e,x:t,y:n,options:r,mutex:{pdfEscape:ht,activeFontKey:me,fonts:ke,activeFontSize:oe}},je.publish("preProcessText",a),e=a.text,s=(r=a.options).angle,h instanceof Ke==0&&s&&"number"==typeof s){s*=Math.PI/180,0===r.rotationDirection&&(s=-s),w===b&&(s=-s);var F=Math.cos(s),Z=Math.sin(s);h=new Ke(F,Z,-Z,F,0,0)}else s&&s instanceof Ke&&(h=s);w!==b||h||(h=ze),void 0!==(l=r.charSpace||sn)&&(g+=k(P(l))+" Tc\n",this.setCharSpace(this.getCharSpace()||0)),r.lang;var j=-1,R=void 0!==r.renderingMode?r.renderingMode:r.stroke,T=p.internal.getCurrentPageInfo().pageContext;switch(R){case 0:case!1:case"fill":j=0;break;case 1:case!0:case"stroke":j=1;break;case 2:case"fillThenStroke":j=2;break;case 3:case"invisible":j=3;break;case 4:case"fillAndAddForClipping":j=4;break;case 5:case"strokeAndAddPathForClipping":j=5;break;case 6:case"fillThenStrokeAndAddToPathForClipping":j=6;break;case 7:case"addToPathForClipping":j=7}var B=void 0!==T.usedRenderingMode?T.usedRenderingMode:-1;-1!==j?g+=j+" Tr\n":-1!==B&&(g+="0 Tr\n"),-1!==j&&(T.usedRenderingMode=j),c=r.align||"left";var q,K=oe*y,U=p.internal.pageSize.getWidth(),z=ke[me];l=r.charSpace||sn,u=r.maxWidth||0,f=Object.assign({autoencode:!0,noBOM:!0},r.flags);var H=[];if("[object Array]"===Object.prototype.toString.call(e)){var V;o=S(e),"left"!==c&&(q=o.map((function(e){return p.getStringUnitWidth(e,{font:z,charSpace:l,fontSize:oe,doKerning:!1})*oe/N})));var W,Y=0;if("right"===c){t-=q[0],e=[],O=o.length;for(var G=0;G<O;G++)0===G?(W=Jt(t),V=Qt(n)):(W=P(Y-q[G]),V=-K),e.push([o[G],W,V]),Y=q[G]}else if("center"===c){t-=q[0]/2,e=[],O=o.length;for(var $=0;$<O;$++)0===$?(W=Jt(t),V=Qt(n)):(W=P((Y-q[$])/2),V=-K),e.push([o[$],W,V]),Y=q[$]}else if("left"===c){e=[],O=o.length;for(var X=0;X<O;X++)e.push(o[X])}else{if("justify"!==c)throw new Error('Unrecognized alignment option, use "left", "center", "right" or "justify".');e=[],O=o.length,u=0!==u?u:U;for(var J=0;J<O;J++)V=0===J?Qt(n):-K,W=0===J?Jt(t):0,J<O-1&&H.push(k(P((u-q[J])/(o[J].split(" ").length-1)))),e.push([o[J],W,V])}}!0===("boolean"==typeof r.R2L?r.R2L:le)&&(e=L(e,(function(e,t,n){return[e.split("").reverse().join(""),t,n]}))),a={text:e,x:t,y:n,options:r,mutex:{pdfEscape:ht,activeFontKey:me,fonts:ke,activeFontSize:oe}},je.publish("postProcessText",a),e=a.text,m=a.mutex.isHex||!1;var ee=ke[me].encoding;"WinAnsiEncoding"!==ee&&"StandardEncoding"!==ee||(e=L(e,(function(e,t,n){return[x(e),t,n]}))),o=S(e),e=[];for(var te,ne,re,ie=Array.isArray(o[0])?1:0,ae="",se=function(e,t,n){var i="";return n instanceof Ke?(n="number"==typeof r.angle?Ue(n,new Ke(1,0,0,1,e,t)):Ue(new Ke(1,0,0,1,e,t),n),w===b&&(n=Ue(new Ke(1,0,0,-1,0,0),n)),i=n.join(" ")+" Tm\n"):i=k(e)+" "+k(t)+" Td\n",i},ce=0;ce<o.length;ce++){switch(ae="",ie){case 1:re=(m?"<":"(")+o[ce][0]+(m?">":")"),te=parseFloat(o[ce][1]),ne=parseFloat(o[ce][2]);break;case 0:re=(m?"<":"(")+o[ce]+(m?">":")"),te=Jt(t),ne=Qt(n)}void 0!==H&&void 0!==H[ce]&&(ae=H[ce]+" Tw\n"),0===ce?e.push(ae+se(te,ne,h)+re):0===ie?e.push(ae+re):1===ie&&e.push(ae+se(te,ne,h)+re)}e=0===ie?e.join(" Tj\nT* "):e.join(" Tj\n"),e+=" Tj\n";var ue="BT\n/";return ue+=me+" "+oe+" Tf\n",ue+=k(oe*y)+" TL\n",ue+=an+"\n",ue+=g,ue+=e,Q(ue+="ET"),d[me]=!0,p};var Mt=h.__private__.clip=h.clip=function(e){return Q("evenodd"===e?"W*":"W"),this};h.clipEvenOdd=function(){return Mt("evenodd")},h.__private__.discardPath=h.discardPath=function(){return Q("n"),this};var Dt=h.__private__.isValidStyle=function(e){var t=!1;return-1!==[void 0,null,"S","D","F","DF","FD","f","f*","B","B*","n"].indexOf(e)&&(t=!0),t};h.__private__.setDefaultPathOperation=h.setDefaultPathOperation=function(e){return Dt(e)&&(l=e),this};var Ft=h.__private__.getStyle=h.getStyle=function(e){var t=l;switch(e){case"D":case"S":t="S";break;case"F":t="f";break;case"FD":case"DF":t="B";break;case"f":case"f*":case"B":case"B*":t=e}return t},Zt=h.close=function(){return Q("h"),this};h.stroke=function(){return Q("S"),this},h.fill=function(e){return jt("f",e),this},h.fillEvenOdd=function(e){return jt("f*",e),this},h.fillStroke=function(e){return jt("B",e),this},h.fillStrokeEvenOdd=function(e){return jt("B*",e),this};var jt=function(e,t){"object"==typeof t?Bt(t,e):Q(e)},Rt=function(e){null===e||w===b&&void 0===e||(e=Ft(e),Q(e))};function Tt(e,t,n,r,i){var a=new Le(t||this.boundingBox,n||this.xStep,r||this.yStep,this.gState,i||this.matrix);a.stream=this.stream;var o=e+"$$"+this.cloneIndex+++"$$";return He(o,a),a}var Bt=function(e,t){var n=Ie[e.key],r=_e[n];if(r instanceof Ce)Q("q"),Q(qt(t)),r.gState&&h.setGState(r.gState),Q(e.matrix.toString()+" cm"),Q("/"+n+" sh"),Q("Q");else if(r instanceof Le){var i=new Ke(1,0,0,-1,0,bn());e.matrix&&(i=i.multiply(e.matrix||ze),n=Tt.call(r,e.key,e.boundingBox,e.xStep,e.yStep,i).id),Q("q"),Q("/Pattern cs"),Q("/"+n+" scn"),r.gState&&h.setGState(r.gState),Q(t),Q("Q")}},qt=function(e){switch(e){case"f":case"F":case"n":return"W n";case"f*":return"W* n";case"B":case"S":return"W S";case"B*":return"W* S"}},Kt=h.moveTo=function(e,t){return Q(k(P(e))+" "+k(_(t))+" m"),this},Ut=h.lineTo=function(e,t){return Q(k(P(e))+" "+k(_(t))+" l"),this},zt=h.curveTo=function(e,t,n,r,i,a){return Q([k(P(e)),k(_(t)),k(P(n)),k(_(r)),k(P(i)),k(_(a)),"c"].join(" ")),this};h.__private__.line=h.line=function(e,t,n,r,i){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r)||!Dt(i))throw new Error("Invalid arguments passed to jsPDF.line");return w===y?this.lines([[n-e,r-t]],e,t,[1,1],i||"S"):this.lines([[n-e,r-t]],e,t,[1,1]).stroke()},h.__private__.lines=h.lines=function(e,t,n,r,i,a){var o,s,c,l,u,f,d,h,p,v,m,g;if("number"==typeof e&&(g=n,n=t,t=e,e=g),r=r||[1,1],a=a||!1,isNaN(t)||isNaN(n)||!Array.isArray(e)||!Array.isArray(r)||!Dt(i)||"boolean"!=typeof a)throw new Error("Invalid arguments passed to jsPDF.lines");for(Kt(t,n),o=r[0],s=r[1],l=e.length,v=t,m=n,c=0;c<l;c++)2===(u=e[c]).length?(v=u[0]*o+v,m=u[1]*s+m,Ut(v,m)):(f=u[0]*o+v,d=u[1]*s+m,h=u[2]*o+v,p=u[3]*s+m,v=u[4]*o+v,m=u[5]*s+m,zt(f,d,h,p,v,m));return a&&Zt(),Rt(i),this},h.path=function(e){for(var t=0;t<e.length;t++){var n=e[t],r=n.c;switch(n.op){case"m":Kt(r[0],r[1]);break;case"l":Ut(r[0],r[1]);break;case"c":zt.apply(this,r);break;case"h":Zt()}}return this},h.__private__.rect=h.rect=function(e,t,n,r,i){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r)||!Dt(i))throw new Error("Invalid arguments passed to jsPDF.rect");return w===y&&(r=-r),Q([k(P(e)),k(_(t)),k(P(n)),k(P(r)),"re"].join(" ")),Rt(i),this},h.__private__.triangle=h.triangle=function(e,t,n,r,i,a,o){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(a)||!Dt(o))throw new Error("Invalid arguments passed to jsPDF.triangle");return this.lines([[n-e,r-t],[i-n,a-r],[e-i,t-a]],e,t,[1,1],o,!0),this},h.__private__.roundedRect=h.roundedRect=function(e,t,n,r,i,a,o){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(a)||!Dt(o))throw new Error("Invalid arguments passed to jsPDF.roundedRect");var s=4/3*(Math.SQRT2-1);return i=Math.min(i,.5*n),a=Math.min(a,.5*r),this.lines([[n-2*i,0],[i*s,0,i,a-a*s,i,a],[0,r-2*a],[0,a*s,-i*s,a,-i,a],[2*i-n,0],[-i*s,0,-i,-a*s,-i,-a],[0,2*a-r],[0,-a*s,i*s,-a,i,-a]],e+i,t,[1,1],o,!0),this},h.__private__.ellipse=h.ellipse=function(e,t,n,r,i){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r)||!Dt(i))throw new Error("Invalid arguments passed to jsPDF.ellipse");var a=4/3*(Math.SQRT2-1)*n,o=4/3*(Math.SQRT2-1)*r;return Kt(e+n,t),zt(e+n,t-o,e+a,t-r,e,t-r),zt(e-a,t-r,e-n,t-o,e-n,t),zt(e-n,t+o,e-a,t+r,e,t+r),zt(e+a,t+r,e+n,t+o,e+n,t),Rt(i),this},h.__private__.circle=h.circle=function(e,t,n,r){if(isNaN(e)||isNaN(t)||isNaN(n)||!Dt(r))throw new Error("Invalid arguments passed to jsPDF.circle");return this.ellipse(e,t,n,n,r)},h.setFont=function(e,t,n){return n&&(t=S(t,n)),me=bt(e,t,{disableWarning:!1}),this};var Ht=h.__private__.getFont=h.getFont=function(){return ke[bt.apply(h,arguments)]};h.__private__.getFontList=h.getFontList=function(){var e,t,n={};for(e in Ee)if(Ee.hasOwnProperty(e))for(t in n[e]=[],Ee[e])Ee[e].hasOwnProperty(t)&&n[e].push(t);return n},h.addFont=function(e,t,n,r,i){var a=["StandardEncoding","MacRomanEncoding","Identity-H","WinAnsiEncoding"];return arguments[3]&&-1!==a.indexOf(arguments[3])?i=arguments[3]:arguments[3]&&-1==a.indexOf(arguments[3])&&(n=S(n,r)),dt.call(this,e,t,n,i=i||"Identity-H")};var Vt,Wt=e.lineWidth||.200025,Yt=h.__private__.setLineWidth=h.setLineWidth=function(e){return Q(k(P(e))+" w"),this};h.__private__.setLineDash=Ae.API.setLineDash=Ae.API.setLineDashPattern=function(e,t){if(e=e||[],t=t||0,isNaN(t)||!Array.isArray(e))throw new Error("Invalid arguments passed to jsPDF.setLineDash");return e=e.map((function(e){return k(P(e))})).join(" "),t=k(P(t)),Q("["+e+"] "+t+" d"),this};var Gt=h.__private__.getLineHeight=h.getLineHeight=function(){return oe*Vt};h.__private__.getLineHeight=h.getLineHeight=function(){return oe*Vt};var $t=h.__private__.setLineHeightFactor=h.setLineHeightFactor=function(e){return"number"==typeof(e=e||1.15)&&(Vt=e),this},Xt=h.__private__.getLineHeightFactor=h.getLineHeightFactor=function(){return Vt};$t(e.lineHeight);var Jt=h.__private__.getHorizontalCoordinate=function(e){return P(e)},Qt=h.__private__.getVerticalCoordinate=function(e){return w===b?e:Ze[T].mediaBox.topRightY-Ze[T].mediaBox.bottomLeftY-P(e)},en=h.__private__.getHorizontalCoordinateString=h.getHorizontalCoordinateString=function(e){return k(Jt(e))},tn=h.__private__.getVerticalCoordinateString=h.getVerticalCoordinateString=function(e){return k(Qt(e))},nn=e.strokeColor||"0 G";h.__private__.getStrokeColor=h.getDrawColor=function(){return Je(nn)},h.__private__.setStrokeColor=h.setDrawColor=function(e,t,n,r){return nn=Qe({ch1:e,ch2:t,ch3:n,ch4:r,pdfColorType:"draw",precision:2}),Q(nn),this};var rn=e.fillColor||"0 g";h.__private__.getFillColor=h.getFillColor=function(){return Je(rn)},h.__private__.setFillColor=h.setFillColor=function(e,t,n,r){return rn=Qe({ch1:e,ch2:t,ch3:n,ch4:r,pdfColorType:"fill",precision:2}),Q(rn),this};var an=e.textColor||"0 g",on=h.__private__.getTextColor=h.getTextColor=function(){return Je(an)};h.__private__.setTextColor=h.setTextColor=function(e,t,n,r){return an=Qe({ch1:e,ch2:t,ch3:n,ch4:r,pdfColorType:"text",precision:3}),this};var sn=e.charSpace,cn=h.__private__.getCharSpace=h.getCharSpace=function(){return parseFloat(sn||0)};h.__private__.setCharSpace=h.setCharSpace=function(e){if(isNaN(e))throw new Error("Invalid argument passed to jsPDF.setCharSpace");return sn=e,this};var ln=0;h.CapJoinStyles={0:0,butt:0,but:0,miter:0,1:1,round:1,rounded:1,circle:1,2:2,projecting:2,project:2,square:2,bevel:2},h.__private__.setLineCap=h.setLineCap=function(e){var t=h.CapJoinStyles[e];if(void 0===t)throw new Error("Line cap style of '"+e+"' is not recognized. See or extend .CapJoinStyles property for valid styles");return ln=t,Q(t+" J"),this};var un=0;h.__private__.setLineJoin=h.setLineJoin=function(e){var t=h.CapJoinStyles[e];if(void 0===t)throw new Error("Line join style of '"+e+"' is not recognized. See or extend .CapJoinStyles property for valid styles");return un=t,Q(t+" j"),this},h.__private__.setLineMiterLimit=h.__private__.setMiterLimit=h.setLineMiterLimit=h.setMiterLimit=function(e){if(e=e||0,isNaN(e))throw new Error("Invalid argument passed to jsPDF.setLineMiterLimit");return Q(k(P(e))+" M"),this},h.GState=Se,h.setGState=function(e){(e="string"==typeof e?Oe[Me[e]]:fn(null,e)).equals(De)||(Q("/"+e.id+" gs"),De=e)};var fn=function(e,t){if(!e||!Me[e]){var n=!1;for(var r in Oe)if(Oe.hasOwnProperty(r)&&Oe[r].equals(t)){n=!0;break}if(n)t=Oe[r];else{var i="GS"+(Object.keys(Oe).length+1).toString(10);Oe[i]=t,t.id=i}return e&&(Me[e]=t.id),je.publish("addGState",t),t}};h.addGState=function(e,t){return fn(e,t),this},h.saveGraphicsState=function(){return Q("q"),Pe.push({key:me,size:oe,color:an}),this},h.restoreGraphicsState=function(){Q("Q");var e=Pe.pop();return me=e.key,oe=e.size,an=e.color,De=null,this},h.setCurrentTransformationMatrix=function(e){return Q(e.toString()+" cm"),this},h.comment=function(e){return Q("#"+e),this};var dn=function(e,t){var n=e||0;Object.defineProperty(this,"x",{enumerable:!0,get:function(){return n},set:function(e){isNaN(e)||(n=parseFloat(e))}});var r=t||0;Object.defineProperty(this,"y",{enumerable:!0,get:function(){return r},set:function(e){isNaN(e)||(r=parseFloat(e))}});var i="pt";return Object.defineProperty(this,"type",{enumerable:!0,get:function(){return i},set:function(e){i=e.toString()}}),this},hn=function(e,t,n,r){dn.call(this,e,t),this.type="rect";var i=n||0;Object.defineProperty(this,"w",{enumerable:!0,get:function(){return i},set:function(e){isNaN(e)||(i=parseFloat(e))}});var a=r||0;return Object.defineProperty(this,"h",{enumerable:!0,get:function(){return a},set:function(e){isNaN(e)||(a=parseFloat(e))}}),this},pn=function(){this.page=Fe,this.currentPage=T,this.pages=W.slice(0),this.pagesContext=Ze.slice(0),this.x=ye,this.y=be,this.matrix=we,this.width=gn(T),this.height=bn(T),this.outputDestination=G,this.id="",this.objectNumber=-1};pn.prototype.restore=function(){Fe=this.page,T=this.currentPage,Ze=this.pagesContext,W=this.pages,ye=this.x,be=this.y,we=this.matrix,yn(T,this.width),wn(T,this.height),G=this.outputDestination};var vn=function(e,t,n,r,i){qe.push(new pn),Fe=T=0,W=[],ye=e,be=t,we=i,pt([n,r])};for(var mn in h.beginFormObject=function(e,t,n,r,i){return vn(e,t,n,r,i),this},h.endFormObject=function(e){return function(e){if(!Be[e]){var t=new pn,n="Xo"+(Object.keys(Te).length+1).toString(10);t.id=n,Be[e]=n,Te[n]=t,je.publish("addFormObject",t),qe.pop().restore()}}(e),this},h.doFormObject=function(e,t){var n=Te[Be[e]];return Q("q"),Q(t.toString()+" cm"),Q("/"+n.id+" Do"),Q("Q"),this},h.getFormObject=function(e){var t=Te[Be[e]];return{x:t.x,y:t.y,width:t.width,height:t.height,matrix:t.matrix}},h.save=function(e,t){return e=e||"generated.pdf",(t=t||{}).returnPromise=t.returnPromise||!1,!1===t.returnPromise?(ie(Lt(Ct()),e),"function"==typeof ie.unload&&$.setTimeout&&setTimeout(ie.unload,911),this):new Promise((function(t,n){try{var r=ie(Lt(Ct()),e);"function"==typeof ie.unload&&$.setTimeout&&setTimeout(ie.unload,911),t(r)}catch(e){n(e.message)}}))},Ae.API)Ae.API.hasOwnProperty(mn)&&("events"===mn&&Ae.API.events.length?function(e,t){var n,r,i;for(i=t.length-1;-1!==i;i--)n=t[i][0],r=t[i][1],e.subscribe.apply(e,[n].concat("function"==typeof r?[r]:r))}(je,Ae.API.events):h[mn]=Ae.API[mn]);var gn=h.getPageWidth=function(e){return(Ze[e=e||T].mediaBox.topRightX-Ze[e].mediaBox.bottomLeftX)/ge},yn=h.setPageWidth=function(e,t){Ze[e].mediaBox.topRightX=t*ge+Ze[e].mediaBox.bottomLeftX},bn=h.getPageHeight=function(e){return(Ze[e=e||T].mediaBox.topRightY-Ze[e].mediaBox.bottomLeftY)/ge},wn=h.setPageHeight=function(e,t){Ze[e].mediaBox.topRightY=t*ge+Ze[e].mediaBox.bottomLeftY};return h.internal={pdfEscape:ht,getStyle:Ft,getFont:Ht,getFontSize:ce,getCharSpace:cn,getTextColor:on,getLineHeight:Gt,getLineHeightFactor:Xt,write:ee,getHorizontalCoordinate:Jt,getVerticalCoordinate:Qt,getCoordinateString:en,getVerticalCoordinateString:tn,collections:{},newObject:Ve,newAdditionalObject:Ge,newObjectDeferred:We,newObjectDeferredBegin:Ye,getFilters:et,putStream:tt,events:je,scaleFactor:ge,pageSize:{getWidth:function(){return gn(T)},setWidth:function(e){yn(T,e)},getHeight:function(){return bn(T)},setHeight:function(e){wn(T,e)}},encryptionOptions:u,encryption:Pt,getEncryptor:function(e){return null!==u?Pt.encryptor(e,0):function(e){return e}},output:At,getNumberOfPages:yt,pages:W,out:Q,f2:A,f3:E,getPageInfo:_t,getPageInfoByObjId:It,getCurrentPageInfo:Ot,getPDFVersion:v,Point:dn,Rectangle:hn,Matrix:Ke,hasHotfix:Et},Object.defineProperty(h.internal.pageSize,"width",{get:function(){return gn(T)},set:function(e){yn(T,e)},enumerable:!0,configurable:!0}),Object.defineProperty(h.internal.pageSize,"height",{get:function(){return bn(T)},set:function(e){wn(T,e)},enumerable:!0,configurable:!0}),function(e){for(var t=0,n=ne.length;t<n;t++){var r=dt.call(this,e[t][0],e[t][1],e[t][2],ne[t][3],!0);!1===f&&(d[r]=!0);var i=e[t][0].split("-");ft({id:r,fontName:i[0],fontStyle:i[1]||""})}je.publish("addFonts",{fonts:ke,dictionary:Ee})}.call(h,ne),me="F1",vt(i,n),je.publish("initialized"),h}Ne.prototype.lsbFirstWord=function(e){return String.fromCharCode(e>>0&255,e>>8&255,e>>16&255,e>>24&255)},Ne.prototype.toHexString=function(e){return e.split("").map((function(e){return("0"+(255&e.charCodeAt(0)).toString(16)).slice(-2)})).join("")},Ne.prototype.hexToBytes=function(e){for(var t=[],n=0;n<e.length;n+=2)t.push(String.fromCharCode(parseInt(e.substr(n,2),16)));return t.join("")},Ne.prototype.processOwnerPassword=function(e,t){return be(ge(t).substr(0,5),e)},Ne.prototype.encryptor=function(e,t){let n=ge(this.encryptionKey+String.fromCharCode(255&e,e>>8&255,e>>16&255,255&t,t>>8&255)).substr(0,10);return function(e){return be(n,e)}},Se.prototype.equals=function(e){var t,n="id,objectNumber,equals";if(!e||typeof e!=typeof this)return!1;var r=0;for(t in this)if(!(n.indexOf(t)>=0)){if(this.hasOwnProperty(t)&&!e.hasOwnProperty(t))return!1;if(this[t]!==e[t])return!1;r++}for(t in e)e.hasOwnProperty(t)&&n.indexOf(t)<0&&r--;return 0===r},Ae.API={events:[]},Ae.version="2.3.0";var Ee=Ae.API,Pe=1,_e=function(e){return e.replace(/\\/g,"\\\\").replace(/\(/g,"\\(").replace(/\)/g,"\\)")},Ie=function(e){return e.replace(/\\\\/g,"\\").replace(/\\\(/g,"(").replace(/\\\)/g,")")},Oe=function(e){return e.toFixed(2)},Me=function(e){return e.toFixed(5)};Ee.__acroform__={};var De=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e},Fe=function(e){return e*Pe},Ze=function(e){var t=new Je,n=dt.internal.getHeight(e)||0,r=dt.internal.getWidth(e)||0;return t.BBox=[0,0,Number(Oe(r)),Number(Oe(n))],t},je=Ee.__acroform__.setBit=function(e,t){if(e=e||0,t=t||0,isNaN(e)||isNaN(t))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBit");return e|1<<t},Re=Ee.__acroform__.clearBit=function(e,t){if(e=e||0,t=t||0,isNaN(e)||isNaN(t))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBit");return e&~(1<<t)},Te=Ee.__acroform__.getBit=function(e,t){if(isNaN(e)||isNaN(t))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBit");return 0==(e&1<<t)?0:1},Be=Ee.__acroform__.getBitForPdf=function(e,t){if(isNaN(e)||isNaN(t))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf");return Te(e,t-1)},qe=Ee.__acroform__.setBitForPdf=function(e,t){if(isNaN(e)||isNaN(t))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf");return je(e,t-1)},Ke=Ee.__acroform__.clearBitForPdf=function(e,t){if(isNaN(e)||isNaN(t))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf");return Re(e,t-1)},Ue=Ee.__acroform__.calculateCoordinates=function(e,t){var n=t.internal.getHorizontalCoordinate,r=t.internal.getVerticalCoordinate,i=e[0],a=e[1],o=e[2],s=e[3],c={};return c.lowerLeft_X=n(i)||0,c.lowerLeft_Y=r(a+s)||0,c.upperRight_X=n(i+o)||0,c.upperRight_Y=r(a)||0,[Number(Oe(c.lowerLeft_X)),Number(Oe(c.lowerLeft_Y)),Number(Oe(c.upperRight_X)),Number(Oe(c.upperRight_Y))]},ze=function(e){if(e.appearanceStreamContent)return e.appearanceStreamContent;if(e.V||e.DV){var t=[],n=e._V||e.DV,r=He(e,n),i=e.scope.internal.getFont(e.fontName,e.fontStyle).id;t.push("/Tx BMC"),t.push("q"),t.push("BT"),t.push(e.scope.__private__.encodeColorString(e.color)),t.push("/"+i+" "+Oe(r.fontSize)+" Tf"),t.push("1 0 0 1 0 0 Tm"),t.push(r.text),t.push("ET"),t.push("Q"),t.push("EMC");var a=Ze(e);return a.scope=e.scope,a.stream=t.join("\n"),a}},He=function(e,t){var n=0===e.fontSize?e.maxFontSize:e.fontSize,r={text:"",fontSize:""},i=(t=")"==(t="("==t.substr(0,1)?t.substr(1):t).substr(t.length-1)?t.substr(0,t.length-1):t).split(" "),a=n,o=dt.internal.getHeight(e)||0;o=o<0?-o:o;var s=dt.internal.getWidth(e)||0;s=s<0?-s:s;var c=function(t,n,r){if(t+1<i.length){var a=n+" "+i[t+1];return Ve(a,e,r).width<=s-4}return!1};a++;e:for(;a>0;){t="",a--;var l,u,f=Ve("3",e,a).height,d=e.multiline?o-a:(o-f)/2,h=d+=2,p=0,v=0;if(a<=0){t="(...) Tj\n",t+="% Width of Text: "+Ve(t,e,a=12).width+", FieldWidth:"+s+"\n";break}var m="",g=0;for(var y in i)if(i.hasOwnProperty(y)){m=" "==(m+=i[y]+" ").substr(m.length-1)?m.substr(0,m.length-1):m;var b=parseInt(y),w=c(b,m,a),N=y>=i.length-1;if(w&&!N){m+=" ";continue}if(w||N){if(N)v=b;else if(e.multiline&&(f+2)*(g+2)+2>o)continue e}else{if(!e.multiline)continue e;if((f+2)*(g+2)+2>o)continue e;v=b}for(var x="",S=p;S<=v;S++)x+=i[S]+" ";switch(x=" "==x.substr(x.length-1)?x.substr(0,x.length-1):x,u=Ve(x,e,a).width,e.textAlign){case"right":l=s-u-2;break;case"center":l=(s-u)/2;break;default:l=2}t+=Oe(l)+" "+Oe(h)+" Td\n",t+="("+_e(x)+") Tj\n",t+=-Oe(l)+" 0 Td\n",h=-(a+2),u=0,p=v+1,g++,m=""}break}return r.text=t,r.fontSize=a,r},Ve=function(e,t,n){var r=t.scope.internal.getFont(t.fontName,t.fontStyle),i=t.scope.getStringUnitWidth(e,{font:r,fontSize:parseFloat(n),charSpace:0})*parseFloat(n);return{height:t.scope.getStringUnitWidth("3",{font:r,fontSize:parseFloat(n),charSpace:0})*parseFloat(n)*1.5,width:i}},We={fields:[],xForms:[],acroFormDictionaryRoot:null,printedOut:!1,internal:null,isInitialized:!1},Ye=function(e,t){var n={type:"reference",object:e};void 0===t.internal.getPageInfo(e.page).pageContext.annotations.find((function(e){return e.type===n.type&&e.object===n.object}))&&t.internal.getPageInfo(e.page).pageContext.annotations.push(n)},Ge=Ee.__acroform__.arrayToPdfArray=function(e,t,n){var r=function(e){return e};if(Array.isArray(e)){for(var i="[",a=0;a<e.length;a++)switch(0!==a&&(i+=" "),typeof e[a]){case"boolean":case"number":case"object":i+=e[a].toString();break;case"string":"/"!==e[a].substr(0,1)?(void 0!==t&&n&&(r=n.internal.getEncryptor(t)),i+="("+_e(r(e[a].toString()))+")"):i+=e[a].toString()}return i+"]"}throw new Error("Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray")},$e=function(e,t,n){var r=function(e){return e};return void 0!==t&&n&&(r=n.internal.getEncryptor(t)),(e=e||"").toString(),"("+_e(r(e))+")"},Xe=function(){this._objId=void 0,this._scope=void 0,Object.defineProperty(this,"objId",{get:function(){if(void 0===this._objId){if(void 0===this.scope)return;this._objId=this.scope.internal.newObjectDeferred()}return this._objId},set:function(e){this._objId=e}}),Object.defineProperty(this,"scope",{value:this._scope,writable:!0})};Xe.prototype.toString=function(){return this.objId+" 0 R"},Xe.prototype.putStream=function(){var e=this.getKeyValueListForStream();this.scope.internal.putStream({data:this.stream,additionalKeyValues:e,objectId:this.objId}),this.scope.internal.out("endobj")},Xe.prototype.getKeyValueListForStream=function(){var e=[],t=Object.getOwnPropertyNames(this).filter((function(e){return"content"!=e&&"appearanceStreamContent"!=e&&"scope"!=e&&"objId"!=e&&"_"!=e.substring(0,1)}));for(var n in t)if(!1===Object.getOwnPropertyDescriptor(this,t[n]).configurable){var r=t[n],i=this[r];i&&(Array.isArray(i)?e.push({key:r,value:Ge(i,this.objId,this.scope)}):i instanceof Xe?(i.scope=this.scope,e.push({key:r,value:i.objId+" 0 R"})):"function"!=typeof i&&e.push({key:r,value:i}))}return e};var Je=function(){Xe.call(this),Object.defineProperty(this,"Type",{value:"/XObject",configurable:!1,writable:!0}),Object.defineProperty(this,"Subtype",{value:"/Form",configurable:!1,writable:!0}),Object.defineProperty(this,"FormType",{value:1,configurable:!1,writable:!0});var e,t=[];Object.defineProperty(this,"BBox",{configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"Resources",{value:"2 0 R",configurable:!1,writable:!0}),Object.defineProperty(this,"stream",{enumerable:!1,configurable:!0,set:function(t){e=t.trim()},get:function(){return e||null}})};De(Je,Xe);var Qe=function(){Xe.call(this);var e,t=[];Object.defineProperty(this,"Kids",{enumerable:!1,configurable:!0,get:function(){return t.length>0?t:void 0}}),Object.defineProperty(this,"Fields",{enumerable:!1,configurable:!1,get:function(){return t}}),Object.defineProperty(this,"DA",{enumerable:!1,configurable:!1,get:function(){if(e){var t=function(e){return e};return this.scope&&(t=this.scope.internal.getEncryptor(this.objId)),"("+_e(t(e))+")"}},set:function(t){e=t}})};De(Qe,Xe);var et=function(){Xe.call(this);var e=4;Object.defineProperty(this,"F",{enumerable:!1,configurable:!1,get:function(){return e},set:function(t){if(isNaN(t))throw new Error('Invalid value "'+t+'" for attribute F supplied.');e=t}}),Object.defineProperty(this,"showWhenPrinted",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(e,3))},set:function(t){!0===Boolean(t)?this.F=qe(e,3):this.F=Ke(e,3)}});var t=0;Object.defineProperty(this,"Ff",{enumerable:!1,configurable:!1,get:function(){return t},set:function(e){if(isNaN(e))throw new Error('Invalid value "'+e+'" for attribute Ff supplied.');t=e}});var n=[];Object.defineProperty(this,"Rect",{enumerable:!1,configurable:!1,get:function(){if(0!==n.length)return n},set:function(e){n=void 0!==e?e:[]}}),Object.defineProperty(this,"x",{enumerable:!0,configurable:!0,get:function(){return!n||isNaN(n[0])?0:n[0]},set:function(e){n[0]=e}}),Object.defineProperty(this,"y",{enumerable:!0,configurable:!0,get:function(){return!n||isNaN(n[1])?0:n[1]},set:function(e){n[1]=e}}),Object.defineProperty(this,"width",{enumerable:!0,configurable:!0,get:function(){return!n||isNaN(n[2])?0:n[2]},set:function(e){n[2]=e}}),Object.defineProperty(this,"height",{enumerable:!0,configurable:!0,get:function(){return!n||isNaN(n[3])?0:n[3]},set:function(e){n[3]=e}});var r="";Object.defineProperty(this,"FT",{enumerable:!0,configurable:!1,get:function(){return r},set:function(e){switch(e){case"/Btn":case"/Tx":case"/Ch":case"/Sig":r=e;break;default:throw new Error('Invalid value "'+e+'" for attribute FT supplied.')}}});var i=null;Object.defineProperty(this,"T",{enumerable:!0,configurable:!1,get:function(){if(!i||i.length<1){if(this instanceof ct)return;i="FieldObject"+et.FieldNum++}var e=function(e){return e};return this.scope&&(e=this.scope.internal.getEncryptor(this.objId)),"("+_e(e(i))+")"},set:function(e){i=e.toString()}}),Object.defineProperty(this,"fieldName",{configurable:!0,enumerable:!0,get:function(){return i},set:function(e){i=e}});var a="helvetica";Object.defineProperty(this,"fontName",{enumerable:!0,configurable:!0,get:function(){return a},set:function(e){a=e}});var o="normal";Object.defineProperty(this,"fontStyle",{enumerable:!0,configurable:!0,get:function(){return o},set:function(e){o=e}});var s=0;Object.defineProperty(this,"fontSize",{enumerable:!0,configurable:!0,get:function(){return s},set:function(e){s=e}});var c=void 0;Object.defineProperty(this,"maxFontSize",{enumerable:!0,configurable:!0,get:function(){return void 0===c?50/Pe:c},set:function(e){c=e}});var l="black";Object.defineProperty(this,"color",{enumerable:!0,configurable:!0,get:function(){return l},set:function(e){l=e}});var u="/F1 0 Tf 0 g";Object.defineProperty(this,"DA",{enumerable:!0,configurable:!1,get:function(){if(!(!u||this instanceof ct||this instanceof ut))return $e(u,this.objId,this.scope)},set:function(e){e=e.toString(),u=e}});var f=null;Object.defineProperty(this,"DV",{enumerable:!1,configurable:!1,get:function(){if(f)return this instanceof at==0?$e(f,this.objId,this.scope):f},set:function(e){e=e.toString(),f=this instanceof at==0?"("===e.substr(0,1)?Ie(e.substr(1,e.length-2)):Ie(e):e}}),Object.defineProperty(this,"defaultValue",{enumerable:!0,configurable:!0,get:function(){return this instanceof at==1?Ie(f.substr(1,f.length-1)):f},set:function(e){e=e.toString(),f=this instanceof at==1?"/"+e:e}});var d=null;Object.defineProperty(this,"_V",{enumerable:!1,configurable:!1,get:function(){if(d)return d},set:function(e){this.V=e}}),Object.defineProperty(this,"V",{enumerable:!1,configurable:!1,get:function(){if(d)return this instanceof at==0?$e(d,this.objId,this.scope):d},set:function(e){e=e.toString(),d=this instanceof at==0?"("===e.substr(0,1)?Ie(e.substr(1,e.length-2)):Ie(e):e}}),Object.defineProperty(this,"value",{enumerable:!0,configurable:!0,get:function(){return this instanceof at==1?Ie(d.substr(1,d.length-1)):d},set:function(e){e=e.toString(),d=this instanceof at==1?"/"+e:e}}),Object.defineProperty(this,"hasAnnotation",{enumerable:!0,configurable:!0,get:function(){return this.Rect}}),Object.defineProperty(this,"Type",{enumerable:!0,configurable:!1,get:function(){return this.hasAnnotation?"/Annot":null}}),Object.defineProperty(this,"Subtype",{enumerable:!0,configurable:!1,get:function(){return this.hasAnnotation?"/Widget":null}});var h,p=!1;Object.defineProperty(this,"hasAppearanceStream",{enumerable:!0,configurable:!0,get:function(){return p},set:function(e){e=Boolean(e),p=e}}),Object.defineProperty(this,"page",{enumerable:!0,configurable:!0,get:function(){if(h)return h},set:function(e){h=e}}),Object.defineProperty(this,"readOnly",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,1))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,1):this.Ff=Ke(this.Ff,1)}}),Object.defineProperty(this,"required",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,2))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,2):this.Ff=Ke(this.Ff,2)}}),Object.defineProperty(this,"noExport",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,3))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,3):this.Ff=Ke(this.Ff,3)}});var v=null;Object.defineProperty(this,"Q",{enumerable:!0,configurable:!1,get:function(){if(null!==v)return v},set:function(e){if(-1===[0,1,2].indexOf(e))throw new Error('Invalid value "'+e+'" for attribute Q supplied.');v=e}}),Object.defineProperty(this,"textAlign",{get:function(){var e;switch(v){case 0:default:e="left";break;case 1:e="center";break;case 2:e="right"}return e},configurable:!0,enumerable:!0,set:function(e){switch(e){case"right":case 2:v=2;break;case"center":case 1:v=1;break;default:v=0}}})};De(et,Xe);var tt=function(){et.call(this),this.FT="/Ch",this.V="()",this.fontName="zapfdingbats";var e=0;Object.defineProperty(this,"TI",{enumerable:!0,configurable:!1,get:function(){return e},set:function(t){e=t}}),Object.defineProperty(this,"topIndex",{enumerable:!0,configurable:!0,get:function(){return e},set:function(t){e=t}});var t=[];Object.defineProperty(this,"Opt",{enumerable:!0,configurable:!1,get:function(){return Ge(t,this.objId,this.scope)},set:function(e){var n,r;r=[],"string"==typeof(n=e)&&(r=function(e,t,n){n||(n=1);for(var r,i=[];r=t.exec(e);)i.push(r[n]);return i}(n,/\((.*?)\)/g)),t=r}}),this.getOptions=function(){return t},this.setOptions=function(e){t=e,this.sort&&t.sort()},this.addOption=function(e){e=(e=e||"").toString(),t.push(e),this.sort&&t.sort()},this.removeOption=function(e,n){for(n=n||!1,e=(e=e||"").toString();-1!==t.indexOf(e)&&(t.splice(t.indexOf(e),1),!1!==n););},Object.defineProperty(this,"combo",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,18))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,18):this.Ff=Ke(this.Ff,18)}}),Object.defineProperty(this,"edit",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,19))},set:function(e){!0===this.combo&&(!0===Boolean(e)?this.Ff=qe(this.Ff,19):this.Ff=Ke(this.Ff,19))}}),Object.defineProperty(this,"sort",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,20))},set:function(e){!0===Boolean(e)?(this.Ff=qe(this.Ff,20),t.sort()):this.Ff=Ke(this.Ff,20)}}),Object.defineProperty(this,"multiSelect",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,22))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,22):this.Ff=Ke(this.Ff,22)}}),Object.defineProperty(this,"doNotSpellCheck",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,23))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,23):this.Ff=Ke(this.Ff,23)}}),Object.defineProperty(this,"commitOnSelChange",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,27))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,27):this.Ff=Ke(this.Ff,27)}}),this.hasAppearanceStream=!1};De(tt,et);var nt=function(){tt.call(this),this.fontName="helvetica",this.combo=!1};De(nt,tt);var rt=function(){nt.call(this),this.combo=!0};De(rt,nt);var it=function(){rt.call(this),this.edit=!0};De(it,rt);var at=function(){et.call(this),this.FT="/Btn",Object.defineProperty(this,"noToggleToOff",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,15))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,15):this.Ff=Ke(this.Ff,15)}}),Object.defineProperty(this,"radio",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,16))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,16):this.Ff=Ke(this.Ff,16)}}),Object.defineProperty(this,"pushButton",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,17))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,17):this.Ff=Ke(this.Ff,17)}}),Object.defineProperty(this,"radioIsUnison",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,26))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,26):this.Ff=Ke(this.Ff,26)}});var e,t={};Object.defineProperty(this,"MK",{enumerable:!1,configurable:!1,get:function(){var e=function(e){return e};if(this.scope&&(e=this.scope.internal.getEncryptor(this.objId)),0!==Object.keys(t).length){var n,r=[];for(n in r.push("<<"),t)r.push("/"+n+" ("+_e(e(t[n]))+")");return r.push(">>"),r.join("\n")}},set:function(e){"object"==typeof e&&(t=e)}}),Object.defineProperty(this,"caption",{enumerable:!0,configurable:!0,get:function(){return t.CA||""},set:function(e){"string"==typeof e&&(t.CA=e)}}),Object.defineProperty(this,"AS",{enumerable:!1,configurable:!1,get:function(){return e},set:function(t){e=t}}),Object.defineProperty(this,"appearanceState",{enumerable:!0,configurable:!0,get:function(){return e.substr(1,e.length-1)},set:function(t){e="/"+t}})};De(at,et);var ot=function(){at.call(this),this.pushButton=!0};De(ot,at);var st=function(){at.call(this),this.radio=!0,this.pushButton=!1;var e=[];Object.defineProperty(this,"Kids",{enumerable:!0,configurable:!1,get:function(){return e},set:function(t){e=void 0!==t?t:[]}})};De(st,at);var ct=function(){var e,t;et.call(this),Object.defineProperty(this,"Parent",{enumerable:!1,configurable:!1,get:function(){return e},set:function(t){e=t}}),Object.defineProperty(this,"optionName",{enumerable:!1,configurable:!0,get:function(){return t},set:function(e){t=e}});var n,r={};Object.defineProperty(this,"MK",{enumerable:!1,configurable:!1,get:function(){var e=function(e){return e};this.scope&&(e=this.scope.internal.getEncryptor(this.objId));var t,n=[];for(t in n.push("<<"),r)n.push("/"+t+" ("+_e(e(r[t]))+")");return n.push(">>"),n.join("\n")},set:function(e){"object"==typeof e&&(r=e)}}),Object.defineProperty(this,"caption",{enumerable:!0,configurable:!0,get:function(){return r.CA||""},set:function(e){"string"==typeof e&&(r.CA=e)}}),Object.defineProperty(this,"AS",{enumerable:!1,configurable:!1,get:function(){return n},set:function(e){n=e}}),Object.defineProperty(this,"appearanceState",{enumerable:!0,configurable:!0,get:function(){return n.substr(1,n.length-1)},set:function(e){n="/"+e}}),this.caption="l",this.appearanceState="Off",this._AppearanceType=dt.RadioButton.Circle,this.appearanceStreamContent=this._AppearanceType.createAppearanceStream(this.optionName)};De(ct,et),st.prototype.setAppearance=function(e){if(!("createAppearanceStream"in e)||!("getCA"in e))throw new Error("Couldn't assign Appearance to RadioButton. Appearance was Invalid!");for(var t in this.Kids)if(this.Kids.hasOwnProperty(t)){var n=this.Kids[t];n.appearanceStreamContent=e.createAppearanceStream(n.optionName),n.caption=e.getCA()}},st.prototype.createOption=function(e){var t=new ct;return t.Parent=this,t.optionName=e,this.Kids.push(t),ht.call(this.scope,t),t};var lt=function(){at.call(this),this.fontName="zapfdingbats",this.caption="3",this.appearanceState="On",this.value="On",this.textAlign="center",this.appearanceStreamContent=dt.CheckBox.createAppearanceStream()};De(lt,at);var ut=function(){et.call(this),this.FT="/Tx",Object.defineProperty(this,"multiline",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,13))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,13):this.Ff=Ke(this.Ff,13)}}),Object.defineProperty(this,"fileSelect",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,21))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,21):this.Ff=Ke(this.Ff,21)}}),Object.defineProperty(this,"doNotSpellCheck",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,23))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,23):this.Ff=Ke(this.Ff,23)}}),Object.defineProperty(this,"doNotScroll",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,24))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,24):this.Ff=Ke(this.Ff,24)}}),Object.defineProperty(this,"comb",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,25))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,25):this.Ff=Ke(this.Ff,25)}}),Object.defineProperty(this,"richText",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,26))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,26):this.Ff=Ke(this.Ff,26)}});var e=null;Object.defineProperty(this,"MaxLen",{enumerable:!0,configurable:!1,get:function(){return e},set:function(t){e=t}}),Object.defineProperty(this,"maxLength",{enumerable:!0,configurable:!0,get:function(){return e},set:function(t){Number.isInteger(t)&&(e=t)}}),Object.defineProperty(this,"hasAppearanceStream",{enumerable:!0,configurable:!0,get:function(){return this.V||this.DV}})};De(ut,et);var ft=function(){ut.call(this),Object.defineProperty(this,"password",{enumerable:!0,configurable:!0,get:function(){return Boolean(Be(this.Ff,14))},set:function(e){!0===Boolean(e)?this.Ff=qe(this.Ff,14):this.Ff=Ke(this.Ff,14)}}),this.password=!0};De(ft,ut);var dt={CheckBox:{createAppearanceStream:function(){return{N:{On:dt.CheckBox.YesNormal},D:{On:dt.CheckBox.YesPushDown,Off:dt.CheckBox.OffPushDown}}},YesPushDown:function(e){var t=Ze(e);t.scope=e.scope;var n=[],r=e.scope.internal.getFont(e.fontName,e.fontStyle).id,i=e.scope.__private__.encodeColorString(e.color),a=He(e,e.caption);return n.push("0.749023 g"),n.push("0 0 "+Oe(dt.internal.getWidth(e))+" "+Oe(dt.internal.getHeight(e))+" re"),n.push("f"),n.push("BMC"),n.push("q"),n.push("0 0 1 rg"),n.push("/"+r+" "+Oe(a.fontSize)+" Tf "+i),n.push("BT"),n.push(a.text),n.push("ET"),n.push("Q"),n.push("EMC"),t.stream=n.join("\n"),t},YesNormal:function(e){var t=Ze(e);t.scope=e.scope;var n=e.scope.internal.getFont(e.fontName,e.fontStyle).id,r=e.scope.__private__.encodeColorString(e.color),i=[],a=dt.internal.getHeight(e),o=dt.internal.getWidth(e),s=He(e,e.caption);return i.push("1 g"),i.push("0 0 "+Oe(o)+" "+Oe(a)+" re"),i.push("f"),i.push("q"),i.push("0 0 1 rg"),i.push("0 0 "+Oe(o-1)+" "+Oe(a-1)+" re"),i.push("W"),i.push("n"),i.push("0 g"),i.push("BT"),i.push("/"+n+" "+Oe(s.fontSize)+" Tf "+r),i.push(s.text),i.push("ET"),i.push("Q"),t.stream=i.join("\n"),t},OffPushDown:function(e){var t=Ze(e);t.scope=e.scope;var n=[];return n.push("0.749023 g"),n.push("0 0 "+Oe(dt.internal.getWidth(e))+" "+Oe(dt.internal.getHeight(e))+" re"),n.push("f"),t.stream=n.join("\n"),t}},RadioButton:{Circle:{createAppearanceStream:function(e){var t={D:{Off:dt.RadioButton.Circle.OffPushDown},N:{}};return t.N[e]=dt.RadioButton.Circle.YesNormal,t.D[e]=dt.RadioButton.Circle.YesPushDown,t},getCA:function(){return"l"},YesNormal:function(e){var t=Ze(e);t.scope=e.scope;var n=[],r=dt.internal.getWidth(e)<=dt.internal.getHeight(e)?dt.internal.getWidth(e)/4:dt.internal.getHeight(e)/4;r=Number((.9*r).toFixed(5));var i=dt.internal.Bezier_C,a=Number((r*i).toFixed(5));return n.push("q"),n.push("1 0 0 1 "+Me(dt.internal.getWidth(e)/2)+" "+Me(dt.internal.getHeight(e)/2)+" cm"),n.push(r+" 0 m"),n.push(r+" "+a+" "+a+" "+r+" 0 "+r+" c"),n.push("-"+a+" "+r+" -"+r+" "+a+" -"+r+" 0 c"),n.push("-"+r+" -"+a+" -"+a+" -"+r+" 0 -"+r+" c"),n.push(a+" -"+r+" "+r+" -"+a+" "+r+" 0 c"),n.push("f"),n.push("Q"),t.stream=n.join("\n"),t},YesPushDown:function(e){var t=Ze(e);t.scope=e.scope;var n=[],r=dt.internal.getWidth(e)<=dt.internal.getHeight(e)?dt.internal.getWidth(e)/4:dt.internal.getHeight(e)/4;r=Number((.9*r).toFixed(5));var i=Number((2*r).toFixed(5)),a=Number((i*dt.internal.Bezier_C).toFixed(5)),o=Number((r*dt.internal.Bezier_C).toFixed(5));return n.push("0.749023 g"),n.push("q"),n.push("1 0 0 1 "+Me(dt.internal.getWidth(e)/2)+" "+Me(dt.internal.getHeight(e)/2)+" cm"),n.push(i+" 0 m"),n.push(i+" "+a+" "+a+" "+i+" 0 "+i+" c"),n.push("-"+a+" "+i+" -"+i+" "+a+" -"+i+" 0 c"),n.push("-"+i+" -"+a+" -"+a+" -"+i+" 0 -"+i+" c"),n.push(a+" -"+i+" "+i+" -"+a+" "+i+" 0 c"),n.push("f"),n.push("Q"),n.push("0 g"),n.push("q"),n.push("1 0 0 1 "+Me(dt.internal.getWidth(e)/2)+" "+Me(dt.internal.getHeight(e)/2)+" cm"),n.push(r+" 0 m"),n.push(r+" "+o+" "+o+" "+r+" 0 "+r+" c"),n.push("-"+o+" "+r+" -"+r+" "+o+" -"+r+" 0 c"),n.push("-"+r+" -"+o+" -"+o+" -"+r+" 0 -"+r+" c"),n.push(o+" -"+r+" "+r+" -"+o+" "+r+" 0 c"),n.push("f"),n.push("Q"),t.stream=n.join("\n"),t},OffPushDown:function(e){var t=Ze(e);t.scope=e.scope;var n=[],r=dt.internal.getWidth(e)<=dt.internal.getHeight(e)?dt.internal.getWidth(e)/4:dt.internal.getHeight(e)/4;r=Number((.9*r).toFixed(5));var i=Number((2*r).toFixed(5)),a=Number((i*dt.internal.Bezier_C).toFixed(5));return n.push("0.749023 g"),n.push("q"),n.push("1 0 0 1 "+Me(dt.internal.getWidth(e)/2)+" "+Me(dt.internal.getHeight(e)/2)+" cm"),n.push(i+" 0 m"),n.push(i+" "+a+" "+a+" "+i+" 0 "+i+" c"),n.push("-"+a+" "+i+" -"+i+" "+a+" -"+i+" 0 c"),n.push("-"+i+" -"+a+" -"+a+" -"+i+" 0 -"+i+" c"),n.push(a+" -"+i+" "+i+" -"+a+" "+i+" 0 c"),n.push("f"),n.push("Q"),t.stream=n.join("\n"),t}},Cross:{createAppearanceStream:function(e){var t={D:{Off:dt.RadioButton.Cross.OffPushDown},N:{}};return t.N[e]=dt.RadioButton.Cross.YesNormal,t.D[e]=dt.RadioButton.Cross.YesPushDown,t},getCA:function(){return"8"},YesNormal:function(e){var t=Ze(e);t.scope=e.scope;var n=[],r=dt.internal.calculateCross(e);return n.push("q"),n.push("1 1 "+Oe(dt.internal.getWidth(e)-2)+" "+Oe(dt.internal.getHeight(e)-2)+" re"),n.push("W"),n.push("n"),n.push(Oe(r.x1.x)+" "+Oe(r.x1.y)+" m"),n.push(Oe(r.x2.x)+" "+Oe(r.x2.y)+" l"),n.push(Oe(r.x4.x)+" "+Oe(r.x4.y)+" m"),n.push(Oe(r.x3.x)+" "+Oe(r.x3.y)+" l"),n.push("s"),n.push("Q"),t.stream=n.join("\n"),t},YesPushDown:function(e){var t=Ze(e);t.scope=e.scope;var n=dt.internal.calculateCross(e),r=[];return r.push("0.749023 g"),r.push("0 0 "+Oe(dt.internal.getWidth(e))+" "+Oe(dt.internal.getHeight(e))+" re"),r.push("f"),r.push("q"),r.push("1 1 "+Oe(dt.internal.getWidth(e)-2)+" "+Oe(dt.internal.getHeight(e)-2)+" re"),r.push("W"),r.push("n"),r.push(Oe(n.x1.x)+" "+Oe(n.x1.y)+" m"),r.push(Oe(n.x2.x)+" "+Oe(n.x2.y)+" l"),r.push(Oe(n.x4.x)+" "+Oe(n.x4.y)+" m"),r.push(Oe(n.x3.x)+" "+Oe(n.x3.y)+" l"),r.push("s"),r.push("Q"),t.stream=r.join("\n"),t},OffPushDown:function(e){var t=Ze(e);t.scope=e.scope;var n=[];return n.push("0.749023 g"),n.push("0 0 "+Oe(dt.internal.getWidth(e))+" "+Oe(dt.internal.getHeight(e))+" re"),n.push("f"),t.stream=n.join("\n"),t}}},createDefaultAppearanceStream:function(e){var t=e.scope.internal.getFont(e.fontName,e.fontStyle).id,n=e.scope.__private__.encodeColorString(e.color);return"/"+t+" "+e.fontSize+" Tf "+n}};dt.internal={Bezier_C:.551915024494,calculateCross:function(e){var t=dt.internal.getWidth(e),n=dt.internal.getHeight(e),r=Math.min(t,n);return{x1:{x:(t-r)/2,y:(n-r)/2+r},x2:{x:(t-r)/2+r,y:(n-r)/2},x3:{x:(t-r)/2,y:(n-r)/2},x4:{x:(t-r)/2+r,y:(n-r)/2+r}}}},dt.internal.getWidth=function(e){var t=0;return"object"==typeof e&&(t=Fe(e.Rect[2])),t},dt.internal.getHeight=function(e){var t=0;return"object"==typeof e&&(t=Fe(e.Rect[3])),t};var ht=Ee.addField=function(e){if(function(e,t){if(t.scope=e,void 0!==e.internal&&(void 0===e.internal.acroformPlugin||!1===e.internal.acroformPlugin.isInitialized)){if(et.FieldNum=0,e.internal.acroformPlugin=JSON.parse(JSON.stringify(We)),e.internal.acroformPlugin.acroFormDictionaryRoot)throw new Error("Exception while creating AcroformDictionary");Pe=e.internal.scaleFactor,e.internal.acroformPlugin.acroFormDictionaryRoot=new Qe,e.internal.acroformPlugin.acroFormDictionaryRoot.scope=e,e.internal.acroformPlugin.acroFormDictionaryRoot._eventID=e.internal.events.subscribe("postPutResources",(function(){!function(e){e.internal.events.unsubscribe(e.internal.acroformPlugin.acroFormDictionaryRoot._eventID),delete e.internal.acroformPlugin.acroFormDictionaryRoot._eventID,e.internal.acroformPlugin.printedOut=!0}(e)})),e.internal.events.subscribe("buildDocument",(function(){!function(e){e.internal.acroformPlugin.acroFormDictionaryRoot.objId=void 0;var t=e.internal.acroformPlugin.acroFormDictionaryRoot.Fields;for(var n in t)if(t.hasOwnProperty(n)){var r=t[n];r.objId=void 0,r.hasAnnotation&&Ye(r,e)}}(e)})),e.internal.events.subscribe("putCatalog",(function(){!function(e){if(void 0===e.internal.acroformPlugin.acroFormDictionaryRoot)throw new Error("putCatalogCallback: Root missing.");e.internal.write("/AcroForm "+e.internal.acroformPlugin.acroFormDictionaryRoot.objId+" 0 R")}(e)})),e.internal.events.subscribe("postPutPages",(function(t){!function(e,t){var n=!e;for(var r in e||(t.internal.newObjectDeferredBegin(t.internal.acroformPlugin.acroFormDictionaryRoot.objId,!0),t.internal.acroformPlugin.acroFormDictionaryRoot.putStream()),e=e||t.internal.acroformPlugin.acroFormDictionaryRoot.Kids)if(e.hasOwnProperty(r)){var i=e[r],a=[],o=i.Rect;if(i.Rect&&(i.Rect=Ue(i.Rect,t)),t.internal.newObjectDeferredBegin(i.objId,!0),i.DA=dt.createDefaultAppearanceStream(i),"object"==typeof i&&"function"==typeof i.getKeyValueListForStream&&(a=i.getKeyValueListForStream()),i.Rect=o,i.hasAppearanceStream&&!i.appearanceStreamContent){var s=ze(i);a.push({key:"AP",value:"<</N "+s+">>"}),t.internal.acroformPlugin.xForms.push(s)}if(i.appearanceStreamContent){var c="";for(var l in i.appearanceStreamContent)if(i.appearanceStreamContent.hasOwnProperty(l)){var u=i.appearanceStreamContent[l];if(c+="/"+l+" ",c+="<<",Object.keys(u).length>=1||Array.isArray(u)){for(var r in u)if(u.hasOwnProperty(r)){var f=u[r];"function"==typeof f&&(f=f.call(t,i)),c+="/"+r+" "+f+" ",t.internal.acroformPlugin.xForms.indexOf(f)>=0||t.internal.acroformPlugin.xForms.push(f)}}else"function"==typeof(f=u)&&(f=f.call(t,i)),c+="/"+r+" "+f,t.internal.acroformPlugin.xForms.indexOf(f)>=0||t.internal.acroformPlugin.xForms.push(f);c+=">>"}a.push({key:"AP",value:"<<\n"+c+">>"})}t.internal.putStream({additionalKeyValues:a,objectId:i.objId}),t.internal.out("endobj")}n&&function(e,t){for(var n in e)if(e.hasOwnProperty(n)){var r=n,i=e[n];t.internal.newObjectDeferredBegin(i.objId,!0),"object"==typeof i&&"function"==typeof i.putStream&&i.putStream(),delete e[r]}}(t.internal.acroformPlugin.xForms,t)}(t,e)})),e.internal.acroformPlugin.isInitialized=!0}}(this,e),!(e instanceof et))throw new Error("Invalid argument passed to jsPDF.addField.");var t;return(t=e).scope.internal.acroformPlugin.printedOut&&(t.scope.internal.acroformPlugin.printedOut=!1,t.scope.internal.acroformPlugin.acroFormDictionaryRoot=null),t.scope.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(t),e.page=e.scope.internal.getCurrentPageInfo().pageNumber,this};Ee.AcroFormChoiceField=tt,Ee.AcroFormListBox=nt,Ee.AcroFormComboBox=rt,Ee.AcroFormEditBox=it,Ee.AcroFormButton=at,Ee.AcroFormPushButton=ot,Ee.AcroFormRadioButton=st,Ee.AcroFormCheckBox=lt,Ee.AcroFormTextField=ut,Ee.AcroFormPasswordField=ft,Ee.AcroFormAppearance=dt,Ee.AcroForm={ChoiceField:tt,ListBox:nt,ComboBox:rt,EditBox:it,Button:at,PushButton:ot,RadioButton:st,CheckBox:lt,TextField:ut,PasswordField:ft,Appearance:dt},Ae.AcroForm={ChoiceField:tt,ListBox:nt,ComboBox:rt,EditBox:it,Button:at,PushButton:ot,RadioButton:st,CheckBox:lt,TextField:ut,PasswordField:ft,Appearance:dt};var pt,vt;Ae.AcroForm;function mt(e){return e.reduce((function(e,t,n){return e[t]=n,e}),{})}!function(e){e.__addimage__={};var t="UNKNOWN",n={PNG:[[137,80,78,71]],TIFF:[[77,77,0,42],[73,73,42,0]],JPEG:[[255,216,255,224,void 0,void 0,74,70,73,70,0],[255,216,255,225,void 0,void 0,69,120,105,102,0,0],[255,216,255,219],[255,216,255,238]],JPEG2000:[[0,0,0,12,106,80,32,32]],GIF87a:[[71,73,70,56,55,97]],GIF89a:[[71,73,70,56,57,97]],WEBP:[[82,73,70,70,void 0,void 0,void 0,void 0,87,69,66,80]],BMP:[[66,77],[66,65],[67,73],[67,80],[73,67],[80,84]]},r=e.__addimage__.getImageFileTypeByImageData=function(e,r){var i,a;r=r||t;var o,s,c,l=t;if(x(e))for(c in n)for(o=n[c],i=0;i<o.length;i+=1){for(s=!0,a=0;a<o[i].length;a+=1)if(void 0!==o[i][a]&&o[i][a]!==e[a]){s=!1;break}if(!0===s){l=c;break}}else for(c in n)for(o=n[c],i=0;i<o.length;i+=1){for(s=!0,a=0;a<o[i].length;a+=1)if(void 0!==o[i][a]&&o[i][a]!==e.charCodeAt(a)){s=!1;break}if(!0===s){l=c;break}}return l===t&&r!==t&&(l=r),l},i=function(e){for(var t=this.internal.write,n=this.internal.putStream,r=(0,this.internal.getFilters)();-1!==r.indexOf("FlateEncode");)r.splice(r.indexOf("FlateEncode"),1);e.objectId=this.internal.newObject();var a=[];if(a.push({key:"Type",value:"/XObject"}),a.push({key:"Subtype",value:"/Image"}),a.push({key:"Width",value:e.width}),a.push({key:"Height",value:e.height}),e.colorSpace===m.INDEXED?a.push({key:"ColorSpace",value:"[/Indexed /DeviceRGB "+(e.palette.length/3-1)+" "+("sMask"in e&&void 0!==e.sMask?e.objectId+2:e.objectId+1)+" 0 R]"}):(a.push({key:"ColorSpace",value:"/"+e.colorSpace}),e.colorSpace===m.DEVICE_CMYK&&a.push({key:"Decode",value:"[1 0 1 0 1 0 1 0]"})),a.push({key:"BitsPerComponent",value:e.bitsPerComponent}),"decodeParameters"in e&&void 0!==e.decodeParameters&&a.push({key:"DecodeParms",value:"<<"+e.decodeParameters+">>"}),"transparency"in e&&Array.isArray(e.transparency)){for(var o="",s=0,c=e.transparency.length;s<c;s++)o+=e.transparency[s]+" "+e.transparency[s]+" ";a.push({key:"Mask",value:"["+o+"]"})}void 0!==e.sMask&&a.push({key:"SMask",value:e.objectId+1+" 0 R"});var l=void 0!==e.filter?["/"+e.filter]:void 0;if(n({data:e.data,additionalKeyValues:a,alreadyAppliedFilters:l,objectId:e.objectId}),t("endobj"),"sMask"in e&&void 0!==e.sMask){var u="/Predictor "+e.predictor+" /Colors 1 /BitsPerComponent "+e.bitsPerComponent+" /Columns "+e.width,f={width:e.width,height:e.height,colorSpace:"DeviceGray",bitsPerComponent:e.bitsPerComponent,decodeParameters:u,data:e.sMask};"filter"in e&&(f.filter=e.filter),i.call(this,f)}if(e.colorSpace===m.INDEXED){var d=this.internal.newObject();n({data:k(new Uint8Array(e.palette)),objectId:d}),t("endobj")}},a=function(){var e=this.internal.collections.addImage_images;for(var t in e)i.call(this,e[t])},o=function(){var e,t=this.internal.collections.addImage_images,n=this.internal.write;for(var r in t)n("/I"+(e=t[r]).index,e.objectId,"0","R")},s=function(){this.internal.collections.addImage_images||(this.internal.collections.addImage_images={},this.internal.events.subscribe("putResources",a),this.internal.events.subscribe("putXobjectDict",o))},c=function(){var e=this.internal.collections.addImage_images;return s.call(this),e},l=function(){return Object.keys(this.internal.collections.addImage_images).length},u=function(t){return"function"==typeof e["process"+t.toUpperCase()]},f=function(e){return"object"==typeof e&&1===e.nodeType},d=function(t,n){if("IMG"===t.nodeName&&t.hasAttribute("src")){var r=""+t.getAttribute("src");if(0===r.indexOf("data:image/"))return ne(unescape(r).split("base64,").pop());var i=e.loadFile(r,!0);if(void 0!==i)return i}if("CANVAS"===t.nodeName){var a;switch(n){case"PNG":a="image/png";break;case"WEBP":a="image/webp";break;default:a="image/jpeg"}return ne(t.toDataURL(a,1).split("base64,").pop())}},h=function(e){var t=this.internal.collections.addImage_images;if(t)for(var n in t)if(e===t[n].alias)return t[n]},p=function(e,t,n){return e||t||(e=-96,t=-96),e<0&&(e=-1*n.width*72/e/this.internal.scaleFactor),t<0&&(t=-1*n.height*72/t/this.internal.scaleFactor),0===e&&(e=t*n.width/n.height),0===t&&(t=e*n.height/n.width),[e,t]},v=function(e,t,n,r,i,a){var o=p.call(this,n,r,i),s=this.internal.getCoordinateString,l=this.internal.getVerticalCoordinateString,u=c.call(this);if(n=o[0],r=o[1],u[i.index]=i,a){a*=Math.PI/180;var f=Math.cos(a),d=Math.sin(a),h=function(e){return e.toFixed(4)},v=[h(f),h(d),h(-1*d),h(f),0,0,"cm"]}this.internal.write("q"),a?(this.internal.write([1,"0","0",1,s(e),l(t+r),"cm"].join(" ")),this.internal.write(v.join(" ")),this.internal.write([s(n),"0","0",s(r),"0","0","cm"].join(" "))):this.internal.write([s(n),"0","0",s(r),s(e),l(t+r),"cm"].join(" ")),this.isAdvancedAPI()&&this.internal.write([1,0,0,-1,0,0,"cm"].join(" ")),this.internal.write("/I"+i.index+" Do"),this.internal.write("Q")},m=e.color_spaces={DEVICE_RGB:"DeviceRGB",DEVICE_GRAY:"DeviceGray",DEVICE_CMYK:"DeviceCMYK",CAL_GREY:"CalGray",CAL_RGB:"CalRGB",LAB:"Lab",ICC_BASED:"ICCBased",INDEXED:"Indexed",PATTERN:"Pattern",SEPARATION:"Separation",DEVICE_N:"DeviceN"};e.decode={DCT_DECODE:"DCTDecode",FLATE_DECODE:"FlateDecode",LZW_DECODE:"LZWDecode",JPX_DECODE:"JPXDecode",JBIG2_DECODE:"JBIG2Decode",ASCII85_DECODE:"ASCII85Decode",ASCII_HEX_DECODE:"ASCIIHexDecode",RUN_LENGTH_DECODE:"RunLengthDecode",CCITT_FAX_DECODE:"CCITTFaxDecode"};var g=e.image_compression={NONE:"NONE",FAST:"FAST",MEDIUM:"MEDIUM",SLOW:"SLOW"},y=e.__addimage__.sHashCode=function(e){var t,n,r=0;if("string"==typeof e)for(n=e.length,t=0;t<n;t++)r=(r<<5)-r+e.charCodeAt(t),r|=0;else if(x(e))for(n=e.byteLength/2,t=0;t<n;t++)r=(r<<5)-r+e[t],r|=0;return r},b=e.__addimage__.validateStringAsBase64=function(e){(e=e||"").toString().trim();var t=!0;return 0===e.length&&(t=!1),e.length%4!=0&&(t=!1),!1===/^[A-Za-z0-9+/]+$/.test(e.substr(0,e.length-2))&&(t=!1),!1===/^[A-Za-z0-9/][A-Za-z0-9+/]|[A-Za-z0-9+/]=|==$/.test(e.substr(-2))&&(t=!1),t},w=e.__addimage__.extractImageFromDataUrl=function(e){var t=(e=e||"").split("base64,"),n=null;if(2===t.length){var r=/^data:(\w*\/\w*);*(charset=[\w=-]*)*;*$/.exec(t[0]);Array.isArray(r)&&(n={mimeType:r[1],charset:r[2],data:t[1]})}return n},N=e.__addimage__.supportsArrayBuffer=function(){return"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array};e.__addimage__.isArrayBuffer=function(e){return N()&&e instanceof ArrayBuffer};var x=e.__addimage__.isArrayBufferView=function(e){return N()&&"undefined"!=typeof Uint32Array&&(e instanceof Int8Array||e instanceof Uint8Array||"undefined"!=typeof Uint8ClampedArray&&e instanceof Uint8ClampedArray||e instanceof Int16Array||e instanceof Uint16Array||e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array||e instanceof Float64Array)},S=e.__addimage__.binaryStringToUint8Array=function(e){for(var t=e.length,n=new Uint8Array(t),r=0;r<t;r++)n[r]=e.charCodeAt(r);return n},k=e.__addimage__.arrayBufferToBinaryString=function(e){try{return ne(re(String.fromCharCode.apply(null,e)))}catch(t){if("undefined"!=typeof Uint8Array&&void 0!==Uint8Array.prototype.reduce)return new Uint8Array(e).reduce((function(e,t){return e.push(String.fromCharCode(t)),e}),[]).join("")}};e.addImage=function(){var e,n,r,i,a,o,c,l,u;if("number"==typeof arguments[1]?(n=t,r=arguments[1],i=arguments[2],a=arguments[3],o=arguments[4],c=arguments[5],l=arguments[6],u=arguments[7]):(n=arguments[1],r=arguments[2],i=arguments[3],a=arguments[4],o=arguments[5],c=arguments[6],l=arguments[7],u=arguments[8]),"object"==typeof(e=arguments[0])&&!f(e)&&"imageData"in e){var d=e;e=d.imageData,n=d.format||n||t,r=d.x||r||0,i=d.y||i||0,a=d.w||d.width||a,o=d.h||d.height||o,c=d.alias||c,l=d.compression||l,u=d.rotation||d.angle||u}var h=this.internal.getFilters();if(void 0===l&&-1!==h.indexOf("FlateEncode")&&(l="SLOW"),isNaN(r)||isNaN(i))throw new Error("Invalid coordinates passed to jsPDF.addImage");s.call(this);var p=C.call(this,e,n,c,l);return v.call(this,r,i,a,o,p,u),this};var C=function(n,i,a,o){var s,c,p;if("string"==typeof n&&r(n)===t){n=unescape(n);var v=L(n,!1);(""!==v||void 0!==(v=e.loadFile(n,!0)))&&(n=v)}if(f(n)&&(n=d(n,i)),i=r(n,i),!u(i))throw new Error("addImage does not support files of type '"+i+"', please ensure that a plugin for '"+i+"' support is added.");if((null==(p=a)||0===p.length)&&(a=function(e){return"string"==typeof e||x(e)?y(e):null}(n)),(s=h.call(this,a))||(N()&&(n instanceof Uint8Array||(c=n,n=S(n))),s=this["process"+i.toUpperCase()](n,l.call(this),a,function(t){return t&&"string"==typeof t&&(t=t.toUpperCase()),t in e.image_compression?t:g.NONE}(o),c)),!s)throw new Error("An unknown error occurred whilst processing the image.");return s},L=e.__addimage__.convertBase64ToBinaryString=function(e,t){var n;t="boolean"!=typeof t||t;var r,i="";if("string"==typeof e){r=null!==(n=w(e))?n.data:e;try{i=ne(r)}catch(e){if(t)throw b(r)?new Error("atob-Error in jsPDF.convertBase64ToBinaryString "+e.message):new Error("Supplied Data is not a valid base64-String jsPDF.convertBase64ToBinaryString ")}}return i};e.getImageProperties=function(n){var i,a,o="";if(f(n)&&(n=d(n)),"string"==typeof n&&r(n)===t&&(""===(o=L(n,!1))&&(o=e.loadFile(n)||""),n=o),a=r(n),!u(a))throw new Error("addImage does not support files of type '"+a+"', please ensure that a plugin for '"+a+"' support is added.");if(!N()||n instanceof Uint8Array||(n=S(n)),!(i=this["process"+a.toUpperCase()](n)))throw new Error("An unknown error occurred whilst processing the image");return i.fileType=a,i}}(Ae.API),pt=Ae.API,vt=function(e){if(void 0!==e&&""!=e)return!0},Ae.API.events.push(["addPage",function(e){this.internal.getPageInfo(e.pageNumber).pageContext.annotations=[]}]),pt.events.push(["putPage",function(e){for(var t,n,r,i=this.internal.getCoordinateString,a=this.internal.getVerticalCoordinateString,o=this.internal.getPageInfoByObjId(e.objId),s=e.pageContext.annotations,c=!1,l=0;l<s.length&&!c;l++)switch((t=s[l]).type){case"link":(vt(t.options.url)||vt(t.options.pageNumber))&&(c=!0);break;case"reference":case"text":case"freetext":c=!0}if(0!=c){this.internal.write("/Annots [");for(var u=0;u<s.length;u++){t=s[u];var f=this.internal.pdfEscape,d=this.internal.getEncryptor(e.objId);switch(t.type){case"reference":this.internal.write(" "+t.object.objId+" 0 R ");break;case"text":var h=this.internal.newAdditionalObject(),p=this.internal.newAdditionalObject(),v=this.internal.getEncryptor(h.objId),m=t.title||"Note";r="<</Type /Annot /Subtype /Text "+(n="/Rect ["+i(t.bounds.x)+" "+a(t.bounds.y+t.bounds.h)+" "+i(t.bounds.x+t.bounds.w)+" "+a(t.bounds.y)+"] ")+"/Contents ("+f(v(t.contents))+")",r+=" /Popup "+p.objId+" 0 R",r+=" /P "+o.objId+" 0 R",r+=" /T ("+f(v(m))+") >>",h.content=r;var g=h.objId+" 0 R";r="<</Type /Annot /Subtype /Popup "+(n="/Rect ["+i(t.bounds.x+30)+" "+a(t.bounds.y+t.bounds.h)+" "+i(t.bounds.x+t.bounds.w+30)+" "+a(t.bounds.y)+"] ")+" /Parent "+g,t.open&&(r+=" /Open true"),r+=" >>",p.content=r,this.internal.write(h.objId,"0 R",p.objId,"0 R");break;case"freetext":n="/Rect ["+i(t.bounds.x)+" "+a(t.bounds.y)+" "+i(t.bounds.x+t.bounds.w)+" "+a(t.bounds.y+t.bounds.h)+"] ";var y=t.color||"#000000";r="<</Type /Annot /Subtype /FreeText "+n+"/Contents ("+f(d(t.contents))+")",r+=" /DS(font: Helvetica,sans-serif 12.0pt; text-align:left; color:#"+y+")",r+=" /Border [0 0 0]",r+=" >>",this.internal.write(r);break;case"link":if(t.options.name){var b=this.annotations._nameMap[t.options.name];t.options.pageNumber=b.page,t.options.top=b.y}else t.options.top||(t.options.top=0);if(n="/Rect ["+t.finalBounds.x+" "+t.finalBounds.y+" "+t.finalBounds.w+" "+t.finalBounds.h+"] ",r="",t.options.url)r="<</Type /Annot /Subtype /Link "+n+"/Border [0 0 0] /A <</S /URI /URI ("+f(d(t.options.url))+") >>";else if(t.options.pageNumber)switch(r="<</Type /Annot /Subtype /Link "+n+"/Border [0 0 0] /Dest ["+this.internal.getPageInfo(t.options.pageNumber).objId+" 0 R",t.options.magFactor=t.options.magFactor||"XYZ",t.options.magFactor){case"Fit":r+=" /Fit]";break;case"FitH":r+=" /FitH "+t.options.top+"]";break;case"FitV":t.options.left=t.options.left||0,r+=" /FitV "+t.options.left+"]";break;default:var w=a(t.options.top);t.options.left=t.options.left||0,void 0===t.options.zoom&&(t.options.zoom=0),r+=" /XYZ "+t.options.left+" "+w+" "+t.options.zoom+"]"}""!=r&&(r+=" >>",this.internal.write(r))}}this.internal.write("]")}}]),pt.createAnnotation=function(e){var t=this.internal.getCurrentPageInfo();switch(e.type){case"link":this.link(e.bounds.x,e.bounds.y,e.bounds.w,e.bounds.h,e);break;case"text":case"freetext":t.pageContext.annotations.push(e)}},pt.link=function(e,t,n,r,i){var a=this.internal.getCurrentPageInfo(),o=this.internal.getCoordinateString,s=this.internal.getVerticalCoordinateString;a.pageContext.annotations.push({finalBounds:{x:o(e),y:s(t),w:o(e+n),h:s(t+r)},options:i,type:"link"})},pt.textWithLink=function(e,t,n,r){var i=this.getTextWidth(e),a=this.internal.getLineHeight()/this.internal.scaleFactor;return this.text(e,t,n,r),n+=.2*a,"center"===r.align&&(t-=i/2),"right"===r.align&&(t-=i),this.link(t,n-a,i,a,r),i},pt.getTextWidth=function(e){var t=this.internal.getFontSize();return this.getStringUnitWidth(e)*t/this.internal.scaleFactor},function(e){var t={1569:[65152],1570:[65153,65154],1571:[65155,65156],1572:[65157,65158],1573:[65159,65160],1574:[65161,65162,65163,65164],1575:[65165,65166],1576:[65167,65168,65169,65170],1577:[65171,65172],1578:[65173,65174,65175,65176],1579:[65177,65178,65179,65180],1580:[65181,65182,65183,65184],1581:[65185,65186,65187,65188],1582:[65189,65190,65191,65192],1583:[65193,65194],1584:[65195,65196],1585:[65197,65198],1586:[65199,65200],1587:[65201,65202,65203,65204],1588:[65205,65206,65207,65208],1589:[65209,65210,65211,65212],1590:[65213,65214,65215,65216],1591:[65217,65218,65219,65220],1592:[65221,65222,65223,65224],1593:[65225,65226,65227,65228],1594:[65229,65230,65231,65232],1601:[65233,65234,65235,65236],1602:[65237,65238,65239,65240],1603:[65241,65242,65243,65244],1604:[65245,65246,65247,65248],1605:[65249,65250,65251,65252],1606:[65253,65254,65255,65256],1607:[65257,65258,65259,65260],1608:[65261,65262],1609:[65263,65264,64488,64489],1610:[65265,65266,65267,65268],1649:[64336,64337],1655:[64477],1657:[64358,64359,64360,64361],1658:[64350,64351,64352,64353],1659:[64338,64339,64340,64341],1662:[64342,64343,64344,64345],1663:[64354,64355,64356,64357],1664:[64346,64347,64348,64349],1667:[64374,64375,64376,64377],1668:[64370,64371,64372,64373],1670:[64378,64379,64380,64381],1671:[64382,64383,64384,64385],1672:[64392,64393],1676:[64388,64389],1677:[64386,64387],1678:[64390,64391],1681:[64396,64397],1688:[64394,64395],1700:[64362,64363,64364,64365],1702:[64366,64367,64368,64369],1705:[64398,64399,64400,64401],1709:[64467,64468,64469,64470],1711:[64402,64403,64404,64405],1713:[64410,64411,64412,64413],1715:[64406,64407,64408,64409],1722:[64414,64415],1723:[64416,64417,64418,64419],1726:[64426,64427,64428,64429],1728:[64420,64421],1729:[64422,64423,64424,64425],1733:[64480,64481],1734:[64473,64474],1735:[64471,64472],1736:[64475,64476],1737:[64482,64483],1739:[64478,64479],1740:[64508,64509,64510,64511],1744:[64484,64485,64486,64487],1746:[64430,64431],1747:[64432,64433]},n={65247:{65154:65269,65156:65271,65160:65273,65166:65275},65248:{65154:65270,65156:65272,65160:65274,65166:65276},65165:{65247:{65248:{65258:65010}}},1617:{1612:64606,1613:64607,1614:64608,1615:64609,1616:64610}},r={1612:64606,1613:64607,1614:64608,1615:64609,1616:64610},i=[1570,1571,1573,1575];e.__arabicParser__={};var a=e.__arabicParser__.isInArabicSubstitutionA=function(e){return void 0!==t[e.charCodeAt(0)]},o=e.__arabicParser__.isArabicLetter=function(e){return"string"==typeof e&&/^[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFF]+$/.test(e)},s=e.__arabicParser__.isArabicEndLetter=function(e){return o(e)&&a(e)&&t[e.charCodeAt(0)].length<=2},c=e.__arabicParser__.isArabicAlfLetter=function(e){return o(e)&&i.indexOf(e.charCodeAt(0))>=0};e.__arabicParser__.arabicLetterHasIsolatedForm=function(e){return o(e)&&a(e)&&t[e.charCodeAt(0)].length>=1};var l=e.__arabicParser__.arabicLetterHasFinalForm=function(e){return o(e)&&a(e)&&t[e.charCodeAt(0)].length>=2};e.__arabicParser__.arabicLetterHasInitialForm=function(e){return o(e)&&a(e)&&t[e.charCodeAt(0)].length>=3};var u=e.__arabicParser__.arabicLetterHasMedialForm=function(e){return o(e)&&a(e)&&4==t[e.charCodeAt(0)].length},f=e.__arabicParser__.resolveLigatures=function(e){var t=0,r=n,i="",a=0;for(t=0;t<e.length;t+=1)void 0!==r[e.charCodeAt(t)]?(a++,"number"==typeof(r=r[e.charCodeAt(t)])&&(i+=String.fromCharCode(r),r=n,a=0),t===e.length-1&&(r=n,i+=e.charAt(t-(a-1)),t-=a-1,a=0)):(r=n,i+=e.charAt(t-a),t-=a,a=0);return i};e.__arabicParser__.isArabicDiacritic=function(e){return void 0!==e&&void 0!==r[e.charCodeAt(0)]};var d=e.__arabicParser__.getCorrectForm=function(e,t,n){return o(e)?!1===a(e)?-1:!l(e)||!o(t)&&!o(n)||!o(n)&&s(t)||s(e)&&!o(t)||s(e)&&c(t)||s(e)&&s(t)?0:u(e)&&o(t)&&!s(t)&&o(n)&&l(n)?3:s(e)||!o(n)?1:2:-1},h=function(e){var n=0,r=0,i=0,a="",s="",c="",l=(e=e||"").split("\\s+"),u=[];for(n=0;n<l.length;n+=1){for(u.push(""),r=0;r<l[n].length;r+=1)a=l[n][r],s=l[n][r-1],c=l[n][r+1],o(a)?(i=d(a,s,c),u[n]+=-1!==i?String.fromCharCode(t[a.charCodeAt(0)][i]):a):u[n]+=a;u[n]=f(u[n])}return u.join(" ")},p=e.__arabicParser__.processArabic=e.processArabic=function(){var e,t="string"==typeof arguments[0]?arguments[0]:arguments[0].text,n=[];if(Array.isArray(t)){var r=0;for(n=[],r=0;r<t.length;r+=1)Array.isArray(t[r])?n.push([h(t[r][0]),t[r][1],t[r][2]]):n.push([h(t[r])]);e=n}else e=h(t);return"string"==typeof arguments[0]?e:(arguments[0].text=e,arguments[0])};e.events.push(["preProcessText",p])}(Ae.API),Ae.API.autoPrint=function(e){var t;if("javascript"===((e=e||{}).variant=e.variant||"non-conform",e.variant))this.addJS("print({});");else this.internal.events.subscribe("postPutResources",(function(){t=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/S /Named"),this.internal.out("/Type /Action"),this.internal.out("/N /Print"),this.internal.out(">>"),this.internal.out("endobj")})),this.internal.events.subscribe("putCatalog",(function(){this.internal.out("/OpenAction "+t+" 0 R")}));return this},function(e){var t=function(){var e=void 0;Object.defineProperty(this,"pdf",{get:function(){return e},set:function(t){e=t}});var t=150;Object.defineProperty(this,"width",{get:function(){return t},set:function(e){t=isNaN(e)||!1===Number.isInteger(e)||e<0?150:e,this.getContext("2d").pageWrapXEnabled&&(this.getContext("2d").pageWrapX=t+1)}});var n=300;Object.defineProperty(this,"height",{get:function(){return n},set:function(e){n=isNaN(e)||!1===Number.isInteger(e)||e<0?300:e,this.getContext("2d").pageWrapYEnabled&&(this.getContext("2d").pageWrapY=n+1)}});var r=[];Object.defineProperty(this,"childNodes",{get:function(){return r},set:function(e){r=e}});var i={};Object.defineProperty(this,"style",{get:function(){return i},set:function(e){i=e}}),Object.defineProperty(this,"parentNode",{})};t.prototype.getContext=function(e,t){var n;if("2d"!==(e=e||"2d"))return null;for(n in t)this.pdf.context2d.hasOwnProperty(n)&&(this.pdf.context2d[n]=t[n]);return this.pdf.context2d._canvas=this,this.pdf.context2d},t.prototype.toDataURL=function(){throw new Error("toDataURL is not implemented.")},e.events.push(["initialized",function(){this.canvas=new t,this.canvas.pdf=this}])}(Ae.API),function(e){var t={left:0,top:0,bottom:0,right:0},n=!1,r=function(){void 0===this.internal.__cell__&&(this.internal.__cell__={},this.internal.__cell__.padding=3,this.internal.__cell__.headerFunction=void 0,this.internal.__cell__.margins=Object.assign({},t),this.internal.__cell__.margins.width=this.getPageWidth(),i.call(this))},i=function(){this.internal.__cell__.lastCell=new a,this.internal.__cell__.pages=1},a=function(){var e=arguments[0];Object.defineProperty(this,"x",{enumerable:!0,get:function(){return e},set:function(t){e=t}});var t=arguments[1];Object.defineProperty(this,"y",{enumerable:!0,get:function(){return t},set:function(e){t=e}});var n=arguments[2];Object.defineProperty(this,"width",{enumerable:!0,get:function(){return n},set:function(e){n=e}});var r=arguments[3];Object.defineProperty(this,"height",{enumerable:!0,get:function(){return r},set:function(e){r=e}});var i=arguments[4];Object.defineProperty(this,"text",{enumerable:!0,get:function(){return i},set:function(e){i=e}});var a=arguments[5];Object.defineProperty(this,"lineNumber",{enumerable:!0,get:function(){return a},set:function(e){a=e}});var o=arguments[6];return Object.defineProperty(this,"align",{enumerable:!0,get:function(){return o},set:function(e){o=e}}),this};a.prototype.clone=function(){return new a(this.x,this.y,this.width,this.height,this.text,this.lineNumber,this.align)},a.prototype.toArray=function(){return[this.x,this.y,this.width,this.height,this.text,this.lineNumber,this.align]},e.setHeaderFunction=function(e){return r.call(this),this.internal.__cell__.headerFunction="function"==typeof e?e:void 0,this},e.getTextDimensions=function(e,t){r.call(this);var n=(t=t||{}).fontSize||this.getFontSize(),i=t.font||this.getFont(),a=t.scaleFactor||this.internal.scaleFactor,o=0,s=0,c=0;if(!Array.isArray(e)&&"string"!=typeof e){if("number"!=typeof e)throw new Error("getTextDimensions expects text-parameter to be of type String or type Number or an Array of Strings.");e=String(e)}const l=t.maxWidth;l>0?"string"==typeof e?e=this.splitTextToSize(e,l):"[object Array]"===Object.prototype.toString.call(e)&&(e=e.reduce((function(e,t){return e.concat(scope.splitTextToSize(t,l))}),[])):e=Array.isArray(e)?e:[e];for(var u=0;u<e.length;u++)o<(c=this.getStringUnitWidth(e[u],{font:i})*n)&&(o=c);return 0!==o&&(s=e.length),{w:o/=a,h:Math.max((s*n*this.getLineHeightFactor()-n*(this.getLineHeightFactor()-1))/a,0)}},e.cellAddPage=function(){r.call(this),this.addPage();var e=this.internal.__cell__.margins||t;return this.internal.__cell__.lastCell=new a(e.left,e.top,void 0,void 0),this.internal.__cell__.pages+=1,this};var o=e.cell=function(){var e;e=arguments[0]instanceof a?arguments[0]:new a(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]),r.call(this);var i=this.internal.__cell__.lastCell,o=this.internal.__cell__.padding,s=this.internal.__cell__.margins||t,c=this.internal.__cell__.tableHeaderRow,l=this.internal.__cell__.printHeaders;return void 0!==i.lineNumber&&(i.lineNumber===e.lineNumber?(e.x=(i.x||0)+(i.width||0),e.y=i.y||0):i.y+i.height+e.height+s.bottom>this.getPageHeight()?(this.cellAddPage(),e.y=s.top,l&&c&&(this.printHeaderRow(e.lineNumber,!0),e.y+=c[0].height)):e.y=i.y+i.height||e.y),void 0!==e.text[0]&&(this.rect(e.x,e.y,e.width,e.height,!0===n?"FD":void 0),"right"===e.align?this.text(e.text,e.x+e.width-o,e.y+o,{align:"right",baseline:"top"}):"center"===e.align?this.text(e.text,e.x+e.width/2,e.y+o,{align:"center",baseline:"top",maxWidth:e.width-o-o}):this.text(e.text,e.x+o,e.y+o,{align:"left",baseline:"top",maxWidth:e.width-o-o})),this.internal.__cell__.lastCell=e,this};e.table=function(e,n,c,l,u){if(r.call(this),!c)throw new Error("No data for PDF table.");var f,d,h,p,v=[],m=[],g=[],y={},b={},w=[],N=[],x=(u=u||{}).autoSize||!1,S=!1!==u.printHeaders,k=u.css&&void 0!==u.css["font-size"]?16*u.css["font-size"]:u.fontSize||12,C=u.margins||Object.assign({width:this.getPageWidth()},t),L="number"==typeof u.padding?u.padding:3,A=u.headerBackgroundColor||"#c8c8c8";if(i.call(this),this.internal.__cell__.printHeaders=S,this.internal.__cell__.margins=C,this.internal.__cell__.table_font_size=k,this.internal.__cell__.padding=L,this.internal.__cell__.headerBackgroundColor=A,this.setFontSize(k),null==l)m=v=Object.keys(c[0]),g=v.map((function(){return"left"}));else if(Array.isArray(l)&&"object"==typeof l[0])for(v=l.map((function(e){return e.name})),m=l.map((function(e){return e.prompt||e.name||""})),g=l.map((function(e){return e.align||"left"})),f=0;f<l.length;f+=1)b[l[f].name]=l[f].width*(19.049976/25.4);else Array.isArray(l)&&"string"==typeof l[0]&&(m=v=l,g=v.map((function(){return"left"})));if(x)for(f=0;f<v.length;f+=1){for(y[p=v[f]]=c.map((function(e){return e[p]})),this.setFont(void 0,"bold"),w.push(this.getTextDimensions(m[f],{fontSize:this.internal.__cell__.table_font_size,scaleFactor:this.internal.scaleFactor}).w),d=y[p],this.setFont(void 0,"normal"),h=0;h<d.length;h+=1)w.push(this.getTextDimensions(d[h],{fontSize:this.internal.__cell__.table_font_size,scaleFactor:this.internal.scaleFactor}).w);b[p]=Math.max.apply(null,w)+L+L,w=[]}if(S){var E={};for(f=0;f<v.length;f+=1)E[v[f]]={},E[v[f]].text=m[f],E[v[f]].align=g[f];var P=s.call(this,E,b);N=v.map((function(t){return new a(e,n,b[t],P,E[t].text,void 0,E[t].align)})),this.setTableHeaderRow(N),this.printHeaderRow(1,!1)}var _=l.reduce((function(e,t){return e[t.name]=t.align,e}),{});for(f=0;f<c.length;f+=1){var I=s.call(this,c[f],b);for(h=0;h<v.length;h+=1)o.call(this,new a(e,n,b[v[h]],I,c[f][v[h]],f+2,_[v[h]]))}return this.internal.__cell__.table_x=e,this.internal.__cell__.table_y=n,this};var s=function(e,t){var n=this.internal.__cell__.padding,r=this.internal.__cell__.table_font_size,i=this.internal.scaleFactor;return Object.keys(e).map((function(r){var i=e[r];return this.splitTextToSize(i.hasOwnProperty("text")?i.text:i,t[r]-n-n)}),this).map((function(e){return this.getLineHeightFactor()*e.length*r/i+n+n}),this).reduce((function(e,t){return Math.max(e,t)}),0)};e.setTableHeaderRow=function(e){r.call(this),this.internal.__cell__.tableHeaderRow=e},e.printHeaderRow=function(e,t){if(r.call(this),!this.internal.__cell__.tableHeaderRow)throw new Error("Property tableHeaderRow does not exist.");var i;if(n=!0,"function"==typeof this.internal.__cell__.headerFunction){var s=this.internal.__cell__.headerFunction(this,this.internal.__cell__.pages);this.internal.__cell__.lastCell=new a(s[0],s[1],s[2],s[3],void 0,-1)}this.setFont(void 0,"bold");for(var c=[],l=0;l<this.internal.__cell__.tableHeaderRow.length;l+=1)i=this.internal.__cell__.tableHeaderRow[l].clone(),t&&(i.y=this.internal.__cell__.margins.top||0,c.push(i)),i.lineNumber=e,this.setFillColor(this.internal.__cell__.headerBackgroundColor),o.call(this,i);c.length>0&&this.setTableHeaderRow(c),this.setFont(void 0,"normal"),n=!1}}(Ae.API);var gt={italic:["italic","oblique","normal"],oblique:["oblique","italic","normal"],normal:["normal","oblique","italic"]},yt=["ultra-condensed","extra-condensed","condensed","semi-condensed","normal","semi-expanded","expanded","extra-expanded","ultra-expanded"],bt=mt(yt),wt=[100,200,300,400,500,600,700,800,900],Nt=mt(wt);function xt(e){var t=e.family.replace(/"|'/g,"").toLowerCase(),n=function(e){return gt[e=e||"normal"]?e:"normal"}(e.style),r=function(e){return e?"number"==typeof e?e>=100&&e<=900&&e%100==0?e:400:/^\d00$/.test(e)?parseInt(e):"bold"===e?700:400:400}(e.weight),i=function(e){return"number"==typeof bt[e=e||"normal"]?e:"normal"}(e.stretch);return{family:t,style:n,weight:r,stretch:i,src:e.src||[],ref:e.ref||{name:t,style:[i,n,r].join(" ")}}}function St(e,t,n,r){var i;for(i=n;i>=0&&i<t.length;i+=r)if(e[t[i]])return e[t[i]];for(i=n;i>=0&&i<t.length;i-=r)if(e[t[i]])return e[t[i]]}var kt={"sans-serif":"helvetica",fixed:"courier",monospace:"courier",terminal:"courier",cursive:"times",fantasy:"times",serif:"times"},Ct={caption:"times",icon:"times",menu:"times","message-box":"times","small-caption":"times","status-bar":"times"};function Lt(e){return[e.stretch,e.style,e.weight,e.family].join(" ")}function At(e){return e.trimLeft()}function Et(e,t){for(var n=0;n<e.length;){if(e.charAt(n)===t)return[e.substring(0,n),e.substring(n+1)];n+=1}return null}function Pt(e){var t=e.match(/^(-[a-z_]|[a-z_])[a-z0-9_-]*/i);return null===t?null:[t[0],e.substring(t[0].length)]}var _t,It,Ot,Mt=["times"];!function(e){var t,n,r,i,a,o,s,c,l,u=function(e){return e=e||{},this.isStrokeTransparent=e.isStrokeTransparent||!1,this.strokeOpacity=e.strokeOpacity||1,this.strokeStyle=e.strokeStyle||"#000000",this.fillStyle=e.fillStyle||"#000000",this.isFillTransparent=e.isFillTransparent||!1,this.fillOpacity=e.fillOpacity||1,this.font=e.font||"10px sans-serif",this.textBaseline=e.textBaseline||"alphabetic",this.textAlign=e.textAlign||"left",this.lineWidth=e.lineWidth||1,this.lineJoin=e.lineJoin||"miter",this.lineCap=e.lineCap||"butt",this.path=e.path||[],this.transform=void 0!==e.transform?e.transform.clone():new c,this.globalCompositeOperation=e.globalCompositeOperation||"normal",this.globalAlpha=e.globalAlpha||1,this.clip_path=e.clip_path||[],this.currentPoint=e.currentPoint||new o,this.miterLimit=e.miterLimit||10,this.lastPoint=e.lastPoint||new o,this.ignoreClearRect="boolean"!=typeof e.ignoreClearRect||e.ignoreClearRect,this};e.events.push(["initialized",function(){this.context2d=new f(this),t=this.internal.f2,n=this.internal.getCoordinateString,r=this.internal.getVerticalCoordinateString,i=this.internal.getHorizontalCoordinate,a=this.internal.getVerticalCoordinate,o=this.internal.Point,s=this.internal.Rectangle,c=this.internal.Matrix,l=new u}]);var f=function(e){Object.defineProperty(this,"canvas",{get:function(){return{parentNode:!1,style:!1}}});var t=e;Object.defineProperty(this,"pdf",{get:function(){return t}});var n=!1;Object.defineProperty(this,"pageWrapXEnabled",{get:function(){return n},set:function(e){n=Boolean(e)}});var r=!1;Object.defineProperty(this,"pageWrapYEnabled",{get:function(){return r},set:function(e){r=Boolean(e)}});var i=0;Object.defineProperty(this,"posX",{get:function(){return i},set:function(e){isNaN(e)||(i=e)}});var a=0;Object.defineProperty(this,"posY",{get:function(){return a},set:function(e){isNaN(e)||(a=e)}});var o=!1;Object.defineProperty(this,"autoPaging",{get:function(){return o},set:function(e){o=Boolean(e)}});var s=0;Object.defineProperty(this,"lastBreak",{get:function(){return s},set:function(e){s=e}});var c=[];Object.defineProperty(this,"pageBreaks",{get:function(){return c},set:function(e){c=e}}),Object.defineProperty(this,"ctx",{get:function(){return l},set:function(e){e instanceof u&&(l=e)}}),Object.defineProperty(this,"path",{get:function(){return l.path},set:function(e){l.path=e}});var f=[];Object.defineProperty(this,"ctxStack",{get:function(){return f},set:function(e){f=e}}),Object.defineProperty(this,"fillStyle",{get:function(){return this.ctx.fillStyle},set:function(e){var t;t=d(e),this.ctx.fillStyle=t.style,this.ctx.isFillTransparent=0===t.a,this.ctx.fillOpacity=t.a,this.pdf.setFillColor(t.r,t.g,t.b,{a:t.a}),this.pdf.setTextColor(t.r,t.g,t.b,{a:t.a})}}),Object.defineProperty(this,"strokeStyle",{get:function(){return this.ctx.strokeStyle},set:function(e){var t=d(e);this.ctx.strokeStyle=t.style,this.ctx.isStrokeTransparent=0===t.a,this.ctx.strokeOpacity=t.a,0===t.a?this.pdf.setDrawColor(255,255,255):(t.a,this.pdf.setDrawColor(t.r,t.g,t.b))}}),Object.defineProperty(this,"lineCap",{get:function(){return this.ctx.lineCap},set:function(e){-1!==["butt","round","square"].indexOf(e)&&(this.ctx.lineCap=e,this.pdf.setLineCap(e))}}),Object.defineProperty(this,"lineWidth",{get:function(){return this.ctx.lineWidth},set:function(e){isNaN(e)||(this.ctx.lineWidth=e,this.pdf.setLineWidth(e))}}),Object.defineProperty(this,"lineJoin",{get:function(){return this.ctx.lineJoin},set:function(e){-1!==["bevel","round","miter"].indexOf(e)&&(this.ctx.lineJoin=e,this.pdf.setLineJoin(e))}}),Object.defineProperty(this,"miterLimit",{get:function(){return this.ctx.miterLimit},set:function(e){isNaN(e)||(this.ctx.miterLimit=e,this.pdf.setMiterLimit(e))}}),Object.defineProperty(this,"textBaseline",{get:function(){return this.ctx.textBaseline},set:function(e){this.ctx.textBaseline=e}}),Object.defineProperty(this,"textAlign",{get:function(){return this.ctx.textAlign},set:function(e){-1!==["right","end","center","left","start"].indexOf(e)&&(this.ctx.textAlign=e)}});var h=null;function p(e,t){if(null===h){var n=function(e){var t=[];return Object.keys(e).forEach((function(n){e[n].forEach((function(e){var r=null;switch(e){case"bold":r={family:n,weight:"bold"};break;case"italic":r={family:n,style:"italic"};break;case"bolditalic":r={family:n,weight:"bold",style:"italic"};break;case"":case"normal":r={family:n}}null!==r&&(r.ref={name:n,style:e},t.push(r))}))})),t}(e.getFontList());h=function(e){for(var t={},n=0;n<e.length;++n){var r=xt(e[n]),i=r.family,a=r.stretch,o=r.style,s=r.weight;t[i]=t[i]||{},t[i][a]=t[i][a]||{},t[i][a][o]=t[i][a][o]||{},t[i][a][o][s]=r}return t}(n.concat(t))}return h}var v=null;Object.defineProperty(this,"fontFaces",{get:function(){return v},set:function(e){h=null,v=e}}),Object.defineProperty(this,"font",{get:function(){return this.ctx.font},set:function(e){var t;if(this.ctx.font=e,null!==(t=/^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-_,\"\'\sa-z]+?)\s*$/i.exec(e))){var n=t[1],r=(t[2],t[3]),i=t[4],a=(t[5],t[6]),o=/^([.\d]+)((?:%|in|[cem]m|ex|p[ctx]))$/i.exec(i)[2];i="px"===o?Math.floor(parseFloat(i)*this.pdf.internal.scaleFactor):"em"===o?Math.floor(parseFloat(i)*this.pdf.getFontSize()):Math.floor(parseFloat(i)*this.pdf.internal.scaleFactor),this.pdf.setFontSize(i);var s=function(e){var t,n,r=[],i=e.trim();if(""===i)return Mt;if(i in Ct)return[Ct[i]];for(;""!==i;){switch(n=null,t=(i=At(i)).charAt(0)){case'"':case"'":n=Et(i.substring(1),t);break;default:n=Pt(i)}if(null===n)return Mt;if(r.push(n[0]),""!==(i=At(n[1]))&&","!==i.charAt(0))return Mt;i=i.replace(/^,/,"")}return r}(a);if(this.fontFaces){var c=function(e,t,n){for(var r=(n=n||{}).defaultFontFamily||"times",i=Object.assign({},kt,n.genericFontFamilies||{}),a=null,o=null,s=0;s<t.length;++s)if(i[(a=xt(t[s])).family]&&(a.family=i[a.family]),e.hasOwnProperty(a.family)){o=e[a.family];break}if(!(o=o||e[r]))throw new Error("Could not find a font-family for the rule '"+Lt(a)+"' and default family '"+r+"'.");if(o=function(e,t){if(t[e])return t[e];var n=bt[e],r=n<=bt.normal?-1:1,i=St(t,yt,n,r);if(!i)throw new Error("Could not find a matching font-stretch value for "+e);return i}(a.stretch,o),o=function(e,t){if(t[e])return t[e];for(var n=gt[e],r=0;r<n.length;++r)if(t[n[r]])return t[n[r]];throw new Error("Could not find a matching font-style for "+e)}(a.style,o),!(o=function(e,t){if(t[e])return t[e];if(400===e&&t[500])return t[500];if(500===e&&t[400])return t[400];var n=Nt[e],r=St(t,wt,n,e<400?-1:1);if(!r)throw new Error("Could not find a matching font-weight for value "+e);return r}(a.weight,o)))throw new Error("Failed to resolve a font for the rule '"+Lt(a)+"'.");return o}(p(this.pdf,this.fontFaces),s.map((function(e){return{family:e,stretch:"normal",weight:r,style:n}})));this.pdf.setFont(c.ref.name,c.ref.style)}else{var l="";("bold"===r||parseInt(r,10)>=700||"bold"===n)&&(l="bold"),"italic"===n&&(l+="italic"),0===l.length&&(l="normal");for(var u="",f={arial:"Helvetica",Arial:"Helvetica",verdana:"Helvetica",Verdana:"Helvetica",helvetica:"Helvetica",Helvetica:"Helvetica","sans-serif":"Helvetica",fixed:"Courier",monospace:"Courier",terminal:"Courier",cursive:"Times",fantasy:"Times",serif:"Times"},d=0;d<s.length;d++){if(void 0!==this.pdf.internal.getFont(s[d],l,{noFallback:!0,disableWarning:!0})){u=s[d];break}if("bolditalic"===l&&void 0!==this.pdf.internal.getFont(s[d],"bold",{noFallback:!0,disableWarning:!0}))u=s[d],l="bold";else if(void 0!==this.pdf.internal.getFont(s[d],"normal",{noFallback:!0,disableWarning:!0})){u=s[d],l="normal";break}}if(""===u)for(var h=0;h<s.length;h++)if(f[s[h]]){u=f[s[h]];break}u=""===u?"Times":u,this.pdf.setFont(u,l)}}}}),Object.defineProperty(this,"globalCompositeOperation",{get:function(){return this.ctx.globalCompositeOperation},set:function(e){this.ctx.globalCompositeOperation=e}}),Object.defineProperty(this,"globalAlpha",{get:function(){return this.ctx.globalAlpha},set:function(e){this.ctx.globalAlpha=e}}),Object.defineProperty(this,"ignoreClearRect",{get:function(){return this.ctx.ignoreClearRect},set:function(e){this.ctx.ignoreClearRect=Boolean(e)}})};f.prototype.fill=function(){b.call(this,"fill",!1)},f.prototype.stroke=function(){b.call(this,"stroke",!1)},f.prototype.beginPath=function(){this.path=[{type:"begin"}]},f.prototype.moveTo=function(e,t){if(isNaN(e)||isNaN(t))throw J.error("jsPDF.context2d.moveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.moveTo");var n=this.ctx.transform.applyToPoint(new o(e,t));this.path.push({type:"mt",x:n.x,y:n.y}),this.ctx.lastPoint=new o(e,t)},f.prototype.closePath=function(){var e=new o(0,0),t=0;for(t=this.path.length-1;-1!==t;t--)if("begin"===this.path[t].type&&"object"==typeof this.path[t+1]&&"number"==typeof this.path[t+1].x){e=new o(this.path[t+1].x,this.path[t+1].y),this.path.push({type:"lt",x:e.x,y:e.y});break}"object"==typeof this.path[t+2]&&"number"==typeof this.path[t+2].x&&this.path.push(JSON.parse(JSON.stringify(this.path[t+2]))),this.path.push({type:"close"}),this.ctx.lastPoint=new o(e.x,e.y)},f.prototype.lineTo=function(e,t){if(isNaN(e)||isNaN(t))throw J.error("jsPDF.context2d.lineTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.lineTo");var n=this.ctx.transform.applyToPoint(new o(e,t));this.path.push({type:"lt",x:n.x,y:n.y}),this.ctx.lastPoint=new o(n.x,n.y)},f.prototype.clip=function(){this.ctx.clip_path=JSON.parse(JSON.stringify(this.path)),b.call(this,null,!0)},f.prototype.quadraticCurveTo=function(e,t,n,r){if(isNaN(n)||isNaN(r)||isNaN(e)||isNaN(t))throw J.error("jsPDF.context2d.quadraticCurveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.quadraticCurveTo");var i=this.ctx.transform.applyToPoint(new o(n,r)),a=this.ctx.transform.applyToPoint(new o(e,t));this.path.push({type:"qct",x1:a.x,y1:a.y,x:i.x,y:i.y}),this.ctx.lastPoint=new o(i.x,i.y)},f.prototype.bezierCurveTo=function(e,t,n,r,i,a){if(isNaN(i)||isNaN(a)||isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r))throw J.error("jsPDF.context2d.bezierCurveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.bezierCurveTo");var s=this.ctx.transform.applyToPoint(new o(i,a)),c=this.ctx.transform.applyToPoint(new o(e,t)),l=this.ctx.transform.applyToPoint(new o(n,r));this.path.push({type:"bct",x1:c.x,y1:c.y,x2:l.x,y2:l.y,x:s.x,y:s.y}),this.ctx.lastPoint=new o(s.x,s.y)},f.prototype.arc=function(e,t,n,r,i,a){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r)||isNaN(i))throw J.error("jsPDF.context2d.arc: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.arc");if(a=Boolean(a),!this.ctx.transform.isIdentity){var s=this.ctx.transform.applyToPoint(new o(e,t));e=s.x,t=s.y;var c=this.ctx.transform.applyToPoint(new o(0,n)),l=this.ctx.transform.applyToPoint(new o(0,0));n=Math.sqrt(Math.pow(c.x-l.x,2)+Math.pow(c.y-l.y,2))}Math.abs(i-r)>=2*Math.PI&&(r=0,i=2*Math.PI),this.path.push({type:"arc",x:e,y:t,radius:n,startAngle:r,endAngle:i,counterclockwise:a})},f.prototype.arcTo=function(e,t,n,r,i){throw new Error("arcTo not implemented.")},f.prototype.rect=function(e,t,n,r){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r))throw J.error("jsPDF.context2d.rect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.rect");this.moveTo(e,t),this.lineTo(e+n,t),this.lineTo(e+n,t+r),this.lineTo(e,t+r),this.lineTo(e,t),this.lineTo(e+n,t),this.lineTo(e,t)},f.prototype.fillRect=function(e,t,n,r){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r))throw J.error("jsPDF.context2d.fillRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.fillRect");if(!h.call(this)){var i={};"butt"!==this.lineCap&&(i.lineCap=this.lineCap,this.lineCap="butt"),"miter"!==this.lineJoin&&(i.lineJoin=this.lineJoin,this.lineJoin="miter"),this.beginPath(),this.rect(e,t,n,r),this.fill(),i.hasOwnProperty("lineCap")&&(this.lineCap=i.lineCap),i.hasOwnProperty("lineJoin")&&(this.lineJoin=i.lineJoin)}},f.prototype.strokeRect=function(e,t,n,r){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r))throw J.error("jsPDF.context2d.strokeRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.strokeRect");p.call(this)||(this.beginPath(),this.rect(e,t,n,r),this.stroke())},f.prototype.clearRect=function(e,t,n,r){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r))throw J.error("jsPDF.context2d.clearRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.clearRect");this.ignoreClearRect||(this.fillStyle="#ffffff",this.fillRect(e,t,n,r))},f.prototype.save=function(e){e="boolean"!=typeof e||e;for(var t=this.pdf.internal.getCurrentPageInfo().pageNumber,n=0;n<this.pdf.internal.getNumberOfPages();n++)this.pdf.setPage(n+1),this.pdf.internal.out("q");if(this.pdf.setPage(t),e){this.ctx.fontSize=this.pdf.internal.getFontSize();var r=new u(this.ctx);this.ctxStack.push(this.ctx),this.ctx=r}},f.prototype.restore=function(e){e="boolean"!=typeof e||e;for(var t=this.pdf.internal.getCurrentPageInfo().pageNumber,n=0;n<this.pdf.internal.getNumberOfPages();n++)this.pdf.setPage(n+1),this.pdf.internal.out("Q");this.pdf.setPage(t),e&&0!==this.ctxStack.length&&(this.ctx=this.ctxStack.pop(),this.fillStyle=this.ctx.fillStyle,this.strokeStyle=this.ctx.strokeStyle,this.font=this.ctx.font,this.lineCap=this.ctx.lineCap,this.lineWidth=this.ctx.lineWidth,this.lineJoin=this.ctx.lineJoin)},f.prototype.toDataURL=function(){throw new Error("toDataUrl not implemented.")};var d=function(e){var t,n,r,i;if(!0===e.isCanvasGradient&&(e=e.getColor()),!e)return{r:0,g:0,b:0,a:0,style:e};if(/transparent|rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*0+\s*\)/.test(e))t=0,n=0,r=0,i=0;else{var a=/rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/.exec(e);if(null!==a)t=parseInt(a[1]),n=parseInt(a[2]),r=parseInt(a[3]),i=1;else if(null!==(a=/rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([\d.]+)\s*\)/.exec(e)))t=parseInt(a[1]),n=parseInt(a[2]),r=parseInt(a[3]),i=parseFloat(a[4]);else{if(i=1,"string"==typeof e&&"#"!==e.charAt(0)){var o=new ae(e);e=o.ok?o.toHex():"#000000"}4===e.length?(t=e.substring(1,2),t+=t,n=e.substring(2,3),n+=n,r=e.substring(3,4),r+=r):(t=e.substring(1,3),n=e.substring(3,5),r=e.substring(5,7)),t=parseInt(t,16),n=parseInt(n,16),r=parseInt(r,16)}}return{r:t,g:n,b:r,a:i,style:e}},h=function(){return this.ctx.isFillTransparent||0==this.globalAlpha},p=function(){return Boolean(this.ctx.isStrokeTransparent||0==this.globalAlpha)};f.prototype.fillText=function(e,t,n,r){if(isNaN(t)||isNaN(n)||"string"!=typeof e)throw J.error("jsPDF.context2d.fillText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.fillText");if(r=isNaN(r)?void 0:r,!h.call(this)){n=N.call(this,n);var i=O(this.ctx.transform.rotation),a=this.ctx.transform.scaleX;L.call(this,{text:e,x:t,y:n,scale:a,angle:i,align:this.textAlign,maxWidth:r})}},f.prototype.strokeText=function(e,t,n,r){if(isNaN(t)||isNaN(n)||"string"!=typeof e)throw J.error("jsPDF.context2d.strokeText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.strokeText");if(!p.call(this)){r=isNaN(r)?void 0:r,n=N.call(this,n);var i=O(this.ctx.transform.rotation),a=this.ctx.transform.scaleX;L.call(this,{text:e,x:t,y:n,scale:a,renderingMode:"stroke",angle:i,align:this.textAlign,maxWidth:r})}},f.prototype.measureText=function(e){if("string"!=typeof e)throw J.error("jsPDF.context2d.measureText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.measureText");var t=this.pdf,n=this.pdf.internal.scaleFactor,r=t.internal.getFontSize(),i=t.getStringUnitWidth(e)*r/t.internal.scaleFactor;return new function(e){var t=(e=e||{}).width||0;return Object.defineProperty(this,"width",{get:function(){return t}}),this}({width:i*=Math.round(96*n/72*1e4)/1e4})},f.prototype.scale=function(e,t){if(isNaN(e)||isNaN(t))throw J.error("jsPDF.context2d.scale: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.scale");var n=new c(e,0,0,t,0,0);this.ctx.transform=this.ctx.transform.multiply(n)},f.prototype.rotate=function(e){if(isNaN(e))throw J.error("jsPDF.context2d.rotate: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.rotate");var t=new c(Math.cos(e),Math.sin(e),-Math.sin(e),Math.cos(e),0,0);this.ctx.transform=this.ctx.transform.multiply(t)},f.prototype.translate=function(e,t){if(isNaN(e)||isNaN(t))throw J.error("jsPDF.context2d.translate: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.translate");var n=new c(1,0,0,1,e,t);this.ctx.transform=this.ctx.transform.multiply(n)},f.prototype.transform=function(e,t,n,r,i,a){if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(a))throw J.error("jsPDF.context2d.transform: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.transform");var o=new c(e,t,n,r,i,a);this.ctx.transform=this.ctx.transform.multiply(o)},f.prototype.setTransform=function(e,t,n,r,i,a){e=isNaN(e)?1:e,t=isNaN(t)?0:t,n=isNaN(n)?0:n,r=isNaN(r)?1:r,i=isNaN(i)?0:i,a=isNaN(a)?0:a,this.ctx.transform=new c(e,t,n,r,i,a)},f.prototype.drawImage=function(e,t,n,r,i,a,o,l,u){var f=this.pdf.getImageProperties(e),d=1,h=1,p=1,m=1;void 0!==r&&void 0!==l&&(p=l/r,m=u/i,d=f.width/r*l/r,h=f.height/i*u/i),void 0===a&&(a=t,o=n,t=0,n=0),void 0!==r&&void 0===l&&(l=r,u=i),void 0===r&&void 0===l&&(l=f.width,u=f.height);for(var b,N=this.ctx.transform.decompose(),x=O(N.rotate.shx),S=new c,k=(S=(S=(S=S.multiply(N.translate)).multiply(N.skew)).multiply(N.scale)).applyToRectangle(new s(a-t*p,o-n*m,r*d,i*h)),C=v.call(this,k),L=[],A=0;A<C.length;A+=1)-1===L.indexOf(C[A])&&L.push(C[A]);if(y(L),this.autoPaging)for(var E=L[0],P=L[L.length-1],_=E;_<P+1;_++){if(this.pdf.setPage(_),0!==this.ctx.clip_path.length){var I=this.path;b=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=g(b,this.posX,-1*this.pdf.internal.pageSize.height*(_-1)+this.posY),w.call(this,"fill",!0),this.path=I}var M=JSON.parse(JSON.stringify(k));M=g([M],this.posX,-1*this.pdf.internal.pageSize.height*(_-1)+this.posY)[0],this.pdf.addImage(e,"JPEG",M.x,M.y,M.w,M.h,null,null,x)}else this.pdf.addImage(e,"JPEG",k.x,k.y,k.w,k.h,null,null,x)};var v=function(e,t,n){var r=[];switch(t=t||this.pdf.internal.pageSize.width,n=n||this.pdf.internal.pageSize.height,e.type){default:case"mt":case"lt":r.push(Math.floor((e.y+this.posY)/n)+1);break;case"arc":r.push(Math.floor((e.y+this.posY-e.radius)/n)+1),r.push(Math.floor((e.y+this.posY+e.radius)/n)+1);break;case"qct":var i=M(this.ctx.lastPoint.x,this.ctx.lastPoint.y,e.x1,e.y1,e.x,e.y);r.push(Math.floor(i.y/n)+1),r.push(Math.floor((i.y+i.h)/n)+1);break;case"bct":var a=D(this.ctx.lastPoint.x,this.ctx.lastPoint.y,e.x1,e.y1,e.x2,e.y2,e.x,e.y);r.push(Math.floor(a.y/n)+1),r.push(Math.floor((a.y+a.h)/n)+1);break;case"rect":r.push(Math.floor((e.y+this.posY)/n)+1),r.push(Math.floor((e.y+e.h+this.posY)/n)+1)}for(var o=0;o<r.length;o+=1)for(;this.pdf.internal.getNumberOfPages()<r[o];)m.call(this);return r},m=function(){var e=this.fillStyle,t=this.strokeStyle,n=this.font,r=this.lineCap,i=this.lineWidth,a=this.lineJoin;this.pdf.addPage(),this.fillStyle=e,this.strokeStyle=t,this.font=n,this.lineCap=r,this.lineWidth=i,this.lineJoin=a},g=function(e,t,n){for(var r=0;r<e.length;r++)switch(e[r].type){case"bct":e[r].x2+=t,e[r].y2+=n;case"qct":e[r].x1+=t,e[r].y1+=n;default:e[r].x+=t,e[r].y+=n}return e},y=function(e){return e.sort((function(e,t){return e-t}))},b=function(e,t){for(var n,r,i=this.fillStyle,a=this.strokeStyle,o=this.lineCap,s=this.lineWidth,c=s*this.ctx.transform.scaleX,l=this.lineJoin,u=JSON.parse(JSON.stringify(this.path)),f=JSON.parse(JSON.stringify(this.path)),d=[],h=0;h<f.length;h++)if(void 0!==f[h].x)for(var p=v.call(this,f[h]),b=0;b<p.length;b+=1)-1===d.indexOf(p[b])&&d.push(p[b]);for(var N=0;N<d.length;N++)for(;this.pdf.internal.getNumberOfPages()<d[N];)m.call(this);if(y(d),this.autoPaging)for(var x=d[0],S=d[d.length-1],k=x;k<S+1;k++){if(this.pdf.setPage(k),this.fillStyle=i,this.strokeStyle=a,this.lineCap=o,this.lineWidth=c,this.lineJoin=l,0!==this.ctx.clip_path.length){var C=this.path;n=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=g(n,this.posX,-1*this.pdf.internal.pageSize.height*(k-1)+this.posY),w.call(this,e,!0),this.path=C}r=JSON.parse(JSON.stringify(u)),this.path=g(r,this.posX,-1*this.pdf.internal.pageSize.height*(k-1)+this.posY),!1!==t&&0!==k||w.call(this,e,t),this.lineWidth=s}else this.lineWidth=c,w.call(this,e,t),this.lineWidth=s;this.path=u},w=function(e,t){if(("stroke"!==e||t||!p.call(this))&&("stroke"===e||t||!h.call(this))){for(var n,r,i=[],a=this.path,o=0;o<a.length;o++){var s=a[o];switch(s.type){case"begin":i.push({begin:!0});break;case"close":i.push({close:!0});break;case"mt":i.push({start:s,deltas:[],abs:[]});break;case"lt":var c=i.length;if(!isNaN(a[o-1].x)&&(n=[s.x-a[o-1].x,s.y-a[o-1].y],c>0))for(;c>=0;c--)if(!0!==i[c-1].close&&!0!==i[c-1].begin){i[c-1].deltas.push(n),i[c-1].abs.push(s);break}break;case"bct":n=[s.x1-a[o-1].x,s.y1-a[o-1].y,s.x2-a[o-1].x,s.y2-a[o-1].y,s.x-a[o-1].x,s.y-a[o-1].y],i[i.length-1].deltas.push(n);break;case"qct":var l=a[o-1].x+2/3*(s.x1-a[o-1].x),u=a[o-1].y+2/3*(s.y1-a[o-1].y),f=s.x+2/3*(s.x1-s.x),d=s.y+2/3*(s.y1-s.y),v=s.x,m=s.y;n=[l-a[o-1].x,u-a[o-1].y,f-a[o-1].x,d-a[o-1].y,v-a[o-1].x,m-a[o-1].y],i[i.length-1].deltas.push(n);break;case"arc":i.push({deltas:[],abs:[],arc:!0}),Array.isArray(i[i.length-1].abs)&&i[i.length-1].abs.push(s)}}r=t?null:"stroke"===e?"stroke":"fill";for(var g=0;g<i.length;g++){if(i[g].arc){for(var y=i[g].abs,b=0;b<y.length;b++){var w=y[b];"arc"===w.type?x.call(this,w.x,w.y,w.radius,w.startAngle,w.endAngle,w.counterclockwise,void 0,t):A.call(this,w.x,w.y)}S.call(this,r),this.pdf.internal.out("h")}if(!i[g].arc&&!0!==i[g].close&&!0!==i[g].begin){var N=i[g].start.x,C=i[g].start.y;E.call(this,i[g].deltas,N,C)}}r&&S.call(this,r),t&&k.call(this)}},N=function(e){var t=this.pdf.internal.getFontSize()/this.pdf.internal.scaleFactor,n=t*(this.pdf.internal.getLineHeightFactor()-1);switch(this.ctx.textBaseline){case"bottom":return e-n;case"top":return e+t-n;case"hanging":return e+t-2*n;case"middle":return e+t/2-n;default:return e}};f.prototype.createLinearGradient=function(){var e=function(){};return e.colorStops=[],e.addColorStop=function(e,t){this.colorStops.push([e,t])},e.getColor=function(){return 0===this.colorStops.length?"#000000":this.colorStops[0][1]},e.isCanvasGradient=!0,e},f.prototype.createPattern=function(){return this.createLinearGradient()},f.prototype.createRadialGradient=function(){return this.createLinearGradient()};var x=function(e,t,n,r,i,a,o,s){for(var c=_.call(this,n,r,i,a),l=0;l<c.length;l++){var u=c[l];0===l&&C.call(this,u.x1+e,u.y1+t),P.call(this,e,t,u.x2,u.y2,u.x3,u.y3,u.x4,u.y4)}s?k.call(this):S.call(this,o)},S=function(e){switch(e){case"stroke":this.pdf.internal.out("S");break;case"fill":this.pdf.internal.out("f")}},k=function(){this.pdf.clip(),this.pdf.discardPath()},C=function(e,t){this.pdf.internal.out(n(e)+" "+r(t)+" m")},L=function(e){var t;switch(e.align){case"right":case"end":t="right";break;case"center":t="center";break;default:t="left"}var n=this.ctx.transform.applyToPoint(new o(e.x,e.y)),r=this.ctx.transform.decompose(),i=new c;i=(i=(i=i.multiply(r.translate)).multiply(r.skew)).multiply(r.scale);for(var a,l,u,f=this.pdf.getTextDimensions(e.text),d=this.ctx.transform.applyToRectangle(new s(e.x,e.y,f.w,f.h)),h=i.applyToRectangle(new s(e.x,e.y-f.h,f.w,f.h)),p=v.call(this,h),m=[],b=0;b<p.length;b+=1)-1===m.indexOf(p[b])&&m.push(p[b]);if(y(m),!0===this.autoPaging)for(var N=m[0],x=m[m.length-1],S=N;S<x+1;S++){if(this.pdf.setPage(S),0!==this.ctx.clip_path.length){var k=this.path;a=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=g(a,this.posX,-1*this.pdf.internal.pageSize.height*(S-1)+this.posY),w.call(this,"fill",!0),this.path=k}var C=JSON.parse(JSON.stringify(d));C=g([C],this.posX,-1*this.pdf.internal.pageSize.height*(S-1)+this.posY)[0],e.scale>=.01&&(l=this.pdf.internal.getFontSize(),this.pdf.setFontSize(l*e.scale),u=this.lineWidth,this.lineWidth=u*e.scale),this.pdf.text(e.text,C.x,C.y,{angle:e.angle,align:t,renderingMode:e.renderingMode,maxWidth:e.maxWidth}),e.scale>=.01&&(this.pdf.setFontSize(l),this.lineWidth=u)}else e.scale>=.01&&(l=this.pdf.internal.getFontSize(),this.pdf.setFontSize(l*e.scale),u=this.lineWidth,this.lineWidth=u*e.scale),this.pdf.text(e.text,n.x+this.posX,n.y+this.posY,{angle:e.angle,align:t,renderingMode:e.renderingMode,maxWidth:e.maxWidth}),e.scale>=.01&&(this.pdf.setFontSize(l),this.lineWidth=u)},A=function(e,t,i,a){i=i||0,a=a||0,this.pdf.internal.out(n(e+i)+" "+r(t+a)+" l")},E=function(e,t,n){return this.pdf.lines(e,t,n,null,null)},P=function(e,n,r,o,s,c,l,u){this.pdf.internal.out([t(i(r+e)),t(a(o+n)),t(i(s+e)),t(a(c+n)),t(i(l+e)),t(a(u+n)),"c"].join(" "))},_=function(e,t,n,r){for(var i=2*Math.PI,a=Math.PI/2;t>n;)t-=i;var o=Math.abs(n-t);o<i&&r&&(o=i-o);for(var s=[],c=r?-1:1,l=t;o>1e-5;){var u=l+c*Math.min(o,a);s.push(I.call(this,e,l,u)),o-=Math.abs(u-l),l=u}return s},I=function(e,t,n){var r=(n-t)/2,i=e*Math.cos(r),a=e*Math.sin(r),o=i,s=-a,c=o*o+s*s,l=c+o*i+s*a,u=4/3*(Math.sqrt(2*c*l)-l)/(o*a-s*i),f=o-u*s,d=s+u*o,h=f,p=-d,v=r+t,m=Math.cos(v),g=Math.sin(v);return{x1:e*Math.cos(t),y1:e*Math.sin(t),x2:f*m-d*g,y2:f*g+d*m,x3:h*m-p*g,y3:h*g+p*m,x4:e*Math.cos(n),y4:e*Math.sin(n)}},O=function(e){return 180*e/Math.PI},M=function(e,t,n,r,i,a){var o=e+.5*(n-e),c=t+.5*(r-t),l=i+.5*(n-i),u=a+.5*(r-a),f=Math.min(e,i,o,l),d=Math.max(e,i,o,l),h=Math.min(t,a,c,u),p=Math.max(t,a,c,u);return new s(f,h,d-f,p-h)},D=function(e,t,n,r,i,a,o,c){var l,u,f,d,h,p,v,m,g,y,b,w,N,x,S=n-e,k=r-t,C=i-n,L=a-r,A=o-i,E=c-a;for(u=0;u<41;u++)g=(v=(f=e+(l=u/40)*S)+l*((h=n+l*C)-f))+l*(h+l*(i+l*A-h)-v),y=(m=(d=t+l*k)+l*((p=r+l*L)-d))+l*(p+l*(a+l*E-p)-m),0==u?(b=g,w=y,N=g,x=y):(b=Math.min(b,g),w=Math.min(w,y),N=Math.max(N,g),x=Math.max(x,y));return new s(Math.round(b),Math.round(w),Math.round(N-b),Math.round(x-w))}}(Ae.API),function(e){var t=function(e){var t,n,r,i,a,o,s,c,l,u;for(/[^\x00-\xFF]/.test(e),n=[],r=0,i=(e+=t="\0\0\0\0".slice(e.length%4||4)).length;i>r;r+=4)0!==(a=(e.charCodeAt(r)<<24)+(e.charCodeAt(r+1)<<16)+(e.charCodeAt(r+2)<<8)+e.charCodeAt(r+3))?(o=(a=((a=((a=((a=(a-(u=a%85))/85)-(l=a%85))/85)-(c=a%85))/85)-(s=a%85))/85)%85,n.push(o+33,s+33,c+33,l+33,u+33)):n.push(122);return function(e,t){for(var n=t;n>0;n--)e.pop()}(n,t.length),String.fromCharCode.apply(String,n)+"~>"},n=function(e){var t,n,r,i,a,o=String,s="length",c=255,l="charCodeAt",u="slice",f="replace";for(e[u](-2),e=e[u](0,-2)[f](/\s/g,"")[f]("z","!!!!!"),r=[],i=0,a=(e+=t="uuuuu"[u](e[s]%5||5))[s];a>i;i+=5)n=52200625*(e[l](i)-33)+614125*(e[l](i+1)-33)+7225*(e[l](i+2)-33)+85*(e[l](i+3)-33)+(e[l](i+4)-33),r.push(c&n>>24,c&n>>16,c&n>>8,c&n);return function(e,t){for(var n=t;n>0;n--)e.pop()}(r,t[s]),o.fromCharCode.apply(o,r)},r=function(e){var t=new RegExp(/^([0-9A-Fa-f]{2})+$/);if(-1!==(e=e.replace(/\s/g,"")).indexOf(">")&&(e=e.substr(0,e.indexOf(">"))),e.length%2&&(e+="0"),!1===t.test(e))return"";for(var n="",r=0;r<e.length;r+=2)n+=String.fromCharCode("0x"+(e[r]+e[r+1]));return n},i=function(e){for(var t=new Uint8Array(e.length),n=e.length;n--;)t[n]=e.charCodeAt(n);return(t=Y(t)).reduce((function(e,t){return e+String.fromCharCode(t)}),"")};e.processDataByFilters=function(e,a){var o=0,s=e||"",c=[];for("string"==typeof(a=a||[])&&(a=[a]),o=0;o<a.length;o+=1)switch(a[o]){case"ASCII85Decode":case"/ASCII85Decode":s=n(s),c.push("/ASCII85Encode");break;case"ASCII85Encode":case"/ASCII85Encode":s=t(s),c.push("/ASCII85Decode");break;case"ASCIIHexDecode":case"/ASCIIHexDecode":s=r(s),c.push("/ASCIIHexEncode");break;case"ASCIIHexEncode":case"/ASCIIHexEncode":s=s.split("").map((function(e){return("0"+e.charCodeAt().toString(16)).slice(-2)})).join("")+">",c.push("/ASCIIHexDecode");break;case"FlateEncode":case"/FlateEncode":s=i(s),c.push("/FlateDecode");break;default:throw new Error('The filter: "'+a[o]+'" is not implemented')}return{data:s,reverseChain:c.reverse().join(" ")}}}(Ae.API),function(e){e.loadFile=function(e,t,n){return function(e,t,n){t=!1!==t,n="function"==typeof n?n:function(){};var r=void 0;try{r=function(e,t,n){var r=new XMLHttpRequest,i=0,a=function(e){var t=e.length,n=[],r=String.fromCharCode;for(i=0;i<t;i+=1)n.push(r(255&e.charCodeAt(i)));return n.join("")};if(r.open("GET",e,!t),r.overrideMimeType("text/plain; charset=x-user-defined"),!1===t&&(r.onload=function(){200===r.status?n(a(this.responseText)):n(void 0)}),r.send(null),t&&200===r.status)return a(r.responseText)}(e,t,n)}catch(e){}return r}(e,t,n)},e.loadImageFile=e.loadFile}(Ae.API),function(e){function t(){return($.html2canvas?Promise.resolve($.html2canvas):n.e(120).then(n.t.bind(n,1120,23))).catch((function(e){return Promise.reject(new Error("Could not load html2canvas: "+e))})).then((function(e){return e.default?e.default:e}))}function r(){return($.DOMPurify?Promise.resolve($.DOMPurify):n.e(856).then(n.t.bind(n,7856,23))).catch((function(e){return Promise.reject(new Error("Could not load dompurify: "+e))})).then((function(e){return e.default?e.default:e}))}var i=function(e){var t=typeof e;return"undefined"===t?"undefined":"string"===t||e instanceof String?"string":"number"===t||e instanceof Number?"number":"function"===t||e instanceof Function?"function":e&&e.constructor===Array?"array":e&&1===e.nodeType?"element":"object"===t?"object":"unknown"},a=function(e,t){var n=document.createElement(e);for(var r in t.className&&(n.className=t.className),t.innerHTML&&t.dompurify&&(n.innerHTML=t.dompurify.sanitize(t.innerHTML)),t.style)n.style[r]=t.style[r];return n},o=function(e,t){for(var n=3===e.nodeType?document.createTextNode(e.nodeValue):e.cloneNode(!1),r=e.firstChild;r;r=r.nextSibling)!0!==t&&1===r.nodeType&&"SCRIPT"===r.nodeName||n.appendChild(o(r,t));return 1===e.nodeType&&("CANVAS"===e.nodeName?(n.width=e.width,n.height=e.height,n.getContext("2d").drawImage(e,0,0)):"TEXTAREA"!==e.nodeName&&"SELECT"!==e.nodeName||(n.value=e.value),n.addEventListener("load",(function(){n.scrollTop=e.scrollTop,n.scrollLeft=e.scrollLeft}),!0)),n},s=function e(t){var n=Object.assign(e.convert(Promise.resolve()),JSON.parse(JSON.stringify(e.template))),r=e.convert(Promise.resolve(),n);return(r=r.setProgress(1,e,1,[e])).set(t)};(s.prototype=Object.create(Promise.prototype)).constructor=s,s.convert=function(e,t){return e.__proto__=t||s.prototype,e},s.template={prop:{src:null,container:null,overlay:null,canvas:null,img:null,pdf:null,pageSize:null,callback:function(){}},progress:{val:0,state:null,n:0,stack:[]},opt:{filename:"file.pdf",margin:[0,0,0,0],enableLinks:!0,x:0,y:0,html2canvas:{},jsPDF:{},backgroundColor:"transparent"}},s.prototype.from=function(e,t){return this.then((function(){switch(t=t||function(e){switch(i(e)){case"string":return"string";case"element":return"canvas"===e.nodeName.toLowerCase()?"canvas":"element";default:return"unknown"}}(e)){case"string":return this.then(r).then((function(t){return this.set({src:a("div",{innerHTML:e,dompurify:t})})}));case"element":return this.set({src:e});case"canvas":return this.set({canvas:e});case"img":return this.set({img:e});default:return this.error("Unknown source type.")}}))},s.prototype.to=function(e){switch(e){case"container":return this.toContainer();case"canvas":return this.toCanvas();case"img":return this.toImg();case"pdf":return this.toPdf();default:return this.error("Invalid target.")}},s.prototype.toContainer=function(){return this.thenList([function(){return this.prop.src||this.error("Cannot duplicate - no source HTML.")},function(){return this.prop.pageSize||this.setPageSize()}]).then((function(){var e={position:"relative",display:"inline-block",width:Math.max(this.prop.src.clientWidth,this.prop.src.scrollWidth,this.prop.src.offsetWidth)+"px",left:0,right:0,top:0,margin:"auto",backgroundColor:this.opt.backgroundColor},t=o(this.prop.src,this.opt.html2canvas.javascriptEnabled);"BODY"===t.tagName&&(e.height=Math.max(document.body.scrollHeight,document.body.offsetHeight,document.documentElement.clientHeight,document.documentElement.scrollHeight,document.documentElement.offsetHeight)+"px"),this.prop.overlay=a("div",{className:"html2pdf__overlay",style:{position:"fixed",overflow:"hidden",zIndex:1e3,left:"-100000px",right:0,bottom:0,top:0}}),this.prop.container=a("div",{className:"html2pdf__container",style:e}),this.prop.container.appendChild(t),this.prop.container.firstChild.appendChild(a("div",{style:{clear:"both",border:"0 none transparent",margin:0,padding:0,height:0}})),this.prop.container.style.float="none",this.prop.overlay.appendChild(this.prop.container),document.body.appendChild(this.prop.overlay),this.prop.container.firstChild.style.position="relative",this.prop.container.height=Math.max(this.prop.container.firstChild.clientHeight,this.prop.container.firstChild.scrollHeight,this.prop.container.firstChild.offsetHeight)+"px"}))},s.prototype.toCanvas=function(){var e=[function(){return document.body.contains(this.prop.container)||this.toContainer()}];return this.thenList(e).then(t).then((function(e){var t=Object.assign({},this.opt.html2canvas);return delete t.onrendered,e(this.prop.container,t)})).then((function(e){(this.opt.html2canvas.onrendered||function(){})(e),this.prop.canvas=e,document.body.removeChild(this.prop.overlay)}))},s.prototype.toContext2d=function(){var e=[function(){return document.body.contains(this.prop.container)||this.toContainer()}];return this.thenList(e).then(t).then((function(e){var t=this.opt.jsPDF,n=this.opt.fontFaces,r=Object.assign({async:!0,allowTaint:!0,scale:1,scrollX:this.opt.scrollX||0,scrollY:this.opt.scrollY||0,backgroundColor:"#ffffff",imageTimeout:15e3,logging:!0,proxy:null,removeContainer:!0,foreignObjectRendering:!1,useCORS:!1},this.opt.html2canvas);if(delete r.onrendered,t.context2d.autoPaging=!0,t.context2d.posX=this.opt.x,t.context2d.posY=this.opt.y,t.context2d.fontFaces=n,n)for(var i=0;i<n.length;++i){var a=n[i],o=a.src.find((function(e){return"truetype"===e.format}));o&&t.addFont(o.url,a.ref.name,a.ref.style)}return r.windowHeight=r.windowHeight||0,r.windowHeight=0==r.windowHeight?Math.max(this.prop.container.clientHeight,this.prop.container.scrollHeight,this.prop.container.offsetHeight):r.windowHeight,e(this.prop.container,r)})).then((function(e){(this.opt.html2canvas.onrendered||function(){})(e),this.prop.canvas=e,document.body.removeChild(this.prop.overlay)}))},s.prototype.toImg=function(){return this.thenList([function(){return this.prop.canvas||this.toCanvas()}]).then((function(){var e=this.prop.canvas.toDataURL("image/"+this.opt.image.type,this.opt.image.quality);this.prop.img=document.createElement("img"),this.prop.img.src=e}))},s.prototype.toPdf=function(){return this.thenList([function(){return this.toContext2d()}]).then((function(){this.prop.pdf=this.prop.pdf||this.opt.jsPDF}))},s.prototype.output=function(e,t,n){return"img"===(n=n||"pdf").toLowerCase()||"image"===n.toLowerCase()?this.outputImg(e,t):this.outputPdf(e,t)},s.prototype.outputPdf=function(e,t){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).then((function(){return this.prop.pdf.output(e,t)}))},s.prototype.outputImg=function(e){return this.thenList([function(){return this.prop.img||this.toImg()}]).then((function(){switch(e){case void 0:case"img":return this.prop.img;case"datauristring":case"dataurlstring":return this.prop.img.src;case"datauri":case"dataurl":return document.location.href=this.prop.img.src;default:throw'Image output type "'+e+'" is not supported.'}}))},s.prototype.save=function(e){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).set(e?{filename:e}:null).then((function(){this.prop.pdf.save(this.opt.filename)}))},s.prototype.doCallback=function(){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).then((function(){this.prop.callback(this.prop.pdf)}))},s.prototype.set=function(e){if("object"!==i(e))return this;var t=Object.keys(e||{}).map((function(t){if(t in s.template.prop)return function(){this.prop[t]=e[t]};switch(t){case"margin":return this.setMargin.bind(this,e.margin);case"jsPDF":return function(){return this.opt.jsPDF=e.jsPDF,this.setPageSize()};case"pageSize":return this.setPageSize.bind(this,e.pageSize);default:return function(){this.opt[t]=e[t]}}}),this);return this.then((function(){return this.thenList(t)}))},s.prototype.get=function(e,t){return this.then((function(){var n=e in s.template.prop?this.prop[e]:this.opt[e];return t?t(n):n}))},s.prototype.setMargin=function(e){return this.then((function(){switch(i(e)){case"number":e=[e,e,e,e];case"array":if(2===e.length&&(e=[e[0],e[1],e[0],e[1]]),4===e.length)break;default:return this.error("Invalid margin array.")}this.opt.margin=e})).then(this.setPageSize)},s.prototype.setPageSize=function(e){function t(e,t){return Math.floor(e*t/72*96)}return this.then((function(){(e=e||Ae.getPageSize(this.opt.jsPDF)).hasOwnProperty("inner")||(e.inner={width:e.width-this.opt.margin[1]-this.opt.margin[3],height:e.height-this.opt.margin[0]-this.opt.margin[2]},e.inner.px={width:t(e.inner.width,e.k),height:t(e.inner.height,e.k)},e.inner.ratio=e.inner.height/e.inner.width),this.prop.pageSize=e}))},s.prototype.setProgress=function(e,t,n,r){return null!=e&&(this.progress.val=e),null!=t&&(this.progress.state=t),null!=n&&(this.progress.n=n),null!=r&&(this.progress.stack=r),this.progress.ratio=this.progress.val/this.progress.state,this},s.prototype.updateProgress=function(e,t,n,r){return this.setProgress(e?this.progress.val+e:null,t||null,n?this.progress.n+n:null,r?this.progress.stack.concat(r):null)},s.prototype.then=function(e,t){var n=this;return this.thenCore(e,t,(function(e,t){return n.updateProgress(null,null,1,[e]),Promise.prototype.then.call(this,(function(t){return n.updateProgress(null,e),t})).then(e,t).then((function(e){return n.updateProgress(1),e}))}))},s.prototype.thenCore=function(e,t,n){n=n||Promise.prototype.then,e&&(e=e.bind(this)),t&&(t=t.bind(this));var r=-1!==Promise.toString().indexOf("[native code]")&&"Promise"===Promise.name?this:s.convert(Object.assign({},this),Promise.prototype),i=n.call(r,e,t);return s.convert(i,this.__proto__)},s.prototype.thenExternal=function(e,t){return Promise.prototype.then.call(this,e,t)},s.prototype.thenList=function(e){var t=this;return e.forEach((function(e){t=t.thenCore(e)})),t},s.prototype.catch=function(e){e&&(e=e.bind(this));var t=Promise.prototype.catch.call(this,e);return s.convert(t,this)},s.prototype.catchExternal=function(e){return Promise.prototype.catch.call(this,e)},s.prototype.error=function(e){return this.then((function(){throw new Error(e)}))},s.prototype.using=s.prototype.set,s.prototype.saveAs=s.prototype.save,s.prototype.export=s.prototype.output,s.prototype.run=s.prototype.then,Ae.getPageSize=function(e,t,n){if("object"==typeof e){var r=e;e=r.orientation,t=r.unit||t,n=r.format||n}t=t||"mm",n=n||"a4",e=(""+(e||"P")).toLowerCase();var i,a=(""+n).toLowerCase(),o={a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],"government-letter":[576,756],legal:[612,1008],"junior-legal":[576,360],ledger:[1224,792],tabloid:[792,1224],"credit-card":[153,243]};switch(t){case"pt":i=1;break;case"mm":i=72/25.4;break;case"cm":i=72/2.54;break;case"in":i=72;break;case"px":i=.75;break;case"pc":case"em":i=12;break;case"ex":i=6;break;default:throw"Invalid unit: "+t}var s,c=0,l=0;if(o.hasOwnProperty(a))c=o[a][1]/i,l=o[a][0]/i;else try{c=n[1],l=n[0]}catch(e){throw new Error("Invalid format: "+n)}if("p"===e||"portrait"===e)e="p",l>c&&(s=l,l=c,c=s);else{if("l"!==e&&"landscape"!==e)throw"Invalid orientation: "+e;e="l",c>l&&(s=l,l=c,c=s)}return{width:l,height:c,unit:t,k:i,orientation:e}},e.html=function(e,t){(t=t||{}).callback=t.callback||function(){},t.html2canvas=t.html2canvas||{},t.html2canvas.canvas=t.html2canvas.canvas||this.canvas,t.jsPDF=t.jsPDF||this,t.fontFaces=t.fontFaces?t.fontFaces.map(xt):null;var n=new s(t);return t.worker?n:n.from(e).doCallback()}}(Ae.API),Ae.API.addJS=function(e){return Ot=e,this.internal.events.subscribe("postPutResources",(function(){_t=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/Names [(EmbeddedJS) "+(_t+1)+" 0 R]"),this.internal.out(">>"),this.internal.out("endobj"),It=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/S /JavaScript"),this.internal.out("/JS ("+Ot+")"),this.internal.out(">>"),this.internal.out("endobj")})),this.internal.events.subscribe("putCatalog",(function(){void 0!==_t&&void 0!==It&&this.internal.out("/Names <</JavaScript "+_t+" 0 R>>")})),this},function(e){var t;e.events.push(["postPutResources",function(){var e=this,n=/^(\d+) 0 obj$/;if(this.outline.root.children.length>0)for(var r=e.outline.render().split(/\r\n/),i=0;i<r.length;i++){var a=r[i],o=n.exec(a);if(null!=o){var s=o[1];e.internal.newObjectDeferredBegin(s,!1)}e.internal.write(a)}if(this.outline.createNamedDestinations){var c=this.internal.pages.length,l=[];for(i=0;i<c;i++){var u=e.internal.newObject();l.push(u);var f=e.internal.getPageInfo(i+1);e.internal.write("<< /D["+f.objId+" 0 R /XYZ null null null]>> endobj")}var d=e.internal.newObject();for(e.internal.write("<< /Names [ "),i=0;i<l.length;i++)e.internal.write("(page_"+(i+1)+")"+l[i]+" 0 R");e.internal.write(" ] >>","endobj"),t=e.internal.newObject(),e.internal.write("<< /Dests "+d+" 0 R"),e.internal.write(">>","endobj")}}]),e.events.push(["putCatalog",function(){this.outline.root.children.length>0&&(this.internal.write("/Outlines",this.outline.makeRef(this.outline.root)),this.outline.createNamedDestinations&&this.internal.write("/Names "+t+" 0 R"))}]),e.events.push(["initialized",function(){var e=this;e.outline={createNamedDestinations:!1,root:{children:[]}},e.outline.add=function(e,t,n){var r={title:t,options:n,children:[]};return null==e&&(e=this.root),e.children.push(r),r},e.outline.render=function(){return this.ctx={},this.ctx.val="",this.ctx.pdf=e,this.genIds_r(this.root),this.renderRoot(this.root),this.renderItems(this.root),this.ctx.val},e.outline.genIds_r=function(t){t.id=e.internal.newObjectDeferred();for(var n=0;n<t.children.length;n++)this.genIds_r(t.children[n])},e.outline.renderRoot=function(e){this.objStart(e),this.line("/Type /Outlines"),e.children.length>0&&(this.line("/First "+this.makeRef(e.children[0])),this.line("/Last "+this.makeRef(e.children[e.children.length-1]))),this.line("/Count "+this.count_r({count:0},e)),this.objEnd()},e.outline.renderItems=function(t){for(var n=this.ctx.pdf.internal.getVerticalCoordinateString,r=0;r<t.children.length;r++){var i=t.children[r];this.objStart(i),this.line("/Title "+this.makeString(i.title)),this.line("/Parent "+this.makeRef(t)),r>0&&this.line("/Prev "+this.makeRef(t.children[r-1])),r<t.children.length-1&&this.line("/Next "+this.makeRef(t.children[r+1])),i.children.length>0&&(this.line("/First "+this.makeRef(i.children[0])),this.line("/Last "+this.makeRef(i.children[i.children.length-1])));var a=this.count=this.count_r({count:0},i);if(a>0&&this.line("/Count "+a),i.options&&i.options.pageNumber){var o=e.internal.getPageInfo(i.options.pageNumber);this.line("/Dest ["+o.objId+" 0 R /XYZ 0 "+n(0)+" 0]")}this.objEnd()}for(var s=0;s<t.children.length;s++)this.renderItems(t.children[s])},e.outline.line=function(e){this.ctx.val+=e+"\r\n"},e.outline.makeRef=function(e){return e.id+" 0 R"},e.outline.makeString=function(t){return"("+e.internal.pdfEscape(t)+")"},e.outline.objStart=function(e){this.ctx.val+="\r\n"+e.id+" 0 obj\r\n<<\r\n"},e.outline.objEnd=function(){this.ctx.val+=">> \r\nendobj\r\n"},e.outline.count_r=function(e,t){for(var n=0;n<t.children.length;n++)e.count++,this.count_r(e,t.children[n]);return e.count}}])}(Ae.API),function(e){var t=[192,193,194,195,196,197,198,199];e.processJPEG=function(e,n,r,i,a,o){var s,c=this.decode.DCT_DECODE,l=null;if("string"==typeof e||this.__addimage__.isArrayBuffer(e)||this.__addimage__.isArrayBufferView(e)){switch(e=a||e,e=this.__addimage__.isArrayBuffer(e)?new Uint8Array(e):e,(s=function(e){for(var n,r=256*e.charCodeAt(4)+e.charCodeAt(5),i=e.length,a={width:0,height:0,numcomponents:1},o=4;o<i;o+=2){if(o+=r,-1!==t.indexOf(e.charCodeAt(o+1))){n=256*e.charCodeAt(o+5)+e.charCodeAt(o+6),a={width:256*e.charCodeAt(o+7)+e.charCodeAt(o+8),height:n,numcomponents:e.charCodeAt(o+9)};break}r=256*e.charCodeAt(o+2)+e.charCodeAt(o+3)}return a}(e=this.__addimage__.isArrayBufferView(e)?this.__addimage__.arrayBufferToBinaryString(e):e)).numcomponents){case 1:o=this.color_spaces.DEVICE_GRAY;break;case 4:o=this.color_spaces.DEVICE_CMYK;break;case 3:o=this.color_spaces.DEVICE_RGB}l={data:e,width:s.width,height:s.height,colorSpace:o,bitsPerComponent:8,filter:c,index:n,alias:r}}return l}}(Ae.API);var Dt,Ft,Zt,jt,Rt,Tt=function(){var e,t,n;function r(e){var t,n,r,i,a,o,s,c,l,u,f,d,h,p;for(this.data=e,this.pos=8,this.palette=[],this.imgData=[],this.transparency={},this.animation=null,this.text={},o=null;;){switch(t=this.readUInt32(),l=function(){var e,t;for(t=[],e=0;e<4;++e)t.push(String.fromCharCode(this.data[this.pos++]));return t}.call(this).join("")){case"IHDR":this.width=this.readUInt32(),this.height=this.readUInt32(),this.bits=this.data[this.pos++],this.colorType=this.data[this.pos++],this.compressionMethod=this.data[this.pos++],this.filterMethod=this.data[this.pos++],this.interlaceMethod=this.data[this.pos++];break;case"acTL":this.animation={numFrames:this.readUInt32(),numPlays:this.readUInt32()||1/0,frames:[]};break;case"PLTE":this.palette=this.read(t);break;case"fcTL":o&&this.animation.frames.push(o),this.pos+=4,o={width:this.readUInt32(),height:this.readUInt32(),xOffset:this.readUInt32(),yOffset:this.readUInt32()},a=this.readUInt16(),i=this.readUInt16()||100,o.delay=1e3*a/i,o.disposeOp=this.data[this.pos++],o.blendOp=this.data[this.pos++],o.data=[];break;case"IDAT":case"fdAT":for("fdAT"===l&&(this.pos+=4,t-=4),e=(null!=o?o.data:void 0)||this.imgData,d=0;0<=t?d<t:d>t;0<=t?++d:--d)e.push(this.data[this.pos++]);break;case"tRNS":switch(this.transparency={},this.colorType){case 3:if(r=this.palette.length/3,this.transparency.indexed=this.read(t),this.transparency.indexed.length>r)throw new Error("More transparent colors than palette size");if((u=r-this.transparency.indexed.length)>0)for(h=0;0<=u?h<u:h>u;0<=u?++h:--h)this.transparency.indexed.push(255);break;case 0:this.transparency.grayscale=this.read(t)[0];break;case 2:this.transparency.rgb=this.read(t)}break;case"tEXt":s=(f=this.read(t)).indexOf(0),c=String.fromCharCode.apply(String,f.slice(0,s)),this.text[c]=String.fromCharCode.apply(String,f.slice(s+1));break;case"IEND":return o&&this.animation.frames.push(o),this.colors=function(){switch(this.colorType){case 0:case 3:case 4:return 1;case 2:case 6:return 3}}.call(this),this.hasAlphaChannel=4===(p=this.colorType)||6===p,n=this.colors+(this.hasAlphaChannel?1:0),this.pixelBitlength=this.bits*n,this.colorSpace=function(){switch(this.colors){case 1:return"DeviceGray";case 3:return"DeviceRGB"}}.call(this),void(this.imgData=new Uint8Array(this.imgData));default:this.pos+=t}if(this.pos+=4,this.pos>this.data.length)throw new Error("Incomplete or corrupt PNG file")}}r.prototype.read=function(e){var t,n;for(n=[],t=0;0<=e?t<e:t>e;0<=e?++t:--t)n.push(this.data[this.pos++]);return n},r.prototype.readUInt32=function(){return this.data[this.pos++]<<24|this.data[this.pos++]<<16|this.data[this.pos++]<<8|this.data[this.pos++]},r.prototype.readUInt16=function(){return this.data[this.pos++]<<8|this.data[this.pos++]},r.prototype.decodePixels=function(e){var t=this.pixelBitlength/8,n=new Uint8Array(this.width*this.height*t),r=0,i=this;if(null==e&&(e=this.imgData),0===e.length)return new Uint8Array(0);function a(a,o,s,c){var l,u,f,d,h,p,v,m,g,y,b,w,N,x,S,k,C,L,A,E,P,_=Math.ceil((i.width-a)/s),I=Math.ceil((i.height-o)/c),O=i.width==_&&i.height==I;for(x=t*_,w=O?n:new Uint8Array(x*I),p=e.length,N=0,u=0;N<I&&r<p;){switch(e[r++]){case 0:for(d=C=0;C<x;d=C+=1)w[u++]=e[r++];break;case 1:for(d=L=0;L<x;d=L+=1)l=e[r++],h=d<t?0:w[u-t],w[u++]=(l+h)%256;break;case 2:for(d=A=0;A<x;d=A+=1)l=e[r++],f=(d-d%t)/t,S=N&&w[(N-1)*x+f*t+d%t],w[u++]=(S+l)%256;break;case 3:for(d=E=0;E<x;d=E+=1)l=e[r++],f=(d-d%t)/t,h=d<t?0:w[u-t],S=N&&w[(N-1)*x+f*t+d%t],w[u++]=(l+Math.floor((h+S)/2))%256;break;case 4:for(d=P=0;P<x;d=P+=1)l=e[r++],f=(d-d%t)/t,h=d<t?0:w[u-t],0===N?S=k=0:(S=w[(N-1)*x+f*t+d%t],k=f&&w[(N-1)*x+(f-1)*t+d%t]),v=h+S-k,m=Math.abs(v-h),y=Math.abs(v-S),b=Math.abs(v-k),g=m<=y&&m<=b?h:y<=b?S:k,w[u++]=(l+g)%256;break;default:throw new Error("Invalid filter algorithm: "+e[r-1])}if(!O){var M=((o+N*c)*i.width+a)*t,D=N*x;for(d=0;d<_;d+=1){for(var F=0;F<t;F+=1)n[M++]=w[D++];M+=(s-1)*t}}N++}}return e=G(e),1==i.interlaceMethod?(a(0,0,8,8),a(4,0,8,8),a(0,4,4,8),a(2,0,4,4),a(0,2,2,4),a(1,0,2,2),a(0,1,1,2)):a(0,0,1,1),n},r.prototype.decodePalette=function(){var e,t,n,r,i,a,o,s,c;for(n=this.palette,a=this.transparency.indexed||[],i=new Uint8Array((a.length||0)+n.length),r=0,e=0,t=o=0,s=n.length;o<s;t=o+=3)i[r++]=n[t],i[r++]=n[t+1],i[r++]=n[t+2],i[r++]=null!=(c=a[e++])?c:255;return i},r.prototype.copyToImageData=function(e,t){var n,r,i,a,o,s,c,l,u,f,d;if(r=this.colors,u=null,n=this.hasAlphaChannel,this.palette.length&&(u=null!=(d=this._decodedPalette)?d:this._decodedPalette=this.decodePalette(),r=4,n=!0),l=(i=e.data||e).length,o=u||t,a=s=0,1===r)for(;a<l;)c=u?4*t[a/4]:s,f=o[c++],i[a++]=f,i[a++]=f,i[a++]=f,i[a++]=n?o[c++]:255,s=c;else for(;a<l;)c=u?4*t[a/4]:s,i[a++]=o[c++],i[a++]=o[c++],i[a++]=o[c++],i[a++]=n?o[c++]:255,s=c},r.prototype.decode=function(){var e;return e=new Uint8Array(this.width*this.height*4),this.copyToImageData(e,this.decodePixels()),e};var i=function(){if("[object Window]"===Object.prototype.toString.call($)){try{t=$.document.createElement("canvas"),n=t.getContext("2d")}catch(e){return!1}return!0}return!1};return i(),e=function(e){var r;if(!0===i())return n.width=e.width,n.height=e.height,n.clearRect(0,0,e.width,e.height),n.putImageData(e,0,0),(r=new Image).src=t.toDataURL(),r;throw new Error("This method requires a Browser with Canvas-capability.")},r.prototype.decodeFrames=function(t){var n,r,i,a,o,s,c,l;if(this.animation){for(l=[],r=o=0,s=(c=this.animation.frames).length;o<s;r=++o)n=c[r],i=t.createImageData(n.width,n.height),a=this.decodePixels(new Uint8Array(n.data)),this.copyToImageData(i,a),n.imageData=i,l.push(n.image=e(i));return l}},r.prototype.renderFrame=function(e,t){var n,r,i;return n=(r=this.animation.frames)[t],i=r[t-1],0===t&&e.clearRect(0,0,this.width,this.height),1===(null!=i?i.disposeOp:void 0)?e.clearRect(i.xOffset,i.yOffset,i.width,i.height):2===(null!=i?i.disposeOp:void 0)&&e.putImageData(i.imageData,i.xOffset,i.yOffset),0===n.blendOp&&e.clearRect(n.xOffset,n.yOffset,n.width,n.height),e.drawImage(n.image,n.xOffset,n.yOffset)},r.prototype.animate=function(e){var t,n,r,i,a,o,s=this;return n=0,o=this.animation,i=o.numFrames,r=o.frames,a=o.numPlays,(t=function(){var o,c;if(o=n++%i,c=r[o],s.renderFrame(e,o),i>1&&n/i<a)return s.animation._timeout=setTimeout(t,c.delay)})()},r.prototype.stopAnimation=function(){var e;return clearTimeout(null!=(e=this.animation)?e._timeout:void 0)},r.prototype.render=function(e){var t,n;return e._png&&e._png.stopAnimation(),e._png=this,e.width=this.width,e.height=this.height,t=e.getContext("2d"),this.animation?(this.decodeFrames(t),this.animate(t)):(n=t.createImageData(this.width,this.height),this.copyToImageData(n,this.decodePixels()),t.putImageData(n,0,0))},r}();function Bt(e){var t=0;if(71!==e[t++]||73!==e[t++]||70!==e[t++]||56!==e[t++]||56!=(e[t++]+1&253)||97!==e[t++])throw new Error("Invalid GIF 87a/89a header.");var n=e[t++]|e[t++]<<8,r=e[t++]|e[t++]<<8,i=e[t++],a=i>>7,o=1<<1+(7&i);e[t++],e[t++];var s=null,c=null;a&&(s=t,c=o,t+=3*o);var l=!0,u=[],f=0,d=null,h=0,p=null;for(this.width=n,this.height=r;l&&t<e.length;)switch(e[t++]){case 33:switch(e[t++]){case 255:if(11!==e[t]||78==e[t+1]&&69==e[t+2]&&84==e[t+3]&&83==e[t+4]&&67==e[t+5]&&65==e[t+6]&&80==e[t+7]&&69==e[t+8]&&50==e[t+9]&&46==e[t+10]&&48==e[t+11]&&3==e[t+12]&&1==e[t+13]&&0==e[t+16])t+=14,p=e[t++]|e[t++]<<8,t++;else for(t+=12;;){if(!((A=e[t++])>=0))throw Error("Invalid block size");if(0===A)break;t+=A}break;case 249:if(4!==e[t++]||0!==e[t+4])throw new Error("Invalid graphics extension block.");var v=e[t++];f=e[t++]|e[t++]<<8,d=e[t++],0==(1&v)&&(d=null),h=v>>2&7,t++;break;case 254:for(;;){if(!((A=e[t++])>=0))throw Error("Invalid block size");if(0===A)break;t+=A}break;default:throw new Error("Unknown graphic control label: 0x"+e[t-1].toString(16))}break;case 44:var m=e[t++]|e[t++]<<8,g=e[t++]|e[t++]<<8,y=e[t++]|e[t++]<<8,b=e[t++]|e[t++]<<8,w=e[t++],N=w>>6&1,x=1<<1+(7&w),S=s,k=c,C=!1;w>>7&&(C=!0,S=t,k=x,t+=3*x);var L=t;for(t++;;){var A;if(!((A=e[t++])>=0))throw Error("Invalid block size");if(0===A)break;t+=A}u.push({x:m,y:g,width:y,height:b,has_local_palette:C,palette_offset:S,palette_size:k,data_offset:L,data_length:t-L,transparent_index:d,interlaced:!!N,delay:f,disposal:h});break;case 59:l=!1;break;default:throw new Error("Unknown gif block: 0x"+e[t-1].toString(16))}this.numFrames=function(){return u.length},this.loopCount=function(){return p},this.frameInfo=function(e){if(e<0||e>=u.length)throw new Error("Frame index out of range.");return u[e]},this.decodeAndBlitFrameBGRA=function(t,r){var i=this.frameInfo(t),a=i.width*i.height,o=new Uint8Array(a);qt(e,i.data_offset,o,a);var s=i.palette_offset,c=i.transparent_index;null===c&&(c=256);var l=i.width,u=n-l,f=l,d=4*(i.y*n+i.x),h=4*((i.y+i.height)*n+i.x),p=d,v=4*u;!0===i.interlaced&&(v+=4*n*7);for(var m=8,g=0,y=o.length;g<y;++g){var b=o[g];if(0===f&&(f=l,(p+=v)>=h&&(v=4*u+4*n*(m-1),p=d+(l+u)*(m<<1),m>>=1)),b===c)p+=4;else{var w=e[s+3*b],N=e[s+3*b+1],x=e[s+3*b+2];r[p++]=x,r[p++]=N,r[p++]=w,r[p++]=255}--f}},this.decodeAndBlitFrameRGBA=function(t,r){var i=this.frameInfo(t),a=i.width*i.height,o=new Uint8Array(a);qt(e,i.data_offset,o,a);var s=i.palette_offset,c=i.transparent_index;null===c&&(c=256);var l=i.width,u=n-l,f=l,d=4*(i.y*n+i.x),h=4*((i.y+i.height)*n+i.x),p=d,v=4*u;!0===i.interlaced&&(v+=4*n*7);for(var m=8,g=0,y=o.length;g<y;++g){var b=o[g];if(0===f&&(f=l,(p+=v)>=h&&(v=4*u+4*n*(m-1),p=d+(l+u)*(m<<1),m>>=1)),b===c)p+=4;else{var w=e[s+3*b],N=e[s+3*b+1],x=e[s+3*b+2];r[p++]=w,r[p++]=N,r[p++]=x,r[p++]=255}--f}}}function qt(e,t,n,r){for(var i=e[t++],a=1<<i,o=a+1,s=o+1,c=i+1,l=(1<<c)-1,u=0,f=0,d=0,h=e[t++],p=new Int32Array(4096),v=null;;){for(;u<16&&0!==h;)f|=e[t++]<<u,u+=8,1===h?h=e[t++]:--h;if(u<c)break;var m=f&l;if(f>>=c,u-=c,m!==a){if(m===o)break;for(var g=m<s?m:v,y=0,b=g;b>a;)b=p[b]>>8,++y;var w=b;if(d+y+(g!==m?1:0)>r)return void J.log("Warning, gif stream longer than expected.");n[d++]=w;var N=d+=y;for(g!==m&&(n[d++]=w),b=g;y--;)b=p[b],n[--N]=255&b,b>>=8;null!==v&&s<4096&&(p[s++]=v<<8|w,s>=l+1&&c<12&&(++c,l=l<<1|1)),v=m}else s=o+1,l=(1<<(c=i+1))-1,v=null}return d!==r&&J.log("Warning, gif stream shorter than expected."),n}function Kt(e){var t,n,r,i,a,o=Math.floor,s=new Array(64),c=new Array(64),l=new Array(64),u=new Array(64),f=new Array(65535),d=new Array(65535),h=new Array(64),p=new Array(64),v=[],m=0,g=7,y=new Array(64),b=new Array(64),w=new Array(64),N=new Array(256),x=new Array(2048),S=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63],k=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0],C=[0,1,2,3,4,5,6,7,8,9,10,11],L=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125],A=[1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250],E=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0],P=[0,1,2,3,4,5,6,7,8,9,10,11],_=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119],I=[0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250];function O(e,t){for(var n=0,r=0,i=new Array,a=1;a<=16;a++){for(var o=1;o<=e[a];o++)i[t[r]]=[],i[t[r]][0]=n,i[t[r]][1]=a,r++,n++;n*=2}return i}function M(e){for(var t=e[0],n=e[1]-1;n>=0;)t&1<<n&&(m|=1<<g),n--,--g<0&&(255==m?(D(255),D(0)):D(m),g=7,m=0)}function D(e){v.push(e)}function F(e){D(e>>8&255),D(255&e)}function Z(e,t,n,r,i){for(var a,o=i[0],s=i[240],c=function(e,t){var n,r,i,a,o,s,c,l,u,f,d=0;for(u=0;u<8;++u){n=e[d],r=e[d+1],i=e[d+2],a=e[d+3],o=e[d+4],s=e[d+5],c=e[d+6];var p=n+(l=e[d+7]),v=n-l,m=r+c,g=r-c,y=i+s,b=i-s,w=a+o,N=a-o,x=p+w,S=p-w,k=m+y,C=m-y;e[d]=x+k,e[d+4]=x-k;var L=.707106781*(C+S);e[d+2]=S+L,e[d+6]=S-L;var A=.382683433*((x=N+b)-(C=g+v)),E=.5411961*x+A,P=1.306562965*C+A,_=.707106781*(k=b+g),I=v+_,O=v-_;e[d+5]=O+E,e[d+3]=O-E,e[d+1]=I+P,e[d+7]=I-P,d+=8}for(d=0,u=0;u<8;++u){n=e[d],r=e[d+8],i=e[d+16],a=e[d+24],o=e[d+32],s=e[d+40],c=e[d+48];var M=n+(l=e[d+56]),D=n-l,F=r+c,Z=r-c,j=i+s,R=i-s,T=a+o,B=a-o,q=M+T,K=M-T,U=F+j,z=F-j;e[d]=q+U,e[d+32]=q-U;var H=.707106781*(z+K);e[d+16]=K+H,e[d+48]=K-H;var V=.382683433*((q=B+R)-(z=Z+D)),W=.5411961*q+V,Y=1.306562965*z+V,G=.707106781*(U=R+Z),$=D+G,X=D-G;e[d+40]=X+W,e[d+24]=X-W,e[d+8]=$+Y,e[d+56]=$-Y,d++}for(u=0;u<64;++u)f=e[u]*t[u],h[u]=f>0?f+.5|0:f-.5|0;return h}(e,t),l=0;l<64;++l)p[S[l]]=c[l];var u=p[0]-n;n=p[0],0==u?M(r[0]):(M(r[d[a=32767+u]]),M(f[a]));for(var v=63;v>0&&0==p[v];)v--;if(0==v)return M(o),n;for(var m,g=1;g<=v;){for(var y=g;0==p[g]&&g<=v;)++g;var b=g-y;if(b>=16){m=b>>4;for(var w=1;w<=m;++w)M(s);b&=15}a=32767+p[g],M(i[(b<<4)+d[a]]),M(f[a]),g++}return 63!=v&&M(o),n}function j(e){e=Math.min(Math.max(e,1),100),a!=e&&(function(e){for(var t=[16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99],n=0;n<64;n++){var r=o((t[n]*e+50)/100);r=Math.min(Math.max(r,1),255),s[S[n]]=r}for(var i=[17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],a=0;a<64;a++){var f=o((i[a]*e+50)/100);f=Math.min(Math.max(f,1),255),c[S[a]]=f}for(var d=[1,1.387039845,1.306562965,1.175875602,1,.785694958,.5411961,.275899379],h=0,p=0;p<8;p++)for(var v=0;v<8;v++)l[h]=1/(s[S[h]]*d[p]*d[v]*8),u[h]=1/(c[S[h]]*d[p]*d[v]*8),h++}(e<50?Math.floor(5e3/e):Math.floor(200-2*e)),a=e)}this.encode=function(e,a){a&&j(a),v=new Array,m=0,g=7,F(65496),F(65504),F(16),D(74),D(70),D(73),D(70),D(0),D(1),D(1),D(0),F(1),F(1),D(0),D(0),function(){F(65499),F(132),D(0);for(var e=0;e<64;e++)D(s[e]);D(1);for(var t=0;t<64;t++)D(c[t])}(),function(e,t){F(65472),F(17),D(8),F(t),F(e),D(3),D(1),D(17),D(0),D(2),D(17),D(1),D(3),D(17),D(1)}(e.width,e.height),function(){F(65476),F(418),D(0);for(var e=0;e<16;e++)D(k[e+1]);for(var t=0;t<=11;t++)D(C[t]);D(16);for(var n=0;n<16;n++)D(L[n+1]);for(var r=0;r<=161;r++)D(A[r]);D(1);for(var i=0;i<16;i++)D(E[i+1]);for(var a=0;a<=11;a++)D(P[a]);D(17);for(var o=0;o<16;o++)D(_[o+1]);for(var s=0;s<=161;s++)D(I[s])}(),F(65498),F(12),D(3),D(1),D(0),D(2),D(17),D(3),D(17),D(0),D(63),D(0);var o=0,f=0,d=0;m=0,g=7,this.encode.displayName="_encode_";for(var h,p,N,S,O,R,T,B,q,K=e.data,U=e.width,z=e.height,H=4*U,V=0;V<z;){for(h=0;h<H;){for(O=H*V+h,T=-1,B=0,q=0;q<64;q++)R=O+(B=q>>3)*H+(T=4*(7&q)),V+B>=z&&(R-=H*(V+1+B-z)),h+T>=H&&(R-=h+T-H+4),p=K[R++],N=K[R++],S=K[R++],y[q]=(x[p]+x[N+256>>0]+x[S+512>>0]>>16)-128,b[q]=(x[p+768>>0]+x[N+1024>>0]+x[S+1280>>0]>>16)-128,w[q]=(x[p+1280>>0]+x[N+1536>>0]+x[S+1792>>0]>>16)-128;o=Z(y,l,o,t,r),f=Z(b,u,f,n,i),d=Z(w,u,d,n,i),h+=32}V+=8}if(g>=0){var W=[];W[1]=g+1,W[0]=(1<<g+1)-1,M(W)}return F(65497),new Uint8Array(v)},e=e||50,function(){for(var e=String.fromCharCode,t=0;t<256;t++)N[t]=e(t)}(),t=O(k,C),n=O(E,P),r=O(L,A),i=O(_,I),function(){for(var e=1,t=2,n=1;n<=15;n++){for(var r=e;r<t;r++)d[32767+r]=n,f[32767+r]=[],f[32767+r][1]=n,f[32767+r][0]=r;for(var i=-(t-1);i<=-e;i++)d[32767+i]=n,f[32767+i]=[],f[32767+i][1]=n,f[32767+i][0]=t-1+i;e<<=1,t<<=1}}(),function(){for(var e=0;e<256;e++)x[e]=19595*e,x[e+256>>0]=38470*e,x[e+512>>0]=7471*e+32768,x[e+768>>0]=-11059*e,x[e+1024>>0]=-21709*e,x[e+1280>>0]=32768*e+8421375,x[e+1536>>0]=-27439*e,x[e+1792>>0]=-5329*e}(),j(e)}function Ut(e,t){if(this.pos=0,this.buffer=e,this.datav=new DataView(e.buffer),this.is_with_alpha=!!t,this.bottom_up=!0,this.flag=String.fromCharCode(this.buffer[0])+String.fromCharCode(this.buffer[1]),this.pos+=2,-1===["BM","BA","CI","CP","IC","PT"].indexOf(this.flag))throw new Error("Invalid BMP File");this.parseHeader(),this.parseBGR()}function zt(e){function t(e){if(!e)throw Error("assert :P")}function n(e,t,n){for(var r=0;4>r;r++)if(e[t+r]!=n.charCodeAt(r))return!0;return!1}function r(e,t,n,r,i){for(var a=0;a<i;a++)e[t+a]=n[r+a]}function i(e,t,n,r){for(var i=0;i<r;i++)e[t+i]=n}function a(e){return new Int32Array(e)}function o(e,t){for(var n=[],r=0;r<e;r++)n.push(new t);return n}function s(e,t){var n=[];return function e(n,r,i){for(var a=i[r],o=0;o<a&&(n.push(i.length>r+1?[]:new t),!(i.length<r+1));o++)e(n[o],r+1,i)}(n,0,e),n}function c(e,t){for(var n="",r=0;r<4;r++)n+=String.fromCharCode(e[t++]);return n}function l(e,t){return(e[t+0]<<0|e[t+1]<<8|e[t+2]<<16)>>>0}function u(e,t){return(e[t+0]<<0|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}new(zt=function(){var e=this;function c(e,t){for(var n=1<<t-1>>>0;e&n;)n>>>=1;return n?(e&n-1)+n:e}function l(e,n,r,i,a){t(!(i%r));do{e[n+(i-=r)]=a}while(0<i)}function u(e,n,r,i,o){if(t(2328>=o),512>=o)var s=a(512);else if(null==(s=a(o)))return 0;return function(e,n,r,i,o,s){var u,d,h=n,p=1<<r,v=a(16),m=a(16);for(t(0!=o),t(null!=i),t(null!=e),t(0<r),d=0;d<o;++d){if(15<i[d])return 0;++v[i[d]]}if(v[0]==o)return 0;for(m[1]=0,u=1;15>u;++u){if(v[u]>1<<u)return 0;m[u+1]=m[u]+v[u]}for(d=0;d<o;++d)u=i[d],0<i[d]&&(s[m[u]++]=d);if(1==m[15])return(i=new f).g=0,i.value=s[0],l(e,h,1,p,i),p;var g,y=-1,b=p-1,w=0,N=1,x=1,S=1<<r;for(d=0,u=1,o=2;u<=r;++u,o<<=1){if(N+=x<<=1,0>(x-=v[u]))return 0;for(;0<v[u];--v[u])(i=new f).g=u,i.value=s[d++],l(e,h+w,o,S,i),w=c(w,u)}for(u=r+1,o=2;15>=u;++u,o<<=1){if(N+=x<<=1,0>(x-=v[u]))return 0;for(;0<v[u];--v[u]){if(i=new f,(w&b)!=y){for(h+=S,g=1<<(y=u)-r;15>y&&!(0>=(g-=v[y]));)++y,g<<=1;p+=S=1<<(g=y-r),e[n+(y=w&b)].g=g+r,e[n+y].value=h-n-y}i.g=u-r,i.value=s[d++],l(e,h+(w>>r),o,S,i),w=c(w,u)}}return N!=2*m[15]-1?0:p}(e,n,r,i,o,s)}function f(){this.value=this.g=0}function d(){this.value=this.g=0}function h(){this.G=o(5,f),this.H=a(5),this.jc=this.Qb=this.qb=this.nd=0,this.pd=o(Tn,d)}function p(e,n,r,i){t(null!=e),t(null!=n),t(2147483648>i),e.Ca=254,e.I=0,e.b=-8,e.Ka=0,e.oa=n,e.pa=r,e.Jd=n,e.Yc=r+i,e.Zc=4<=i?r+i-4+1:r,L(e)}function v(e,t){for(var n=0;0<t--;)n|=E(e,128)<<t;return n}function m(e,t){var n=v(e,t);return A(e)?-n:n}function g(e,n,r,i){var a,o=0;for(t(null!=e),t(null!=n),t(4294967288>i),e.Sb=i,e.Ra=0,e.u=0,e.h=0,4<i&&(i=4),a=0;a<i;++a)o+=n[r+a]<<8*a;e.Ra=o,e.bb=i,e.oa=n,e.pa=r}function y(e){for(;8<=e.u&&e.bb<e.Sb;)e.Ra>>>=8,e.Ra+=e.oa[e.pa+e.bb]<<Kn-8>>>0,++e.bb,e.u-=8;S(e)&&(e.h=1,e.u=0)}function b(e,n){if(t(0<=n),!e.h&&n<=qn){var r=x(e)&Bn[n];return e.u+=n,y(e),r}return e.h=1,e.u=0}function w(){this.b=this.Ca=this.I=0,this.oa=[],this.pa=0,this.Jd=[],this.Yc=0,this.Zc=[],this.Ka=0}function N(){this.Ra=0,this.oa=[],this.h=this.u=this.bb=this.Sb=this.pa=0}function x(e){return e.Ra>>>(e.u&Kn-1)>>>0}function S(e){return t(e.bb<=e.Sb),e.h||e.bb==e.Sb&&e.u>Kn}function k(e,t){e.u=t,e.h=S(e)}function C(e){e.u>=Un&&(t(e.u>=Un),y(e))}function L(e){t(null!=e&&null!=e.oa),e.pa<e.Zc?(e.I=(e.oa[e.pa++]|e.I<<8)>>>0,e.b+=8):(t(null!=e&&null!=e.oa),e.pa<e.Yc?(e.b+=8,e.I=e.oa[e.pa++]|e.I<<8):e.Ka?e.b=0:(e.I<<=8,e.b+=8,e.Ka=1))}function A(e){return v(e,1)}function E(e,t){var n=e.Ca;0>e.b&&L(e);var r=e.b,i=n*t>>>8,a=(e.I>>>r>i)+0;for(a?(n-=i,e.I-=i+1<<r>>>0):n=i+1,r=n,i=0;256<=r;)i+=8,r>>=8;return r=7^i+zn[r],e.b-=r,e.Ca=(n<<r)-1,a}function P(e,t,n){e[t+0]=n>>24&255,e[t+1]=n>>16&255,e[t+2]=n>>8&255,e[t+3]=n>>0&255}function _(e,t){return e[t+0]<<0|e[t+1]<<8}function I(e,t){return _(e,t)|e[t+2]<<16}function O(e,t){return _(e,t)|_(e,t+2)<<16}function M(e,n){var r=1<<n;return t(null!=e),t(0<n),e.X=a(r),null==e.X?0:(e.Mb=32-n,e.Xa=n,1)}function D(e,n){t(null!=e),t(null!=n),t(e.Xa==n.Xa),r(n.X,0,e.X,0,1<<n.Xa)}function F(){this.X=[],this.Xa=this.Mb=0}function Z(e,n,r,i){t(null!=r),t(null!=i);var a=r[0],o=i[0];return 0==a&&(a=(e*o+n/2)/n),0==o&&(o=(n*a+e/2)/e),0>=a||0>=o?0:(r[0]=a,i[0]=o,1)}function j(e,t){return e+(1<<t)-1>>>t}function R(e,t){return((4278255360&e)+(4278255360&t)>>>0&4278255360)+((16711935&e)+(16711935&t)>>>0&16711935)>>>0}function T(t,n){e[n]=function(n,r,i,a,o,s,c){var l;for(l=0;l<o;++l){var u=e[t](s[c+l-1],i,a+l);s[c+l]=R(n[r+l],u)}}}function B(){this.ud=this.hd=this.jd=0}function q(e,t){return((4278124286&(e^t))>>>1)+(e&t)>>>0}function K(e){return 0<=e&&256>e?e:0>e?0:255<e?255:void 0}function U(e,t){return K(e+(e-t+.5>>1))}function z(e,t,n){return Math.abs(t-n)-Math.abs(e-n)}function H(e,t,n,r,i,a,o){for(r=a[o-1],n=0;n<i;++n)a[o+n]=r=R(e[t+n],r)}function V(e,t,n,r,i){var a;for(a=0;a<n;++a){var o=e[t+a],s=o>>8&255,c=16711935&(c=(c=16711935&o)+((s<<16)+s));r[i+a]=(4278255360&o)+c>>>0}}function W(e,t){t.jd=e>>0&255,t.hd=e>>8&255,t.ud=e>>16&255}function Y(e,t,n,r,i,a){var o;for(o=0;o<r;++o){var s=t[n+o],c=s>>>8,l=s,u=255&(u=(u=s>>>16)+((e.jd<<24>>24)*(c<<24>>24)>>>5));l=255&(l=(l+=(e.hd<<24>>24)*(c<<24>>24)>>>5)+((e.ud<<24>>24)*(u<<24>>24)>>>5)),i[a+o]=(4278255360&s)+(u<<16)+l}}function G(t,n,r,i,a){e[n]=function(e,t,n,r,o,s,c,l,u){for(r=c;r<l;++r)for(c=0;c<u;++c)o[s++]=a(n[i(e[t++])])},e[t]=function(t,n,o,s,c,l,u){var f=8>>t.b,d=t.Ea,h=t.K[0],p=t.w;if(8>f)for(t=(1<<t.b)-1,p=(1<<f)-1;n<o;++n){var v,m=0;for(v=0;v<d;++v)v&t||(m=i(s[c++])),l[u++]=a(h[m&p]),m>>=f}else e["VP8LMapColor"+r](s,c,h,p,l,u,n,o,d)}}function $(e,t,n,r,i){for(n=t+n;t<n;){var a=e[t++];r[i++]=a>>16&255,r[i++]=a>>8&255,r[i++]=a>>0&255}}function X(e,t,n,r,i){for(n=t+n;t<n;){var a=e[t++];r[i++]=a>>16&255,r[i++]=a>>8&255,r[i++]=a>>0&255,r[i++]=a>>24&255}}function J(e,t,n,r,i){for(n=t+n;t<n;){var a=(o=e[t++])>>16&240|o>>12&15,o=o>>0&240|o>>28&15;r[i++]=a,r[i++]=o}}function Q(e,t,n,r,i){for(n=t+n;t<n;){var a=(o=e[t++])>>16&248|o>>13&7,o=o>>5&224|o>>3&31;r[i++]=a,r[i++]=o}}function ee(e,t,n,r,i){for(n=t+n;t<n;){var a=e[t++];r[i++]=a>>0&255,r[i++]=a>>8&255,r[i++]=a>>16&255}}function te(e,t,n,i,a,o){if(0==o)for(n=t+n;t<n;)P(i,((o=e[t++])[0]>>24|o[1]>>8&65280|o[2]<<8&16711680|o[3]<<24)>>>0),a+=32;else r(i,a,e,t,n)}function ne(t,n){e[n][0]=e[t+"0"],e[n][1]=e[t+"1"],e[n][2]=e[t+"2"],e[n][3]=e[t+"3"],e[n][4]=e[t+"4"],e[n][5]=e[t+"5"],e[n][6]=e[t+"6"],e[n][7]=e[t+"7"],e[n][8]=e[t+"8"],e[n][9]=e[t+"9"],e[n][10]=e[t+"10"],e[n][11]=e[t+"11"],e[n][12]=e[t+"12"],e[n][13]=e[t+"13"],e[n][14]=e[t+"0"],e[n][15]=e[t+"0"]}function re(e){return e==Ur||e==zr||e==Hr||e==Vr}function ie(){this.eb=[],this.size=this.A=this.fb=0}function ae(){this.y=[],this.f=[],this.ea=[],this.F=[],this.Tc=this.Ed=this.Cd=this.Fd=this.lb=this.Db=this.Ab=this.fa=this.J=this.W=this.N=this.O=0}function oe(){this.Rd=this.height=this.width=this.S=0,this.f={},this.f.RGBA=new ie,this.f.kb=new ae,this.sd=null}function se(){this.width=[0],this.height=[0],this.Pd=[0],this.Qd=[0],this.format=[0]}function ce(){this.Id=this.fd=this.Md=this.hb=this.ib=this.da=this.bd=this.cd=this.j=this.v=this.Da=this.Sd=this.ob=0}function le(e){return alert("todo:WebPSamplerProcessPlane"),e.T}function ue(e,t){var n=e.T,i=t.ba.f.RGBA,a=i.eb,o=i.fb+e.ka*i.A,s=gi[t.ba.S],c=e.y,l=e.O,u=e.f,f=e.N,d=e.ea,h=e.W,p=t.cc,v=t.dc,m=t.Mc,g=t.Nc,y=e.ka,b=e.ka+e.T,w=e.U,N=w+1>>1;for(0==y?s(c,l,null,null,u,f,d,h,u,f,d,h,a,o,null,null,w):(s(t.ec,t.fc,c,l,p,v,m,g,u,f,d,h,a,o-i.A,a,o,w),++n);y+2<b;y+=2)p=u,v=f,m=d,g=h,f+=e.Rc,h+=e.Rc,o+=2*i.A,s(c,(l+=2*e.fa)-e.fa,c,l,p,v,m,g,u,f,d,h,a,o-i.A,a,o,w);return l+=e.fa,e.j+b<e.o?(r(t.ec,t.fc,c,l,w),r(t.cc,t.dc,u,f,N),r(t.Mc,t.Nc,d,h,N),n--):1&b||s(c,l,null,null,u,f,d,h,u,f,d,h,a,o+i.A,null,null,w),n}function fe(e,n,r){var i=e.F,a=[e.J];if(null!=i){var o=e.U,s=n.ba.S,c=s==Br||s==Hr;n=n.ba.f.RGBA;var l=[0],u=e.ka;l[0]=e.T,e.Kb&&(0==u?--l[0]:(--u,a[0]-=e.width),e.j+e.ka+e.T==e.o&&(l[0]=e.o-e.j-u));var f=n.eb;u=n.fb+u*n.A,e=Cr(i,a[0],e.width,o,l,f,u+(c?0:3),n.A),t(r==l),e&&re(s)&&Sr(f,u,c,o,l,n.A)}return 0}function de(e){var t=e.ma,n=t.ba.S,r=11>n,i=n==jr||n==Tr||n==Br||n==qr||12==n||re(n);if(t.memory=null,t.Ib=null,t.Jb=null,t.Nd=null,!Zn(t.Oa,e,i?11:12))return 0;if(i&&re(n)&&bn(),e.da)alert("todo:use_scaling");else{if(r){if(t.Ib=le,e.Kb){if(n=e.U+1>>1,t.memory=a(e.U+2*n),null==t.memory)return 0;t.ec=t.memory,t.fc=0,t.cc=t.ec,t.dc=t.fc+e.U,t.Mc=t.cc,t.Nc=t.dc+n,t.Ib=ue,bn()}}else alert("todo:EmitYUV");i&&(t.Jb=fe,r&&gn())}if(r&&!Ii){for(e=0;256>e;++e)Oi[e]=89858*(e-128)+Li>>Ci,Fi[e]=-22014*(e-128)+Li,Di[e]=-45773*(e-128),Mi[e]=113618*(e-128)+Li>>Ci;for(e=Ai;e<Ei;++e)t=76283*(e-16)+Li>>Ci,Zi[e-Ai]=He(t,255),ji[e-Ai]=He(t+8>>4,15);Ii=1}return 1}function he(e){var n=e.ma,r=e.U,i=e.T;return t(!(1&e.ka)),0>=r||0>=i?0:(r=n.Ib(e,n),null!=n.Jb&&n.Jb(e,n,r),n.Dc+=r,1)}function pe(e){e.ma.memory=null}function ve(e,t,n,r){return 47!=b(e,8)?0:(t[0]=b(e,14)+1,n[0]=b(e,14)+1,r[0]=b(e,1),0!=b(e,3)?0:!e.h)}function me(e,t){if(4>e)return e+1;var n=e-2>>1;return(2+(1&e)<<n)+b(t,n)+1}function ge(e,t){return 120<t?t-120:1<=(n=((n=Jr[t-1])>>4)*e+(8-(15&n)))?n:1;var n}function ye(e,t,n){var r=x(n),i=e[t+=255&r].g-8;return 0<i&&(k(n,n.u+8),r=x(n),t+=e[t].value,t+=r&(1<<i)-1),k(n,n.u+e[t].g),e[t].value}function be(e,n,r){return r.g+=e.g,r.value+=e.value<<n>>>0,t(8>=r.g),e.g}function we(e,n,r){var i=e.xc;return t((n=0==i?0:e.vc[e.md*(r>>i)+(n>>i)])<e.Wb),e.Ya[n]}function Ne(e,n,i,a){var o=e.ab,s=e.c*n,c=e.C;n=c+n;var l=i,u=a;for(a=e.Ta,i=e.Ua;0<o--;){var f=e.gc[o],d=c,h=n,p=l,v=u,m=(u=a,l=i,f.Ea);switch(t(d<h),t(h<=f.nc),f.hc){case 2:Wn(p,v,(h-d)*m,u,l);break;case 0:var g=d,y=h,b=u,w=l,N=(L=f).Ea;0==g&&(Hn(p,v,null,null,1,b,w),H(p,v+1,0,0,N-1,b,w+1),v+=N,w+=N,++g);for(var x=1<<L.b,S=x-1,k=j(N,L.b),C=L.K,L=L.w+(g>>L.b)*k;g<y;){var A=C,E=L,P=1;for(Vn(p,v,b,w-N,1,b,w);P<N;){var _=(P&~S)+x;_>N&&(_=N),(0,Jn[A[E++]>>8&15])(p,v+ +P,b,w+P-N,_-P,b,w+P),P=_}v+=N,w+=N,++g&S||(L+=k)}h!=f.nc&&r(u,l-m,u,l+(h-d-1)*m,m);break;case 1:for(m=p,y=v,N=(p=f.Ea)-(w=p&~(b=(v=1<<f.b)-1)),g=j(p,f.b),x=f.K,f=f.w+(d>>f.b)*g;d<h;){for(S=x,k=f,C=new B,L=y+w,A=y+p;y<L;)W(S[k++],C),Qn(C,m,y,v,u,l),y+=v,l+=v;y<A&&(W(S[k++],C),Qn(C,m,y,N,u,l),y+=N,l+=N),++d&b||(f+=g)}break;case 3:if(p==u&&v==l&&0<f.b){for(y=u,p=m=l+(h-d)*m-(w=(h-d)*j(f.Ea,f.b)),v=u,b=l,g=[],w=(N=w)-1;0<=w;--w)g[w]=v[b+w];for(w=N-1;0<=w;--w)y[p+w]=g[w];Yn(f,d,h,u,m,u,l)}else Yn(f,d,h,p,v,u,l)}l=a,u=i}u!=i&&r(a,i,l,u,s)}function xe(e,n){var r=e.V,i=e.Ba+e.c*e.C,a=n-e.C;if(t(n<=e.l.o),t(16>=a),0<a){var o=e.l,s=e.Ta,c=e.Ua,l=o.width;if(Ne(e,a,r,i),a=c=[c],t((r=e.C)<(i=n)),t(o.v<o.va),i>o.o&&(i=o.o),r<o.j){var u=o.j-r;r=o.j,a[0]+=u*l}if(r>=i?r=0:(a[0]+=4*o.v,o.ka=r-o.j,o.U=o.va-o.v,o.T=i-r,r=1),r){if(c=c[0],11>(r=e.ca).S){var f=r.f.RGBA,d=(i=r.S,a=o.U,o=o.T,u=f.eb,f.A),h=o;for(f=f.fb+e.Ma*f.A;0<h--;){var p=s,v=c,m=a,g=u,y=f;switch(i){case Zr:er(p,v,m,g,y);break;case jr:tr(p,v,m,g,y);break;case Ur:tr(p,v,m,g,y),Sr(g,y,0,m,1,0);break;case Rr:ir(p,v,m,g,y);break;case Tr:te(p,v,m,g,y,1);break;case zr:te(p,v,m,g,y,1),Sr(g,y,0,m,1,0);break;case Br:te(p,v,m,g,y,0);break;case Hr:te(p,v,m,g,y,0),Sr(g,y,1,m,1,0);break;case qr:nr(p,v,m,g,y);break;case Vr:nr(p,v,m,g,y),kr(g,y,m,1,0);break;case Kr:rr(p,v,m,g,y);break;default:t(0)}c+=l,f+=d}e.Ma+=o}else alert("todo:EmitRescaledRowsYUVA");t(e.Ma<=r.height)}}e.C=n,t(e.C<=e.i)}function Se(e){var t;if(0<e.ua)return 0;for(t=0;t<e.Wb;++t){var n=e.Ya[t].G,r=e.Ya[t].H;if(0<n[1][r[1]+0].g||0<n[2][r[2]+0].g||0<n[3][r[3]+0].g)return 0}return 1}function ke(e,n,r,i,a,o){if(0!=e.Z){var s=e.qd,c=e.rd;for(t(null!=mi[e.Z]);n<r;++n)mi[e.Z](s,c,i,a,i,a,o),s=i,c=a,a+=o;e.qd=s,e.rd=c}}function Ce(e,n){var r=e.l.ma,i=0==r.Z||1==r.Z?e.l.j:e.C;if(i=e.C<i?i:e.C,t(n<=e.l.o),n>i){var a=e.l.width,o=r.ca,s=r.tb+a*i,c=e.V,l=e.Ba+e.c*i,u=e.gc;t(1==e.ab),t(3==u[0].hc),$n(u[0],i,n,c,l,o,s),ke(r,i,n,o,s,a)}e.C=e.Ma=n}function Le(e,n,r,i,a,o,s){var c=e.$/i,l=e.$%i,u=e.m,f=e.s,d=r+e.$,h=d;a=r+i*a;var p=r+i*o,v=280+f.ua,m=e.Pb?c:16777216,g=0<f.ua?f.Wa:null,y=f.wc,b=d<p?we(f,l,c):null;t(e.C<o),t(p<=a);var w=!1;e:for(;;){for(;w||d<p;){var N=0;if(c>=m){var L=d-r;t((m=e).Pb),m.wd=m.m,m.xd=L,0<m.s.ua&&D(m.s.Wa,m.s.vb),m=c+ei}if(l&y||(b=we(f,l,c)),t(null!=b),b.Qb&&(n[d]=b.qb,w=!0),!w)if(C(u),b.jc){N=u,L=n;var A=d,E=b.pd[x(N)&Tn-1];t(b.jc),256>E.g?(k(N,N.u+E.g),L[A]=E.value,N=0):(k(N,N.u+E.g-256),t(256<=E.value),N=E.value),0==N&&(w=!0)}else N=ye(b.G[0],b.H[0],u);if(u.h)break;if(w||256>N){if(!w)if(b.nd)n[d]=(b.qb|N<<8)>>>0;else{if(C(u),w=ye(b.G[1],b.H[1],u),C(u),L=ye(b.G[2],b.H[2],u),A=ye(b.G[3],b.H[3],u),u.h)break;n[d]=(A<<24|w<<16|N<<8|L)>>>0}if(w=!1,++d,++l>=i&&(l=0,++c,null!=s&&c<=o&&!(c%16)&&s(e,c),null!=g))for(;h<d;)N=n[h++],g.X[(506832829*N&4294967295)>>>g.Mb]=N}else if(280>N){if(N=me(N-256,u),L=ye(b.G[4],b.H[4],u),C(u),L=ge(i,L=me(L,u)),u.h)break;if(d-r<L||a-d<N)break e;for(A=0;A<N;++A)n[d+A]=n[d+A-L];for(d+=N,l+=N;l>=i;)l-=i,++c,null!=s&&c<=o&&!(c%16)&&s(e,c);if(t(d<=a),l&y&&(b=we(f,l,c)),null!=g)for(;h<d;)N=n[h++],g.X[(506832829*N&4294967295)>>>g.Mb]=N}else{if(!(N<v))break e;for(w=N-280,t(null!=g);h<d;)N=n[h++],g.X[(506832829*N&4294967295)>>>g.Mb]=N;N=d,t(!(w>>>(L=g).Xa)),n[N]=L.X[w],w=!0}w||t(u.h==S(u))}if(e.Pb&&u.h&&d<a)t(e.m.h),e.a=5,e.m=e.wd,e.$=e.xd,0<e.s.ua&&D(e.s.vb,e.s.Wa);else{if(u.h)break e;null!=s&&s(e,c>o?o:c),e.a=0,e.$=d-r}return 1}return e.a=3,0}function Ae(e){t(null!=e),e.vc=null,e.yc=null,e.Ya=null;var n=e.Wa;null!=n&&(n.X=null),e.vb=null,t(null!=e)}function Ee(){var t=new sn;return null==t?null:(t.a=0,t.xb=vi,ne("Predictor","VP8LPredictors"),ne("Predictor","VP8LPredictors_C"),ne("PredictorAdd","VP8LPredictorsAdd"),ne("PredictorAdd","VP8LPredictorsAdd_C"),Wn=V,Qn=Y,er=$,tr=X,nr=J,rr=Q,ir=ee,e.VP8LMapColor32b=Gn,e.VP8LMapColor8b=Xn,t)}function Pe(e,n,r,s,c){var l=1,d=[e],p=[n],v=s.m,m=s.s,g=null,y=0;e:for(;;){if(r)for(;l&&b(v,1);){var w=d,N=p,S=s,L=1,A=S.m,E=S.gc[S.ab],P=b(A,2);if(S.Oc&1<<P)l=0;else{switch(S.Oc|=1<<P,E.hc=P,E.Ea=w[0],E.nc=N[0],E.K=[null],++S.ab,t(4>=S.ab),P){case 0:case 1:E.b=b(A,3)+2,L=Pe(j(E.Ea,E.b),j(E.nc,E.b),0,S,E.K),E.K=E.K[0];break;case 3:var _,I=b(A,8)+1,O=16<I?0:4<I?1:2<I?2:3;if(w[0]=j(E.Ea,O),E.b=O,_=L=Pe(I,1,0,S,E.K)){var D,F=I,Z=E,T=1<<(8>>Z.b),B=a(T);if(null==B)_=0;else{var q=Z.K[0],K=Z.w;for(B[0]=Z.K[0][0],D=1;D<1*F;++D)B[D]=R(q[K+D],B[D-1]);for(;D<4*T;++D)B[D]=0;Z.K[0]=null,Z.K[0]=B,_=1}}L=_;break;case 2:break;default:t(0)}l=L}}if(d=d[0],p=p[0],l&&b(v,1)&&!(l=1<=(y=b(v,4))&&11>=y)){s.a=3;break e}var U;if(U=l)t:{var z,H,V,W=s,Y=d,G=p,$=y,X=r,J=W.m,Q=W.s,ee=[null],te=1,ne=0,re=Qr[$];n:for(;;){if(X&&b(J,1)){var ie=b(J,3)+2,ae=j(Y,ie),oe=j(G,ie),se=ae*oe;if(!Pe(ae,oe,0,W,ee))break n;for(ee=ee[0],Q.xc=ie,z=0;z<se;++z){var ce=ee[z]>>8&65535;ee[z]=ce,ce>=te&&(te=ce+1)}}if(J.h)break n;for(H=0;5>H;++H){var le=Gr[H];!H&&0<$&&(le+=1<<$),ne<le&&(ne=le)}var ue=o(te*re,f),fe=te,de=o(fe,h);if(null==de)var he=null;else t(65536>=fe),he=de;var pe=a(ne);if(null==he||null==pe||null==ue){W.a=1;break n}var ve=ue;for(z=V=0;z<te;++z){var me=he[z],ge=me.G,ye=me.H,we=0,Ne=1,xe=0;for(H=0;5>H;++H){le=Gr[H],ge[H]=ve,ye[H]=V,!H&&0<$&&(le+=1<<$);r:{var Se,ke=le,Ce=W,Ee=pe,_e=ve,Ie=V,Oe=0,Me=Ce.m,De=b(Me,1);if(i(Ee,0,0,ke),De){var Fe=b(Me,1)+1,Ze=b(Me,1),je=b(Me,0==Ze?1:8);Ee[je]=1,2==Fe&&(Ee[je=b(Me,8)]=1);var Re=1}else{var Te=a(19),Be=b(Me,4)+4;if(19<Be){Ce.a=3;var qe=0;break r}for(Se=0;Se<Be;++Se)Te[Xr[Se]]=b(Me,3);var Ke=void 0,Ue=void 0,ze=Ce,He=Te,Ve=ke,We=Ee,Ye=0,Ge=ze.m,$e=8,Xe=o(128,f);i:for(;u(Xe,0,7,He,19);){if(b(Ge,1)){var Je=2+2*b(Ge,3);if((Ke=2+b(Ge,Je))>Ve)break i}else Ke=Ve;for(Ue=0;Ue<Ve&&Ke--;){C(Ge);var Qe=Xe[0+(127&x(Ge))];k(Ge,Ge.u+Qe.g);var et=Qe.value;if(16>et)We[Ue++]=et,0!=et&&($e=et);else{var tt=16==et,nt=et-16,rt=Yr[nt],it=b(Ge,Wr[nt])+rt;if(Ue+it>Ve)break i;for(var at=tt?$e:0;0<it--;)We[Ue++]=at}}Ye=1;break i}Ye||(ze.a=3),Re=Ye}(Re=Re&&!Me.h)&&(Oe=u(_e,Ie,8,Ee,ke)),Re&&0!=Oe?qe=Oe:(Ce.a=3,qe=0)}if(0==qe)break n;if(Ne&&1==$r[H]&&(Ne=0==ve[V].g),we+=ve[V].g,V+=qe,3>=H){var ot,st=pe[0];for(ot=1;ot<le;++ot)pe[ot]>st&&(st=pe[ot]);xe+=st}}if(me.nd=Ne,me.Qb=0,Ne&&(me.qb=(ge[3][ye[3]+0].value<<24|ge[1][ye[1]+0].value<<16|ge[2][ye[2]+0].value)>>>0,0==we&&256>ge[0][ye[0]+0].value&&(me.Qb=1,me.qb+=ge[0][ye[0]+0].value<<8)),me.jc=!me.Qb&&6>xe,me.jc){var ct,lt=me;for(ct=0;ct<Tn;++ct){var ut=ct,ft=lt.pd[ut],dt=lt.G[0][lt.H[0]+ut];256<=dt.value?(ft.g=dt.g+256,ft.value=dt.value):(ft.g=0,ft.value=0,ut>>=be(dt,8,ft),ut>>=be(lt.G[1][lt.H[1]+ut],16,ft),ut>>=be(lt.G[2][lt.H[2]+ut],0,ft),be(lt.G[3][lt.H[3]+ut],24,ft))}}}Q.vc=ee,Q.Wb=te,Q.Ya=he,Q.yc=ue,U=1;break t}U=0}if(!(l=U)){s.a=3;break e}if(0<y){if(m.ua=1<<y,!M(m.Wa,y)){s.a=1,l=0;break e}}else m.ua=0;var ht=s,pt=d,vt=p,mt=ht.s,gt=mt.xc;if(ht.c=pt,ht.i=vt,mt.md=j(pt,gt),mt.wc=0==gt?-1:(1<<gt)-1,r){s.xb=pi;break e}if(null==(g=a(d*p))){s.a=1,l=0;break e}l=(l=Le(s,g,0,d,p,p,null))&&!v.h;break e}return l?(null!=c?c[0]=g:(t(null==g),t(r)),s.$=0,r||Ae(m)):Ae(m),l}function _e(e,n){var r=e.c*e.i,i=r+n+16*n;return t(e.c<=n),e.V=a(i),null==e.V?(e.Ta=null,e.Ua=0,e.a=1,0):(e.Ta=e.V,e.Ua=e.Ba+r+n,1)}function Ie(e,n){var r=e.C,i=n-r,a=e.V,o=e.Ba+e.c*r;for(t(n<=e.l.o);0<i;){var s=16<i?16:i,c=e.l.ma,l=e.l.width,u=l*s,f=c.ca,d=c.tb+l*r,h=e.Ta,p=e.Ua;Ne(e,s,a,o),Lr(h,p,f,d,u),ke(c,r,r+s,f,d,l),i-=s,a+=s*e.c,r+=s}t(r==n),e.C=e.Ma=n}function Oe(){this.ub=this.yd=this.td=this.Rb=0}function Me(){this.Kd=this.Ld=this.Ud=this.Td=this.i=this.c=0}function De(){this.Fb=this.Bb=this.Cb=0,this.Zb=a(4),this.Lb=a(4)}function Fe(){this.Yb=function(){var e=[];return function e(t,n,r){for(var i=r[n],a=0;a<i&&(t.push(r.length>n+1?[]:0),!(r.length<n+1));a++)e(t[a],n+1,r)}(e,0,[3,11]),e}()}function Ze(){this.jb=a(3),this.Wc=s([4,8],Fe),this.Xc=s([4,17],Fe)}function je(){this.Pc=this.wb=this.Tb=this.zd=0,this.vd=new a(4),this.od=new a(4)}function Re(){this.ld=this.La=this.dd=this.tc=0}function Te(){this.Na=this.la=0}function Be(){this.Sc=[0,0],this.Eb=[0,0],this.Qc=[0,0],this.ia=this.lc=0}function qe(){this.ad=a(384),this.Za=0,this.Ob=a(16),this.$b=this.Ad=this.ia=this.Gc=this.Hc=this.Dd=0}function Ke(){this.uc=this.M=this.Nb=0,this.wa=Array(new Re),this.Y=0,this.ya=Array(new qe),this.aa=0,this.l=new Ve}function Ue(){this.y=a(16),this.f=a(8),this.ea=a(8)}function ze(){this.cb=this.a=0,this.sc="",this.m=new w,this.Od=new Oe,this.Kc=new Me,this.ed=new je,this.Qa=new De,this.Ic=this.$c=this.Aa=0,this.D=new Ke,this.Xb=this.Va=this.Hb=this.zb=this.yb=this.Ub=this.za=0,this.Jc=o(8,w),this.ia=0,this.pb=o(4,Be),this.Pa=new Ze,this.Bd=this.kc=0,this.Ac=[],this.Bc=0,this.zc=[0,0,0,0],this.Gd=Array(new Ue),this.Hd=0,this.rb=Array(new Te),this.sb=0,this.wa=Array(new Re),this.Y=0,this.oc=[],this.pc=0,this.sa=[],this.ta=0,this.qa=[],this.ra=0,this.Ha=[],this.B=this.R=this.Ia=0,this.Ec=[],this.M=this.ja=this.Vb=this.Fc=0,this.ya=Array(new qe),this.L=this.aa=0,this.gd=s([4,2],Re),this.ga=null,this.Fa=[],this.Cc=this.qc=this.P=0,this.Gb=[],this.Uc=0,this.mb=[],this.nb=0,this.rc=[],this.Ga=this.Vc=0}function He(e,t){return 0>e?0:e>t?t:e}function Ve(){this.T=this.U=this.ka=this.height=this.width=0,this.y=[],this.f=[],this.ea=[],this.Rc=this.fa=this.W=this.N=this.O=0,this.ma="void",this.put="VP8IoPutHook",this.ac="VP8IoSetupHook",this.bc="VP8IoTeardownHook",this.ha=this.Kb=0,this.data=[],this.hb=this.ib=this.da=this.o=this.j=this.va=this.v=this.Da=this.ob=this.w=0,this.F=[],this.J=0}function We(){var e=new ze;return null!=e&&(e.a=0,e.sc="OK",e.cb=0,e.Xb=0,ri||(ri=Xe)),e}function Ye(e,t,n){return 0==e.a&&(e.a=t,e.sc=n,e.cb=0),0}function Ge(e,t,n){return 3<=n&&157==e[t+0]&&1==e[t+1]&&42==e[t+2]}function $e(e,n){if(null==e)return 0;if(e.a=0,e.sc="OK",null==n)return Ye(e,2,"null VP8Io passed to VP8GetHeaders()");var r=n.data,a=n.w,o=n.ha;if(4>o)return Ye(e,7,"Truncated header.");var s=r[a+0]|r[a+1]<<8|r[a+2]<<16,c=e.Od;if(c.Rb=!(1&s),c.td=s>>1&7,c.yd=s>>4&1,c.ub=s>>5,3<c.td)return Ye(e,3,"Incorrect keyframe parameters.");if(!c.yd)return Ye(e,4,"Frame not displayable.");a+=3,o-=3;var l=e.Kc;if(c.Rb){if(7>o)return Ye(e,7,"cannot parse picture header");if(!Ge(r,a,o))return Ye(e,3,"Bad code word");l.c=16383&(r[a+4]<<8|r[a+3]),l.Td=r[a+4]>>6,l.i=16383&(r[a+6]<<8|r[a+5]),l.Ud=r[a+6]>>6,a+=7,o-=7,e.za=l.c+15>>4,e.Ub=l.i+15>>4,n.width=l.c,n.height=l.i,n.Da=0,n.j=0,n.v=0,n.va=n.width,n.o=n.height,n.da=0,n.ib=n.width,n.hb=n.height,n.U=n.width,n.T=n.height,i((s=e.Pa).jb,0,255,s.jb.length),t(null!=(s=e.Qa)),s.Cb=0,s.Bb=0,s.Fb=1,i(s.Zb,0,0,s.Zb.length),i(s.Lb,0,0,s.Lb)}if(c.ub>o)return Ye(e,7,"bad partition length");p(s=e.m,r,a,c.ub),a+=c.ub,o-=c.ub,c.Rb&&(l.Ld=A(s),l.Kd=A(s)),l=e.Qa;var u,f=e.Pa;if(t(null!=s),t(null!=l),l.Cb=A(s),l.Cb){if(l.Bb=A(s),A(s)){for(l.Fb=A(s),u=0;4>u;++u)l.Zb[u]=A(s)?m(s,7):0;for(u=0;4>u;++u)l.Lb[u]=A(s)?m(s,6):0}if(l.Bb)for(u=0;3>u;++u)f.jb[u]=A(s)?v(s,8):255}else l.Bb=0;if(s.Ka)return Ye(e,3,"cannot parse segment header");if((l=e.ed).zd=A(s),l.Tb=v(s,6),l.wb=v(s,3),l.Pc=A(s),l.Pc&&A(s)){for(f=0;4>f;++f)A(s)&&(l.vd[f]=m(s,6));for(f=0;4>f;++f)A(s)&&(l.od[f]=m(s,6))}if(e.L=0==l.Tb?0:l.zd?1:2,s.Ka)return Ye(e,3,"cannot parse filter header");var d=o;if(o=u=a,a=u+d,l=d,e.Xb=(1<<v(e.m,2))-1,d<3*(f=e.Xb))r=7;else{for(u+=3*f,l-=3*f,d=0;d<f;++d){var h=r[o+0]|r[o+1]<<8|r[o+2]<<16;h>l&&(h=l),p(e.Jc[+d],r,u,h),u+=h,l-=h,o+=3}p(e.Jc[+f],r,u,l),r=u<a?0:5}if(0!=r)return Ye(e,r,"cannot parse partitions");for(r=v(u=e.m,7),o=A(u)?m(u,4):0,a=A(u)?m(u,4):0,l=A(u)?m(u,4):0,f=A(u)?m(u,4):0,u=A(u)?m(u,4):0,d=e.Qa,h=0;4>h;++h){if(d.Cb){var g=d.Zb[h];d.Fb||(g+=r)}else{if(0<h){e.pb[h]=e.pb[0];continue}g=r}var y=e.pb[h];y.Sc[0]=ti[He(g+o,127)],y.Sc[1]=ni[He(g+0,127)],y.Eb[0]=2*ti[He(g+a,127)],y.Eb[1]=101581*ni[He(g+l,127)]>>16,8>y.Eb[1]&&(y.Eb[1]=8),y.Qc[0]=ti[He(g+f,117)],y.Qc[1]=ni[He(g+u,127)],y.lc=g+u}if(!c.Rb)return Ye(e,4,"Not a key frame.");for(A(s),c=e.Pa,r=0;4>r;++r){for(o=0;8>o;++o)for(a=0;3>a;++a)for(l=0;11>l;++l)f=E(s,li[r][o][a][l])?v(s,8):si[r][o][a][l],c.Wc[r][o].Yb[a][l]=f;for(o=0;17>o;++o)c.Xc[r][o]=c.Wc[r][ui[o]]}return e.kc=A(s),e.kc&&(e.Bd=v(s,8)),e.cb=1}function Xe(e,t,n,r,i,a,o){var s=t[i].Yb[n];for(n=0;16>i;++i){if(!E(e,s[n+0]))return i;for(;!E(e,s[n+1]);)if(s=t[++i].Yb[0],n=0,16==i)return 16;var c=t[i+1].Yb;if(E(e,s[n+2])){var l=e,u=0;if(E(l,(d=s)[(f=n)+3]))if(E(l,d[f+6])){for(s=0,f=2*(u=E(l,d[f+8]))+(d=E(l,d[f+9+u])),u=0,d=ii[f];d[s];++s)u+=u+E(l,d[s]);u+=3+(8<<f)}else E(l,d[f+7])?(u=7+2*E(l,165),u+=E(l,145)):u=5+E(l,159);else u=E(l,d[f+4])?3+E(l,d[f+5]):2;s=c[2]}else u=1,s=c[1];c=o+ai[i],0>(l=e).b&&L(l);var f,d=l.b,h=(f=l.Ca>>1)-(l.I>>d)>>31;--l.b,l.Ca+=h,l.Ca|=1,l.I-=(f+1&h)<<d,a[c]=((u^h)-h)*r[(0<i)+0]}return 16}function Je(e){var t=e.rb[e.sb-1];t.la=0,t.Na=0,i(e.zc,0,0,e.zc.length),e.ja=0}function Qe(e,n){if(null==e)return 0;if(null==n)return Ye(e,2,"NULL VP8Io parameter in VP8Decode().");if(!e.cb&&!$e(e,n))return 0;if(t(e.cb),null==n.ac||n.ac(n)){n.ob&&(e.L=0);var s=Ti[e.L];if(2==e.L?(e.yb=0,e.zb=0):(e.yb=n.v-s>>4,e.zb=n.j-s>>4,0>e.yb&&(e.yb=0),0>e.zb&&(e.zb=0)),e.Va=n.o+15+s>>4,e.Hb=n.va+15+s>>4,e.Hb>e.za&&(e.Hb=e.za),e.Va>e.Ub&&(e.Va=e.Ub),0<e.L){var c=e.ed;for(s=0;4>s;++s){var l;if(e.Qa.Cb){var u=e.Qa.Lb[s];e.Qa.Fb||(u+=c.Tb)}else u=c.Tb;for(l=0;1>=l;++l){var f=e.gd[s][l],d=u;if(c.Pc&&(d+=c.vd[0],l&&(d+=c.od[0])),0<(d=0>d?0:63<d?63:d)){var h=d;0<c.wb&&(h=4<c.wb?h>>2:h>>1)>9-c.wb&&(h=9-c.wb),1>h&&(h=1),f.dd=h,f.tc=2*d+h,f.ld=40<=d?2:15<=d?1:0}else f.tc=0;f.La=l}}}s=0}else Ye(e,6,"Frame setup failed"),s=e.a;if(s=0==s){if(s){e.$c=0,0<e.Aa||(e.Ic=qi);e:{s=e.Ic,c=4*(h=e.za);var p=32*h,v=h+1,m=0<e.L?h*(0<e.Aa?2:1):0,g=(2==e.Aa?2:1)*h;if((f=c+832+(l=3*(16*s+Ti[e.L])/2*p)+(u=null!=e.Fa&&0<e.Fa.length?e.Kc.c*e.Kc.i:0))!=f)s=0;else{if(f>e.Vb){if(e.Vb=0,e.Ec=a(f),e.Fc=0,null==e.Ec){s=Ye(e,1,"no memory during frame initialization.");break e}e.Vb=f}f=e.Ec,d=e.Fc,e.Ac=f,e.Bc=d,d+=c,e.Gd=o(p,Ue),e.Hd=0,e.rb=o(v+1,Te),e.sb=1,e.wa=m?o(m,Re):null,e.Y=0,e.D.Nb=0,e.D.wa=e.wa,e.D.Y=e.Y,0<e.Aa&&(e.D.Y+=h),t(!0),e.oc=f,e.pc=d,d+=832,e.ya=o(g,qe),e.aa=0,e.D.ya=e.ya,e.D.aa=e.aa,2==e.Aa&&(e.D.aa+=h),e.R=16*h,e.B=8*h,h=(p=Ti[e.L])*e.R,p=p/2*e.B,e.sa=f,e.ta=d+h,e.qa=e.sa,e.ra=e.ta+16*s*e.R+p,e.Ha=e.qa,e.Ia=e.ra+8*s*e.B+p,e.$c=0,d+=l,e.mb=u?f:null,e.nb=u?d:null,t(d+u<=e.Fc+e.Vb),Je(e),i(e.Ac,e.Bc,0,c),s=1}}if(s){if(n.ka=0,n.y=e.sa,n.O=e.ta,n.f=e.qa,n.N=e.ra,n.ea=e.Ha,n.Vd=e.Ia,n.fa=e.R,n.Rc=e.B,n.F=null,n.J=0,!Ir){for(s=-255;255>=s;++s)Ar[255+s]=0>s?-s:s;for(s=-1020;1020>=s;++s)Er[1020+s]=-128>s?-128:127<s?127:s;for(s=-112;112>=s;++s)Pr[112+s]=-16>s?-16:15<s?15:s;for(s=-255;510>=s;++s)_r[255+s]=0>s?0:255<s?255:s;Ir=1}ar=lt,or=at,cr=ot,lr=st,ur=ct,sr=it,fr=Yt,dr=Gt,hr=Jt,pr=Qt,vr=$t,mr=Xt,gr=en,yr=tn,br=Kt,wr=Ut,Nr=zt,xr=Ht,di[0]=kt,di[1]=ft,di[2]=xt,di[3]=St,di[4]=Ct,di[5]=At,di[6]=Lt,di[7]=Et,di[8]=_t,di[9]=Pt,fi[0]=gt,fi[1]=ht,fi[2]=pt,fi[3]=vt,fi[4]=yt,fi[5]=bt,fi[6]=wt,hi[0]=Dt,hi[1]=dt,hi[2]=It,hi[3]=Ot,hi[4]=Zt,hi[5]=Ft,hi[6]=jt,s=1}else s=0}s&&(s=function(e,n){for(e.M=0;e.M<e.Va;++e.M){var o,s=e.Jc[e.M&e.Xb],c=e.m,l=e;for(o=0;o<l.za;++o){var u=c,f=l,d=f.Ac,h=f.Bc+4*o,p=f.zc,v=f.ya[f.aa+o];if(f.Qa.Bb?v.$b=E(u,f.Pa.jb[0])?2+E(u,f.Pa.jb[2]):E(u,f.Pa.jb[1]):v.$b=0,f.kc&&(v.Ad=E(u,f.Bd)),v.Za=!E(u,145)+0,v.Za){var m=v.Ob,g=0;for(f=0;4>f;++f){var y,b=p[0+f];for(y=0;4>y;++y){b=ci[d[h+y]][b];for(var w=oi[E(u,b[0])];0<w;)w=oi[2*w+E(u,b[w])];b=-w,d[h+y]=b}r(m,g,d,h,4),g+=4,p[0+f]=b}}else b=E(u,156)?E(u,128)?1:3:E(u,163)?2:0,v.Ob[0]=b,i(d,h,b,4),i(p,0,b,4);v.Dd=E(u,142)?E(u,114)?E(u,183)?1:3:2:0}if(l.m.Ka)return Ye(e,7,"Premature end-of-partition0 encountered.");for(;e.ja<e.za;++e.ja){if(l=s,u=(c=e).rb[c.sb-1],d=c.rb[c.sb+c.ja],o=c.ya[c.aa+c.ja],h=c.kc?o.Ad:0)u.la=d.la=0,o.Za||(u.Na=d.Na=0),o.Hc=0,o.Gc=0,o.ia=0;else{var N,x;if(u=d,d=l,h=c.Pa.Xc,p=c.ya[c.aa+c.ja],v=c.pb[p.$b],f=p.ad,m=0,g=c.rb[c.sb-1],b=y=0,i(f,m,0,384),p.Za)var S=0,k=h[3];else{w=a(16);var C=u.Na+g.Na;if(C=ri(d,h[1],C,v.Eb,0,w,0),u.Na=g.Na=(0<C)+0,1<C)ar(w,0,f,m);else{var L=w[0]+3>>3;for(w=0;256>w;w+=16)f[m+w]=L}S=1,k=h[0]}var A=15&u.la,P=15&g.la;for(w=0;4>w;++w){var _=1&P;for(L=x=0;4>L;++L)A=A>>1|(_=(C=ri(d,k,C=_+(1&A),v.Sc,S,f,m))>S)<<7,x=x<<2|(3<C?3:1<C?2:0!=f[m+0]),m+=16;A>>=4,P=P>>1|_<<7,y=(y<<8|x)>>>0}for(k=A,S=P>>4,N=0;4>N;N+=2){for(x=0,A=u.la>>4+N,P=g.la>>4+N,w=0;2>w;++w){for(_=1&P,L=0;2>L;++L)C=_+(1&A),A=A>>1|(_=0<(C=ri(d,h[2],C,v.Qc,0,f,m)))<<3,x=x<<2|(3<C?3:1<C?2:0!=f[m+0]),m+=16;A>>=2,P=P>>1|_<<5}b|=x<<4*N,k|=A<<4<<N,S|=(240&P)<<N}u.la=k,g.la=S,p.Hc=y,p.Gc=b,p.ia=43690&b?0:v.ia,h=!(y|b)}if(0<c.L&&(c.wa[c.Y+c.ja]=c.gd[o.$b][o.Za],c.wa[c.Y+c.ja].La|=!h),l.Ka)return Ye(e,7,"Premature end-of-file encountered.")}if(Je(e),c=n,l=1,o=(s=e).D,u=0<s.L&&s.M>=s.zb&&s.M<=s.Va,0==s.Aa)e:{if(o.M=s.M,o.uc=u,Dn(s,o),l=1,o=(x=s.D).Nb,u=(b=Ti[s.L])*s.R,d=b/2*s.B,w=16*o*s.R,L=8*o*s.B,h=s.sa,p=s.ta-u+w,v=s.qa,f=s.ra-d+L,m=s.Ha,g=s.Ia-d+L,P=0==(A=x.M),y=A>=s.Va-1,2==s.Aa&&Dn(s,x),x.uc)for(_=(C=s).D.M,t(C.D.uc),x=C.yb;x<C.Hb;++x){S=x,k=_;var I=(O=(q=C).D).Nb;N=q.R;var O=O.wa[O.Y+S],M=q.sa,D=q.ta+16*I*N+16*S,F=O.dd,Z=O.tc;if(0!=Z)if(t(3<=Z),1==q.L)0<S&&wr(M,D,N,Z+4),O.La&&xr(M,D,N,Z),0<k&&br(M,D,N,Z+4),O.La&&Nr(M,D,N,Z);else{var j=q.B,R=q.qa,T=q.ra+8*I*j+8*S,B=q.Ha,q=q.Ia+8*I*j+8*S;I=O.ld,0<S&&(dr(M,D,N,Z+4,F,I),pr(R,T,B,q,j,Z+4,F,I)),O.La&&(mr(M,D,N,Z,F,I),yr(R,T,B,q,j,Z,F,I)),0<k&&(fr(M,D,N,Z+4,F,I),hr(R,T,B,q,j,Z+4,F,I)),O.La&&(vr(M,D,N,Z,F,I),gr(R,T,B,q,j,Z,F,I))}}if(s.ia&&alert("todo:DitherRow"),null!=c.put){if(x=16*A,A=16*(A+1),P?(c.y=s.sa,c.O=s.ta+w,c.f=s.qa,c.N=s.ra+L,c.ea=s.Ha,c.W=s.Ia+L):(x-=b,c.y=h,c.O=p,c.f=v,c.N=f,c.ea=m,c.W=g),y||(A-=b),A>c.o&&(A=c.o),c.F=null,c.J=null,null!=s.Fa&&0<s.Fa.length&&x<A&&(c.J=dn(s,c,x,A-x),c.F=s.mb,null==c.F&&0==c.F.length)){l=Ye(s,3,"Could not decode alpha data.");break e}x<c.j&&(b=c.j-x,x=c.j,t(!(1&b)),c.O+=s.R*b,c.N+=s.B*(b>>1),c.W+=s.B*(b>>1),null!=c.F&&(c.J+=c.width*b)),x<A&&(c.O+=c.v,c.N+=c.v>>1,c.W+=c.v>>1,null!=c.F&&(c.J+=c.v),c.ka=x-c.j,c.U=c.va-c.v,c.T=A-x,l=c.put(c))}o+1!=s.Ic||y||(r(s.sa,s.ta-u,h,p+16*s.R,u),r(s.qa,s.ra-d,v,f+8*s.B,d),r(s.Ha,s.Ia-d,m,g+8*s.B,d))}if(!l)return Ye(e,6,"Output aborted.")}return 1}(e,n)),null!=n.bc&&n.bc(n),s&=1}return s?(e.cb=0,s):0}function et(e,t,n,r,i){i=e[t+n+32*r]+(i>>3),e[t+n+32*r]=-256&i?0>i?0:255:i}function tt(e,t,n,r,i,a){et(e,t,0,n,r+i),et(e,t,1,n,r+a),et(e,t,2,n,r-a),et(e,t,3,n,r-i)}function nt(e){return(20091*e>>16)+e}function rt(e,t,n,r){var i,o=0,s=a(16);for(i=0;4>i;++i){var c=e[t+0]+e[t+8],l=e[t+0]-e[t+8],u=(35468*e[t+4]>>16)-nt(e[t+12]),f=nt(e[t+4])+(35468*e[t+12]>>16);s[o+0]=c+f,s[o+1]=l+u,s[o+2]=l-u,s[o+3]=c-f,o+=4,t++}for(i=o=0;4>i;++i)c=(e=s[o+0]+4)+s[o+8],l=e-s[o+8],u=(35468*s[o+4]>>16)-nt(s[o+12]),et(n,r,0,0,c+(f=nt(s[o+4])+(35468*s[o+12]>>16))),et(n,r,1,0,l+u),et(n,r,2,0,l-u),et(n,r,3,0,c-f),o++,r+=32}function it(e,t,n,r){var i=e[t+0]+4,a=35468*e[t+4]>>16,o=nt(e[t+4]),s=35468*e[t+1]>>16;tt(n,r,0,i+o,e=nt(e[t+1]),s),tt(n,r,1,i+a,e,s),tt(n,r,2,i-a,e,s),tt(n,r,3,i-o,e,s)}function at(e,t,n,r,i){rt(e,t,n,r),i&&rt(e,t+16,n,r+4)}function ot(e,t,n,r){or(e,t+0,n,r,1),or(e,t+32,n,r+128,1)}function st(e,t,n,r){var i;for(e=e[t+0]+4,i=0;4>i;++i)for(t=0;4>t;++t)et(n,r,t,i,e)}function ct(e,t,n,r){e[t+0]&&lr(e,t+0,n,r),e[t+16]&&lr(e,t+16,n,r+4),e[t+32]&&lr(e,t+32,n,r+128),e[t+48]&&lr(e,t+48,n,r+128+4)}function lt(e,t,n,r){var i,o=a(16);for(i=0;4>i;++i){var s=e[t+0+i]+e[t+12+i],c=e[t+4+i]+e[t+8+i],l=e[t+4+i]-e[t+8+i],u=e[t+0+i]-e[t+12+i];o[0+i]=s+c,o[8+i]=s-c,o[4+i]=u+l,o[12+i]=u-l}for(i=0;4>i;++i)s=(e=o[0+4*i]+3)+o[3+4*i],c=o[1+4*i]+o[2+4*i],l=o[1+4*i]-o[2+4*i],u=e-o[3+4*i],n[r+0]=s+c>>3,n[r+16]=u+l>>3,n[r+32]=s-c>>3,n[r+48]=u-l>>3,r+=64}function ut(e,t,n){var r,i=t-32,a=Dr,o=255-e[i-1];for(r=0;r<n;++r){var s,c=a,l=o+e[t-1];for(s=0;s<n;++s)e[t+s]=c[l+e[i+s]];t+=32}}function ft(e,t){ut(e,t,4)}function dt(e,t){ut(e,t,8)}function ht(e,t){ut(e,t,16)}function pt(e,t){var n;for(n=0;16>n;++n)r(e,t+32*n,e,t-32,16)}function vt(e,t){var n;for(n=16;0<n;--n)i(e,t,e[t-1],16),t+=32}function mt(e,t,n){var r;for(r=0;16>r;++r)i(t,n+32*r,e,16)}function gt(e,t){var n,r=16;for(n=0;16>n;++n)r+=e[t-1+32*n]+e[t+n-32];mt(r>>5,e,t)}function yt(e,t){var n,r=8;for(n=0;16>n;++n)r+=e[t-1+32*n];mt(r>>4,e,t)}function bt(e,t){var n,r=8;for(n=0;16>n;++n)r+=e[t+n-32];mt(r>>4,e,t)}function wt(e,t){mt(128,e,t)}function Nt(e,t,n){return e+2*t+n+2>>2}function xt(e,t){var n,i=t-32;for(i=new Uint8Array([Nt(e[i-1],e[i+0],e[i+1]),Nt(e[i+0],e[i+1],e[i+2]),Nt(e[i+1],e[i+2],e[i+3]),Nt(e[i+2],e[i+3],e[i+4])]),n=0;4>n;++n)r(e,t+32*n,i,0,i.length)}function St(e,t){var n=e[t-1],r=e[t-1+32],i=e[t-1+64],a=e[t-1+96];P(e,t+0,16843009*Nt(e[t-1-32],n,r)),P(e,t+32,16843009*Nt(n,r,i)),P(e,t+64,16843009*Nt(r,i,a)),P(e,t+96,16843009*Nt(i,a,a))}function kt(e,t){var n,r=4;for(n=0;4>n;++n)r+=e[t+n-32]+e[t-1+32*n];for(r>>=3,n=0;4>n;++n)i(e,t+32*n,r,4)}function Ct(e,t){var n=e[t-1+0],r=e[t-1+32],i=e[t-1+64],a=e[t-1-32],o=e[t+0-32],s=e[t+1-32],c=e[t+2-32],l=e[t+3-32];e[t+0+96]=Nt(r,i,e[t-1+96]),e[t+1+96]=e[t+0+64]=Nt(n,r,i),e[t+2+96]=e[t+1+64]=e[t+0+32]=Nt(a,n,r),e[t+3+96]=e[t+2+64]=e[t+1+32]=e[t+0+0]=Nt(o,a,n),e[t+3+64]=e[t+2+32]=e[t+1+0]=Nt(s,o,a),e[t+3+32]=e[t+2+0]=Nt(c,s,o),e[t+3+0]=Nt(l,c,s)}function Lt(e,t){var n=e[t+1-32],r=e[t+2-32],i=e[t+3-32],a=e[t+4-32],o=e[t+5-32],s=e[t+6-32],c=e[t+7-32];e[t+0+0]=Nt(e[t+0-32],n,r),e[t+1+0]=e[t+0+32]=Nt(n,r,i),e[t+2+0]=e[t+1+32]=e[t+0+64]=Nt(r,i,a),e[t+3+0]=e[t+2+32]=e[t+1+64]=e[t+0+96]=Nt(i,a,o),e[t+3+32]=e[t+2+64]=e[t+1+96]=Nt(a,o,s),e[t+3+64]=e[t+2+96]=Nt(o,s,c),e[t+3+96]=Nt(s,c,c)}function At(e,t){var n=e[t-1+0],r=e[t-1+32],i=e[t-1+64],a=e[t-1-32],o=e[t+0-32],s=e[t+1-32],c=e[t+2-32],l=e[t+3-32];e[t+0+0]=e[t+1+64]=a+o+1>>1,e[t+1+0]=e[t+2+64]=o+s+1>>1,e[t+2+0]=e[t+3+64]=s+c+1>>1,e[t+3+0]=c+l+1>>1,e[t+0+96]=Nt(i,r,n),e[t+0+64]=Nt(r,n,a),e[t+0+32]=e[t+1+96]=Nt(n,a,o),e[t+1+32]=e[t+2+96]=Nt(a,o,s),e[t+2+32]=e[t+3+96]=Nt(o,s,c),e[t+3+32]=Nt(s,c,l)}function Et(e,t){var n=e[t+0-32],r=e[t+1-32],i=e[t+2-32],a=e[t+3-32],o=e[t+4-32],s=e[t+5-32],c=e[t+6-32],l=e[t+7-32];e[t+0+0]=n+r+1>>1,e[t+1+0]=e[t+0+64]=r+i+1>>1,e[t+2+0]=e[t+1+64]=i+a+1>>1,e[t+3+0]=e[t+2+64]=a+o+1>>1,e[t+0+32]=Nt(n,r,i),e[t+1+32]=e[t+0+96]=Nt(r,i,a),e[t+2+32]=e[t+1+96]=Nt(i,a,o),e[t+3+32]=e[t+2+96]=Nt(a,o,s),e[t+3+64]=Nt(o,s,c),e[t+3+96]=Nt(s,c,l)}function Pt(e,t){var n=e[t-1+0],r=e[t-1+32],i=e[t-1+64],a=e[t-1+96];e[t+0+0]=n+r+1>>1,e[t+2+0]=e[t+0+32]=r+i+1>>1,e[t+2+32]=e[t+0+64]=i+a+1>>1,e[t+1+0]=Nt(n,r,i),e[t+3+0]=e[t+1+32]=Nt(r,i,a),e[t+3+32]=e[t+1+64]=Nt(i,a,a),e[t+3+64]=e[t+2+64]=e[t+0+96]=e[t+1+96]=e[t+2+96]=e[t+3+96]=a}function _t(e,t){var n=e[t-1+0],r=e[t-1+32],i=e[t-1+64],a=e[t-1+96],o=e[t-1-32],s=e[t+0-32],c=e[t+1-32],l=e[t+2-32];e[t+0+0]=e[t+2+32]=n+o+1>>1,e[t+0+32]=e[t+2+64]=r+n+1>>1,e[t+0+64]=e[t+2+96]=i+r+1>>1,e[t+0+96]=a+i+1>>1,e[t+3+0]=Nt(s,c,l),e[t+2+0]=Nt(o,s,c),e[t+1+0]=e[t+3+32]=Nt(n,o,s),e[t+1+32]=e[t+3+64]=Nt(r,n,o),e[t+1+64]=e[t+3+96]=Nt(i,r,n),e[t+1+96]=Nt(a,i,r)}function It(e,t){var n;for(n=0;8>n;++n)r(e,t+32*n,e,t-32,8)}function Ot(e,t){var n;for(n=0;8>n;++n)i(e,t,e[t-1],8),t+=32}function Mt(e,t,n){var r;for(r=0;8>r;++r)i(t,n+32*r,e,8)}function Dt(e,t){var n,r=8;for(n=0;8>n;++n)r+=e[t+n-32]+e[t-1+32*n];Mt(r>>4,e,t)}function Ft(e,t){var n,r=4;for(n=0;8>n;++n)r+=e[t+n-32];Mt(r>>3,e,t)}function Zt(e,t){var n,r=4;for(n=0;8>n;++n)r+=e[t-1+32*n];Mt(r>>3,e,t)}function jt(e,t){Mt(128,e,t)}function Rt(e,t,n){var r=e[t-n],i=e[t+0],a=3*(i-r)+Or[1020+e[t-2*n]-e[t+n]],o=Mr[112+(a+4>>3)];e[t-n]=Dr[255+r+Mr[112+(a+3>>3)]],e[t+0]=Dr[255+i-o]}function Tt(e,t,n,r){var i=e[t+0],a=e[t+n];return Fr[255+e[t-2*n]-e[t-n]]>r||Fr[255+a-i]>r}function Bt(e,t,n,r){return 4*Fr[255+e[t-n]-e[t+0]]+Fr[255+e[t-2*n]-e[t+n]]<=r}function qt(e,t,n,r,i){var a=e[t-3*n],o=e[t-2*n],s=e[t-n],c=e[t+0],l=e[t+n],u=e[t+2*n],f=e[t+3*n];return 4*Fr[255+s-c]+Fr[255+o-l]>r?0:Fr[255+e[t-4*n]-a]<=i&&Fr[255+a-o]<=i&&Fr[255+o-s]<=i&&Fr[255+f-u]<=i&&Fr[255+u-l]<=i&&Fr[255+l-c]<=i}function Kt(e,t,n,r){var i=2*r+1;for(r=0;16>r;++r)Bt(e,t+r,n,i)&&Rt(e,t+r,n)}function Ut(e,t,n,r){var i=2*r+1;for(r=0;16>r;++r)Bt(e,t+r*n,1,i)&&Rt(e,t+r*n,1)}function zt(e,t,n,r){var i;for(i=3;0<i;--i)Kt(e,t+=4*n,n,r)}function Ht(e,t,n,r){var i;for(i=3;0<i;--i)Ut(e,t+=4,n,r)}function Vt(e,t,n,r,i,a,o,s){for(a=2*a+1;0<i--;){if(qt(e,t,n,a,o))if(Tt(e,t,n,s))Rt(e,t,n);else{var c=e,l=t,u=n,f=c[l-2*u],d=c[l-u],h=c[l+0],p=c[l+u],v=c[l+2*u],m=27*(y=Or[1020+3*(h-d)+Or[1020+f-p]])+63>>7,g=18*y+63>>7,y=9*y+63>>7;c[l-3*u]=Dr[255+c[l-3*u]+y],c[l-2*u]=Dr[255+f+g],c[l-u]=Dr[255+d+m],c[l+0]=Dr[255+h-m],c[l+u]=Dr[255+p-g],c[l+2*u]=Dr[255+v-y]}t+=r}}function Wt(e,t,n,r,i,a,o,s){for(a=2*a+1;0<i--;){if(qt(e,t,n,a,o))if(Tt(e,t,n,s))Rt(e,t,n);else{var c=e,l=t,u=n,f=c[l-u],d=c[l+0],h=c[l+u],p=Mr[112+(4+(v=3*(d-f))>>3)],v=Mr[112+(v+3>>3)],m=p+1>>1;c[l-2*u]=Dr[255+c[l-2*u]+m],c[l-u]=Dr[255+f+v],c[l+0]=Dr[255+d-p],c[l+u]=Dr[255+h-m]}t+=r}}function Yt(e,t,n,r,i,a){Vt(e,t,n,1,16,r,i,a)}function Gt(e,t,n,r,i,a){Vt(e,t,1,n,16,r,i,a)}function $t(e,t,n,r,i,a){var o;for(o=3;0<o;--o)Wt(e,t+=4*n,n,1,16,r,i,a)}function Xt(e,t,n,r,i,a){var o;for(o=3;0<o;--o)Wt(e,t+=4,1,n,16,r,i,a)}function Jt(e,t,n,r,i,a,o,s){Vt(e,t,i,1,8,a,o,s),Vt(n,r,i,1,8,a,o,s)}function Qt(e,t,n,r,i,a,o,s){Vt(e,t,1,i,8,a,o,s),Vt(n,r,1,i,8,a,o,s)}function en(e,t,n,r,i,a,o,s){Wt(e,t+4*i,i,1,8,a,o,s),Wt(n,r+4*i,i,1,8,a,o,s)}function tn(e,t,n,r,i,a,o,s){Wt(e,t+4,1,i,8,a,o,s),Wt(n,r+4,1,i,8,a,o,s)}function nn(){this.ba=new oe,this.ec=[],this.cc=[],this.Mc=[],this.Dc=this.Nc=this.dc=this.fc=0,this.Oa=new ce,this.memory=0,this.Ib="OutputFunc",this.Jb="OutputAlphaFunc",this.Nd="OutputRowFunc"}function rn(){this.data=[],this.offset=this.kd=this.ha=this.w=0,this.na=[],this.xa=this.gb=this.Ja=this.Sa=this.P=0}function an(){this.nc=this.Ea=this.b=this.hc=0,this.K=[],this.w=0}function on(){this.ua=0,this.Wa=new F,this.vb=new F,this.md=this.xc=this.wc=0,this.vc=[],this.Wb=0,this.Ya=new h,this.yc=new f}function sn(){this.xb=this.a=0,this.l=new Ve,this.ca=new oe,this.V=[],this.Ba=0,this.Ta=[],this.Ua=0,this.m=new N,this.Pb=0,this.wd=new N,this.Ma=this.$=this.C=this.i=this.c=this.xd=0,this.s=new on,this.ab=0,this.gc=o(4,an),this.Oc=0}function cn(){this.Lc=this.Z=this.$a=this.i=this.c=0,this.l=new Ve,this.ic=0,this.ca=[],this.tb=0,this.qd=null,this.rd=0}function ln(e,t,n,r,i,a,o){for(e=null==e?0:e[t+0],t=0;t<o;++t)i[a+t]=e+n[r+t]&255,e=i[a+t]}function un(e,t,n,r,i,a,o){var s;if(null==e)ln(null,null,n,r,i,a,o);else for(s=0;s<o;++s)i[a+s]=e[t+s]+n[r+s]&255}function fn(e,t,n,r,i,a,o){if(null==e)ln(null,null,n,r,i,a,o);else{var s,c=e[t+0],l=c,u=c;for(s=0;s<o;++s)l=u+(c=e[t+s])-l,u=n[r+s]+(-256&l?0>l?0:255:l)&255,l=c,i[a+s]=u}}function dn(e,n,i,o){var s=n.width,c=n.o;if(t(null!=e&&null!=n),0>i||0>=o||i+o>c)return null;if(!e.Cc){if(null==e.ga){var l;if(e.ga=new cn,(l=null==e.ga)||(l=n.width*n.o,t(0==e.Gb.length),e.Gb=a(l),e.Uc=0,null==e.Gb?l=0:(e.mb=e.Gb,e.nb=e.Uc,e.rc=null,l=1),l=!l),!l){l=e.ga;var u=e.Fa,f=e.P,d=e.qc,h=e.mb,p=e.nb,v=f+1,m=d-1,y=l.l;if(t(null!=u&&null!=h&&null!=n),mi[0]=null,mi[1]=ln,mi[2]=un,mi[3]=fn,l.ca=h,l.tb=p,l.c=n.width,l.i=n.height,t(0<l.c&&0<l.i),1>=d)n=0;else if(l.$a=u[f+0]>>0&3,l.Z=u[f+0]>>2&3,l.Lc=u[f+0]>>4&3,f=u[f+0]>>6&3,0>l.$a||1<l.$a||4<=l.Z||1<l.Lc||f)n=0;else if(y.put=he,y.ac=de,y.bc=pe,y.ma=l,y.width=n.width,y.height=n.height,y.Da=n.Da,y.v=n.v,y.va=n.va,y.j=n.j,y.o=n.o,l.$a)e:{t(1==l.$a),n=Ee();t:for(;;){if(null==n){n=0;break e}if(t(null!=l),l.mc=n,n.c=l.c,n.i=l.i,n.l=l.l,n.l.ma=l,n.l.width=l.c,n.l.height=l.i,n.a=0,g(n.m,u,v,m),!Pe(l.c,l.i,1,n,null))break t;if(1==n.ab&&3==n.gc[0].hc&&Se(n.s)?(l.ic=1,u=n.c*n.i,n.Ta=null,n.Ua=0,n.V=a(u),n.Ba=0,null==n.V?(n.a=1,n=0):n=1):(l.ic=0,n=_e(n,l.c)),!n)break t;n=1;break e}l.mc=null,n=0}else n=m>=l.c*l.i;l=!n}if(l)return null;1!=e.ga.Lc?e.Ga=0:o=c-i}t(null!=e.ga),t(i+o<=c);e:{if(n=(u=e.ga).c,c=u.l.o,0==u.$a){if(v=e.rc,m=e.Vc,y=e.Fa,f=e.P+1+i*n,d=e.mb,h=e.nb+i*n,t(f<=e.P+e.qc),0!=u.Z)for(t(null!=mi[u.Z]),l=0;l<o;++l)mi[u.Z](v,m,y,f,d,h,n),v=d,m=h,h+=n,f+=n;else for(l=0;l<o;++l)r(d,h,y,f,n),v=d,m=h,h+=n,f+=n;e.rc=v,e.Vc=m}else{if(t(null!=u.mc),n=i+o,t(null!=(l=u.mc)),t(n<=l.i),l.C>=n)n=1;else if(u.ic||gn(),u.ic){u=l.V,v=l.Ba,m=l.c;var b=l.i,w=(y=1,f=l.$/m,d=l.$%m,h=l.m,p=l.s,l.$),N=m*b,x=m*n,k=p.wc,L=w<x?we(p,d,f):null;t(w<=N),t(n<=b),t(Se(p));t:for(;;){for(;!h.h&&w<x;){if(d&k||(L=we(p,d,f)),t(null!=L),C(h),256>(b=ye(L.G[0],L.H[0],h)))u[v+w]=b,++w,++d>=m&&(d=0,++f<=n&&!(f%16)&&Ce(l,f));else{if(!(280>b)){y=0;break t}b=me(b-256,h);var A,E=ye(L.G[4],L.H[4],h);if(C(h),!(w>=(E=ge(m,E=me(E,h)))&&N-w>=b)){y=0;break t}for(A=0;A<b;++A)u[v+w+A]=u[v+w+A-E];for(w+=b,d+=b;d>=m;)d-=m,++f<=n&&!(f%16)&&Ce(l,f);w<x&&d&k&&(L=we(p,d,f))}t(h.h==S(h))}Ce(l,f>n?n:f);break t}!y||h.h&&w<N?(y=0,l.a=h.h?5:3):l.$=w,n=y}else n=Le(l,l.V,l.Ba,l.c,l.i,n,Ie);if(!n){o=0;break e}}i+o>=c&&(e.Cc=1),o=1}if(!o)return null;if(e.Cc&&(null!=(o=e.ga)&&(o.mc=null),e.ga=null,0<e.Ga))return alert("todo:WebPDequantizeLevels"),null}return e.nb+i*s}function hn(e,t,n,r,i,a){for(;0<i--;){var o,s=e,c=t+(n?1:0),l=e,u=t+(n?0:3);for(o=0;o<r;++o){var f=l[u+4*o];255!=f&&(f*=32897,s[c+4*o+0]=s[c+4*o+0]*f>>23,s[c+4*o+1]=s[c+4*o+1]*f>>23,s[c+4*o+2]=s[c+4*o+2]*f>>23)}t+=a}}function pn(e,t,n,r,i){for(;0<r--;){var a;for(a=0;a<n;++a){var o=e[t+2*a+0],s=15&(l=e[t+2*a+1]),c=4369*s,l=(240&l|l>>4)*c>>16;e[t+2*a+0]=(240&o|o>>4)*c>>16&240|(15&o|o<<4)*c>>16>>4&15,e[t+2*a+1]=240&l|s}t+=i}}function vn(e,t,n,r,i,a,o,s){var c,l,u=255;for(l=0;l<i;++l){for(c=0;c<r;++c){var f=e[t+c];a[o+4*c]=f,u&=f}t+=n,o+=s}return 255!=u}function mn(e,t,n,r,i){var a;for(a=0;a<i;++a)n[r+a]=e[t+a]>>8}function gn(){Sr=hn,kr=pn,Cr=vn,Lr=mn}function yn(n,r,i){e[n]=function(e,n,a,o,s,c,l,u,f,d,h,p,v,m,g,y,b){var w,N=b-1>>1,x=s[c+0]|l[u+0]<<16,S=f[d+0]|h[p+0]<<16;t(null!=e);var k=3*x+S+131074>>2;for(r(e[n+0],255&k,k>>16,v,m),null!=a&&(k=3*S+x+131074>>2,r(a[o+0],255&k,k>>16,g,y)),w=1;w<=N;++w){var C=s[c+w]|l[u+w]<<16,L=f[d+w]|h[p+w]<<16,A=x+C+S+L+524296,E=A+2*(C+S)>>3;k=E+x>>1,x=(A=A+2*(x+L)>>3)+C>>1,r(e[n+2*w-1],255&k,k>>16,v,m+(2*w-1)*i),r(e[n+2*w-0],255&x,x>>16,v,m+(2*w-0)*i),null!=a&&(k=A+S>>1,x=E+L>>1,r(a[o+2*w-1],255&k,k>>16,g,y+(2*w-1)*i),r(a[o+2*w+0],255&x,x>>16,g,y+(2*w+0)*i)),x=C,S=L}1&b||(k=3*x+S+131074>>2,r(e[n+b-1],255&k,k>>16,v,m+(b-1)*i),null!=a&&(k=3*S+x+131074>>2,r(a[o+b-1],255&k,k>>16,g,y+(b-1)*i)))}}function bn(){gi[Zr]=yi,gi[jr]=wi,gi[Rr]=bi,gi[Tr]=Ni,gi[Br]=xi,gi[qr]=Si,gi[Kr]=ki,gi[Ur]=wi,gi[zr]=Ni,gi[Hr]=xi,gi[Vr]=Si}function wn(e){return e&~_i?0>e?0:255:e>>Pi}function Nn(e,t){return wn((19077*e>>8)+(26149*t>>8)-14234)}function xn(e,t,n){return wn((19077*e>>8)-(6419*t>>8)-(13320*n>>8)+8708)}function Sn(e,t){return wn((19077*e>>8)+(33050*t>>8)-17685)}function kn(e,t,n,r,i){r[i+0]=Nn(e,n),r[i+1]=xn(e,t,n),r[i+2]=Sn(e,t)}function Cn(e,t,n,r,i){r[i+0]=Sn(e,t),r[i+1]=xn(e,t,n),r[i+2]=Nn(e,n)}function Ln(e,t,n,r,i){var a=xn(e,t,n);t=a<<3&224|Sn(e,t)>>3,r[i+0]=248&Nn(e,n)|a>>5,r[i+1]=t}function An(e,t,n,r,i){var a=240&Sn(e,t)|15;r[i+0]=240&Nn(e,n)|xn(e,t,n)>>4,r[i+1]=a}function En(e,t,n,r,i){r[i+0]=255,kn(e,t,n,r,i+1)}function Pn(e,t,n,r,i){Cn(e,t,n,r,i),r[i+3]=255}function _n(e,t,n,r,i){kn(e,t,n,r,i),r[i+3]=255}function He(e,t){return 0>e?0:e>t?t:e}function In(t,n,r){e[t]=function(e,t,i,a,o,s,c,l,u){for(var f=l+(-2&u)*r;l!=f;)n(e[t+0],i[a+0],o[s+0],c,l),n(e[t+1],i[a+0],o[s+0],c,l+r),t+=2,++a,++s,l+=2*r;1&u&&n(e[t+0],i[a+0],o[s+0],c,l)}}function On(e,t,n){return 0==n?0==e?0==t?6:5:0==t?4:0:n}function Mn(e,t,n,r,i){switch(e>>>30){case 3:or(t,n,r,i,0);break;case 2:sr(t,n,r,i);break;case 1:lr(t,n,r,i)}}function Dn(e,t){var n,a,o=t.M,s=t.Nb,c=e.oc,l=e.pc+40,u=e.oc,f=e.pc+584,d=e.oc,h=e.pc+600;for(n=0;16>n;++n)c[l+32*n-1]=129;for(n=0;8>n;++n)u[f+32*n-1]=129,d[h+32*n-1]=129;for(0<o?c[l-1-32]=u[f-1-32]=d[h-1-32]=129:(i(c,l-32-1,127,21),i(u,f-32-1,127,9),i(d,h-32-1,127,9)),a=0;a<e.za;++a){var p=t.ya[t.aa+a];if(0<a){for(n=-1;16>n;++n)r(c,l+32*n-4,c,l+32*n+12,4);for(n=-1;8>n;++n)r(u,f+32*n-4,u,f+32*n+4,4),r(d,h+32*n-4,d,h+32*n+4,4)}var v=e.Gd,m=e.Hd+a,g=p.ad,y=p.Hc;if(0<o&&(r(c,l-32,v[m].y,0,16),r(u,f-32,v[m].f,0,8),r(d,h-32,v[m].ea,0,8)),p.Za){var b=c,w=l-32+16;for(0<o&&(a>=e.za-1?i(b,w,v[m].y[15],4):r(b,w,v[m+1].y,0,4)),n=0;4>n;n++)b[w+128+n]=b[w+256+n]=b[w+384+n]=b[w+0+n];for(n=0;16>n;++n,y<<=2)b=c,w=l+Ri[n],di[p.Ob[n]](b,w),Mn(y,g,16*+n,b,w)}else if(b=On(a,o,p.Ob[0]),fi[b](c,l),0!=y)for(n=0;16>n;++n,y<<=2)Mn(y,g,16*+n,c,l+Ri[n]);for(n=p.Gc,b=On(a,o,p.Dd),hi[b](u,f),hi[b](d,h),y=g,b=u,w=f,255&(p=n>>0)&&(170&p?cr(y,256,b,w):ur(y,256,b,w)),p=d,y=h,255&(n>>=8)&&(170&n?cr(g,320,p,y):ur(g,320,p,y)),o<e.Ub-1&&(r(v[m].y,0,c,l+480,16),r(v[m].f,0,u,f+224,8),r(v[m].ea,0,d,h+224,8)),n=8*s*e.B,v=e.sa,m=e.ta+16*a+16*s*e.R,g=e.qa,p=e.ra+8*a+n,y=e.Ha,b=e.Ia+8*a+n,n=0;16>n;++n)r(v,m+n*e.R,c,l+32*n,16);for(n=0;8>n;++n)r(g,p+n*e.B,u,f+32*n,8),r(y,b+n*e.B,d,h+32*n,8)}}function Fn(e,r,i,a,o,s,c,l,u){var f=[0],d=[0],h=0,p=null!=u?u.kd:0,v=null!=u?u:new rn;if(null==e||12>i)return 7;v.data=e,v.w=r,v.ha=i,r=[r],i=[i],v.gb=[v.gb];e:{var m=r,y=i,b=v.gb;if(t(null!=e),t(null!=y),t(null!=b),b[0]=0,12<=y[0]&&!n(e,m[0],"RIFF")){if(n(e,m[0]+8,"WEBP")){b=3;break e}var w=O(e,m[0]+4);if(12>w||4294967286<w){b=3;break e}if(p&&w>y[0]-8){b=7;break e}b[0]=w,m[0]+=12,y[0]-=12}b=0}if(0!=b)return b;for(w=0<v.gb[0],i=i[0];;){e:{var x=e;y=r,b=i;var S=f,k=d,C=m=[0];if((E=h=[h])[0]=0,8>b[0])b=7;else{if(!n(x,y[0],"VP8X")){if(10!=O(x,y[0]+4)){b=3;break e}if(18>b[0]){b=7;break e}var L=O(x,y[0]+8),A=1+I(x,y[0]+12);if(2147483648<=A*(x=1+I(x,y[0]+15))){b=3;break e}null!=C&&(C[0]=L),null!=S&&(S[0]=A),null!=k&&(k[0]=x),y[0]+=18,b[0]-=18,E[0]=1}b=0}}if(h=h[0],m=m[0],0!=b)return b;if(y=!!(2&m),!w&&h)return 3;if(null!=s&&(s[0]=!!(16&m)),null!=c&&(c[0]=y),null!=l&&(l[0]=0),c=f[0],m=d[0],h&&y&&null==u){b=0;break}if(4>i){b=7;break}if(w&&h||!w&&!h&&!n(e,r[0],"ALPH")){i=[i],v.na=[v.na],v.P=[v.P],v.Sa=[v.Sa];e:{L=e,b=r,w=i;var E=v.gb;S=v.na,k=v.P,C=v.Sa,A=22,t(null!=L),t(null!=w),x=b[0];var P=w[0];for(t(null!=S),t(null!=C),S[0]=null,k[0]=null,C[0]=0;;){if(b[0]=x,w[0]=P,8>P){b=7;break e}var _=O(L,x+4);if(4294967286<_){b=3;break e}var M=8+_+1&-2;if(A+=M,0<E&&A>E){b=3;break e}if(!n(L,x,"VP8 ")||!n(L,x,"VP8L")){b=0;break e}if(P[0]<M){b=7;break e}n(L,x,"ALPH")||(S[0]=L,k[0]=x+8,C[0]=_),x+=M,P-=M}}if(i=i[0],v.na=v.na[0],v.P=v.P[0],v.Sa=v.Sa[0],0!=b)break}i=[i],v.Ja=[v.Ja],v.xa=[v.xa];e:if(E=e,b=r,w=i,S=v.gb[0],k=v.Ja,C=v.xa,L=b[0],x=!n(E,L,"VP8 "),A=!n(E,L,"VP8L"),t(null!=E),t(null!=w),t(null!=k),t(null!=C),8>w[0])b=7;else{if(x||A){if(E=O(E,L+4),12<=S&&E>S-12){b=3;break e}if(p&&E>w[0]-8){b=7;break e}k[0]=E,b[0]+=8,w[0]-=8,C[0]=A}else C[0]=5<=w[0]&&47==E[L+0]&&!(E[L+4]>>5),k[0]=w[0];b=0}if(i=i[0],v.Ja=v.Ja[0],v.xa=v.xa[0],r=r[0],0!=b)break;if(4294967286<v.Ja)return 3;if(null==l||y||(l[0]=v.xa?2:1),c=[c],m=[m],v.xa){if(5>i){b=7;break}l=c,p=m,y=s,null==e||5>i?e=0:5<=i&&47==e[r+0]&&!(e[r+4]>>5)?(w=[0],E=[0],S=[0],g(k=new N,e,r,i),ve(k,w,E,S)?(null!=l&&(l[0]=w[0]),null!=p&&(p[0]=E[0]),null!=y&&(y[0]=S[0]),e=1):e=0):e=0}else{if(10>i){b=7;break}l=m,null==e||10>i||!Ge(e,r+3,i-3)?e=0:(p=e[r+0]|e[r+1]<<8|e[r+2]<<16,y=16383&(e[r+7]<<8|e[r+6]),e=16383&(e[r+9]<<8|e[r+8]),1&p||3<(p>>1&7)||!(p>>4&1)||p>>5>=v.Ja||!y||!e?e=0:(c&&(c[0]=y),l&&(l[0]=e),e=1))}if(!e)return 3;if(c=c[0],m=m[0],h&&(f[0]!=c||d[0]!=m))return 3;null!=u&&(u[0]=v,u.offset=r-u.w,t(4294967286>r-u.w),t(u.offset==u.ha-i));break}return 0==b||7==b&&h&&null==u?(null!=s&&(s[0]|=null!=v.na&&0<v.na.length),null!=a&&(a[0]=c),null!=o&&(o[0]=m),0):b}function Zn(e,t,n){var r=t.width,i=t.height,a=0,o=0,s=r,c=i;if(t.Da=null!=e&&0<e.Da,t.Da&&(s=e.cd,c=e.bd,a=e.v,o=e.j,11>n||(a&=-2,o&=-2),0>a||0>o||0>=s||0>=c||a+s>r||o+c>i))return 0;if(t.v=a,t.j=o,t.va=a+s,t.o=o+c,t.U=s,t.T=c,t.da=null!=e&&0<e.da,t.da){if(!Z(s,c,n=[e.ib],a=[e.hb]))return 0;t.ib=n[0],t.hb=a[0]}return t.ob=null!=e&&e.ob,t.Kb=null==e||!e.Sd,t.da&&(t.ob=t.ib<3*r/4&&t.hb<3*i/4,t.Kb=0),1}function jn(e){if(null==e)return 2;if(11>e.S){var t=e.f.RGBA;t.fb+=(e.height-1)*t.A,t.A=-t.A}else t=e.f.kb,e=e.height,t.O+=(e-1)*t.fa,t.fa=-t.fa,t.N+=(e-1>>1)*t.Ab,t.Ab=-t.Ab,t.W+=(e-1>>1)*t.Db,t.Db=-t.Db,null!=t.F&&(t.J+=(e-1)*t.lb,t.lb=-t.lb);return 0}function Rn(e,t,n,r){if(null==r||0>=e||0>=t)return 2;if(null!=n){if(n.Da){var i=n.cd,o=n.bd,s=-2&n.v,c=-2&n.j;if(0>s||0>c||0>=i||0>=o||s+i>e||c+o>t)return 2;e=i,t=o}if(n.da){if(!Z(e,t,i=[n.ib],o=[n.hb]))return 2;e=i[0],t=o[0]}}r.width=e,r.height=t;e:{var l=r.width,u=r.height;if(e=r.S,0>=l||0>=u||!(e>=Zr&&13>e))e=2;else{if(0>=r.Rd&&null==r.sd){s=o=i=t=0;var f=(c=l*Ki[e])*u;if(11>e||(o=(u+1)/2*(t=(l+1)/2),12==e&&(s=(i=l)*u)),null==(u=a(f+2*o+s))){e=1;break e}r.sd=u,11>e?((l=r.f.RGBA).eb=u,l.fb=0,l.A=c,l.size=f):((l=r.f.kb).y=u,l.O=0,l.fa=c,l.Fd=f,l.f=u,l.N=0+f,l.Ab=t,l.Cd=o,l.ea=u,l.W=0+f+o,l.Db=t,l.Ed=o,12==e&&(l.F=u,l.J=0+f+2*o),l.Tc=s,l.lb=i)}if(t=1,i=r.S,o=r.width,s=r.height,i>=Zr&&13>i)if(11>i)e=r.f.RGBA,t&=(c=Math.abs(e.A))*(s-1)+o<=e.size,t&=c>=o*Ki[i],t&=null!=e.eb;else{e=r.f.kb,c=(o+1)/2,f=(s+1)/2,l=Math.abs(e.fa),u=Math.abs(e.Ab);var d=Math.abs(e.Db),h=Math.abs(e.lb),p=h*(s-1)+o;t&=l*(s-1)+o<=e.Fd,t&=u*(f-1)+c<=e.Cd,t=(t&=d*(f-1)+c<=e.Ed)&l>=o&u>=c&d>=c,t&=null!=e.y,t&=null!=e.f,t&=null!=e.ea,12==i&&(t&=h>=o,t&=p<=e.Tc,t&=null!=e.F)}else t=0;e=t?0:2}}return 0!=e||null!=n&&n.fd&&(e=jn(r)),e}var Tn=64,Bn=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215],qn=24,Kn=32,Un=8,zn=[0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7];T("Predictor0","PredictorAdd0"),e.Predictor0=function(){return 4278190080},e.Predictor1=function(e){return e},e.Predictor2=function(e,t,n){return t[n+0]},e.Predictor3=function(e,t,n){return t[n+1]},e.Predictor4=function(e,t,n){return t[n-1]},e.Predictor5=function(e,t,n){return q(q(e,t[n+1]),t[n+0])},e.Predictor6=function(e,t,n){return q(e,t[n-1])},e.Predictor7=function(e,t,n){return q(e,t[n+0])},e.Predictor8=function(e,t,n){return q(t[n-1],t[n+0])},e.Predictor9=function(e,t,n){return q(t[n+0],t[n+1])},e.Predictor10=function(e,t,n){return q(q(e,t[n-1]),q(t[n+0],t[n+1]))},e.Predictor11=function(e,t,n){var r=t[n+0];return 0>=z(r>>24&255,e>>24&255,(t=t[n-1])>>24&255)+z(r>>16&255,e>>16&255,t>>16&255)+z(r>>8&255,e>>8&255,t>>8&255)+z(255&r,255&e,255&t)?r:e},e.Predictor12=function(e,t,n){var r=t[n+0];return(K((e>>24&255)+(r>>24&255)-((t=t[n-1])>>24&255))<<24|K((e>>16&255)+(r>>16&255)-(t>>16&255))<<16|K((e>>8&255)+(r>>8&255)-(t>>8&255))<<8|K((255&e)+(255&r)-(255&t)))>>>0},e.Predictor13=function(e,t,n){var r=t[n-1];return(U((e=q(e,t[n+0]))>>24&255,r>>24&255)<<24|U(e>>16&255,r>>16&255)<<16|U(e>>8&255,r>>8&255)<<8|U(e>>0&255,r>>0&255))>>>0};var Hn=e.PredictorAdd0;e.PredictorAdd1=H,T("Predictor2","PredictorAdd2"),T("Predictor3","PredictorAdd3"),T("Predictor4","PredictorAdd4"),T("Predictor5","PredictorAdd5"),T("Predictor6","PredictorAdd6"),T("Predictor7","PredictorAdd7"),T("Predictor8","PredictorAdd8"),T("Predictor9","PredictorAdd9"),T("Predictor10","PredictorAdd10"),T("Predictor11","PredictorAdd11"),T("Predictor12","PredictorAdd12"),T("Predictor13","PredictorAdd13");var Vn=e.PredictorAdd2;G("ColorIndexInverseTransform","MapARGB","32b",(function(e){return e>>8&255}),(function(e){return e})),G("VP8LColorIndexInverseTransformAlpha","MapAlpha","8b",(function(e){return e}),(function(e){return e>>8&255}));var Wn,Yn=e.ColorIndexInverseTransform,Gn=e.MapARGB,$n=e.VP8LColorIndexInverseTransformAlpha,Xn=e.MapAlpha,Jn=e.VP8LPredictorsAdd=[];Jn.length=16,(e.VP8LPredictors=[]).length=16,(e.VP8LPredictorsAdd_C=[]).length=16,(e.VP8LPredictors_C=[]).length=16;var Qn,er,tr,nr,rr,ir,ar,or,sr,cr,lr,ur,fr,dr,hr,pr,vr,mr,gr,yr,br,wr,Nr,xr,Sr,kr,Cr,Lr,Ar=a(511),Er=a(2041),Pr=a(225),_r=a(767),Ir=0,Or=Er,Mr=Pr,Dr=_r,Fr=Ar,Zr=0,jr=1,Rr=2,Tr=3,Br=4,qr=5,Kr=6,Ur=7,zr=8,Hr=9,Vr=10,Wr=[2,3,7],Yr=[3,3,11],Gr=[280,256,256,256,40],$r=[0,1,1,1,0],Xr=[17,18,0,1,2,3,4,5,16,6,7,8,9,10,11,12,13,14,15],Jr=[24,7,23,25,40,6,39,41,22,26,38,42,56,5,55,57,21,27,54,58,37,43,72,4,71,73,20,28,53,59,70,74,36,44,88,69,75,52,60,3,87,89,19,29,86,90,35,45,68,76,85,91,51,61,104,2,103,105,18,30,102,106,34,46,84,92,67,77,101,107,50,62,120,1,119,121,83,93,17,31,100,108,66,78,118,122,33,47,117,123,49,63,99,109,82,94,0,116,124,65,79,16,32,98,110,48,115,125,81,95,64,114,126,97,111,80,113,127,96,112],Qr=[2954,2956,2958,2962,2970,2986,3018,3082,3212,3468,3980,5004],ei=8,ti=[4,5,6,7,8,9,10,10,11,12,13,14,15,16,17,17,18,19,20,20,21,21,22,22,23,23,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,37,38,39,40,41,42,43,44,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,100,101,102,104,106,108,110,112,114,116,118,122,124,126,128,130,132,134,136,138,140,143,145,148,151,154,157],ni=[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,177,181,185,189,193,197,201,205,209,213,217,221,225,229,234,239,245,249,254,259,264,269,274,279,284],ri=null,ii=[[173,148,140,0],[176,155,140,135,0],[180,157,141,134,130,0],[254,254,243,230,196,177,153,140,133,130,129,0]],ai=[0,1,4,8,5,2,3,6,9,12,13,10,7,11,14,15],oi=[-0,1,-1,2,-2,3,4,6,-3,5,-4,-5,-6,7,-7,8,-8,-9],si=[[[[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128]],[[253,136,254,255,228,219,128,128,128,128,128],[189,129,242,255,227,213,255,219,128,128,128],[106,126,227,252,214,209,255,255,128,128,128]],[[1,98,248,255,236,226,255,255,128,128,128],[181,133,238,254,221,234,255,154,128,128,128],[78,134,202,247,198,180,255,219,128,128,128]],[[1,185,249,255,243,255,128,128,128,128,128],[184,150,247,255,236,224,128,128,128,128,128],[77,110,216,255,236,230,128,128,128,128,128]],[[1,101,251,255,241,255,128,128,128,128,128],[170,139,241,252,236,209,255,255,128,128,128],[37,116,196,243,228,255,255,255,128,128,128]],[[1,204,254,255,245,255,128,128,128,128,128],[207,160,250,255,238,128,128,128,128,128,128],[102,103,231,255,211,171,128,128,128,128,128]],[[1,152,252,255,240,255,128,128,128,128,128],[177,135,243,255,234,225,128,128,128,128,128],[80,129,211,255,194,224,128,128,128,128,128]],[[1,1,255,128,128,128,128,128,128,128,128],[246,1,255,128,128,128,128,128,128,128,128],[255,128,128,128,128,128,128,128,128,128,128]]],[[[198,35,237,223,193,187,162,160,145,155,62],[131,45,198,221,172,176,220,157,252,221,1],[68,47,146,208,149,167,221,162,255,223,128]],[[1,149,241,255,221,224,255,255,128,128,128],[184,141,234,253,222,220,255,199,128,128,128],[81,99,181,242,176,190,249,202,255,255,128]],[[1,129,232,253,214,197,242,196,255,255,128],[99,121,210,250,201,198,255,202,128,128,128],[23,91,163,242,170,187,247,210,255,255,128]],[[1,200,246,255,234,255,128,128,128,128,128],[109,178,241,255,231,245,255,255,128,128,128],[44,130,201,253,205,192,255,255,128,128,128]],[[1,132,239,251,219,209,255,165,128,128,128],[94,136,225,251,218,190,255,255,128,128,128],[22,100,174,245,186,161,255,199,128,128,128]],[[1,182,249,255,232,235,128,128,128,128,128],[124,143,241,255,227,234,128,128,128,128,128],[35,77,181,251,193,211,255,205,128,128,128]],[[1,157,247,255,236,231,255,255,128,128,128],[121,141,235,255,225,227,255,255,128,128,128],[45,99,188,251,195,217,255,224,128,128,128]],[[1,1,251,255,213,255,128,128,128,128,128],[203,1,248,255,255,128,128,128,128,128,128],[137,1,177,255,224,255,128,128,128,128,128]]],[[[253,9,248,251,207,208,255,192,128,128,128],[175,13,224,243,193,185,249,198,255,255,128],[73,17,171,221,161,179,236,167,255,234,128]],[[1,95,247,253,212,183,255,255,128,128,128],[239,90,244,250,211,209,255,255,128,128,128],[155,77,195,248,188,195,255,255,128,128,128]],[[1,24,239,251,218,219,255,205,128,128,128],[201,51,219,255,196,186,128,128,128,128,128],[69,46,190,239,201,218,255,228,128,128,128]],[[1,191,251,255,255,128,128,128,128,128,128],[223,165,249,255,213,255,128,128,128,128,128],[141,124,248,255,255,128,128,128,128,128,128]],[[1,16,248,255,255,128,128,128,128,128,128],[190,36,230,255,236,255,128,128,128,128,128],[149,1,255,128,128,128,128,128,128,128,128]],[[1,226,255,128,128,128,128,128,128,128,128],[247,192,255,128,128,128,128,128,128,128,128],[240,128,255,128,128,128,128,128,128,128,128]],[[1,134,252,255,255,128,128,128,128,128,128],[213,62,250,255,255,128,128,128,128,128,128],[55,93,255,128,128,128,128,128,128,128,128]],[[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128]]],[[[202,24,213,235,186,191,220,160,240,175,255],[126,38,182,232,169,184,228,174,255,187,128],[61,46,138,219,151,178,240,170,255,216,128]],[[1,112,230,250,199,191,247,159,255,255,128],[166,109,228,252,211,215,255,174,128,128,128],[39,77,162,232,172,180,245,178,255,255,128]],[[1,52,220,246,198,199,249,220,255,255,128],[124,74,191,243,183,193,250,221,255,255,128],[24,71,130,219,154,170,243,182,255,255,128]],[[1,182,225,249,219,240,255,224,128,128,128],[149,150,226,252,216,205,255,171,128,128,128],[28,108,170,242,183,194,254,223,255,255,128]],[[1,81,230,252,204,203,255,192,128,128,128],[123,102,209,247,188,196,255,233,128,128,128],[20,95,153,243,164,173,255,203,128,128,128]],[[1,222,248,255,216,213,128,128,128,128,128],[168,175,246,252,235,205,255,255,128,128,128],[47,116,215,255,211,212,255,255,128,128,128]],[[1,121,236,253,212,214,255,255,128,128,128],[141,84,213,252,201,202,255,219,128,128,128],[42,80,160,240,162,185,255,205,128,128,128]],[[1,1,255,128,128,128,128,128,128,128,128],[244,1,255,128,128,128,128,128,128,128,128],[238,1,255,128,128,128,128,128,128,128,128]]]],ci=[[[231,120,48,89,115,113,120,152,112],[152,179,64,126,170,118,46,70,95],[175,69,143,80,85,82,72,155,103],[56,58,10,171,218,189,17,13,152],[114,26,17,163,44,195,21,10,173],[121,24,80,195,26,62,44,64,85],[144,71,10,38,171,213,144,34,26],[170,46,55,19,136,160,33,206,71],[63,20,8,114,114,208,12,9,226],[81,40,11,96,182,84,29,16,36]],[[134,183,89,137,98,101,106,165,148],[72,187,100,130,157,111,32,75,80],[66,102,167,99,74,62,40,234,128],[41,53,9,178,241,141,26,8,107],[74,43,26,146,73,166,49,23,157],[65,38,105,160,51,52,31,115,128],[104,79,12,27,217,255,87,17,7],[87,68,71,44,114,51,15,186,23],[47,41,14,110,182,183,21,17,194],[66,45,25,102,197,189,23,18,22]],[[88,88,147,150,42,46,45,196,205],[43,97,183,117,85,38,35,179,61],[39,53,200,87,26,21,43,232,171],[56,34,51,104,114,102,29,93,77],[39,28,85,171,58,165,90,98,64],[34,22,116,206,23,34,43,166,73],[107,54,32,26,51,1,81,43,31],[68,25,106,22,64,171,36,225,114],[34,19,21,102,132,188,16,76,124],[62,18,78,95,85,57,50,48,51]],[[193,101,35,159,215,111,89,46,111],[60,148,31,172,219,228,21,18,111],[112,113,77,85,179,255,38,120,114],[40,42,1,196,245,209,10,25,109],[88,43,29,140,166,213,37,43,154],[61,63,30,155,67,45,68,1,209],[100,80,8,43,154,1,51,26,71],[142,78,78,16,255,128,34,197,171],[41,40,5,102,211,183,4,1,221],[51,50,17,168,209,192,23,25,82]],[[138,31,36,171,27,166,38,44,229],[67,87,58,169,82,115,26,59,179],[63,59,90,180,59,166,93,73,154],[40,40,21,116,143,209,34,39,175],[47,15,16,183,34,223,49,45,183],[46,17,33,183,6,98,15,32,183],[57,46,22,24,128,1,54,17,37],[65,32,73,115,28,128,23,128,205],[40,3,9,115,51,192,18,6,223],[87,37,9,115,59,77,64,21,47]],[[104,55,44,218,9,54,53,130,226],[64,90,70,205,40,41,23,26,57],[54,57,112,184,5,41,38,166,213],[30,34,26,133,152,116,10,32,134],[39,19,53,221,26,114,32,73,255],[31,9,65,234,2,15,1,118,73],[75,32,12,51,192,255,160,43,51],[88,31,35,67,102,85,55,186,85],[56,21,23,111,59,205,45,37,192],[55,38,70,124,73,102,1,34,98]],[[125,98,42,88,104,85,117,175,82],[95,84,53,89,128,100,113,101,45],[75,79,123,47,51,128,81,171,1],[57,17,5,71,102,57,53,41,49],[38,33,13,121,57,73,26,1,85],[41,10,67,138,77,110,90,47,114],[115,21,2,10,102,255,166,23,6],[101,29,16,10,85,128,101,196,26],[57,18,10,102,102,213,34,20,43],[117,20,15,36,163,128,68,1,26]],[[102,61,71,37,34,53,31,243,192],[69,60,71,38,73,119,28,222,37],[68,45,128,34,1,47,11,245,171],[62,17,19,70,146,85,55,62,70],[37,43,37,154,100,163,85,160,1],[63,9,92,136,28,64,32,201,85],[75,15,9,9,64,255,184,119,16],[86,6,28,5,64,255,25,248,1],[56,8,17,132,137,255,55,116,128],[58,15,20,82,135,57,26,121,40]],[[164,50,31,137,154,133,25,35,218],[51,103,44,131,131,123,31,6,158],[86,40,64,135,148,224,45,183,128],[22,26,17,131,240,154,14,1,209],[45,16,21,91,64,222,7,1,197],[56,21,39,155,60,138,23,102,213],[83,12,13,54,192,255,68,47,28],[85,26,85,85,128,128,32,146,171],[18,11,7,63,144,171,4,4,246],[35,27,10,146,174,171,12,26,128]],[[190,80,35,99,180,80,126,54,45],[85,126,47,87,176,51,41,20,32],[101,75,128,139,118,146,116,128,85],[56,41,15,176,236,85,37,9,62],[71,30,17,119,118,255,17,18,138],[101,38,60,138,55,70,43,26,142],[146,36,19,30,171,255,97,27,20],[138,45,61,62,219,1,81,188,64],[32,41,20,117,151,142,20,21,163],[112,19,12,61,195,128,48,4,24]]],li=[[[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[176,246,255,255,255,255,255,255,255,255,255],[223,241,252,255,255,255,255,255,255,255,255],[249,253,253,255,255,255,255,255,255,255,255]],[[255,244,252,255,255,255,255,255,255,255,255],[234,254,254,255,255,255,255,255,255,255,255],[253,255,255,255,255,255,255,255,255,255,255]],[[255,246,254,255,255,255,255,255,255,255,255],[239,253,254,255,255,255,255,255,255,255,255],[254,255,254,255,255,255,255,255,255,255,255]],[[255,248,254,255,255,255,255,255,255,255,255],[251,255,254,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,253,254,255,255,255,255,255,255,255,255],[251,254,254,255,255,255,255,255,255,255,255],[254,255,254,255,255,255,255,255,255,255,255]],[[255,254,253,255,254,255,255,255,255,255,255],[250,255,254,255,254,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]],[[[217,255,255,255,255,255,255,255,255,255,255],[225,252,241,253,255,255,254,255,255,255,255],[234,250,241,250,253,255,253,254,255,255,255]],[[255,254,255,255,255,255,255,255,255,255,255],[223,254,254,255,255,255,255,255,255,255,255],[238,253,254,254,255,255,255,255,255,255,255]],[[255,248,254,255,255,255,255,255,255,255,255],[249,254,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,253,255,255,255,255,255,255,255,255,255],[247,254,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,253,254,255,255,255,255,255,255,255,255],[252,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,254,254,255,255,255,255,255,255,255,255],[253,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,254,253,255,255,255,255,255,255,255,255],[250,255,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]],[[[186,251,250,255,255,255,255,255,255,255,255],[234,251,244,254,255,255,255,255,255,255,255],[251,251,243,253,254,255,254,255,255,255,255]],[[255,253,254,255,255,255,255,255,255,255,255],[236,253,254,255,255,255,255,255,255,255,255],[251,253,253,254,254,255,255,255,255,255,255]],[[255,254,254,255,255,255,255,255,255,255,255],[254,254,254,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,254,255,255,255,255,255,255,255,255,255],[254,254,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]],[[[248,255,255,255,255,255,255,255,255,255,255],[250,254,252,254,255,255,255,255,255,255,255],[248,254,249,253,255,255,255,255,255,255,255]],[[255,253,253,255,255,255,255,255,255,255,255],[246,253,253,255,255,255,255,255,255,255,255],[252,254,251,254,254,255,255,255,255,255,255]],[[255,254,252,255,255,255,255,255,255,255,255],[248,254,253,255,255,255,255,255,255,255,255],[253,255,254,254,255,255,255,255,255,255,255]],[[255,251,254,255,255,255,255,255,255,255,255],[245,251,254,255,255,255,255,255,255,255,255],[253,253,254,255,255,255,255,255,255,255,255]],[[255,251,253,255,255,255,255,255,255,255,255],[252,253,254,255,255,255,255,255,255,255,255],[255,254,255,255,255,255,255,255,255,255,255]],[[255,252,255,255,255,255,255,255,255,255,255],[249,255,254,255,255,255,255,255,255,255,255],[255,255,254,255,255,255,255,255,255,255,255]],[[255,255,253,255,255,255,255,255,255,255,255],[250,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]]],ui=[0,1,2,3,6,4,5,6,6,6,6,6,6,6,6,7,0],fi=[],di=[],hi=[],pi=1,vi=2,mi=[],gi=[];yn("UpsampleRgbLinePair",kn,3),yn("UpsampleBgrLinePair",Cn,3),yn("UpsampleRgbaLinePair",_n,4),yn("UpsampleBgraLinePair",Pn,4),yn("UpsampleArgbLinePair",En,4),yn("UpsampleRgba4444LinePair",An,2),yn("UpsampleRgb565LinePair",Ln,2);var yi=e.UpsampleRgbLinePair,bi=e.UpsampleBgrLinePair,wi=e.UpsampleRgbaLinePair,Ni=e.UpsampleBgraLinePair,xi=e.UpsampleArgbLinePair,Si=e.UpsampleRgba4444LinePair,ki=e.UpsampleRgb565LinePair,Ci=16,Li=1<<Ci-1,Ai=-227,Ei=482,Pi=6,_i=(256<<Pi)-1,Ii=0,Oi=a(256),Mi=a(256),Di=a(256),Fi=a(256),Zi=a(Ei-Ai),ji=a(Ei-Ai);In("YuvToRgbRow",kn,3),In("YuvToBgrRow",Cn,3),In("YuvToRgbaRow",_n,4),In("YuvToBgraRow",Pn,4),In("YuvToArgbRow",En,4),In("YuvToRgba4444Row",An,2),In("YuvToRgb565Row",Ln,2);var Ri=[0,4,8,12,128,132,136,140,256,260,264,268,384,388,392,396],Ti=[0,2,8],Bi=[8,7,6,4,4,2,2,2,1,1,1,1],qi=1;this.WebPDecodeRGBA=function(e,n,r,i,a){var o=jr,s=new nn,c=new oe;s.ba=c,c.S=o,c.width=[c.width],c.height=[c.height];var l=c.width,u=c.height,f=new se;if(null==f||null==e)var d=2;else t(null!=f),d=Fn(e,n,r,f.width,f.height,f.Pd,f.Qd,f.format,null);if(0!=d?l=0:(null!=l&&(l[0]=f.width[0]),null!=u&&(u[0]=f.height[0]),l=1),l){c.width=c.width[0],c.height=c.height[0],null!=i&&(i[0]=c.width),null!=a&&(a[0]=c.height);e:{if(i=new Ve,(a=new rn).data=e,a.w=n,a.ha=r,a.kd=1,n=[0],t(null!=a),(0==(e=Fn(a.data,a.w,a.ha,null,null,null,n,null,a))||7==e)&&n[0]&&(e=4),0==(n=e)){if(t(null!=s),i.data=a.data,i.w=a.w+a.offset,i.ha=a.ha-a.offset,i.put=he,i.ac=de,i.bc=pe,i.ma=s,a.xa){if(null==(e=Ee())){s=1;break e}if(function(e,n){var r=[0],i=[0],a=[0];t:for(;;){if(null==e)return 0;if(null==n)return e.a=2,0;if(e.l=n,e.a=0,g(e.m,n.data,n.w,n.ha),!ve(e.m,r,i,a)){e.a=3;break t}if(e.xb=vi,n.width=r[0],n.height=i[0],!Pe(r[0],i[0],1,e,null))break t;return 1}return t(0!=e.a),0}(e,i)){if(i=0==(n=Rn(i.width,i.height,s.Oa,s.ba))){t:{i=e;n:for(;;){if(null==i){i=0;break t}if(t(null!=i.s.yc),t(null!=i.s.Ya),t(0<i.s.Wb),t(null!=(r=i.l)),t(null!=(a=r.ma)),0!=i.xb){if(i.ca=a.ba,i.tb=a.tb,t(null!=i.ca),!Zn(a.Oa,r,Tr)){i.a=2;break n}if(!_e(i,r.width))break n;if(r.da)break n;if((r.da||re(i.ca.S))&&gn(),11>i.ca.S||(alert("todo:WebPInitConvertARGBToYUV"),null!=i.ca.f.kb.F&&gn()),i.Pb&&0<i.s.ua&&null==i.s.vb.X&&!M(i.s.vb,i.s.Wa.Xa)){i.a=1;break n}i.xb=0}if(!Le(i,i.V,i.Ba,i.c,i.i,r.o,xe))break n;a.Dc=i.Ma,i=1;break t}t(0!=i.a),i=0}i=!i}i&&(n=e.a)}else n=e.a}else{if(null==(e=new We)){s=1;break e}if(e.Fa=a.na,e.P=a.P,e.qc=a.Sa,$e(e,i)){if(0==(n=Rn(i.width,i.height,s.Oa,s.ba))){if(e.Aa=0,r=s.Oa,t(null!=(a=e)),null!=r){if(0<(l=0>(l=r.Md)?0:100<l?255:255*l/100)){for(u=f=0;4>u;++u)12>(d=a.pb[u]).lc&&(d.ia=l*Bi[0>d.lc?0:d.lc]>>3),f|=d.ia;f&&(alert("todo:VP8InitRandom"),a.ia=1)}a.Ga=r.Id,100<a.Ga?a.Ga=100:0>a.Ga&&(a.Ga=0)}Qe(e,i)||(n=e.a)}}else n=e.a}0==n&&null!=s.Oa&&s.Oa.fd&&(n=jn(s.ba))}s=n}o=0!=s?null:11>o?c.f.RGBA.eb:c.f.kb.y}else o=null;return o};var Ki=[3,4,3,4,4,2,2,4,4,4,2,1,1]});var f=[0],d=[0],h=[],p=new zt,v=e,m=function(e,t){var n={},r=0,i=!1,a=0,o=0;if(n.frames=[],!function(e,t,n,r){for(var i=0;i<4;i++)if(e[t+i]!="RIFF".charCodeAt(i))return!0;return!1}(e,t)){var s,f;for(u(e,t+=4),t+=8;t<e.length;){var d=c(e,t),h=u(e,t+=4);t+=4;var p=h+(1&h);switch(d){case"VP8 ":case"VP8L":void 0===n.frames[r]&&(n.frames[r]={}),(g=n.frames[r]).src_off=i?o:t-8,g.src_size=a+h+8,r++,i&&(i=!1,a=0,o=0);break;case"VP8X":(g=n.header={}).feature_flags=e[t];var v=t+4;g.canvas_width=1+l(e,v),v+=3,g.canvas_height=1+l(e,v),v+=3;break;case"ALPH":i=!0,a=p+8,o=t-8;break;case"ANIM":(g=n.header).bgcolor=u(e,t),v=t+4,g.loop_count=(s=e)[(f=v)+0]<<0|s[f+1]<<8,v+=2;break;case"ANMF":var m,g;(g=n.frames[r]={}).offset_x=2*l(e,t),t+=3,g.offset_y=2*l(e,t),t+=3,g.width=1+l(e,t),t+=3,g.height=1+l(e,t),t+=3,g.duration=l(e,t),t+=3,m=e[t++],g.dispose=1&m,g.blend=m>>1&1}"ANMF"!=d&&(t+=p)}return n}}(v,0);m.response=v,m.rgbaoutput=!0,m.dataurl=!1;var g=m.header?m.header:null,y=m.frames?m.frames:null;if(g){g.loop_counter=g.loop_count,f=[g.canvas_height],d=[g.canvas_width];for(var b=0;b<y.length&&0!=y[b].blend;b++);}var w=y[0],N=p.WebPDecodeRGBA(v,w.src_off,w.src_size,d,f);w.rgba=N,w.imgwidth=d[0],w.imgheight=f[0];for(var x=0;x<d[0]*f[0]*4;x++)h[x]=N[x];return this.width=d,this.height=f,this.data=h,this}!function(e){var t=function(t,r,c,l){var u=4,f=a;switch(l){case e.image_compression.FAST:u=1,f=i;break;case e.image_compression.MEDIUM:u=6,f=o;break;case e.image_compression.SLOW:u=9,f=s}var d=Y(t=n(t,r,c,f),{level:u});return e.__addimage__.arrayBufferToBinaryString(d)},n=function(e,t,n,r){for(var i,a,o,s=e.length/t,c=new Uint8Array(e.length+s),f=l(),d=0;d<s;d+=1){if(o=d*t,i=e.subarray(o,o+t),r)c.set(r(i,n,a),o+d);else{for(var h,p=f.length,v=[];h<p;h+=1)v[h]=f[h](i,n,a);var m=u(v.concat());c.set(v[m],o+d)}a=i}return c},r=function(e){var t=Array.apply([],e);return t.unshift(0),t},i=function(e,t){var n,r=[],i=e.length;r[0]=1;for(var a=0;a<i;a+=1)n=e[a-t]||0,r[a+1]=e[a]-n+256&255;return r},a=function(e,t,n){var r,i=[],a=e.length;i[0]=2;for(var o=0;o<a;o+=1)r=n&&n[o]||0,i[o+1]=e[o]-r+256&255;return i},o=function(e,t,n){var r,i,a=[],o=e.length;a[0]=3;for(var s=0;s<o;s+=1)r=e[s-t]||0,i=n&&n[s]||0,a[s+1]=e[s]+256-(r+i>>>1)&255;return a},s=function(e,t,n){var r,i,a,o,s=[],l=e.length;s[0]=4;for(var u=0;u<l;u+=1)r=e[u-t]||0,i=n&&n[u]||0,a=n&&n[u-t]||0,o=c(r,i,a),s[u+1]=e[u]-o+256&255;return s},c=function(e,t,n){if(e===t&&t===n)return e;var r=Math.abs(t-n),i=Math.abs(e-n),a=Math.abs(e+t-n-n);return r<=i&&r<=a?e:i<=a?t:n},l=function(){return[r,i,a,o,s]},u=function(e){var t=e.map((function(e){return e.reduce((function(e,t){return e+Math.abs(t)}),0)}));return t.indexOf(Math.min.apply(null,t))};e.processPNG=function(n,r,i,a){var o,s,c,l,u,f,d,h,p,v,m,g,y,b,w,N=this.decode.FLATE_DECODE,x="";if(this.__addimage__.isArrayBuffer(n)&&(n=new Uint8Array(n)),this.__addimage__.isArrayBufferView(n)){if(n=(c=new Tt(n)).imgData,s=c.bits,o=c.colorSpace,u=c.colors,-1!==[4,6].indexOf(c.colorType)){if(8===c.bits){p=(h=32==c.pixelBitlength?new Uint32Array(c.decodePixels().buffer):16==c.pixelBitlength?new Uint16Array(c.decodePixels().buffer):new Uint8Array(c.decodePixels().buffer)).length,m=new Uint8Array(p*c.colors),v=new Uint8Array(p);var S,k=c.pixelBitlength-c.bits;for(b=0,w=0;b<p;b++){for(y=h[b],S=0;S<k;)m[w++]=y>>>S&255,S+=c.bits;v[b]=y>>>S&255}}if(16===c.bits){p=(h=new Uint32Array(c.decodePixels().buffer)).length,m=new Uint8Array(p*(32/c.pixelBitlength)*c.colors),v=new Uint8Array(p*(32/c.pixelBitlength)),g=c.colors>1,b=0,w=0;for(var C=0;b<p;)y=h[b++],m[w++]=y>>>0&255,g&&(m[w++]=y>>>16&255,y=h[b++],m[w++]=y>>>0&255),v[C++]=y>>>16&255;s=8}a!==e.image_compression.NONE?(n=t(m,c.width*c.colors,c.colors,a),d=t(v,c.width,1,a)):(n=m,d=v,N=void 0)}if(3===c.colorType&&(o=this.color_spaces.INDEXED,f=c.palette,c.transparency.indexed)){var L=c.transparency.indexed,A=0;for(b=0,p=L.length;b<p;++b)A+=L[b];if((A/=255)==p-1&&-1!==L.indexOf(0))l=[L.indexOf(0)];else if(A!==p){for(h=c.decodePixels(),v=new Uint8Array(h.length),b=0,p=h.length;b<p;b++)v[b]=L[h[b]];d=t(v,c.width,1)}}var E=function(t){var n;switch(t){case e.image_compression.FAST:n=11;break;case e.image_compression.MEDIUM:n=13;break;case e.image_compression.SLOW:n=14;break;default:n=12}return n}(a);return N===this.decode.FLATE_DECODE&&(x="/Predictor "+E+" "),x+="/Colors "+u+" /BitsPerComponent "+s+" /Columns "+c.width,(this.__addimage__.isArrayBuffer(n)||this.__addimage__.isArrayBufferView(n))&&(n=this.__addimage__.arrayBufferToBinaryString(n)),(d&&this.__addimage__.isArrayBuffer(d)||this.__addimage__.isArrayBufferView(d))&&(d=this.__addimage__.arrayBufferToBinaryString(d)),{alias:i,data:n,index:r,filter:N,decodeParameters:x,transparency:l,palette:f,sMask:d,predictor:E,width:c.width,height:c.height,bitsPerComponent:s,colorSpace:o}}}}(Ae.API),function(e){e.processGIF89A=function(t,n,r,i){var a=new Bt(t),o=a.width,s=a.height,c=[];a.decodeAndBlitFrameRGBA(0,c);var l={data:c,width:o,height:s},u=new Kt(100).encode(l,100);return e.processJPEG.call(this,u,n,r,i)},e.processGIF87A=e.processGIF89A}(Ae.API),Ut.prototype.parseHeader=function(){if(this.fileSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.reserved=this.datav.getUint32(this.pos,!0),this.pos+=4,this.offset=this.datav.getUint32(this.pos,!0),this.pos+=4,this.headerSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.width=this.datav.getUint32(this.pos,!0),this.pos+=4,this.height=this.datav.getInt32(this.pos,!0),this.pos+=4,this.planes=this.datav.getUint16(this.pos,!0),this.pos+=2,this.bitPP=this.datav.getUint16(this.pos,!0),this.pos+=2,this.compress=this.datav.getUint32(this.pos,!0),this.pos+=4,this.rawSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.hr=this.datav.getUint32(this.pos,!0),this.pos+=4,this.vr=this.datav.getUint32(this.pos,!0),this.pos+=4,this.colors=this.datav.getUint32(this.pos,!0),this.pos+=4,this.importantColors=this.datav.getUint32(this.pos,!0),this.pos+=4,16===this.bitPP&&this.is_with_alpha&&(this.bitPP=15),this.bitPP<15){var e=0===this.colors?1<<this.bitPP:this.colors;this.palette=new Array(e);for(var t=0;t<e;t++){var n=this.datav.getUint8(this.pos++,!0),r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),a=this.datav.getUint8(this.pos++,!0);this.palette[t]={red:i,green:r,blue:n,quad:a}}}this.height<0&&(this.height*=-1,this.bottom_up=!1)},Ut.prototype.parseBGR=function(){this.pos=this.offset;try{var e="bit"+this.bitPP,t=this.width*this.height*4;this.data=new Uint8Array(t),this[e]()}catch(e){J.log("bit decode error:"+e)}},Ut.prototype.bit1=function(){var e,t=Math.ceil(this.width/8),n=t%4;for(e=this.height-1;e>=0;e--){for(var r=this.bottom_up?e:this.height-1-e,i=0;i<t;i++)for(var a=this.datav.getUint8(this.pos++,!0),o=r*this.width*4+8*i*4,s=0;s<8&&8*i+s<this.width;s++){var c=this.palette[a>>7-s&1];this.data[o+4*s]=c.blue,this.data[o+4*s+1]=c.green,this.data[o+4*s+2]=c.red,this.data[o+4*s+3]=255}0!==n&&(this.pos+=4-n)}},Ut.prototype.bit4=function(){for(var e=Math.ceil(this.width/2),t=e%4,n=this.height-1;n>=0;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<e;i++){var a=this.datav.getUint8(this.pos++,!0),o=r*this.width*4+2*i*4,s=a>>4,c=15&a,l=this.palette[s];if(this.data[o]=l.blue,this.data[o+1]=l.green,this.data[o+2]=l.red,this.data[o+3]=255,2*i+1>=this.width)break;l=this.palette[c],this.data[o+4]=l.blue,this.data[o+4+1]=l.green,this.data[o+4+2]=l.red,this.data[o+4+3]=255}0!==t&&(this.pos+=4-t)}},Ut.prototype.bit8=function(){for(var e=this.width%4,t=this.height-1;t>=0;t--){for(var n=this.bottom_up?t:this.height-1-t,r=0;r<this.width;r++){var i=this.datav.getUint8(this.pos++,!0),a=n*this.width*4+4*r;if(i<this.palette.length){var o=this.palette[i];this.data[a]=o.red,this.data[a+1]=o.green,this.data[a+2]=o.blue,this.data[a+3]=255}else this.data[a]=255,this.data[a+1]=255,this.data[a+2]=255,this.data[a+3]=255}0!==e&&(this.pos+=4-e)}},Ut.prototype.bit15=function(){for(var e=this.width%3,t=parseInt("11111",2),n=this.height-1;n>=0;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<this.width;i++){var a=this.datav.getUint16(this.pos,!0);this.pos+=2;var o=(a&t)/t*255|0,s=(a>>5&t)/t*255|0,c=(a>>10&t)/t*255|0,l=a>>15?255:0,u=r*this.width*4+4*i;this.data[u]=c,this.data[u+1]=s,this.data[u+2]=o,this.data[u+3]=l}this.pos+=e}},Ut.prototype.bit16=function(){for(var e=this.width%3,t=parseInt("11111",2),n=parseInt("111111",2),r=this.height-1;r>=0;r--){for(var i=this.bottom_up?r:this.height-1-r,a=0;a<this.width;a++){var o=this.datav.getUint16(this.pos,!0);this.pos+=2;var s=(o&t)/t*255|0,c=(o>>5&n)/n*255|0,l=(o>>11)/t*255|0,u=i*this.width*4+4*a;this.data[u]=l,this.data[u+1]=c,this.data[u+2]=s,this.data[u+3]=255}this.pos+=e}},Ut.prototype.bit24=function(){for(var e=this.height-1;e>=0;e--){for(var t=this.bottom_up?e:this.height-1-e,n=0;n<this.width;n++){var r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),a=this.datav.getUint8(this.pos++,!0),o=t*this.width*4+4*n;this.data[o]=a,this.data[o+1]=i,this.data[o+2]=r,this.data[o+3]=255}this.pos+=this.width%4}},Ut.prototype.bit32=function(){for(var e=this.height-1;e>=0;e--)for(var t=this.bottom_up?e:this.height-1-e,n=0;n<this.width;n++){var r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),a=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0),s=t*this.width*4+4*n;this.data[s]=a,this.data[s+1]=i,this.data[s+2]=r,this.data[s+3]=o}},Ut.prototype.getData=function(){return this.data},function(e){e.processBMP=function(t,n,r,i){var a=new Ut(t,!1),o=a.width,s=a.height,c={data:a.getData(),width:o,height:s},l=new Kt(100).encode(c,100);return e.processJPEG.call(this,l,n,r,i)}}(Ae.API),zt.prototype.getData=function(){return this.data},function(e){e.processWEBP=function(t,n,r,i){var a=new zt(t,!1),o=a.width,s=a.height,c={data:a.getData(),width:o,height:s},l=new Kt(100).encode(c,100);return e.processJPEG.call(this,l,n,r,i)}}(Ae.API),Ae.API.setLanguage=function(e){return void 0===this.internal.languageSettings&&(this.internal.languageSettings={},this.internal.languageSettings.isSubscribed=!1),void 0!=={af:"Afrikaans",sq:"Albanian",ar:"Arabic (Standard)","ar-DZ":"Arabic (Algeria)","ar-BH":"Arabic (Bahrain)","ar-EG":"Arabic (Egypt)","ar-IQ":"Arabic (Iraq)","ar-JO":"Arabic (Jordan)","ar-KW":"Arabic (Kuwait)","ar-LB":"Arabic (Lebanon)","ar-LY":"Arabic (Libya)","ar-MA":"Arabic (Morocco)","ar-OM":"Arabic (Oman)","ar-QA":"Arabic (Qatar)","ar-SA":"Arabic (Saudi Arabia)","ar-SY":"Arabic (Syria)","ar-TN":"Arabic (Tunisia)","ar-AE":"Arabic (U.A.E.)","ar-YE":"Arabic (Yemen)",an:"Aragonese",hy:"Armenian",as:"Assamese",ast:"Asturian",az:"Azerbaijani",eu:"Basque",be:"Belarusian",bn:"Bengali",bs:"Bosnian",br:"Breton",bg:"Bulgarian",my:"Burmese",ca:"Catalan",ch:"Chamorro",ce:"Chechen",zh:"Chinese","zh-HK":"Chinese (Hong Kong)","zh-CN":"Chinese (PRC)","zh-SG":"Chinese (Singapore)","zh-TW":"Chinese (Taiwan)",cv:"Chuvash",co:"Corsican",cr:"Cree",hr:"Croatian",cs:"Czech",da:"Danish",nl:"Dutch (Standard)","nl-BE":"Dutch (Belgian)",en:"English","en-AU":"English (Australia)","en-BZ":"English (Belize)","en-CA":"English (Canada)","en-IE":"English (Ireland)","en-JM":"English (Jamaica)","en-NZ":"English (New Zealand)","en-PH":"English (Philippines)","en-ZA":"English (South Africa)","en-TT":"English (Trinidad & Tobago)","en-GB":"English (United Kingdom)","en-US":"English (United States)","en-ZW":"English (Zimbabwe)",eo:"Esperanto",et:"Estonian",fo:"Faeroese",fj:"Fijian",fi:"Finnish",fr:"French (Standard)","fr-BE":"French (Belgium)","fr-CA":"French (Canada)","fr-FR":"French (France)","fr-LU":"French (Luxembourg)","fr-MC":"French (Monaco)","fr-CH":"French (Switzerland)",fy:"Frisian",fur:"Friulian",gd:"Gaelic (Scots)","gd-IE":"Gaelic (Irish)",gl:"Galacian",ka:"Georgian",de:"German (Standard)","de-AT":"German (Austria)","de-DE":"German (Germany)","de-LI":"German (Liechtenstein)","de-LU":"German (Luxembourg)","de-CH":"German (Switzerland)",el:"Greek",gu:"Gujurati",ht:"Haitian",he:"Hebrew",hi:"Hindi",hu:"Hungarian",is:"Icelandic",id:"Indonesian",iu:"Inuktitut",ga:"Irish",it:"Italian (Standard)","it-CH":"Italian (Switzerland)",ja:"Japanese",kn:"Kannada",ks:"Kashmiri",kk:"Kazakh",km:"Khmer",ky:"Kirghiz",tlh:"Klingon",ko:"Korean","ko-KP":"Korean (North Korea)","ko-KR":"Korean (South Korea)",la:"Latin",lv:"Latvian",lt:"Lithuanian",lb:"Luxembourgish",mk:"FYRO Macedonian",ms:"Malay",ml:"Malayalam",mt:"Maltese",mi:"Maori",mr:"Marathi",mo:"Moldavian",nv:"Navajo",ng:"Ndonga",ne:"Nepali",no:"Norwegian",nb:"Norwegian (Bokmal)",nn:"Norwegian (Nynorsk)",oc:"Occitan",or:"Oriya",om:"Oromo",fa:"Persian","fa-IR":"Persian/Iran",pl:"Polish",pt:"Portuguese","pt-BR":"Portuguese (Brazil)",pa:"Punjabi","pa-IN":"Punjabi (India)","pa-PK":"Punjabi (Pakistan)",qu:"Quechua",rm:"Rhaeto-Romanic",ro:"Romanian","ro-MO":"Romanian (Moldavia)",ru:"Russian","ru-MO":"Russian (Moldavia)",sz:"Sami (Lappish)",sg:"Sango",sa:"Sanskrit",sc:"Sardinian",sd:"Sindhi",si:"Singhalese",sr:"Serbian",sk:"Slovak",sl:"Slovenian",so:"Somani",sb:"Sorbian",es:"Spanish","es-AR":"Spanish (Argentina)","es-BO":"Spanish (Bolivia)","es-CL":"Spanish (Chile)","es-CO":"Spanish (Colombia)","es-CR":"Spanish (Costa Rica)","es-DO":"Spanish (Dominican Republic)","es-EC":"Spanish (Ecuador)","es-SV":"Spanish (El Salvador)","es-GT":"Spanish (Guatemala)","es-HN":"Spanish (Honduras)","es-MX":"Spanish (Mexico)","es-NI":"Spanish (Nicaragua)","es-PA":"Spanish (Panama)","es-PY":"Spanish (Paraguay)","es-PE":"Spanish (Peru)","es-PR":"Spanish (Puerto Rico)","es-ES":"Spanish (Spain)","es-UY":"Spanish (Uruguay)","es-VE":"Spanish (Venezuela)",sx:"Sutu",sw:"Swahili",sv:"Swedish","sv-FI":"Swedish (Finland)","sv-SV":"Swedish (Sweden)",ta:"Tamil",tt:"Tatar",te:"Teluga",th:"Thai",tig:"Tigre",ts:"Tsonga",tn:"Tswana",tr:"Turkish",tk:"Turkmen",uk:"Ukrainian",hsb:"Upper Sorbian",ur:"Urdu",ve:"Venda",vi:"Vietnamese",vo:"Volapuk",wa:"Walloon",cy:"Welsh",xh:"Xhosa",ji:"Yiddish",zu:"Zulu"}[e]&&(this.internal.languageSettings.languageCode=e,!1===this.internal.languageSettings.isSubscribed&&(this.internal.events.subscribe("putCatalog",(function(){this.internal.write("/Lang ("+this.internal.languageSettings.languageCode+")")})),this.internal.languageSettings.isSubscribed=!0)),this},Dt=Ae.API,Ft=Dt.getCharWidthsArray=function(e,t){var n,r,i=(t=t||{}).font||this.internal.getFont(),a=t.fontSize||this.internal.getFontSize(),o=t.charSpace||this.internal.getCharSpace(),s=t.widths?t.widths:i.metadata.Unicode.widths,c=s.fof?s.fof:1,l=t.kerning?t.kerning:i.metadata.Unicode.kerning,u=l.fof?l.fof:1,f=!1!==t.doKerning,d=0,h=e.length,p=0,v=s[0]||c,m=[];for(n=0;n<h;n++)r=e.charCodeAt(n),"function"==typeof i.metadata.widthOfString?m.push((i.metadata.widthOfGlyph(i.metadata.characterToGlyph(r))+o*(1e3/a)||0)/1e3):(d=f&&"object"==typeof l[r]&&!isNaN(parseInt(l[r][p],10))?l[r][p]/u:0,m.push((s[r]||v)/c+d)),p=r;return m},Zt=Dt.getStringUnitWidth=function(e,t){var n=(t=t||{}).fontSize||this.internal.getFontSize(),r=t.font||this.internal.getFont(),i=t.charSpace||this.internal.getCharSpace();return Dt.processArabic&&(e=Dt.processArabic(e)),"function"==typeof r.metadata.widthOfString?r.metadata.widthOfString(e,n,i)/n:Ft.apply(this,arguments).reduce((function(e,t){return e+t}),0)},jt=function(e,t,n,r){for(var i=[],a=0,o=e.length,s=0;a!==o&&s+t[a]<n;)s+=t[a],a++;i.push(e.slice(0,a));var c=a;for(s=0;a!==o;)s+t[a]>r&&(i.push(e.slice(c,a)),s=0,c=a),s+=t[a],a++;return c!==a&&i.push(e.slice(c,a)),i},Rt=function(e,t,n){n||(n={});var r,i,a,o,s,c,l,u=[],f=[u],d=n.textIndent||0,h=0,p=0,v=e.split(" "),m=Ft.apply(this,[" ",n])[0];if(c=-1===n.lineIndent?v[0].length+2:n.lineIndent||0){var g=Array(c).join(" "),y=[];v.map((function(e){(e=e.split(/\s*\n/)).length>1?y=y.concat(e.map((function(e,t){return(t&&e.length?"\n":"")+e}))):y.push(e[0])})),v=y,c=Zt.apply(this,[g,n])}for(a=0,o=v.length;a<o;a++){var b=0;if(r=v[a],c&&"\n"==r[0]&&(r=r.substr(1),b=1),d+h+(p=(i=Ft.apply(this,[r,n])).reduce((function(e,t){return e+t}),0))>t||b){if(p>t){for(s=jt.apply(this,[r,i,t-(d+h),t]),u.push(s.shift()),u=[s.pop()];s.length;)f.push([s.shift()]);p=i.slice(r.length-(u[0]?u[0].length:0)).reduce((function(e,t){return e+t}),0)}else u=[r];f.push(u),d=p+c,h=m}else u.push(r),d+=h+p,h=m}return l=c?function(e,t){return(t?g:"")+e.join(" ")}:function(e){return e.join(" ")},f.map(l)},Dt.splitTextToSize=function(e,t,n){var r,i=(n=n||{}).fontSize||this.internal.getFontSize(),a=function(e){if(e.widths&&e.kerning)return{widths:e.widths,kerning:e.kerning};var t=this.internal.getFont(e.fontName,e.fontStyle);return t.metadata.Unicode?{widths:t.metadata.Unicode.widths||{0:1},kerning:t.metadata.Unicode.kerning||{}}:{font:t.metadata,fontSize:this.internal.getFontSize(),charSpace:this.internal.getCharSpace()}}.call(this,n);r=Array.isArray(e)?e:String(e).split(/\r?\n/);var o=1*this.internal.scaleFactor*t/i;a.textIndent=n.textIndent?1*n.textIndent*this.internal.scaleFactor/i:0,a.lineIndent=n.lineIndent;var s,c,l=[];for(s=0,c=r.length;s<c;s++)l=l.concat(Rt.apply(this,[r[s],o,a]));return l},function(e){e.__fontmetrics__=e.__fontmetrics__||{};for(var t="klmnopqrstuvwxyz",n={},r={},i=0;i<16;i++)n[t[i]]="0123456789abcdef"[i],r["0123456789abcdef"[i]]=t[i];var a=function(e){return"0x"+parseInt(e,10).toString(16)},o=e.__fontmetrics__.compress=function(e){var t,n,i,s,c=["{"];for(var l in e){if(t=e[l],isNaN(parseInt(l,10))?n="'"+l+"'":(l=parseInt(l,10),n=(n=a(l).slice(2)).slice(0,-1)+r[n.slice(-1)]),"number"==typeof t)t<0?(i=a(t).slice(3),s="-"):(i=a(t).slice(2),s=""),i=s+i.slice(0,-1)+r[i.slice(-1)];else{if("object"!=typeof t)throw new Error("Don't know what to do with value type "+typeof t+".");i=o(t)}c.push(n+i)}return c.push("}"),c.join("")},s=e.__fontmetrics__.uncompress=function(e){if("string"!=typeof e)throw new Error("Invalid argument passed to uncompress.");for(var t,r,i,a,o={},s=1,c=o,l=[],u="",f="",d=e.length-1,h=1;h<d;h+=1)"'"==(a=e[h])?t?(i=t.join(""),t=void 0):t=[]:t?t.push(a):"{"==a?(l.push([c,i]),c={},i=void 0):"}"==a?((r=l.pop())[0][r[1]]=c,i=void 0,c=r[0]):"-"==a?s=-1:void 0===i?n.hasOwnProperty(a)?(u+=n[a],i=parseInt(u,16)*s,s=1,u=""):u+=a:n.hasOwnProperty(a)?(f+=n[a],c[i]=parseInt(f,16)*s,s=1,i=void 0,f=""):f+=a;return o},c={codePages:["WinAnsiEncoding"],WinAnsiEncoding:s("{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}")},l={Unicode:{Courier:c,"Courier-Bold":c,"Courier-BoldOblique":c,"Courier-Oblique":c,Helvetica:c,"Helvetica-Bold":c,"Helvetica-BoldOblique":c,"Helvetica-Oblique":c,"Times-Roman":c,"Times-Bold":c,"Times-BoldItalic":c,"Times-Italic":c}},u={Unicode:{"Courier-Oblique":s("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-BoldItalic":s("{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}"),"Helvetica-Bold":s("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),Courier:s("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Courier-BoldOblique":s("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-Bold":s("{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}"),Symbol:s("{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}"),Helvetica:s("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}"),"Helvetica-BoldOblique":s("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),ZapfDingbats:s("{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}"),"Courier-Bold":s("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-Italic":s("{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}"),"Times-Roman":s("{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}"),"Helvetica-Oblique":s("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}")}};e.events.push(["addFont",function(e){var t=e.font,n=u.Unicode[t.postScriptName];n&&(t.metadata.Unicode={},t.metadata.Unicode.widths=n.widths,t.metadata.Unicode.kerning=n.kerning);var r=l.Unicode[t.postScriptName];r&&(t.metadata.Unicode.encoding=r,t.encoding=r.codePages[0])}])}(Ae.API),function(e){var t=function(e){for(var t=e.length,n=new Uint8Array(t),r=0;r<t;r++)n[r]=e.charCodeAt(r);return n};e.API.events.push(["addFont",function(n){var r=void 0,i=n.font,a=n.instance;if(!i.isStandardFont){if(void 0===a)throw new Error("Font does not exist in vFS, import fonts or remove declaration doc.addFont('"+i.postScriptName+"').");if("string"!=typeof(r=!1===a.existsFileInVFS(i.postScriptName)?a.loadFile(i.postScriptName):a.getFileFromVFS(i.postScriptName)))throw new Error("Font is not stored as string-data in vFS, import fonts or remove declaration doc.addFont('"+i.postScriptName+"').");!function(n,r){r=/^\x00\x01\x00\x00/.test(r)?t(r):t(ne(r)),n.metadata=e.API.TTFFont.open(r),n.metadata.Unicode=n.metadata.Unicode||{encoding:{},kerning:{},widths:[]},n.metadata.glyIdsUsed=[0]}(i,r)}}])}(Ae),function(e){function t(){return($.canvg?Promise.resolve($.canvg):n.e(469).then(n.bind(n,1469))).catch((function(e){return Promise.reject(new Error("Could not load canvg: "+e))})).then((function(e){return e.default?e.default:e}))}Ae.API.addSvgAsImage=function(e,n,r,i,a,o,s,c){if(isNaN(n)||isNaN(r))throw J.error("jsPDF.addSvgAsImage: Invalid coordinates",arguments),new Error("Invalid coordinates passed to jsPDF.addSvgAsImage");if(isNaN(i)||isNaN(a))throw J.error("jsPDF.addSvgAsImage: Invalid measurements",arguments),new Error("Invalid measurements (width and/or height) passed to jsPDF.addSvgAsImage");var l=document.createElement("canvas");l.width=i,l.height=a;var u=l.getContext("2d");u.fillStyle="#fff",u.fillRect(0,0,l.width,l.height);var f={ignoreMouse:!0,ignoreAnimation:!0,ignoreDimensions:!0},d=this;return t().then((function(t){return t.fromString(u,e,f)}),(function(){return Promise.reject(new Error("Could not load canvg."))})).then((function(e){return e.render(f)})).then((function(){d.addImage(l.toDataURL("image/jpeg",1),n,r,i,a,s,c)}))}}(),Ae.API.putTotalPages=function(e){var t,n=0;parseInt(this.internal.getFont().id.substr(1),10)<15?(t=new RegExp(e,"g"),n=this.internal.getNumberOfPages()):(t=new RegExp(this.pdfEscape16(e,this.internal.getFont()),"g"),n=this.pdfEscape16(this.internal.getNumberOfPages()+"",this.internal.getFont()));for(var r=1;r<=this.internal.getNumberOfPages();r++)for(var i=0;i<this.internal.pages[r].length;i++)this.internal.pages[r][i]=this.internal.pages[r][i].replace(t,n);return this},Ae.API.viewerPreferences=function(e,t){var n;e=e||{},t=t||!1;var r,i,a,o={HideToolbar:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},HideMenubar:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},HideWindowUI:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},FitWindow:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},CenterWindow:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},DisplayDocTitle:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.4},NonFullScreenPageMode:{defaultValue:"UseNone",value:"UseNone",type:"name",explicitSet:!1,valueSet:["UseNone","UseOutlines","UseThumbs","UseOC"],pdfVersion:1.3},Direction:{defaultValue:"L2R",value:"L2R",type:"name",explicitSet:!1,valueSet:["L2R","R2L"],pdfVersion:1.3},ViewArea:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},ViewClip:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintArea:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintClip:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintScaling:{defaultValue:"AppDefault",value:"AppDefault",type:"name",explicitSet:!1,valueSet:["AppDefault","None"],pdfVersion:1.6},Duplex:{defaultValue:"",value:"none",type:"name",explicitSet:!1,valueSet:["Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","none"],pdfVersion:1.7},PickTrayByPDFSize:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.7},PrintPageRange:{defaultValue:"",value:"",type:"array",explicitSet:!1,valueSet:null,pdfVersion:1.7},NumCopies:{defaultValue:1,value:1,type:"integer",explicitSet:!1,valueSet:null,pdfVersion:1.7}},s=Object.keys(o),c=[],l=0,u=0,f=0;function d(e,t){var n,r=!1;for(n=0;n<e.length;n+=1)e[n]===t&&(r=!0);return r}if(void 0===this.internal.viewerpreferences&&(this.internal.viewerpreferences={},this.internal.viewerpreferences.configuration=JSON.parse(JSON.stringify(o)),this.internal.viewerpreferences.isSubscribed=!1),n=this.internal.viewerpreferences.configuration,"reset"===e||!0===t){var h=s.length;for(f=0;f<h;f+=1)n[s[f]].value=n[s[f]].defaultValue,n[s[f]].explicitSet=!1}if("object"==typeof e)for(i in e)if(a=e[i],d(s,i)&&void 0!==a){if("boolean"===n[i].type&&"boolean"==typeof a)n[i].value=a;else if("name"===n[i].type&&d(n[i].valueSet,a))n[i].value=a;else if("integer"===n[i].type&&Number.isInteger(a))n[i].value=a;else if("array"===n[i].type){for(l=0;l<a.length;l+=1)if(r=!0,1===a[l].length&&"number"==typeof a[l][0])c.push(String(a[l]-1));else if(a[l].length>1){for(u=0;u<a[l].length;u+=1)"number"!=typeof a[l][u]&&(r=!1);!0===r&&c.push([a[l][0]-1,a[l][1]-1].join(" "))}n[i].value="["+c.join(" ")+"]"}else n[i].value=n[i].defaultValue;n[i].explicitSet=!0}return!1===this.internal.viewerpreferences.isSubscribed&&(this.internal.events.subscribe("putCatalog",(function(){var e,t=[];for(e in n)!0===n[e].explicitSet&&("name"===n[e].type?t.push("/"+e+" /"+n[e].value):t.push("/"+e+" "+n[e].value));0!==t.length&&this.internal.write("/ViewerPreferences\n<<\n"+t.join("\n")+"\n>>")})),this.internal.viewerpreferences.isSubscribed=!0),this.internal.viewerpreferences.configuration=n,this},function(e){var t=function(){var e='<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description rdf:about="" xmlns:jspdf="'+this.internal.__metadata__.namespaceuri+'"><jspdf:metadata>',t=unescape(encodeURIComponent('<x:xmpmeta xmlns:x="adobe:ns:meta/">')),n=unescape(encodeURIComponent(e)),r=unescape(encodeURIComponent(this.internal.__metadata__.metadata)),i=unescape(encodeURIComponent("</jspdf:metadata></rdf:Description></rdf:RDF>")),a=unescape(encodeURIComponent("</x:xmpmeta>")),o=n.length+r.length+i.length+t.length+a.length;this.internal.__metadata__.metadata_object_number=this.internal.newObject(),this.internal.write("<< /Type /Metadata /Subtype /XML /Length "+o+" >>"),this.internal.write("stream"),this.internal.write(t+n+r+i+a),this.internal.write("endstream"),this.internal.write("endobj")},n=function(){this.internal.__metadata__.metadata_object_number&&this.internal.write("/Metadata "+this.internal.__metadata__.metadata_object_number+" 0 R")};e.addMetadata=function(e,r){return void 0===this.internal.__metadata__&&(this.internal.__metadata__={metadata:e,namespaceuri:r||"http://jspdf.default.namespaceuri/"},this.internal.events.subscribe("putCatalog",n),this.internal.events.subscribe("postPutResources",t)),this}}(Ae.API),function(e){var t=e.API,n=t.pdfEscape16=function(e,t){for(var n,r=t.metadata.Unicode.widths,i=["","0","00","000","0000"],a=[""],o=0,s=e.length;o<s;++o){if(n=t.metadata.characterToGlyph(e.charCodeAt(o)),t.metadata.glyIdsUsed.push(n),t.metadata.toUnicode[n]=e.charCodeAt(o),-1==r.indexOf(n)&&(r.push(n),r.push([parseInt(t.metadata.widthOfGlyph(n),10)])),"0"==n)return a.join("");n=n.toString(16),a.push(i[4-n.length],n)}return a.join("")},r=function(e){var t,n,r,i,a,o,s;for(a="/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange",r=[],o=0,s=(n=Object.keys(e).sort((function(e,t){return e-t}))).length;o<s;o++)t=n[o],r.length>=100&&(a+="\n"+r.length+" beginbfchar\n"+r.join("\n")+"\nendbfchar",r=[]),void 0!==e[t]&&null!==e[t]&&"function"==typeof e[t].toString&&(i=("0000"+e[t].toString(16)).slice(-4),t=("0000"+(+t).toString(16)).slice(-4),r.push("<"+t+"><"+i+">"));return r.length&&(a+="\n"+r.length+" beginbfchar\n"+r.join("\n")+"\nendbfchar\n"),a+"endcmap\nCMapName currentdict /CMap defineresource pop\nend\nend"};t.events.push(["putFont",function(t){!function(t){var n=t.font,i=t.out,a=t.newObject,o=t.putStream,s=t.pdfEscapeWithNeededParanthesis;if(n.metadata instanceof e.API.TTFFont&&"Identity-H"===n.encoding){for(var c=n.metadata.Unicode.widths,l=n.metadata.subset.encode(n.metadata.glyIdsUsed,1),u="",f=0;f<l.length;f++)u+=String.fromCharCode(l[f]);var d=a();o({data:u,addLength1:!0,objectId:d}),i("endobj");var h=a();o({data:r(n.metadata.toUnicode),addLength1:!0,objectId:h}),i("endobj");var p=a();i("<<"),i("/Type /FontDescriptor"),i("/FontName /"+s(n.fontName)),i("/FontFile2 "+d+" 0 R"),i("/FontBBox "+e.API.PDFObject.convert(n.metadata.bbox)),i("/Flags "+n.metadata.flags),i("/StemV "+n.metadata.stemV),i("/ItalicAngle "+n.metadata.italicAngle),i("/Ascent "+n.metadata.ascender),i("/Descent "+n.metadata.decender),i("/CapHeight "+n.metadata.capHeight),i(">>"),i("endobj");var v=a();i("<<"),i("/Type /Font"),i("/BaseFont /"+s(n.fontName)),i("/FontDescriptor "+p+" 0 R"),i("/W "+e.API.PDFObject.convert(c)),i("/CIDToGIDMap /Identity"),i("/DW 1000"),i("/Subtype /CIDFontType2"),i("/CIDSystemInfo"),i("<<"),i("/Supplement 0"),i("/Registry (Adobe)"),i("/Ordering ("+n.encoding+")"),i(">>"),i(">>"),i("endobj"),n.objectNumber=a(),i("<<"),i("/Type /Font"),i("/Subtype /Type0"),i("/ToUnicode "+h+" 0 R"),i("/BaseFont /"+s(n.fontName)),i("/Encoding /"+n.encoding),i("/DescendantFonts ["+v+" 0 R]"),i(">>"),i("endobj"),n.isAlreadyPutted=!0}}(t)}]),t.events.push(["putFont",function(t){!function(t){var n=t.font,i=t.out,a=t.newObject,o=t.putStream,s=t.pdfEscapeWithNeededParanthesis;if(n.metadata instanceof e.API.TTFFont&&"WinAnsiEncoding"===n.encoding){for(var c=n.metadata.rawData,l="",u=0;u<c.length;u++)l+=String.fromCharCode(c[u]);var f=a();o({data:l,addLength1:!0,objectId:f}),i("endobj");var d=a();o({data:r(n.metadata.toUnicode),addLength1:!0,objectId:d}),i("endobj");var h=a();i("<<"),i("/Descent "+n.metadata.decender),i("/CapHeight "+n.metadata.capHeight),i("/StemV "+n.metadata.stemV),i("/Type /FontDescriptor"),i("/FontFile2 "+f+" 0 R"),i("/Flags 96"),i("/FontBBox "+e.API.PDFObject.convert(n.metadata.bbox)),i("/FontName /"+s(n.fontName)),i("/ItalicAngle "+n.metadata.italicAngle),i("/Ascent "+n.metadata.ascender),i(">>"),i("endobj"),n.objectNumber=a();for(var p=0;p<n.metadata.hmtx.widths.length;p++)n.metadata.hmtx.widths[p]=parseInt(n.metadata.hmtx.widths[p]*(1e3/n.metadata.head.unitsPerEm));i("<</Subtype/TrueType/Type/Font/ToUnicode "+d+" 0 R/BaseFont/"+s(n.fontName)+"/FontDescriptor "+h+" 0 R/Encoding/"+n.encoding+" /FirstChar 29 /LastChar 255 /Widths "+e.API.PDFObject.convert(n.metadata.hmtx.widths)+">>"),i("endobj"),n.isAlreadyPutted=!0}}(t)}]);var i=function(e){var t,r=e.text||"",i=e.x,a=e.y,o=e.options||{},s=e.mutex||{},c=s.pdfEscape,l=s.activeFontKey,u=s.fonts,f=l,d="",h=0,p="",v=u[f].encoding;if("Identity-H"!==u[f].encoding)return{text:r,x:i,y:a,options:o,mutex:s};for(p=r,f=l,Array.isArray(r)&&(p=r[0]),h=0;h<p.length;h+=1)u[f].metadata.hasOwnProperty("cmap")&&(t=u[f].metadata.cmap.unicode.codeMap[p[h].charCodeAt(0)]),t||p[h].charCodeAt(0)<256&&u[f].metadata.hasOwnProperty("Unicode")?d+=p[h]:d+="";var m="";return parseInt(f.slice(1))<14||"WinAnsiEncoding"===v?m=c(d,f).split("").map((function(e){return e.charCodeAt(0).toString(16)})).join(""):"Identity-H"===v&&(m=n(d,u[f])),s.isHex=!0,{text:m,x:i,y:a,options:o,mutex:s}};t.events.push(["postProcessText",function(e){var t=e.text||"",n=[],r={text:t,x:e.x,y:e.y,options:e.options,mutex:e.mutex};if(Array.isArray(t)){var a=0;for(a=0;a<t.length;a+=1)Array.isArray(t[a])&&3===t[a].length?n.push([i(Object.assign({},r,{text:t[a][0]})).text,t[a][1],t[a][2]]):n.push(i(Object.assign({},r,{text:t[a]})).text);e.text=n}else e.text=i(Object.assign({},r,{text:t})).text}])}(Ae),function(e){var t=function(){return void 0===this.internal.vFS&&(this.internal.vFS={}),!0};e.existsFileInVFS=function(e){return t.call(this),void 0!==this.internal.vFS[e]},e.addFileToVFS=function(e,n){return t.call(this),this.internal.vFS[e]=n,this},e.getFileFromVFS=function(e){return t.call(this),void 0!==this.internal.vFS[e]?this.internal.vFS[e]:null}}(Ae.API),function(e){e.__bidiEngine__=e.prototype.__bidiEngine__=function(e){var n,r,i,a,o,s,c,l=t,u=[[0,3,0,1,0,0,0],[0,3,0,1,2,2,0],[0,3,0,17,2,0,1],[0,3,5,5,4,1,0],[0,3,21,21,4,0,1],[0,3,5,5,4,2,0]],f=[[2,0,1,1,0,1,0],[2,0,1,1,0,2,0],[2,0,2,1,3,2,0],[2,0,2,33,3,1,1]],d={L:0,R:1,EN:2,AN:3,N:4,B:5,S:6},h={0:0,5:1,6:2,7:3,32:4,251:5,254:6,255:7},p=["(",")","(","<",">","<","[","]","[","{","}","{","«","»","«","‹","›","‹","⁅","⁆","⁅","⁽","⁾","⁽","₍","₎","₍","≤","≥","≤","〈","〉","〈","﹙","﹚","﹙","﹛","﹜","﹛","﹝","﹞","﹝","﹤","﹥","﹤"],v=new RegExp(/^([1-4|9]|1[0-9]|2[0-9]|3[0168]|4[04589]|5[012]|7[78]|159|16[0-9]|17[0-2]|21[569]|22[03489]|250)$/),m=!1,g=0;this.__bidiEngine__={};var y=function(e){var t=e.charCodeAt(),n=t>>8,r=h[n];return void 0!==r?l[256*r+(255&t)]:252===n||253===n?"AL":v.test(n)?"L":8===n?"R":"N"},b=function(e){for(var t,n=0;n<e.length;n++){if("L"===(t=y(e.charAt(n))))return!1;if("R"===t)return!0}return!1},w=function(e,t,o,s){var c,l,u,f,d=t[s];switch(d){case"L":case"R":case"LRE":case"RLE":case"LRO":case"RLO":case"PDF":m=!1;break;case"N":case"AN":break;case"EN":m&&(d="AN");break;case"AL":m=!0,d="R";break;case"WS":case"BN":d="N";break;case"CS":s<1||s+1>=t.length||"EN"!==(c=o[s-1])&&"AN"!==c||"EN"!==(l=t[s+1])&&"AN"!==l?d="N":m&&(l="AN"),d=l===c?l:"N";break;case"ES":d="EN"===(c=s>0?o[s-1]:"B")&&s+1<t.length&&"EN"===t[s+1]?"EN":"N";break;case"ET":if(s>0&&"EN"===o[s-1]){d="EN";break}if(m){d="N";break}for(u=s+1,f=t.length;u<f&&"ET"===t[u];)u++;d=u<f&&"EN"===t[u]?"EN":"N";break;case"NSM":if(i&&!a){for(f=t.length,u=s+1;u<f&&"NSM"===t[u];)u++;if(u<f){var h=e[s],p=h>=1425&&h<=2303||64286===h;if(c=t[u],p&&("R"===c||"AL"===c)){d="R";break}}}d=s<1||"B"===(c=t[s-1])?"N":o[s-1];break;case"B":m=!1,n=!0,d=g;break;case"S":r=!0,d="N"}return d},N=function(e,t,n){var r=e.split("");return n&&x(r,n,{hiLevel:g}),r.reverse(),t&&t.reverse(),r.join("")},x=function(e,t,i){var a,o,s,c,l,h=-1,p=e.length,v=0,b=[],N=g?f:u,x=[];for(m=!1,n=!1,r=!1,o=0;o<p;o++)x[o]=y(e[o]);for(s=0;s<p;s++){if(l=v,b[s]=w(e,x,b,s),a=240&(v=N[l][d[b[s]]]),v&=15,t[s]=c=N[v][5],a>0)if(16===a){for(o=h;o<s;o++)t[o]=1;h=-1}else h=-1;if(N[v][6])-1===h&&(h=s);else if(h>-1){for(o=h;o<s;o++)t[o]=c;h=-1}"B"===x[s]&&(t[s]=0),i.hiLevel|=c}r&&function(e,t,n){for(var r=0;r<n;r++)if("S"===e[r]){t[r]=g;for(var i=r-1;i>=0&&"WS"===e[i];i--)t[i]=g}}(x,t,p)},S=function(e,t,r,i,a){if(!(a.hiLevel<e)){if(1===e&&1===g&&!n)return t.reverse(),void(r&&r.reverse());for(var o,s,c,l,u=t.length,f=0;f<u;){if(i[f]>=e){for(c=f+1;c<u&&i[c]>=e;)c++;for(l=f,s=c-1;l<s;l++,s--)o=t[l],t[l]=t[s],t[s]=o,r&&(o=r[l],r[l]=r[s],r[s]=o);f=c}f++}}},k=function(e,t,n){var r=e.split(""),i={hiLevel:g};return n||(n=[]),x(r,n,i),function(e,t,n){if(0!==n.hiLevel&&c)for(var r,i=0;i<e.length;i++)1===t[i]&&(r=p.indexOf(e[i]))>=0&&(e[i]=p[r+1])}(r,n,i),S(2,r,t,n,i),S(1,r,t,n,i),r.join("")};return this.__bidiEngine__.doBidiReorder=function(e,t,n){if(function(e,t){if(t)for(var n=0;n<e.length;n++)t[n]=n;void 0===a&&(a=b(e)),void 0===s&&(s=b(e))}(e,t),i||!o||s)if(i&&o&&a^s)g=a?1:0,e=N(e,t,n);else if(!i&&o&&s)g=a?1:0,e=k(e,t,n),e=N(e,t);else if(!i||a||o||s){if(i&&!o&&a^s)e=N(e,t),a?(g=0,e=k(e,t,n)):(g=1,e=k(e,t,n),e=N(e,t));else if(i&&a&&!o&&s)g=1,e=k(e,t,n),e=N(e,t);else if(!i&&!o&&a^s){var r=c;a?(g=1,e=k(e,t,n),g=0,c=!1,e=k(e,t,n),c=r):(g=0,e=k(e,t,n),e=N(e,t),g=1,c=!1,e=k(e,t,n),c=r,e=N(e,t))}}else g=0,e=k(e,t,n);else g=a?1:0,e=k(e,t,n);return e},this.__bidiEngine__.setOptions=function(e){e&&(i=e.isInputVisual,o=e.isOutputVisual,a=e.isInputRtl,s=e.isOutputRtl,c=e.isSymmetricSwapping)},this.__bidiEngine__.setOptions(e),this.__bidiEngine__};var t=["BN","BN","BN","BN","BN","BN","BN","BN","BN","S","B","S","WS","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","B","B","B","S","WS","N","N","ET","ET","ET","N","N","N","N","N","ES","CS","ES","CS","CS","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","CS","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","BN","BN","BN","BN","BN","BN","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","CS","N","ET","ET","ET","ET","N","N","N","N","L","N","N","BN","N","N","ET","ET","EN","EN","N","L","N","N","N","EN","L","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","N","N","N","N","N","ET","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","R","NSM","R","NSM","NSM","R","NSM","NSM","R","NSM","N","N","N","N","N","N","N","N","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","N","N","N","N","N","R","R","R","R","R","N","N","N","N","N","N","N","N","N","N","N","AN","AN","AN","AN","AN","AN","N","N","AL","ET","ET","AL","CS","AL","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","AN","AN","AN","AN","AN","AN","AN","AN","AN","ET","AN","AN","AL","AL","AL","NSM","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","N","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","NSM","NSM","N","NSM","NSM","NSM","NSM","AL","AL","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","AL","AL","NSM","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AL","N","N","N","N","N","N","N","N","N","N","N","N","N","N","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","R","R","N","N","N","N","R","N","N","N","N","N","WS","WS","WS","WS","WS","WS","WS","WS","WS","WS","WS","BN","BN","BN","L","R","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","WS","B","LRE","RLE","PDF","LRO","RLO","CS","ET","ET","ET","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","CS","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","WS","BN","BN","BN","BN","BN","N","LRI","RLI","FSI","PDI","BN","BN","BN","BN","BN","BN","EN","L","N","N","EN","EN","EN","EN","EN","EN","ES","ES","N","N","N","L","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","ES","ES","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","L","L","N","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","N","N","N","N","N","R","NSM","R","R","R","R","R","R","R","R","R","R","ES","R","R","R","R","R","R","R","R","R","R","R","R","R","N","R","R","R","R","R","N","R","N","R","R","N","R","R","N","R","R","R","R","R","R","R","R","R","R","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","CS","N","CS","N","N","CS","N","N","N","N","N","N","N","N","N","ET","N","N","ES","ES","N","N","N","N","N","ET","ET","N","N","N","N","N","AL","AL","AL","AL","AL","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","N","BN","N","N","N","ET","ET","ET","N","N","N","N","N","ES","CS","ES","CS","CS","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","CS","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","L","L","L","L","L","L","N","N","L","L","L","L","L","L","N","N","L","L","L","L","L","L","N","N","L","L","L","N","N","N","ET","ET","N","N","N","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N"],n=new e.__bidiEngine__({isInputVisual:!0});e.API.events.push(["postProcessText",function(e){var t=e.text,r=(e.x,e.y,e.options||{}),i=(e.mutex,r.lang,[]);if(r.isInputVisual="boolean"!=typeof r.isInputVisual||r.isInputVisual,n.setOptions(r),"[object Array]"===Object.prototype.toString.call(t)){var a=0;for(i=[],a=0;a<t.length;a+=1)"[object Array]"===Object.prototype.toString.call(t[a])?i.push([n.doBidiReorder(t[a][0]),t[a][1],t[a][2]]):i.push([n.doBidiReorder(t[a])]);e.text=i}else e.text=n.doBidiReorder(t);n.setOptions({isInputVisual:!0})}])}(Ae),Ae.API.TTFFont=function(){function e(e){var t;if(this.rawData=e,t=this.contents=new Vt(e),this.contents.pos=4,"ttcf"===t.readString(4))throw new Error("TTCF not supported.");t.pos=0,this.parse(),this.subset=new dn(this),this.registerTTF()}return e.open=function(t){return new e(t)},e.prototype.parse=function(){return this.directory=new Wt(this.contents),this.head=new $t(this),this.name=new rn(this),this.cmap=new Jt(this),this.toUnicode={},this.hhea=new Qt(this),this.maxp=new an(this),this.hmtx=new on(this),this.post=new tn(this),this.os2=new en(this),this.loca=new fn(this),this.glyf=new cn(this),this.ascender=this.os2.exists&&this.os2.ascender||this.hhea.ascender,this.decender=this.os2.exists&&this.os2.decender||this.hhea.decender,this.lineGap=this.os2.exists&&this.os2.lineGap||this.hhea.lineGap,this.bbox=[this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax]},e.prototype.registerTTF=function(){var e,t,n,r,i;if(this.scaleFactor=1e3/this.head.unitsPerEm,this.bbox=function(){var t,n,r,i;for(i=[],t=0,n=(r=this.bbox).length;t<n;t++)e=r[t],i.push(Math.round(e*this.scaleFactor));return i}.call(this),this.stemV=0,this.post.exists?(n=255&(r=this.post.italic_angle),0!=(32768&(t=r>>16))&&(t=-(1+(65535^t))),this.italicAngle=+(t+"."+n)):this.italicAngle=0,this.ascender=Math.round(this.ascender*this.scaleFactor),this.decender=Math.round(this.decender*this.scaleFactor),this.lineGap=Math.round(this.lineGap*this.scaleFactor),this.capHeight=this.os2.exists&&this.os2.capHeight||this.ascender,this.xHeight=this.os2.exists&&this.os2.xHeight||0,this.familyClass=(this.os2.exists&&this.os2.familyClass||0)>>8,this.isSerif=1===(i=this.familyClass)||2===i||3===i||4===i||5===i||7===i,this.isScript=10===this.familyClass,this.flags=0,this.post.isFixedPitch&&(this.flags|=1),this.isSerif&&(this.flags|=2),this.isScript&&(this.flags|=8),0!==this.italicAngle&&(this.flags|=64),this.flags|=32,!this.cmap.unicode)throw new Error("No unicode cmap for font")},e.prototype.characterToGlyph=function(e){var t;return(null!=(t=this.cmap.unicode)?t.codeMap[e]:void 0)||0},e.prototype.widthOfGlyph=function(e){var t;return t=1e3/this.head.unitsPerEm,this.hmtx.forGlyph(e).advance*t},e.prototype.widthOfString=function(e,t,n){var r,i,a,o;for(a=0,i=0,o=(e=""+e).length;0<=o?i<o:i>o;i=0<=o?++i:--i)r=e.charCodeAt(i),a+=this.widthOfGlyph(this.characterToGlyph(r))+n*(1e3/t)||0;return a*(t/1e3)},e.prototype.lineHeight=function(e,t){var n;return null==t&&(t=!1),n=t?this.lineGap:0,(this.ascender+n-this.decender)/1e3*e},e}();var Ht,Vt=function(){function e(e){this.data=null!=e?e:[],this.pos=0,this.length=this.data.length}return e.prototype.readByte=function(){return this.data[this.pos++]},e.prototype.writeByte=function(e){return this.data[this.pos++]=e},e.prototype.readUInt32=function(){return 16777216*this.readByte()+(this.readByte()<<16)+(this.readByte()<<8)+this.readByte()},e.prototype.writeUInt32=function(e){return this.writeByte(e>>>24&255),this.writeByte(e>>16&255),this.writeByte(e>>8&255),this.writeByte(255&e)},e.prototype.readInt32=function(){var e;return(e=this.readUInt32())>=2147483648?e-4294967296:e},e.prototype.writeInt32=function(e){return e<0&&(e+=4294967296),this.writeUInt32(e)},e.prototype.readUInt16=function(){return this.readByte()<<8|this.readByte()},e.prototype.writeUInt16=function(e){return this.writeByte(e>>8&255),this.writeByte(255&e)},e.prototype.readInt16=function(){var e;return(e=this.readUInt16())>=32768?e-65536:e},e.prototype.writeInt16=function(e){return e<0&&(e+=65536),this.writeUInt16(e)},e.prototype.readString=function(e){var t,n;for(n=[],t=0;0<=e?t<e:t>e;t=0<=e?++t:--t)n[t]=String.fromCharCode(this.readByte());return n.join("")},e.prototype.writeString=function(e){var t,n,r;for(r=[],t=0,n=e.length;0<=n?t<n:t>n;t=0<=n?++t:--t)r.push(this.writeByte(e.charCodeAt(t)));return r},e.prototype.readShort=function(){return this.readInt16()},e.prototype.writeShort=function(e){return this.writeInt16(e)},e.prototype.readLongLong=function(){var e,t,n,r,i,a,o,s;return e=this.readByte(),t=this.readByte(),n=this.readByte(),r=this.readByte(),i=this.readByte(),a=this.readByte(),o=this.readByte(),s=this.readByte(),128&e?-1*(72057594037927940*(255^e)+281474976710656*(255^t)+1099511627776*(255^n)+4294967296*(255^r)+16777216*(255^i)+65536*(255^a)+256*(255^o)+(255^s)+1):72057594037927940*e+281474976710656*t+1099511627776*n+4294967296*r+16777216*i+65536*a+256*o+s},e.prototype.writeLongLong=function(e){var t,n;return t=Math.floor(e/4294967296),n=4294967295&e,this.writeByte(t>>24&255),this.writeByte(t>>16&255),this.writeByte(t>>8&255),this.writeByte(255&t),this.writeByte(n>>24&255),this.writeByte(n>>16&255),this.writeByte(n>>8&255),this.writeByte(255&n)},e.prototype.readInt=function(){return this.readInt32()},e.prototype.writeInt=function(e){return this.writeInt32(e)},e.prototype.read=function(e){var t,n;for(t=[],n=0;0<=e?n<e:n>e;n=0<=e?++n:--n)t.push(this.readByte());return t},e.prototype.write=function(e){var t,n,r,i;for(i=[],n=0,r=e.length;n<r;n++)t=e[n],i.push(this.writeByte(t));return i},e}(),Wt=function(){var e;function t(e){var t,n,r;for(this.scalarType=e.readInt(),this.tableCount=e.readShort(),this.searchRange=e.readShort(),this.entrySelector=e.readShort(),this.rangeShift=e.readShort(),this.tables={},n=0,r=this.tableCount;0<=r?n<r:n>r;n=0<=r?++n:--n)t={tag:e.readString(4),checksum:e.readInt(),offset:e.readInt(),length:e.readInt()},this.tables[t.tag]=t}return t.prototype.encode=function(t){var n,r,i,a,o,s,c,l,u,f,d,h,p;for(p in d=Object.keys(t).length,s=Math.log(2),u=16*Math.floor(Math.log(d)/s),a=Math.floor(u/s),l=16*d-u,(r=new Vt).writeInt(this.scalarType),r.writeShort(d),r.writeShort(u),r.writeShort(a),r.writeShort(l),i=16*d,c=r.pos+i,o=null,h=[],t)for(f=t[p],r.writeString(p),r.writeInt(e(f)),r.writeInt(c),r.writeInt(f.length),h=h.concat(f),"head"===p&&(o=c),c+=f.length;c%4;)h.push(0),c++;return r.write(h),n=2981146554-e(r.data),r.pos=o+8,r.writeUInt32(n),r.data},e=function(e){var t,n,r,i;for(e=sn.call(e);e.length%4;)e.push(0);for(r=new Vt(e),n=0,t=0,i=e.length;t<i;t=t+=4)n+=r.readUInt32();return 4294967295&n},t}(),Yt={}.hasOwnProperty,Gt=function(e,t){for(var n in t)Yt.call(t,n)&&(e[n]=t[n]);function r(){this.constructor=e}return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};Ht=function(){function e(e){var t;this.file=e,t=this.file.directory.tables[this.tag],this.exists=!!t,t&&(this.offset=t.offset,this.length=t.length,this.parse(this.file.contents))}return e.prototype.parse=function(){},e.prototype.encode=function(){},e.prototype.raw=function(){return this.exists?(this.file.contents.pos=this.offset,this.file.contents.read(this.length)):null},e}();var $t=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return Gt(t,Ht),t.prototype.tag="head",t.prototype.parse=function(e){return e.pos=this.offset,this.version=e.readInt(),this.revision=e.readInt(),this.checkSumAdjustment=e.readInt(),this.magicNumber=e.readInt(),this.flags=e.readShort(),this.unitsPerEm=e.readShort(),this.created=e.readLongLong(),this.modified=e.readLongLong(),this.xMin=e.readShort(),this.yMin=e.readShort(),this.xMax=e.readShort(),this.yMax=e.readShort(),this.macStyle=e.readShort(),this.lowestRecPPEM=e.readShort(),this.fontDirectionHint=e.readShort(),this.indexToLocFormat=e.readShort(),this.glyphDataFormat=e.readShort()},t.prototype.encode=function(e){var t;return(t=new Vt).writeInt(this.version),t.writeInt(this.revision),t.writeInt(this.checkSumAdjustment),t.writeInt(this.magicNumber),t.writeShort(this.flags),t.writeShort(this.unitsPerEm),t.writeLongLong(this.created),t.writeLongLong(this.modified),t.writeShort(this.xMin),t.writeShort(this.yMin),t.writeShort(this.xMax),t.writeShort(this.yMax),t.writeShort(this.macStyle),t.writeShort(this.lowestRecPPEM),t.writeShort(this.fontDirectionHint),t.writeShort(e),t.writeShort(this.glyphDataFormat),t.data},t}(),Xt=function(){function e(e,t){var n,r,i,a,o,s,c,l,u,f,d,h,p,v,m,g,y;switch(this.platformID=e.readUInt16(),this.encodingID=e.readShort(),this.offset=t+e.readInt(),u=e.pos,e.pos=this.offset,this.format=e.readUInt16(),this.length=e.readUInt16(),this.language=e.readUInt16(),this.isUnicode=3===this.platformID&&1===this.encodingID&&4===this.format||0===this.platformID&&4===this.format,this.codeMap={},this.format){case 0:for(s=0;s<256;++s)this.codeMap[s]=e.readByte();break;case 4:for(d=e.readUInt16(),f=d/2,e.pos+=6,i=function(){var t,n;for(n=[],s=t=0;0<=f?t<f:t>f;s=0<=f?++t:--t)n.push(e.readUInt16());return n}(),e.pos+=2,p=function(){var t,n;for(n=[],s=t=0;0<=f?t<f:t>f;s=0<=f?++t:--t)n.push(e.readUInt16());return n}(),c=function(){var t,n;for(n=[],s=t=0;0<=f?t<f:t>f;s=0<=f?++t:--t)n.push(e.readUInt16());return n}(),l=function(){var t,n;for(n=[],s=t=0;0<=f?t<f:t>f;s=0<=f?++t:--t)n.push(e.readUInt16());return n}(),r=(this.length-e.pos+this.offset)/2,o=function(){var t,n;for(n=[],s=t=0;0<=r?t<r:t>r;s=0<=r?++t:--t)n.push(e.readUInt16());return n}(),s=m=0,y=i.length;m<y;s=++m)for(v=i[s],n=g=h=p[s];h<=v?g<=v:g>=v;n=h<=v?++g:--g)0===l[s]?a=n+c[s]:0!==(a=o[l[s]/2+(n-h)-(f-s)]||0)&&(a+=c[s]),this.codeMap[n]=65535&a}e.pos=u}return e.encode=function(e,t){var n,r,i,a,o,s,c,l,u,f,d,h,p,v,m,g,y,b,w,N,x,S,k,C,L,A,E,P,_,I,O,M,D,F,Z,j,R,T,B,q,K,U,z,H,V,W;switch(P=new Vt,a=Object.keys(e).sort((function(e,t){return e-t})),t){case"macroman":for(p=0,v=function(){var e=[];for(h=0;h<256;++h)e.push(0);return e}(),g={0:0},i={},_=0,D=a.length;_<D;_++)null==g[z=e[r=a[_]]]&&(g[z]=++p),i[r]={old:e[r],new:g[e[r]]},v[r]=g[e[r]];return P.writeUInt16(1),P.writeUInt16(0),P.writeUInt32(12),P.writeUInt16(0),P.writeUInt16(262),P.writeUInt16(0),P.write(v),{charMap:i,subtable:P.data,maxGlyphID:p+1};case"unicode":for(A=[],u=[],y=0,g={},n={},m=c=null,I=0,F=a.length;I<F;I++)null==g[w=e[r=a[I]]]&&(g[w]=++y),n[r]={old:w,new:g[w]},o=g[w]-r,null!=m&&o===c||(m&&u.push(m),A.push(r),c=o),m=r;for(m&&u.push(m),u.push(65535),A.push(65535),C=2*(k=A.length),S=2*Math.pow(Math.log(k)/Math.LN2,2),f=Math.log(S/2)/Math.LN2,x=2*k-S,s=[],N=[],d=[],h=O=0,Z=A.length;O<Z;h=++O){if(L=A[h],l=u[h],65535===L){s.push(0),N.push(0);break}if(L-(E=n[L].new)>=32768)for(s.push(0),N.push(2*(d.length+k-h)),r=M=L;L<=l?M<=l:M>=l;r=L<=l?++M:--M)d.push(n[r].new);else s.push(E-L),N.push(0)}for(P.writeUInt16(3),P.writeUInt16(1),P.writeUInt32(12),P.writeUInt16(4),P.writeUInt16(16+8*k+2*d.length),P.writeUInt16(0),P.writeUInt16(C),P.writeUInt16(S),P.writeUInt16(f),P.writeUInt16(x),K=0,j=u.length;K<j;K++)r=u[K],P.writeUInt16(r);for(P.writeUInt16(0),U=0,R=A.length;U<R;U++)r=A[U],P.writeUInt16(r);for(H=0,T=s.length;H<T;H++)o=s[H],P.writeUInt16(o);for(V=0,B=N.length;V<B;V++)b=N[V],P.writeUInt16(b);for(W=0,q=d.length;W<q;W++)p=d[W],P.writeUInt16(p);return{charMap:n,subtable:P.data,maxGlyphID:y+1}}},e}(),Jt=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return Gt(t,Ht),t.prototype.tag="cmap",t.prototype.parse=function(e){var t,n,r;for(e.pos=this.offset,this.version=e.readUInt16(),r=e.readUInt16(),this.tables=[],this.unicode=null,n=0;0<=r?n<r:n>r;n=0<=r?++n:--n)t=new Xt(e,this.offset),this.tables.push(t),t.isUnicode&&null==this.unicode&&(this.unicode=t);return!0},t.encode=function(e,t){var n,r;return null==t&&(t="macroman"),n=Xt.encode(e,t),(r=new Vt).writeUInt16(0),r.writeUInt16(1),n.table=r.data.concat(n.subtable),n},t}(),Qt=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return Gt(t,Ht),t.prototype.tag="hhea",t.prototype.parse=function(e){return e.pos=this.offset,this.version=e.readInt(),this.ascender=e.readShort(),this.decender=e.readShort(),this.lineGap=e.readShort(),this.advanceWidthMax=e.readShort(),this.minLeftSideBearing=e.readShort(),this.minRightSideBearing=e.readShort(),this.xMaxExtent=e.readShort(),this.caretSlopeRise=e.readShort(),this.caretSlopeRun=e.readShort(),this.caretOffset=e.readShort(),e.pos+=8,this.metricDataFormat=e.readShort(),this.numberOfMetrics=e.readUInt16()},t}(),en=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return Gt(t,Ht),t.prototype.tag="OS/2",t.prototype.parse=function(e){if(e.pos=this.offset,this.version=e.readUInt16(),this.averageCharWidth=e.readShort(),this.weightClass=e.readUInt16(),this.widthClass=e.readUInt16(),this.type=e.readShort(),this.ySubscriptXSize=e.readShort(),this.ySubscriptYSize=e.readShort(),this.ySubscriptXOffset=e.readShort(),this.ySubscriptYOffset=e.readShort(),this.ySuperscriptXSize=e.readShort(),this.ySuperscriptYSize=e.readShort(),this.ySuperscriptXOffset=e.readShort(),this.ySuperscriptYOffset=e.readShort(),this.yStrikeoutSize=e.readShort(),this.yStrikeoutPosition=e.readShort(),this.familyClass=e.readShort(),this.panose=function(){var t,n;for(n=[],t=0;t<10;++t)n.push(e.readByte());return n}(),this.charRange=function(){var t,n;for(n=[],t=0;t<4;++t)n.push(e.readInt());return n}(),this.vendorID=e.readString(4),this.selection=e.readShort(),this.firstCharIndex=e.readShort(),this.lastCharIndex=e.readShort(),this.version>0&&(this.ascent=e.readShort(),this.descent=e.readShort(),this.lineGap=e.readShort(),this.winAscent=e.readShort(),this.winDescent=e.readShort(),this.codePageRange=function(){var t,n;for(n=[],t=0;t<2;t=++t)n.push(e.readInt());return n}(),this.version>1))return this.xHeight=e.readShort(),this.capHeight=e.readShort(),this.defaultChar=e.readShort(),this.breakChar=e.readShort(),this.maxContext=e.readShort()},t}(),tn=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return Gt(t,Ht),t.prototype.tag="post",t.prototype.parse=function(e){var t,n,r;switch(e.pos=this.offset,this.format=e.readInt(),this.italicAngle=e.readInt(),this.underlinePosition=e.readShort(),this.underlineThickness=e.readShort(),this.isFixedPitch=e.readInt(),this.minMemType42=e.readInt(),this.maxMemType42=e.readInt(),this.minMemType1=e.readInt(),this.maxMemType1=e.readInt(),this.format){case 65536:case 196608:break;case 131072:var i;for(n=e.readUInt16(),this.glyphNameIndex=[],i=0;0<=n?i<n:i>n;i=0<=n?++i:--i)this.glyphNameIndex.push(e.readUInt16());for(this.names=[],r=[];e.pos<this.offset+this.length;)t=e.readByte(),r.push(this.names.push(e.readString(t)));return r;case 151552:return n=e.readUInt16(),this.offsets=e.read(n);case 262144:return this.map=function(){var t,n,r;for(r=[],i=t=0,n=this.file.maxp.numGlyphs;0<=n?t<n:t>n;i=0<=n?++t:--t)r.push(e.readUInt32());return r}.call(this)}},t}(),nn=function(e,t){this.raw=e,this.length=e.length,this.platformID=t.platformID,this.encodingID=t.encodingID,this.languageID=t.languageID},rn=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return Gt(t,Ht),t.prototype.tag="name",t.prototype.parse=function(e){var t,n,r,i,a,o,s,c,l,u,f;for(e.pos=this.offset,e.readShort(),t=e.readShort(),o=e.readShort(),n=[],i=0;0<=t?i<t:i>t;i=0<=t?++i:--i)n.push({platformID:e.readShort(),encodingID:e.readShort(),languageID:e.readShort(),nameID:e.readShort(),length:e.readShort(),offset:this.offset+o+e.readShort()});for(s={},i=l=0,u=n.length;l<u;i=++l)r=n[i],e.pos=r.offset,c=e.readString(r.length),a=new nn(c,r),null==s[f=r.nameID]&&(s[f]=[]),s[r.nameID].push(a);this.strings=s,this.copyright=s[0],this.fontFamily=s[1],this.fontSubfamily=s[2],this.uniqueSubfamily=s[3],this.fontName=s[4],this.version=s[5];try{this.postscriptName=s[6][0].raw.replace(/[\x00-\x19\x80-\xff]/g,"")}catch(e){this.postscriptName=s[4][0].raw.replace(/[\x00-\x19\x80-\xff]/g,"")}return this.trademark=s[7],this.manufacturer=s[8],this.designer=s[9],this.description=s[10],this.vendorUrl=s[11],this.designerUrl=s[12],this.license=s[13],this.licenseUrl=s[14],this.preferredFamily=s[15],this.preferredSubfamily=s[17],this.compatibleFull=s[18],this.sampleText=s[19]},t}(),an=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return Gt(t,Ht),t.prototype.tag="maxp",t.prototype.parse=function(e){return e.pos=this.offset,this.version=e.readInt(),this.numGlyphs=e.readUInt16(),this.maxPoints=e.readUInt16(),this.maxContours=e.readUInt16(),this.maxCompositePoints=e.readUInt16(),this.maxComponentContours=e.readUInt16(),this.maxZones=e.readUInt16(),this.maxTwilightPoints=e.readUInt16(),this.maxStorage=e.readUInt16(),this.maxFunctionDefs=e.readUInt16(),this.maxInstructionDefs=e.readUInt16(),this.maxStackElements=e.readUInt16(),this.maxSizeOfInstructions=e.readUInt16(),this.maxComponentElements=e.readUInt16(),this.maxComponentDepth=e.readUInt16()},t}(),on=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return Gt(t,Ht),t.prototype.tag="hmtx",t.prototype.parse=function(e){var t,n,r,i,a,o,s;for(e.pos=this.offset,this.metrics=[],t=0,o=this.file.hhea.numberOfMetrics;0<=o?t<o:t>o;t=0<=o?++t:--t)this.metrics.push({advance:e.readUInt16(),lsb:e.readInt16()});for(r=this.file.maxp.numGlyphs-this.file.hhea.numberOfMetrics,this.leftSideBearings=function(){var n,i;for(i=[],t=n=0;0<=r?n<r:n>r;t=0<=r?++n:--n)i.push(e.readInt16());return i}(),this.widths=function(){var e,t,n,r;for(r=[],e=0,t=(n=this.metrics).length;e<t;e++)i=n[e],r.push(i.advance);return r}.call(this),n=this.widths[this.widths.length-1],s=[],t=a=0;0<=r?a<r:a>r;t=0<=r?++a:--a)s.push(this.widths.push(n));return s},t.prototype.forGlyph=function(e){return e in this.metrics?this.metrics[e]:{advance:this.metrics[this.metrics.length-1].advance,lsb:this.leftSideBearings[e-this.metrics.length]}},t}(),sn=[].slice,cn=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return Gt(t,Ht),t.prototype.tag="glyf",t.prototype.parse=function(){return this.cache={}},t.prototype.glyphFor=function(e){var t,n,r,i,a,o,s,c,l,u;return e in this.cache?this.cache[e]:(i=this.file.loca,t=this.file.contents,n=i.indexOf(e),0===(r=i.lengthOf(e))?this.cache[e]=null:(t.pos=this.offset+n,a=(o=new Vt(t.read(r))).readShort(),c=o.readShort(),u=o.readShort(),s=o.readShort(),l=o.readShort(),this.cache[e]=-1===a?new un(o,c,u,s,l):new ln(o,a,c,u,s,l),this.cache[e]))},t.prototype.encode=function(e,t,n){var r,i,a,o,s;for(a=[],i=[],o=0,s=t.length;o<s;o++)r=e[t[o]],i.push(a.length),r&&(a=a.concat(r.encode(n)));return i.push(a.length),{table:a,offsets:i}},t}(),ln=function(){function e(e,t,n,r,i,a){this.raw=e,this.numberOfContours=t,this.xMin=n,this.yMin=r,this.xMax=i,this.yMax=a,this.compound=!1}return e.prototype.encode=function(){return this.raw.data},e}(),un=function(){function e(e,t,n,r,i){var a,o;for(this.raw=e,this.xMin=t,this.yMin=n,this.xMax=r,this.yMax=i,this.compound=!0,this.glyphIDs=[],this.glyphOffsets=[],a=this.raw;o=a.readShort(),this.glyphOffsets.push(a.pos),this.glyphIDs.push(a.readUInt16()),32&o;)a.pos+=1&o?4:2,128&o?a.pos+=8:64&o?a.pos+=4:8&o&&(a.pos+=2)}return e.prototype.encode=function(){var e,t,n;for(t=new Vt(sn.call(this.raw.data)),e=0,n=this.glyphIDs.length;e<n;++e)t.pos=this.glyphOffsets[e];return t.data},e}(),fn=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return Gt(t,Ht),t.prototype.tag="loca",t.prototype.parse=function(e){var t,n;return e.pos=this.offset,t=this.file.head.indexToLocFormat,this.offsets=0===t?function(){var t,r;for(r=[],n=0,t=this.length;n<t;n+=2)r.push(2*e.readUInt16());return r}.call(this):function(){var t,r;for(r=[],n=0,t=this.length;n<t;n+=4)r.push(e.readUInt32());return r}.call(this)},t.prototype.indexOf=function(e){return this.offsets[e]},t.prototype.lengthOf=function(e){return this.offsets[e+1]-this.offsets[e]},t.prototype.encode=function(e,t){for(var n=new Uint32Array(this.offsets.length),r=0,i=0,a=0;a<n.length;++a)if(n[a]=r,i<t.length&&t[i]==a){++i,n[a]=r;var o=this.offsets[a],s=this.offsets[a+1]-o;s>0&&(r+=s)}for(var c=new Array(4*n.length),l=0;l<n.length;++l)c[4*l+3]=255&n[l],c[4*l+2]=(65280&n[l])>>8,c[4*l+1]=(16711680&n[l])>>16,c[4*l]=(4278190080&n[l])>>24;return c},t}(),dn=function(){function e(e){this.font=e,this.subset={},this.unicodes={},this.next=33}return e.prototype.generateCmap=function(){var e,t,n,r,i;for(t in r=this.font.cmap.tables[0].codeMap,e={},i=this.subset)n=i[t],e[t]=r[n];return e},e.prototype.glyphsFor=function(e){var t,n,r,i,a,o,s;for(r={},a=0,o=e.length;a<o;a++)r[i=e[a]]=this.font.glyf.glyphFor(i);for(i in t=[],r)(null!=(n=r[i])?n.compound:void 0)&&t.push.apply(t,n.glyphIDs);if(t.length>0)for(i in s=this.glyphsFor(t))n=s[i],r[i]=n;return r},e.prototype.encode=function(e,t){var n,r,i,a,o,s,c,l,u,f,d,h,p,v,m;for(r in n=Jt.encode(this.generateCmap(),"unicode"),a=this.glyphsFor(e),d={0:0},m=n.charMap)d[(s=m[r]).old]=s.new;for(h in f=n.maxGlyphID,a)h in d||(d[h]=f++);return l=function(e){var t,n;for(t in n={},e)n[e[t]]=t;return n}(d),u=Object.keys(l).sort((function(e,t){return e-t})),p=function(){var e,t,n;for(n=[],e=0,t=u.length;e<t;e++)o=u[e],n.push(l[o]);return n}(),i=this.font.glyf.encode(a,p,d),c=this.font.loca.encode(i.offsets,p),v={cmap:this.font.cmap.raw(),glyf:i.table,loca:c,hmtx:this.font.hmtx.raw(),hhea:this.font.hhea.raw(),maxp:this.font.maxp.raw(),post:this.font.post.raw(),name:this.font.name.raw(),head:this.font.head.encode(t)},this.font.os2.exists&&(v["OS/2"]=this.font.os2.raw()),this.font.directory.encode(v)},e}();Ae.API.PDFObject=function(){var e;function t(){}return e=function(e,t){return(Array(t+1).join("0")+e).slice(-t)},t.convert=function(n){var r,i,a,o;if(Array.isArray(n))return"["+function(){var e,i,a;for(a=[],e=0,i=n.length;e<i;e++)r=n[e],a.push(t.convert(r));return a}().join(" ")+"]";if("string"==typeof n)return"/"+n;if(null!=n?n.isString:void 0)return"("+n+")";if(n instanceof Date)return"(D:"+e(n.getUTCFullYear(),4)+e(n.getUTCMonth(),2)+e(n.getUTCDate(),2)+e(n.getUTCHours(),2)+e(n.getUTCMinutes(),2)+e(n.getUTCSeconds(),2)+"Z)";if("[object Object]"==={}.toString.call(n)){for(i in a=["<<"],n)o=n[i],a.push("/"+i+" "+t.convert(o));return a.push(">>"),a.join("\n")}return""+n},t}();const hn=Ae},1957:(e,t,n)=>{var r="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g;e.exports=r},5639:(e,t,n)=>{var r=n(1957),i="object"==typeof self&&self&&self.Object===Object&&self,a=r||i||Function("return this")();e.exports=a},3279:(e,t,n)=>{var r=n(3218),i=n(7771),a=n(4841),o=Math.max,s=Math.min;e.exports=function(e,t,n){var c,l,u,f,d,h,p=0,v=!1,m=!1,g=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function y(t){var n=c,r=l;return c=l=void 0,p=t,f=e.apply(r,n)}function b(e){var n=e-h;return void 0===h||n>=t||n<0||m&&e-p>=u}function w(){var e=i();if(b(e))return N(e);d=setTimeout(w,function(e){var n=t-(e-h);return m?s(n,u-(e-p)):n}(e))}function N(e){return d=void 0,g&&c?y(e):(c=l=void 0,f)}function x(){var e=i(),n=b(e);if(c=arguments,l=this,h=e,n){if(void 0===d)return function(e){return p=e,d=setTimeout(w,t),v?y(e):f}(h);if(m)return clearTimeout(d),d=setTimeout(w,t),y(h)}return void 0===d&&(d=setTimeout(w,t)),f}return t=a(t)||0,r(n)&&(v=!!n.leading,u=(m="maxWait"in n)?o(a(n.maxWait)||0,t):u,g="trailing"in n?!!n.trailing:g),x.cancel=function(){void 0!==d&&clearTimeout(d),p=0,c=h=l=d=void 0},x.flush=function(){return void 0===d?f:N(i())},x}},3218:e=>{e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},7771:(e,t,n)=>{var r=n(5639);e.exports=function(){return r.Date.now()}},4841:e=>{e.exports=function(e){return e}},1452:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function i(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var a=typeof n;if("string"===a||"number"===a)e.push(n);else if(Array.isArray(n)){if(n.length){var o=i.apply(null,n);o&&e.push(o)}}else if("object"===a){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var s in n)r.call(n,s)&&n[s]&&e.push(s)}}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n)}()},6077:(e,t,n)=>{"use strict";n.d(t,{RV:()=>c.R,ZM:()=>u.Z,ZP:()=>h,aV:()=>a.Z,cI:()=>o.Z,gN:()=>i.Z,qo:()=>f.Z,zb:()=>l.Z});var r=n(7294),i=n(1045),a=n(5378),o=n(4294),s=n(5318),c=n(1696),l=n(8665),u=n(2131),f=n(1806),d=r.forwardRef(s.Z);d.FormProvider=c.R,d.Field=i.Z,d.List=a.Z,d.useForm=o.Z,d.useWatch=f.Z;const h=d},1960:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function i(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var a=typeof n;if("string"===a||"number"===a)e.push(n);else if(Array.isArray(n)){if(n.length){var o=i.apply(null,n);o&&e.push(o)}}else if("object"===a){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var s in n)r.call(n,s)&&n[s]&&e.push(s)}}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n)}()},1740:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function i(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var a=typeof n;if("string"===a||"number"===a)e.push(n);else if(Array.isArray(n)){if(n.length){var o=i.apply(null,n);o&&e.push(o)}}else if("object"===a){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var s in n)r.call(n,s)&&n[s]&&e.push(s)}}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n)}()},858:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function i(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var a=typeof n;if("string"===a||"number"===a)e.push(n);else if(Array.isArray(n)){if(n.length){var o=i.apply(null,n);o&&e.push(o)}}else if("object"===a){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var s in n)r.call(n,s)&&n[s]&&e.push(s)}}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n)}()},5215:function(e){e.exports=function(){"use strict";var e=1e3,t=6e4,n=36e5,r="millisecond",i="second",a="minute",o="hour",s="day",c="week",l="month",u="quarter",f="year",d="date",h="Invalid Date",p=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,v=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,m={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(e){var t=["th","st","nd","rd"],n=e%100;return"["+e+(t[(n-20)%10]||t[n]||t[0])+"]"}},g=function(e,t,n){var r=String(e);return!r||r.length>=t?e:""+Array(t+1-r.length).join(n)+e},y={s:g,z:function(e){var t=-e.utcOffset(),n=Math.abs(t),r=Math.floor(n/60),i=n%60;return(t<=0?"+":"-")+g(r,2,"0")+":"+g(i,2,"0")},m:function e(t,n){if(t.date()<n.date())return-e(n,t);var r=12*(n.year()-t.year())+(n.month()-t.month()),i=t.clone().add(r,l),a=n-i<0,o=t.clone().add(r+(a?-1:1),l);return+(-(r+(n-i)/(a?i-o:o-i))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(e){return{M:l,y:f,w:c,d:s,D:d,h:o,m:a,s:i,ms:r,Q:u}[e]||String(e||"").toLowerCase().replace(/s$/,"")},u:function(e){return void 0===e}},b="en",w={};w[b]=m;var N="$isDayjsObject",x=function(e){return e instanceof L||!(!e||!e[N])},S=function e(t,n,r){var i;if(!t)return b;if("string"==typeof t){var a=t.toLowerCase();w[a]&&(i=a),n&&(w[a]=n,i=a);var o=t.split("-");if(!i&&o.length>1)return e(o[0])}else{var s=t.name;w[s]=t,i=s}return!r&&i&&(b=i),i||!r&&b},k=function(e,t){if(x(e))return e.clone();var n="object"==typeof t?t:{};return n.date=e,n.args=arguments,new L(n)},C=y;C.l=S,C.i=x,C.w=function(e,t){return k(e,{locale:t.$L,utc:t.$u,x:t.$x,$offset:t.$offset})};var L=function(){function m(e){this.$L=S(e.locale,null,!0),this.parse(e),this.$x=this.$x||e.x||{},this[N]=!0}var g=m.prototype;return g.parse=function(e){this.$d=function(e){var t=e.date,n=e.utc;if(null===t)return new Date(NaN);if(C.u(t))return new Date;if(t instanceof Date)return new Date(t);if("string"==typeof t&&!/Z$/i.test(t)){var r=t.match(p);if(r){var i=r[2]-1||0,a=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,a)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,a)}}return new Date(t)}(e),this.init()},g.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},g.$utils=function(){return C},g.isValid=function(){return!(this.$d.toString()===h)},g.isSame=function(e,t){var n=k(e);return this.startOf(t)<=n&&n<=this.endOf(t)},g.isAfter=function(e,t){return k(e)<this.startOf(t)},g.isBefore=function(e,t){return this.endOf(t)<k(e)},g.$g=function(e,t,n){return C.u(e)?this[t]:this.set(n,e)},g.unix=function(){return Math.floor(this.valueOf()/1e3)},g.valueOf=function(){return this.$d.getTime()},g.startOf=function(e,t){var n=this,r=!!C.u(t)||t,u=C.p(e),h=function(e,t){var i=C.w(n.$u?Date.UTC(n.$y,t,e):new Date(n.$y,t,e),n);return r?i:i.endOf(s)},p=function(e,t){return C.w(n.toDate()[e].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(t)),n)},v=this.$W,m=this.$M,g=this.$D,y="set"+(this.$u?"UTC":"");switch(u){case f:return r?h(1,0):h(31,11);case l:return r?h(1,m):h(0,m+1);case c:var b=this.$locale().weekStart||0,w=(v<b?v+7:v)-b;return h(r?g-w:g+(6-w),m);case s:case d:return p(y+"Hours",0);case o:return p(y+"Minutes",1);case a:return p(y+"Seconds",2);case i:return p(y+"Milliseconds",3);default:return this.clone()}},g.endOf=function(e){return this.startOf(e,!1)},g.$set=function(e,t){var n,c=C.p(e),u="set"+(this.$u?"UTC":""),h=(n={},n[s]=u+"Date",n[d]=u+"Date",n[l]=u+"Month",n[f]=u+"FullYear",n[o]=u+"Hours",n[a]=u+"Minutes",n[i]=u+"Seconds",n[r]=u+"Milliseconds",n)[c],p=c===s?this.$D+(t-this.$W):t;if(c===l||c===f){var v=this.clone().set(d,1);v.$d[h](p),v.init(),this.$d=v.set(d,Math.min(this.$D,v.daysInMonth())).$d}else h&&this.$d[h](p);return this.init(),this},g.set=function(e,t){return this.clone().$set(e,t)},g.get=function(e){return this[C.p(e)]()},g.add=function(r,u){var d,h=this;r=Number(r);var p=C.p(u),v=function(e){var t=k(h);return C.w(t.date(t.date()+Math.round(e*r)),h)};if(p===l)return this.set(l,this.$M+r);if(p===f)return this.set(f,this.$y+r);if(p===s)return v(1);if(p===c)return v(7);var m=(d={},d[a]=t,d[o]=n,d[i]=e,d)[p]||1,g=this.$d.getTime()+r*m;return C.w(g,this)},g.subtract=function(e,t){return this.add(-1*e,t)},g.format=function(e){var t=this,n=this.$locale();if(!this.isValid())return n.invalidDate||h;var r=e||"YYYY-MM-DDTHH:mm:ssZ",i=C.z(this),a=this.$H,o=this.$m,s=this.$M,c=n.weekdays,l=n.months,u=n.meridiem,f=function(e,n,i,a){return e&&(e[n]||e(t,r))||i[n].slice(0,a)},d=function(e){return C.s(a%12||12,e,"0")},p=u||function(e,t,n){var r=e<12?"AM":"PM";return n?r.toLowerCase():r};return r.replace(v,(function(e,r){return r||function(e){switch(e){case"YY":return String(t.$y).slice(-2);case"YYYY":return C.s(t.$y,4,"0");case"M":return s+1;case"MM":return C.s(s+1,2,"0");case"MMM":return f(n.monthsShort,s,l,3);case"MMMM":return f(l,s);case"D":return t.$D;case"DD":return C.s(t.$D,2,"0");case"d":return String(t.$W);case"dd":return f(n.weekdaysMin,t.$W,c,2);case"ddd":return f(n.weekdaysShort,t.$W,c,3);case"dddd":return c[t.$W];case"H":return String(a);case"HH":return C.s(a,2,"0");case"h":return d(1);case"hh":return d(2);case"a":return p(a,o,!0);case"A":return p(a,o,!1);case"m":return String(o);case"mm":return C.s(o,2,"0");case"s":return String(t.$s);case"ss":return C.s(t.$s,2,"0");case"SSS":return C.s(t.$ms,3,"0");case"Z":return i}return null}(e)||i.replace(":","")}))},g.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},g.diff=function(r,d,h){var p,v=this,m=C.p(d),g=k(r),y=(g.utcOffset()-this.utcOffset())*t,b=this-g,w=function(){return C.m(v,g)};switch(m){case f:p=w()/12;break;case l:p=w();break;case u:p=w()/3;break;case c:p=(b-y)/6048e5;break;case s:p=(b-y)/864e5;break;case o:p=b/n;break;case a:p=b/t;break;case i:p=b/e;break;default:p=b}return h?p:C.a(p)},g.daysInMonth=function(){return this.endOf(l).$D},g.$locale=function(){return w[this.$L]},g.locale=function(e,t){if(!e)return this.$L;var n=this.clone(),r=S(e,t,!0);return r&&(n.$L=r),n},g.clone=function(){return C.w(this.$d,this)},g.toDate=function(){return new Date(this.valueOf())},g.toJSON=function(){return this.isValid()?this.toISOString():null},g.toISOString=function(){return this.$d.toISOString()},g.toString=function(){return this.$d.toUTCString()},m}(),A=L.prototype;return k.prototype=A,[["$ms",r],["$s",i],["$m",a],["$H",o],["$W",s],["$M",l],["$y",f],["$D",d]].forEach((function(e){A[e[1]]=function(t){return this.$g(t,e[0],e[1])}})),k.extend=function(e,t){return e.$i||(e(t,L,k),e.$i=!0),k},k.locale=S,k.isDayjs=x,k.unix=function(e){return k(1e3*e)},k.en=w[b],k.Ls=w,k.p={},k}()},1762:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function i(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var a=typeof n;if("string"===a||"number"===a)e.push(n);else if(Array.isArray(n)){if(n.length){var o=i.apply(null,n);o&&e.push(o)}}else if("object"===a){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var s in n)r.call(n,s)&&n[s]&&e.push(s)}}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n)}()},8117:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a,r:()=>i});var r=n(7294),i=r.createContext(null);function a(){return r.useContext(i)}},2258:(e,t,n)=>{"use strict";n.d(t,{Ac:()=>o.Z,Wx:()=>i.Z,Xo:()=>a.Z,ZP:()=>c,lk:()=>s.Z});var r=n(5071),i=n(9415),a=n(3881),o=n(5217),s=n(8117);const c=r.Z},3718:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function i(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var a=typeof n;if("string"===a||"number"===a)e.push(n);else if(Array.isArray(n)){if(n.length){var o=i.apply(null,n);o&&e.push(o)}}else if("object"===a){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var s in n)r.call(n,s)&&n[s]&&e.push(s)}}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n)}()},8603:(e,t,n)=>{"use strict";n.d(t,{tS:()=>o});var r=n(3433),i=n(5110);function a(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,i.Z)(e)){var n=e.nodeName.toLowerCase(),r=["input","select","textarea","button"].includes(n)||e.isContentEditable||"a"===n&&!!e.getAttribute("href"),a=e.getAttribute("tabindex"),o=Number(a),s=null;return a&&!Number.isNaN(o)?s=o:r&&null===s&&(s=0),r&&e.disabled&&(s=null),null!==s&&(s>=0||t&&s<0)}return!1}function o(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,r.Z)(e.querySelectorAll("*")).filter((function(e){return a(e,t)}));return a(e,t)&&n.unshift(e),n}},5105:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r={MAC_ENTER:3,BACKSPACE:8,TAB:9,NUM_CENTER:12,ENTER:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,PRINT_SCREEN:44,INSERT:45,DELETE:46,ZERO:48,ONE:49,TWO:50,THREE:51,FOUR:52,FIVE:53,SIX:54,SEVEN:55,EIGHT:56,NINE:57,QUESTION_MARK:63,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,META:91,WIN_KEY_RIGHT:92,CONTEXT_MENU:93,NUM_ZERO:96,NUM_ONE:97,NUM_TWO:98,NUM_THREE:99,NUM_FOUR:100,NUM_FIVE:101,NUM_SIX:102,NUM_SEVEN:103,NUM_EIGHT:104,NUM_NINE:105,NUM_MULTIPLY:106,NUM_PLUS:107,NUM_MINUS:109,NUM_PERIOD:110,NUM_DIVISION:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,NUMLOCK:144,SEMICOLON:186,DASH:189,EQUALS:187,COMMA:188,PERIOD:190,SLASH:191,APOSTROPHE:192,SINGLE_QUOTE:222,OPEN_SQUARE_BRACKET:219,BACKSLASH:220,CLOSE_SQUARE_BRACKET:221,WIN_KEY:224,MAC_FF_META:224,WIN_IME:229,isTextModifyingKeyEvent:function(e){var t=e.keyCode;if(e.altKey&&!e.ctrlKey||e.metaKey||t>=r.F1&&t<=r.F12)return!1;switch(t){case r.ALT:case r.CAPS_LOCK:case r.CONTEXT_MENU:case r.CTRL:case r.DOWN:case r.END:case r.ESC:case r.HOME:case r.INSERT:case r.LEFT:case r.MAC_FF_META:case r.META:case r.NUMLOCK:case r.NUM_CENTER:case r.PAGE_DOWN:case r.PAGE_UP:case r.PAUSE:case r.PRINT_SCREEN:case r.RIGHT:case r.SHIFT:case r.UP:case r.WIN_KEY:case r.WIN_KEY_RIGHT:return!1;default:return!0}},isCharacterKey:function(e){if(e>=r.ZERO&&e<=r.NINE)return!0;if(e>=r.NUM_ZERO&&e<=r.NUM_MULTIPLY)return!0;if(e>=r.A&&e<=r.Z)return!0;if(-1!==window.navigator.userAgent.indexOf("WebKit")&&0===e)return!0;switch(e){case r.SPACE:case r.QUESTION_MARK:case r.NUM_PLUS:case r.NUM_MINUS:case r.NUM_PERIOD:case r.NUM_DIVISION:case r.SEMICOLON:case r.DASH:case r.EQUALS:case r.COMMA:case r.PERIOD:case r.SLASH:case r.APOSTROPHE:case r.SINGLE_QUOTE:case r.OPEN_SQUARE_BRACKET:case r.BACKSLASH:case r.CLOSE_SQUARE_BRACKET:return!0;default:return!1}}};const i=r},5164:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=function(e){return+setTimeout(e,16)},i=function(e){return clearTimeout(e)};"undefined"!=typeof window&&"requestAnimationFrame"in window&&(r=function(e){return window.requestAnimationFrame(e)},i=function(e){return window.cancelAnimationFrame(e)});var a=0,o=new Map;function s(e){o.delete(e)}var c=function(e){var t=a+=1;return function n(i){if(0===i)s(t),e();else{var a=r((function(){n(i-1)}));o.set(t,a)}}(arguments.length>1&&void 0!==arguments[1]?arguments[1]:1),t};c.cancel=function(e){var t=o.get(e);return s(e),i(t)};const l=c},334:(e,t,n)=>{"use strict";n.d(t,{ET:()=>l,Kp:()=>a,ZP:()=>u});var r={},i=[];function a(e,t){}function o(e,t){}function s(e,t,n){t||r[n]||(e(!1,n),r[n]=!0)}function c(e,t){s(a,e,t)}function l(e,t){s(o,e,t)}c.preMessage=function(e){i.push(e)},c.resetWarned=function(){r={}},c.noteOnce=l;const u=c},7294:(e,t,n)=>{"use strict";e.exports=n(2408)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,