// Copyright (c) Zanger LLC. All rights reserved.

var ua_tabs={};var experimentalDeviceError=true;var canvasDisable=false;log.log("Starting Up");browser.browserAction.setBadgeText({'text':"."});loadCanvasSetting();setInterval(mainTask,1000);setInterval(updateCanvasLicense,10000);setInterval(cleanUpUA,60000);browser.webRequest.onBeforeSendHeaders.addListener(userAgentChange,{urls:["*://*.ticketmaster.com/*","*://*.livenation.com/*",]},["blocking","requestHeaders"]);browser.runtime.onMessage.addListener(messageHandler);browser.runtime.onMessageExternal.addListener(messageHandler);createContextMenu();browser.contextMenus.onClicked.addListener(contextHandler);browser.commands.onCommand.addListener(commandHandler);updateCanvasLicense();function mainTask(){updateBadgeStatus();}
async function loadCanvasSetting(){var promise;promise=browser.storage.sync.get('general.canvas');await promise.then(function(object){if(object['general.canvas']!==undefined){canvasDisable=object['general.canvas'].disable;updateCanvasLicense();}});}
browser.storage.onChanged.addListener(function(changes,areaName){if(areaName==="sync"){if(changes['general.canvas']!=undefined){canvasDisable=changes['general.canvas'].newValue.disable;updateCanvasLicense();}}});function updateBadgeStatus(){var colorString="#D0D3D4";if(license.isLoggedIn){if(license.valid)
colorString="#2ECC71";else
colorString="#E74C3C";}
browser.browserAction.setBadgeBackgroundColor({'color':colorString});}
function updateCanvasLicense(){if(license.valid&&!canvasDisable)
browser.storage.local.set({'canvas.blockMode':"fake"});else
browser.storage.local.set({'canvas.blockMode':"allowEverything"});}
async function cleanUpUA(){var promise,tabs;promise=browser.tabs.query({});await promise.then(function(value){tabs=value;});for(var key in ua_tabs){for(var i=0;i<tabs.length;i++){if(tabs[i].id.toString()==key)
return;}
delete ua_tabs[key];}}
function userAgentChange(request){if(license.isLoggedIn){if(license.valid){if(ua_tabs[request.tabId.toString()]){if(typeof(request.requestHeaders)==="object"){for(var header of request.requestHeaders){if(header.name.toLowerCase()==="user-agent"){header.value=USER_AGENT;}}}}}}
return{requestHeaders:request.requestHeaders};}
function messageHandler(message,sender,reply){switch(message.type){case"License":reply({'active':license.valid,'tabId':sender.tab.id});break;case"LogIn":license.logIn();updateCanvasLicense();break;case"LogOut":license.logOut();updateCanvasLicense();session.cleanUp();break;case"tmderfix":ua_tabs[sender.tab.id.toString()]=true;messageHandleDeleteSIDCookie(message,sender);break;case"eventscreen":if(experimentalDeviceError)
ua_tabs[sender.tab.id.toString()]=true;break;case"clear_ua":ua_tabs[sender.tab.id.toString()]=false;break;case"2FA_email":twoFA.setTabEmail(sender.tab.id.toString(),message.email);break;case"2FA_requestCode":twoFA.requestCode(sender.tab.id.toString());break;}}
async function commandHandler(command){var promise,tab;promise=browser.tabs.query({'active':true,'currentWindow':true});await promise.then(function(value){tab=value[0];});switch(command){case"remove-tab-cookies":deleteTabCookies(tab.cookieStoreId);break;case"duplicate-tab":openDuplicatePrompt(tab.id);break;case"open-event-summary":break;case"set-tab-proxy":if(proxyMap.proxyCount>0){openSetProxyPrompt(tab.id);}
break;}}
function createContextMenu(){var tmPatterns=["*://*.ticketmaster.com/*","*://*.ticketmaster.co.uk/*","*://*.ticketmaster.ca/*","*://*.ticketmaster.ie/*","*://*.ticketmaster.com.au/*","*://*.ticketmaster.co.nz/*","*://*.livenation.com/*",];browser.contextMenus.create({'id':"setProxy",'title':"Set Proxy Number",'contexts':["page","tab"]});browser.contextMenus.create({'id':"duplicateTab",'title':"Duplicate Tab",'contexts':["page","tab"]});browser.contextMenus.create({'id':"openEventSummary",'title':"Open Event Summary",'contexts':["page","tab"],'documentUrlPatterns':tmPatterns});browser.contextMenus.create({'id':"refreshAll",'title':"Refresh All Tabs",'contexts':["page","tab"]});browser.contextMenus.create({'id':"deleteTabCookies",'title':"Delete Tab Cookies",'contexts':["page","tab"]});browser.contextMenus.create({'id':"deleteAllCookies",'title':"Delete All Cookies",'contexts':["page","tab"]});}
function contextHandler(info,tab){switch(info.menuItemId){case"deleteAllCookies":log.log("Delete All Cookies Pressed");session.deleteAllCookies();break;case"deleteTabCookies":log.log("Delete Cookies Pressed");session.deleteCookies(tab.cookieStoreId);break;case"refreshAll":log.log("Refresh All Tabs Pressed");refreshAllTabs();break;case"duplicateTab":log.log("Duplicate Tab Pressed");openDuplicatePrompt(tab.id);break;case"setProxy":log.log("Set Proxy Pressed");if(proxyMap.proxyCount>0){openSetProxyPrompt(tab.id);}
break;case"openEventSummary":break;}}
async function refreshAllTabs(){if(license.valid){var promise,tabs;promise=browser.tabs.query({'currentWindow':true});await promise.then(function(value){tabs=value;});for(var i=0;i<tabs.length;i++){browser.tabs.reload(tabs[i].id);}}}
async function messageHandleDeleteSIDCookie(message,sender){if(license.valid){var promise,cookieStore,cookies,allowed;promise=browser.storage.sync.get('general.cookies');await promise.then(function(object){allowed=object['general.cookies'].enable;});if(allowed!=true){log.log("Can't remove cookies because feature is disabled");return;}
promise=browser.tabs.get(sender.tab.id);await promise.then(function(tab){cookieStore=tab.cookieStoreId;});promise=browser.cookies.getAll({'storeId':cookieStore});await promise.then(function(value){cookies=value;});for(var i=0;i<cookies.length;i++){if((cookies[i].name=="SID")||(cookies[i].name=="TM_PIXEL")){var cookiePrefix=cookies[i].secure?"https://":"http://";if(cookies[i].domain.charAt(0)==".")
cookiePrefix+="www";var url=cookiePrefix+cookies[i].domain+cookies[i].path;browser.cookies.remove({'name':cookies[i].name,'storeId':cookies[i].storeId,'url':url});}}
browser.tabs.sendMessage(sender.tab.id,{'type':10});debug("Finished auto-clear");}}