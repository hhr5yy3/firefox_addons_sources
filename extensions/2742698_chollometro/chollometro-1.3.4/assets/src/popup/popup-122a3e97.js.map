{"version":3,"file":"popup-122a3e97.js","sources":["../../../../src/ui/assets/icons/checkboxOff.inline.svg","../../../../src/ui/assets/icons/checkboxOn.inline.svg","../../../../node_modules/@react-icons/all-files/si/SiZapier.js","../../../../src/ui/components/RadioButton/RadioButton.component.tsx","../../../../src/ui/assets/icons/message.inline.svg","../../../../src/ui/assets/icons/settings.inline.svg","../../../../src/ui/assets/icons/serp.inline.svg","../../../../src/ui/features/price-track/views/PriceTrackConfig/index.ts","../../../../src/ui/features/price-track/views/PriceTrackNotifications/index.ts","../../../../src/ui/features/account/views/Profile/Profile.view.tsx","../../../../src/ui/features/account/views/Profile/index.ts","../../../../src/ui/components/CallToPP/CallToPP.component.tsx","../../../../src/popup/Popup.view.tsx","../../../../src/popup/index.ts"],"sourcesContent":["export default \"__VITE_ASSET__d75979f3__\"","export default \"__VITE_ASSET__335a83e4__\"","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.SiZapier = function SiZapier (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"role\":\"img\",\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"title\",\"attr\":{},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15 12.004c0 .893-.165 1.746-.461 2.535-.787.297-1.643.461-2.535.461h-.009c-.893 0-1.745-.165-2.534-.461C9.164 13.75 9 12.896 9 12.004v-.009c0-.893.164-1.745.461-2.534C10.25 9.164 11.103 9 11.995 9h.009c.893 0 1.748.164 2.535.462.297.788.461 1.641.461 2.535v.007zM23.835 10H16.83l4.948-4.952c-.39-.548-.82-1.06-1.295-1.533-.473-.474-.985-.907-1.53-1.296l-4.954 4.949V.165C13.35.061 12.686 0 12.004 0h-.01c-.68 0-1.346.061-1.995.165V7.17l-4.95-4.949c-.549.386-1.06.821-1.534 1.294-.474.474-.908.987-1.296 1.533L7.168 10H.165S0 11.316 0 11.995v.009c0 .68.061 1.348.165 1.995H7.17l-4.949 4.952c.777 1.096 1.733 2.051 2.827 2.83L10 16.831v7.004c.648.105 1.313.165 1.991.165h.017c.679 0 1.344-.06 1.991-.165v-7.004l4.952 4.95c.548-.375 1.06-.812 1.529-1.29h.005c.473-.465.906-.976 1.296-1.531l-4.95-4.949h7.004c.105-.645.165-1.304.165-1.98V12c0-.678-.06-1.343-.165-1.99\"}}]})(props);\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport logger from '~/ui/utils/logger';\nimport { ReactComponent as CheckboxOff } from '~A/icons/checkboxOff.inline.svg';\nimport { ReactComponent as CheckboxOn } from '~A/icons/checkboxOn.inline.svg';\nimport styles from './RadioButton.module.scss';\n\n/* export interface ICheckBoxProps {\n    isChecked: boolean;\n    onChange: (value: boolean) => void;\n    label: string;\n}\n\nexport const CheckBox = ({ isChecked, onChange, label }: ICheckBoxProps) => {\n    return (\n        <div className={styles.container} onClick={() => onChange(!isChecked)}>\n            <span className={styles.customCheck}>\n                <input type=\"checkbox\" checked={isChecked} readOnly />\n                <span className={styles.placeholder}>\n                    {isChecked ? <CheckboxOn /> : <CheckboxOff />}\n                </span>\n            </span>\n            <label htmlFor=\"\">{label}</label>\n        </div>\n    );\n}; */\n\nexport interface IRadioBox<OptionValue> {\n    options: { value: OptionValue; label: string }[];\n    radioState: OptionValue;\n    name: string;\n    onChange: (state: OptionValue) => void;\n    layout: 'col' | 'row';\n}\nexport function RadioBox<option>({\n    options,\n    radioState,\n    name,\n    onChange,\n    layout = 'col',\n}: IRadioBox<option>) {\n    logger.log(radioState);\n    return (\n        <div className={classNames(styles.radioLayout, layout === 'row' ? styles.h : '')}>\n            {options.map((elm, i) => {\n                return (\n                    <div className={styles.radioWrapper}>\n                        <input\n                            type=\"radio\"\n                            name={name}\n                            id=\"\"\n                            checked={radioState === elm.value}\n                            value={elm.value}\n                            onChange={() => onChange(elm.value)}\n                        />\n                        {radioState === elm.value ? <CheckboxOn /> : <CheckboxOff />}\n                        <label>{elm.label}</label>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n","export default \"__VITE_ASSET__2de2780c__\"","export default \"__VITE_ASSET__04604aea__\"","export default \"__VITE_ASSET__0e85a62c__\"","import View from './PriceTrackConfig.view';\n\nexport const PriceTrackConfigView = View;\n","import View from './PriceTrackNotifications.view';\n\nexport const PriceTrackNotificationsView = View;\n","import { SiZapier } from '@react-icons/all-files/si/SiZapier';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, Suspense, useEffect, useRef, useState } from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { useDispatch } from 'react-redux';\nimport { ErrorDisplay } from '~/ui/components';\nimport { Disclaimer } from '~/ui/components/Disclaimer/Disclaimer.component';\nimport { Loader } from '~/ui/components/Loader';\nimport { OptionSelect } from '~/ui/components/OptionSelect/OptionSelect.component';\nimport { RadioBox } from '~/ui/components/RadioButton/RadioButton.component';\nimport { useAPIResource } from '~/ui/utils/api';\nimport { ReactComponent as Message } from '~A/icons/message.inline.svg';\nimport { ReactComponent as Settings } from '~A/icons/settings.inline.svg';\nimport { ReactComponent as Serp } from '~A/icons/serp.inline.svg';\nimport browser from '~B/browser/browser';\nimport logger from '~B/utils/logger';\nimport { setLoginStatus } from '~F/account/redux/account/account.reducer';\nimport { logOut } from '~F/app/redux/app/background-link.saga';\nimport { useAppSelector } from '~F/app/store';\nimport { PriceTrackConfigView } from '~F/price-track/views/PriceTrackConfig';\nimport { PriceTrackNotificationsView } from '~F/price-track/views/PriceTrackNotifications';\nimport { configAPIHandler, IUserSettings, settingsAPIHandler } from '../../api';\nimport styles from './Profile.module.scss';\nimport { getExtensionPage } from '~/ui/utils/urlAccess';\n\nexport default () => (\n    <ErrorBoundary FallbackComponent={() => <ErrorDisplay dialog=\"unknown\" />}>\n        <Suspense fallback={<Loader />}>\n            <ProfileView />\n        </Suspense>\n    </ErrorBoundary>\n);\ntype UIOptions<T = string> = { label: string; value: T }[];\n\ntype ProfileOptions = 'configuración' | 'cashback' | 'mis alertas' | 'notificaciones';\nconst ProfileView: FunctionComponent<{ menuOptions?: ProfileOptions[] }> = ({\n    menuOptions = ['configuración', 'mis alertas', 'notificaciones'],\n}) => {\n    const [configRSS, configAPI] = useAPIResource(configAPIHandler);\n\n    const [config, setConfig] = useState(configRSS);\n\n    const { loggedIn, username, email, avatarUrl } = useAppSelector(\n        (state) => state.alertas.loginStatus,\n    );\n    const [subViewProfile, setSubViewProfile] = useState<ProfileOptions>('configuración');\n    const dispatch = useDispatch();\n    logger.debug('config api', configRSS);\n    useEffect(() => {\n        if (config.trackingEmail === '') {\n            setConfig({ ...config, trackingEmail: email });\n        }\n        if (import.meta.env.NODE_ENV !== 'test') {\n            browser.browserAction.getBadgeText({}).then((text) => {\n                if (Number.parseInt(text) > 0) {\n                    setSubViewProfile('notificaciones');\n                }\n            });\n        }\n    }, []);\n    const inputWrapper = useRef<HTMLDivElement>();\n    const logOutHandler = () => {\n        dispatch(logOut());\n        dispatch(\n            setLoginStatus({\n                loggedIn: false,\n                username: '',\n                email: '',\n                avatarUrl: '',\n            }),\n        );\n    };\n\n    /*  const commitConfig = async (setIsLoading: (check: boolean) => void) => {\n        const isValid = inputWrapper.current\n            ?.querySelector<HTMLInputElement>('input[type=\"email\"]')\n            ?.checkValidity();\n        if (!isValid) {\n            logger.log('valid email');\n            return;\n        }\n        setIsLoading(true);\n        await configAPI.update(config);\n        setIsLoading(false);\n    }; */\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.sidebar}>\n                <div className={styles.logoWrapper}>\n                    <div className={styles.userAvatar}>\n                        {avatarUrl ? <img src={avatarUrl} alt=\"\" /> : <SiZapier />}\n                    </div>\n                    <div className={styles.userName}>\n                        {(loggedIn && username) || 'user not loged in'}\n                    </div>\n                </div>\n                <nav>\n                    {menuOptions.map((el, i) => {\n                        return (\n                            <a\n                                className={classNames({\n                                    [styles.clicked]: el === subViewProfile,\n                                })}\n                                key={i}\n                                onClick={() => setSubViewProfile(el)}\n                            >\n                                {el}\n                            </a>\n                        );\n                    })}\n                </nav>\n                <div className={styles.links}>\n                    <a href={getExtensionPage('privacyConsent.html')} target=\"_blank\">\n                        política de privacidad\n                    </a>\n                    <a target=\"_blank\" href=\"https://www.chollometro.com/aviso-legal\">\n                        condiciones de uso\n                    </a>\n                </div>\n                <div onClick={logOutHandler} className={styles.logOut}>\n                    Cerrar sesión\n                </div>\n            </div>\n            <div className={styles.profileScreen}>\n                <ProfileviewPicker view={subViewProfile} />\n            </div>\n        </div>\n    );\n};\n\nconst ProfileviewPicker: FunctionComponent<{ view: ProfileOptions }> = ({\n    view = 'configuración',\n}) => {\n    switch (view) {\n        case 'configuración':\n            //return settingsScreen\n            return (\n                <>\n                    <LookAndFeelProfileSubView />\n                    <SERPProfileSubView />\n                    <WarningsProfileSubView />\n                    <div className={styles.advice}>\n                        <Disclaimer text='Al interactuar con nuestra extensión, en ocasiones podemos abrir enlaces monetizados en segundo plano, así es cómo se financia Chollometro.<a href=\"https://www.chollometro.com/faqs#di\" target=\"blank\"> Más info</a>.' />\n                    </div>\n                </>\n            );\n\n        case 'mis alertas':\n            // return config alertScreen\n            // return <AlertsProfileSubView />;\n\n            return <PriceTrackConfigView />;\n        case 'notificaciones':\n            return <PriceTrackNotificationsView />;\n        case 'cashback':\n            //return configCashbackScreen\n            return <div>casshback</div>;\n    }\n};\n\nconst LookAndFeelProfileSubView = () => {\n    const [settings, settingsAPI] = useAPIResource(settingsAPIHandler);\n    const ScaleFactorUIOptions: UIOptions<IUserSettings['UIScale']> = [\n        {\n            value: 'small',\n            label: 'Pequeño',\n        },\n        {\n            value: 'default',\n            label: 'Medio',\n        },\n\n        {\n            value: 'big',\n            label: 'Grande',\n        },\n    ];\n    const themeUIOptions: UIOptions<IUserSettings['theme']> = [\n        {\n            value: 'light',\n            label: 'Claro',\n        },\n        {\n            value: 'dark',\n            label: 'Oscuro',\n        },\n    ];\n    return (\n        <div className={styles.profileSetting}>\n            <div className={styles.screenTitle}>\n                <Settings /> <h1>Apariencia</h1>\n            </div>\n            <div className={styles.size}>\n                <OptionSelect\n                    onChange={async (value, selectedOption, option) => {\n                        // !todo OptionSelect value type adaptation to match input type\n                        await settingsAPI.update({ ...settings, UIScale: value });\n                    }}\n                    options={ScaleFactorUIOptions}\n                    value={settings.UIScale}\n                    label=\"Tamaño de la interfaz\"\n                />\n            </div>\n            <div className={styles.theme}>\n                <span className={styles.label}>Tema de la interfaz</span>\n                <RadioBox\n                    options={themeUIOptions}\n                    radioState={settings.theme}\n                    name=\"theme\"\n                    layout=\"row\"\n                    onChange={(newTheme) => settingsAPI.update({ ...settings, theme: newTheme })}\n                />\n            </div>\n        </div>\n    );\n};\n\nconst SERPProfileSubView = () => {\n    const [settings, settingsAPI] = useAPIResource(settingsAPIHandler);\n    const serpOptions: UIOptions<IUserSettings['SERPConf']> = [\n        {\n            label: 'Activado',\n            value: 'activate',\n        },\n        {\n            label: 'Desactivado',\n            value: 'deactivate',\n        },\n    ];\n    return (\n        <div className={styles.profileConfig}>\n            <div className={styles.screenTitle}>\n                <Serp /> <h1>Mostrar en resultados de búsqueda</h1>\n            </div>\n            <div className={styles.size}>\n                <OptionSelect\n                    onChange={async (value, selectedOption, option) => {\n                        // !todo OptionSelect value type adaptation to match input type\n                        await settingsAPI.update({ ...settings, SERPConf: value });\n                    }}\n                    options={serpOptions}\n                    value={settings.SERPConf}\n                    label=\"SERP\"\n                />\n            </div>\n        </div>\n    );\n};\nconst WarningsProfileSubView = () => {\n    const [configRSS, configAPI] = useAPIResource(configAPIHandler);\n    const warningOptions = [\n        {\n            label: 'Activado',\n            value: 'activado',\n        },\n        {\n            label: 'Desactivado',\n            value: 'desactivado',\n        },\n    ];\n    return (\n        <div className={styles.profileConfig}>\n            <div className={styles.screenTitle}>\n                <Message className={styles.warning} /> <h1>Recibir avisos de tus alertas</h1>\n            </div>\n            <div className={styles.warningSelect}>\n                <OptionSelect\n                    onChange={async (value, selectedOption, option) => {\n                        // !todo OptionSelect value type adaptation to match input type\n                        await configAPI.update({\n                            ...configRSS,\n                            notifyByEmail: value === 'activado' ? true : false,\n                        });\n                    }}\n                    options={warningOptions}\n                    value={configRSS.notifyByEmail ? 'activado' : 'desactivado'}\n                    label=\"Email\"\n                />\n            </div>\n            <div className={styles.warningSelect}>\n                <OptionSelect\n                    onChange={async (value, selectedOption, option) => {\n                        // !todo OptionSelect value type adaptation to match input type\n                        await configAPI.update({\n                            ...configRSS,\n                            notifyByDm: value === 'activado' ? true : false,\n                        });\n                    }}\n                    options={warningOptions}\n                    value={configRSS.notifyByDm ? 'activado' : 'desactivado'}\n                    label=\"Mensajes directos\"\n                />\n            </div>\n        </div>\n    );\n};\n\n/* function ProfileView() {\n    const [configRSS, configAPI] = useAPIResource(configAPIHandler);\n    const [settings, settingsAPI] = useAPIResource(settingsAPIHandler);\n    const [config, setConfig] = useState(configRSS);\n    const [isLoading, setIsLoading] = useState(false);\n    const { loggedIn, username, email, avatarUrl } = useAppSelector(\n        (state) => state.alertas.loginStatus,\n    );\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (config.trackingEmail === '') {\n            setConfig({ ...config, trackingEmail: email });\n        }\n    }, []);\n    const inputWrapper = useRef<HTMLDivElement>();\n    const logOutHandler = () => {\n        dispatch(logOut());\n        dispatch(\n            setLoginStatus({\n                loggedIn: false,\n                username: '',\n                email: '',\n                avatarUrl: '',\n            }),\n        );\n    };\n\n    const commitConfig = async (setIsLoading: (check: boolean) => void) => {\n        const isValid = inputWrapper.current\n            ?.querySelector<HTMLInputElement>('input[type=\"email\"]')\n            ?.checkValidity();\n        if (!isValid) {\n            logger.log('valid email');\n            return;\n        }\n        setIsLoading(true);\n        await configAPI.update(config);\n        setIsLoading(false);\n    };\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.userProfile}>\n                <div className={styles.userAvatar}>\n                    {avatarUrl ? <img src={avatarUrl} alt=\"\" /> : <SiZapier />}\n                </div>\n                <div className={styles.userName}>\n                    {(loggedIn && username) || 'user not loged in'}\n                </div>\n                <div onClick={logOutHandler} className={styles.userStatus}>\n                    Cerrar sesión\n                </div>\n            </div>\n            <div className={styles.userSettings}>\n                <div className={styles.settingsIconWrapper}>\n                    <IoIosSettings /> <span>Ajustes</span>\n                </div>\n                <CheckBox\n                    label=\"Mostrar extensión minimizada por defecto\"\n                    isChecked={settings.initWithCompactMenu}\n                    onChange={(v) => settingsAPI.update({ ...settings, initWithCompactMenu: v })}\n                />\n                <div className={styles.splitBox}>\n                    <SplitLineGradient />\n                </div>\n                <div className={styles.settingsUIWrapper}>\n                    <OptionSelect\n                        onChange={async (value, selectedOption, option) => {\n                            // !todo OptionSelect value type adaptation to match input type\n                            await settingsAPI.update({ ...settings, UIScale: value });\n                        }}\n                        options={ScaleFactorUIOptions}\n                        value={settings.UIScale}\n                        label=\"Tamaño de la interfaz\"\n                    />\n                    <OptionSelect\n                        onChange={async (value, selectedOption, option) => {\n                            // !todo OptionSelect value type adaptation to match input type\n                            await settingsAPI.update({ ...settings, theme: value });\n                        }}\n                        options={themeUIOptions}\n                        value={settings.theme}\n                        label=\"Tema\"\n                    />\n                </div>\n\n                \n                // ? ALERT EMAIL\n                <div className={styles.line}>\n                    <SplitLineGradient />\n                </div>\n                <form\n                    className={styles.configForm}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        //commitConfig();\n                    }}\n                >\n                    <div\n                        ref={inputWrapper as MutableRefObject<HTMLDivElement>}\n                        className={styles.emailInputs}\n                    >\n                        <CheckBox\n                            label=\"Recibir mis alertas por correo electrónico\"\n                            isChecked={config.notifyByEmail}\n                            onChange={(notifyByEmail) => setConfig({ ...config, notifyByEmail })}\n                        />\n                        <InputField\n                            value={config.trackingEmail}\n                            placeholder={'Email'}\n                            id=\"alertEmail\"\n                            type=\"email\"\n                            label=\"Email para recibir alertas\"\n                            onChange={(trackingEmail) => setConfig({ ...config, trackingEmail })}\n                        />\n                    </div>\n                    <LoadingButtonHolder commitConfig={commitConfig} />\n                </form>\n            </div>\n        </div>\n    );\n}\n */\n/* export default () => (\n    <Suspense fallback={<Loader />}>\n        <ProfileView />\n    </Suspense>\n); */\n\n/* function LoadingButtonHolder({\n    commitConfig,\n}: {\n    commitConfig: (setState: React.Dispatch<React.SetStateAction<boolean>>) => void;\n}) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    return isLoading ? (\n        <Button text={'Actualizar'} size=\"m\" loading onClick={() => commitConfig(setIsLoading)} />\n    ) : (\n        <Button text={'Actualizar'} size=\"m\" onClick={() => commitConfig(setIsLoading)} />\n    );\n} */\n","import View from './Profile.view';\nexport const ProfileView = View;\n","import React from 'react';\nimport { ReactComponent as Logo } from '~A/icons/logo.svg';\nimport { ReactComponent as DoubtFace } from '~A/icons/confused.inline.svg';\nimport Button from '../Button/Button';\nimport styles from './CallToPP.module.scss';\nimport browser from '~B/browser/browser';\n\nimport { privatePolicyData } from '~B/storage/storage.repo';\nimport { sendMessage } from '~B/utils/messageEngine';\nimport { createTab } from '~F/app/redux/app/background-link.saga';\n\nexport const CallToPP = () => {\n    const callPP = async () => {\n        const { ppId } = await privatePolicyData.get();\n        try {\n            await browser.tabs.update(ppId, { highlighted: true, active: true });\n        } catch (e) {\n            sendMessage(undefined, createTab('privatePolicy.html'));\n        }\n    };\n    return (\n        <div className={styles.wrapper}>\n            <header>\n                <Logo /> <h3>Chollometro</h3>\n            </header>\n            <section className={styles.face}>\n                <DoubtFace />\n                <p className={styles.faceExpression}>¡Vaya!</p>\n                <p className={styles.faceText}>\n                    Parece que aún no has aceptado nuestra política de privacidad\n                </p>\n            </section>\n            <section className={styles.buttonWrapper}>\n                <Button radius text=\"Ir a privacidad\" onClick={callPP} />\n            </section>\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { useAPI } from '~/ui/utils/api';\nimport { settingsAPIHandler } from '~F/account/api';\nimport { LoginPlaceHolderView } from '~F/account/views/LoginPlaceHolder/LoginPlaceHolder.view';\nimport { ProfileView } from '~F/account/views/Profile';\nimport { store, useAppSelector } from '~F/app/store';\n//import rootStyles from '~F/app/views/App/App.module.scss';\nimport styles from './Popup.module.scss';\nimport { privatePolicyData } from '~B/storage/storage.repo';\nimport { CallToPP } from '~/ui/components/CallToPP/CallToPP.component';\n\n//store.dispatch(setRenderStatus(true));\n\nexport function PopupWindow() {\n    return (\n        <Provider store={store}>\n            <PopUPView />\n        </Provider>\n    );\n}\n\nexport async function renderPopup() {\n    const root = document.createElement('div');\n    root.id = 'popup';\n\n    document.body.appendChild(root);\n    if ((await privatePolicyData.get()).isPolicyAuth) {\n        ReactDOM.render(<PopupWindow />, root);\n    } else {\n        root.classList.add(styles.privacy);\n        ReactDOM.render(\n            <div className={styles.root}>\n                <CallToPP />\n            </div>,\n            root,\n        );\n    }\n}\n\nfunction PopUPView() {\n    const [settings] = useAPI(settingsAPIHandler);\n    const { loggedIn } = useAppSelector((state) => state.alertas.loginStatus);\n\n    return (\n        <div\n            className={classNames(\n                styles.root,\n                styles.popUp,\n                { [styles.maxWidth]: !loggedIn },\n                {\n                    [styles.darkTheme]: settings?.theme === 'dark',\n                    [styles.lightTheme]:\n                        settings?.theme === 'light' || settings?.theme === 'hybrid',\n                },\n                //rootStyles.root,\n                {\n                    [styles['scaleDefault']]:\n                        settings?.UIScale === 'default' || settings?.UIScale === 'big',\n                    [styles['scaleSmall']]: settings?.UIScale === 'small',\n                    // [styles['scaleBig']]: settings?.UIScale === 'big',\n                },\n            )}\n        >\n            <div>\n                <LoginPlaceHolderView PlaceHolderView={ProfileView} />\n            </div>\n        </div>\n    );\n}\n","import logger from '~B/utils/logger';\nimport './enableDevHmr';\nimport { renderPopup } from './Popup.view';\n\nimport('../ui/utils/api/api.connect').then(() => {\n    logger.log(import.meta.env, 'env popup');\n    renderPopup();\n});\n"],"names":["React.createElement","styles","CheckboxOn","CheckboxOff","View","Suspense","ProfileView","useState","useEffect","useRef","SiZapier","Settings","Serp","Message","Logo","DoubtFace","root"],"mappings":"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"}