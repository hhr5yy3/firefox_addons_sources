{"version":3,"file":"wrappedIndex-457eadcb.js","sources":["../../../../node_modules/date-fns/esm/startOfDay/index.js","../../../../node_modules/date-fns/esm/differenceInCalendarDays/index.js","../../../../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../../../../node_modules/date-fns/esm/formatRelative/index.js","../../../src/iframeState/descriptors/autosnatchNotification.ts","../../../src/iframeState/hooks/useDispatchSetter.ts","../../../src/iframeState/hooks/useIframeState.ts","../../../src/util/react/useAutosnatchTargetOverride.ts","../../../src/entrypoints/iframe/components/AutosnatchTargetSelector.tsx","../../../src/entrypoints/iframe/components/autosnatchNotificationOverlay/cross.svg","../../../src/entrypoints/iframe/components/autosnatchNotificationOverlay/AutosnatchNotificationOverlay.tsx","../../../src/entrypoints/iframe/containers/useContentScriptConnection.tsx","../../../src/entrypoints/iframe/containers/AutosnatchNotificationOverlayContainer.tsx","../../../src/iframeState/descriptors/autosnatch.ts","../../../src/images/arrow_down.svg","../../../src/images/arrow_up.svg","../../../src/images/heylogin_icon_disabled.svg","../../../src/entrypoints/iframe/components/autosnatchOverlay/eye-off.svg","../../../src/entrypoints/iframe/components/autosnatchOverlay/lock.svg","../../../src/entrypoints/iframe/components/autosnatchOverlay/login-overlay.svg","../../../src/entrypoints/iframe/components/autosnatchOverlay/AutosnatchOverlay.tsx","../../../src/entrypoints/iframe/utils/getExtrinsicSizeFromLocation.tsx","../../../src/entrypoints/iframe/containers/AutosnatchOverlayContainer.tsx","../../../src/entrypoints/iframe/utils/useFormatDateRelative.tsx","../../../src/entrypoints/iframe/components/UpdateLoginForm.tsx","../../../src/iframeState/descriptors/login.ts","../../../src/util/getLoginOverlayLandscape.ts","../../../src/util/shouldAskForLoginUsername.tsx","../../../src/entrypoints/iframe/components/ConfirmLoginUse.tsx","../../../src/util/getDisambiguatedLogins.tsx","../../../src/images/forward.svg","../../../src/images/search.svg","../../../src/images/team.svg","../../../src/entrypoints/iframe/components/OverlayLoginSearch.tsx","../../../src/entrypoints/iframe/components/OverlayLoginList.tsx","../../../src/entrypoints/iframe/components/OverlayTotpWarning.tsx","../../../src/entrypoints/iframe/components/SubscriptionNag.tsx","../../../src/entrypoints/iframe/utils/useParentPageUrl.tsx","../../../src/entrypoints/iframe/containers/LoginOverlay.tsx","../../../src/entrypoints/iframe/components/overrideCreateOverlay/SelectorContext.tsx","../../../src/entrypoints/iframe/components/overrideCreateOverlay/SelectorInput.tsx","../../../src/entrypoints/iframe/components/overrideCreateOverlay/PredicateEdit.tsx","../../../src/entrypoints/iframe/components/overrideCreateOverlay/defaultValues.ts","../../../src/entrypoints/iframe/components/overrideCreateOverlay/RuleCreate.tsx","../../../src/entrypoints/iframe/components/overrideCreateOverlay/RuleEdit.tsx","../../../src/entrypoints/iframe/components/overrideCreateOverlay/OverrideCreateOverlay.tsx","../../../src/iframeState/descriptors/overrideCreate.ts","../../../src/entrypoints/iframe/containers/OverrideCreateOverlayContainer.tsx","../../../src/images/close.svg","../../../src/images/eye-off.svg","../../../src/images/eye.svg","../../../src/images/password_generator_pill_image.svg","../../../src/entrypoints/iframe/components/passwordFieldOverlay/PasswordFieldOverlay.tsx","../../../src/entrypoints/iframe/components/passwordFieldOverlay/usePillText.tsx","../../../src/entrypoints/iframe/components/passwordFieldOverlay/MainPasswordFieldOverlay.tsx","../../../src/entrypoints/iframe/components/passwordFieldOverlay/RepeatedPasswordFieldOverlay.tsx","../../../src/iframeState/descriptors/passwordGenerator.ts","../../../src/iframeState/descriptors/repeatPassword.ts","../../../src/entrypoints/iframe/containers/PasswordFieldOverlayContainer.tsx","../../../src/iframeState/descriptors/totpInput.ts","../../../src/entrypoints/iframe/components/totpInputOverlay/arrow-right.svg","../../../src/entrypoints/iframe/components/totpInputOverlay/TotpInputOverlay.tsx","../../../src/entrypoints/iframe/containers/TotpInputOverlayContainer.tsx","../../../src/entrypoints/iframe/components/totpQrOverlay/TotpQrOverlay.tsx","../../../src/iframeState/descriptors/totpQr.ts","../../../src/entrypoints/iframe/containers/TotpQrOverlayContainer.tsx","../../../src/entrypoints/iframe/containers/IframeApp.tsx","../../../src/entrypoints/iframe/wrappedIndex.tsx"],"sourcesContent":["import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport format from '../format/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n */\n\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n\n  var diff = differenceInCalendarDays(date, baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);\n  return format(date, formatStr, options);\n}","import { VaultId } from 'backend-client-web';\nimport { ISODateString, LoginVaultMetadata, OrganizationMetadata } from 'client-core';\n\nimport { AutosnatchId, Size } from 'src/types';\n\nimport { IframeStateDescriptor } from './types';\n\nexport type AutosnatchState =\n  | 'snatched'\n  | 'snatchUndone'\n  | 'passwordChanged'\n  | 'passwordChangeUndone'\n  | 'loginMoved';\n\nexport interface AutosnatchNotificationUiState {\n  state: AutosnatchState;\n  expanded: boolean;\n  login: AutosnatchedLogin;\n  useFullVaultLabel: boolean;\n  moveTargetInternal?: VaultId;\n  moveSelected: boolean;\n  entryAnimationShown: boolean;\n}\n\nexport interface AutosnatchedLogin {\n  username?: string;\n  vaultInfo?: Pick<LoginVaultMetadata, 'type' | 'name' | 'id'>;\n  organizationInfo?: Pick<OrganizationMetadata, 'name'>;\n  url?: string;\n}\n\nexport type AutosnatchNotificationIframeState = {\n  intrinsicSize: Size;\n  autosnatchInfo?: { id: AutosnatchId; performedAt: ISODateString };\n  uiState?: AutosnatchNotificationUiState;\n};\n\nexport type AutosnatchNotificationIframeStateDescriptorType = {\n  mode: 'autosnatchNotification';\n  state: AutosnatchNotificationIframeState;\n  action:\n    | { type: 'setIntrinsicSize'; size: Size }\n    | { type: 'undo' }\n    | { type: 'close' }\n    | { type: 'setExpanded'; expanded: boolean }\n    | { type: 'moveLogin'; targetVaultId: string }\n    | { type: 'setMoveTargetInternal'; moveTargetInternal?: string }\n    | { type: 'setMoveSelected'; moveSelected: boolean };\n};\n\nexport const autosnatchNotificationIframeStateDescriptor: IframeStateDescriptor<AutosnatchNotificationIframeStateDescriptorType> = {\n  mode: 'autosnatchNotification',\n  initialState: {\n    intrinsicSize: { width: 0, height: 0 },\n    autosnatchInfo: undefined,\n    uiState: undefined,\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case 'setIntrinsicSize':\n        return { ...state, intrinsicSize: action.size };\n      case 'undo':\n        return state;\n      case 'close':\n        return state;\n      case 'moveLogin':\n        return state;\n      case 'setExpanded':\n        return {\n          ...state,\n          uiState: state.uiState ? { ...state.uiState, expanded: action.expanded } : undefined,\n        };\n      case 'setMoveSelected':\n        return {\n          ...state,\n          uiState: state.uiState\n            ? { ...state.uiState, moveSelected: action.moveSelected }\n            : undefined,\n        };\n      case 'setMoveTargetInternal':\n        return {\n          ...state,\n          uiState: state.uiState\n            ? { ...state.uiState, moveTargetInternal: action.moveTargetInternal }\n            : undefined,\n        };\n    }\n  },\n};\n","import { useCallback, useRef } from 'react';\n\nimport { IframeStateDescriptorType } from 'src/iframeState/descriptors';\n\nexport default function useDispatchSetter<A extends IframeStateDescriptorType['action'], P>(\n  dispatch: (action: A) => void,\n  makeAction: (param: P) => A,\n) {\n  const makeActionRef = useRef(makeAction);\n  makeActionRef.current = makeAction;\n\n  return useCallback(\n    (param: P) => {\n      dispatch(makeActionRef.current(param));\n    },\n    [dispatch],\n  );\n}\n","import deepEqual from 'deep-equal';\nimport { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { debounce } from 'throttle-debounce';\n\nimport { debugConsole } from 'backend-client-web';\n\nimport { ContentToIframeMessage, ForwardIframeClientPort, StateUpdate } from 'src/connections';\nimport { IframeMode, IframeStateDescriptorType } from 'src/iframeState/descriptors';\nimport { IframeStateDescriptor } from 'src/iframeState/descriptors/types';\n\nexport default function useIframeState<D extends IframeStateDescriptorType>(\n  port: ForwardIframeClientPort | undefined,\n  descriptor: IframeStateDescriptor<D>,\n) {\n  const [iframeState, setIframeState] = useStateWithReferentialIdentityPreservation<D['state']>(\n    descriptor.initialState,\n  );\n\n  useEffect(() => {\n    if (!port) {\n      return undefined;\n    }\n\n    function handleMessage(msg: ContentToIframeMessage) {\n      if (isStateUpdateMessage(msg, descriptor.mode)) {\n        const newState = msg.state;\n        debugConsole.log('[useIframeState]', descriptor.mode, 'StateUpdate', newState);\n        setIframeState(newState);\n      }\n    }\n\n    port.postMessage({ type: 'RequestState', iframeMode: descriptor.mode });\n\n    port.onMessage.addListener(handleMessage);\n  }, [descriptor.mode, port, setIframeState]);\n\n  const actionQueueRef = useRef<D['action'][]>([]);\n\n  const processActionQueueDebounced = useMemo(\n    () =>\n      debounce(20, (p: ForwardIframeClientPort) => {\n        if (!actionQueueRef.current.length) {\n          return;\n        }\n        p.postMessage({\n          type: 'DispatchStateActions',\n          iframeMode: descriptor.mode,\n          actions: actionQueueRef.current,\n        });\n        actionQueueRef.current = [];\n      }),\n    [descriptor.mode],\n  );\n\n  const dispatch = useCallback(\n    (...actions: D['action'][]) => {\n      // Optimistically apply the action immediately. We're going to get a state update from the\n      // canonical source in the content script soon after we send the message, but in the meantime\n      // we'd still be operating with the old values. In particular this messes with react keeping\n      // track of cursor positions in text inputs. The recommended fix is to update synchronously.\n      // See https://github.com/facebook/react/issues/955#issuecomment-469352730\n      debugConsole.log('[useIframeState]', descriptor.mode, 'dispatch', ...actions);\n      setIframeState((oldState) => actions.reduce(descriptor.reducer, oldState));\n      // send actions to content script with a very slight debounce to minimize update noise\n      actionQueueRef.current.push(...actions);\n      if (port) {\n        processActionQueueDebounced(port);\n      } else {\n        debugConsole.warn(\n          '[useIframeState]',\n          descriptor.mode,\n          'dispatch',\n          'not scheduling action processing since port is not yet set',\n        );\n      }\n    },\n    [descriptor.mode, descriptor.reducer, port, processActionQueueDebounced, setIframeState],\n  );\n\n  // We skip processing above if port is not set, so we need to enqueue is anew if port changed.\n  const oldPortRef = useRef(port);\n  useEffect(() => {\n    if (oldPortRef.current === port) {\n      return;\n    }\n    oldPortRef.current = port;\n    if (port) {\n      processActionQueueDebounced(port);\n    }\n  }, [port, processActionQueueDebounced]);\n\n  return { iframeState, dispatch };\n}\n\nfunction useStateWithReferentialIdentityPreservation<S>(\n  initialState: S | (() => S),\n): [S, Dispatch<SetStateAction<S>>] {\n  const [state, setState] = useState<S>(initialState);\n  const setStateIfNotDeepEquals: React.Dispatch<React.SetStateAction<S>> = useCallback(\n    (setStateAction: React.SetStateAction<S>) => {\n      setState((oldState) => {\n        const newState =\n          typeof setStateAction == 'function'\n            ? (setStateAction as (prevState: S) => S)(oldState)\n            : setStateAction;\n        // try to keep referential integrity of state intact by reusing previous state if deep equal\n        if (deepEqual(oldState, newState)) {\n          return oldState;\n        }\n        return newState;\n      });\n    },\n    [],\n  );\n  return [state, setStateIfNotDeepEquals];\n}\n\nfunction isStateUpdateMessage<M extends IframeMode>(\n  msg: ContentToIframeMessage,\n  iframeMode: M,\n): msg is StateUpdate<M> {\n  if (msg.type !== 'StateUpdate') {\n    return false;\n  }\n  checkIframeMode(msg, iframeMode);\n  return true;\n}\n\nfunction checkIframeMode<M extends IframeMode>(msg: { iframeMode: IframeMode }, iframeMode: M) {\n  if (msg.iframeMode !== iframeMode) {\n    throw new Error(\n      `Received incorrect iframe mode message! Expected: ${iframeMode}, got: ${msg.iframeMode}`,\n    );\n  }\n}\n","import { useEffect, useState } from 'react';\nimport browser from 'webextension-polyfill';\n\nimport { VaultId, trackError } from 'backend-client-web';\n\nimport {\n  GetAutosnatchTargetsResponse,\n  makeMessageListener,\n  messageError,\n  sendMessage,\n} from 'src/message';\n\nexport default function useAutosnatchTargetOverride(\n  targetOverride: VaultId | undefined,\n  setAutosnatchTargetOverride: (targetVaultId: VaultId | undefined) => void,\n) {\n  const autosnatchTargetOptions = useAutosnatchTargetOptions();\n\n  // Make sure the override is always valid (e.g. if a team is deleted or a profile disabled)\n  useEffect(() => {\n    if (!autosnatchTargetOptions) {\n      return;\n    }\n    if (\n      !autosnatchTargetOptions.targetGroups.find((g) =>\n        g.vaults.find((v) => v.vaultId === targetOverride),\n      )\n    ) {\n      setAutosnatchTargetOverride(undefined);\n    }\n  }, [autosnatchTargetOptions, targetOverride, setAutosnatchTargetOverride]);\n\n  return {\n    autosnatchTargetOverride: targetOverride,\n    setAutosnatchTargetOverride,\n    autosnatchTargetOptions,\n  };\n}\n\nexport function useAutosnatchTargetOptions() {\n  const [targetOptions, setTargetOptions] = useState<GetAutosnatchTargetsResponse>();\n\n  useEffect(() => {\n    const updateTargetOptions = async () => {\n      const resp = await sendMessage({ type: 'GetAutosnatchTargets' });\n      setTargetOptions(resp === messageError ? undefined : resp);\n    };\n\n    updateTargetOptions().catch(trackError);\n\n    const messageListener = makeMessageListener({ DataUpdate: updateTargetOptions });\n\n    browser.runtime.onMessage.addListener(messageListener);\n    return () => browser.runtime.onMessage.removeListener(messageListener);\n  }, []);\n\n  return targetOptions;\n}\n","import { t } from '@lingui/macro';\nimport classNames from 'classnames';\nimport { useCallback, useMemo } from 'react';\n\nimport { ProfileId, VaultId } from 'backend-client-web';\nimport { LabeledSuccessButton, NativeSelect } from 'client-web-sdk';\n\nimport { GetAutosnatchTargetsResponse } from 'src/message';\n\nimport styles from './AutosnatchTargetSelector.module.css';\n\ninterface AutosnatchTargetSelectorProps {\n  // don't allow `undefined` for `autosnatchTargetOptions`\n  autosnatchTargetOptions: GetAutosnatchTargetsResponse & {};\n  autosnatchTarget: VaultId | undefined;\n  setAutosnatchTarget: (value: VaultId) => void;\n  autosnatchTargetOverride: VaultId | undefined;\n  setAutosnatchTargetOverride: (value: VaultId) => void;\n  className?: string;\n  fixedSize?: boolean;\n}\n\nexport default function AutosnatchTargetSelector({\n  autosnatchTargetOptions,\n  setAutosnatchTarget,\n  autosnatchTarget,\n  className,\n  autosnatchTargetOverride,\n  setAutosnatchTargetOverride,\n  fixedSize,\n}: AutosnatchTargetSelectorProps) {\n  const selectedAccount = useMemo(\n    () =>\n      autosnatchTargetOptions.targetGroups.find((o) =>\n        o.vaults.some((v) => v.vaultId === (autosnatchTargetOverride ?? autosnatchTarget)),\n      ),\n    [autosnatchTarget, autosnatchTargetOptions, autosnatchTargetOverride],\n  );\n\n  const selectFirstVault = useCallback(\n    (profileId: ProfileId) => {\n      const newAcc = autosnatchTargetOptions.targetGroups.find(\n        (acc) => acc.profileId === profileId,\n      );\n      if (!newAcc?.vaults.length) {\n        return;\n      }\n\n      setAutosnatchTargetOverride(newAcc.vaults[0].vaultId);\n    },\n    [autosnatchTargetOptions, setAutosnatchTargetOverride],\n  );\n\n  if (!shouldShowAutosnatchTargetSelector(autosnatchTargetOptions)) {\n    return null;\n  }\n\n  return (\n    <div className={classNames(styles.Container, className)}>\n      {autosnatchTargetOptions.targetGroups.length > 1 ? (\n        <NativeSelect\n          className={styles.TargetSelector}\n          wrapperClassName={styles.TargetSelectorWrapper}\n          value={selectedAccount?.profileId}\n          onChange={(e) => selectFirstVault(e.target.value)}\n        >\n          {autosnatchTargetOptions.targetGroups.map((opt) => (\n            <option key={opt.profileId} value={opt.profileId}>\n              {opt.accountLabel}\n            </option>\n          ))}\n        </NativeSelect>\n      ) : (\n        <span className={styles.TargetPlaceholder}>{selectedAccount?.accountLabel}</span>\n      )}\n      {selectedAccount &&\n        (selectedAccount.vaults.length > 1 ? (\n          <NativeSelect\n            onChange={(e) => setAutosnatchTargetOverride(e.target.value)}\n            value={autosnatchTargetOverride ?? autosnatchTarget}\n            wrapperClassName={styles.TargetSelectorWrapper}\n            className={styles.TargetSelector}\n          >\n            {selectedAccount?.vaults.map((v) => (\n              <option key={v.vaultId} value={v.vaultId}>\n                {v.label}\n              </option>\n            ))}\n          </NativeSelect>\n        ) : (\n          <span className={styles.TargetPlaceholder}>\n            {\n              selectedAccount.vaults.find(\n                (v) => v.vaultId === (autosnatchTargetOverride ?? autosnatchTarget),\n              )?.label\n            }\n          </span>\n        ))}\n      <LabeledSuccessButton\n        className={classNames(styles.SaveTargetButton, {\n          [styles.hidden]:\n            !autosnatchTargetOverride || autosnatchTargetOverride === autosnatchTarget,\n        })}\n        visible={\n          fixedSize || (!!autosnatchTargetOverride && autosnatchTargetOverride !== autosnatchTarget)\n        }\n        onClick={() => {\n          if (autosnatchTargetOverride) {\n            setAutosnatchTarget(autosnatchTargetOverride);\n          }\n        }}\n        label={t`Save as default`}\n        successLabel={t`Saved`}\n      />\n    </div>\n  );\n}\n\nexport function shouldShowAutosnatchTargetSelector(\n  options: GetAutosnatchTargetsResponse & {},\n): boolean {\n  if (options.hasDisabledProfiles) {\n    // Always show target if there are disabled profiles to reassure the user\n    return true;\n  }\n  if (options.targetGroups.length === 0) {\n    // Nothing to choose\n    return false;\n  }\n  if (options.targetGroups.length === 1 && options.targetGroups[0].vaults.length < 2) {\n    // Only single target\n    return false;\n  }\n  return true;\n}\n","export default \"__VITE_ASSET__44adbf13__\"","import { Trans, t } from '@lingui/macro';\nimport classNames from 'classnames';\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { VaultId } from 'backend-client-web';\nimport {\n  HeyloginLogo,\n  LinkButton,\n  getFullLoginVaultLabel,\n  getLoginVaultLabel,\n  useElementSize,\n} from 'client-web-sdk';\n\nimport { AUTOSNATCH_OVERLAY_SHADOW_WIDTH_PX } from 'src/constants';\nimport {\n  AutosnatchState,\n  AutosnatchedLogin,\n} from 'src/iframeState/descriptors/autosnatchNotification';\nimport { GetAutosnatchTargetsResponse } from 'src/message';\nimport { Size } from 'src/types';\n\nimport AutosnatchTargetSelector from '../AutosnatchTargetSelector';\n\nimport styles from './AutosnatchNotificationOverlay.module.css';\nimport { ReactComponent as CrossIcon } from './cross.svg';\n\ninterface Props {\n  login: AutosnatchedLogin;\n  useFullVaultLabel: boolean;\n  state: AutosnatchState;\n  expanded: boolean;\n  setExpanded: (expanded: boolean) => void;\n  autosnatchTargetOptions: GetAutosnatchTargetsResponse;\n  moveTargetInternal?: VaultId;\n  setMoveTargetInternal: (target: VaultId | undefined) => void;\n  autosnatchTarget: VaultId | undefined;\n  setAutosnatchTarget: (autosnatchTarget: VaultId) => void;\n  moveSelected: boolean;\n  setMoveSelected: (moveSelected: boolean) => void;\n  undo: () => void;\n  setIntrinsicSize: (size: Size) => void;\n  onClick: () => void;\n  onMouseEnter: () => void;\n  onMouseLeave: () => void;\n  close: () => void;\n  moveLogin: (target: VaultId) => void;\n}\n\nexport default function AutosnatchNotificationOverlay({\n  login,\n  useFullVaultLabel,\n  state,\n  expanded,\n  setExpanded,\n  autosnatchTargetOptions,\n  moveTargetInternal,\n  setMoveTargetInternal,\n  moveSelected,\n  setMoveSelected,\n  undo,\n  close,\n  setIntrinsicSize,\n  onClick,\n  onMouseEnter,\n  onMouseLeave,\n  moveLogin,\n  autosnatchTarget,\n  setAutosnatchTarget,\n}: Props) {\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [setSizeElement, size] = useElementSize<HTMLDivElement>();\n\n  useEffect(() => {\n    setIntrinsicSize(size);\n  }, [size, setIntrinsicSize]);\n\n  const multiplexedRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      setSizeElement(el);\n      ref.current = el;\n    },\n    [setSizeElement],\n  );\n\n  const headline = useMemo(() => {\n    switch (state) {\n      case 'snatched':\n        return t`Login saved`;\n      case 'snatchUndone':\n        return t`Login not saved`;\n      case 'passwordChanged':\n        return t`Password changed`;\n      case 'passwordChangeUndone':\n        return t`Password not changed`;\n      case 'loginMoved':\n        return t`Login moved`;\n    }\n  }, [state]);\n\n  return (\n    <div\n      className={styles.Wrapper}\n      ref={multiplexedRef}\n      style={\n        {\n          '--overlay-shadow-width': `${AUTOSNATCH_OVERLAY_SHADOW_WIDTH_PX}px`,\n        } as React.CSSProperties\n      }\n    >\n      <div\n        className={classNames(styles.Overlay, {\n          [styles.undone]: state === 'passwordChangeUndone' || state === 'snatchUndone',\n          [styles.expanded]: expanded,\n        })}\n        onClick={() => {\n          onClick();\n          setExpanded(true);\n        }}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <button className={styles.CloseButton} onClick={close}>\n          <CrossIcon title={t`Close`} />\n        </button>\n        <header className={styles.Header}>\n          <h2>{headline}</h2>\n          <HeyloginLogo className={styles.Logo} />\n        </header>\n        <LoginInfo login={login} useFullVaultLabel={useFullVaultLabel} />\n        {state === 'snatched' || state === 'loginMoved' ? (\n          <SnatchActions\n            login={login}\n            expanded={expanded}\n            autosnatchTargetOptions={autosnatchTargetOptions}\n            setExpanded={setExpanded}\n            undo={undo}\n            close={close}\n            moveTargetInternal={moveTargetInternal}\n            setMoveTargetInternal={setMoveTargetInternal}\n            moveSelected={moveSelected}\n            setMoveSelected={setMoveSelected}\n            moveLogin={moveLogin}\n            autosnatchTarget={autosnatchTarget}\n            setAutosnatchTarget={setAutosnatchTarget}\n          />\n        ) : state === 'passwordChanged' ? (\n          <PasswordChangedActions\n            login={login}\n            expanded={expanded}\n            setExpanded={setExpanded}\n            undo={undo}\n            close={close}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nfunction LoginInfo({\n  login,\n  useFullVaultLabel,\n}: {\n  login: AutosnatchedLogin;\n  useFullVaultLabel: boolean;\n}) {\n  const vaultLabel = useMemo(() => {\n    if (!login.vaultInfo) {\n      return t`unknown location`;\n    }\n\n    return useFullVaultLabel\n      ? getFullLoginVaultLabel(login.vaultInfo, login.organizationInfo ?? null)\n      : getLoginVaultLabel(login.vaultInfo);\n  }, [login.organizationInfo, login.vaultInfo, useFullVaultLabel]);\n\n  return (\n    <div className={styles.LoginInfo}>\n      <div className={styles.Line}>\n        {login.username ?? (\n          <span>\n            <CrossIcon className={styles.NoUsernameIcon} /> <Trans>Username unknown</Trans>\n          </span>\n        )}{' '}\n      </div>\n      <div className={styles.Line}>\n        <Trans>\n          <span className={styles.InLabel}>In</span> {vaultLabel}\n        </Trans>\n      </div>\n    </div>\n  );\n}\n\ninterface SnatchActionsProps {\n  expanded: boolean;\n  setExpanded: (expanded: boolean) => void;\n  login: AutosnatchedLogin;\n  autosnatchTargetOptions: GetAutosnatchTargetsResponse;\n  undo: () => void;\n  close: () => void;\n  moveTargetInternal?: VaultId;\n  setMoveTargetInternal: (override: VaultId | undefined) => void;\n  moveSelected: boolean;\n  setMoveSelected: (moveSelected: boolean) => void;\n  moveLogin: (target: VaultId) => void;\n  autosnatchTarget: VaultId | undefined;\n  setAutosnatchTarget: (autosnatchTarget: VaultId) => void;\n}\n\nfunction SnatchActions({\n  login,\n  undo,\n  close,\n  expanded,\n  setExpanded,\n  autosnatchTargetOptions,\n  moveTargetInternal,\n  setMoveTargetInternal,\n  moveSelected,\n  setMoveSelected,\n  moveLogin,\n  autosnatchTarget,\n  setAutosnatchTarget,\n}: SnatchActionsProps) {\n  if (!expanded) {\n    return (\n      <button onClick={() => setExpanded(true)} className={styles.MoreOptionsButton}>\n        <Trans>Click for more options</Trans>\n      </button>\n    );\n  }\n\n  if (autosnatchTargetOptions && moveSelected) {\n    return (\n      <div className={styles.Actions}>\n        <div className={styles.TargetSelectorGroup}>\n          <div className={styles.ToLabel}>\n            <Trans>To</Trans>\n          </div>\n          <AutosnatchTargetSelector\n            className={styles.TargetSelector}\n            autosnatchTargetOverride={moveTargetInternal}\n            autosnatchTargetOptions={autosnatchTargetOptions}\n            autosnatchTarget={autosnatchTarget}\n            setAutosnatchTarget={setAutosnatchTarget}\n            setAutosnatchTargetOverride={setMoveTargetInternal}\n            fixedSize\n          />\n        </div>\n        <div className={styles.MoveButtonGroup}>\n          <LinkButton className={styles.Action} onClick={() => setMoveSelected(false)}>\n            <Trans>Back</Trans>\n          </LinkButton>\n          <LinkButton\n            disabled={!moveTargetInternal || moveTargetInternal === login.vaultInfo?.id}\n            className={styles.Action}\n            onClick={() => {\n              if (!moveTargetInternal) {\n                return;\n              }\n              moveLogin(moveTargetInternal);\n            }}\n          >\n            <Trans>Move</Trans>\n          </LinkButton>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ul className={classNames(styles.Actions, styles.list)}>\n      {!login.username && login.url && (\n        <li>\n          <a\n            className={styles.Action}\n            href={login.url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            onClick={close}\n          >\n            <Trans>Add username</Trans>\n          </a>\n        </li>\n      )}\n      {login.url && (\n        <li>\n          <a\n            className={styles.Action}\n            href={login.url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            onClick={close}\n          >\n            <Trans>Open in heylogin</Trans>\n          </a>\n        </li>\n      )}\n      {login.vaultInfo && autosnatchTargetOptions && (\n        <li>\n          <LinkButton className={styles.Action} type=\"button\" onClick={() => setMoveSelected(true)}>\n            <Trans>Move login</Trans>\n          </LinkButton>\n        </li>\n      )}\n      <li>\n        <LinkButton className={styles.Action} onClick={undo}>\n          <Trans>Do not save login</Trans>\n        </LinkButton>\n      </li>\n    </ul>\n  );\n}\n\ninterface PasswordChangedActionsProps {\n  expanded: boolean;\n  setExpanded: (expanded: boolean) => void;\n  login: AutosnatchedLogin;\n  undo: () => void;\n  close: () => void;\n}\n\nfunction PasswordChangedActions({\n  expanded,\n  setExpanded,\n  login,\n  undo,\n  close,\n}: PasswordChangedActionsProps) {\n  if (!expanded) {\n    return (\n      <button onClick={() => setExpanded(true)} className={styles.MoreOptionsButton}>\n        <Trans>Click for more options</Trans>\n      </button>\n    );\n  }\n\n  return (\n    <ul className={classNames(styles.Actions, styles.list)}>\n      <li>\n        <a\n          className={styles.Action}\n          href={login.url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          onClick={close}\n        >\n          <Trans>Open in heylogin</Trans>\n        </a>\n      </li>\n      <li>\n        <LinkButton className={styles.Action} onClick={undo}>\n          <Trans>Undo</Trans>\n        </LinkButton>\n      </li>\n    </ul>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nimport { trackError } from 'backend-client-web';\n\nimport {\n  openConnection,\n  ForwardIframeClientPort,\n  ForwardIframeConnectionDescriptor,\n} from 'src/connections';\n\nexport default function useContentScriptConnection() {\n  const [port, setPort] = useState<ForwardIframeClientPort>();\n  useEffect(() => {\n    const connectionId = new URLSearchParams(window.location.search).get('connectionId');\n    if (!connectionId) {\n      trackError(new Error('Iframe opened without connectionId'));\n      return;\n    }\n    const newPort = openConnection<ForwardIframeConnectionDescriptor>(\n      'ForwardIframe',\n      connectionId,\n    );\n    setPort(newPort);\n  }, []);\n  return port;\n}\n","import { addMilliseconds, differenceInMilliseconds } from 'date-fns';\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { VaultId } from 'backend-client-web';\n\nimport { autosnatchNotificationIframeStateDescriptor } from 'src/iframeState/descriptors/autosnatchNotification';\nimport useDispatchSetter from 'src/iframeState/hooks/useDispatchSetter';\nimport useIframeState from 'src/iframeState/hooks/useIframeState';\nimport { Size } from 'src/types';\nimport useAutosnatchSettings from 'src/util/react/useAutosnatchSettings';\nimport { useAutosnatchTargetOptions } from 'src/util/react/useAutosnatchTargetOverride';\n\nimport AutosnatchNotificationOverlay from '../components/autosnatchNotificationOverlay/AutosnatchNotificationOverlay';\n\nimport useContentScriptConnection from './useContentScriptConnection';\n\nconst AUTO_CLOSE_TIMEOUT = 5_000;\n\nexport default function AutosnatchNotificationOverlayContainer() {\n  const port = useContentScriptConnection();\n\n  const { iframeState, dispatch } = useIframeState(\n    port,\n    autosnatchNotificationIframeStateDescriptor,\n  );\n\n  const setIntrinsicSize = useDispatchSetter(dispatch, (size: Size) => ({\n    type: 'setIntrinsicSize',\n    size,\n  }));\n\n  const undo = useCallback(() => dispatch({ type: 'undo' }), [dispatch]);\n  const close = useCallback(() => dispatch({ type: 'close' }), [dispatch]);\n  const moveLogin = useCallback(\n    (targetVaultId: VaultId) => dispatch({ type: 'moveLogin', targetVaultId }),\n    [dispatch],\n  );\n\n  const setExpanded = useDispatchSetter(dispatch, (expanded: boolean) => ({\n    type: 'setExpanded',\n    expanded,\n  }));\n\n  const setMoveTargetInternal = useDispatchSetter(\n    dispatch,\n    (moveTargetInternal: VaultId | undefined) => ({\n      type: 'setMoveTargetInternal',\n      moveTargetInternal,\n    }),\n  );\n\n  const setMoveSelected = useDispatchSetter(dispatch, (moveSelected: boolean) => ({\n    type: 'setMoveSelected',\n    moveSelected,\n  }));\n\n  const { cancelTimeout, resetTimeout, pauseTimeout, resumeTimeout } = useAutoclose(\n    !!iframeState.uiState,\n    close,\n  );\n\n  useEffect(() => {\n    if (\n      iframeState.uiState?.state === 'passwordChangeUndone' ||\n      iframeState.uiState?.state === 'snatchUndone'\n    ) {\n      resetTimeout();\n    }\n  }, [iframeState.uiState, resetTimeout]);\n\n  const autosnatchTargetOptions = useAutosnatchTargetOptions();\n\n  const { autosnatchTarget, setAutosnatchTarget } = useAutosnatchSettings();\n\n  if (!iframeState.uiState) {\n    return null;\n  }\n\n  return (\n    <AutosnatchNotificationOverlay\n      setIntrinsicSize={setIntrinsicSize}\n      {...iframeState.uiState}\n      undo={undo}\n      moveLogin={moveLogin}\n      onClick={cancelTimeout}\n      onMouseEnter={pauseTimeout}\n      onMouseLeave={resumeTimeout}\n      setExpanded={setExpanded}\n      close={close}\n      autosnatchTargetOptions={autosnatchTargetOptions}\n      setMoveTargetInternal={setMoveTargetInternal}\n      setMoveSelected={setMoveSelected}\n      autosnatchTarget={autosnatchTarget}\n      setAutosnatchTarget={setAutosnatchTarget}\n    />\n  );\n}\n\nfunction useAutoclose(isOpen: boolean, close: () => void) {\n  const timeoutStateRef = useRef<\n    | { state: 'active'; timeoutId: number; endsAt: Date }\n    | { state: 'canceled' }\n    | { state: 'paused'; remainingMs: number }\n  >();\n\n  const cancelTimeout = useCallback(() => {\n    if (timeoutStateRef.current?.state === 'active') {\n      window.clearTimeout(timeoutStateRef.current.timeoutId);\n    }\n    timeoutStateRef.current = { state: 'canceled' };\n  }, []);\n\n  const startTimeout = useCallback(\n    (timeoutMs: number) => {\n      cancelTimeout();\n      timeoutStateRef.current = {\n        state: 'active',\n        timeoutId: window.setTimeout(() => {\n          close();\n          timeoutStateRef.current = undefined;\n        }, timeoutMs),\n        endsAt: addMilliseconds(new Date(), timeoutMs),\n      };\n    },\n    [cancelTimeout, close],\n  );\n\n  const pauseTimeout = useCallback(() => {\n    if (timeoutStateRef.current?.state !== 'active') {\n      return;\n    }\n\n    window.clearTimeout(timeoutStateRef.current.timeoutId);\n    const remainingMs = Math.max(\n      differenceInMilliseconds(timeoutStateRef.current.endsAt, new Date()),\n      0,\n    );\n\n    timeoutStateRef.current = { state: 'paused', remainingMs };\n  }, []);\n\n  const resumeTimeout = useCallback(() => {\n    if (timeoutStateRef.current?.state !== 'paused') {\n      return;\n    }\n\n    startTimeout(timeoutStateRef.current.remainingMs);\n  }, [startTimeout]);\n\n  const resetTimeout = useCallback(\n    (unpause?: boolean) => {\n      if (timeoutStateRef.current?.state === 'paused' && !unpause) {\n        timeoutStateRef.current.remainingMs = AUTO_CLOSE_TIMEOUT;\n      } else {\n        cancelTimeout();\n        startTimeout(AUTO_CLOSE_TIMEOUT);\n      }\n    },\n    [cancelTimeout, startTimeout],\n  );\n\n  useEffect(() => {\n    if (!isOpen) {\n      cancelTimeout();\n      timeoutStateRef.current = undefined;\n      return;\n    }\n\n    if (timeoutStateRef.current) {\n      return;\n    }\n\n    startTimeout(AUTO_CLOSE_TIMEOUT);\n  }, [cancelTimeout, isOpen, startTimeout]);\n\n  return {\n    cancelTimeout,\n    pauseTimeout,\n    resumeTimeout,\n    resetTimeout,\n  };\n}\n","import { VaultId } from 'backend-client-web';\n\nimport { Size } from 'src/types';\n\nimport { IframeStateDescriptor } from './types';\n\nexport type AutosnatchIframeState = {\n  intrinsicSize: Size;\n  expanded: boolean;\n  visible: boolean;\n  autosnatchTargetOverride?: VaultId;\n  pageHasLogins: boolean;\n};\n\nexport type AutosnatchIframeStateDescriptorType = {\n  mode: 'autosnatch';\n  state: AutosnatchIframeState;\n  action:\n    | { type: 'setIntrinsicSize'; size: Size }\n    | { type: 'setExpanded'; expanded: boolean }\n    | { type: 'setVisible'; visible: boolean }\n    | { type: 'setAutosnatchTargetOverride'; autosnatchTargetOverride?: VaultId }\n    | { type: 'showPasswordGenerator' }\n    | { type: 'showLoginOverlay' };\n};\n\nexport const autosnatchIframeStateDescriptor: IframeStateDescriptor<AutosnatchIframeStateDescriptorType> = {\n  mode: 'autosnatch',\n  initialState: {\n    intrinsicSize: { width: 0, height: 0 },\n    expanded: false,\n    visible: false,\n    pageHasLogins: false,\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case 'setIntrinsicSize':\n        return { ...state, intrinsicSize: action.size };\n      case 'setExpanded':\n        return { ...state, expanded: action.expanded };\n      case 'setVisible':\n        return { ...state, visible: action.visible };\n      case 'setAutosnatchTargetOverride':\n        return { ...state, autosnatchTargetOverride: action.autosnatchTargetOverride };\n      case 'showPasswordGenerator':\n      case 'showLoginOverlay':\n        return { ...state, expanded: false };\n    }\n  },\n};\n","export default \"__VITE_ASSET__52eecc49__\"","export default \"__VITE_ASSET__3744c808__\"","export default \"__VITE_ASSET__3e8d8f55__\"","export default \"__VITE_ASSET__2e0b90f5__\"","export default \"__VITE_ASSET__d96f65dd__\"","export default \"__VITE_ASSET__f3a01adf__\"","import { Trans } from '@lingui/macro';\nimport classNames from 'classnames';\nimport React, { useMemo, useEffect, useRef } from 'react';\n\nimport { VaultId } from 'backend-client-web';\nimport { useElementSize, Switch } from 'client-web-sdk';\n\nimport { ReactComponent as ArrowDownIcon } from 'src/images/arrow_down.svg';\nimport { ReactComponent as ArrowUpIcon } from 'src/images/arrow_up.svg';\nimport { ReactComponent as HeyloginIconColor } from 'src/images/heylogin_icon.svg';\nimport { ReactComponent as HeyloginIconGray } from 'src/images/heylogin_icon_disabled.svg';\nimport { GetAutosnatchTargetsResponse } from 'src/message';\n\nimport AutosnatchTargetSelector, {\n  shouldShowAutosnatchTargetSelector,\n} from '../AutosnatchTargetSelector';\n\nimport styles from './AutosnatchOverlay.module.css';\nimport { ReactComponent as EyeOffIcon } from './eye-off.svg';\nimport { ReactComponent as LockIcon } from './lock.svg';\nimport { ReactComponent as LoginOverlayIcon } from './login-overlay.svg';\n\ninterface MenuProps {\n  openPasswordGenerator: () => void;\n  setAutosnatchActive: (active: boolean) => void;\n  autosnatchActive: boolean;\n  autosnatchTargetOptions: GetAutosnatchTargetsResponse;\n  autosnatchTarget: VaultId | undefined;\n  setAutosnatchTarget: (newTarget: VaultId) => void;\n  autosnatchTargetOverride: VaultId | undefined;\n  setAutosnatchTargetOverride: (target: VaultId) => void;\n  close: () => void;\n  pageHasLogins: boolean;\n  showLoginOverlay: () => void;\n}\n\ntype Props = {\n  expanded: boolean;\n  setExpanded: (expanded: boolean) => void;\n  onResize: (width: number, height: number) => void;\n  passwordFieldHeight: number;\n} & MenuProps;\n\nexport default function AutosnatchOverlay({\n  onResize,\n  setAutosnatchActive: setActive,\n  setExpanded,\n  openPasswordGenerator,\n  expanded,\n  autosnatchActive: active,\n  passwordFieldHeight,\n  ...menuProps\n}: Props) {\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  const [rootRef, size] = useElementSize();\n  useEffect(() => {\n    onResize(size.width, size.height);\n  }, [size.height, size.width, onResize]);\n\n  const fontSize = useMemo(() => passwordFieldHeight / 2, [passwordFieldHeight]);\n\n  return (\n    <div\n      className={styles.Container}\n      ref={rootRef}\n      onClick={(e) => {\n        // Close when clicking in the empty space between menu and button. In these cases, container\n        // itself is the click event's target.\n        if (e.target === ref.current) {\n          setExpanded(false);\n        }\n      }}\n    >\n      <button\n        onClick={() => setExpanded(!expanded)}\n        className={styles.Button}\n        style={{ fontSize: `${fontSize}px` }}\n      >\n        {active ? (\n          <HeyloginIconColor className={styles.HeyloginIcon} />\n        ) : (\n          <HeyloginIconGray className={styles.HeyloginIcon} />\n        )}\n        {expanded ? (\n          <ArrowUpIcon className={styles.Arrow} />\n        ) : (\n          <ArrowDownIcon className={styles.Arrow} />\n        )}\n      </button>\n      {expanded && (\n        <AutosnatchOverlayMenu\n          autosnatchActive={active}\n          openPasswordGenerator={openPasswordGenerator}\n          setAutosnatchActive={setActive}\n          {...menuProps}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction AutosnatchOverlayMenu({\n  autosnatchActive: active,\n  setAutosnatchActive: setActive,\n  openPasswordGenerator,\n  autosnatchTarget,\n  autosnatchTargetOptions,\n  setAutosnatchTarget,\n  autosnatchTargetOverride,\n  setAutosnatchTargetOverride,\n  close,\n  pageHasLogins,\n  showLoginOverlay,\n}: MenuProps) {\n  return (\n    <div className={styles.Menu}>\n      <label className={styles.ToggleActive}>\n        <Switch\n          className={styles.Switch}\n          onChange={(e) => setActive(e.target.checked)}\n          checked={active}\n        />\n        <span className={styles.ToggleActiveLabel}>\n          <Trans>Enable autosave on this device</Trans>\n        </span>\n      </label>\n      {active &&\n        autosnatchTargetOptions &&\n        shouldShowAutosnatchTargetSelector(autosnatchTargetOptions) && (\n          <div className={styles.TargetSelectorGroup}>\n            <div className={styles.ToLabel}>\n              <Trans>To</Trans>\n            </div>\n            <AutosnatchTargetSelector\n              className={styles.TargetSelector}\n              autosnatchTarget={autosnatchTarget}\n              autosnatchTargetOverride={autosnatchTargetOverride}\n              setAutosnatchTargetOverride={setAutosnatchTargetOverride}\n              autosnatchTargetOptions={autosnatchTargetOptions}\n              setAutosnatchTarget={setAutosnatchTarget}\n            />\n          </div>\n        )}\n      <button\n        type=\"button\"\n        onClick={openPasswordGenerator}\n        className={classNames(styles.MenuButton, styles.primary)}\n      >\n        <LockIcon />\n        <Trans>Generate password</Trans>\n      </button>\n      {pageHasLogins && (\n        <button\n          type=\"button\"\n          onClick={showLoginOverlay}\n          className={classNames(styles.MenuButton, styles.primary)}\n        >\n          <LoginOverlayIcon />\n          <Trans>Open login window</Trans>\n        </button>\n      )}\n      <button type=\"button\" onClick={close} className={classNames(styles.MenuButton, styles.hide)}>\n        <EyeOffIcon />\n        <Trans>Hide heylogin once on this page</Trans>\n      </button>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport default function useExtrinsicIframeSize() {\n  const [size, setSize] = useState(getExtrinsicSizeFromLocation());\n\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setSize(getExtrinsicSizeFromLocation());\n    });\n  }, []);\n\n  return size;\n}\n\nfunction getExtrinsicSizeFromLocation() {\n  const hash = new URLSearchParams(window.location.hash.substring(1));\n  return {\n    width: parseInt(hash.get('extrinsicWidth')!, 10),\n    height: parseInt(hash.get('extrinsicHeight')!, 10),\n  };\n}\n","import { useCallback } from 'react';\n\nimport { Achievement, VaultId, trackError } from 'backend-client-web';\n\nimport { autosnatchIframeStateDescriptor } from 'src/iframeState/descriptors/autosnatch';\nimport useDispatchSetter from 'src/iframeState/hooks/useDispatchSetter';\nimport useIframeState from 'src/iframeState/hooks/useIframeState';\nimport { sendMessage } from 'src/message';\nimport { Size } from 'src/types';\nimport useAutosnatchSettings from 'src/util/react/useAutosnatchSettings';\nimport useAutosnatchTargetOverride from 'src/util/react/useAutosnatchTargetOverride';\nimport useCloseOnEscape from 'src/util/react/useCloseOnEscape';\n\nimport AutosnatchOverlay from '../components/autosnatchOverlay/AutosnatchOverlay';\nimport useExtrinsicIframeSize from '../utils/getExtrinsicSizeFromLocation';\n\nimport useContentScriptConnection from './useContentScriptConnection';\n\nexport default function AutosnatchOverlayContainer() {\n  const port = useContentScriptConnection();\n\n  const { iframeState, dispatch } = useIframeState(port, autosnatchIframeStateDescriptor);\n\n  const setExpanded = useDispatchSetter(dispatch, (expanded: boolean) => ({\n    type: 'setExpanded',\n    expanded,\n  }));\n\n  const setVisible = useDispatchSetter(dispatch, (visible: boolean) => ({\n    type: 'setVisible',\n    visible,\n  }));\n\n  const setIntrinsicSize = useDispatchSetter(dispatch, (size: Size) => ({\n    type: 'setIntrinsicSize',\n    size,\n  }));\n\n  const setAutosnatchTargetOverride = useDispatchSetter(\n    dispatch,\n    (autosnatchTargetOverride: VaultId | undefined) => ({\n      type: 'setAutosnatchTargetOverride',\n      autosnatchTargetOverride,\n    }),\n  );\n  const { height: passwordFieldHeight } = useExtrinsicIframeSize();\n\n  const handleResize = useCallback(\n    (width: number, height: number) => {\n      setIntrinsicSize({ width, height });\n    },\n    [setIntrinsicSize],\n  );\n\n  const openPasswordGenerator = useCallback(() => {\n    dispatch({ type: 'showPasswordGenerator' });\n  }, [dispatch]);\n\n  const showLoginOverlay = useCallback(() => {\n    dispatch({ type: 'showLoginOverlay' });\n  }, [dispatch]);\n\n  const close = useCallback(() => {\n    setVisible(false);\n  }, [setVisible]);\n\n  useCloseOnEscape(() => setExpanded(false));\n\n  const {\n    autosnatchTarget,\n    setAutosnatchTarget,\n    autosnatchDisabled,\n    setAutosnatchDisabled,\n  } = useAutosnatchSettings();\n\n  const setAutosnatchDisabledWithAchievement = useCallback(\n    (disabled: boolean) => {\n      setAutosnatchDisabled(disabled);\n      sendMessage({\n        type: 'AddAchievements',\n        achievements: [Achievement.EXT_OVERLAY_DISABLE_AUTOSNATCH],\n      }).catch(trackError);\n    },\n    [setAutosnatchDisabled],\n  );\n\n  const overrideProps = useAutosnatchTargetOverride(\n    iframeState.autosnatchTargetOverride,\n    setAutosnatchTargetOverride,\n  );\n\n  return (\n    <AutosnatchOverlay\n      autosnatchTarget={autosnatchTarget}\n      setAutosnatchTarget={setAutosnatchTarget}\n      onResize={handleResize}\n      autosnatchActive={!autosnatchDisabled}\n      expanded={iframeState.expanded}\n      setAutosnatchActive={(v) => setAutosnatchDisabledWithAchievement(!v)}\n      setExpanded={setExpanded}\n      openPasswordGenerator={openPasswordGenerator}\n      passwordFieldHeight={passwordFieldHeight}\n      close={close}\n      pageHasLogins={iframeState.pageHasLogins}\n      showLoginOverlay={showLoginOverlay}\n      {...overrideProps}\n    />\n  );\n}\n","import { I18n } from '@lingui/core';\nimport { msg } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport formatRelative from 'date-fns/formatRelative';\nimport { useMemo } from 'react';\n\nimport { ISODateString } from 'client-core';\nimport { getDateFnsLocale } from 'client-web-sdk';\n\nexport default function useFormatDateDayRelative(dateString: ISODateString) {\n  const { _ } = useLingui();\n  return useMemo(() => formatDateRelative(dateString, _), [_, dateString]);\n}\n\nexport function formatDateRelative(dateString: ISODateString, t: I18n['_']) {\n  const dateFnsLocale = getDateFnsLocale();\n  // https://github.com/date-fns/date-fns/issues/1218#issuecomment-599182307\n  const formatRelativeLocale = {\n    lastWeek: () => `'${t(msg`last`)}' eeee`,\n    yesterday: () => `'${t(msg`yesterday`)}'`,\n    today: () => `'${t(msg`today at`)}' p`,\n    tomorrow: () => `'${t(msg`tomorrow`)}'`,\n    nextWeek: () => `'${t(msg`next`)}' eeee`,\n    other: () => {\n      const atAbsoluteDate = dateFnsLocale.formatRelative?.('other') ?? 'yyyy-MM-dd';\n      return t(msg({ message: `${atAbsoluteDate}`, context: 'date-fns format string' }));\n    },\n  };\n  const locale = {\n    ...dateFnsLocale,\n    formatRelative: (token: keyof typeof formatRelativeLocale) => formatRelativeLocale[token](),\n  };\n  return formatRelative(new Date(dateString), new Date(), {\n    locale,\n  });\n}\n","import { t, Trans } from '@lingui/macro';\nimport classNames from 'classnames';\nimport { Formik } from 'formik';\nimport React from 'react';\n\nimport { ISODateString } from 'client-core';\nimport { ActionInput, ActionButton, UIStyleContextProvider } from 'client-web-sdk';\n\nimport useFormatDateRelative from '../utils/useFormatDateRelative';\n\nimport styles from './UpdateLoginForm.module.css';\n\ninterface Props {\n  onSave: (username: string, password: string) => void;\n  host: string | undefined;\n  landscape: boolean;\n  password: string;\n  creationTime: ISODateString;\n  archiveAddUsernameLogin: () => void;\n}\n\nexport default function UpdateLoginForm({\n  onSave,\n  host,\n  landscape,\n  password,\n  creationTime,\n  archiveAddUsernameLogin,\n}: Props) {\n  const size = landscape ? 'small' : 'medium';\n\n  return (\n    <UIStyleContextProvider uiStyle=\"highlight\">\n      <Formik\n        initialValues={{ username: '', password }}\n        onSubmit={(values) => {\n          onSave(values.username, values.password);\n        }}\n      >\n        {(formik) => (\n          <div\n            className={classNames(styles.UpdateLoginForm, {\n              [styles.landscape]: landscape,\n              [styles.portrait]: !landscape,\n            })}\n          >\n            <header className={styles.Header}>\n              <h1 className={styles.LogInto}>\n                <Trans>Log into</Trans>\n              </h1>{' '}\n              <h2 className={styles.Website}>{host}</h2>\n              <PendingInfo creationTime={creationTime} onClear={archiveAddUsernameLogin} />\n            </header>\n            <form onSubmit={formik.handleSubmit} className={styles.Form}>\n              <div className={styles.FormElement}>\n                <ActionInput\n                  type=\"text\"\n                  placeholder={t`Username`}\n                  {...formik.getFieldProps('username')}\n                  error={formik.touched.username ? formik.errors.username : undefined}\n                  size={size}\n                />\n              </div>\n              <div className={styles.FormElement}>\n                <ActionInput\n                  type=\"password\"\n                  placeholder={t`Password`}\n                  {...formik.getFieldProps('password')}\n                  error={formik.touched.password ? formik.errors.password : undefined}\n                  size={size}\n                />\n              </div>\n              <div className={styles.FormElement}>\n                <ActionButton buttonStyle=\"primary\" type=\"submit\" size={size}>\n                  <Trans>Log in & save</Trans>\n                </ActionButton>\n              </div>\n            </form>\n          </div>\n        )}\n      </Formik>\n    </UIStyleContextProvider>\n  );\n}\n\nfunction PendingInfo({\n  creationTime,\n  onClear,\n}: {\n  creationTime: ISODateString;\n  onClear: () => void;\n}) {\n  const relativeDate = useFormatDateRelative(creationTime);\n\n  return (\n    <div className={styles.PendingInfo}>\n      <div>\n        <Trans>Login created {relativeDate}</Trans>\n      </div>\n      <div>\n        <button className={styles.ClearPending} onClick={onClear}>\n          <Trans>Delete login</Trans>\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { VaultId } from 'backend-client-web';\nimport { LoginId, TotpParameters } from 'client-core';\n\nimport { ContentLogin, Size } from 'src/types';\n\nimport { IframeStateDescriptor } from './types';\n\nexport type LoginIframeStateDescriptorType = {\n  mode: 'login';\n  state: {\n    intrinsicSize: Size;\n    logins?: readonly ContentLogin[];\n    preferredLoginIds?: LoginId[];\n  };\n  action:\n    | { type: 'setIntrinsicSize'; size: Size }\n    | { type: 'hide' }\n    | {\n        type: 'updateLoginAndFillForm';\n        targetLoginId: LoginId;\n        targetVaultId?: VaultId;\n        username: string;\n        password: string;\n        totp?: TotpParameters;\n      };\n};\n\nexport const loginIframeStateDescriptor: IframeStateDescriptor<LoginIframeStateDescriptorType> = {\n  mode: 'login',\n  initialState: {\n    intrinsicSize: { width: 0, height: 0 },\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case 'setIntrinsicSize':\n        return { ...state, intrinsicSize: action.size };\n      case 'hide':\n      case 'updateLoginAndFillForm':\n        return state;\n    }\n  },\n};\n","import { Size } from 'src/types';\n\nexport function getLoginOverlayLandscape(extrinsicSize: Size) {\n  const aspectRatio = extrinsicSize.width / extrinsicSize.height;\n  return extrinsicSize.height < 50 || (extrinsicSize.height < 100 && aspectRatio >= 2.5);\n}\n","import { ContentLogin } from 'src/types';\n\nexport default function shouldAskForLoginUsername(\n  login: Pick<ContentLogin, 'username' | 'title' | 'permissions'>,\n) {\n  return !login.username && !login.title && login.permissions.editLogin;\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\n\nimport { LoginButton } from 'client-web-sdk';\n\nimport useErrorHandlingCallback from 'src/util/react/useErrorHandlingCallback';\n\nimport styles from './ConfirmLoginUse.module.css';\n\ninterface Props {\n  confirm: () => Promise<void>;\n  loginLink?: string;\n  label: string;\n}\n\nexport default function ConfirmLoginUse({ loginLink, label, confirm }: Props) {\n  const handleAcceptClick = useErrorHandlingCallback(() => confirm(), [confirm]);\n  return (\n    <div className={styles.ConfirmLoginUse}>\n      <h1 className={styles.Headline}>\n        <Trans>Use new login from your inbox?</Trans>\n      </h1>\n      <p>\n        <LoginButton onClick={handleAcceptClick} className={styles.LoginButton} icon=\"inbox\">\n          <div>{label}</div>\n        </LoginButton>\n      </p>\n      {loginLink && (\n        <p>\n          <a href={loginLink} target=\"_blank\" rel=\"noreferrer\" className={styles.ShowLoginLink}>\n            <Trans>View login</Trans>\n          </a>\n        </p>\n      )}\n    </div>\n  );\n}\n","import { getUrlSimilarity, parseUrlWithPsl, UriWithPsl } from 'client-web-sdk/getLoginsForUrl';\n\nexport default function getDisambiguatedLogins<T extends { websites: string[] }>(\n  logins: readonly T[],\n  url?: string,\n): readonly (T & { website?: string })[] {\n  const uriWithPsl = url !== undefined ? parseUrlWithPsl(url) : undefined;\n  const loginsWithWebsite = logins.map((login) => ({\n    ...login,\n    website: getBestMatchingWebsite(login.websites, uriWithPsl),\n  }));\n\n  const firstWebsite = loginsWithWebsite[0]?.website;\n  const websitesDiffer = loginsWithWebsite.some(({ website }) => website !== firstWebsite);\n\n  // If there are logins with differing websites, return them with websites for disambiguation\n  if (websitesDiffer) {\n    return loginsWithWebsite;\n  }\n\n  // If the website is the same for all logins, there's no need to show it\n  return logins;\n}\n\nfunction getBestMatchingWebsite(websites: string[], uriWithPsl?: UriWithPsl) {\n  if (!uriWithPsl) {\n    // We don't have a reference uri, just show the longest website we got\n    let bestMatchingWebsite: string | undefined = undefined;\n    for (const ws of websites) {\n      if (!bestMatchingWebsite || ws.length > bestMatchingWebsite.length) {\n        bestMatchingWebsite = ws;\n      }\n    }\n    return bestMatchingWebsite;\n  }\n\n  // Pick the website that is most similar to the reference uri\n  let bestMatchingWebsite: string | undefined = undefined;\n  let bestMatchingWebsiteSimilarity = 0;\n  for (const ws of websites) {\n    const similarity = getUrlSimilarity(uriWithPsl, ws);\n    if (!similarity) {\n      continue;\n    }\n    if (\n      similarity > bestMatchingWebsiteSimilarity ||\n      // If we have multiple urls with same similarity, prefer the shortest one because it's going to be\n      // easiest for the user to read that one.\n      (similarity === bestMatchingWebsiteSimilarity &&\n        (!bestMatchingWebsite || ws.length < bestMatchingWebsite?.length))\n    ) {\n      bestMatchingWebsite = ws;\n      bestMatchingWebsiteSimilarity = similarity;\n    }\n  }\n  return bestMatchingWebsite;\n}\n","export default \"__VITE_ASSET__af9fb0ac__\"","export default \"__VITE_ASSET__c9293802__\"","export default \"__VITE_ASSET__d109d853__\"","import { t, Trans } from '@lingui/macro';\nimport classNames from 'classnames';\nimport { useCombobox } from 'downshift';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { searchPredicate, VaultType, getLoginDisplayLabel } from 'client-core';\n\nimport { ReactComponent as ForwardIcon } from 'src/images/forward.svg';\nimport { ReactComponent as SearchIcon } from 'src/images/search.svg';\nimport { ReactComponent as TeamIcon } from 'src/images/team.svg';\nimport { ContentLogin } from 'src/types';\n\nimport useFormatDateRelative from '../utils/useFormatDateRelative';\n\n/* eslint css-modules/no-unused-class: [2, { markAsUsed: ['medium', 'small'] }] */\nimport styles from './OverlayLoginSearch.module.css';\n\ninterface Props {\n  logins: readonly (ContentLogin & { website?: string })[];\n  size?: 'medium' | 'small';\n  menuHeight: number;\n  handleLoginClick: (login: ContentLogin) => void;\n  performDefaultActionRef?: React.MutableRefObject<() => void>;\n}\n\nexport default function OverlayLoginSearch({\n  logins,\n  size,\n  menuHeight,\n  handleLoginClick,\n  performDefaultActionRef,\n}: Props) {\n  const [filteredLogins, setFilteredLogins] = useState(logins);\n  const {\n    isOpen,\n    highlightedIndex,\n    inputValue,\n    getLabelProps,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps,\n    openMenu,\n  } = useCombobox({\n    itemToString: (item) => (item ? getLoginDisplayLabel(item) ?? '' : ''),\n    // @ts-ignore\n    items: filteredLogins,\n    onSelectedItemChange: ({ selectedItem }) => {\n      if (selectedItem) {\n        handleLoginClick(selectedItem);\n      }\n    },\n  });\n\n  useEffect(() => {\n    setFilteredLogins(\n      !inputValue ? logins : logins.filter((item) => searchPredicate(item, inputValue)),\n    );\n  }, [inputValue, logins]);\n\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  useEffect(() => {\n    if (performDefaultActionRef) {\n      performDefaultActionRef.current = () => {\n        inputRef.current?.focus();\n      };\n    }\n  }, [performDefaultActionRef]);\n\n  return (\n    <div\n      className={classNames(styles.OverlayLoginSearch, styles[size ?? 'medium'], {\n        [styles.open]: isOpen,\n      })}\n    >\n      <div {...getComboboxProps()} className={styles.InputWrapper}>\n        <label\n          {...getLabelProps()}\n          className={classNames(styles.Placeholder, {\n            [styles.visuallyhidden]: inputValue !== '',\n          })}\n        >\n          <SearchIcon title=\"\" className={styles.PlaceholderIcon} />\n          <span className={styles.PlaceholderText}>\n            <Trans>Search {logins.length} logins</Trans>\n          </span>\n        </label>\n        <input\n          {...getInputProps({\n            onFocus: () => {\n              if (!isOpen) {\n                openMenu();\n              }\n            },\n            ref: inputRef,\n          })}\n          className={styles.Input}\n        />\n      </div>\n      <div\n        className={classNames(styles.MenuWrapper, {\n          [styles.visuallyhidden]: !isOpen,\n        })}\n      >\n        <ul\n          {...getMenuProps()}\n          className={styles.Menu}\n          style={{ '--menu-height': `${menuHeight}px` }}\n        >\n          {isOpen && filteredLogins.length ? (\n            filteredLogins.map((login, index) => (\n              <li\n                className={classNames(styles.MenuItem, {\n                  [styles.highlighted]: highlightedIndex === index,\n                })}\n                key={login.id}\n                {...getItemProps({ item: login, index })}\n              >\n                {login.vaultMetadata?.type === VaultType.TEAM && <TeamIcon title={t`Team`} />}\n                <MenuItemLabel login={login} />\n                <ForwardIcon title=\"\" />\n              </li>\n            ))\n          ) : (\n            <li className={styles.NothingFoundMessage}>\n              <Trans>No logins found</Trans>\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nfunction MenuItemLabel({ login }: { login: ContentLogin & { website?: string } }) {\n  const displayLabel = getLoginDisplayLabel(login);\n  const dateString = login.creationTime;\n  const relativeDate = useFormatDateRelative(dateString);\n\n  if (!displayLabel) {\n    return (\n      <div className={styles.Label}>\n        <div className={styles.Title}>\n          <Trans>Unnamed login</Trans>\n        </div>\n        <div className={styles.Subtitle}>\n          <Trans>Login created {relativeDate}</Trans>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.Label}>\n      <div className={styles.Title}>{displayLabel}</div>\n      {login.website && (\n        <div className={styles.Subtitle}>\n          <Trans>on {login.website}</Trans>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { Trans, Plural } from '@lingui/macro';\nimport classNames from 'classnames';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\n\nimport { getLoginDisplayLabel, LoginId, VaultType } from 'client-core';\nimport { useElementSize, LoginButton, ActionButton } from 'client-web-sdk';\n\nimport useFormatDateRelative from 'src/entrypoints/iframe/utils/useFormatDateRelative';\nimport { ContentLogin } from 'src/types';\nimport getDisambiguatedLogins from 'src/util/getDisambiguatedLogins';\n\nimport styles from './OverlayLoginList.module.css';\nimport OverlayLoginSearch from './OverlayLoginSearch';\n\ninterface Props {\n  logins: readonly ContentLogin[];\n  handleLoginClick: (login: ContentLogin) => void;\n  landscape: boolean;\n  url: string | undefined;\n  extrinsicHeight: number;\n  performDefaultActionRef?: React.MutableRefObject<() => void>;\n  preferredLoginIds?: LoginId[];\n}\n\nexport default function OverlayLoginList({\n  logins,\n  landscape,\n  handleLoginClick,\n  url,\n  extrinsicHeight,\n  performDefaultActionRef,\n  preferredLoginIds,\n}: Props) {\n  const [hideInferiorMatches, setHideInferiorMatches] = useState(true);\n\n  const disambiguatedLogins = useMemo(() => getDisambiguatedLogins(logins, url), [logins, url]);\n  const bestMatchLogins = useMemo(() => {\n    const preferredLogins =\n      preferredLoginIds && disambiguatedLogins.filter(({ id }) => preferredLoginIds.includes(id));\n    const loginsToProcess = preferredLogins?.length ? preferredLogins : disambiguatedLogins;\n    const index = loginsToProcess.findIndex(\n      (l) => l.urlSimilarity < loginsToProcess[0].urlSimilarity,\n    );\n    return index === -1 ? loginsToProcess : loginsToProcess.slice(0, index);\n  }, [disambiguatedLogins, preferredLoginIds]);\n\n  const displayedLogins = hideInferiorMatches ? bestMatchLogins : disambiguatedLogins;\n\n  const hiddenLoginsCount = disambiguatedLogins.length - displayedLogins.length;\n  const loginsHidden = hiddenLoginsCount > 0;\n\n  const horizontal = landscape && displayedLogins.length < (loginsHidden ? 2 : 3);\n\n  const [loginItemRef, { height: loginItemHeight }] = useElementSize<HTMLLIElement>();\n\n  const maxLoginItemCount = useMemo(() => {\n    if (loginItemHeight === 0 || horizontal) {\n      return Infinity;\n    }\n    const availableHeight = extrinsicHeight;\n    // subtract 1 to allow for some padding in overlay window\n    const loginsFittingInHeight = Math.floor(availableHeight / loginItemHeight) - 1;\n    // Always show at least 3 items (2 logins + search or 3 logins)\n    return Math.max(loginsFittingInHeight, 3);\n  }, [extrinsicHeight, horizontal, loginItemHeight]);\n  const showSearch =\n    displayedLogins.length > (loginsHidden ? maxLoginItemCount - 1 : maxLoginItemCount);\n  const listLogins = showSearch ? displayedLogins.slice(0, maxLoginItemCount - 1) : displayedLogins;\n\n  // Hack to force a re-render after loginItemRef has been set. The ref is only initialized once the\n  // list has been rendered, but we need to re-render with it to decide whether to show the search.\n  const [, setListLoginLength] = useState<number>();\n  useEffect(() => {\n    setListLoginLength(listLogins.length);\n  }, [listLogins.length]);\n\n  const searchMenuHeight = loginItemHeight * listLogins.length;\n\n  const listRef = useRef<HTMLUListElement | null>(null);\n  const searchItemRef = useRef<HTMLLIElement | null>(null);\n  useArrowFocus(listRef, searchItemRef);\n\n  useEffect(() => {\n    // Default action is passed down to OverlayLoginSearch if that is shown\n    if (!performDefaultActionRef || showSearch) {\n      return;\n    }\n    if (listLogins.length === 1) {\n      performDefaultActionRef.current = () => handleLoginClick(listLogins[0]);\n    } else {\n      performDefaultActionRef.current = () => listRef.current?.querySelector('button')?.focus();\n    }\n  }, [handleLoginClick, listLogins, listLogins.length, performDefaultActionRef, showSearch]);\n\n  return (\n    <ul\n      className={classNames(styles.LoginList, {\n        [styles.horizontal]: horizontal,\n      })}\n      ref={listRef}\n    >\n      {showSearch && (\n        <li key=\"search\" className={styles.LoginListItem} ref={searchItemRef}>\n          <OverlayLoginSearch\n            // Always show all matches in search\n            logins={disambiguatedLogins}\n            size={landscape ? 'small' : 'medium'}\n            handleLoginClick={handleLoginClick}\n            menuHeight={searchMenuHeight}\n            performDefaultActionRef={performDefaultActionRef}\n          />\n        </li>\n      )}\n      {listLogins.map((l, i) => (\n        // Use one of the li's to measure the login item height. We don't use the 0th on, since it\n        // doesn't have margin in all situations.\n        <li key={i} className={styles.LoginListItem} ref={i === 1 ? loginItemRef : undefined}>\n          <LoginListItem onClick={() => handleLoginClick(l)} login={l} landscape={landscape} />\n        </li>\n      ))}\n      {hiddenLoginsCount > 0 && !showSearch && (\n        <li key=\"showAll\" className={styles.LoginListItem}>\n          <ActionButton\n            buttonStyle=\"tertiary\"\n            type=\"button\"\n            onClick={() => setHideInferiorMatches(false)}\n            className={styles.ShowAllButton}\n          >\n            <Plural value={hiddenLoginsCount} one=\"Show # more login\" other=\"Show # more logins\" />\n          </ActionButton>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nfunction LoginListItem({\n  onClick,\n  login,\n  landscape,\n}: {\n  login: ContentLogin & { website?: string };\n  landscape: boolean;\n  onClick: () => void;\n}) {\n  const relativeDate = useFormatDateRelative(login.creationTime);\n\n  const displayLabel = getLoginDisplayLabel(login);\n  return (\n    <LoginButton\n      onClick={onClick}\n      size={landscape ? 'small' : 'medium'}\n      className={styles.LoginButton}\n      icon={\n        login.vaultMetadata?.type === VaultType.TEAM\n          ? 'team'\n          : login.vaultMetadata?.type === VaultType.INBOX\n          ? 'inbox'\n          : undefined\n      }\n    >\n      {displayLabel ? (\n        <>\n          <div>{displayLabel}</div>\n          {login.website && (\n            <div className={styles.LoginButtonSubtitle}>\n              <Trans>on {login.website}</Trans>\n            </div>\n          )}\n        </>\n      ) : (\n        <>\n          <div>\n            <Trans>Unnamed login</Trans>\n          </div>\n          <div className={styles.LoginButtonSubtitle}>\n            <Trans>Login created {relativeDate}</Trans>\n          </div>\n        </>\n      )}\n    </LoginButton>\n  );\n}\n\nfunction useArrowFocus(\n  listRef: React.MutableRefObject<HTMLUListElement | null>,\n  searchItemRef: React.MutableRefObject<HTMLLIElement | null>,\n) {\n  useEffect(() => {\n    function onKeyDown(e: KeyboardEvent) {\n      if (e.metaKey || e.ctrlKey || e.altKey || e.shiftKey || e.defaultPrevented) {\n        return;\n      }\n\n      let direction;\n      if (e.key === 'ArrowUp') {\n        direction = -1;\n      } else if (e.key === 'ArrowDown') {\n        direction = 1;\n      } else {\n        return;\n      }\n\n      const focused = document.querySelector<HTMLElement>(':focus');\n      if (\n        !focused ||\n        !listRef.current?.contains(focused) ||\n        searchItemRef.current?.contains(focused)\n      ) {\n        return;\n      }\n      const focusable: HTMLElement[] = [\n        ...listRef.current.querySelectorAll('button, input'),\n      ].filter((f): f is HTMLElement => f instanceof HTMLElement);\n      const index = focusable.indexOf(focused);\n      if (index === -1) {\n        return;\n      }\n      const newIndex = (index + direction + focusable.length) % focusable.length;\n      focusable[newIndex].focus();\n    }\n    document.addEventListener('keydown', onKeyDown);\n    return () => document.removeEventListener('keydown', onKeyDown);\n  });\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\n\nimport { LoginButton, TotpTimeOffsetWarning } from 'client-web-sdk';\n\nimport styles from './OverlayTotpWarning.module.css';\n\nexport default function OverlayTotpWarning({\n  performLogin,\n  close,\n  warningCleared,\n  recheck,\n}: {\n  performLogin: () => void;\n  close: () => void;\n  warningCleared: boolean;\n  recheck: () => Promise<void>;\n}) {\n  return (\n    <>\n      <TotpTimeOffsetWarning\n        className={styles.OverlayTotpWarning}\n        onClose={close}\n        hidden={warningCleared}\n        recheck={recheck}\n        onRecheckSuccess={performLogin}\n      >\n        <LoginButton size=\"small\" onClick={performLogin} className={styles.LoginButton}>\n          <Trans>Login anyways</Trans>\n        </LoginButton>\n      </TotpTimeOffsetWarning>\n    </>\n  );\n}\n","import { Trans } from '@lingui/macro';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { SubscriptionError } from 'backend-client-web';\nimport { ActionButton, UIStyleContextProvider } from 'client-web-sdk';\n\nimport styles from './SubscriptionNag.module.css';\n\nexport default function SubscriptionNag({\n  subscriptionSettingsLink,\n  organizationName,\n  landscape,\n  subscriptionError,\n}: {\n  subscriptionSettingsLink?: string;\n  organizationName: string;\n  landscape?: boolean;\n  subscriptionError: SubscriptionError | undefined;\n}) {\n  return (\n    <UIStyleContextProvider uiStyle=\"highlight\">\n      <div className={classNames(styles.SubscriptionNag, { [styles.landscape]: landscape })}>\n        <h1 className={styles.Headline}>\n          {subscriptionError === SubscriptionError.TRIAL_EXCEEDED ? (\n            <Trans>Trial Expired</Trans>\n          ) : (\n            <Trans>Plan paused</Trans>\n          )}\n        </h1>\n        <p className={styles.Info}>\n          {subscriptionError === SubscriptionError.TRIAL_EXCEEDED ? (\n            <Trans>\n              The heylogin trial for <strong>“{organizationName}”</strong> has expired.\n            </Trans>\n          ) : (\n            <Trans>\n              The heylogin plan of your organization <strong>“{organizationName}”</strong> is\n              paused.\n            </Trans>\n          )}\n        </p>\n        {subscriptionSettingsLink && (\n          <div className={styles.ButtonGroup}>\n            <ActionButton\n              element=\"a\"\n              buttonStyle=\"primary\"\n              href={subscriptionSettingsLink}\n              target=\"_blank\"\n              className={styles.UpgradeButton}\n              rel=\"noreferrer\"\n            >\n              {subscriptionError === SubscriptionError.TRIAL_EXCEEDED ? (\n                <Trans>Upgrade now</Trans>\n              ) : (\n                <Trans>Manage plan</Trans>\n              )}\n            </ActionButton>\n          </div>\n        )}\n      </div>\n    </UIStyleContextProvider>\n  );\n}\n","import { useMemo } from 'react';\n\nimport getHost from 'src/util/getHost';\n\nexport default function useParentPageUrl() {\n  return useMemo(() => {\n    const url = new URLSearchParams(window.location.search).get('url') ?? undefined;\n    const host = url ? getHost(url) : undefined;\n    return { url, host };\n  }, []);\n}\n","import { t } from '@lingui/macro';\nimport React, { useState, useCallback, useMemo, useRef, useEffect } from 'react';\n\nimport { Achievement, trackError } from 'backend-client-web';\nimport { LoginId, getLoginDisplayLabel } from 'client-core';\nimport { LoginWindow } from 'client-web-sdk';\n\nimport { ContentToIframeMessage } from 'src/connections';\nimport UpdateLoginForm from 'src/entrypoints/iframe/components/UpdateLoginForm';\nimport useExtrinsicIframeSize from 'src/entrypoints/iframe/utils/getExtrinsicSizeFromLocation';\nimport { loginIframeStateDescriptor } from 'src/iframeState/descriptors/login';\nimport useDispatchSetter from 'src/iframeState/hooks/useDispatchSetter';\nimport useIframeState from 'src/iframeState/hooks/useIframeState';\nimport { sendMessage } from 'src/message';\nimport { getFrontendServerUrl } from 'src/serverUrl';\nimport { ContentLogin, LoginOrganizationMetadata, Size } from 'src/types';\nimport addAchievement from 'src/util/addAchievement';\nimport getUnprotectedValueForContentLogin from 'src/util/getUnprotectedValueForContentLogin';\nimport ClientOutdatedMessage from 'src/util/react/ClientOutdatedMessage';\nimport useClientOutdated from 'src/util/react/useClientOutdated';\nimport useCloseOnEscape from 'src/util/react/useCloseOnEscape';\n\nimport { getLoginOverlayLandscape } from '../../../util/getLoginOverlayLandscape';\nimport useUnlock from '../../../util/react/useUnlock';\nimport shouldAskForLoginUsername from '../../../util/shouldAskForLoginUsername';\nimport ConfirmLoginUse from '../components/ConfirmLoginUse';\nimport OverlayLoginList from '../components/OverlayLoginList';\nimport OverlayTotpWarning from '../components/OverlayTotpWarning';\nimport SubscriptionNag from '../components/SubscriptionNag';\nimport useParentPageUrl from '../utils/useParentPageUrl';\n\nimport useContentScriptConnection from './useContentScriptConnection';\n\nexport default function LoginOverlay() {\n  const port = useContentScriptConnection();\n\n  const { iframeState, dispatch } = useIframeState(port, loginIframeStateDescriptor);\n\n  const setIntrinsicSize = useDispatchSetter(dispatch, (size: Size) => ({\n    type: 'setIntrinsicSize',\n    size,\n  }));\n\n  const { host, url } = useParentPageUrl();\n\n  const { performLogin, cancelLogin, requestUnlock, pushState, unlockDeviceType } = useUnlock({\n    achievement: Achievement.EXT_OVERLAY_UNLOCK,\n  });\n\n  const [selectedLoginId, setSelectedLoginId] = useState<LoginId>();\n  const [confirmUseLogin, setConfirmUseLogin] = useState<ContentLogin>();\n  const [addUsernameLoginId, setAddUsernameLoginId] = useState<LoginId>();\n  const [subscriptionNagLogin, setSubscriptionNagLogin] = useState<\n    ContentLogin & { organization: LoginOrganizationMetadata }\n  >();\n  const [totpTimeOffsetWarningLoginId, setTotpTimeOffsetWarningLoginId] = useState<LoginId>();\n\n  const subscriptionSettingsLink = useMemo(() => {\n    const orgInfo = subscriptionNagLogin?.organization;\n    if (!orgInfo) {\n      return undefined;\n    }\n    const error = orgInfo.subscriptionError;\n    if (!error) {\n      return undefined;\n    }\n\n    if (!orgInfo.isAdmin) {\n      return undefined;\n    }\n\n    return `${getFrontendServerUrl()}/organizations/${orgInfo.id}/manage/plan`;\n  }, [subscriptionNagLogin]);\n\n  const handleLoginClick = useCallback(\n    (login: ContentLogin) => {\n      setSelectedLoginId(login.id);\n      addAchievement(Achievement.EXT_OVERLAY_LOGIN);\n      if (login.pendingInboxConfirmation) {\n        setConfirmUseLogin(login);\n      } else if (shouldAskForLoginUsername(login)) {\n        requestUnlock();\n        // short timeout so we don't show the UpdateLoginForm for a moment before switching to the\n        // unlock progress view.\n        window.setTimeout(() => setAddUsernameLoginId(login.id), 10);\n      } else if (login.organization?.subscriptionError) {\n        setSubscriptionNagLogin(\n          login as ContentLogin & { organization: LoginOrganizationMetadata },\n        );\n        addAchievement(Achievement.EXT_OVERLAY_SAW_NAG_SCREEN);\n      } else if (login.showTotpTimeOffsetWarning) {\n        setTotpTimeOffsetWarningLoginId(login.id);\n      } else {\n        performLogin(login.id);\n      }\n    },\n    [performLogin, requestUnlock],\n  );\n\n  const handleResize = useCallback(\n    (width: number, height: number) => {\n      setIntrinsicSize({ width, height });\n    },\n    [setIntrinsicSize],\n  );\n\n  const [newLoginSuccess, setNewLoginSuccess] = useState(false);\n\n  const handleClose = useMemo(() => {\n    if (pushState === 'confirmed') {\n      return undefined;\n    }\n    return () => dispatch({ type: 'hide' });\n  }, [dispatch, pushState]);\n  useCloseOnEscape(handleClose);\n\n  const { landscape, extrinsicHeight } = useOverlayLayout();\n\n  const [addUsernameLogin, setAddUsernameLogin] = useState<\n    ContentLogin & {\n      unprotectedPassword: string;\n    }\n  >();\n  useEffect(() => {\n    if (addUsernameLogin?.id === addUsernameLoginId) {\n      return;\n    }\n    async function updateAddUsernameLogin() {\n      const login = iframeState.logins?.find(({ id }) => id === addUsernameLoginId);\n      if (!login) {\n        setAddUsernameLogin(undefined);\n        return;\n      }\n      const unprotectedPassword = await getUnprotectedValueForContentLogin(login, login?.password);\n      if (!unprotectedPassword) {\n        setAddUsernameLogin(undefined);\n        return;\n      }\n      setAddUsernameLogin({ ...login, unprotectedPassword });\n    }\n    updateAddUsernameLogin().catch(trackError);\n  }, [addUsernameLogin?.id, addUsernameLoginId, iframeState.logins]);\n\n  const clientOutdated = useClientOutdated();\n\n  const performDefaultActionRef = useRef(() => {});\n  useEffect(() => {\n    if (!port) {\n      return undefined;\n    }\n    function handleMessage(msg: ContentToIframeMessage) {\n      if (msg.type === 'PerformEnterDefaultAction') {\n        performDefaultActionRef.current();\n      }\n    }\n    port.onMessage.addListener(handleMessage);\n    return () => port.onMessage.removeListener(handleMessage);\n  }, [port]);\n\n  return (\n    <LoginWindow\n      onClose={addUsernameLoginId ? undefined : handleClose}\n      onResize={handleResize}\n      onRetry={() => {\n        if (addUsernameLoginId) {\n          requestUnlock();\n        } else if (selectedLoginId) {\n          performLogin(selectedLoginId);\n        }\n      }}\n      onCancel={cancelLogin}\n      state={newLoginSuccess ? 'confirmed' : pushState}\n      landscape={landscape}\n      cornerBackground={!!addUsernameLoginId || !!subscriptionNagLogin || !!confirmUseLogin}\n      onBack={\n        pushState\n          ? undefined\n          : addUsernameLoginId\n          ? () => setAddUsernameLoginId(undefined)\n          : confirmUseLogin\n          ? () => setConfirmUseLogin(undefined)\n          : subscriptionNagLogin\n          ? () => setSubscriptionNagLogin(undefined)\n          : undefined\n      }\n      unlockDeviceType={unlockDeviceType}\n    >\n      {clientOutdated ? (\n        <ClientOutdatedMessage />\n      ) : confirmUseLogin ? (\n        <ConfirmLoginUse\n          confirm={async () => performLogin(confirmUseLogin.id, { confirmLogin: true })}\n          label={getLoginDisplayLabel(confirmUseLogin) ?? t`Unnamed login`}\n          loginLink={confirmUseLogin.loginUrl}\n        />\n      ) : addUsernameLogin ? (\n        <UpdateLoginForm\n          onSave={(username, password) => {\n            dispatch({\n              type: 'updateLoginAndFillForm',\n              targetLoginId: addUsernameLogin.id,\n              targetVaultId: addUsernameLogin.vaultMetadata?.id,\n              username,\n              password,\n            });\n            setNewLoginSuccess(true);\n            setAddUsernameLoginId(undefined);\n            addAchievement(Achievement.EXT_OVERLAY_UPDATE_GENERATED_PASSWORD);\n          }}\n          host={host}\n          landscape={landscape}\n          creationTime={addUsernameLogin.creationTime}\n          password={addUsernameLogin.unprotectedPassword}\n          archiveAddUsernameLogin={() => {\n            sendMessage({ type: 'ArchiveAddUsernameLogin', loginId: addUsernameLogin.id }).catch(\n              trackError,\n            );\n            setAddUsernameLoginId(undefined);\n          }}\n        />\n      ) : subscriptionNagLogin ? (\n        <SubscriptionNag\n          subscriptionSettingsLink={subscriptionSettingsLink}\n          organizationName={subscriptionNagLogin.organization.name}\n          subscriptionError={subscriptionNagLogin.organization.subscriptionError}\n          landscape={landscape}\n        />\n      ) : totpTimeOffsetWarningLoginId ? (\n        <OverlayTotpWarning\n          close={() => setTotpTimeOffsetWarningLoginId(undefined)}\n          performLogin={() => performLogin(totpTimeOffsetWarningLoginId)}\n          warningCleared={\n            !iframeState.logins?.find((l) => l.id === totpTimeOffsetWarningLoginId)\n              ?.showTotpTimeOffsetWarning\n          }\n          recheck={async () => {\n            await sendMessage({ type: 'RequestSync' });\n          }}\n        />\n      ) : (\n        <OverlayLoginList\n          logins={iframeState.logins ?? []}\n          landscape={landscape}\n          handleLoginClick={handleLoginClick}\n          url={url}\n          extrinsicHeight={extrinsicHeight}\n          performDefaultActionRef={performDefaultActionRef}\n          preferredLoginIds={iframeState.preferredLoginIds}\n        />\n      )}\n    </LoginWindow>\n  );\n}\n\nfunction useOverlayLayout() {\n  const extrinsicSize = useExtrinsicIframeSize();\n  const { width: extrinsicWidth, height: extrinsicHeight } = extrinsicSize;\n\n  const landscape = useMemo(() => getLoginOverlayLandscape(extrinsicSize), [extrinsicSize]);\n\n  return { landscape, extrinsicWidth, extrinsicHeight };\n}\n","import React, { useContext, PropsWithChildren, useRef, useCallback, useEffect } from 'react';\n\nimport { SelectElementState } from 'src/iframeState/descriptors/overrideCreate';\nimport { SelectorResults } from 'src/types';\n\nconst SelectorContext = React.createContext<{\n  results: SelectorResults;\n  selectElement: (tagNames?: string[]) => Promise<string>;\n}>({ results: {}, selectElement: async () => '' });\n\nexport function SelectorContextProvider({\n  children,\n  selectorResults,\n  selectElementState,\n  setSelectElementState,\n}: PropsWithChildren<{\n  selectorResults: SelectorResults;\n  selectElementState: SelectElementState | undefined;\n  setSelectElementState: (s: SelectElementState | undefined) => void;\n}>) {\n  const selectElementPromiseRef = useRef<{\n    promise: Promise<string>;\n    resolve: (value: string) => void;\n  }>();\n\n  const selectElement = useCallback(\n    (tagNames?: string[]) => {\n      if (!selectElementPromiseRef.current) {\n        let resolve: (value: string) => void;\n        const promise = new Promise<string>((r) => {\n          resolve = r;\n        });\n        selectElementPromiseRef.current = { promise, resolve: resolve! };\n      }\n      setSelectElementState({ state: 'inProgress', tagNames });\n      return selectElementPromiseRef.current.promise;\n    },\n    [setSelectElementState],\n  );\n\n  useEffect(() => {\n    if (selectElementState?.state === 'done' && selectElementPromiseRef.current) {\n      selectElementPromiseRef.current.resolve(selectElementState.selector);\n      selectElementPromiseRef.current = undefined;\n    }\n  });\n\n  return (\n    <SelectorContext.Provider value={{ results: selectorResults, selectElement }}>\n      {children}\n    </SelectorContext.Provider>\n  );\n}\n\nexport function useSelectorContext() {\n  return useContext(SelectorContext);\n}\n","import { trackError } from 'backend-client-web';\n\nimport { useSelectorContext } from './SelectorContext';\n\nexport default function SelectorInput({\n  selector,\n  setSelector,\n  disabled,\n  tagNames,\n}: {\n  selector: string;\n  setSelector: (value: string) => void;\n  disabled?: boolean;\n  tagNames?: string[];\n}) {\n  const { results, selectElement } = useSelectorContext();\n  const selectorResult = typeof selector === 'string' ? results[selector] : undefined;\n  return (\n    <span>\n      <input\n        value={selector}\n        onChange={(e) => setSelector(e.currentTarget.value)}\n        disabled={disabled}\n      />{' '}\n      {selector === '' ? (\n        <span title=\"Enter selector\">⏺️</span>\n      ) : selectorResult === undefined ? (\n        <span title=\"Checking if present in page\">🔄</span>\n      ) : selectorResult === 'found' ? (\n        <span title=\"Present in page\">✅</span>\n      ) : selectorResult === 'notFound' ? (\n        <span title=\"Not present in page\">❌</span>\n      ) : selectorResult === 'malformed' ? (\n        <span title=\"Selector malformed\">⚠️</span>\n      ) : undefined}{' '}\n      <button\n        type=\"button\"\n        onClick={() => {\n          (async () => {\n            setSelector(await selectElement(tagNames));\n          })().catch(trackError);\n        }}\n      >\n        🎯\n      </button>\n    </span>\n  );\n}\n","import { OverridePredicate } from 'persistable-types';\n\nimport SelectorInput from './SelectorInput';\n\nexport default function PredicateEdit({\n  predicate,\n  setPredicate,\n}: {\n  predicate: OverridePredicate | undefined;\n  setPredicate: (p: OverridePredicate | undefined) => void;\n}) {\n  if (!predicate) {\n    return (\n      <div>\n        <button type=\"button\" onClick={() => setPredicate({ type: 'elementExists', selector: '' })}>\n          Add predicate\n        </button>\n      </div>\n    );\n  }\n  return (\n    <fieldset>\n      <legend>Predicate: {predicate.type}</legend>\n      <div>\n        <button type=\"button\" onClick={() => setPredicate(undefined)}>\n          Delete predicate\n        </button>{' '}\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={predicate.negated}\n            onChange={(e) => setPredicate({ ...predicate, negated: e.currentTarget.checked })}\n          />{' '}\n          Negated\n        </label>\n      </div>\n      {predicate.type === 'elementExists' ? (\n        <div>\n          <div>\n            <label>\n              Selector:{' '}\n              <SelectorInput\n                selector={predicate.selector}\n                setSelector={(selector) => setPredicate({ ...predicate, selector })}\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={predicate.requireVisible}\n                onChange={(e) =>\n                  setPredicate({ ...predicate, requireVisible: e.currentTarget.checked })\n                }\n              />{' '}\n              Require element visible\n            </label>\n          </div>\n        </div>\n      ) : (\n        <div>Not supported</div>\n      )}\n    </fieldset>\n  );\n}\n","import { OverrideRule } from 'persistable-types';\n\nexport const ruleTypes = ['loginForm', 'registrationForm', 'noForm', 'formKindHint'] as const;\n\nexport const emptyLoginSelectors = {\n  formElement: null,\n  usernameElement: null,\n  passwordElement: null,\n  totpElements: null,\n  stayLoggedInElement: null,\n  submitElement: null,\n};\n\nexport const emptyRegistrationSelectors = {\n  formElement: null,\n  usernameElement: null,\n  passwordElement: null,\n  repeatPasswordElement: null,\n  submitElement: null,\n};\n\nexport const emptyRules: {\n  [K in OverrideRule['type']]: Extract<OverrideRule, { type: K }>;\n} = {\n  loginForm: {\n    type: 'loginForm',\n    selectors: emptyLoginSelectors,\n  },\n  registrationForm: {\n    type: 'registrationForm',\n    selectors: emptyRegistrationSelectors,\n  },\n  formKindHint: { type: 'formKindHint', kind: 'login' },\n  noForm: { type: 'noForm' },\n};\n","import { useState } from 'react';\n\nimport { OverrideRule } from 'persistable-types';\n\nimport { ruleTypes, emptyRules } from './defaultValues';\n\nexport default function RuleCreate({ addRule }: { addRule: (rule: OverrideRule) => void }) {\n  const [ruleType, setRuleType] = useState<OverrideRule['type'] | 'initial'>('initial');\n  return (\n    <div>\n      <label>\n        Rule Type:{' '}\n        <select\n          value={ruleType}\n          onChange={(e) => setRuleType(e.currentTarget.value as OverrideRule['type'])}\n        >\n          <option value=\"initial\">Select type</option>\n          {ruleTypes.map((t) => (\n            <option value={t} key={t}>\n              {t}\n            </option>\n          ))}\n        </select>\n      </label>{' '}\n      <button\n        type=\"button\"\n        onClick={() => {\n          if (ruleType !== 'initial') {\n            addRule(emptyRules[ruleType]);\n            setRuleType('initial');\n          }\n        }}\n        disabled={ruleType === 'initial'}\n      >\n        Add new rule here\n      </button>\n    </div>\n  );\n}\n","import { assertExhaustive } from 'backend-client-web';\nimport {\n  FormKindHintOverrideRule,\n  LoginOverrideRule,\n  OverrideRule,\n  RegistrationOverrideRule,\n} from 'persistable-types';\n\nimport { emptyLoginSelectors, emptyRegistrationSelectors } from './defaultValues';\nimport PredicateEdit from './PredicateEdit';\nimport SelectorInput from './SelectorInput';\n\nexport default function RuleEdit({\n  rule,\n  applied,\n  setRule,\n  deleteRule,\n}: {\n  rule: OverrideRule;\n  applied: boolean;\n  setRule: (r: OverrideRule) => void;\n  deleteRule: () => void;\n}) {\n  return (\n    <fieldset>\n      <legend>\n        {applied ? (\n          <strong title=\"Applied on this page\">✅ {rule.type}</strong>\n        ) : (\n          <span title=\"Not applied on this page\">❌ {rule.type}</span>\n        )}\n      </legend>\n      <PredicateEdit\n        predicate={rule.predicate}\n        setPredicate={(predicate) => setRule({ ...rule, predicate })}\n      />\n      {rule.type === 'loginForm' ? (\n        <LoginRuleEdit rule={rule} setRule={setRule} />\n      ) : rule.type === 'registrationForm' ? (\n        <RegistrationRuleEdit rule={rule} setRule={setRule} />\n      ) : rule.type === 'formKindHint' ? (\n        <FormKindHintRuleEdit rule={rule} setRule={setRule} />\n      ) : rule.type === 'noForm' ? (\n        // Rule of type 'noForm'  has no editable properties\n        <></>\n      ) : (\n        assertExhaustive(rule)\n      )}\n      <button type=\"button\" onClick={deleteRule}>\n        Delete rule\n      </button>\n    </fieldset>\n  );\n}\n\nfunction LoginRuleEdit({\n  rule,\n  setRule,\n}: {\n  rule: LoginOverrideRule;\n  setRule: (r: LoginOverrideRule) => void;\n}) {\n  return (\n    <>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={rule.selectors !== null}\n            onChange={(e) =>\n              setRule({\n                ...rule,\n                selectors: e.target.checked ? rule.selectors ?? emptyLoginSelectors : null,\n              })\n            }\n          />{' '}\n          Has login form\n        </label>\n      </div>\n      {rule.selectors !== null && (\n        <div>\n          <SelectorEdit\n            name=\"Username\"\n            selector={rule.selectors.usernameElement}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, usernameElement: s } })\n            }\n            tagNames={['input']}\n          />\n          <SelectorEdit\n            name=\"Password\"\n            selector={rule.selectors.passwordElement}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, passwordElement: s } })\n            }\n            tagNames={['input']}\n          />\n          <SelectorEdit\n            name=\"Totp\"\n            selector={Array.isArray(rule.selectors.totpElements) ? '' : rule.selectors.totpElements}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, totpElements: s } })\n            }\n            tagNames={['input']}\n          />\n          <SelectorEdit\n            name=\"Form\"\n            selector={rule.selectors.formElement}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, formElement: s } })\n            }\n            tagNames={['form']}\n          />\n          <SelectorEdit\n            name=\"Submit\"\n            selector={rule.selectors.submitElement}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, submitElement: s } })\n            }\n            tagNames={['input', 'button']}\n          />\n          <SelectorEdit\n            name=\"Stay logged in\"\n            selector={rule.selectors.stayLoggedInElement}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, stayLoggedInElement: s } })\n            }\n            tagNames={['input']}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction RegistrationRuleEdit({\n  rule,\n  setRule,\n}: {\n  rule: RegistrationOverrideRule;\n  setRule: (r: RegistrationOverrideRule) => void;\n}) {\n  return (\n    <>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={rule.selectors !== null}\n            onChange={(e) =>\n              setRule({\n                ...rule,\n                selectors: e.target.checked ? rule.selectors ?? emptyRegistrationSelectors : null,\n              })\n            }\n          />{' '}\n          Has registration form\n        </label>\n      </div>\n      {rule.selectors !== null && (\n        <div>\n          <SelectorEdit\n            name=\"Username\"\n            selector={rule.selectors.usernameElement}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, usernameElement: s } })\n            }\n            tagNames={['input']}\n          />\n          <SelectorEdit\n            name=\"Password\"\n            selector={rule.selectors.passwordElement}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, passwordElement: s } })\n            }\n            tagNames={['input']}\n          />\n          <SelectorEdit\n            name=\"Repeat PW\"\n            selector={rule.selectors.repeatPasswordElement}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, repeatPasswordElement: s } })\n            }\n            tagNames={['input']}\n          />\n          <SelectorEdit\n            name=\"Form\"\n            selector={rule.selectors.formElement}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, formElement: s } })\n            }\n            tagNames={['form']}\n          />\n          <SelectorEdit\n            name=\"Submit\"\n            selector={rule.selectors.submitElement}\n            setSelector={(s) =>\n              rule.selectors &&\n              setRule({ ...rule, selectors: { ...rule.selectors, submitElement: s } })\n            }\n            tagNames={['input', 'button']}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction FormKindHintRuleEdit({\n  rule,\n  setRule,\n}: {\n  rule: FormKindHintOverrideRule;\n  setRule: (r: FormKindHintOverrideRule) => void;\n}) {\n  return (\n    <>\n      <div>\n        <label>\n          Form kind:{' '}\n          <select\n            value={rule.kind}\n            onChange={(e) => setRule({ ...rule, kind: e.currentTarget.value as any })}\n          >\n            {['login', 'registration'].map((kind) => (\n              <option key={kind} value={kind}>\n                {kind}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n    </>\n  );\n}\n\nfunction SelectorEdit({\n  name,\n  selector,\n  setSelector,\n  tagNames,\n}: {\n  name: string;\n  selector: string | null;\n  setSelector: (v: string | null) => void;\n  tagNames?: string[];\n}) {\n  return (\n    <div>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={selector !== null}\n          onChange={(e) => setSelector(e.currentTarget.checked ? '' : null)}\n          title=\"Element exists\"\n        />{' '}\n        <span style={{ display: 'inline-block', width: '7.5rem' }}>{name}:</span>\n      </label>{' '}\n      <SelectorInput\n        selector={selector ?? ''}\n        disabled={selector === null}\n        setSelector={setSelector}\n        tagNames={tagNames}\n      />\n    </div>\n  );\n}\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react';\nimport { debounce } from 'throttle-debounce';\n\nimport { UUID } from 'backend-client-web';\nimport { useElementSize } from 'client-web-sdk';\nimport { AppliedOverrideInfo } from 'form-detection';\nimport { newUuid, OverrideRule, WebpageOverride, WebpageOverrideStatus } from 'persistable-types';\n\nimport { SelectElementState } from 'src/iframeState/descriptors/overrideCreate';\nimport { SelectorResults, Size } from 'src/types';\nimport useErrorHandlingCallback from 'src/util/react/useErrorHandlingCallback';\n\nimport styles from './OverrideCreateOverlay.module.css';\nimport PredicateEdit from './PredicateEdit';\nimport RuleCreate from './RuleCreate';\nimport RuleEdit from './RuleEdit';\nimport { SelectorContextProvider } from './SelectorContext';\n\ninterface Props {\n  appliedInfo?: AppliedOverrideInfo;\n  hostname: string | undefined;\n  override: WebpageOverride | undefined;\n  selectElementState: SelectElementState | undefined;\n  selectorResults: SelectorResults;\n  overrideIsReplace: boolean;\n  setIntrinsicSize: (size: Size) => void;\n  setOverride: (newOverride: WebpageOverride | undefined) => void;\n  setSelectElementState: (s: SelectElementState | undefined) => void;\n  deleteOverride: (overrideId: UUID) => Promise<void>;\n  replaceOverride: (override: WebpageOverride) => Promise<void>;\n  setAlign: (align: 'left' | 'right') => void;\n  align: 'left' | 'right';\n}\n\nexport default function OverrideCreateOverlay({\n  appliedInfo,\n  hostname,\n  override,\n  selectElementState,\n  selectorResults,\n  overrideIsReplace,\n  setIntrinsicSize,\n  setOverride,\n  setSelectElementState,\n  deleteOverride,\n  replaceOverride,\n  setAlign,\n  align,\n}: Props) {\n  const overrideOrDefault = useMemo(\n    () =>\n      override ?? {\n        id: newUuid(),\n        status: WebpageOverrideStatus.hotfix,\n        hostnameContains: hostname ?? '',\n        rules: [],\n      },\n    [hostname, override],\n  );\n\n  const hasHostnameContains =\n    'hostnameContains' in overrideOrDefault &&\n    typeof overrideOrDefault.hostnameContains === 'string';\n\n  const addRuleAtIndex = useCallback(\n    (rule: OverrideRule, index: number) => {\n      const rules = [...overrideOrDefault.rules];\n      rules.splice(index, 0, rule);\n      setOverride({ ...overrideOrDefault, rules });\n    },\n    [overrideOrDefault, setOverride],\n  );\n\n  const [rootRef, size] = useElementSize();\n  useEffect(() => {\n    if (size.width > 0 && size.height > 0) {\n      setIntrinsicSize(size);\n    }\n  }, [setIntrinsicSize, size]);\n\n  const handleReplace = useErrorHandlingCallback(async () => {\n    if (!override) {\n      return;\n    }\n    await replaceOverride(override);\n    setOverride(undefined);\n  }, [override, replaceOverride, setOverride]);\n\n  const handleDelete = useErrorHandlingCallback(async () => {\n    if (!override) {\n      return;\n    }\n    await deleteOverride(override.id);\n    setOverride(undefined);\n  }, [override, deleteOverride, setOverride]);\n\n  return (\n    <SelectorContextProvider\n      selectorResults={selectorResults}\n      selectElementState={selectElementState}\n      setSelectElementState={setSelectElementState}\n    >\n      <main ref={rootRef} className={styles.OverrideCreateOverlay}>\n        <section>\n          <h3>\n            {overrideIsReplace ? 'Edit override' : 'Create override'}{' '}\n            <button onClick={() => setAlign(align === 'left' ? 'right' : 'left')}>\n              {align === 'left' ? 'Move overlay right' : 'Move overlay left'}\n            </button>\n          </h3>\n          <p>\n            <button type=\"button\" disabled={!override} onClick={handleReplace}>\n              {overrideIsReplace ? 'Replace existing override' : 'Upload new override'}\n            </button>{' '}\n            <button type=\"button\" disabled={!override || !overrideIsReplace} onClick={handleDelete}>\n              Delete override\n            </button>{' '}\n            <button\n              type=\"button\"\n              disabled={!override}\n              onClick={() => {\n                if (\n                  // eslint-disable-next-line no-restricted-globals\n                  confirm('The override in creation will be discarded. Continue?')\n                ) {\n                  setOverride(undefined);\n                }\n              }}\n            >\n              {overrideIsReplace ? 'Discard changes' : 'Discard new override'}\n            </button>\n          </p>\n          {override && (\n            <p>\n              {overrideIsReplace ? (\n                <>\n                  Replacing override with id <code>{override.id}</code>\n                </>\n              ) : (\n                <>Creating new override</>\n              )}\n            </p>\n          )}\n          <p>\n            {appliedInfo?.override.id === overrideOrDefault?.id ? (\n              <strong>✅ This override is active</strong>\n            ) : appliedInfo ? (\n              <span>\n                ❌ Another override is active{' '}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (\n                      !override ||\n                      // eslint-disable-next-line no-restricted-globals\n                      confirm(\"This will discard the override you're currently creating/editing.\")\n                    ) {\n                      setOverride(appliedInfo.override);\n                    }\n                  }}\n                >\n                  Edit\n                </button>\n                <br />\n                Id: <code>{appliedInfo.override.id}</code>\n                {'hostnameContains' in appliedInfo.override && (\n                  <>\n                    {' '}\n                    , hostnameContains: <code>{appliedInfo.override.hostnameContains}</code>\n                  </>\n                )}\n              </span>\n            ) : (\n              <span>⏺️ No override active</span>\n            )}\n          </p>\n        </section>\n        <section>\n          <h4>Override properties</h4>\n          <p>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={overrideOrDefault.status === WebpageOverrideStatus.hotfix}\n                onChange={(e) =>\n                  setOverride({\n                    ...overrideOrDefault,\n                    status: e.currentTarget.checked ? WebpageOverrideStatus.hotfix : undefined,\n                  })\n                }\n              />{' '}\n              Hotfix\n            </label>\n          </p>\n          <p>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={overrideOrDefault.comment !== undefined}\n                onChange={(e) =>\n                  setOverride({\n                    ...overrideOrDefault,\n                    comment: e.currentTarget.checked ? '' : undefined,\n                  })\n                }\n              />{' '}\n              Comment\n            </label>\n            <CommentEdit setOverride={setOverride} overrideOrDefault={overrideOrDefault} />\n          </p>\n        </section>\n        <section>\n          <h4>Webpage Conditions</h4>\n          <p>\n            <em>Either a hostname contains or a predicate must be present.</em>\n          </p>\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={hasHostnameContains}\n                onChange={(e) => {\n                  setOverride(\n                    e.currentTarget.checked\n                      ? {\n                          ...overrideOrDefault,\n                          hostnameContains:\n                            hasHostnameContains && 'hostnameContains' in overrideOrDefault\n                              ? overrideOrDefault.hostnameContains\n                              : hostname ?? '',\n                        }\n                      : withDeleteProperty(\n                          {\n                            ...overrideOrDefault,\n                            predicate: overrideOrDefault.predicate ?? {\n                              type: 'elementExists',\n                              selector: '',\n                            },\n                          },\n                          'hostnameContains',\n                        ),\n                  );\n                }}\n              />{' '}\n              Filter by hostname contains\n            </label>\n            :{' '}\n            <input\n              type=\"text\"\n              value={\n                hasHostnameContains && 'hostnameContains' in overrideOrDefault\n                  ? overrideOrDefault.hostnameContains\n                  : ''\n              }\n              onChange={(e) =>\n                setOverride({ ...overrideOrDefault, hostnameContains: e.currentTarget.value })\n              }\n              disabled={!hasHostnameContains}\n              placeholder=\"example.org\"\n            />\n          </div>\n          <PredicateEdit\n            predicate={overrideOrDefault.predicate}\n            setPredicate={(p) =>\n              setOverride(\n                p\n                  ? { ...overrideOrDefault, predicate: p }\n                  : withDeleteProperty(\n                      {\n                        ...overrideOrDefault,\n                        hostnameContains:\n                          'hostnameContains' in overrideOrDefault\n                            ? overrideOrDefault.hostnameContains\n                            : '',\n                      },\n                      'predicate',\n                    ),\n              )\n            }\n          />\n        </section>\n        <section>\n          <h4>Rules</h4>\n          <p>\n            <em>Rules are evaluated from top to bottom.</em>\n          </p>\n          {overrideOrDefault.rules.map((rule, i) => (\n            <Fragment key={i}>\n              <RuleCreate addRule={(r) => addRuleAtIndex(r, i)} />\n              <RuleEdit\n                rule={rule}\n                applied={\n                  appliedInfo?.override.id === overrideOrDefault.id &&\n                  appliedInfo.ruleIndexes.includes(i)\n                }\n                setRule={(r) => {\n                  const rules = [...overrideOrDefault.rules];\n                  rules.splice(i, 1, r);\n                  setOverride({\n                    ...overrideOrDefault,\n                    rules,\n                  });\n                }}\n                deleteRule={() => {\n                  const rules = [...overrideOrDefault.rules];\n                  rules.splice(i, 1);\n                  setOverride({\n                    ...overrideOrDefault,\n                    rules,\n                  });\n                }}\n              />\n            </Fragment>\n          ))}\n          <RuleCreate addRule={(r) => addRuleAtIndex(r, overrideOrDefault.rules.length)} />\n        </section>\n      </main>\n    </SelectorContextProvider>\n  );\n}\n\nfunction CommentEdit({\n  setOverride,\n  overrideOrDefault,\n}: {\n  overrideOrDefault: WebpageOverride;\n  setOverride: (newOverride: WebpageOverride | undefined) => void;\n}) {\n  const [commentInEdit, setCommentInEdit] = useState<string>();\n\n  const updateCommentDebounced = useMemo(\n    () =>\n      debounce(100, (comment: string) => {\n        setOverride({ ...overrideOrDefault, comment });\n      }),\n    [overrideOrDefault, setOverride],\n  );\n\n  if (overrideOrDefault.comment === undefined) {\n    return null;\n  }\n\n  return (\n    <textarea\n      value={commentInEdit ?? overrideOrDefault.comment}\n      onChange={(e) => {\n        const comment = e.currentTarget.value;\n        setCommentInEdit(comment);\n        updateCommentDebounced(comment);\n      }}\n      onFocus={() => {\n        setCommentInEdit(overrideOrDefault.comment);\n      }}\n      onBlur={() => {\n        if (commentInEdit !== undefined) {\n          updateCommentDebounced(commentInEdit);\n        }\n        setCommentInEdit(undefined);\n      }}\n    />\n  );\n}\n\nfunction withDeleteProperty<O extends object, K extends string | number | symbol>(\n  obj: O,\n  k: K,\n): Omit<O, K> {\n  const newObj = { ...obj };\n  delete newObj[(k as unknown) as keyof O];\n  return newObj;\n}\n","import { AppliedOverrideInfo } from 'form-detection';\nimport { WebpageOverride } from 'persistable-types';\n\nimport { SelectorResults, Size } from 'src/types';\n\nimport { IframeStateDescriptor } from './types';\n\nexport type SelectElementState =\n  | {\n      state: 'inProgress';\n      tagNames?: string[];\n    }\n  | {\n      state: 'done';\n      selector: string;\n    };\n\nexport type OverrideCreateIframeStateDescriptorType = {\n  mode: 'overrideCreate';\n  state: {\n    override?: WebpageOverride;\n    intrinsicSize: Size;\n    selectorResults: SelectorResults;\n    hostname?: string;\n    appliedInfo?: AppliedOverrideInfo;\n    selectElementState?: SelectElementState;\n    overrideIsReplace: boolean;\n    align: 'left' | 'right';\n  };\n  action:\n    | {\n        type: 'setOverride';\n        override?: WebpageOverride;\n      }\n    | {\n        type: 'setIntrinsicSize';\n        size: Size;\n      }\n    | {\n        type: 'setSelectElementState';\n        selectElementState?: SelectElementState;\n      }\n    | {\n        type: 'setAlign';\n        align: 'left' | 'right';\n      };\n};\n\nexport const overrideCreateIframeStateDescriptor: IframeStateDescriptor<OverrideCreateIframeStateDescriptorType> = {\n  mode: 'overrideCreate',\n  initialState: {\n    override: undefined,\n    intrinsicSize: { width: 0, height: 0 },\n    selectorResults: {},\n    overrideIsReplace: false,\n    align: 'left',\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case 'setOverride':\n        return { ...state, override: action.override };\n      case 'setIntrinsicSize':\n        return { ...state, intrinsicSize: action.size };\n      case 'setSelectElementState':\n        return { ...state, selectElementState: action.selectElementState };\n      case 'setAlign':\n        return { ...state, align: action.align };\n    }\n  },\n};\n","import React, { useCallback } from 'react';\n\nimport { UUID, WebpageOverride } from 'persistable-types';\n\nimport OverrideCreateOverlay from 'src/entrypoints/iframe/components/overrideCreateOverlay/OverrideCreateOverlay';\nimport {\n  overrideCreateIframeStateDescriptor,\n  SelectElementState,\n} from 'src/iframeState/descriptors/overrideCreate';\nimport useDispatchSetter from 'src/iframeState/hooks/useDispatchSetter';\nimport useIframeState from 'src/iframeState/hooks/useIframeState';\nimport { sendMessage } from 'src/message';\nimport { Size } from 'src/types';\n\nimport useContentScriptConnection from './useContentScriptConnection';\n\nexport default function OverrideCreateOverlayContainer() {\n  const port = useContentScriptConnection();\n\n  const { iframeState, dispatch } = useIframeState(port, overrideCreateIframeStateDescriptor);\n\n  const setOverride = useDispatchSetter(dispatch, (override: WebpageOverride | undefined) => ({\n    type: 'setOverride',\n    override,\n  }));\n\n  const setIntrinsicSize = useDispatchSetter(dispatch, (size: Size) => ({\n    type: 'setIntrinsicSize',\n    size,\n  }));\n\n  const setSelectElementState = useDispatchSetter(\n    dispatch,\n    (selectElementState: SelectElementState | undefined) => ({\n      type: 'setSelectElementState',\n      selectElementState,\n    }),\n  );\n\n  const replaceOverride = useCallback(async (override: WebpageOverride) => {\n    await sendMessage({ type: 'ReplaceOverrides', overrides: [override] });\n  }, []);\n\n  const deleteOverride = useCallback(async (overrideId: UUID) => {\n    await sendMessage({ type: 'DeleteOverrides', overrideIds: [overrideId] });\n  }, []);\n\n  const setAlign = useDispatchSetter(dispatch, (align: 'left' | 'right') => ({\n    type: 'setAlign',\n    align,\n  }));\n\n  return (\n    <OverrideCreateOverlay\n      appliedInfo={iframeState.appliedInfo}\n      hostname={iframeState.hostname}\n      override={iframeState.override}\n      selectElementState={iframeState.selectElementState}\n      selectorResults={iframeState.selectorResults}\n      overrideIsReplace={iframeState.overrideIsReplace}\n      setIntrinsicSize={setIntrinsicSize}\n      setOverride={setOverride}\n      setSelectElementState={setSelectElementState}\n      replaceOverride={replaceOverride}\n      deleteOverride={deleteOverride}\n      setAlign={setAlign}\n      align={iframeState.align}\n    />\n  );\n}\n","export default \"__VITE_ASSET__aaabd9ba__\"","export default \"__VITE_ASSET__58b0f4fa__\"","export default \"__VITE_ASSET__6586b394__\"","export default \"__VITE_ASSET__90571671__\"","import classNames from 'classnames';\nimport React, { useEffect, useMemo, PropsWithChildren } from 'react';\n\nimport { Spinner, useElementSize } from 'client-web-sdk';\n\nimport { ReactComponent as Close } from 'src/images/close.svg';\nimport { ReactComponent as EyeOffIcon } from 'src/images/eye-off.svg';\nimport { ReactComponent as EyeIcon } from 'src/images/eye.svg';\nimport { ReactComponent as HeyloginIcon } from 'src/images/heylogin_icon.svg';\nimport { ReactComponent as PillImage } from 'src/images/password_generator_pill_image.svg';\nimport { Size } from 'src/types';\n\nimport styles from './PasswordFieldOverlay.module.css';\n\ntype Props = PropsWithChildren<{\n  eyeIcon?: 'on' | 'off';\n  passwordFieldHeight: number;\n  passwordFieldWidth: number;\n  pillText?: string;\n  spinner?: boolean;\n  successBackground?: boolean;\n  onButtonClick: () => void;\n  onClose?: () => void;\n  onResize?: (size: Size) => void;\n}>;\n\nexport default function PasswordFieldOverlay({\n  children,\n  eyeIcon,\n  passwordFieldHeight,\n  passwordFieldWidth,\n  pillText,\n  spinner,\n  successBackground,\n  onButtonClick,\n  onClose,\n  onResize,\n}: Props) {\n  const [sizeRoot, size] = useElementSize<HTMLDivElement>();\n  useEffect(() => {\n    if (onResize) {\n      onResize(size);\n    }\n  }, [onResize, size]);\n\n  const infoFontSizeRem = useMemo(() => {\n    const baseSize = Math.min(passwordFieldWidth / 300, passwordFieldHeight / 50);\n    return Math.min(Math.max(baseSize, 0.7), 1.25);\n  }, [passwordFieldHeight, passwordFieldWidth]);\n  return (\n    <div\n      className={styles.PasswordFieldOverlay}\n      ref={sizeRoot}\n      style={{\n        minWidth: `${passwordFieldWidth}px`,\n      }}\n    >\n      <div\n        className={classNames(styles.Info, {\n          [styles.successBackground]: successBackground,\n        })}\n        style={{\n          minHeight: `${passwordFieldHeight}px`,\n          fontSize: `${infoFontSizeRem}rem`,\n        }}\n      >\n        <button type=\"button\" className={styles.SecurePasswordPill} onClick={onButtonClick}>\n          {spinner ? <Spinner size=\"1.5em\" /> : <HeyloginIcon className={styles.HeyloginIcon} />}\n          <span className={styles.PillText}>{pillText ?? <PillImage />}</span>\n          {eyeIcon === 'off' ? (\n            <EyeOffIcon className={styles.EyeIcon} />\n          ) : eyeIcon === 'on' ? (\n            <EyeIcon className={styles.EyeIcon} />\n          ) : null}\n        </button>\n\n        {onClose && (\n          <button type=\"button\" onClick={onClose} className={styles.Close}>\n            <Close aria-label=\"Close\" />\n          </button>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { useEffect, useState } from 'react';\n\nimport { trackError, sleep } from 'backend-client-web';\n\nexport default function usePillText({\n  passwordInsertedTimestampMs,\n  generatorExpanded,\n  passwordFieldWidth,\n  strengthIndication,\n  strengthIndicationFallback,\n}: {\n  passwordInsertedTimestampMs?: number;\n  generatorExpanded: boolean;\n  passwordFieldWidth: number;\n  strengthIndication: string | null;\n  strengthIndicationFallback: string;\n}): {\n  eyeIcon?: 'on' | 'off';\n  pillText?: string;\n  successBackground?: boolean;\n  spinner?: boolean;\n  generatorStrengthIndication?: string | null;\n} {\n  const [animationStep, setAnimationStep] = useState<'generating' | 'done'>();\n  useEffect(() => {\n    async function runAnimation(offset: number) {\n      setAnimationStep('generating');\n      await sleep(offset + 700);\n      setAnimationStep('done');\n    }\n\n    if (passwordInsertedTimestampMs && !animationStep) {\n      runAnimation(passwordInsertedTimestampMs - Date.now()).catch(trackError);\n    }\n  }, [animationStep, passwordInsertedTimestampMs]);\n\n  if (animationStep === 'generating') {\n    return {\n      pillText: t`Generate`,\n      spinner: true,\n    };\n  }\n\n  if (!passwordInsertedTimestampMs || !animationStep) {\n    return {\n      pillText: t`Generate`,\n    };\n  }\n\n  const eyeIcon = generatorExpanded ? ('off' as const) : ('on' as const);\n\n  if (passwordFieldWidth < 200) {\n    return {\n      eyeIcon,\n      generatorStrengthIndication: strengthIndication,\n      successBackground: true,\n    };\n  }\n\n  if (!strengthIndication) {\n    return {\n      eyeIcon,\n      pillText: strengthIndicationFallback,\n      successBackground: true,\n    };\n  }\n\n  return {\n    eyeIcon,\n    pillText: strengthIndication,\n    successBackground: true,\n  };\n}\n","import { t, Trans } from '@lingui/macro';\nimport React from 'react';\n\nimport { VaultId } from 'backend-client-web';\nimport { PasswordGeneratorSettings } from 'client-core';\nimport { PasswordGenerator, usePasswordGeneration } from 'client-web-sdk';\n\nimport { GetAutosnatchTargetsResponse } from 'src/message';\nimport { Size } from 'src/types';\n\nimport AutosnatchTargetSelector, {\n  shouldShowAutosnatchTargetSelector,\n} from '../AutosnatchTargetSelector';\n\nimport styles from './MainPasswordFieldOverlay.module.css';\nimport PasswordFieldOverlay from './PasswordFieldOverlay';\nimport usePillText from './usePillText';\n\ntype Props = {\n  generatorExpanded: boolean;\n  initialPassword: string;\n  passwordFieldHeight: number;\n  passwordFieldWidth: number;\n  passwordInsertedTimestampMs?: number;\n  onButtonClick: () => void;\n  onClose?: () => void;\n  onResize?: (size: Size) => void;\n  setPassword: (pw: string) => void;\n  writeToClipboard: (text: string, clearAfterTimeout?: boolean) => void;\n  savePasswordGeneratorSettings: (settings: PasswordGeneratorSettings) => void;\n  passwordGeneratorSettings: PasswordGeneratorSettings | null;\n\n  autosnatchTargetOptions: GetAutosnatchTargetsResponse;\n  autosnatchTarget: VaultId | undefined;\n  autosnatchTargetOverride: VaultId | undefined;\n  setAutosnatchTarget: (vaultId: VaultId) => void;\n  setAutosnatchTargetOverride: (vaultId: VaultId) => void;\n};\n\nexport default function MainPasswordFieldOverlay({\n  setPassword,\n  initialPassword,\n  passwordInsertedTimestampMs,\n  generatorExpanded,\n  onButtonClick,\n  passwordGeneratorSettings,\n  savePasswordGeneratorSettings,\n  autosnatchTargetOptions,\n  autosnatchTarget,\n  autosnatchTargetOverride,\n  setAutosnatchTarget,\n  setAutosnatchTargetOverride,\n  ...fieldProps\n}: Props) {\n  const { strengthIndication, ...passwordGeneration } = usePasswordGeneration({\n    initialValue: initialPassword,\n    initialSettings: passwordGeneratorSettings,\n    onChange: setPassword,\n  });\n\n  const { generatorStrengthIndication, ...pillTextProps } = usePillText({\n    passwordInsertedTimestampMs,\n    generatorExpanded,\n    passwordFieldWidth: fieldProps.passwordFieldWidth,\n    strengthIndication,\n    strengthIndicationFallback: t`Password`,\n  });\n\n  return (\n    <PasswordFieldOverlay {...fieldProps} onButtonClick={onButtonClick} {...pillTextProps}>\n      {generatorExpanded && (\n        <div className={styles.Content}>\n          <PasswordGenerator\n            {...passwordGeneration}\n            hideButtons\n            oldPassword={undefined}\n            writeToClipboard={(value) => fieldProps.writeToClipboard(value, true)}\n            className={styles.PasswordGenerator}\n            strengthIndication={generatorStrengthIndication ?? null}\n            hideNewPasswordLabel\n            saveSettings={savePasswordGeneratorSettings}\n            savedSettings={passwordGeneratorSettings}\n          />\n          {autosnatchTargetOptions && shouldShowAutosnatchTargetSelector(autosnatchTargetOptions) && (\n            <div className={styles.TargetSelectorGroup}>\n              <div className={styles.ToLabel}>\n                <Trans>Save to</Trans>\n              </div>\n              <AutosnatchTargetSelector\n                className={styles.TargetSelector}\n                autosnatchTarget={autosnatchTarget}\n                autosnatchTargetOverride={autosnatchTargetOverride}\n                setAutosnatchTargetOverride={setAutosnatchTargetOverride}\n                autosnatchTargetOptions={autosnatchTargetOptions}\n                setAutosnatchTarget={setAutosnatchTarget}\n              />\n            </div>\n          )}\n        </div>\n      )}\n    </PasswordFieldOverlay>\n  );\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nimport { Size } from 'src/types';\n\nimport PasswordFieldOverlay from './PasswordFieldOverlay';\nimport usePillText from './usePillText';\n\ninterface Props {\n  generatorExpanded: boolean;\n  passwordFieldHeight: number;\n  passwordFieldWidth: number;\n  passwordInsertedTimestampMs?: number;\n  onButtonClick: () => void;\n  onClose?: () => void;\n  onResize?: (size: Size) => void;\n}\n\nexport default function RepeatedPasswordFieldOverlay(props: Props) {\n  const pillProps = usePillText({\n    passwordInsertedTimestampMs: props.passwordInsertedTimestampMs,\n    generatorExpanded: props.generatorExpanded,\n    passwordFieldWidth: props.passwordFieldWidth,\n    strengthIndication: null,\n    strengthIndicationFallback: t`Repeated password`,\n  });\n\n  return <PasswordFieldOverlay {...props} {...pillProps} />;\n}\n","import { VaultId } from 'backend-client-web';\n\nimport { Size } from 'src/types';\n\nimport { IframeStateDescriptor } from './types';\n\nexport type PasswordGeneratorIframeStateDescriptorType = {\n  mode: 'passwordGenerator';\n  state: {\n    intrinsicSize: Size;\n    hidden: boolean;\n    autosnatchTargetOverride?: VaultId;\n    generatedPassword?: string;\n    expanded: boolean;\n    passwordInsertedTimestampMs?: number;\n    insertInitialPassword: boolean;\n  };\n  action:\n    | { type: 'setIntrinsicSize'; size: Size }\n    | { type: 'setHidden'; hidden: boolean }\n    | { type: 'setAutosnatchTargetOverride'; autosnatchTargetOverride?: VaultId }\n    | { type: 'setGeneratedPassword'; generatedPassword?: string }\n    | { type: 'setExpanded'; expanded: boolean }\n    | { type: 'writeToClipboard'; text: string; clearAfterTimeout: boolean };\n};\n\nexport const passwordGeneratorIframeStateDescriptor: IframeStateDescriptor<PasswordGeneratorIframeStateDescriptorType> = {\n  mode: 'passwordGenerator',\n  initialState: {\n    hidden: false,\n    intrinsicSize: { width: 0, height: 0 },\n    expanded: false,\n    insertInitialPassword: false,\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case 'setIntrinsicSize':\n        return { ...state, intrinsicSize: action.size };\n      case 'setHidden':\n        return { ...state, hidden: action.hidden };\n      case 'setAutosnatchTargetOverride':\n        return { ...state, autosnatchTargetOverride: action.autosnatchTargetOverride };\n      case 'setGeneratedPassword':\n        return { ...state, generatedPassword: action.generatedPassword };\n      case 'setExpanded':\n        return { ...state, expanded: action.expanded };\n      case 'writeToClipboard':\n        return state;\n    }\n  },\n};\n","import { Size } from 'src/types';\n\nimport { IframeStateDescriptor } from './types';\n\nexport type RepeatPasswordIframeStateDescriptorType = {\n  mode: 'repeatPassword';\n  state: {\n    intrinsicSize: Size;\n    expanded: boolean;\n    passwordInsertedTimestampMs?: number;\n  };\n  action:\n    | { type: 'setIntrinsicSize'; size: Size }\n    | { type: 'setExpanded'; expanded: boolean }\n    | { type: 'hide' }\n    | { type: 'insertPassword' };\n};\n\nexport const repeatPasswordIframeStateDescriptor: IframeStateDescriptor<RepeatPasswordIframeStateDescriptorType> = {\n  mode: 'repeatPassword',\n  initialState: {\n    intrinsicSize: { width: 0, height: 0 },\n    expanded: false,\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case 'setIntrinsicSize':\n        return { ...state, intrinsicSize: action.size };\n      case 'setExpanded':\n        return { ...state, expanded: action.expanded };\n      case 'hide':\n      case 'insertPassword':\n        return state;\n    }\n  },\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { debounce } from 'throttle-debounce';\n\nimport { VaultId, trackError } from 'backend-client-web';\nimport { PasswordGeneratorSettings } from 'client-core';\nimport { generateInitialPassword } from 'client-web-sdk';\n\nimport { ForwardIframeClientPort } from 'src/connections';\nimport MainPasswordFieldOverlay from 'src/entrypoints/iframe/components/passwordFieldOverlay/MainPasswordFieldOverlay';\nimport RepeatedPasswordFieldOverlay from 'src/entrypoints/iframe/components/passwordFieldOverlay/RepeatedPasswordFieldOverlay';\nimport useExtrinsicIframeSize from 'src/entrypoints/iframe/utils/getExtrinsicSizeFromLocation';\nimport { passwordGeneratorIframeStateDescriptor } from 'src/iframeState/descriptors/passwordGenerator';\nimport { repeatPasswordIframeStateDescriptor } from 'src/iframeState/descriptors/repeatPassword';\nimport useDispatchSetter from 'src/iframeState/hooks/useDispatchSetter';\nimport useIframeState from 'src/iframeState/hooks/useIframeState';\nimport { messageError, sendMessage } from 'src/message';\nimport { Size } from 'src/types';\nimport useAutosnatchSettings from 'src/util/react/useAutosnatchSettings';\nimport useAutosnatchTargetOverride from 'src/util/react/useAutosnatchTargetOverride';\n\nimport useContentScriptConnection from './useContentScriptConnection';\n\nexport default function PasswordFieldOverlayContainer({\n  showGenerator,\n}: {\n  showGenerator: boolean;\n}) {\n  const port = useContentScriptConnection();\n\n  const { width: passwordFieldWidth, height: passwordFieldHeight } = useExtrinsicIframeSize();\n\n  if (!port) {\n    return null;\n  }\n\n  return showGenerator ? (\n    <PasswordGenerator\n      port={port}\n      passwordFieldHeight={passwordFieldHeight}\n      passwordFieldWidth={passwordFieldWidth}\n    />\n  ) : (\n    <RepeatedPassword\n      port={port}\n      passwordFieldHeight={passwordFieldHeight}\n      passwordFieldWidth={passwordFieldWidth}\n    />\n  );\n}\n\nfunction PasswordGenerator({\n  port,\n  ...fieldProps\n}: {\n  port: ForwardIframeClientPort | undefined;\n  passwordFieldWidth: number;\n  passwordFieldHeight: number;\n}) {\n  const { iframeState, dispatch } = useIframeState(port, passwordGeneratorIframeStateDescriptor);\n\n  const setIntrinsicSize = useDispatchSetter(dispatch, (size: Size) => ({\n    type: 'setIntrinsicSize',\n    size,\n  }));\n\n  const setHidden = useDispatchSetter(dispatch, (hidden: boolean) => ({\n    type: 'setHidden',\n    hidden,\n  }));\n\n  const setAutosnatchTargetOverride = useDispatchSetter(\n    dispatch,\n    (autosnatchTargetOverride: VaultId | undefined) => ({\n      type: 'setAutosnatchTargetOverride',\n      autosnatchTargetOverride,\n    }),\n  );\n\n  const setExpanded = useDispatchSetter(dispatch, (expanded: boolean) => ({\n    type: 'setExpanded',\n    expanded,\n  }));\n\n  const setGeneratedPassword = useDispatchSetter(dispatch, (generatedPassword: string) => ({\n    type: 'setGeneratedPassword',\n    generatedPassword,\n  }));\n\n  const passwordInsertedTimestampMs = iframeState.passwordInsertedTimestampMs;\n  const generatorExpanded = iframeState.expanded;\n\n  const {\n    passwordGeneratorSettings,\n    savePasswordGeneratorSettings,\n  } = usePasswordGeneratorSettings();\n  const initialPassword = useMemo(\n    () =>\n      passwordGeneratorSettings === undefined\n        ? undefined\n        : generateInitialPassword(passwordGeneratorSettings),\n    [passwordGeneratorSettings],\n  );\n\n  const setPassword = useMemo(() => debounce(1000, setGeneratedPassword), [setGeneratedPassword]);\n\n  useEffect(() => {\n    if (\n      iframeState.insertInitialPassword &&\n      initialPassword &&\n      passwordInsertedTimestampMs === undefined\n    ) {\n      setGeneratedPassword(initialPassword);\n    }\n  }, [\n    iframeState.insertInitialPassword,\n    initialPassword,\n    passwordInsertedTimestampMs,\n    setGeneratedPassword,\n  ]);\n\n  const writeToClipboard = useCallback(\n    (text, clearAfterTimeout?) => {\n      dispatch({\n        type: 'writeToClipboard',\n        text,\n        clearAfterTimeout,\n      });\n    },\n    [dispatch],\n  );\n\n  const autosnatchSettings = useAutosnatchSettings();\n\n  const overrideProps = useAutosnatchTargetOverride(\n    iframeState.autosnatchTargetOverride,\n    setAutosnatchTargetOverride,\n  );\n\n  return (\n    <>\n      {initialPassword !== undefined && passwordGeneratorSettings !== undefined && (\n        <MainPasswordFieldOverlay\n          initialPassword={initialPassword}\n          setPassword={setPassword}\n          writeToClipboard={writeToClipboard}\n          generatorExpanded={generatorExpanded}\n          passwordInsertedTimestampMs={passwordInsertedTimestampMs}\n          passwordGeneratorSettings={passwordGeneratorSettings}\n          savePasswordGeneratorSettings={savePasswordGeneratorSettings}\n          onButtonClick={\n            passwordInsertedTimestampMs\n              ? () => setExpanded(!generatorExpanded)\n              : () => {\n                  setGeneratedPassword(initialPassword);\n                }\n          }\n          onResize={setIntrinsicSize}\n          onClose={() => setHidden(true)}\n          {...fieldProps}\n          {...autosnatchSettings}\n          {...overrideProps}\n        />\n      )}\n    </>\n  );\n}\n\nfunction RepeatedPassword({\n  port,\n  ...fieldProps\n}: {\n  port: ForwardIframeClientPort | undefined;\n  passwordFieldWidth: number;\n  passwordFieldHeight: number;\n}) {\n  const { iframeState, dispatch } = useIframeState(port, repeatPasswordIframeStateDescriptor);\n\n  const generatorExpanded = iframeState.expanded;\n  const passwordInsertedTimestampMs = iframeState.passwordInsertedTimestampMs;\n\n  const setIntrinsicSize = useDispatchSetter(dispatch, (size: Size) => ({\n    type: 'setIntrinsicSize',\n    size,\n  }));\n\n  const setExpanded = useDispatchSetter(dispatch, (expanded: boolean) => ({\n    type: 'setExpanded',\n    expanded,\n  }));\n\n  return (\n    <RepeatedPasswordFieldOverlay\n      {...fieldProps}\n      onResize={setIntrinsicSize}\n      onClose={() => dispatch({ type: 'hide' })}\n      onButtonClick={() =>\n        passwordInsertedTimestampMs\n          ? setExpanded(!generatorExpanded)\n          : dispatch({ type: 'insertPassword' })\n      }\n      generatorExpanded={generatorExpanded}\n      passwordInsertedTimestampMs={passwordInsertedTimestampMs}\n    />\n  );\n}\n\nfunction usePasswordGeneratorSettings() {\n  const [settings, setSettings] = useState<PasswordGeneratorSettings | null>();\n\n  const savePasswordGeneratorSettings = useCallback((s: PasswordGeneratorSettings) => {\n    sendMessage({\n      type: 'SavePasswordGeneratorSettings',\n      settings: s,\n    }).catch(trackError);\n  }, []);\n\n  useEffect(() => {\n    const updateSettings = async () => {\n      const resp = await sendMessage({ type: 'GetPasswordGeneratorSettings' });\n      if (resp !== messageError && resp) {\n        setSettings(resp.settings);\n      }\n    };\n\n    updateSettings().catch(trackError);\n  }, []);\n\n  return {\n    passwordGeneratorSettings: settings,\n    savePasswordGeneratorSettings,\n  };\n}\n","import { LoginId } from 'backend-client-web';\nimport { TotpParameters } from 'client-core';\n\nimport { Size } from 'src/types';\n\nimport { IframeStateDescriptor } from './types';\n\nexport type TotpLogin = {\n  id: LoginId;\n  displayName: string;\n  totpParameters?: TotpParameters;\n};\n\nexport type TotpInputOverlayGeometry =\n  | {\n      type: 'rightOfInput';\n    }\n  | {\n      type: 'overlayInput';\n      buttonHeight: number;\n    };\n\nexport type TotpInputIframeStateDescriptorType = {\n  mode: 'totpInput';\n  state: {\n    expanded: boolean;\n    overlayGeometry?: TotpInputOverlayGeometry;\n    logins: TotpLogin[];\n    intrinsicSize: Size;\n    selectedLoginId?: LoginId;\n  };\n  action:\n    | { type: 'setIntrinsicSize'; size: Size }\n    | { type: 'setExpanded'; expanded: boolean }\n    | { type: 'setSelectedLoginId'; selectedLoginId?: LoginId };\n};\n\nexport const totpInputIframeStateDescriptor: IframeStateDescriptor<TotpInputIframeStateDescriptorType> = {\n  mode: 'totpInput',\n  initialState: {\n    expanded: false,\n    overlayGeometry: undefined,\n    logins: [],\n    intrinsicSize: { width: 0, height: 0 },\n    selectedLoginId: undefined,\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case 'setExpanded':\n        return { ...state, expanded: action.expanded };\n      case 'setIntrinsicSize':\n        return { ...state, intrinsicSize: action.size };\n      case 'setSelectedLoginId':\n        return { ...state, selectedLoginId: action.selectedLoginId };\n    }\n  },\n};\n","export default \"__VITE_ASSET__ecbc5356__\"","import { t, Trans } from '@lingui/macro';\nimport classNames from 'classnames';\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { LoginId } from 'backend-client-web';\nimport {\n  PushState,\n  PushStateType,\n  TotpCountdown,\n  UnlockDeviceType,\n  UnlockLabel,\n  useElementSize,\n  useTotp,\n} from 'client-web-sdk';\n\nimport { TotpInputOverlayGeometry, TotpLogin } from 'src/iframeState/descriptors/totpInput';\nimport { ReactComponent as HeyloginIcon } from 'src/images/heylogin_icon.svg';\nimport { Size } from 'src/types';\n\nimport { ReactComponent as ArrowIcon } from './arrow-right.svg';\n/* eslint css-modules/no-unused-class: [2, { markAsUsed: ['overlayInput', 'rightOfInput'] }] */\nimport styles from './TotpInputOverlay.module.css';\n\nexport type TotpInputOverlayType = 'overlayInput' | 'rightOfInput';\n\ninterface MenuProps {\n  logins: TotpLogin[];\n  selectLoginAndClose: (loginId: LoginId) => void;\n  unlockDeviceType: UnlockDeviceType;\n  pushState: PushStateType | null;\n}\n\ntype Props = {\n  expanded: boolean;\n  setExpanded: (expanded: boolean) => void;\n  setIntrinsicSize: (size: Size) => void;\n  overlayGeometry: TotpInputOverlayGeometry;\n} & MenuProps;\n\nexport default function TotpInputOverlay({\n  setIntrinsicSize,\n  expanded,\n  setExpanded,\n  overlayGeometry,\n  ...menuProps\n}: Props) {\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [setSizeElement, size] = useElementSize<HTMLDivElement>();\n\n  useEffect(() => {\n    setIntrinsicSize(size);\n  }, [size, setIntrinsicSize]);\n\n  const multiplexedRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      setSizeElement(el);\n      ref.current = el;\n    },\n    [setSizeElement],\n  );\n\n  return (\n    <div\n      className={styles.Container}\n      ref={multiplexedRef}\n      onClick={(e) => {\n        // Close when clicking in the empty space between menu and button. In these cases, container\n        // itself is the click event's target.\n        if (e.target === ref.current) {\n          setExpanded(false);\n        }\n      }}\n    >\n      <button\n        onClick={() => setExpanded(!expanded)}\n        className={classNames(styles.Button, styles[overlayGeometry.type])}\n        style={\n          overlayGeometry.type === 'overlayInput'\n            ? ({\n                '--height': `${overlayGeometry.buttonHeight}px`,\n              } as React.CSSProperties)\n            : undefined\n        }\n      >\n        <HeyloginIcon className={styles.HeyloginIcon} />\n        {overlayGeometry.type === 'overlayInput' && <Trans>TOTP</Trans>}\n      </button>\n      {expanded && <Menu {...menuProps} />}\n    </div>\n  );\n}\n\nfunction Menu({ logins, selectLoginAndClose, pushState, unlockDeviceType }: MenuProps) {\n  const loginsWithTotp = useMemo(() => logins.filter((l) => l.totpParameters), [logins]);\n\n  if (pushState && pushState !== 'confirmed' && pushState !== 'connected') {\n    return (\n      <div className={styles.Menu}>\n        <div className={styles.UnlockWrapper}>\n          <PushState small={true} state={pushState} unlockDeviceType={unlockDeviceType} />\n          {\n            {\n              connecting: <UnlockLabel unlockDeviceType={unlockDeviceType} />,\n              error: t`Login cancelled`,\n              warning: t`Failed`,\n            }[pushState]\n          }\n        </div>\n      </div>\n    );\n  }\n\n  if (!loginsWithTotp.length) {\n    // We might get logins with totpSecret === '' due to a bug in LoginEdit\n    // We cannot distinguish them from proper totp secrets while locked so we display this placeholder\n    // This should never happen though as the user should only see TOTP inputs if they have TOTP enabled in their login\n    return (\n      <div className={styles.Menu}>\n        <div className={styles.EmptyListPlaceholder}>\n          <Trans>You have no logins with TOTP on this page.</Trans>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ul className={styles.Menu}>\n      {loginsWithTotp.map((login) => (\n        <MenuListEntry login={login} key={login.id} selectLoginAndClose={selectLoginAndClose} />\n      ))}\n    </ul>\n  );\n}\n\nfunction MenuListEntry({\n  login,\n  selectLoginAndClose,\n}: {\n  login: TotpLogin;\n  selectLoginAndClose: (loginId: LoginId) => void;\n}) {\n  const { totp, totpPercent } = useTotp(\n    login.totpParameters?.secret,\n    login.totpParameters?.algorithm,\n    login.totpParameters?.digits,\n    login.totpParameters?.period,\n  );\n\n  return (\n    <li className={styles.ListItem}>\n      <button\n        className={styles.ListItemButton}\n        type=\"button\"\n        onClick={() => selectLoginAndClose(login.id)}\n        disabled={!totp}\n      >\n        <div>\n          <div className={styles.Label}>{login.displayName}</div>\n          <div className={styles.TotpCode}>\n            {totpPercent !== undefined && <TotpCountdown percent={totpPercent} />}\n            {totp}\n          </div>\n        </div>\n        <ArrowIcon className={styles.ArrowIcon} />\n      </button>\n    </li>\n  );\n}\n","import { useCallback } from 'react';\n\nimport { Achievement, LoginId } from 'backend-client-web';\n\nimport { totpInputIframeStateDescriptor } from 'src/iframeState/descriptors/totpInput';\nimport useDispatchSetter from 'src/iframeState/hooks/useDispatchSetter';\nimport useIframeState from 'src/iframeState/hooks/useIframeState';\nimport { Size } from 'src/types';\nimport useCloseOnEscape from 'src/util/react/useCloseOnEscape';\nimport useUnlock from 'src/util/react/useUnlock';\n\nimport TotpInputOverlay from '../components/totpInputOverlay/TotpInputOverlay';\n\nimport useContentScriptConnection from './useContentScriptConnection';\n\nexport default function TotpInputOverlayContainer() {\n  const port = useContentScriptConnection();\n\n  const { iframeState, dispatch } = useIframeState(port, totpInputIframeStateDescriptor);\n\n  const {\n    requestUnlock,\n    cancelLogin,\n    pushState,\n    unlockDeviceType,\n    isUnlocked,\n    unlockState,\n  } = useUnlock({ achievement: Achievement.EXT_OVERLAY_UNLOCK });\n\n  const setExpandedInternal = useDispatchSetter(dispatch, (expanded: boolean) => ({\n    type: 'setExpanded',\n    expanded,\n  }));\n\n  const setIntrinsicSize = useDispatchSetter(dispatch, (size: Size) => ({\n    type: 'setIntrinsicSize',\n    size,\n  }));\n\n  const setExpanded = useCallback(\n    (expanded: boolean) => {\n      if (expanded && !isUnlocked) {\n        requestUnlock();\n      } else if (!expanded && unlockState === 'unlocking') {\n        cancelLogin();\n      }\n      setExpandedInternal(expanded);\n    },\n    [cancelLogin, isUnlocked, requestUnlock, setExpandedInternal, unlockState],\n  );\n\n  const selectLoginAndClose = useCallback(\n    (loginId: LoginId) =>\n      dispatch(\n        { type: 'setSelectedLoginId', selectedLoginId: loginId },\n        { type: 'setExpanded', expanded: false },\n      ),\n    [dispatch],\n  );\n\n  useCloseOnEscape(() => setExpanded(false));\n\n  if (!iframeState.overlayGeometry || iframeState.logins.length === 0) {\n    return null;\n  }\n\n  return (\n    <TotpInputOverlay\n      expanded={iframeState.expanded}\n      setExpanded={setExpanded}\n      logins={iframeState.logins}\n      overlayGeometry={iframeState.overlayGeometry}\n      setIntrinsicSize={setIntrinsicSize}\n      selectLoginAndClose={selectLoginAndClose}\n      unlockDeviceType={unlockDeviceType}\n      pushState={pushState}\n    />\n  );\n}\n","import { Trans } from '@lingui/macro';\nimport classNames from 'classnames';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { LoginId, trackError } from 'backend-client-web';\nimport { getLoginDisplayLabel, TotpParameters } from 'client-core';\nimport {\n  ActionButton,\n  CopyButton,\n  LoginWindow,\n  NativeSelect,\n  PushStateType,\n  TotpCountdown,\n  UIStyleContainer,\n  UnlockDeviceType,\n  useTotp,\n} from 'client-web-sdk';\n\nimport useExtrinsicIframeSize from 'src/entrypoints/iframe/utils/getExtrinsicSizeFromLocation';\nimport { ContentLogin, CopyToClipboardWithClear } from 'src/types';\nimport { getUnprotectedValueForVaultWithContentId } from 'src/util/getUnprotectedValueForContentLogin';\nimport useCopyToClipboard from 'src/util/react/useCopyToClipboard';\n\nimport styles from './TotpQrOverlay.module.css';\n\ninterface Props {\n  logins: readonly ContentLogin[];\n  totpParameters: TotpParameters;\n  pushState: PushStateType | null;\n  unlockDeviceType: UnlockDeviceType;\n  addTotpToLogin: (loginId: LoginId) => void;\n  onResize?: (width: number, height: number) => void;\n  onClose?: () => void;\n  onCancel?: () => void;\n  copyToClipboardWithClear: CopyToClipboardWithClear;\n}\n\nexport default function TotpQrOverlay({\n  logins,\n  totpParameters,\n  pushState,\n  unlockDeviceType,\n  addTotpToLogin,\n  onResize,\n  onClose,\n  onCancel,\n  copyToClipboardWithClear,\n}: Props) {\n  const [selectedLoginId, setSelectedLoginId] = useState<LoginId>(logins[0].id);\n  useEffect(() => {\n    if (!logins.some(({ id }) => id === selectedLoginId)) {\n      setSelectedLoginId(logins[0].id);\n    }\n  }, [logins, selectedLoginId]);\n  const selectedLogin = useMemo(\n    () => logins.find(({ id }) => id === selectedLoginId) ?? logins[0],\n    [logins, selectedLoginId],\n  );\n\n  const [saving, setSaving] = useState(false);\n  const [totpUpdated, setTotpUpdated] = useState(false);\n  useEffect(() => {\n    async function updateStatus() {\n      const selectedLoginTotp =\n        selectedLogin.vaultMetadata?.id && selectedLogin.totp\n          ? await getUnprotectedValueForVaultWithContentId(\n              selectedLogin.vaultMetadata?.id,\n              selectedLogin.totp,\n            )\n          : undefined;\n      if (saving && selectedLoginTotp?.unencrypted === totpParameters.secret) {\n        setTotpUpdated(true);\n      } else if (totpUpdated && selectedLoginTotp?.unencrypted !== totpParameters.secret) {\n        setTotpUpdated(false);\n        setSaving(false);\n      }\n    }\n    updateStatus().catch(trackError);\n  }, [saving, selectedLogin.totp, selectedLogin.vaultMetadata?.id, totpParameters, totpUpdated]);\n\n  const { totp, totpPercent, totpDigits } = useTotp(\n    totpParameters.secret,\n    totpParameters.algorithm,\n    totpParameters.digits,\n    totpParameters.period,\n  );\n\n  const [copied, copy] = useCopyToClipboard(copyToClipboardWithClear);\n\n  const { width: extrinsicWidth } = useExtrinsicIframeSize();\n\n  return (\n    <LoginWindow\n      state={pushState}\n      onResize={onResize}\n      onClose={onClose}\n      onCancel={\n        onCancel\n          ? () => {\n              setSaving(false);\n              onCancel();\n            }\n          : undefined\n      }\n      onRetry={() => {\n        addTotpToLogin(selectedLoginId);\n        setSaving(true);\n      }}\n      cornerBackground\n      cornerBackgroundTransparent\n      unlockDeviceType={unlockDeviceType}\n    >\n      <UIStyleContainer\n        uiStyle=\"highlight\"\n        className={styles.Content}\n        style={{\n          // @ts-ignore\n          '--extrinsic-width': `${extrinsicWidth}px`,\n        }}\n      >\n        <div className={styles.TargetLogin}>\n          <div className={styles.TargetName}>\n            <Trans>TOTP secret for</Trans>\n          </div>\n          <div className={styles.TargetName}>\n            {logins.length > 1 ? (\n              <NativeSelect\n                className={styles.Select}\n                onChange={(e) => setSelectedLoginId(e.currentTarget.value)}\n                value={selectedLoginId}\n                disabled={totpUpdated}\n              >\n                {logins.map((l) => (\n                  <option value={l.id} key={l.id}>\n                    {getLoginDisplayLabel(l) ?? <Trans>Unnamed login</Trans>}\n                  </option>\n                ))}\n              </NativeSelect>\n            ) : (\n              getLoginDisplayLabel(selectedLogin) ?? <Trans>Unnamed login</Trans>\n            )}\n          </div>\n        </div>\n        <div>\n          <ActionButton\n            buttonStyle=\"secondary\"\n            size=\"small\"\n            type=\"button\"\n            onClick={() => {\n              addTotpToLogin(selectedLoginId);\n              setSaving(true);\n            }}\n            disabled={saving}\n            className={classNames(styles.SaveButton, { [styles.saved]: totpUpdated })}\n          >\n            {totpUpdated ? (\n              <Trans>Saved</Trans>\n            ) : saving ? (\n              <Trans>Saving…</Trans>\n            ) : (\n              <Trans>Add to login</Trans>\n            )}\n          </ActionButton>\n        </div>\n        <div className={styles.TotpCodeContainer}>\n          <div className={styles.TotpValue}>\n            {totpUpdated && totp ? (\n              <>\n                <span>{totp.substring(0, totpDigits / 2)}</span>\n                <span>{totp.substring(totpDigits / 2)}</span>\n              </>\n            ) : (\n              <>\n                <span>{'?'.repeat(totpDigits / 2)}</span>\n                <span>{'?'.repeat(totpDigits / 2 + (totpDigits % 2))}</span>\n              </>\n            )}\n            <TotpCountdown percent={totpPercent ?? 0} hidden={!(totpPercent && totpUpdated)} />\n          </div>\n          <div className={styles.TotpCopy}>\n            <CopyButton\n              copied={copied}\n              onClick={() => totp && copy(totp)}\n              disabled={!totpUpdated}\n            />\n          </div>\n        </div>\n      </UIStyleContainer>\n    </LoginWindow>\n  );\n}\n","import { TotpParameters } from 'client-core';\n\nimport { ContentLogin, Size } from 'src/types';\n\nimport { IframeStateDescriptor } from './types';\n\nexport type TotpQrIframeStateDescriptorType = {\n  mode: 'totpQr';\n  state: {\n    intrinsicSize: Size;\n    hidden: boolean;\n    logins?: readonly ContentLogin[];\n    totpParameters?: TotpParameters;\n  };\n  action: { type: 'setIntrinsicSize'; size: Size } | { type: 'setHidden'; hidden: boolean };\n};\n\nexport const totpQrIframeStateDescriptor: IframeStateDescriptor<TotpQrIframeStateDescriptorType> = {\n  mode: 'totpQr',\n  initialState: {\n    hidden: false,\n    intrinsicSize: { width: 0, height: 0 },\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case 'setIntrinsicSize':\n        return { ...state, intrinsicSize: action.size };\n      case 'setHidden':\n        return { ...state, hidden: action.hidden };\n    }\n  },\n};\n","import { Achievement } from 'backend-client-web';\n\nimport TotpQrOverlay from 'src/entrypoints/iframe/components/totpQrOverlay/TotpQrOverlay';\nimport { totpQrIframeStateDescriptor } from 'src/iframeState/descriptors/totpQr';\nimport useDispatchSetter from 'src/iframeState/hooks/useDispatchSetter';\nimport useIframeState from 'src/iframeState/hooks/useIframeState';\nimport { Size } from 'src/types';\nimport { copyToClipboardWithClear } from 'src/util/dom/copyToClipboard';\nimport useUnlock from 'src/util/react/useUnlock';\n\nimport useContentScriptConnection from './useContentScriptConnection';\n\nexport default function TotpQrOverlayContainer() {\n  const port = useContentScriptConnection();\n\n  const { iframeState, dispatch } = useIframeState(port, totpQrIframeStateDescriptor);\n\n  const setIntrinsicSize = useDispatchSetter(dispatch, (size: Size) => ({\n    type: 'setIntrinsicSize',\n    size,\n  }));\n\n  const setHidden = useDispatchSetter(dispatch, (hidden: boolean) => ({\n    type: 'setHidden',\n    hidden,\n  }));\n\n  const { pushState, unlockDeviceType, addTotpParametersToLogin, cancelLogin } = useUnlock({\n    achievement: Achievement.EXT_OVERLAY_UNLOCK,\n  });\n\n  const logins = iframeState.logins;\n  const totpParameters = iframeState.totpParameters;\n\n  if (!logins?.length || !totpParameters) {\n    return null;\n  }\n\n  return (\n    <TotpQrOverlay\n      logins={logins.filter((l) => l.vaultMetadata?.id && l.permissions.editLogin)}\n      totpParameters={totpParameters}\n      addTotpToLogin={(loginId) => {\n        const login = logins.find(({ id }) => id === loginId);\n        if (!login?.vaultMetadata) {\n          return;\n        }\n        return addTotpParametersToLogin(login.id, login.vaultMetadata.id, totpParameters);\n      }}\n      onClose={() => setHidden(true)}\n      onCancel={cancelLogin}\n      onResize={(width, height) => setIntrinsicSize({ width, height })}\n      pushState={pushState === 'confirmed' ? null : pushState}\n      unlockDeviceType={unlockDeviceType}\n      copyToClipboardWithClear={copyToClipboardWithClear}\n    />\n  );\n}\n","import React from 'react';\n\nimport AutosnatchNotificationOverlayContainer from './AutosnatchNotificationOverlayContainer';\nimport AutosnatchOverlayContainer from './AutosnatchOverlayContainer';\nimport LoginOverlay from './LoginOverlay';\nimport OverrideCreateOverlayContainer from './OverrideCreateOverlayContainer';\nimport PasswordFieldOverlayContainer from './PasswordFieldOverlayContainer';\nimport TotpInputOverlayContainer from './TotpInputOverlayContainer';\nimport TotpQrOverlayContainer from './TotpQrOverlayContainer';\n\nexport default function IframeApp() {\n  const mode = new URLSearchParams(window.location.search).get('mode');\n  if (mode === 'passwordGenerator') {\n    return <PasswordFieldOverlayContainer showGenerator={true} />;\n  }\n  if (mode === 'repeatPassword') {\n    return <PasswordFieldOverlayContainer showGenerator={false} />;\n  }\n  if (mode === 'login') {\n    return <LoginOverlay />;\n  }\n  if (mode === 'autosnatch') {\n    return <AutosnatchOverlayContainer />;\n  }\n  if (mode === 'totpQr') {\n    return <TotpQrOverlayContainer />;\n  }\n  if (mode === 'overrideCreate') {\n    return <OverrideCreateOverlayContainer />;\n  }\n  if (mode === 'totpInput') {\n    return <TotpInputOverlayContainer />;\n  }\n  if (mode === 'autosnatchNotification') {\n    return <AutosnatchNotificationOverlayContainer />;\n  }\n  throw new Error('Unknown iframe mode!');\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'client-web-sdk/index.css';\n\nimport initSentry from 'src/initSentry';\nimport initUiLocale from 'src/locales/initUiLocale';\nimport { ExtDebugVisibleContextProvider } from 'src/util/react/ExtDebugVisibleContext';\n\nimport IframeApp from './containers/IframeApp';\nimport styles from './index.module.css';\n\ndocument.documentElement.classList.add(styles.iframe);\n\ninitSentry({ entryPoint: 'contentIframe' });\n\ninitUiLocale();\n\nReactDOM.render(\n  <I18nProvider i18n={i18n}>\n    <React.StrictMode>\n      <ExtDebugVisibleContextProvider>\n        <IframeApp />\n      </ExtDebugVisibleContextProvider>\n    </React.StrictMode>\n  </I18nProvider>,\n  document.getElementById('root'),\n);\n"],"names":["defaultLocale","autosnatchNotificationIframeStateDescriptor","mode","initialState","intrinsicSize","width","height","autosnatchInfo","undefined","uiState","reducer","state","action","type","size","expanded","moveSelected","moveTargetInternal","useDispatchSetter","dispatch","makeAction","makeActionRef","useRef","current","useCallback","param","useIframeState","port","descriptor","iframeState","setIframeState","useStateWithReferentialIdentityPreservation","useEffect","handleMessage","msg","isStateUpdateMessage","newState","debugConsole","log","postMessage","iframeMode","onMessage","addListener","actionQueueRef","processActionQueueDebounced","useMemo","debounce","p","length","actions","oldState","reduce","push","warn","oldPortRef","setState","useState","setStateIfNotDeepEquals","setStateAction","deepEqual","checkIframeMode","Error","useAutosnatchTargetOverride","targetOverride","setAutosnatchTargetOverride","autosnatchTargetOptions","useAutosnatchTargetOptions","targetGroups","find","g","vaults","v","vaultId","autosnatchTargetOverride","targetOptions","setTargetOptions","updateTargetOptions","resp","sendMessage","messageError","catch","trackError","messageListener","makeMessageListener","DataUpdate","runtime","browser","removeListener","AutosnatchTargetSelector","setAutosnatchTarget","autosnatchTarget","className","fixedSize","selectedAccount","o","some","selectFirstVault","profileId","newAcc","acc","shouldShowAutosnatchTargetSelector","classNames","styles","Container","NativeSelect","TargetSelector","TargetSelectorWrapper","e","target","value","map","opt","accountLabel","TargetPlaceholder","label","LabeledSuccessButton","SaveTargetButton","hidden","i18n","_","id","options","hasDisabledProfiles","React.createElement","AutosnatchNotificationOverlay","login","useFullVaultLabel","setExpanded","setMoveTargetInternal","setMoveSelected","undo","close","setIntrinsicSize","onClick","onMouseEnter","onMouseLeave","moveLogin","ref","setSizeElement","useElementSize","multiplexedRef","el","headline","Wrapper","AUTOSNATCH_OVERLAY_SHADOW_WIDTH_PX","Overlay","undone","CloseButton","CrossIcon","Header","HeyloginLogo","Logo","LoginInfo","vaultLabel","vaultInfo","getFullLoginVaultLabel","organizationInfo","getLoginVaultLabel","Line","username","NoUsernameIcon","0","InLabel","SnatchActions","MoreOptionsButton","Actions","TargetSelectorGroup","ToLabel","MoveButtonGroup","LinkButton","Action","list","url","PasswordChangedActions","useContentScriptConnection","setPort","connectionId","URLSearchParams","window","location","search","get","newPort","openConnection","AUTO_CLOSE_TIMEOUT","AutosnatchNotificationOverlayContainer","targetVaultId","cancelTimeout","resetTimeout","pauseTimeout","resumeTimeout","useAutoclose","useAutosnatchSettings","isOpen","timeoutStateRef","clearTimeout","timeoutId","startTimeout","timeoutMs","setTimeout","endsAt","addMilliseconds","Date","remainingMs","Math","max","differenceInMilliseconds","unpause","autosnatchIframeStateDescriptor","visible","pageHasLogins","SvgEyeOff","AutosnatchOverlay","onResize","setAutosnatchActive","setActive","openPasswordGenerator","autosnatchActive","active","passwordFieldHeight","menuProps","rootRef","fontSize","Button","HeyloginIconColor","HeyloginIcon","HeyloginIconGray","ArrowUpIcon","Arrow","ArrowDownIcon","AutosnatchOverlayMenu","showLoginOverlay","Menu","ToggleActive","Switch","checked","ToggleActiveLabel","MenuButton","primary","LockIcon","LoginOverlayIcon","hide","EyeOffIcon","useExtrinsicIframeSize","setSize","getExtrinsicSizeFromLocation","addEventListener","hash","substring","parseInt","AutosnatchOverlayContainer","setVisible","handleResize","autosnatchDisabled","setAutosnatchDisabled","setAutosnatchDisabledWithAchievement","disabled","achievements","Achievement","EXT_OVERLAY_DISABLE_AUTOSNATCH","overrideProps","useFormatDateDayRelative","dateString","useLingui","formatDateRelative","t","dateFnsLocale","getDateFnsLocale","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","other","atAbsoluteDate","formatRelative","values","locale","token","UpdateLoginForm","onSave","host","landscape","password","creationTime","archiveAddUsernameLogin","UIStyleContextProvider","formik","portrait","LogInto","Website","handleSubmit","Form","FormElement","ActionInput","getFieldProps","touched","errors","ActionButton","PendingInfo","onClear","relativeDate","useFormatDateRelative","ClearPending","loginIframeStateDescriptor","getLoginOverlayLandscape","extrinsicSize","aspectRatio","shouldAskForLoginUsername","title","permissions","editLogin","ConfirmLoginUse","loginLink","confirm","handleAcceptClick","useErrorHandlingCallback","Headline","LoginButton","ShowLoginLink","getDisambiguatedLogins","logins","uriWithPsl","parseUrlWithPsl","loginsWithWebsite","website","getBestMatchingWebsite","websites","firstWebsite","websitesDiffer","bestMatchingWebsite","ws","bestMatchingWebsiteSimilarity","similarity","getUrlSimilarity","OverlayLoginSearch","menuHeight","handleLoginClick","performDefaultActionRef","filteredLogins","setFilteredLogins","highlightedIndex","inputValue","getLabelProps","getMenuProps","getInputProps","getComboboxProps","getItemProps","openMenu","useCombobox","itemToString","item","getLoginDisplayLabel","items","onSelectedItemChange","selectedItem","filter","searchPredicate","inputRef","focus","open","InputWrapper","Placeholder","visuallyhidden","SearchIcon","PlaceholderIcon","PlaceholderText","onFocus","Input","MenuWrapper","index","MenuItem","highlighted","vaultMetadata","VaultType","TEAM","TeamIcon","ForwardIcon","NothingFoundMessage","MenuItemLabel","displayLabel","Label","Title","Subtitle","OverlayLoginList","extrinsicHeight","preferredLoginIds","hideInferiorMatches","setHideInferiorMatches","disambiguatedLogins","bestMatchLogins","preferredLogins","includes","loginsToProcess","findIndex","l","urlSimilarity","slice","displayedLogins","hiddenLoginsCount","loginsHidden","horizontal","loginItemRef","loginItemHeight","maxLoginItemCount","Infinity","availableHeight","loginsFittingInHeight","floor","showSearch","listLogins","setListLoginLength","searchMenuHeight","listRef","searchItemRef","useArrowFocus","querySelector","LoginList","LoginListItem","i","ShowAllButton","INBOX","LoginButtonSubtitle","onKeyDown","metaKey","ctrlKey","altKey","shiftKey","defaultPrevented","direction","key","focused","document","contains","focusable","querySelectorAll","f","HTMLElement","indexOf","newIndex","removeEventListener","OverlayTotpWarning","performLogin","warningCleared","recheck","TotpTimeOffsetWarning","SubscriptionNag","subscriptionSettingsLink","organizationName","subscriptionError","SubscriptionError","TRIAL_EXCEEDED","Info","ButtonGroup","UpgradeButton","useParentPageUrl","getHost","LoginOverlay","cancelLogin","requestUnlock","pushState","unlockDeviceType","useUnlock","achievement","EXT_OVERLAY_UNLOCK","selectedLoginId","setSelectedLoginId","confirmUseLogin","setConfirmUseLogin","addUsernameLoginId","setAddUsernameLoginId","subscriptionNagLogin","setSubscriptionNagLogin","totpTimeOffsetWarningLoginId","setTotpTimeOffsetWarningLoginId","orgInfo","organization","error","isAdmin","getFrontendServerUrl","addAchievement","EXT_OVERLAY_LOGIN","pendingInboxConfirmation","EXT_OVERLAY_SAW_NAG_SCREEN","showTotpTimeOffsetWarning","newLoginSuccess","setNewLoginSuccess","handleClose","useCloseOnEscape","useOverlayLayout","addUsernameLogin","setAddUsernameLogin","updateAddUsernameLogin","unprotectedPassword","getUnprotectedValueForContentLogin","clientOutdated","useClientOutdated","LoginWindow","confirmLogin","loginUrl","targetLoginId","EXT_OVERLAY_UPDATE_GENERATED_PASSWORD","loginId","name","extrinsicWidth","SelectorContext","React","createContext","results","selectElement","SelectorContextProvider","children","selectorResults","selectElementState","setSelectElementState","selectElementPromiseRef","tagNames","resolve","promise","Promise","r","selector","useSelectorContext","useContext","SelectorInput","setSelector","selectorResult","currentTarget","PredicateEdit","predicate","setPredicate","negated","requireVisible","ruleTypes","emptyLoginSelectors","formElement","usernameElement","passwordElement","totpElements","stayLoggedInElement","submitElement","emptyRegistrationSelectors","repeatPasswordElement","emptyRules","loginForm","selectors","registrationForm","formKindHint","kind","noForm","RuleCreate","addRule","ruleType","setRuleType","RuleEdit","rule","applied","setRule","deleteRule","assertExhaustive","LoginRuleEdit","s","Array","isArray","RegistrationRuleEdit","FormKindHintRuleEdit","SelectorEdit","display","OverrideCreateOverlay","appliedInfo","hostname","override","overrideIsReplace","setOverride","deleteOverride","replaceOverride","setAlign","align","overrideOrDefault","newUuid","status","WebpageOverrideStatus","hotfix","hostnameContains","rules","hasHostnameContains","addRuleAtIndex","splice","handleReplace","handleDelete","comment","withDeleteProperty","Fragment","ruleIndexes","CommentEdit","commentInEdit","setCommentInEdit","updateCommentDebounced","obj","k","newObj","overrideCreateIframeStateDescriptor","OverrideCreateOverlayContainer","overrides","overrideId","overrideIds","PasswordFieldOverlay","eyeIcon","passwordFieldWidth","pillText","spinner","successBackground","onButtonClick","onClose","sizeRoot","infoFontSizeRem","baseSize","min","minWidth","minHeight","SecurePasswordPill","Spinner","PillText","PillImage","EyeIcon","Close","usePillText","passwordInsertedTimestampMs","generatorExpanded","strengthIndication","strengthIndicationFallback","animationStep","setAnimationStep","runAnimation","offset","sleep","now","generatorStrengthIndication","MainPasswordFieldOverlay","setPassword","initialPassword","passwordGeneratorSettings","savePasswordGeneratorSettings","fieldProps","passwordGeneration","usePasswordGeneration","initialValue","initialSettings","onChange","pillTextProps","Content","PasswordGenerator","writeToClipboard","RepeatedPasswordFieldOverlay","props","pillProps","passwordGeneratorIframeStateDescriptor","insertInitialPassword","generatedPassword","repeatPasswordIframeStateDescriptor","PasswordFieldOverlayContainer","showGenerator","setHidden","setGeneratedPassword","usePasswordGeneratorSettings","generateInitialPassword","text","clearAfterTimeout","autosnatchSettings","RepeatedPassword","settings","setSettings","updateSettings","totpInputIframeStateDescriptor","overlayGeometry","TotpInputOverlay","buttonHeight","selectLoginAndClose","loginsWithTotp","totpParameters","UnlockWrapper","PushState","connecting","UnlockLabel","warning","EmptyListPlaceholder","MenuListEntry","totp","totpPercent","useTotp","secret","algorithm","digits","period","ListItem","ListItemButton","displayName","TotpCode","TotpCountdown","ArrowIcon","TotpInputOverlayContainer","isUnlocked","unlockState","setExpandedInternal","TotpQrOverlay","addTotpToLogin","onCancel","copyToClipboardWithClear","selectedLogin","saving","setSaving","totpUpdated","setTotpUpdated","updateStatus","selectedLoginTotp","getUnprotectedValueForVaultWithContentId","unencrypted","totpDigits","copied","copy","useCopyToClipboard","UIStyleContainer","TargetLogin","TargetName","Select","SaveButton","saved","TotpCodeContainer","TotpValue","repeat","TotpCopy","CopyButton","totpQrIframeStateDescriptor","TotpQrOverlayContainer","addTotpParametersToLogin","IframeApp","documentElement","classList","add","iframe","initSentry","entryPoint","initUiLocale","ReactDOM","render","getElementById"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}