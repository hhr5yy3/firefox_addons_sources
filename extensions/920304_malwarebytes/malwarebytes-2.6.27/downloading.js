(()=>{var e={8132:e=>{let o,t=chrome||window.chrome||browser||window.browser;navigator.userAgent.includes("Firefox/")&&(t=browser||window.browser,console.debug("CHROME_POLY: ",t)),navigator.userAgent.includes("Edge/")&&(t=browser||window.browser);try{o=indexedDB||window.indexedDB}catch(e){o=null,console.log(`Error initializing indexedDB: ${e.message}`)}e.exports={chrome:t,indexedDB:o,performance:performance||window.performance,URL:URL||window.URL}}},o={};function t(n){var r=o[n];if(void 0!==r)return r.exports;var s=o[n]={exports:{}};return e[n](s,s.exports,t),s.exports}t.p="/",chrome||browser||(window.chrome=chrome||window.chrome||window.browser),t.p=(chrome||window.chrome).runtime.getURL(""),(()=>{"use strict";Object.freeze({LicenseStateUnknown:0,LicenseStateFree:1,LicenseStateTrial:2,LicenseStateTrialExpired:3,LicenseStateLicensed:4,LicenseStateLicenseExpired:5,LicenseStateLicenseGrace:6}),Object.freeze([2,4,6]);var e=t(8132);e.chrome.i18n.getUILanguage().split("-")[0];const o=(o,t=document)=>o.forEach((({id:o,msg:n,sub:r=null})=>{const s=t.getElementById(o);s&&(s.textContent=e.chrome.i18n.getMessage(n,r))}));Object.defineProperty({},"browser",{writable:!0});Object.defineProperty({},"os",{writable:!0});Object.defineProperty({},"isMV3",{writable:!0}),window.addEventListener("DOMContentLoaded",(()=>{o([{id:"download-status",msg:"downloadingStatus"}]),document.getElementById("progress-percentage").textContent="65%",document.querySelector(".debug-page-header").classList.remove("hidden")})),window.addEventListener("load",(()=>{const t=document.querySelector(".download-debug-logs-content .img-container"),n=document.getElementById("download-status"),r=document.querySelector(".download-debug-logs-content .progress-bar-container"),s=document.getElementById("progress-percentage"),d=document.querySelector(".download-debug-logs-content .debug-error-footer");e.chrome.runtime.sendMessage({type:"MSG_DOWNLOAD_LOGS",fullLog:!0},(i=>{!i||i.error?(o([{id:"debug-error-message",msg:"debugErrorMessage"},{id:"support-txt",msg:"supportTxt"}]),n.textContent=e.chrome.i18n.getMessage("downloadErrorStatus"),t.classList.remove("downloading"),t.classList.add("error"),r.classList.remove("downloading"),r.classList.remove("pulse-animation"),r.classList.add("error"),s.textContent=e.chrome.i18n.getMessage("downloadError"),d.classList.remove("hidden")):(n.textContent=e.chrome.i18n.getMessage("downloadCompleteStatus"),t.classList.remove("downloading"),t.classList.add("complete"),r.classList.remove("downloading"),r.classList.remove("pulse-animation"),r.classList.add("complete"),s.textContent="100%",(o=>{const t=o,n=URL.createObjectURL(new Blob([t],{type:"text/plain"}));let r;console.log("MDL: Generated logfile",n);const s=new Date;r=`BG-Logs_v${e.chrome.runtime.getManifest().version}_${s.toISOString().slice(0,10)}_${s.getHours()}${s.getMinutes()}${s.getSeconds()}.txt`,console.log("MDL: Downloading logfile",{dlDownloadName:r,url:n});let d={url:n,filename:r,conflictAction:"uniquify",saveAs:!1};e.chrome.downloads.download(d).then((()=>{console.log("Successfully Downloaded logs")})).catch((e=>{console.error("Error downloading logs",e)})),e.chrome.downloads.onChanged.addListener((e=>{e.state&&"complete"===e.state.current&&URL.revokeObjectURL(n)}))})(i.data))}))}))})()})();