{"version":3,"file":"bundle.js","sources":["../../../../node_modules/svelte/internal/index.mjs","../../../assets/javascripts/utils.js","../../../assets/javascripts/services.js","../../../../node_modules/svelte/store/index.mjs","../../messages_src/stores.js","../../components/Button.svelte","../../icons/AutoPickIcon.svelte","../../messages_src/App.svelte","../../messages_src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","window.browser = window.browser || window.chrome\n\n/**\n * @param {Array.<T>} instances\n * @returns {T}\n */\nfunction getRandomInstance(instances) {\n  return instances[~~(instances.length * Math.random())]\n}\n\n/**\n * @param {string} currentInstanceUrl\n * @param {Array.<T>} instances\n * @returns {T}\n */\nfunction getNextInstance(currentInstanceUrl, instances) {\n  const currentInstanceIndex = instances.indexOf(currentInstanceUrl)\n  if (currentInstanceIndex === -1) return getRandomInstance(instances)\n  const nextInstanceIndex = (currentInstanceIndex + 1) % instances.length\n  return instances[nextInstanceIndex]\n}\n\n/**\n * @param {URL} url\n */\nfunction protocolHost(url) {\n  url.pathname = url.pathname.replace(/\\/$/, \"\")\n  if (url.username && url.password) return `${url.protocol}//${url.username}:${url.password}@${url.host}${url.pathname}`\n\n  // workaround\n  if (url.pathname == \"/TekstoLibre/\" && url.host.endsWith(\"github.io\"))\n    return `${url.protocol}//${url.host}${url.pathname.slice(0, -1)}`\n\n  const pathname = url.pathname != \"/\" ? url.pathname : \"\"\n  return `${url.protocol}//${url.host}${pathname}`\n}\n\n/**\n * @typedef FrontendInfo\n * @prop {boolean} instanceList\n * @prop {string} name\n * @prop {string} url\n */\n\n/**\n * @typedef {Object} Service\n * @prop {Object.<string, FrontendInfo>} frontends\n * @prop {Object} options\n */\n\n/**\n * @typedef {Object} Config\n * @prop {Object.<string, Service>} services\n */\n\n/**\n * @returns {Promise<Config>}\n */\nfunction getConfig() {\n  return new Promise(resolve => {\n    fetch(\"/config.json\")\n      .then(response => response.text())\n      .then(json => {\n        resolve(JSON.parse(json))\n        return\n      })\n  })\n}\n\n/**\n * @typedef {Object} Option\n * @prop {string} frontend\n */\n\n/**\n * @returns {Promise<Object.<string, Option | string[]>>}\n */\nfunction getOptions() {\n  return new Promise(resolve => browser.storage.local.get(\"options\", r => resolve(r.options)))\n}\n\nfunction getPingCache() {\n  return new Promise(resolve => browser.storage.local.get(\"pingCache\", r => resolve(r.pingCache ?? {})))\n}\n\nfunction getBlacklist(options) {\n  return new Promise(resolve => {\n    let url\n    if (options.fetchInstances == \"github\")\n      url = \"https://raw.githubusercontent.com/libredirect/instances/main/blacklist.json\"\n    else if (options.fetchInstances == \"codeberg\")\n      url = \"https://codeberg.org/LibRedirect/instances/raw/branch/main/blacklist.json\"\n    else return resolve(\"disabled\")\n    const http = new XMLHttpRequest()\n    http.open(\"GET\", url, true)\n    http.onreadystatechange = () => {\n      if (http.status === 200 && http.readyState == XMLHttpRequest.DONE) resolve(JSON.parse(http.responseText))\n    }\n    http.onerror = () => resolve()\n    http.ontimeout = () => resolve()\n    http.send(null)\n  })\n}\n\nfunction getList(options) {\n  return new Promise(resolve => {\n    let url\n    if (options.fetchInstances == \"github\")\n      url = \"https://raw.githubusercontent.com/libredirect/instances/main/data.json\"\n    else if (options.fetchInstances == \"codeberg\")\n      url = \"https://codeberg.org/LibRedirect/instances/raw/branch/main/data.json\"\n    else return resolve(\"disabled\")\n    const http = new XMLHttpRequest()\n    http.open(\"GET\", url, true)\n    http.onreadystatechange = () => {\n      if (http.status === 200 && http.readyState == XMLHttpRequest.DONE) return resolve(JSON.parse(http.responseText))\n    }\n    http.onerror = () => resolve()\n    http.ontimeout = () => resolve()\n    http.send(null)\n  })\n}\n\n/**\n * @param {string} href\n */\nfunction pingOnce(href) {\n  return new Promise(async resolve => {\n    let started\n    let http = new XMLHttpRequest()\n    http.timeout = 5000\n    http.ontimeout = () => resolve(5000)\n    http.onerror = () => resolve()\n    http.onreadystatechange = () => {\n      if (http.readyState == 2) {\n        if (http.status == 200) {\n          let ended = new Date().getTime()\n          http.abort()\n          resolve(ended - started)\n        } else {\n          resolve(5000 + http.status)\n        }\n      }\n    }\n    http.open(\"GET\", `${href}?_=${new Date().getTime()}`, true)\n    started = new Date().getTime()\n    http.send(null)\n  })\n}\n\n/**\n * @param {string} href\n */\nfunction ping(href) {\n  return new Promise(async resolve => {\n    let average = 0\n    let time\n    for (let i = 0; i < 3; i++) {\n      time = await pingOnce(href)\n      if (i == 0) continue\n      if (time >= 5000) {\n        resolve(time)\n        return\n      }\n      average += time\n    }\n    average = parseInt(average / 3)\n    resolve(average)\n  })\n}\n\nfunction addressToLatLng(address) {\n  const http = new XMLHttpRequest()\n  http.open(\n    \"GET\",\n    `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&limit=1`,\n    false\n  )\n  http.send()\n  if (http.status == 200) {\n    const json = JSON.parse(http.responseText)[0]\n    if (json) {\n      return {\n        coordinate: `${json.lat},${json.lon}`,\n        boundingbox: `${json.boundingbox[2]},${json.boundingbox[1]},${json.boundingbox[3]},${json.boundingbox[0]}`,\n      }\n    }\n    return {}\n  }\n}\n\nfunction getQuery(url) {\n  let query = \"\"\n  if (url.searchParams.has(\"q\")) query = url.searchParams.get(\"q\")\n  else if (url.searchParams.has(\"query\")) query = url.searchParams.has(\"query\")\n  return query\n}\nfunction prefsEncoded(prefs) {\n  return new URLSearchParams(prefs).toString()\n}\n\nfunction convertMapCentre(url) {\n  let [lat, lon, zoom] = [null, null, null]\n  const reg = url.pathname.match(/@(-?\\d[0-9.]*),(-?\\d[0-9.]*),(\\d{1,2})[.z]/)\n  if (reg) {\n    ;[, lon, lat, zoom] = reg\n  } else if (url.searchParams.has(\"center\")) {\n    // Set map centre if present\n    ;[lat, lon] = url.searchParams.get(\"center\").split(\",\")\n    zoom = url.searchParams.get(\"zoom\") ?? \"17\"\n  }\n  return { zoom, lon, lat }\n}\n\nexport function randomInstances(clearnet, n) {\n  let instances = []\n  if (n > clearnet.length) n = clearnet.length\n  for (let i = 0; i < n; i++) {\n    const randomNumber = Math.floor(Math.random() * clearnet.length)\n    const randomInstance = clearnet[randomNumber]\n    instances.push(randomInstance)\n  }\n  return instances\n}\n\nasync function autoPickInstance(clearnet, url) {\n  if (url) {\n    const i = clearnet.findIndex(instance => url.href.startsWith(instance))\n    if (i >= 0) clearnet.splice(i, 1)\n  }\n  const random = randomInstances(clearnet, 5)\n  const pings = await Promise.all([\n    ...random.map(async instance => {\n      return [instance, await ping(instance)]\n    }),\n  ])\n  pings.sort((a, b) => a[1] - b[1])\n  return pings[0][0]\n}\n\nexport function style(options, window) {\n  const vars = cssVariables(options, window)\n  return `--text: ${vars.text};\n  --bg-main: ${vars.bgMain};\n  --bg-secondary: ${vars.bgSecondary};\n  --active: ${vars.active};\n  --danger: ${vars.danger};\n  --light-grey: ${vars.lightGrey};`\n}\n\nfunction cssVariables(options, window) {\n  const dark = {\n    text: \"#fff\",\n    bgMain: \"#121212\",\n    bgSecondary: \"#202020\",\n    active: \"#fbc117\",\n    danger: \"#f04141\",\n    lightGrey: \"#c3c3c3\",\n  }\n\n  const light = {\n    text: \"black\",\n    bgMain: \"white\",\n    bgSecondary: \"#e4e4e4\",\n    active: \"#fb9817\",\n    danger: \"#f04141\",\n    lightGrey: \"#c3c3c3\",\n  }\n  if (options.theme == \"dark\") {\n    return dark\n  } else if (options.theme == \"light\") {\n    return light\n  } else if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n    return dark\n  } else {\n    return light\n  }\n}\n\nexport default {\n  getRandomInstance,\n  getNextInstance,\n  protocolHost,\n  getList,\n  getBlacklist,\n  getConfig,\n  getOptions,\n  getPingCache,\n  ping,\n  addressToLatLng,\n  getQuery,\n  prefsEncoded,\n  convertMapCentre,\n  randomInstances,\n  style,\n  autoPickInstance,\n}\n","import utils from \"./utils.js\"\n\nconst isChrome = browser.runtime.getBrowserInfo === undefined\nwindow.browser = window.browser || window.chrome\n\nlet config, options\n\nasync function init() {\n  options = await utils.getOptions()\n  config = await utils.getConfig()\n}\n\ninit()\nbrowser.storage.onChanged.addListener(init)\n\nfunction all(service, frontend, options, config) {\n  let instances = []\n  if (!frontend) {\n    for (const frontend in config.services[service].frontends) {\n      if (options[frontend]) {\n        instances.push(...options[frontend])\n      }\n    }\n  } else if (options[frontend]) {\n    instances = options[frontend]\n  }\n  return instances\n}\n\n/**\n * @param {string} service\n * @param {URL} url\n * @param {{}} config\n * @param {{}} options\n * @param {string} frontend\n */\nfunction regexArray(service, url, config, options, frontend) {\n  let targetList = config.services[service].targets\n  if (frontend && \"excludeTargets\" in config.services[service].frontends[frontend]) {\n    if (service !== \"search\" || !options[\"search\"].redirectGoogle) {\n      targetList = targetList.filter(\n        val => !config.services[service].frontends[frontend].excludeTargets.includes(targetList.indexOf(val))\n      )\n    }\n  }\n  for (const targetString in targetList) {\n    const target = new RegExp(targetList[targetString])\n    if (target.test(url.href)) return true\n  }\n  return false\n}\n\n/**\n * @param {URL} url\n * @param {string} frontend\n * @param {string} randomInstance\n * @returns {undefined|string}\n */\nfunction rewrite(url, originUrl, frontend, randomInstance) {\n  switch (frontend) {\n    case \"hyperpipe\":\n      for (const key of [...url.searchParams.keys()]) if (key !== \"q\") url.searchParams.delete(key)\n      return `${randomInstance}${url.pathname}${url.search}`.replace(/\\/search\\?q=.*/, searchQuery =>\n        searchQuery.replace(\"?q=\", \"/\")\n      )\n    case \"searx\":\n    case \"searxng\":\n      for (const key of [...url.searchParams.keys()]) if (key !== \"q\") url.searchParams.delete(key)\n      return `${randomInstance}/${url.search}`\n    case \"whoogle\":\n      for (const key of [...url.searchParams.keys()]) if (key !== \"q\") url.searchParams.delete(key)\n      return `${randomInstance}/search${url.search}`\n    case \"4get\": {\n      const s = url.searchParams.get(\"q\")\n      if (s !== null) return `${randomInstance}/web?s=${encodeURIComponent(s)}`\n      return randomInstance\n    }\n    case \"librey\":\n      for (const key in url.searchParams.keys()) if (key != \"q\") url.searchParams.delete(key)\n      return `${randomInstance}/search.php${url.search}`\n    case \"yattee\":\n      url.searchParams.delete(\"si\")\n      return url.href.replace(/^https?:\\/{2}/, \"yattee://\")\n    case \"freetube\":\n      url.searchParams.delete(\"si\")\n      return \"freetube://\" + url.href\n    case \"freetubePwa\":\n      url.searchParams.delete(\"si\")\n      return \"freetube://\" + url.href\n    case \"poketube\": {\n      url.searchParams.delete(\"si\")\n      if (url.pathname.startsWith(\"/channel\")) {\n        const reg = /\\/channel\\/(.*)\\/?$/.exec(url.pathname)\n        if (reg) {\n          const id = reg[1]\n          return `${randomInstance}/channel?id=${id}${url.search}`\n        }\n      }\n      if (/\\/@[a-z]+\\//.exec(url.pathname)) return randomInstance\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"libMedium\":\n    case \"scribe\": {\n      const regex = url.hostname.match(/^(link|cdn-images-\\d+|.*)\\.medium\\.com/)\n      if (regex && regex.length > 1) {\n        const subdomain = regex[1]\n        if (subdomain != \"link\" || !subdomain.startsWith(\"cdn-images\")) {\n          return `${randomInstance}/@${subdomain}${url.pathname}${url.search}`\n        }\n      }\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"translite\":\n    case \"simplyTranslate\":\n      return `${randomInstance}/${url.search}`\n    case \"send\":\n    case \"mozhi\":\n      return randomInstance\n    case \"libreTranslate\":\n      return `${randomInstance}/${url.search.replace(\"sl\", \"source\").replace(\"tl\", \"target\").replace(\"text\", \"q\")}`\n    case \"osm\": {\n      if (originUrl && originUrl.host === \"earth.google.com\") return randomInstance\n\n      let prefs = { layers: \"mapnik\" }\n\n      let mapCentre = \"#\"\n      const mapCentreData = utils.convertMapCentre(url)\n      if (mapCentreData.zoom && mapCentreData.lon && mapCentreData.lat) {\n        mapCentre = `#map=${mapCentreData.zoom}/${mapCentreData.lon}/${mapCentreData.lat}`\n      }\n\n      if (url.pathname.includes(\"/embed\")) {\n        // https://www.google.com/maps/embed/v1/place?key=AIzaSyD4iE2xVSpkLLOXoyqT-RuPwURN3ddScAI&q=Eiffel+Tower,Paris+France\n        const query = utils.getQuery(url)\n        let { coordinate, boundingbox } = utils.addressToLatLng(query)\n        prefs.bbox = boundingbox\n        prefs.marker = coordinate\n        return `${randomInstance}/export/embed.html?${utils.prefsEncoded(prefs)}`\n      }\n\n      if (url.pathname.includes(\"/dir\")) {\n        if (url.searchParams.has(\"travelmode\")) {\n          const travelModes = {\n            driving: \"fossgis_osrm_car\",\n            walking: \"fossgis_osrm_foot\",\n            bicycling: \"fossgis_osrm_bike\",\n            transit: \"fossgis_osrm_car\", // not implemented on OSM, default to car.\n          }\n          prefs.engine = travelModes[url.searchParams.get(\"travelmode\")]\n        }\n        const regex1 = /\\/dir\\/([^@/]+)\\/([^@/]+)\\/@-?\\d[0-9.]*,-?\\d[0-9.]*,\\d{1,2}[.z]/.exec(url.pathname)\n        const regex2 = /\\/dir\\/([^@/]+)\\//.exec(url.pathname)\n        if (regex1) {\n          // https://www.google.com/maps/dir/92+Rue+Moncey,+69003+Lyon,+France/M%C3%A9dip%C3%B4le+Lyon-Villeurbanne/@45.760254,4.8486298,13z?travelmode=bicycling\n          const origin = utils.addressToLatLng(decodeURIComponent(regex1[1])).coordinate ?? \"\"\n          const destination = utils.addressToLatLng(decodeURIComponent(regex1[2])).coordinate ?? \"\"\n          prefs.route = `${origin};${destination}`\n        } else if (regex2) {\n          // https://www.google.com/maps/dir/92+Rue+Moncey,+69003+Lyon,+France/@45.760254,4.8486298,13z?travelmode=bicycling\n          const origin = utils.addressToLatLng(decodeURIComponent(regex2[1])).coordinate ?? \"\"\n          prefs.route = `${origin};`\n        } else {\n          // https://www.google.com/maps/dir/?api=1&origin=Space+Needle+Seattle+WA&destination=Pike+Place+Market+Seattle+WA&travelmode=bicycling\n          const origin = utils.addressToLatLng(url.searchParams.get(\"origin\")).coordinate ?? \"\"\n          const destination = utils.addressToLatLng(url.searchParams.get(\"destination\")).coordinate ?? \"\"\n          prefs.route = `${origin};${destination}`\n        }\n        return `${randomInstance}/directions?${utils.prefsEncoded(prefs)}${mapCentre}`\n      }\n\n      const placeRegex = /\\/place\\/(.*?)\\//\n      if (url.pathname.match(placeRegex)) {\n        // https://www.google.com/maps/place/H%C3%B4tel+de+Londres+Eiffel/@40.9845265,28.7081268,14z\n        const query = url.pathname.match(placeRegex)[1]\n        return `${randomInstance}/search?query=${query}${mapCentre}`\n      }\n\n      if (url.searchParams.has(\"ll\")) {\n        // https://maps.google.com/?ll=38.882147,-76.99017\n        const [mlat, mlon] = url.searchParams.get(\"ll\").split(\",\")\n        return `${randomInstance}/search?query=${mlat}%2C${mlon}`\n      }\n\n      if (url.searchParams.has(\"viewpoint\")) {\n        // https://www.google.com/maps/@?api=1&map_action=pano&viewpoint=48.857832,2.295226&heading=-45&pitch=38&fov=80\n        const [mlat, mlon] = url.searchParams.get(\"viewpoint\").split(\",\")\n        return `${randomInstance}/search?query=${mlat}%2C${mlon}`\n      }\n\n      const query = utils.getQuery(url)\n      if (query) return `${randomInstance}/search?query=\"${query}${mapCentre}&${utils.prefsEncoded(prefs)}`\n      return `${randomInstance}/${mapCentre}&${utils.prefsEncoded(prefs)}`\n    }\n    case \"breezeWiki\": {\n      let wiki,\n        urlpath = \"\"\n      if (url.hostname.match(/^[a-zA-Z0-9-]+\\.(?:fandom|wikia)\\.com/)) {\n        wiki = url.hostname.match(/^[a-zA-Z0-9-]+(?=\\.(?:fandom|wikia)\\.com)/)\n        if (wiki == \"www\" || !wiki) wiki = \"\"\n        else wiki = `/${wiki}`\n        urlpath = url.pathname\n      } else {\n        wiki = url.pathname.match(/(?<=wiki\\/w:c:)[a-zA-Z0-9-]+(?=:)/)\n        if (!wiki) wiki = \"\"\n        else {\n          wiki = \"/\" + wiki + \"/wiki/\"\n          urlpath = url.pathname.match(/(?<=wiki\\/w:c:[a-zA-Z0-9-]+:).+/)\n        }\n      }\n      if (url.href.search(/Special:Search\\?query/) > -1) {\n        return `${randomInstance}${wiki}${urlpath}${url.search}`\n          .replace(/Special:Search\\?query/, \"search?q\")\n          .replace(/\\/wiki/, \"\")\n      }\n      return `${randomInstance}${wiki}${urlpath}${url.search}`\n    }\n    case \"rimgo\":\n      if (url.href.search(/^https?:\\/{2}(?:[im]\\.)?stack\\./) > -1)\n        return `${randomInstance}/stack${url.pathname}${url.search}`\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"redlib\":\n    case \"libreddit\": {\n      const subdomain = url.hostname.match(/^(?:(?:external-)?preview|i)(?=\\.redd\\.it)/)\n      if (!subdomain) return `${randomInstance}${url.pathname}${url.search}`\n      switch (subdomain[0]) {\n        case \"preview\":\n          return `${randomInstance}/preview/pre${url.pathname}${url.search}`\n        case \"external-preview\":\n          return `${randomInstance}/preview/external-pre${url.pathname}${url.search}`\n        case \"i\":\n          return `${randomInstance}/img${url.pathname}`\n      }\n      return randomInstance\n    }\n    case \"teddit\":\n      if (/^(?:(?:external-)?preview|i)\\.redd\\.it/.test(url.hostname)) {\n        if (url.search == \"\") return `${randomInstance}${url.pathname}?teddit_proxy=${url.hostname}`\n        else return `${randomInstance}${url.pathname}${url.search}&teddit_proxy=${url.hostname}`\n      }\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"eddrit\":\n      if (/^(?:(?:external-)?preview|i)\\.redd\\.it/.test(url.hostname)) return randomInstance\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"neuters\": {\n      const p = url.pathname\n      if (p.startsWith(\"/article/\") || p.startsWith(\"/pf/\") || p.startsWith(\"/arc/\") || p.startsWith(\"/resizer/\")) {\n        return randomInstance\n      }\n      return `${randomInstance}${p}`\n    }\n    case \"dumb\":\n      if (url.pathname.endsWith(\"-lyrics\")) return `${randomInstance}${url.pathname}`\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"intellectual\":\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"ruralDictionary\":\n      if (!url.pathname.includes(\"/define.php\") && !url.pathname.includes(\"/random.php\") && url.pathname != \"/\")\n        return randomInstance\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"anonymousOverflow\": {\n      if (url.hostname == \"stackoverflow.com\") {\n        const threadID = /^\\/a\\/(\\d+)\\/?/.exec(url.pathname)\n        if (threadID) return `${randomInstance}/questions/${threadID[1]}${url.search}`\n        return `${randomInstance}${url.pathname}${url.search}`\n      }\n      if (url.pathname == \"/\" || url.pathname == \"\") {\n        // https://stackexchange.com or https://superuser.com\n        return `${randomInstance}${url.pathname}${url.search}`\n      }\n      const regex = url.href.match(/https?:\\/{2}(?:([a-zA-Z0-9-]+)\\.)?stackexchange\\.com\\//)\n      if (regex && regex.length > 1) {\n        const subdomain = regex[1]\n        return `${randomInstance}/exchange/${subdomain}${url.pathname}${url.search}`\n      }\n      const notExchangeRegex = url.hostname.match(\n        /(?:[a-zA-Z]+\\.)?(?:askubuntu\\.com|mathoverflow\\.net|serverfault\\.com|stackapps\\.com|superuser\\.com|stackoverflow\\.com)/\n      )\n      if (notExchangeRegex) {\n        return `${randomInstance}/exchange/${notExchangeRegex[0]}${url.pathname}${url.search}`\n      }\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"biblioReads\":\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"wikiless\": {\n      let hostSplit = url.host.split(\".\")\n      // wikiless doesn't have mobile view support yet\n      if (hostSplit[0] != \"wikipedia\" && hostSplit[0] != \"www\") {\n        if (hostSplit[0] == \"m\") url.searchParams.append(\"mobileaction\", \"toggle_view_mobile\")\n        else url.searchParams.append(\"lang\", hostSplit[0])\n        if (hostSplit[1] == \"m\") url.searchParams.append(\"mobileaction\", \"toggle_view_mobile\")\n      }\n      return `${randomInstance}${url.pathname}${url.search}${url.hash}`\n    }\n    case \"proxiTok\":\n      if (url.pathname.startsWith(\"/email\")) return randomInstance\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"waybackClassic\": {\n      const regex = /^\\/\\web\\/(?:[0-9]+)?\\*\\/(.*)/.exec(url.pathname)\n      if (regex) {\n        const link = regex[1]\n        return `${randomInstance}/cgi-bin/history.cgi?utf8=✓&q=${encodeURIComponent(link)}`\n      }\n      const regex2 = /(^\\/\\web\\/([0-9]+)\\/.*)/.exec(url.pathname)\n      if (regex2) {\n        let link = regex2[1]\n        link = link.replace(regex2[2], regex2[2] + \"if_\")\n        return `https://web.archive.org${link}`\n      }\n      return\n    }\n    case \"gothub\":\n      if (url.hostname == \"gist.github.com\") return `${randomInstance}/gist${url.pathname}${url.search}`\n      if (url.hostname == \"raw.githubusercontent.com\") return `${randomInstance}/raw${url.pathname}${url.search}`\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"mikuInvidious\":\n      if (url.hostname == \"bilibili.com\" || url.hostname == \"www.bilibili.com\" || url.hostname == \"b23.tv\")\n        return `${randomInstance}${url.pathname}${url.search}`\n      if (url.hostname == \"space.bilibili.com\") return `${randomInstance}/space${url.pathname}${url.search}`\n    case \"tent\": {\n      if (url.hostname == \"bandcamp.com\" && url.pathname == \"/search\") {\n        const query = url.searchParams.get(\"q\")\n        return `${randomInstance}/search.php?query=${encodeURIComponent(query)}`\n      }\n      if (url.hostname.endsWith(\"bandcamp.com\")) {\n        const regex = /^(.*)\\.bandcamp\\.com/.exec(url.hostname)\n        const artist = regex[1]\n        if (url.pathname == \"/\" || url.pathname == \"/music\") {\n          return `${randomInstance}/artist.php?name=${artist}`\n        } else {\n          const regex = /^\\/(.*)\\/(.*)/.exec(url.pathname)\n          if (regex) {\n            const type = regex[1]\n            const name = regex[2]\n            return `${randomInstance}/release.php?artist=${artist}&type=${type}&name=${name}`\n          }\n        }\n      }\n      if (url.hostname == \"f4.bcbits.com\") {\n        const regex = /\\/img\\/(.*)/.exec(url.pathname)\n        const image = regex[1]\n        return `${randomInstance}/image.php?file=${image}`\n      }\n      if (url.hostname == \"t4.bcbits.com\") {\n        const regex = /\\/stream\\/(.*)\\/(.*)\\/(.*)/.exec(url.pathname)\n        if (regex) {\n          const directory = regex[1]\n          const format = regex[2]\n          const file = regex[3]\n          const token = url.searchParams.get(\"token\")\n          return `${randomInstance}/audio.php/?directory=${directory}&format=${format}&file=${file}&token=${encodeURIComponent(token)}`\n        }\n      }\n    }\n    case \"binternet\":\n      if (url.hostname == \"i.pinimg.com\") return `${randomInstance}/image_proxy.php?url=${url.href}`\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"laboratory\": {\n      let path = url.pathname\n      if (path == \"/\") path = \"\"\n      return `${randomInstance}/${url.hostname}${path}${url.search}`\n    }\n    case \"quetre\": {\n      const regex = /([a-z]+)\\.quora\\.com/.exec(url.hostname)\n      if (regex) {\n        const lang = regex[1]\n        url.searchParams.append(\"lang\", lang)\n        return `${randomInstance}${url.pathname}${url.search}`\n      }\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"liteXiv\":\n    case \"pixivFe\": {\n      const regex = /\\/[a-z]{1,3}\\/(.*)/.exec(url.pathname)\n      if (regex) {\n        const path = regex[1]\n        return `${randomInstance}/${path}${url.search}`\n      }\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"invidious\": {\n      url.searchParams.delete(\"si\")\n      if (url.hostname == \"youtu.be\" || (url.hostname.endsWith(\"youtube.com\") && url.pathname.startsWith(\"/live\"))) {\n        const watch = url.pathname.substring(url.pathname.lastIndexOf(\"/\") + 1)\n        return `${randomInstance}/watch?v=${watch}${url.search.replace(\"?\", \"&\")}`\n      }\n      if (url.hostname.endsWith(\"youtube.com\") && url.pathname.startsWith(\"/redirect?\")) return url.href\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"freetubeMusic\": {\n      if (url.hostname == \"youtu.be\" || (url.hostname.endsWith(\"youtube.com\") && url.pathname.startsWith(\"/live\"))) {\n        const watch = url.pathname.substring(url.pathname.lastIndexOf(\"/\") + 1)\n        return `freetube://youtube.com/watch?v=${watch}`\n      }\n      return \"freetube://\" + url.href\n    }\n    case \"invidiousMusic\": {\n      if (url.hostname == \"youtu.be\" || (url.hostname.endsWith(\"youtube.com\") && url.pathname.startsWith(\"/live\"))) {\n        const watch = url.pathname.substring(url.pathname.lastIndexOf(\"/\") + 1)\n        return `${randomInstance}/watch?v=${watch}`\n      }\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"materialious\": {\n      url.searchParams.delete(\"si\")\n      if (url.hostname == \"youtu.be\" || (url.hostname.endsWith(\"youtube.com\") && url.pathname.startsWith(\"/live\"))) {\n        const watch = url.pathname.substring(url.pathname.lastIndexOf(\"/\") + 1)\n        return `${randomInstance}/watch/${watch}${url.search.replace(\"?\", \"&\")}`\n      }\n      if (url.hostname.endsWith(\"youtube.com\")) {\n        if (url.pathname.startsWith(\"/watch\")) {\n          if (url.searchParams.has(\"v\")) {\n            const watch = url.searchParams.get(\"v\")\n            url.searchParams.delete(\"v\")\n            return `${randomInstance}/watch/${watch}${url.search.replace(\"?\", \"&\")}`\n          }\n          return `${randomInstance}/watch/${url.search.replace(\"?\", \"&\")}`\n        }\n        if (url.pathname.startsWith(\"/results\")) {\n          if (url.searchParams.has(\"search_query\")) {\n            const search = url.searchParams.get(\"search_query\")\n            url.searchParams.delete(\"search_query\")\n            return `${randomInstance}/search/${search}${url.search.replace(\"?\", \"&\")}`\n          }\n          return `${randomInstance}/search/${url.search.replace(\"?\", \"&\")}`\n        }\n        if (url.pathname.startsWith(\"/redirect?\")) {\n          return url.href\n        }\n      }\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"libremdb\": {\n      if (url.pathname.startsWith(\"/Name\")) {\n        for (const [key, value] of url.searchParams.entries()) {\n          return `${randomInstance}/title/${encodeURIComponent(key)}`\n        }\n      }\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"tuboYoutube\":\n      url.searchParams.delete(\"si\")\n      if (url.pathname.startsWith(\"/channel\")) return `${randomInstance}/channel?url=${encodeURIComponent(url.href)}`\n      if (url.pathname.startsWith(\"/watch\")) return `${randomInstance}/stream?url=${encodeURIComponent(url.href)}`\n      return randomInstance\n    case \"tuboSoundcloud\":\n      if (url.pathname == \"/\") return `${randomInstance}?kiosk?serviceId=1`\n      if (url.pathname.match(/^\\/[^\\/]+(\\/$|$)/)) return `${randomInstance}/channel?url=${encodeURIComponent(url.href)}`\n      if (url.pathname.match(/^\\/[^\\/]+\\/[^\\/]+/)) return `${randomInstance}/stream?url=${encodeURIComponent(url.href)}`\n      return randomInstance\n    case \"twineo\":\n    case \"safetwitch\":\n      if (url.hostname.startsWith(\"clips.\")) return `${randomInstance}/clip${url.pathname}${url.search}`\n      return `${randomInstance}${url.pathname}${url.search}`\n\n    case \"tekstoLibre\":\n      return `${randomInstance}/?${url.pathname.slice(1)}`\n    case \"skyview\":\n      if (url.pathname == \"/\") return randomInstance\n      return `${randomInstance}?url=${encodeURIComponent(url.href)}`\n    case \"nitter\": {\n      let search = new URLSearchParams(url.search)\n\n      search.delete(\"ref_src\")\n      search.delete(\"ref_url\")\n      search.delete(\"s\") // type of device that shared the link\n      search.delete(\"t\") // some sort of tracking ID\n\n      search = search.toString()\n      if (search !== \"\") search = `?${search}`\n\n      if (url.host.split(\".\")[0] === \"pbs\" || url.host.split(\".\")[0] === \"video\") {\n        try {\n          const [, id, format, extra] = search.match(/(.*)\\?format=(.*)&(.*)/)\n          const query = encodeURIComponent(`${id}.${format}?${extra}`)\n          return `${randomInstance}/pic${url.pathname}${query}`\n        } catch {\n          return `${randomInstance}/pic${url.pathname}${search}`\n        }\n      }\n      if (url.pathname.split(\"/\").includes(\"tweets\"))\n        return `${randomInstance}${url.pathname.replace(\"/tweets\", \"\")}${search}`\n      if (url.host == \"t.co\") return `${randomInstance}/t.co${url.pathname}`\n      return `${randomInstance}${url.pathname}${search}#m`\n    }\n    case \"priviblur\": {\n      if (url.hostname == \"www.tumblr.com\") return `${randomInstance}${url.pathname}${url.search}`\n      if (url.hostname.startsWith(\"assets\")) return `${randomInstance}/tblr/assets${url.pathname}${url.search}`\n      if (url.hostname.startsWith(\"static\")) return `${randomInstance}/tblr/static${url.pathname}${url.search}`\n\n      const reg = /^([0-9]+)\\.media\\.tumblr\\.com/.exec(url.hostname) // *.media.tumblr.com\n      if (reg) return `${randomInstance}/tblr/media/${reg[1]}${url.pathname}${url.search}`\n\n      const blogregex = /^(?:www\\.)?([a-z\\d-]+)\\.tumblr\\.com/.exec(url.hostname) // <blog>.tumblr.com\n      if (blogregex) {\n        const blog_name = blogregex[1]\n        // Under the <blog>.tumblr.com domain posts are under a /post path\n        if (url.pathname.startsWith(\"/post\"))\n          return `${randomInstance}/${blog_name}${url.pathname.slice(5)}${url.search}`\n        else return `${randomInstance}/${blog_name}${url.pathname}${url.search}`\n      }\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"freetar\":\n      if (url.pathname.startsWith(\"/search.php\")) {\n        url.searchParams.set(\"search_term\", url.searchParams.get(\"value\"))\n        url.searchParams.delete(\"value\")\n        url.searchParams.delete(\"search_type\")\n        return `${randomInstance}/search${url.search}`\n      }\n      if (url.pathname.startsWith(\"/artist\")) return\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"ratAintTieba\":\n      url.searchParams.delete(\"ie\")\n      return `${randomInstance}${url.pathname}${url.search}`\n    case \"shoelace\": {\n      const reg = /^\\/(?:(?:(?:[^\\/])?\\/post)|t)\\/([^\\/])/.exec(url.pathname)\n      if (reg) return `${randomInstance}/t/${reg[1]}${url.search}`\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"skunkyArt\": {\n      if (url.pathname.startsWith(\"/search\")) return `${randomInstance}${url.pathname}${url.search}&type=all`\n\n      const artReg = /^\\/(.*?)\\/art\\/(.*)\\/?/.exec(url.pathname)\n      if (artReg) return `${randomInstance}/post/${artReg[1]}/${artReg[2]}${url.search}`\n\n      const userReg = /^\\/([^\\/]+)$/.exec(url.pathname)\n      if (userReg) return `${randomInstance}/group_user?q=${userReg[1]}&type=about`\n\n      const galleryReg = /^\\/(.*?)\\/gallery(\\/$|$)$/.exec(url.pathname)\n      if (galleryReg) return `${randomInstance}/group_user?q=${galleryReg[1]}&type=gallery`\n\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"ytify\": {\n      if (url.pathname.startsWith(\"/watch\"))\n        return `${randomInstance}/?s=${encodeURIComponent(url.searchParams.get(\"v\"))}`\n\n      const channelReg = /\\/channel\\/([^\\/]+)/.exec(url.pathname)\n      if (channelReg) return `${randomInstance}/list?channel=${channelReg[1]}`\n\n      if (url.pathname.startsWith(\"/playlist\"))\n        return `${randomInstance}/list?playlists=${encodeURIComponent(url.searchParams.get(\"list\"))}`\n      return `${randomInstance}${url.pathname}${url.search}`\n    }\n    case \"koub\":\n      if (url.pathname.startsWith(\"/view/\") || url.pathname.startsWith(\"/stories/\")) {\n        return `${randomInstance}${url.pathname}${url.search}`\n      }\n      const accountReg = /^\\/([^\\/]+)\\/?$/.exec(url.pathname)\n      if (accountReg) return `${randomInstance}/account${url.pathname}${url.search}`\n\n    case \"piped\":\n    case \"pipedMaterial\":\n    case \"cloudtube\":\n    case \"lightTube\":\n    case \"viewtube\":\n      url.searchParams.delete(\"si\")\n    default:\n      return `${randomInstance}${url.pathname}${url.search}`\n  }\n}\n\n/**\n * @param {URL} url\n * @param {string} type\n * @param {URL} originUrl\n * @param {URL} documentUrl\n * @param {boolean} incognito\n * @param {boolean} forceRedirection\n * @returns {string | undefined}\n */\nfunction redirect(url, type, originUrl, documentUrl, incognito, forceRedirection) {\n  if (type != \"main_frame\" && type != \"sub_frame\" && type != \"image\") return\n  let randomInstance\n  let frontend\n  if (!forceRedirection && options.redirectOnlyInIncognito == true && !incognito) return\n  for (const service in config.services) {\n    if (!forceRedirection && !options[service].enabled) continue\n    if (!forceRedirection && options[service].redirectOnlyInIncognito == true && !incognito) continue\n\n    frontend = options[service].frontend\n\n    if (\n      config.services[service].frontends[frontend].desktopApp &&\n      type != \"main_frame\" &&\n      options[service].redirectType != \"main_frame\"\n    )\n      frontend = options[service].embedFrontend\n\n    if (!regexArray(service, url, config, options, frontend)) {\n      frontend = null\n      continue\n    }\n\n    if (type != \"main_frame\" && documentUrl && options[service].redirectType == \"sub_frame\") {\n      if (regexArray(service, documentUrl, config, options, frontend)) {\n        return\n      }\n    }\n\n    if (\n      config.services[service].embeddable &&\n      type != options[service].redirectType &&\n      options[service].redirectType != \"both\"\n    ) {\n      if (options[service].unsupportedUrls == \"block\") return \"CANCEL\"\n      return\n    }\n\n    let instanceList = options[frontend]\n    if (instanceList === undefined) break // should not happen if settings are correct\n\n    if (config.services[service].frontends[frontend].localhost && options[service].instance == \"localhost\") {\n      randomInstance = `http://${frontend}.localhost:8080`\n    } else if (instanceList.length === 0) {\n      return `https://no-instance.libredirect.invalid?frontend=${encodeURIComponent(frontend)}&url=${encodeURIComponent(url.href)}`\n    } else {\n      randomInstance = utils.getRandomInstance(instanceList)\n    }\n\n    if (originUrl && instanceList.includes(originUrl.origin)) {\n      if (type == \"main_frame\") return \"BYPASSTAB\"\n      else return null\n    }\n    break\n  }\n  if (!frontend) return\n\n  return rewrite(url, originUrl, frontend, randomInstance)\n}\n\n/**\n * @param {URL} url\n * @param {string} type\n * @param {URL} originUrl\n * @param {URL} documentUrl\n * @param {boolean} incognito\n * @param {boolean} forceRedirection\n * @returns {Promise<string | undefined>}\n */\nasync function redirectAsync(url, type, originUrl, documentUrl, incognito, forceRedirection) {\n  await init()\n  return redirect(url, type, originUrl, documentUrl, incognito, forceRedirection)\n}\n\n/**\n * @param {URL} url\n */\nasync function computeServiceFrontend(url) {\n  const config = await utils.getConfig()\n  const options = await utils.getOptions()\n  for (const service in config.services) {\n    if (regexArray(service, url, config, options)) {\n      return { service, frontend: null }\n    } else {\n      for (const frontend in config.services[service].frontends) {\n        const instances = all(service, frontend, options, config)\n        const i = instances.findIndex(instance => url.href.startsWith(instance))\n        if (i >= 0) {\n          return { service, frontend }\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {URL} url\n * @param {string} customService\n */\nfunction switchInstance(url, customService) {\n  return new Promise(async resolve => {\n    let options = await utils.getOptions()\n    let config = await utils.getConfig()\n\n    const protocolHost = utils.protocolHost(url)\n    if (customService) {\n      const instancesList = options[options[customService].frontend]\n      if (instancesList !== undefined) {\n        const newInstance = utils.getNextInstance(url.origin, instancesList)\n        if (newInstance) {\n          return resolve(`${newInstance}${url.pathname}${url.search}`)\n        }\n      }\n    } else {\n      for (const service in config.services) {\n        let instancesList = options[options[service].frontend]\n        if (instancesList === undefined) continue\n        const index = instancesList.findIndex(instance => url.href.startsWith(instance))\n        if (index < 0) continue\n        instancesList.splice(index, 1)\n        if (instancesList.length === 0) return resolve()\n        const newInstance = utils.getNextInstance(url.origin, instancesList)\n        if (newInstance) {\n          return resolve(`${newInstance}${url.pathname}${url.search}`)\n        }\n      }\n    }\n    resolve()\n  })\n}\n\n/**\n * @param {URL} url\n */\nasync function reverse(url) {\n  let options = await utils.getOptions()\n  let config = await utils.getConfig()\n  for (const service in config.services) {\n    let frontend = options[service].frontend\n    if (options[frontend] == undefined) continue\n    if (\n      options[frontend].findIndex(instance => url.href.startsWith(instance)) < 0 &&\n      !url.href.startsWith(`http://${frontend}.localhost:8080`)\n    )\n      continue\n    switch (service) {\n      case \"youtube\":\n      case \"imdb\":\n      case \"imgur\":\n      case \"tiktok\":\n      case \"reddit\":\n      case \"imdb\":\n      case \"snopes\":\n      case \"urbanDictionary\":\n      case \"quora\":\n      case \"twitter\":\n      case \"medium\":\n        return `${config.services[service].url}${url.pathname}${url.search}`\n      case \"fandom\": {\n        let regex = url.pathname.match(/^\\/([a-zA-Z0-9-]+)\\/wiki\\/(.*)/)\n        if (regex) return `https://${regex[1]}.fandom.com/wiki/${regex[2]}`\n        return\n      }\n      case \"wikipedia\": {\n        const lang = url.searchParams.get(\"lang\")\n        if (lang != null) {\n          return `https://${lang}.wikipedia.org${url.pathname}${url.search}${url.hash}`\n        }\n        return `https://wikipedia.org${url.pathname}${url.search}${url.hash}`\n      }\n      case \"stackOverflow\": {\n        if (url.pathname.startsWith(\"/questions/\")) {\n          return `https://stackoverflow.com${url.pathname}${url.search}`\n        }\n        if (url.pathname.startsWith(\"/exchange/\")) {\n          const regex = /\\/exchange\\/(.*?)(\\/.*)/.exec(url.pathname)\n          if (regex) return `https://${regex[1]}.stackexchange.com${regex[2]}`\n        }\n        return\n      }\n      case \"tekstowo\":\n        return `${config.services[service].url}/${url.search.slice(1)}`\n      case \"goodreads\":\n        return `https://goodreads.com${url.pathname}${url.search}`\n      default:\n        return\n    }\n  }\n  return\n}\n\nconst defaultInstances = {\n  materialious: [\"https://app.materialio.us\"],\n  viewtube: [\"https://viewtube.io\"],\n  piped: [\"https://pipedapi-libre.kavin.rocks\"],\n  pipedMaterial: [\"https://piped-material.xn--17b.net\"],\n  cloudtube: [\"https://tube.cadence.moe\"],\n  lightTube: [\"https://tube.kuylar.dev\"],\n  poketube: [\"https://poketube.fun\"],\n  proxiTok: [\"https://proxitok.pabloferreiro.es\"],\n  redlib: [\"https://safereddit.com\"],\n  eddrit: [\"https://eddrit.com\"],\n  scribe: [\"https://scribe.rip\"],\n  libMedium: [\"https://md.vern.cc\"],\n  quetre: [\"https://quetre.iket.me\"],\n  libremdb: [\"https://libremdb.iket.me\"],\n  simplyTranslate: [\"https://simplytranslate.org\"],\n  translite: [\"https://tl.bloat.cat\"],\n  mozhi: [\"https://mozhi.aryak.me\"],\n  searxng: [\"https://search.bus-hit.me\"],\n  \"4get\": [\"https://4get.ca\"],\n  rimgo: [\"https://rimgo.vern.cc\"],\n  hyperpipe: [\"https://hyperpipe.surge.sh\"],\n  osm: [\"https://www.openstreetmap.org\"],\n  breezeWiki: [\"https://breezewiki.com\"],\n  neuters: [\"https://neuters.de\"],\n  dumb: [\"https://dm.vern.cc\"],\n  intellectual: [\"https://intellectual.insprill.net\"],\n  ruralDictionary: [\"https://rd.vern.cc\"],\n  anonymousOverflow: [\"https://code.whatever.social\"],\n  suds: [\"https://sd.vern.cc\"],\n  unfunny: [\"https://uf.vern.cc\"],\n  soprano: [\"https://sp.vern.cc\"],\n  meme: [\"https://mm.vern.cc\"],\n  waybackClassic: [\"https://wayback-classic.net\"],\n  tent: [\"https://tent.sny.sh\"],\n  wolfreeAlpha: [\"https://gqq.gitlab.io\", \"https://uqq.gitlab.io\"],\n  laboratory: [\"https://lab.vern.cc\"],\n  binternet: [\"https://bn.bloat.cat\"],\n  pixivFe: [\"https://pixivfe.exozy.me\"],\n  liteXiv: [\"https://litexiv.exozy.me\"],\n  indestructables: [\"https://indestructables.private.coffee\"],\n  destructables: [\"https://ds.vern.cc\"],\n  safetwitch: [\"https://safetwitch.drgns.space\"],\n  twineo: [\"https://twineo.exozy.me\"],\n  proxigram: [\"https://ig.opnxng.com\"],\n  tuboYoutube: [\"https://tubo.migalmoreno.com\"],\n  tuboSoundcloud: [\"https://tubo.migalmoreno.com\"],\n  tekstoLibre: [\"https://davilarek.github.io/TekstoLibre\"],\n  skyview: [\"https://skyview.social\"],\n  priviblur: [\"https://pb.bloat.cat\"],\n  nitter: [\"https://nitter.privacydev.net\"],\n  pasted: [\"https://pasted.drakeerv.com\"],\n  freetar: [\"https://freetar.de\"],\n  ratAintTieba: [\"https://rat.fis.land\"],\n  shoelace: [\"https://shoelace.mint.lgbt\"],\n  skunkyArt: [\"https://skunky.bloat.cat\"],\n  ytify: [\"https://ytify.netlify.app\"],\n  nerdsForNerds: [\"https://nn.vern.cc\"],\n  koub: [\"https://koub.clovius.club\"],\n}\n\nasync function getDefaults() {\n  let config = await utils.getConfig()\n  let options = {}\n  for (const service in config.services) {\n    options[service] = {}\n    for (const defaultOption in config.services[service].options) {\n      options[service][defaultOption] = config.services[service].options[defaultOption]\n    }\n    for (const frontend in config.services[service].frontends) {\n      if (config.services[service].frontends[frontend].instanceList) {\n        options[frontend] = []\n      }\n    }\n  }\n  options.exceptions = {\n    url: [],\n    regex: [],\n  }\n  options.theme = \"detect\"\n  options.popupServices = [\"youtube\", \"tiktok\", \"imgur\", \"reddit\", \"quora\", \"translate\", \"maps\"]\n  options.fetchInstances = \"github\"\n  options.redirectOnlyInIncognito = false\n  options = { ...options, ...defaultInstances }\n  return options\n}\n\nfunction initDefaults() {\n  return new Promise(resolve => {\n    browser.storage.local.clear(async () => {\n      options = await getDefaults()\n      browser.storage.local.set({ options }, () => resolve())\n    })\n  })\n}\n\nfunction processUpdate(_options) {\n  return new Promise(async resolve => {\n    const config = await utils.getConfig()\n    let options = _options ?? (await utils.getOptions())\n\n    const defaults = await getDefaults()\n\n    // Remove any unknown option or subOption\n    for (const optionName in options) {\n      if (!(optionName in defaults)) delete options[optionName]\n      else if (typeof optionName === \"object\" && optionName !== null) {\n        for (const subOptionName in options[optionName]) {\n          if (!(subOptionName in defaults[optionName])) delete options[optionName][subOptionName]\n        }\n      }\n    }\n\n    // Remove any unknwon popupService\n    options.popupServices = options.popupServices.filter(service => service in config.services)\n\n    // Add missing options\n    for (const [defaultName, defaultValue] of Object.entries(defaults)) {\n      if (!(defaultName in options)) {\n        options[defaultName] = defaultValue\n      }\n    }\n\n    for (const [serviceName, serviceValue] of Object.entries(config.services)) {\n      // Reset service options if selected frontend is deprecated\n      if (!(options[serviceName].frontend in serviceValue.frontends)) {\n        options[serviceName] = serviceValue.options\n      }\n\n      // Add a default service option if it's not present\n      for (const optionName in serviceValue.options) {\n        if (!(optionName in options[serviceName])) {\n          options[serviceName][optionName] = serviceValue.options[optionName]\n        }\n      }\n    }\n\n    browser.storage.local.clear(() => {\n      browser.storage.local.set({ options }, () => {\n        resolve(options)\n      })\n    })\n  })\n}\n\n/**\n * @param {URL} url\n */\nasync function copyRaw(url) {\n  const newUrl = await reverse(url)\n  if (newUrl) {\n    if (!isChrome) {\n      navigator.clipboard.writeText(newUrl)\n    } else {\n      var copyFrom = document.createElement(\"textarea\")\n      copyFrom.textContent = newUrl\n      document.body.appendChild(copyFrom)\n      copyFrom.select()\n      document.execCommand(\"copy\")\n      copyFrom.blur()\n      document.body.removeChild(copyFrom)\n    }\n  }\n}\n\n/**\n * @param {URL} url\n */\nfunction isException(url) {\n  if (!options) return false\n  if (!options.exceptions) return false\n  let exceptions = options.exceptions\n  if (exceptions && url) {\n    if (exceptions.url) {\n      for (let item of exceptions.url) {\n        item = new URL(item)\n        item = item.href.replace(/^http:\\/\\//, \"https://\")\n        if (item == url.href) {\n          return true\n        }\n      }\n    }\n    if (exceptions.regex) {\n      for (const item of exceptions.regex) {\n        if (new RegExp(item).test(url.href)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n}\n\nexport default {\n  redirect,\n  redirectAsync,\n  computeServiceFrontend,\n  reverse,\n  initDefaults,\n  processUpdate,\n  copyRaw,\n  switchInstance,\n  isException,\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","import { writable } from \"svelte/store\"\n\nexport const options = writable(null)\nexport const config = writable(null)\nexport const page = writable(\"general\")\n","<button {...$$restProps} on:click {...$$props}>\n  <slot></slot>\n</button>\n\n<style>\n  button {\n    color: var(--text);\n    border: none;\n    text-decoration: none;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: bold;\n    transition-duration: 0.1s;\n    display: inline-flex;\n    align-items: center;\n    margin: 7.5px 0;\n    background-color: var(--bg-secondary);\n    border-radius: 5px;\n    padding: 10px;\n  }\n\n  button:hover:enabled {\n    color: var(--active);\n  }\n\n  button:active:enabled {\n    transform: translateY(1px);\n  }\n\n  button:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n  \n</style>\n","<svg\n  {...$$restProps}\n  xmlns=\"http://www.w3.org/2000/svg\"\n  height=\"20px\"\n  viewBox=\"0 -960 960 960\"\n  width=\"20px\"\n  fill=\"currentColor\"\n  ><path\n    d=\"M144-144v-178l342-342-54-53 51-51 72 72 110.22-110.22q4.45-4.45 11.11-7.11Q683-816 691-816t15 2.5q7 2.5 12 7.5l87 88q4.55 5.83 7.27 12.64 2.73 6.8 2.73 14.58t-2.66 14.44q-2.67 6.66-7.11 11.1L696-556l72 73-51 51-54-54-341 342H144Zm72-72h76l320-320-75-76-321 320v76Zm424-385 90-91-38-39-91 90 39 40Zm0 0-39-40 39 40Z\"\n  /></svg\n>\n","<script>\n  const browser = window.browser || window.chrome\n\n  import utils from \"../../assets/javascripts/utils.js\"\n  import { onDestroy } from \"svelte\"\n  import servicesHelper from \"../../assets/javascripts/services.js\"\n  import { onMount } from \"svelte\"\n\n  import { options, config, page } from \"./stores\"\n  import Button from \"../components/Button.svelte\"\n  import AutoPickIcon from \"../icons/AutoPickIcon.svelte\"\n\n  let _options\n  const unsubscribeOptions = options.subscribe(val => {\n    if (val) {\n      _options = val\n      browser.storage.local.set({ options: val })\n    }\n  })\n\n  let _config\n  const unsubscribeConfig = config.subscribe(val => (_config = val))\n\n  onDestroy(() => {\n    unsubscribeOptions()\n    unsubscribeConfig()\n  })\n\n  onMount(async () => {\n    let opts = await utils.getOptions()\n    if (!opts) {\n      await servicesHelper.initDefaults()\n      opts = await utils.getOptions()\n    }\n    options.set(opts)\n    config.set(await utils.getConfig())\n  })\n\n  let _page\n  page.subscribe(val => (_page = val))\n\n  let style\n  $: if (_options) style = utils.style(_options, window)\n\n  let autoPicking = false\n\n  const params = new URLSearchParams(window.location.search)\n  const oldUrl = new URL(params.get(\"url\"))\n\n  async function autoPick() {\n    autoPicking = true\n    const frontend = params.get(\"frontend\")\n    const redirects = await utils.getList(_options)\n    const clearnet = redirects[frontend][\"clearnet\"]\n    const instance = await utils.autoPickInstance(clearnet)\n    _options[frontend].push(instance)\n    options.set(_options)\n    autoPicking = false\n  }\n\n  async function redirectUrl() {\n    const newUrl = await servicesHelper.redirectAsync(oldUrl, \"main_frame\", null, null, false, true)\n    browser.tabs.update({ url: newUrl })\n  }\n</script>\n\n{#if _options && _config}\n  <div class=\"main\" dir=\"auto\" {style}>\n    {#if params.get(\"message\") == \"disabled\"}\n      <div>\n        <h1>You disabled redirections for this service</h1>\n        <Button\n          on:click={async () => {\n            const { service } = await servicesHelper.computeServiceFrontend(oldUrl)\n            _options[service].enabled = true\n            options.set(_options)\n            await redirectUrl()\n          }}\n        >\n          {browser.i18n.getMessage(\"enable\") || \"Enable\"}\n        </Button>\n      </div>\n    {:else if params.get(\"message\") == \"no_instance\"}\n      <div>\n        <h1>You have no instance selected for this frontend</h1>\n        <Button\n          on:click={async () => {\n            await autoPick()\n            await redirectUrl()\n          }}\n          disabled={autoPicking}\n        >\n          <AutoPickIcon class=\"margin margin_{document.body.dir}\" />\n          {browser.i18n.getMessage(\"autoPickInstance\") || \"Auto Pick Instance\"}\n        </Button>\n      </div>\n    {/if}\n  </div>\n{:else}\n  <p>Loading...</p>\n{/if}\n\n<style>\n  :global(body) {\n    width: 100vw;\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n  }\n\n  div.main {\n    height: 100%;\n    display: grid;\n    grid-template-columns: 800px;\n    margin: 0;\n    padding-top: 50px;\n    justify-content: center;\n    font-family: \"Inter\", sans-serif;\n    box-sizing: border-box;\n    font-size: 16px;\n    background-color: var(--bg-main);\n    color: var(--text);\n    overflow: scroll;\n  }\n\n  :global(.margin) {\n    margin-right: 10px;\n    margin-left: 0;\n  }\n  :global(.margin_rtl) {\n    margin-right: 0;\n    margin-left: 10px;\n  }\n</style>\n","import App from \"./App.svelte\"\n\nconst app = new App({\n  target: document.body,\n})\n\nexport default app\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","slice","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","indexOf","set_svg_attributes","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","bubble","event","callbacks","$$","type","call","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","flushidx","flush","saved_component","length","update","e","pop","i","callback","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","get_spread_update","levels","updates","to_null_out","accounted_for","n","undefined","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","detaching","filtered","targets","flush_render_callbacks","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","splice","$set","$$props","obj","$$set","getRandomInstance","instances","Math","random","pingOnce","href","async","started","http","XMLHttpRequest","timeout","ontimeout","onerror","onreadystatechange","readyState","status","ended","Date","getTime","abort","open","send","ping","time","average","parseInt","randomInstances","clearnet","randomInstance","floor","window","browser","chrome","utils","getNextInstance","currentInstanceUrl","currentInstanceIndex","protocolHost","url","pathname","replace","username","password","protocol","host","endsWith","getList","fetchInstances","DONE","JSON","parse","responseText","getBlacklist","getConfig","fetch","response","json","getOptions","storage","get","r","getPingCache","pingCache","addressToLatLng","address","encodeURIComponent","coordinate","lat","lon","boundingbox","getQuery","query","searchParams","prefsEncoded","prefs","URLSearchParams","toString","convertMapCentre","zoom","reg","match","split","vars","dark","bgMain","bgSecondary","active","danger","lightGrey","light","theme","matchMedia","matches","cssVariables","autoPickInstance","findIndex","startsWith","pings","all","sort","isChrome","runtime","getBrowserInfo","config","service","frontend","services","frontends","regexArray","targetList","redirectGoogle","val","excludeTargets","includes","targetString","RegExp","test","redirect","originUrl","documentUrl","incognito","forceRedirection","redirectOnlyInIncognito","enabled","desktopApp","redirectType","embedFrontend","embeddable","unsupportedUrls","instanceList","localhost","origin","search","searchQuery","s","exec","regex","hostname","subdomain","layers","mapCentre","mapCentreData","bbox","marker","travelModes","driving","walking","bicycling","transit","engine","regex1","regex2","decodeURIComponent","destination","route","placeRegex","mlat","mlon","wiki","urlpath","threadID","notExchangeRegex","hostSplit","hash","link","artist","directory","format","file","token","path","lang","substring","lastIndexOf","watch","entries","id","extra","blogregex","blog_name","artReg","userReg","galleryReg","channelReg","rewrite","reverse","onChanged","addListener","defaultInstances","materialious","viewtube","piped","pipedMaterial","cloudtube","lightTube","poketube","proxiTok","redlib","eddrit","scribe","libMedium","quetre","libremdb","simplyTranslate","translite","mozhi","searxng","rimgo","hyperpipe","osm","breezeWiki","neuters","dumb","intellectual","ruralDictionary","anonymousOverflow","suds","unfunny","soprano","meme","waybackClassic","tent","wolfreeAlpha","laboratory","binternet","pixivFe","liteXiv","indestructables","destructables","safetwitch","twineo","proxigram","tuboYoutube","tuboSoundcloud","tekstoLibre","skyview","priviblur","nitter","pasted","freetar","ratAintTieba","shoelace","skunkyArt","ytify","nerdsForNerds","koub","getDefaults","defaultOption","exceptions","popupServices","servicesHelper","redirectAsync","computeServiceFrontend","initDefaults","processUpdate","_options","defaults","optionName","subOptionName","defaultName","defaultValue","serviceName","serviceValue","copyRaw","newUrl","copyFrom","textContent","body","select","execCommand","blur","navigator","clipboard","writeText","switchInstance","customService","instancesList","newInstance","isException","item","URL","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","subscribe","invalidate","size","page","slot_ctx","button_levels","button","handler","addEventListener","removeEventListener","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","max","svg","div","h1","t1_value","i18n","getMessage","dir","t_value","unsubscribeOptions","$$invalidate","_config","unsubscribeConfig","onMount","opts","autoPicking","params","location","oldUrl","autoPick","redirectUrl","tabs","app"],"mappings":"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","x_google_ignoreList":[0,3]}