import{R as h,p as w}from"./shared-C3NPy9VQ.js";chrome.runtime.onMessage.addListener(async e=>{e.target==="offscreen"&&e.type==="start_recording_audio"&&e.streamId&&e.duration&&await l(e.streamId,e.duration)});chrome.runtime.onMessage.addListener(async e=>{e.target==="offscreen"&&e.type==="start_recording_screenshot"&&e.streamId&&await g(e.streamId)});chrome.runtime.onMessage.addListener(async e=>{e.target==="offscreen"&&e.type==="cancel_recording_audio"&&(t==null||t.stop(),t==null||t.stream.getTracks().forEach(n=>n.stop()))});let t,s=[];async function l(e,n){if((t==null?void 0:t.state)==="recording")throw new Error("Called startRecording while recording is in progress.");const r=await navigator.mediaDevices.getUserMedia({audio:{mandatory:{chromeMediaSource:"tab",chromeMediaSourceId:e}}}),a=new AudioContext;a.createMediaStreamSource(r).connect(a.destination),t=new MediaRecorder(r,{mimeType:"audio/webm"}),t.ondataavailable=o=>s.push(o.data),t.onstop=async()=>{const c=await new Blob(s,{type:"audio/webm"}).arrayBuffer();await chrome.runtime.sendMessage({type:h,raw:Object.values(new Uint8Array(c))}),t=void 0,s=[]},setTimeout(()=>{t==null||t.stop(),t==null||t.stream.getTracks().forEach(o=>o.stop())},n),t.start()}async function g(e){if((t==null?void 0:t.state)==="recording")throw new Error("Called startRecording while recording is in progress.");const n=await navigator.mediaDevices.getUserMedia({video:{mandatory:{chromeMediaSource:"tab",chromeMediaSourceId:e}}});t=new MediaRecorder(n,{mimeType:"video/webm"}),t.ondataavailable=a=>s.push(a.data),t.onstop=async()=>{const a=new Blob(s,{type:"video/webm"}),i=document.querySelector("video#sandbox");if(!i)return null;i.setAttribute("src",URL.createObjectURL(a)),await i.play();const o=document.createElement("canvas"),c=o.getContext("2d");if(!i||!c)return null;const{width:d,height:u}=p(i.videoWidth,i.videoHeight,640,360);o.width=d,o.height=u,c.drawImage(i,0,0,o.width,o.height);const m=o.toDataURL("image/jpeg",.7);await chrome.runtime.sendMessage({type:w,raw:m}),t=void 0,s=[]},t.start(50);let r=0;for(;s.length===0&&r<40;)await new Promise(a=>setTimeout(a,50)),r++;t==null||t.stop(),t==null||t.stream.getTracks().forEach(a=>a.stop())}function p(e,n,r,a){const i=Math.min(r/e,a/n);return{width:e*i,height:n*i}}
