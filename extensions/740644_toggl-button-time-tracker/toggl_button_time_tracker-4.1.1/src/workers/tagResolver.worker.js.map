{"version":3,"file":"tagResolver.worker.js","sources":["../../../../src/workers/tagResolver.worker.ts"],"sourcesContent":["/* eslint-disable no-console */\n\nimport {\n  type TagResolverWorkerProps,\n  type TagResolverWorkerResponse,\n  type WorkerData,\n} from '@src/workers/types'\n\nfunction handleEvent(\n  e: WorkerData<TagResolverWorkerProps>\n): TagResolverWorkerResponse {\n  const { tags, tagNames } = e.data\n\n  return Object.values(tags)\n    .filter((tag) => tagNames.includes(tag.name))\n    .map((tag) => tag.id as unknown as number)\n}\n\nself.onmessage = function (e: WorkerData<TagResolverWorkerProps>) {\n  try {\n    console.time('toggl:tagResolverWorker')\n    const response = handleEvent(e)\n    self.postMessage(response)\n    console.timeEnd('toggl:tagResolverWorker')\n  } catch (error) {\n    console.error(error, 'toggl:tagResolverWorker')\n  }\n}\n"],"names":["handleEvent","e","tags","tagNames","data","Object","values","filter","includes","tag","name","map","id","self","onmessage","console","time","response","postMessage","timeEnd","error"],"mappings":"AAQA,SAASA,EACPC,EAC2B,CACrB,KAAA,CAAEC,KAAAA,EAAMC,SAAAA,GAAaF,EAAEG,KAE7B,OAAOC,OAAOC,OAAOJ,CAAI,EACtBK,OAAgBJ,GAAAA,EAASK,SAASC,EAAIC,IAAI,CAAC,EAC3CC,IAAKF,GAAQA,EAAIG,EAAuB,CAC7C,CAEAC,KAAKC,UAAY,SAAUb,EAAuC,CAC5D,GAAA,CACFc,QAAQC,KAAK,yBAAyB,EAChCC,MAAAA,EAAWjB,EAAYC,CAAC,EAC9BY,KAAKK,YAAYD,CAAQ,EACzBF,QAAQI,QAAQ,yBAAyB,QAClCC,GACCA,QAAAA,MAAMA,EAAO,yBAAyB,CAChD,CACF"}