var w,d=(e,t,r)=>w??(w=new Promise(a=>{const n=o=>{const{data:{cmd:i,scope:p,context:l},ports:g}=o;if(i==="webext-port-offer"&&p===t&&l!==e){window.removeEventListener("message",n);const c=g[0];return c.onmessage=r,c.postMessage("port-accepted"),a(c)}},s=()=>{const o=new MessageChannel;o.port1.onmessage=i=>{if(i.data==="port-accepted")return window.removeEventListener("message",n),a(o.port1);r==null||r(i)},window.postMessage({cmd:"webext-port-offer",scope:t,context:e},"*",[o.port2])};window.addEventListener("message",n),e==="window"?setTimeout(s,0):s()})),u=e=>{let t,r=!1,a,n;return{enable:()=>r=!0,onMessage:s=>a=s,postMessage:async s=>{if(e!=="content-script"&&e!=="window")throw new Error("Endpoint does not use postMessage");if(!r)throw new Error("Communication with window has not been allowed");return m(t),(await n).postMessage(s)},setNamespace:s=>{if(t)throw new Error("Namespace once set cannot be changed");t=s,n=d(e,s,({data:o})=>a==null?void 0:a(o))}}};function m(e){if(typeof e!="string"||e.trim().length===0)throw new Error(`webext-bridge uses window.postMessage to talk with other "window"(s) for message routingwhich is global/conflicting operation in case there are other scripts using webext-bridge. Call Bridge#setNamespace(nsps) to isolate your app. Example: setNamespace('com.facebook.react-devtools'). Make sure to use same namespace across all your scripts whereever window.postMessage is likely to be used\``)}export{u};
