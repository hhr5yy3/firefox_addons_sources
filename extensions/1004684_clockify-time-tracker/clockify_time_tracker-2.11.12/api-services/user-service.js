class UserService extends ClockifyService{static async getUser(){const t=await this.apiEndpoint,e=await localStorage.getItem("token"),a=`${t}/users/${this.extractUserFromToken(e)}`;return await this.apiCall(a)}static extractUserFromToken(t){const e=t.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),a=decodeURIComponent(atob(e).split("").map((function(t){return"%"+("00"+t.charCodeAt(0).toString(16)).slice(-2)})).join(""));return JSON.parse(a).sub}static async getAndStoreUser(){if(await isNavigatorOffline())return;const{data:t,error:e}=await this.getUser();if(t){const{email:e,id:a,activeWorkspace:s,settings:i,profilePicture:r,status:o}=t;if(await localStorage.setItem("user",t),await localStorage.setItem("userEmail",e),await localStorage.setItem("userId",a),await localStorage.setItem("userStatus",o),await localStorage.setItem("activeWorkspaceId",s),await localStorage.setItem("userSettings",JSON.stringify(i)),await localStorage.setItem("profilePicture",r),i.lang){const t=i.lang.toLowerCase();await localStorage.setItem("lang",t)}UserWorkspaceStorage.getSetWorkspaceSettings(i.projectPickerTaskFilter),UserService.getSetUserRoles()}}static async getUserRoles(){const t=`${await this.apiEndpoint}/workspaces/${await this.workspaceId}/users/${await this.userId}/roles`;return await this.apiCall(t)}static async getMemberProfile(t,e){const a=`${await this.apiEndpoint}/workspaces/${t}/member-profile/${e}`;return this.apiCall(a)}static async getSetUserRoles(){const{data:t,error:e,status:a}=await UserService.getUserRoles();if(t){const{userRoles:e}=t;aBrowser.storage.local.set({userRoles:e})}}static async getBoot(){const t=await localStorage.getItem("permanent_homeUrl");return await this.apiCall(`${t}/web/boot`)}static async setDefaultWorkspace(t){const e=await this.userId,a=`${await this.apiEndpoint}/users/${e}/defaultWorkspace/${t}`;return await this.apiCall(a,"POST","")}static async resendVerificationEmail(){const t=await this.apiEndpoint,e=await this.userEmail,a=await this.user,s=`${t}/auth/email-verification/resend/${e||a.email}`;return await this.apiCall(s,"PUT",{})}static async checkInternetConnection(){const t=`${await this.apiEndpoint}/health`;return await this.apiCall(t)}static async sendEmailVerification(){const t=await this.apiEndpoint,e=await this.userId;return this.apiCall(`${t}/auth/resendVerifyEmail/${e}`,"PUT")}static async subscribeToNewsletter(){const t=await this.apiEndpoint,e=await this.userId;await this.getAndStoreUser();const a=await localStorage.getItem("user"),s="string"==typeof a?JSON.parse(a):a,{name:i,settings:r,profilePicture:o}=s;s.settings.sendNewsletter=!0,await localStorage.setItem("user",JSON.stringify(s)),await localStorage.setItem("userSettings",JSON.stringify(s.settings));const n={name:i,profilePicture:o,settings:r};return this.apiCall(`${t}/users/${e}/settings`,"PUT",n)}static async removeDeclinedUserFromWorkspace(t){const e=`${await this.apiEndpoint}/invitations/workspaces/${await this.workspaceId}/users/${await this.userId}`,a=t;return this.apiCall(e,"PUT",a)}static async changeWorkspaceStatus(t){const e=`${await this.apiEndpoint}/invitations/workspaces/${(await localStorage.getItem("user")).defaultWorkspace}/users/${await this.userId}/status`,a=t;return this.apiCall(e,"PUT",a)}static async setDefaultUserWorkspace({targetWorkspaceId:t}){const e=`${await this.apiEndpoint}/users/${await this.userId}/defaultWorkspace/${t}`;return this.apiCall(e,"POST")}static async changeTimezone({newTimezone:t}){const e=await this.apiEndpoint,a=await this.userId;await this.getAndStoreUser();const s=await localStorage.getItem("user"),i="string"==typeof s?JSON.parse(s):s,{name:r,settings:o,profilePicture:n}=i;i.settings.timeZone=t,await localStorage.setItem("user",JSON.stringify(i)),await localStorage.setItem("userSettings",JSON.stringify(i.settings));const c={name:r,profilePicture:n,settings:o};return this.apiCall(`${e}/users/${a}/settings`,"PUT",c)}}